
STM32F429I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001ac  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00027630  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003a8c  080277e0  080277e0  000377e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 0000603c  0802b26c  0802b26c  0003b26c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 00000228  080312a8  080312a8  000412a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 TextFlashSection 00000080  080314d0  080314d0  000414d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 ExtFlashSection 001014d8  08031550  08031550  00041550  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  08132a28  08132a28  001502d4  2**0
                  CONTENTS
  8 .ARM          00000008  08132a28  08132a28  00142a28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08132a30  08132a30  001502d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000014  08132a30  08132a30  00142a30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 11 .fini_array   00000008  08132a44  08132a44  00142a44  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 12 .data         000002d4  20000000  08132a4c  00150000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 .bss          00013730  200002d4  08132d20  001502d4  2**2
                  ALLOC
 14 ._user_heap_stack 00001404  20013a04  08132d20  00153a04  2**0
                  ALLOC
 15 .ARM.attributes 00000030  00000000  00000000  001502d4  2**0
                  CONTENTS, READONLY
 16 TouchGFX_Framebuffer 00070800  d0000000  d0000000  00160000  2**2
                  ALLOC
 17 .debug_line   0005b02b  00000000  00000000  00150304  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_info   000ff8a6  00000000  00000000  001ab32f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 00019d1e  00000000  00000000  002aabd5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 000033a0  00000000  00000000  002c48f8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_str    0011932a  00000000  00000000  002c7c98  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 000063d8  00000000  00000000  003e0fc8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_loc    0002e2e1  00000000  00000000  003e73a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_macro  000359c2  00000000  00000000  00415681  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000cf  00000000  00000000  0044b043  2**0
                  CONTENTS, READONLY
 26 .debug_frame  0000a778  00000000  00000000  0044b114  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001b0 <__do_global_dtors_aux>:
 80001b0:	b510      	push	{r4, lr}
 80001b2:	4c05      	ldr	r4, [pc, #20]	; (80001c8 <__do_global_dtors_aux+0x18>)
 80001b4:	7823      	ldrb	r3, [r4, #0]
 80001b6:	b933      	cbnz	r3, 80001c6 <__do_global_dtors_aux+0x16>
 80001b8:	4b04      	ldr	r3, [pc, #16]	; (80001cc <__do_global_dtors_aux+0x1c>)
 80001ba:	b113      	cbz	r3, 80001c2 <__do_global_dtors_aux+0x12>
 80001bc:	4804      	ldr	r0, [pc, #16]	; (80001d0 <__do_global_dtors_aux+0x20>)
 80001be:	f3af 8000 	nop.w
 80001c2:	2301      	movs	r3, #1
 80001c4:	7023      	strb	r3, [r4, #0]
 80001c6:	bd10      	pop	{r4, pc}
 80001c8:	200002d4 	.word	0x200002d4
 80001cc:	00000000 	.word	0x00000000
 80001d0:	080277c8 	.word	0x080277c8

080001d4 <frame_dummy>:
 80001d4:	b508      	push	{r3, lr}
 80001d6:	4b03      	ldr	r3, [pc, #12]	; (80001e4 <frame_dummy+0x10>)
 80001d8:	b11b      	cbz	r3, 80001e2 <frame_dummy+0xe>
 80001da:	4903      	ldr	r1, [pc, #12]	; (80001e8 <frame_dummy+0x14>)
 80001dc:	4803      	ldr	r0, [pc, #12]	; (80001ec <frame_dummy+0x18>)
 80001de:	f3af 8000 	nop.w
 80001e2:	bd08      	pop	{r3, pc}
 80001e4:	00000000 	.word	0x00000000
 80001e8:	200002d8 	.word	0x200002d8
 80001ec:	080277c8 	.word	0x080277c8

080001f0 <strlen>:
 80001f0:	4603      	mov	r3, r0
 80001f2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001f6:	2a00      	cmp	r2, #0
 80001f8:	d1fb      	bne.n	80001f2 <strlen+0x2>
 80001fa:	1a18      	subs	r0, r3, r0
 80001fc:	3801      	subs	r0, #1
 80001fe:	4770      	bx	lr

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_dcmpun>:
 8000b4c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x10>
 8000b56:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b5a:	d10a      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b60:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b64:	d102      	bne.n	8000b6c <__aeabi_dcmpun+0x20>
 8000b66:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b6a:	d102      	bne.n	8000b72 <__aeabi_dcmpun+0x26>
 8000b6c:	f04f 0000 	mov.w	r0, #0
 8000b70:	4770      	bx	lr
 8000b72:	f04f 0001 	mov.w	r0, #1
 8000b76:	4770      	bx	lr

08000b78 <__aeabi_d2iz>:
 8000b78:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b7c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b80:	d215      	bcs.n	8000bae <__aeabi_d2iz+0x36>
 8000b82:	d511      	bpl.n	8000ba8 <__aeabi_d2iz+0x30>
 8000b84:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b88:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b8c:	d912      	bls.n	8000bb4 <__aeabi_d2iz+0x3c>
 8000b8e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b92:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b96:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b9a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b9e:	fa23 f002 	lsr.w	r0, r3, r2
 8000ba2:	bf18      	it	ne
 8000ba4:	4240      	negne	r0, r0
 8000ba6:	4770      	bx	lr
 8000ba8:	f04f 0000 	mov.w	r0, #0
 8000bac:	4770      	bx	lr
 8000bae:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bb2:	d105      	bne.n	8000bc0 <__aeabi_d2iz+0x48>
 8000bb4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000bb8:	bf08      	it	eq
 8000bba:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bbe:	4770      	bx	lr
 8000bc0:	f04f 0000 	mov.w	r0, #0
 8000bc4:	4770      	bx	lr
 8000bc6:	bf00      	nop

08000bc8 <__aeabi_d2uiz>:
 8000bc8:	004a      	lsls	r2, r1, #1
 8000bca:	d211      	bcs.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bcc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bd0:	d211      	bcs.n	8000bf6 <__aeabi_d2uiz+0x2e>
 8000bd2:	d50d      	bpl.n	8000bf0 <__aeabi_d2uiz+0x28>
 8000bd4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bd8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bdc:	d40e      	bmi.n	8000bfc <__aeabi_d2uiz+0x34>
 8000bde:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000be2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000be6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bea:	fa23 f002 	lsr.w	r0, r3, r2
 8000bee:	4770      	bx	lr
 8000bf0:	f04f 0000 	mov.w	r0, #0
 8000bf4:	4770      	bx	lr
 8000bf6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bfa:	d102      	bne.n	8000c02 <__aeabi_d2uiz+0x3a>
 8000bfc:	f04f 30ff 	mov.w	r0, #4294967295
 8000c00:	4770      	bx	lr
 8000c02:	f04f 0000 	mov.w	r0, #0
 8000c06:	4770      	bx	lr

08000c08 <__aeabi_d2f>:
 8000c08:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000c0c:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c10:	bf24      	itt	cs
 8000c12:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c16:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c1a:	d90d      	bls.n	8000c38 <__aeabi_d2f+0x30>
 8000c1c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c20:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c24:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c28:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c2c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c30:	bf08      	it	eq
 8000c32:	f020 0001 	biceq.w	r0, r0, #1
 8000c36:	4770      	bx	lr
 8000c38:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c3c:	d121      	bne.n	8000c82 <__aeabi_d2f+0x7a>
 8000c3e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c42:	bfbc      	itt	lt
 8000c44:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c48:	4770      	bxlt	lr
 8000c4a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c4e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c52:	f1c2 0218 	rsb	r2, r2, #24
 8000c56:	f1c2 0c20 	rsb	ip, r2, #32
 8000c5a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c5e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c62:	bf18      	it	ne
 8000c64:	f040 0001 	orrne.w	r0, r0, #1
 8000c68:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c6c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c70:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c74:	ea40 000c 	orr.w	r0, r0, ip
 8000c78:	fa23 f302 	lsr.w	r3, r3, r2
 8000c7c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c80:	e7cc      	b.n	8000c1c <__aeabi_d2f+0x14>
 8000c82:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c86:	d107      	bne.n	8000c98 <__aeabi_d2f+0x90>
 8000c88:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c8c:	bf1e      	ittt	ne
 8000c8e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c92:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c96:	4770      	bxne	lr
 8000c98:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c9c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000ca0:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000ca4:	4770      	bx	lr
 8000ca6:	bf00      	nop

08000ca8 <__aeabi_uldivmod>:
 8000ca8:	b953      	cbnz	r3, 8000cc0 <__aeabi_uldivmod+0x18>
 8000caa:	b94a      	cbnz	r2, 8000cc0 <__aeabi_uldivmod+0x18>
 8000cac:	2900      	cmp	r1, #0
 8000cae:	bf08      	it	eq
 8000cb0:	2800      	cmpeq	r0, #0
 8000cb2:	bf1c      	itt	ne
 8000cb4:	f04f 31ff 	movne.w	r1, #4294967295
 8000cb8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cbc:	f000 b9aa 	b.w	8001014 <__aeabi_idiv0>
 8000cc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cc8:	f000 f83c 	bl	8000d44 <__udivmoddi4>
 8000ccc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cd4:	b004      	add	sp, #16
 8000cd6:	4770      	bx	lr

08000cd8 <__aeabi_d2lz>:
 8000cd8:	b538      	push	{r3, r4, r5, lr}
 8000cda:	2200      	movs	r2, #0
 8000cdc:	2300      	movs	r3, #0
 8000cde:	4604      	mov	r4, r0
 8000ce0:	460d      	mov	r5, r1
 8000ce2:	f7ff ff0b 	bl	8000afc <__aeabi_dcmplt>
 8000ce6:	b928      	cbnz	r0, 8000cf4 <__aeabi_d2lz+0x1c>
 8000ce8:	4620      	mov	r0, r4
 8000cea:	4629      	mov	r1, r5
 8000cec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000cf0:	f000 b80a 	b.w	8000d08 <__aeabi_d2ulz>
 8000cf4:	4620      	mov	r0, r4
 8000cf6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cfa:	f000 f805 	bl	8000d08 <__aeabi_d2ulz>
 8000cfe:	4240      	negs	r0, r0
 8000d00:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000d04:	bd38      	pop	{r3, r4, r5, pc}
 8000d06:	bf00      	nop

08000d08 <__aeabi_d2ulz>:
 8000d08:	b5d0      	push	{r4, r6, r7, lr}
 8000d0a:	4b0c      	ldr	r3, [pc, #48]	; (8000d3c <__aeabi_d2ulz+0x34>)
 8000d0c:	2200      	movs	r2, #0
 8000d0e:	4606      	mov	r6, r0
 8000d10:	460f      	mov	r7, r1
 8000d12:	f7ff fc81 	bl	8000618 <__aeabi_dmul>
 8000d16:	f7ff ff57 	bl	8000bc8 <__aeabi_d2uiz>
 8000d1a:	4604      	mov	r4, r0
 8000d1c:	f7ff fc02 	bl	8000524 <__aeabi_ui2d>
 8000d20:	4b07      	ldr	r3, [pc, #28]	; (8000d40 <__aeabi_d2ulz+0x38>)
 8000d22:	2200      	movs	r2, #0
 8000d24:	f7ff fc78 	bl	8000618 <__aeabi_dmul>
 8000d28:	4602      	mov	r2, r0
 8000d2a:	460b      	mov	r3, r1
 8000d2c:	4630      	mov	r0, r6
 8000d2e:	4639      	mov	r1, r7
 8000d30:	f7ff faba 	bl	80002a8 <__aeabi_dsub>
 8000d34:	f7ff ff48 	bl	8000bc8 <__aeabi_d2uiz>
 8000d38:	4621      	mov	r1, r4
 8000d3a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d3c:	3df00000 	.word	0x3df00000
 8000d40:	41f00000 	.word	0x41f00000

08000d44 <__udivmoddi4>:
 8000d44:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d48:	9d08      	ldr	r5, [sp, #32]
 8000d4a:	4604      	mov	r4, r0
 8000d4c:	468e      	mov	lr, r1
 8000d4e:	2b00      	cmp	r3, #0
 8000d50:	d14d      	bne.n	8000dee <__udivmoddi4+0xaa>
 8000d52:	428a      	cmp	r2, r1
 8000d54:	4694      	mov	ip, r2
 8000d56:	d969      	bls.n	8000e2c <__udivmoddi4+0xe8>
 8000d58:	fab2 f282 	clz	r2, r2
 8000d5c:	b152      	cbz	r2, 8000d74 <__udivmoddi4+0x30>
 8000d5e:	fa01 f302 	lsl.w	r3, r1, r2
 8000d62:	f1c2 0120 	rsb	r1, r2, #32
 8000d66:	fa20 f101 	lsr.w	r1, r0, r1
 8000d6a:	fa0c fc02 	lsl.w	ip, ip, r2
 8000d6e:	ea41 0e03 	orr.w	lr, r1, r3
 8000d72:	4094      	lsls	r4, r2
 8000d74:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d78:	0c21      	lsrs	r1, r4, #16
 8000d7a:	fbbe f6f8 	udiv	r6, lr, r8
 8000d7e:	fa1f f78c 	uxth.w	r7, ip
 8000d82:	fb08 e316 	mls	r3, r8, r6, lr
 8000d86:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000d8a:	fb06 f107 	mul.w	r1, r6, r7
 8000d8e:	4299      	cmp	r1, r3
 8000d90:	d90a      	bls.n	8000da8 <__udivmoddi4+0x64>
 8000d92:	eb1c 0303 	adds.w	r3, ip, r3
 8000d96:	f106 30ff 	add.w	r0, r6, #4294967295
 8000d9a:	f080 811f 	bcs.w	8000fdc <__udivmoddi4+0x298>
 8000d9e:	4299      	cmp	r1, r3
 8000da0:	f240 811c 	bls.w	8000fdc <__udivmoddi4+0x298>
 8000da4:	3e02      	subs	r6, #2
 8000da6:	4463      	add	r3, ip
 8000da8:	1a5b      	subs	r3, r3, r1
 8000daa:	b2a4      	uxth	r4, r4
 8000dac:	fbb3 f0f8 	udiv	r0, r3, r8
 8000db0:	fb08 3310 	mls	r3, r8, r0, r3
 8000db4:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000db8:	fb00 f707 	mul.w	r7, r0, r7
 8000dbc:	42a7      	cmp	r7, r4
 8000dbe:	d90a      	bls.n	8000dd6 <__udivmoddi4+0x92>
 8000dc0:	eb1c 0404 	adds.w	r4, ip, r4
 8000dc4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000dc8:	f080 810a 	bcs.w	8000fe0 <__udivmoddi4+0x29c>
 8000dcc:	42a7      	cmp	r7, r4
 8000dce:	f240 8107 	bls.w	8000fe0 <__udivmoddi4+0x29c>
 8000dd2:	4464      	add	r4, ip
 8000dd4:	3802      	subs	r0, #2
 8000dd6:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000dda:	1be4      	subs	r4, r4, r7
 8000ddc:	2600      	movs	r6, #0
 8000dde:	b11d      	cbz	r5, 8000de8 <__udivmoddi4+0xa4>
 8000de0:	40d4      	lsrs	r4, r2
 8000de2:	2300      	movs	r3, #0
 8000de4:	e9c5 4300 	strd	r4, r3, [r5]
 8000de8:	4631      	mov	r1, r6
 8000dea:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dee:	428b      	cmp	r3, r1
 8000df0:	d909      	bls.n	8000e06 <__udivmoddi4+0xc2>
 8000df2:	2d00      	cmp	r5, #0
 8000df4:	f000 80ef 	beq.w	8000fd6 <__udivmoddi4+0x292>
 8000df8:	2600      	movs	r6, #0
 8000dfa:	e9c5 0100 	strd	r0, r1, [r5]
 8000dfe:	4630      	mov	r0, r6
 8000e00:	4631      	mov	r1, r6
 8000e02:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000e06:	fab3 f683 	clz	r6, r3
 8000e0a:	2e00      	cmp	r6, #0
 8000e0c:	d14a      	bne.n	8000ea4 <__udivmoddi4+0x160>
 8000e0e:	428b      	cmp	r3, r1
 8000e10:	d302      	bcc.n	8000e18 <__udivmoddi4+0xd4>
 8000e12:	4282      	cmp	r2, r0
 8000e14:	f200 80f9 	bhi.w	800100a <__udivmoddi4+0x2c6>
 8000e18:	1a84      	subs	r4, r0, r2
 8000e1a:	eb61 0303 	sbc.w	r3, r1, r3
 8000e1e:	2001      	movs	r0, #1
 8000e20:	469e      	mov	lr, r3
 8000e22:	2d00      	cmp	r5, #0
 8000e24:	d0e0      	beq.n	8000de8 <__udivmoddi4+0xa4>
 8000e26:	e9c5 4e00 	strd	r4, lr, [r5]
 8000e2a:	e7dd      	b.n	8000de8 <__udivmoddi4+0xa4>
 8000e2c:	b902      	cbnz	r2, 8000e30 <__udivmoddi4+0xec>
 8000e2e:	deff      	udf	#255	; 0xff
 8000e30:	fab2 f282 	clz	r2, r2
 8000e34:	2a00      	cmp	r2, #0
 8000e36:	f040 8092 	bne.w	8000f5e <__udivmoddi4+0x21a>
 8000e3a:	eba1 010c 	sub.w	r1, r1, ip
 8000e3e:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e42:	fa1f fe8c 	uxth.w	lr, ip
 8000e46:	2601      	movs	r6, #1
 8000e48:	0c20      	lsrs	r0, r4, #16
 8000e4a:	fbb1 f3f7 	udiv	r3, r1, r7
 8000e4e:	fb07 1113 	mls	r1, r7, r3, r1
 8000e52:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000e56:	fb0e f003 	mul.w	r0, lr, r3
 8000e5a:	4288      	cmp	r0, r1
 8000e5c:	d908      	bls.n	8000e70 <__udivmoddi4+0x12c>
 8000e5e:	eb1c 0101 	adds.w	r1, ip, r1
 8000e62:	f103 38ff 	add.w	r8, r3, #4294967295
 8000e66:	d202      	bcs.n	8000e6e <__udivmoddi4+0x12a>
 8000e68:	4288      	cmp	r0, r1
 8000e6a:	f200 80cb 	bhi.w	8001004 <__udivmoddi4+0x2c0>
 8000e6e:	4643      	mov	r3, r8
 8000e70:	1a09      	subs	r1, r1, r0
 8000e72:	b2a4      	uxth	r4, r4
 8000e74:	fbb1 f0f7 	udiv	r0, r1, r7
 8000e78:	fb07 1110 	mls	r1, r7, r0, r1
 8000e7c:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000e80:	fb0e fe00 	mul.w	lr, lr, r0
 8000e84:	45a6      	cmp	lr, r4
 8000e86:	d908      	bls.n	8000e9a <__udivmoddi4+0x156>
 8000e88:	eb1c 0404 	adds.w	r4, ip, r4
 8000e8c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000e90:	d202      	bcs.n	8000e98 <__udivmoddi4+0x154>
 8000e92:	45a6      	cmp	lr, r4
 8000e94:	f200 80bb 	bhi.w	800100e <__udivmoddi4+0x2ca>
 8000e98:	4608      	mov	r0, r1
 8000e9a:	eba4 040e 	sub.w	r4, r4, lr
 8000e9e:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000ea2:	e79c      	b.n	8000dde <__udivmoddi4+0x9a>
 8000ea4:	f1c6 0720 	rsb	r7, r6, #32
 8000ea8:	40b3      	lsls	r3, r6
 8000eaa:	fa22 fc07 	lsr.w	ip, r2, r7
 8000eae:	ea4c 0c03 	orr.w	ip, ip, r3
 8000eb2:	fa20 f407 	lsr.w	r4, r0, r7
 8000eb6:	fa01 f306 	lsl.w	r3, r1, r6
 8000eba:	431c      	orrs	r4, r3
 8000ebc:	40f9      	lsrs	r1, r7
 8000ebe:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000ec2:	fa00 f306 	lsl.w	r3, r0, r6
 8000ec6:	fbb1 f8f9 	udiv	r8, r1, r9
 8000eca:	0c20      	lsrs	r0, r4, #16
 8000ecc:	fa1f fe8c 	uxth.w	lr, ip
 8000ed0:	fb09 1118 	mls	r1, r9, r8, r1
 8000ed4:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000ed8:	fb08 f00e 	mul.w	r0, r8, lr
 8000edc:	4288      	cmp	r0, r1
 8000ede:	fa02 f206 	lsl.w	r2, r2, r6
 8000ee2:	d90b      	bls.n	8000efc <__udivmoddi4+0x1b8>
 8000ee4:	eb1c 0101 	adds.w	r1, ip, r1
 8000ee8:	f108 3aff 	add.w	sl, r8, #4294967295
 8000eec:	f080 8088 	bcs.w	8001000 <__udivmoddi4+0x2bc>
 8000ef0:	4288      	cmp	r0, r1
 8000ef2:	f240 8085 	bls.w	8001000 <__udivmoddi4+0x2bc>
 8000ef6:	f1a8 0802 	sub.w	r8, r8, #2
 8000efa:	4461      	add	r1, ip
 8000efc:	1a09      	subs	r1, r1, r0
 8000efe:	b2a4      	uxth	r4, r4
 8000f00:	fbb1 f0f9 	udiv	r0, r1, r9
 8000f04:	fb09 1110 	mls	r1, r9, r0, r1
 8000f08:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000f0c:	fb00 fe0e 	mul.w	lr, r0, lr
 8000f10:	458e      	cmp	lr, r1
 8000f12:	d908      	bls.n	8000f26 <__udivmoddi4+0x1e2>
 8000f14:	eb1c 0101 	adds.w	r1, ip, r1
 8000f18:	f100 34ff 	add.w	r4, r0, #4294967295
 8000f1c:	d26c      	bcs.n	8000ff8 <__udivmoddi4+0x2b4>
 8000f1e:	458e      	cmp	lr, r1
 8000f20:	d96a      	bls.n	8000ff8 <__udivmoddi4+0x2b4>
 8000f22:	3802      	subs	r0, #2
 8000f24:	4461      	add	r1, ip
 8000f26:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000f2a:	fba0 9402 	umull	r9, r4, r0, r2
 8000f2e:	eba1 010e 	sub.w	r1, r1, lr
 8000f32:	42a1      	cmp	r1, r4
 8000f34:	46c8      	mov	r8, r9
 8000f36:	46a6      	mov	lr, r4
 8000f38:	d356      	bcc.n	8000fe8 <__udivmoddi4+0x2a4>
 8000f3a:	d053      	beq.n	8000fe4 <__udivmoddi4+0x2a0>
 8000f3c:	b15d      	cbz	r5, 8000f56 <__udivmoddi4+0x212>
 8000f3e:	ebb3 0208 	subs.w	r2, r3, r8
 8000f42:	eb61 010e 	sbc.w	r1, r1, lr
 8000f46:	fa01 f707 	lsl.w	r7, r1, r7
 8000f4a:	fa22 f306 	lsr.w	r3, r2, r6
 8000f4e:	40f1      	lsrs	r1, r6
 8000f50:	431f      	orrs	r7, r3
 8000f52:	e9c5 7100 	strd	r7, r1, [r5]
 8000f56:	2600      	movs	r6, #0
 8000f58:	4631      	mov	r1, r6
 8000f5a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f5e:	f1c2 0320 	rsb	r3, r2, #32
 8000f62:	40d8      	lsrs	r0, r3
 8000f64:	fa0c fc02 	lsl.w	ip, ip, r2
 8000f68:	fa21 f303 	lsr.w	r3, r1, r3
 8000f6c:	4091      	lsls	r1, r2
 8000f6e:	4301      	orrs	r1, r0
 8000f70:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f74:	fa1f fe8c 	uxth.w	lr, ip
 8000f78:	fbb3 f0f7 	udiv	r0, r3, r7
 8000f7c:	fb07 3610 	mls	r6, r7, r0, r3
 8000f80:	0c0b      	lsrs	r3, r1, #16
 8000f82:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000f86:	fb00 f60e 	mul.w	r6, r0, lr
 8000f8a:	429e      	cmp	r6, r3
 8000f8c:	fa04 f402 	lsl.w	r4, r4, r2
 8000f90:	d908      	bls.n	8000fa4 <__udivmoddi4+0x260>
 8000f92:	eb1c 0303 	adds.w	r3, ip, r3
 8000f96:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f9a:	d22f      	bcs.n	8000ffc <__udivmoddi4+0x2b8>
 8000f9c:	429e      	cmp	r6, r3
 8000f9e:	d92d      	bls.n	8000ffc <__udivmoddi4+0x2b8>
 8000fa0:	3802      	subs	r0, #2
 8000fa2:	4463      	add	r3, ip
 8000fa4:	1b9b      	subs	r3, r3, r6
 8000fa6:	b289      	uxth	r1, r1
 8000fa8:	fbb3 f6f7 	udiv	r6, r3, r7
 8000fac:	fb07 3316 	mls	r3, r7, r6, r3
 8000fb0:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000fb4:	fb06 f30e 	mul.w	r3, r6, lr
 8000fb8:	428b      	cmp	r3, r1
 8000fba:	d908      	bls.n	8000fce <__udivmoddi4+0x28a>
 8000fbc:	eb1c 0101 	adds.w	r1, ip, r1
 8000fc0:	f106 38ff 	add.w	r8, r6, #4294967295
 8000fc4:	d216      	bcs.n	8000ff4 <__udivmoddi4+0x2b0>
 8000fc6:	428b      	cmp	r3, r1
 8000fc8:	d914      	bls.n	8000ff4 <__udivmoddi4+0x2b0>
 8000fca:	3e02      	subs	r6, #2
 8000fcc:	4461      	add	r1, ip
 8000fce:	1ac9      	subs	r1, r1, r3
 8000fd0:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000fd4:	e738      	b.n	8000e48 <__udivmoddi4+0x104>
 8000fd6:	462e      	mov	r6, r5
 8000fd8:	4628      	mov	r0, r5
 8000fda:	e705      	b.n	8000de8 <__udivmoddi4+0xa4>
 8000fdc:	4606      	mov	r6, r0
 8000fde:	e6e3      	b.n	8000da8 <__udivmoddi4+0x64>
 8000fe0:	4618      	mov	r0, r3
 8000fe2:	e6f8      	b.n	8000dd6 <__udivmoddi4+0x92>
 8000fe4:	454b      	cmp	r3, r9
 8000fe6:	d2a9      	bcs.n	8000f3c <__udivmoddi4+0x1f8>
 8000fe8:	ebb9 0802 	subs.w	r8, r9, r2
 8000fec:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000ff0:	3801      	subs	r0, #1
 8000ff2:	e7a3      	b.n	8000f3c <__udivmoddi4+0x1f8>
 8000ff4:	4646      	mov	r6, r8
 8000ff6:	e7ea      	b.n	8000fce <__udivmoddi4+0x28a>
 8000ff8:	4620      	mov	r0, r4
 8000ffa:	e794      	b.n	8000f26 <__udivmoddi4+0x1e2>
 8000ffc:	4640      	mov	r0, r8
 8000ffe:	e7d1      	b.n	8000fa4 <__udivmoddi4+0x260>
 8001000:	46d0      	mov	r8, sl
 8001002:	e77b      	b.n	8000efc <__udivmoddi4+0x1b8>
 8001004:	3b02      	subs	r3, #2
 8001006:	4461      	add	r1, ip
 8001008:	e732      	b.n	8000e70 <__udivmoddi4+0x12c>
 800100a:	4630      	mov	r0, r6
 800100c:	e709      	b.n	8000e22 <__udivmoddi4+0xde>
 800100e:	4464      	add	r4, ip
 8001010:	3802      	subs	r0, #2
 8001012:	e742      	b.n	8000e9a <__udivmoddi4+0x156>

08001014 <__aeabi_idiv0>:
 8001014:	4770      	bx	lr
 8001016:	bf00      	nop

08001018 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler: 
  ldr   sp, =_estack       /* set stack pointer */
 8001018:	f8df d034 	ldr.w	sp, [pc, #52]	; 8001050 <LoopFillZerobss+0x14>
 
/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800101c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800101e:	e003      	b.n	8001028 <LoopCopyDataInit>

08001020 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8001020:	4b0c      	ldr	r3, [pc, #48]	; (8001054 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8001022:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8001024:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8001026:	3104      	adds	r1, #4

08001028 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8001028:	480b      	ldr	r0, [pc, #44]	; (8001058 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 800102a:	4b0c      	ldr	r3, [pc, #48]	; (800105c <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 800102c:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 800102e:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8001030:	d3f6      	bcc.n	8001020 <CopyDataInit>
  ldr  r2, =_sbss
 8001032:	4a0b      	ldr	r2, [pc, #44]	; (8001060 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8001034:	e002      	b.n	800103c <LoopFillZerobss>

08001036 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8001036:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8001038:	f842 3b04 	str.w	r3, [r2], #4

0800103c <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 800103c:	4b09      	ldr	r3, [pc, #36]	; (8001064 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 800103e:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8001040:	d3f9      	bcc.n	8001036 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8001042:	f005 f869 	bl	8006118 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8001046:	f021 fe05 	bl	8022c54 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800104a:	f001 f9eb 	bl	8002424 <main>
  bx  lr    
 800104e:	4770      	bx	lr
  ldr   sp, =_estack       /* set stack pointer */
 8001050:	20030000 	.word	0x20030000
  ldr  r3, =_sidata
 8001054:	08132a4c 	.word	0x08132a4c
  ldr  r0, =_sdata
 8001058:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800105c:	200002d4 	.word	0x200002d4
  ldr  r2, =_sbss
 8001060:	200002d4 	.word	0x200002d4
  ldr  r3, = _ebss
 8001064:	20013a04 	.word	0x20013a04

08001068 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8001068:	e7fe      	b.n	8001068 <ADC_IRQHandler>

0800106a <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 800106a:	4770      	bx	lr

0800106c <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 800106c:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 800106e:	f000 fd6b 	bl	8001b48 <touchgfx_components_init>
  touchgfx_init();
}
 8001072:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8001076:	f000 bcf3 	b.w	8001a60 <touchgfx_init>

0800107a <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 800107a:	f000 bd67 	b.w	8001b4c <touchgfx_taskEntry>

0800107e <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800107e:	4770      	bx	lr

08001080 <_ZN20STM32TouchControllerD0Ev>:
 8001080:	b510      	push	{r4, lr}
 8001082:	2104      	movs	r1, #4
 8001084:	4604      	mov	r4, r0
 8001086:	f020 ff88 	bl	8021f9a <_ZdlPvj>
 800108a:	4620      	mov	r0, r4
 800108c:	bd10      	pop	{r4, pc}
	...

08001090 <_Z11BSP_TS_Inittt>:
  * @param  XSize: The maximum X size of the TS area on LCD
  * @param  YSize: The maximum Y size of the TS area on LCD
  * @retval TS_OK: if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t XSize, uint16_t YSize)
{
 8001090:	b538      	push	{r3, r4, r5, lr}
    uint8_t ret = TS_ERROR;

    /* Initialize x and y positions boundaries */
    TsXBoundary = XSize;
 8001092:	4b0c      	ldr	r3, [pc, #48]	; (80010c4 <_Z11BSP_TS_Inittt+0x34>)
    TsYBoundary = YSize;

    /* Read ID and verify if the IO expander is ready */
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 8001094:	4c0c      	ldr	r4, [pc, #48]	; (80010c8 <_Z11BSP_TS_Inittt+0x38>)
    TsXBoundary = XSize;
 8001096:	8018      	strh	r0, [r3, #0]
    TsYBoundary = YSize;
 8001098:	4b0c      	ldr	r3, [pc, #48]	; (80010cc <_Z11BSP_TS_Inittt+0x3c>)
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800109a:	2082      	movs	r0, #130	; 0x82
    TsYBoundary = YSize;
 800109c:	8019      	strh	r1, [r3, #0]
    if (stmpe811_ts_drv.ReadID(TS_I2C_ADDRESS) == STMPE811_ID)
 800109e:	6863      	ldr	r3, [r4, #4]
 80010a0:	4798      	blx	r3
 80010a2:	f640 0311 	movw	r3, #2065	; 0x811
 80010a6:	4298      	cmp	r0, r3
 80010a8:	d10a      	bne.n	80010c0 <_Z11BSP_TS_Inittt+0x30>
    {
        /* Initialize the TS driver structure */
        TsDrv = &stmpe811_ts_drv;
 80010aa:	4d09      	ldr	r5, [pc, #36]	; (80010d0 <_Z11BSP_TS_Inittt+0x40>)
    }

    if (ret == TS_OK)
    {
        /* Initialize the LL TS Driver */
        TsDrv->Init(TS_I2C_ADDRESS);
 80010ac:	6823      	ldr	r3, [r4, #0]
        TsDrv = &stmpe811_ts_drv;
 80010ae:	602c      	str	r4, [r5, #0]
        TsDrv->Init(TS_I2C_ADDRESS);
 80010b0:	2082      	movs	r0, #130	; 0x82
 80010b2:	4798      	blx	r3
        TsDrv->Start(TS_I2C_ADDRESS);
 80010b4:	682b      	ldr	r3, [r5, #0]
 80010b6:	2082      	movs	r0, #130	; 0x82
 80010b8:	68db      	ldr	r3, [r3, #12]
 80010ba:	4798      	blx	r3
 80010bc:	2000      	movs	r0, #0
    }

    return ret;
}
 80010be:	bd38      	pop	{r3, r4, r5, pc}
    uint8_t ret = TS_ERROR;
 80010c0:	2001      	movs	r0, #1
 80010c2:	e7fc      	b.n	80010be <_Z11BSP_TS_Inittt+0x2e>
 80010c4:	200002f0 	.word	0x200002f0
 80010c8:	2000004c 	.word	0x2000004c
 80010cc:	200002f2 	.word	0x200002f2
 80010d0:	200002f4 	.word	0x200002f4

080010d4 <_ZN20STM32TouchController4initEv>:
    BSP_TS_Init(240, 320);
 80010d4:	f44f 71a0 	mov.w	r1, #320	; 0x140
 80010d8:	20f0      	movs	r0, #240	; 0xf0
 80010da:	f7ff bfd9 	b.w	8001090 <_Z11BSP_TS_Inittt>
	...

080010e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>:
/**
  * @brief  Returns status and positions of the touch screen.
  * @param  TsState: Pointer to touch screen current state structure
  */
void BSP_TS_GetState(TS_StateTypeDef* TsState)
{
 80010e0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    static uint32_t _x = 0, _y = 0;
    uint16_t xDiff, yDiff, x, y, xr, yr;

    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010e2:	4d2d      	ldr	r5, [pc, #180]	; (8001198 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xb8>)
 80010e4:	682b      	ldr	r3, [r5, #0]
{
 80010e6:	4604      	mov	r4, r0
    TsState->TouchDetected = TsDrv->DetectTouch(TS_I2C_ADDRESS);
 80010e8:	691b      	ldr	r3, [r3, #16]
 80010ea:	2082      	movs	r0, #130	; 0x82
 80010ec:	4798      	blx	r3
 80010ee:	b280      	uxth	r0, r0
 80010f0:	8020      	strh	r0, [r4, #0]

    if (TsState->TouchDetected)
 80010f2:	2800      	cmp	r0, #0
 80010f4:	d043      	beq.n	800117e <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x9e>
    {
        TsDrv->GetXY(TS_I2C_ADDRESS, &x, &y);
 80010f6:	682b      	ldr	r3, [r5, #0]
 80010f8:	f10d 0206 	add.w	r2, sp, #6
 80010fc:	695b      	ldr	r3, [r3, #20]
 80010fe:	a901      	add	r1, sp, #4
 8001100:	2082      	movs	r0, #130	; 0x82
 8001102:	4798      	blx	r3

        /* Y value first correction */
        y -= 360;
 8001104:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 8001108:	f5a2 72b4 	sub.w	r2, r2, #360	; 0x168
 800110c:	b292      	uxth	r2, r2

        /* Y value second correction */
        yr = y / 11;

        /* Return y position value */
        if (yr <= 0)
 800110e:	2a0a      	cmp	r2, #10
 8001110:	d937      	bls.n	8001182 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa2>
        yr = y / 11;
 8001112:	230b      	movs	r3, #11
 8001114:	fbb2 f2f3 	udiv	r2, r2, r3
        {
            yr = 0;
        }
        else if (yr > TsYBoundary)
 8001118:	4b20      	ldr	r3, [pc, #128]	; (800119c <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xbc>)
 800111a:	881b      	ldrh	r3, [r3, #0]
 800111c:	429a      	cmp	r2, r3
 800111e:	d901      	bls.n	8001124 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
        {
            yr = TsYBoundary - 1;
 8001120:	3b01      	subs	r3, #1
 8001122:	b29a      	uxth	r2, r3
        else
        {}
        y = yr;

        /* X value first correction */
        if (x <= 3000)
 8001124:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8001128:	f640 31b8 	movw	r1, #3000	; 0xbb8
 800112c:	428b      	cmp	r3, r1
 800112e:	d82a      	bhi.n	8001186 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xa6>
        {
            x = 3870 - x;
 8001130:	f5c3 6371 	rsb	r3, r3, #3856	; 0xf10
 8001134:	330e      	adds	r3, #14
 8001136:	b29b      	uxth	r3, r3
        {
            x = 3800 - x;
        }

        /* X value second correction */
        xr = x / 15;
 8001138:	210f      	movs	r1, #15
 800113a:	fbb3 f3f1 	udiv	r3, r3, r1
        /* Return X position value */
        if (xr <= 0)
        {
            xr = 0;
        }
        else if (xr > TsXBoundary)
 800113e:	4918      	ldr	r1, [pc, #96]	; (80011a0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc0>)
 8001140:	8809      	ldrh	r1, [r1, #0]
 8001142:	428b      	cmp	r3, r1
 8001144:	d901      	bls.n	800114a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
        {
            xr = TsXBoundary - 1;
 8001146:	1e4b      	subs	r3, r1, #1
 8001148:	b29b      	uxth	r3, r3
        }
        else
        {}

        x = xr;
        xDiff = x > _x ? (x - _x) : (_x - x);
 800114a:	4e16      	ldr	r6, [pc, #88]	; (80011a4 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc4>)
        yDiff = y > _y ? (y - _y) : (_y - y);
 800114c:	4d16      	ldr	r5, [pc, #88]	; (80011a8 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0xc8>)
        xDiff = x > _x ? (x - _x) : (_x - x);
 800114e:	6830      	ldr	r0, [r6, #0]
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001150:	682f      	ldr	r7, [r5, #0]
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001152:	4283      	cmp	r3, r0
 8001154:	b281      	uxth	r1, r0
 8001156:	bf8c      	ite	hi
 8001158:	1a59      	subhi	r1, r3, r1
 800115a:	1ac9      	subls	r1, r1, r3
        yDiff = y > _y ? (y - _y) : (_y - y);
 800115c:	b2b8      	uxth	r0, r7
 800115e:	42ba      	cmp	r2, r7
 8001160:	bf8c      	ite	hi
 8001162:	1a10      	subhi	r0, r2, r0
 8001164:	1a80      	subls	r0, r0, r2
        xDiff = x > _x ? (x - _x) : (_x - x);
 8001166:	b289      	uxth	r1, r1
        yDiff = y > _y ? (y - _y) : (_y - y);
 8001168:	b280      	uxth	r0, r0

        if (xDiff + yDiff > 5)
 800116a:	4401      	add	r1, r0
 800116c:	2905      	cmp	r1, #5
        {
            _x = x;
 800116e:	bfc8      	it	gt
 8001170:	6033      	strgt	r3, [r6, #0]
            _y = y;
        }

        /* Update the X position */
        TsState->X = _x;
 8001172:	6833      	ldr	r3, [r6, #0]
            _y = y;
 8001174:	bfc8      	it	gt
 8001176:	602a      	strgt	r2, [r5, #0]
        TsState->X = _x;
 8001178:	8063      	strh	r3, [r4, #2]

        /* Update the Y position */
        TsState->Y = _y;
 800117a:	682b      	ldr	r3, [r5, #0]
 800117c:	80a3      	strh	r3, [r4, #4]
    }
}
 800117e:	b003      	add	sp, #12
 8001180:	bdf0      	pop	{r4, r5, r6, r7, pc}
            yr = 0;
 8001182:	2200      	movs	r2, #0
 8001184:	e7ce      	b.n	8001124 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x44>
            x = 3800 - x;
 8001186:	f5c3 636d 	rsb	r3, r3, #3792	; 0xed0
 800118a:	3308      	adds	r3, #8
 800118c:	b29b      	uxth	r3, r3
        if (xr <= 0)
 800118e:	2b0e      	cmp	r3, #14
 8001190:	d8d2      	bhi.n	8001138 <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x58>
            xr = 0;
 8001192:	2300      	movs	r3, #0
 8001194:	e7d9      	b.n	800114a <_Z15BSP_TS_GetStateP15TS_StateTypeDef+0x6a>
 8001196:	bf00      	nop
 8001198:	200002f4 	.word	0x200002f4
 800119c:	200002f2 	.word	0x200002f2
 80011a0:	200002f0 	.word	0x200002f0
 80011a4:	200002f8 	.word	0x200002f8
 80011a8:	200002fc 	.word	0x200002fc

080011ac <_ZN20STM32TouchController11sampleTouchERlS0_>:
{
 80011ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
    BSP_TS_GetState(&state);
 80011ae:	4668      	mov	r0, sp
{
 80011b0:	460d      	mov	r5, r1
 80011b2:	4614      	mov	r4, r2
    BSP_TS_GetState(&state);
 80011b4:	f7ff ff94 	bl	80010e0 <_Z15BSP_TS_GetStateP15TS_StateTypeDef>
    if (state.TouchDetected)
 80011b8:	f8bd 0000 	ldrh.w	r0, [sp]
 80011bc:	b130      	cbz	r0, 80011cc <_ZN20STM32TouchController11sampleTouchERlS0_+0x20>
        x = state.X;
 80011be:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80011c2:	602b      	str	r3, [r5, #0]
        y = state.Y;
 80011c4:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80011c8:	6023      	str	r3, [r4, #0]
        return true;
 80011ca:	2001      	movs	r0, #1
}
 80011cc:	b003      	add	sp, #12
 80011ce:	bd30      	pop	{r4, r5, pc}

080011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 80011d0:	2803      	cmp	r0, #3
 80011d2:	d821      	bhi.n	8001218 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x48>
 80011d4:	e8df f000 	tbb	[pc, r0]
 80011d8:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 80011dc:	4b0f      	ldr	r3, [pc, #60]	; (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011de:	681a      	ldr	r2, [r3, #0]
 80011e0:	fab2 f282 	clz	r2, r2
 80011e4:	0952      	lsrs	r2, r2, #5
 80011e6:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 80011e8:	480d      	ldr	r0, [pc, #52]	; (8001220 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 80011ea:	f005 ba2d 	b.w	8006648 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 80011ee:	4b0b      	ldr	r3, [pc, #44]	; (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011f0:	685a      	ldr	r2, [r3, #4]
 80011f2:	fab2 f282 	clz	r2, r2
 80011f6:	0952      	lsrs	r2, r2, #5
 80011f8:	2108      	movs	r1, #8
 80011fa:	e7f5      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 80011fc:	4b07      	ldr	r3, [pc, #28]	; (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 80011fe:	689a      	ldr	r2, [r3, #8]
 8001200:	fab2 f282 	clz	r2, r2
 8001204:	0952      	lsrs	r2, r2, #5
 8001206:	2110      	movs	r1, #16
 8001208:	e7ee      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 800120a:	4b04      	ldr	r3, [pc, #16]	; (800121c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>)
 800120c:	68da      	ldr	r2, [r3, #12]
 800120e:	fab2 f282 	clz	r2, r2
 8001212:	0952      	lsrs	r2, r2, #5
 8001214:	2120      	movs	r1, #32
 8001216:	e7e7      	b.n	80011e8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 8001218:	4770      	bx	lr
 800121a:	bf00      	nop
 800121c:	20000300 	.word	0x20000300
 8001220:	40021000 	.word	0x40021000

08001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 8001224:	2803      	cmp	r0, #3
 8001226:	d821      	bhi.n	800126c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x48>
 8001228:	e8df f000 	tbb	[pc, r0]
 800122c:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8001230:	4b0f      	ldr	r3, [pc, #60]	; (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001232:	681a      	ldr	r2, [r3, #0]
 8001234:	3a00      	subs	r2, #0
 8001236:	bf18      	it	ne
 8001238:	2201      	movne	r2, #1
 800123a:	2104      	movs	r1, #4
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800123c:	480d      	ldr	r0, [pc, #52]	; (8001274 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 800123e:	f005 ba03 	b.w	8006648 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 8001242:	4b0b      	ldr	r3, [pc, #44]	; (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001244:	685a      	ldr	r2, [r3, #4]
 8001246:	3a00      	subs	r2, #0
 8001248:	bf18      	it	ne
 800124a:	2201      	movne	r2, #1
 800124c:	2108      	movs	r1, #8
 800124e:	e7f5      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 8001250:	4b07      	ldr	r3, [pc, #28]	; (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001252:	689a      	ldr	r2, [r3, #8]
 8001254:	3a00      	subs	r2, #0
 8001256:	bf18      	it	ne
 8001258:	2201      	movne	r2, #1
 800125a:	2110      	movs	r1, #16
 800125c:	e7ee      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 800125e:	4b04      	ldr	r3, [pc, #16]	; (8001270 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>)
 8001260:	68da      	ldr	r2, [r3, #12]
 8001262:	3a00      	subs	r2, #0
 8001264:	bf18      	it	ne
 8001266:	2201      	movne	r2, #1
 8001268:	2120      	movs	r1, #32
 800126a:	e7e7      	b.n	800123c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
#endif
        break;
    }
}
 800126c:	4770      	bx	lr
 800126e:	bf00      	nop
 8001270:	20000300 	.word	0x20000300
 8001274:	40021000 	.word	0x40021000

08001278 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001278:	2803      	cmp	r0, #3
 800127a:	d80d      	bhi.n	8001298 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x20>
 800127c:	e8df f000 	tbb	[pc, r0]
 8001280:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 8001284:	2104      	movs	r1, #4
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001286:	4805      	ldr	r0, [pc, #20]	; (800129c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>)
 8001288:	f005 b9e3 	b.w	8006652 <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800128c:	2108      	movs	r1, #8
 800128e:	e7fa      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001290:	2110      	movs	r1, #16
 8001292:	e7f8      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001294:	2120      	movs	r1, #32
 8001296:	e7f6      	b.n	8001286 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
#endif
        break;
    }
}
 8001298:	4770      	bx	lr
 800129a:	bf00      	nop
 800129c:	40021000 	.word	0x40021000

080012a0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80012a0:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80012a2:	2803      	cmp	r0, #3
 80012a4:	d811      	bhi.n	80012ca <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2a>
 80012a6:	e8df f000 	tbb	[pc, r0]
 80012aa:	0a02      	.short	0x0a02
 80012ac:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80012ae:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80012b0:	4807      	ldr	r0, [pc, #28]	; (80012d0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x30>)
 80012b2:	f005 f9c3 	bl	800663c <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80012b6:	1e43      	subs	r3, r0, #1
 80012b8:	4258      	negs	r0, r3
 80012ba:	4158      	adcs	r0, r3
 80012bc:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80012be:	2108      	movs	r1, #8
 80012c0:	e7f6      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 80012c2:	2110      	movs	r1, #16
 80012c4:	e7f4      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 80012c6:	2120      	movs	r1, #32
 80012c8:	e7f2      	b.n	80012b0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
    switch (id)
 80012ca:	2000      	movs	r0, #0
 80012cc:	e7f3      	b.n	80012b6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 80012ce:	bf00      	nop
 80012d0:	40021000 	.word	0x40021000

080012d4 <_ZN8touchgfx4GPIO4initEv>:
{
 80012d4:	b570      	push	{r4, r5, r6, lr}
 80012d6:	4d08      	ldr	r5, [pc, #32]	; (80012f8 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 80012d8:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 80012da:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 80012dc:	b2e0      	uxtb	r0, r4
 80012de:	f7ff ffdf 	bl	80012a0 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 80012e2:	b118      	cbz	r0, 80012ec <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 80012e4:	682b      	ldr	r3, [r5, #0]
 80012e6:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 80012e8:	bf18      	it	ne
 80012ea:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 80012ec:	3401      	adds	r4, #1
 80012ee:	2c05      	cmp	r4, #5
 80012f0:	f105 0504 	add.w	r5, r5, #4
 80012f4:	d1f2      	bne.n	80012dc <_ZN8touchgfx4GPIO4initEv+0x8>
}
 80012f6:	bd70      	pop	{r4, r5, r6, pc}
 80012f8:	20000300 	.word	0x20000300

080012fc <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80012fc:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80012fe:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 8001302:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8001306:	4770      	bx	lr

08001308 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 8001308:	2000      	movs	r0, #0
 800130a:	4770      	bx	lr

0800130c <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 800130c:	4b03      	ldr	r3, [pc, #12]	; (800131c <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 800130e:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 8001310:	3900      	subs	r1, #0
 8001312:	bf18      	it	ne
 8001314:	2101      	movne	r1, #1
 8001316:	7019      	strb	r1, [r3, #0]
    }
 8001318:	4770      	bx	lr
 800131a:	bf00      	nop
 800131c:	20013757 	.word	0x20013757

08001320 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8001320:	2000      	movs	r0, #0
 8001322:	4770      	bx	lr

08001324 <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 8001324:	6b83      	ldr	r3, [r0, #56]	; 0x38
 8001326:	b10b      	cbz	r3, 800132c <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8001328:	4608      	mov	r0, r1
 800132a:	4718      	bx	r3
        }
    }
 800132c:	4770      	bx	lr

0800132e <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 800132e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8001332:	4770      	bx	lr

08001334 <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 8001334:	6840      	ldr	r0, [r0, #4]
 8001336:	6803      	ldr	r3, [r0, #0]
 8001338:	699b      	ldr	r3, [r3, #24]
 800133a:	4718      	bx	r3

0800133c <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 800133c:	4770      	bx	lr

0800133e <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 800133e:	4770      	bx	lr

08001340 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8001340:	4770      	bx	lr
	...

08001344 <_ZN11TouchGFXHAL10initializeEv>:

LOCATION_PRAGMA("TouchGFX_Framebuffer")
uint32_t animationStorage[(240 * 320 * 2 + 3) / 4] LOCATION_ATTRIBUTE("TouchGFX_Framebuffer");

void TouchGFXHAL::initialize()
{
 8001344:	b570      	push	{r4, r5, r6, lr}
 8001346:	4604      	mov	r4, r0
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::initialize() must be called to initialize the framework.

    TouchGFXGeneratedHAL::initialize();
 8001348:	f000 fcec 	bl	8001d24 <_ZN20TouchGFXGeneratedHAL10initializeEv>

    // existing frame buffers are re-used. just add animation storage
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 800134c:	6823      	ldr	r3, [r4, #0]
 800134e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001352:	4b04      	ldr	r3, [pc, #16]	; (8001364 <_ZN11TouchGFXHAL10initializeEv+0x20>)
 8001354:	e9d4 120f 	ldrd	r1, r2, [r4, #60]	; 0x3c
 8001358:	4620      	mov	r0, r4
 800135a:	46ac      	mov	ip, r5
}
 800135c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuffer0, (void*)frameBuffer1, (void*)animationStorage);
 8001360:	4760      	bx	ip
 8001362:	bf00      	nop
 8001364:	d0000000 	.word	0xd0000000

08001368 <_ZN11TouchGFXHAL9taskEntryEv>:

void TouchGFXHAL::taskEntry()
{
 8001368:	b508      	push	{r3, lr}
    enableLCDControllerInterrupt();
 800136a:	6803      	ldr	r3, [r0, #0]
{
 800136c:	4604      	mov	r4, r0
    enableLCDControllerInterrupt();
 800136e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001372:	4798      	blx	r3
    enableInterrupts();
 8001374:	6823      	ldr	r3, [r4, #0]
 8001376:	4620      	mov	r0, r4
 8001378:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800137a:	4798      	blx	r3

    OSWrappers::waitForVSync();
 800137c:	f000 f8ec 	bl	8001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001380:	6823      	ldr	r3, [r4, #0]
 8001382:	4620      	mov	r0, r4
 8001384:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001386:	4798      	blx	r3

    LCD_IO_WriteReg(0x29);
 8001388:	2029      	movs	r0, #41	; 0x29
 800138a:	f001 fb1d 	bl	80029c8 <LCD_IO_WriteReg>

    for (;;)
    {
        OSWrappers::waitForVSync();
 800138e:	f000 f8e3 	bl	8001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 8001392:	6823      	ldr	r3, [r4, #0]
 8001394:	4620      	mov	r0, r4
 8001396:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001398:	4798      	blx	r3
    for (;;)
 800139a:	e7f8      	b.n	800138e <_ZN11TouchGFXHAL9taskEntryEv+0x26>

0800139c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800139c:	b510      	push	{r4, lr}
 800139e:	4604      	mov	r4, r0
        swapFrameBuffers();
 80013a0:	f00b fbaa 	bl	800caf8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80013a4:	6823      	ldr	r3, [r4, #0]
 80013a6:	4620      	mov	r0, r4
 80013a8:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 80013ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 80013b0:	4718      	bx	r3

080013b2 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    // Calling parent implementation of getTFTFrameBuffer().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return TouchGFXGeneratedHAL::getTFTFrameBuffer();
 80013b2:	f000 bca9 	b.w	8001d08 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>

080013b6 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 80013b6:	f000 bcad 	b.w	8001d14 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

080013ba <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 80013ba:	f000 bcd9 	b.w	8001d70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

080013be <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 80013be:	f000 bc7f 	b.w	8001cc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

080013c2 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 80013c2:	f000 bce1 	b.w	8001d88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

080013c6 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 80013c6:	f000 bce9 	b.w	8001d9c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>

080013ca <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
    // Calling parent implementation of enableLCDControllerInterrupt().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 80013ca:	f000 bc83 	b.w	8001cd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

080013ce <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80013ce:	f00a bdf9 	b.w	800bfc4 <_ZN8touchgfx3HAL16flushFrameBufferEv>

080013d2 <_ZN11TouchGFXHALD0Ev>:
 80013d2:	b510      	push	{r4, lr}
 80013d4:	217c      	movs	r1, #124	; 0x7c
 80013d6:	4604      	mov	r4, r0
 80013d8:	f020 fddf 	bl	8021f9a <_ZdlPvj>
 80013dc:	4620      	mov	r0, r4
 80013de:	bd10      	pop	{r4, pc}

080013e0 <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80013e0:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80013e4:	b11b      	cbz	r3, 80013ee <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80013e6:	6840      	ldr	r0, [r0, #4]
 80013e8:	6803      	ldr	r3, [r0, #0]
 80013ea:	681b      	ldr	r3, [r3, #0]
 80013ec:	4718      	bx	r3
    }
 80013ee:	4618      	mov	r0, r3
 80013f0:	4770      	bx	lr
	...

080013f4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80013f4:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80013f6:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80013fa:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80013fe:	4b0c      	ldr	r3, [pc, #48]	; (8001430 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 8001400:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 8001402:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 8001404:	d009      	beq.n	800141a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 8001406:	b93a      	cbnz	r2, 8001418 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001408:	4a0a      	ldr	r2, [pc, #40]	; (8001434 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 800140a:	490b      	ldr	r1, [pc, #44]	; (8001438 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800140c:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 800140e:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001410:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001412:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 8001414:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8001416:	701a      	strb	r2, [r3, #0]
    }
 8001418:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800141a:	2a00      	cmp	r2, #0
 800141c:	d0fc      	beq.n	8001418 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800141e:	4a05      	ldr	r2, [pc, #20]	; (8001434 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001420:	4905      	ldr	r1, [pc, #20]	; (8001438 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001422:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001424:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 8001426:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001428:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 800142a:	2200      	movs	r2, #0
 800142c:	e7f3      	b.n	8001416 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 800142e:	bf00      	nop
 8001430:	20013750 	.word	0x20013750
 8001434:	2001374c 	.word	0x2001374c
 8001438:	2001374e 	.word	0x2001374e

0800143c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
    virtual void setFrameBufferStartAddresses(void* frameBuffer, void* doubleBuffer, void* animationStorage)
 800143c:	b570      	push	{r4, r5, r6, lr}
 800143e:	460d      	mov	r5, r1
 8001440:	4619      	mov	r1, r3
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001442:	b935      	cbnz	r5, 8001452 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x16>
 8001444:	4b09      	ldr	r3, [pc, #36]	; (800146c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x30>)
 8001446:	4a0a      	ldr	r2, [pc, #40]	; (8001470 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x34>)
 8001448:	480a      	ldr	r0, [pc, #40]	; (8001474 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x38>)
 800144a:	f240 21d2 	movw	r1, #722	; 0x2d2
 800144e:	f021 fbb7 	bl	8022bc0 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001452:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001456:	4b08      	ldr	r3, [pc, #32]	; (8001478 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x3c>)
 8001458:	3a00      	subs	r2, #0
 800145a:	bf18      	it	ne
 800145c:	2201      	movne	r2, #1
 800145e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 8001460:	6803      	ldr	r3, [r0, #0]
    }
 8001462:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setAnimationStorage(animationStorage);
 8001466:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800146a:	4718      	bx	r3
 800146c:	08027930 	.word	0x08027930
 8001470:	08027968 	.word	0x08027968
 8001474:	080279b6 	.word	0x080279b6
 8001478:	20013756 	.word	0x20013756

0800147c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 800147c:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 800147e:	4b09      	ldr	r3, [pc, #36]	; (80014a4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001480:	881b      	ldrh	r3, [r3, #0]
 8001482:	428b      	cmp	r3, r1
 8001484:	d803      	bhi.n	800148e <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 8001486:	4b08      	ldr	r3, [pc, #32]	; (80014a8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001488:	881b      	ldrh	r3, [r3, #0]
 800148a:	4293      	cmp	r3, r2
 800148c:	d905      	bls.n	800149a <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 800148e:	4b07      	ldr	r3, [pc, #28]	; (80014ac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001490:	4a07      	ldr	r2, [pc, #28]	; (80014b0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 8001492:	4808      	ldr	r0, [pc, #32]	; (80014b4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 8001494:	219e      	movs	r1, #158	; 0x9e
 8001496:	f021 fb93 	bl	8022bc0 <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 800149a:	4b07      	ldr	r3, [pc, #28]	; (80014b8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 800149c:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 800149e:	4b07      	ldr	r3, [pc, #28]	; (80014bc <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 80014a0:	801a      	strh	r2, [r3, #0]
    }
 80014a2:	bd08      	pop	{r3, pc}
 80014a4:	2001374c 	.word	0x2001374c
 80014a8:	2001374e 	.word	0x2001374e
 80014ac:	080279fb 	.word	0x080279fb
 80014b0:	08027a5e 	.word	0x08027a5e
 80014b4:	080279b6 	.word	0x080279b6
 80014b8:	20013752 	.word	0x20013752
 80014bc:	20013754 	.word	0x20013754

080014c0 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80014c0:	2101      	movs	r1, #1
{
 80014c2:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 80014c4:	2200      	movs	r2, #0
 80014c6:	4608      	mov	r0, r1
 80014c8:	f007 fda1 	bl	800900e <osSemaphoreNew>
 80014cc:	4b0a      	ldr	r3, [pc, #40]	; (80014f8 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 80014ce:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 80014d0:	b928      	cbnz	r0, 80014de <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 80014d2:	4b0a      	ldr	r3, [pc, #40]	; (80014fc <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 80014d4:	4a0a      	ldr	r2, [pc, #40]	; (8001500 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014d6:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014d8:	480a      	ldr	r0, [pc, #40]	; (8001504 <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 80014da:	f021 fb71 	bl	8022bc0 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 80014de:	2200      	movs	r2, #0
 80014e0:	2104      	movs	r1, #4
 80014e2:	2001      	movs	r0, #1
 80014e4:	f007 fe30 	bl	8009148 <osMessageQueueNew>
 80014e8:	4b07      	ldr	r3, [pc, #28]	; (8001508 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 80014ea:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 80014ec:	b918      	cbnz	r0, 80014f6 <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 80014ee:	4b07      	ldr	r3, [pc, #28]	; (800150c <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 80014f0:	4a03      	ldr	r2, [pc, #12]	; (8001500 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 80014f2:	212c      	movs	r1, #44	; 0x2c
 80014f4:	e7f0      	b.n	80014d8 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 80014f6:	bd08      	pop	{r3, pc}
 80014f8:	20000314 	.word	0x20000314
 80014fc:	08027b7c 	.word	0x08027b7c
 8001500:	08027bc5 	.word	0x08027bc5
 8001504:	08027bf4 	.word	0x08027bf4
 8001508:	20000310 	.word	0x20000310
 800150c:	08027c41 	.word	0x08027c41

08001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001510:	4b02      	ldr	r3, [pc, #8]	; (800151c <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8001512:	f04f 31ff 	mov.w	r1, #4294967295
 8001516:	6818      	ldr	r0, [r3, #0]
 8001518:	f007 bdc3 	b.w	80090a2 <osSemaphoreAcquire>
 800151c:	20000314 	.word	0x20000314

08001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001520:	4b01      	ldr	r3, [pc, #4]	; (8001528 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8001522:	6818      	ldr	r0, [r3, #0]
 8001524:	f007 bde8 	b.w	80090f8 <osSemaphoreRelease>
 8001528:	20000314 	.word	0x20000314

0800152c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 800152c:	4b02      	ldr	r3, [pc, #8]	; (8001538 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 800152e:	2100      	movs	r1, #0
 8001530:	6818      	ldr	r0, [r3, #0]
 8001532:	f007 bdb6 	b.w	80090a2 <osSemaphoreAcquire>
 8001536:	bf00      	nop
 8001538:	20000314 	.word	0x20000314

0800153c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 800153c:	f7ff bff0 	b.w	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001540 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001540:	4803      	ldr	r0, [pc, #12]	; (8001550 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8001542:	4904      	ldr	r1, [pc, #16]	; (8001554 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8001544:	6800      	ldr	r0, [r0, #0]
 8001546:	2300      	movs	r3, #0
 8001548:	461a      	mov	r2, r3
 800154a:	f007 be38 	b.w	80091be <osMessageQueuePut>
 800154e:	bf00      	nop
 8001550:	20000310 	.word	0x20000310
 8001554:	20000004 	.word	0x20000004

08001558 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8001558:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 800155a:	4c08      	ldr	r4, [pc, #32]	; (800157c <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 800155c:	2300      	movs	r3, #0
 800155e:	461a      	mov	r2, r3
 8001560:	a901      	add	r1, sp, #4
 8001562:	6820      	ldr	r0, [r4, #0]
 8001564:	f007 fe5b 	bl	800921e <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8001568:	6820      	ldr	r0, [r4, #0]
 800156a:	f04f 33ff 	mov.w	r3, #4294967295
 800156e:	2200      	movs	r2, #0
 8001570:	a901      	add	r1, sp, #4
 8001572:	f007 fe54 	bl	800921e <osMessageQueueGet>
}
 8001576:	b002      	add	sp, #8
 8001578:	bd10      	pop	{r4, pc}
 800157a:	bf00      	nop
 800157c:	20000310 	.word	0x20000310

08001580 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8001580:	6803      	ldr	r3, [r0, #0]
 8001582:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001584:	4718      	bx	r3

08001586 <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8001586:	2001      	movs	r0, #1
 8001588:	4770      	bx	lr

0800158a <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 800158a:	6803      	ldr	r3, [r0, #0]
 800158c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800158e:	4718      	bx	r3

08001590 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 8001590:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001592:	2300      	movs	r3, #0
 8001594:	9301      	str	r3, [sp, #4]
 8001596:	4b0d      	ldr	r3, [pc, #52]	; (80015cc <_ZN8STM32DMA10initializeEv+0x3c>)
 8001598:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800159a:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 800159e:	631a      	str	r2, [r3, #48]	; 0x30
 80015a0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80015a2:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80015a6:	9201      	str	r2, [sp, #4]
 80015a8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80015aa:	691a      	ldr	r2, [r3, #16]
 80015ac:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80015b0:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80015b2:	691a      	ldr	r2, [r3, #16]
 80015b4:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 80015b8:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 80015ba:	4b05      	ldr	r3, [pc, #20]	; (80015d0 <_ZN8STM32DMA10initializeEv+0x40>)
 80015bc:	4a05      	ldr	r2, [pc, #20]	; (80015d4 <_ZN8STM32DMA10initializeEv+0x44>)
 80015be:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015c0:	4b05      	ldr	r3, [pc, #20]	; (80015d8 <_ZN8STM32DMA10initializeEv+0x48>)
 80015c2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80015c6:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 80015c8:	b002      	add	sp, #8
 80015ca:	4770      	bx	lr
 80015cc:	40023800 	.word	0x40023800
 80015d0:	200025f0 	.word	0x200025f0
 80015d4:	0800161d 	.word	0x0800161d
 80015d8:	e000e100 	.word	0xe000e100

080015dc <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 80015dc:	f240 30ef 	movw	r0, #1007	; 0x3ef
 80015e0:	4770      	bx	lr
	...

080015e4 <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 80015e4:	4b05      	ldr	r3, [pc, #20]	; (80015fc <_ZN8STM32DMAD1Ev+0x18>)
 80015e6:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80015e8:	4b05      	ldr	r3, [pc, #20]	; (8001600 <_ZN8STM32DMAD1Ev+0x1c>)
 80015ea:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80015ee:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 80015f2:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80015f6:	f3bf 8f6f 	isb	sy
}
 80015fa:	4770      	bx	lr
 80015fc:	08027de0 	.word	0x08027de0
 8001600:	e000e100 	.word	0xe000e100

08001604 <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 8001604:	b510      	push	{r4, lr}
 8001606:	4604      	mov	r4, r0
}
 8001608:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 800160c:	f7ff ffea 	bl	80015e4 <_ZN8STM32DMAD1Ev>
 8001610:	4620      	mov	r0, r4
 8001612:	f020 fcc2 	bl	8021f9a <_ZdlPvj>
 8001616:	4620      	mov	r0, r4
 8001618:	bd10      	pop	{r4, pc}
	...

0800161c <DMA2D_XferCpltCallback>:
        return instance;
 800161c:	4b02      	ldr	r3, [pc, #8]	; (8001628 <DMA2D_XferCpltCallback+0xc>)
 800161e:	681b      	ldr	r3, [r3, #0]
 8001620:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8001622:	6803      	ldr	r3, [r0, #0]
 8001624:	695b      	ldr	r3, [r3, #20]
 8001626:	4718      	bx	r3
 8001628:	20013758 	.word	0x20013758

0800162c <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 800162c:	b570      	push	{r4, r5, r6, lr}
 800162e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001630:	4625      	mov	r5, r4
 8001632:	4b0a      	ldr	r3, [pc, #40]	; (800165c <_ZN8STM32DMAC1Ev+0x30>)
 8001634:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001636:	2600      	movs	r6, #0
 8001638:	6060      	str	r0, [r4, #4]
 800163a:	7226      	strb	r6, [r4, #8]
 800163c:	7266      	strb	r6, [r4, #9]
 800163e:	f845 3b20 	str.w	r3, [r5], #32
 8001642:	2260      	movs	r2, #96	; 0x60
 8001644:	4629      	mov	r1, r5
 8001646:	f00b fbad 	bl	800cda4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800164a:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800164e:	60ee      	str	r6, [r5, #12]
 8001650:	3524      	adds	r5, #36	; 0x24
 8001652:	42ab      	cmp	r3, r5
 8001654:	d1fb      	bne.n	800164e <_ZN8STM32DMAC1Ev+0x22>
}
 8001656:	4620      	mov	r0, r4
 8001658:	bd70      	pop	{r4, r5, r6, pc}
 800165a:	bf00      	nop
 800165c:	08027de0 	.word	0x08027de0

08001660 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 8001660:	b508      	push	{r3, lr}
    switch (format)
 8001662:	290b      	cmp	r1, #11
 8001664:	d80b      	bhi.n	800167e <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 8001666:	e8df f001 	tbb	[pc, r1]
 800166a:	0612      	.short	0x0612
 800166c:	0a0a0a10 	.word	0x0a0a0a10
 8001670:	0808080a 	.word	0x0808080a
 8001674:	0808      	.short	0x0808
 8001676:	2001      	movs	r0, #1
}
 8001678:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 800167a:	2005      	movs	r0, #5
        break;
 800167c:	e7fc      	b.n	8001678 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 800167e:	4b05      	ldr	r3, [pc, #20]	; (8001694 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001680:	4a05      	ldr	r2, [pc, #20]	; (8001698 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001682:	4806      	ldr	r0, [pc, #24]	; (800169c <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 8001684:	2166      	movs	r1, #102	; 0x66
 8001686:	f021 fa9b 	bl	8022bc0 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 800168a:	2000      	movs	r0, #0
 800168c:	e7f4      	b.n	8001678 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 800168e:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001690:	e7f2      	b.n	8001678 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001692:	bf00      	nop
 8001694:	08027c83 	.word	0x08027c83
 8001698:	08027c9e 	.word	0x08027c9e
 800169c:	08027ce8 	.word	0x08027ce8

080016a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80016a0:	b508      	push	{r3, lr}
    switch (format)
 80016a2:	290a      	cmp	r1, #10
 80016a4:	d809      	bhi.n	80016ba <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80016a6:	e8df f001 	tbb	[pc, r1]
 80016aa:	0610      	.short	0x0610
 80016ac:	0808080e 	.word	0x0808080e
 80016b0:	06060608 	.word	0x06060608
 80016b4:	06          	.byte	0x06
 80016b5:	00          	.byte	0x00
 80016b6:	2001      	movs	r0, #1
}
 80016b8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 80016ba:	4b05      	ldr	r3, [pc, #20]	; (80016d0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 80016bc:	4a05      	ldr	r2, [pc, #20]	; (80016d4 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80016be:	4806      	ldr	r0, [pc, #24]	; (80016d8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80016c0:	2187      	movs	r1, #135	; 0x87
 80016c2:	f021 fa7d 	bl	8022bc0 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 80016c6:	2000      	movs	r0, #0
 80016c8:	e7f6      	b.n	80016b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 80016ca:	2002      	movs	r0, #2
    return dma2dColorMode;
 80016cc:	e7f4      	b.n	80016b8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80016ce:	bf00      	nop
 80016d0:	08027c83 	.word	0x08027c83
 80016d4:	08027d33 	.word	0x08027d33
 80016d8:	08027ce8 	.word	0x08027ce8

080016dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 80016dc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016e0:	7f4f      	ldrb	r7, [r1, #29]
{
 80016e2:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016e4:	4639      	mov	r1, r7
{
 80016e6:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016e8:	f7ff ffba 	bl	8001660 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016ec:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 80016f0:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016f2:	4641      	mov	r1, r8
 80016f4:	4648      	mov	r0, r9
 80016f6:	f7ff ffb3 	bl	8001660 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016fa:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016fc:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 80016fe:	4648      	mov	r0, r9
 8001700:	f7ff ffce 	bl	80016a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001704:	8aa1      	ldrh	r1, [r4, #20]
 8001706:	8b62      	ldrh	r2, [r4, #26]
 8001708:	4b42      	ldr	r3, [pc, #264]	; (8001814 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800170a:	1a52      	subs	r2, r2, r1
 800170c:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800170e:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001710:	8b22      	ldrh	r2, [r4, #24]
 8001712:	1a52      	subs	r2, r2, r1
 8001714:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001716:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001718:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800171a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800171e:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001720:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001722:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001724:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8001726:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001728:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800172a:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 800172e:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001730:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 8001734:	d026      	beq.n	8001784 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 8001736:	d810      	bhi.n	800175a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001738:	2920      	cmp	r1, #32
 800173a:	ea45 0402 	orr.w	r4, r5, r2
 800173e:	d061      	beq.n	8001804 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001740:	2940      	cmp	r1, #64	; 0x40
 8001742:	d05f      	beq.n	8001804 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001744:	2904      	cmp	r1, #4
 8001746:	d05d      	beq.n	8001804 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001748:	4b32      	ldr	r3, [pc, #200]	; (8001814 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800174a:	432a      	orrs	r2, r5
 800174c:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001750:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001752:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001754:	d05a      	beq.n	800180c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8001756:	4a30      	ldr	r2, [pc, #192]	; (8001818 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 8001758:	e040      	b.n	80017dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 800175a:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 800175e:	d007      	beq.n	8001770 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 8001760:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 8001764:	d1f0      	bne.n	8001748 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001766:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 800176a:	f042 0209 	orr.w	r2, r2, #9
 800176e:	e003      	b.n	8001778 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001770:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8001774:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001778:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 800177a:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 800177c:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800177e:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001780:	6158      	str	r0, [r3, #20]
 8001782:	e02a      	b.n	80017da <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8001784:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001786:	432a      	orrs	r2, r5
 8001788:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 800178c:	1d21      	adds	r1, r4, #4
 800178e:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001790:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8001792:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001794:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001796:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8001798:	b142      	cbz	r2, 80017ac <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 800179a:	2a01      	cmp	r2, #1
 800179c:	d021      	beq.n	80017e2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 800179e:	4b1f      	ldr	r3, [pc, #124]	; (800181c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80017a0:	4a1f      	ldr	r2, [pc, #124]	; (8001820 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80017a2:	4820      	ldr	r0, [pc, #128]	; (8001824 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80017a4:	f240 1111 	movw	r1, #273	; 0x111
 80017a8:	f021 fa0a 	bl	8022bc0 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017ac:	69da      	ldr	r2, [r3, #28]
 80017ae:	8861      	ldrh	r1, [r4, #2]
 80017b0:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80017b4:	3901      	subs	r1, #1
 80017b6:	f022 0210 	bic.w	r2, r2, #16
 80017ba:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80017be:	61da      	str	r2, [r3, #28]
            bool blend = true;
 80017c0:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 80017c2:	4b14      	ldr	r3, [pc, #80]	; (8001814 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 80017c4:	69da      	ldr	r2, [r3, #28]
 80017c6:	f042 0220 	orr.w	r2, r2, #32
 80017ca:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 80017cc:	69da      	ldr	r2, [r3, #28]
 80017ce:	0692      	lsls	r2, r2, #26
 80017d0:	d4fc      	bmi.n	80017cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 80017d2:	2210      	movs	r2, #16
 80017d4:	609a      	str	r2, [r3, #8]
            if(blend)
 80017d6:	2800      	cmp	r0, #0
 80017d8:	d0bd      	beq.n	8001756 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 80017da:	4a13      	ldr	r2, [pc, #76]	; (8001828 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 80017dc:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 80017de:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017e2:	8862      	ldrh	r2, [r4, #2]
 80017e4:	69d9      	ldr	r1, [r3, #28]
 80017e6:	1e54      	subs	r4, r2, #1
 80017e8:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 80017ec:	f022 0210 	bic.w	r2, r2, #16
 80017f0:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 80017f4:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 80017f8:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 80017fc:	bf18      	it	ne
 80017fe:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001800:	61da      	str	r2, [r3, #28]
                break;
 8001802:	e7de      	b.n	80017c2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001804:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001808:	61dc      	str	r4, [r3, #28]
 800180a:	e7b8      	b.n	800177e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 800180c:	f240 2201 	movw	r2, #513	; 0x201
 8001810:	e7e4      	b.n	80017dc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 8001812:	bf00      	nop
 8001814:	4002b000 	.word	0x4002b000
 8001818:	00010201 	.word	0x00010201
 800181c:	08027d7e 	.word	0x08027d7e
 8001820:	08027d98 	.word	0x08027d98
 8001824:	08027ce8 	.word	0x08027ce8
 8001828:	00020201 	.word	0x00020201

0800182c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 800182c:	b570      	push	{r4, r5, r6, lr}
 800182e:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001830:	7f89      	ldrb	r1, [r1, #30]
 8001832:	f7ff ff35 	bl	80016a0 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001836:	8aa6      	ldrh	r6, [r4, #20]
 8001838:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800183a:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 800183c:	4b15      	ldr	r3, [pc, #84]	; (8001894 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800183e:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001840:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001842:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001846:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001848:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800184a:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800184c:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 800184e:	6826      	ldr	r6, [r4, #0]
 8001850:	68e1      	ldr	r1, [r4, #12]
 8001852:	2e08      	cmp	r6, #8
 8001854:	d10d      	bne.n	8001872 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001856:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001858:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 800185a:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 800185c:	7f20      	ldrb	r0, [r4, #28]
 800185e:	4a0e      	ldr	r2, [pc, #56]	; (8001898 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 8001860:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 8001864:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8001866:	4a0d      	ldr	r2, [pc, #52]	; (800189c <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 8001868:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800186a:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800186c:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800186e:	601a      	str	r2, [r3, #0]
    }
}
 8001870:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8001872:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 8001874:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8001876:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 8001878:	0948      	lsrs	r0, r1, #5
 800187a:	0a0a      	lsrs	r2, r1, #8
 800187c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8001880:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8001884:	4302      	orrs	r2, r0
 8001886:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 800188a:	430a      	orrs	r2, r1
 800188c:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 800188e:	4a04      	ldr	r2, [pc, #16]	; (80018a0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 8001890:	e7ed      	b.n	800186e <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 8001892:	bf00      	nop
 8001894:	4002b000 	.word	0x4002b000
 8001898:	00010009 	.word	0x00010009
 800189c:	00020201 	.word	0x00020201
 80018a0:	00030201 	.word	0x00030201

080018a4 <_ZN8touchgfx5paint8tearDownEv>:
* @brief Waits until previous DMA drawing operation has finished
*/
void tearDown()
{
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018a4:	4b03      	ldr	r3, [pc, #12]	; (80018b4 <_ZN8touchgfx5paint8tearDownEv+0x10>)
 80018a6:	681a      	ldr	r2, [r3, #0]
 80018a8:	07d2      	lsls	r2, r2, #31
 80018aa:	d4fc      	bmi.n	80018a6 <_ZN8touchgfx5paint8tearDownEv+0x2>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018ac:	2223      	movs	r2, #35	; 0x23
 80018ae:	609a      	str	r2, [r3, #8]
}
 80018b0:	4770      	bx	lr
 80018b2:	bf00      	nop
 80018b4:	4002b000 	.word	0x4002b000

080018b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        WRITE_REG(DMA2D->CR, (DMA2D_CR_START | DMA2D_R2M));
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 80018b8:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 80018ba:	4c0e      	ldr	r4, [pc, #56]	; (80018f4 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x3c>)
 80018bc:	6825      	ldr	r5, [r4, #0]
 80018be:	07ed      	lsls	r5, r5, #31
 80018c0:	d4fc      	bmi.n	80018bc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018c2:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018c4:	0412      	lsls	r2, r2, #16
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 80018c6:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018c8:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018cc:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    if (alpha < 0xFF)
 80018ce:	2bff      	cmp	r3, #255	; 0xff
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 80018d0:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 80018d2:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 80018d4:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 80018d6:	60e1      	str	r1, [r4, #12]
    if (alpha < 0xFF)
 80018d8:	d008      	beq.n	80018ec <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x34>
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 80018da:	061b      	lsls	r3, r3, #24
 80018dc:	f043 1302 	orr.w	r3, r3, #131074	; 0x20002
 80018e0:	61e3      	str	r3, [r4, #28]

        /* Configure DMA2D Stream source2 address */
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 80018e2:	4b05      	ldr	r3, [pc, #20]	; (80018f8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x40>)
        WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018e4:	6265      	str	r5, [r4, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 80018e6:	6160      	str	r0, [r4, #20]
    {
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));

        /* Start DMA2D : M2M Mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80018e8:	6023      	str	r3, [r4, #0]
    }
}
 80018ea:	bd30      	pop	{r4, r5, pc}
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (alpha << 24));
 80018ec:	4b03      	ldr	r3, [pc, #12]	; (80018fc <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x44>)
 80018ee:	61e3      	str	r3, [r4, #28]
        WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_CR_START);
 80018f0:	2301      	movs	r3, #1
 80018f2:	e7f9      	b.n	80018e8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x30>
 80018f4:	4002b000 	.word	0x4002b000
 80018f8:	00020001 	.word	0x00020001
 80018fc:	ff020002 	.word	0xff020002

08001900 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 8001900:	b530      	push	{r4, r5, lr}
    /* Wait for DMA2D to finish last run */
    while ((READ_REG(DMA2D->CR) & DMA2D_CR_START) != 0U);
 8001902:	4c0b      	ldr	r4, [pc, #44]	; (8001930 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x30>)
 8001904:	6825      	ldr	r5, [r4, #0]
 8001906:	07ed      	lsls	r5, r5, #31
 8001908:	d4fc      	bmi.n	8001904 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x4>

    /* Clear transfer flags */
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 800190a:	2523      	movs	r5, #35	; 0x23

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800190c:	0412      	lsls	r2, r2, #16

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));

    /* Set DMA2D color mode and alpha mode */
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
 800190e:	061b      	lsls	r3, r3, #24
    WRITE_REG(DMA2D->IFCR, DMA2D_FLAG_TC | DMA2D_FLAG_CE | DMA2D_FLAG_TE);
 8001910:	60a5      	str	r5, [r4, #8]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
 8001912:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 8001916:	2502      	movs	r5, #2
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 8001918:	f042 0201 	orr.w	r2, r2, #1
    WRITE_REG(DMA2D->OPFCCR, DMA2D_OUTPUT_RGB565);
 800191c:	6365      	str	r5, [r4, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (1 | (count << DMA2D_NLR_PL_Pos)));
 800191e:	6462      	str	r2, [r4, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(ptr));
 8001920:	63e0      	str	r0, [r4, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(data));
 8001922:	60e1      	str	r1, [r4, #12]
    WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_ARGB8888 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (alpha << 24));
 8001924:	61e3      	str	r3, [r4, #28]

    /* Configure DMA2D Stream source2 address */
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));

    /* Set DMA2D mode */
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 8001926:	4b03      	ldr	r3, [pc, #12]	; (8001934 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x34>)
    WRITE_REG(DMA2D->BGPFCCR, DMA2D_INPUT_RGB565 | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8001928:	6265      	str	r5, [r4, #36]	; 0x24
    WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(ptr));
 800192a:	6160      	str	r0, [r4, #20]
    WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_CR_START);
 800192c:	6023      	str	r3, [r4, #0]
}
 800192e:	bd30      	pop	{r4, r5, pc}
 8001930:	4002b000 	.word	0x4002b000
 8001934:	00020001 	.word	0x00020001

08001938 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 8001938:	2001      	movs	r0, #1
 800193a:	4770      	bx	lr

0800193c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 800193c:	2040      	movs	r0, #64	; 0x40
 800193e:	4770      	bx	lr

08001940 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 8001940:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 8001944:	3008      	adds	r0, #8
 8001946:	4770      	bx	lr

08001948 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 8001948:	eb00 1081 	add.w	r0, r0, r1, lsl #6
    }
 800194c:	3008      	adds	r0, #8
 800194e:	4770      	bx	lr

08001950 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001950:	2001      	movs	r0, #1
 8001952:	4770      	bx	lr

08001954 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001954:	f241 10bc 	movw	r0, #4540	; 0x11bc
 8001958:	4770      	bx	lr

0800195a <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800195a:	f241 13bc 	movw	r3, #4540	; 0x11bc
 800195e:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001962:	3008      	adds	r0, #8
 8001964:	4770      	bx	lr

08001966 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001966:	f241 13bc 	movw	r3, #4540	; 0x11bc
 800196a:	fb03 0001 	mla	r0, r3, r1, r0
    }
 800196e:	3008      	adds	r0, #8
 8001970:	4770      	bx	lr

08001972 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001972:	2001      	movs	r0, #1
 8001974:	4770      	bx	lr

08001976 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001976:	2010      	movs	r0, #16
 8001978:	4770      	bx	lr

0800197a <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 800197a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 800197e:	3008      	adds	r0, #8
 8001980:	4770      	bx	lr

08001982 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001982:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001986:	3008      	adds	r0, #8
 8001988:	4770      	bx	lr

0800198a <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoSplashScreenScreenNoTransition();
 800198a:	4608      	mov	r0, r1
 800198c:	f001 bef8 	b.w	8003780 <_ZN23FrontendApplicationBase34gotoSplashScreenScreenNoTransitionEv>

08001990 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001990:	b510      	push	{r4, lr}
 8001992:	4b03      	ldr	r3, [pc, #12]	; (80019a0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev+0x10>)
 8001994:	6003      	str	r3, [r0, #0]
 8001996:	4604      	mov	r4, r0
 8001998:	f009 fe9b 	bl	800b6d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800199c:	4620      	mov	r0, r4
 800199e:	bd10      	pop	{r4, pc}
 80019a0:	08027e98 	.word	0x08027e98

080019a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED0Ev>:
 80019a4:	b510      	push	{r4, lr}
 80019a6:	4604      	mov	r4, r0
 80019a8:	f7ff fff2 	bl	8001990 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 80019ac:	4620      	mov	r0, r4
 80019ae:	2148      	movs	r1, #72	; 0x48
 80019b0:	f020 faf3 	bl	8021f9a <_ZdlPvj>
 80019b4:	4620      	mov	r0, r4
 80019b6:	bd10      	pop	{r4, pc}

080019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80019b8:	b510      	push	{r4, lr}
 80019ba:	4b03      	ldr	r3, [pc, #12]	; (80019c8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019bc:	6003      	str	r3, [r0, #0]
 80019be:	4604      	mov	r4, r0
 80019c0:	f009 fe87 	bl	800b6d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019c4:	4620      	mov	r0, r4
 80019c6:	bd10      	pop	{r4, pc}
 80019c8:	08027e64 	.word	0x08027e64

080019cc <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80019cc:	b510      	push	{r4, lr}
 80019ce:	4604      	mov	r4, r0
 80019d0:	f7ff fff2 	bl	80019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 80019d4:	4620      	mov	r0, r4
 80019d6:	f241 11c4 	movw	r1, #4548	; 0x11c4
 80019da:	f020 fade 	bl	8021f9a <_ZdlPvj>
 80019de:	4620      	mov	r0, r4
 80019e0:	bd10      	pop	{r4, pc}
	...

080019e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 80019e4:	b510      	push	{r4, lr}
 80019e6:	4b03      	ldr	r3, [pc, #12]	; (80019f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80019e8:	6003      	str	r3, [r0, #0]
 80019ea:	4604      	mov	r4, r0
 80019ec:	f009 fe71 	bl	800b6d2 <_ZN8touchgfx17AbstractPartitionD1Ev>
 80019f0:	4620      	mov	r0, r4
 80019f2:	bd10      	pop	{r4, pc}
 80019f4:	08027e30 	.word	0x08027e30

080019f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 80019f8:	b510      	push	{r4, lr}
 80019fa:	4604      	mov	r4, r0
 80019fc:	f7ff fff2 	bl	80019e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a00:	4620      	mov	r0, r4
 8001a02:	2118      	movs	r1, #24
 8001a04:	f020 fac9 	bl	8021f9a <_ZdlPvj>
 8001a08:	4620      	mov	r0, r4
 8001a0a:	bd10      	pop	{r4, pc}

08001a0c <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001a0c:	b510      	push	{r4, lr}
 8001a0e:	4b09      	ldr	r3, [pc, #36]	; (8001a34 <_ZN12FrontendHeapD1Ev+0x28>)
 8001a10:	6003      	str	r3, [r0, #0]
 8001a12:	4604      	mov	r4, r0
 8001a14:	f500 508f 	add.w	r0, r0, #4576	; 0x11e0
 8001a18:	3010      	adds	r0, #16
 8001a1a:	f7ff ffb9 	bl	8001990 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev>
 8001a1e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001a22:	f7ff ffc9 	bl	80019b8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI21TemperatureScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a26:	f104 0014 	add.w	r0, r4, #20
 8001a2a:	f7ff ffdb 	bl	80019e4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI25LedCommandScreenPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a2e:	4620      	mov	r0, r4
 8001a30:	bd10      	pop	{r4, pc}
 8001a32:	bf00      	nop
 8001a34:	08027ecc 	.word	0x08027ecc

08001a38 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001a38:	b508      	push	{r3, lr}
 8001a3a:	4802      	ldr	r0, [pc, #8]	; (8001a44 <__tcf_0+0xc>)
 8001a3c:	f7ff ffe6 	bl	8001a0c <_ZN12FrontendHeapD1Ev>
 8001a40:	bd08      	pop	{r3, pc}
 8001a42:	bf00      	nop
 8001a44:	2000031c 	.word	0x2000031c

08001a48 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001a48:	b510      	push	{r4, lr}
 8001a4a:	4604      	mov	r4, r0
 8001a4c:	f7ff ffde 	bl	8001a0c <_ZN12FrontendHeapD1Ev>
 8001a50:	4620      	mov	r0, r4
 8001a52:	f241 31d0 	movw	r1, #5072	; 0x13d0
 8001a56:	f020 faa0 	bl	8021f9a <_ZdlPvj>
 8001a5a:	4620      	mov	r0, r4
 8001a5c:	bd10      	pop	{r4, pc}
	...

08001a60 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 240, 320);

void touchgfx_init()
{
 8001a60:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001a64:	f001 fbd4 	bl	8003210 <_ZN14BitmapDatabase11getInstanceEv>
 8001a68:	4605      	mov	r5, r0
 8001a6a:	f001 fbd5 	bl	8003218 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001a6e:	2400      	movs	r4, #0
 8001a70:	4601      	mov	r1, r0
 8001a72:	4623      	mov	r3, r4
 8001a74:	4628      	mov	r0, r5
 8001a76:	4622      	mov	r2, r4
 8001a78:	9400      	str	r4, [sp, #0]
 8001a7a:	f013 fa95 	bl	8014fa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001a7e:	4b26      	ldr	r3, [pc, #152]	; (8001b18 <touchgfx_init+0xb8>)
 8001a80:	4a26      	ldr	r2, [pc, #152]	; (8001b1c <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001a82:	4d27      	ldr	r5, [pc, #156]	; (8001b20 <touchgfx_init+0xc0>)
 8001a84:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001a86:	4620      	mov	r0, r4
 8001a88:	f003 fcd4 	bl	8005434 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001a8c:	4825      	ldr	r0, [pc, #148]	; (8001b24 <touchgfx_init+0xc4>)
 8001a8e:	f013 f9f3 	bl	8014e78 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001a92:	782b      	ldrb	r3, [r5, #0]
 8001a94:	f3bf 8f5b 	dmb	ish
 8001a98:	07db      	lsls	r3, r3, #31
 8001a9a:	d436      	bmi.n	8001b0a <touchgfx_init+0xaa>
 8001a9c:	4628      	mov	r0, r5
 8001a9e:	f020 fa7e 	bl	8021f9e <__cxa_guard_acquire>
 8001aa2:	b390      	cbz	r0, 8001b0a <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001aa4:	4c20      	ldr	r4, [pc, #128]	; (8001b28 <touchgfx_init+0xc8>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001aa6:	4b21      	ldr	r3, [pc, #132]	; (8001b2c <touchgfx_init+0xcc>)
 8001aa8:	4f21      	ldr	r7, [pc, #132]	; (8001b30 <touchgfx_init+0xd0>)
 8001aaa:	6023      	str	r3, [r4, #0]
 8001aac:	f104 0014 	add.w	r0, r4, #20
 8001ab0:	f500 5693 	add.w	r6, r0, #4704	; 0x1260
 8001ab4:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001ab8:	6060      	str	r0, [r4, #4]
 8001aba:	f8c4 8008 	str.w	r8, [r4, #8]
 8001abe:	60e7      	str	r7, [r4, #12]
 8001ac0:	6126      	str	r6, [r4, #16]
 8001ac2:	f009 fe07 	bl	800b6d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ac6:	4b1b      	ldr	r3, [pc, #108]	; (8001b34 <touchgfx_init+0xd4>)
 8001ac8:	6163      	str	r3, [r4, #20]
 8001aca:	4640      	mov	r0, r8
 8001acc:	f009 fe02 	bl	800b6d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ad0:	4b19      	ldr	r3, [pc, #100]	; (8001b38 <touchgfx_init+0xd8>)
 8001ad2:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001ad4:	4638      	mov	r0, r7
 8001ad6:	f009 fdfd 	bl	800b6d4 <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001ada:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 8001ade:	4a17      	ldr	r2, [pc, #92]	; (8001b3c <touchgfx_init+0xdc>)
 8001ae0:	f8c3 21f0 	str.w	r2, [r3, #496]	; 0x1f0
 8001ae4:	f503 700e 	add.w	r0, r3, #568	; 0x238
 8001ae8:	f003 fe12 	bl	8005710 <_ZN5ModelC1Ev>
 8001aec:	4622      	mov	r2, r4
 8001aee:	f1a6 013c 	sub.w	r1, r6, #60	; 0x3c
 8001af2:	4630      	mov	r0, r6
 8001af4:	f003 fd10 	bl	8005518 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001af8:	4630      	mov	r0, r6
 8001afa:	f001 fe41 	bl	8003780 <_ZN23FrontendApplicationBase34gotoSplashScreenScreenNoTransitionEv>
        static FrontendHeap instance;
 8001afe:	4810      	ldr	r0, [pc, #64]	; (8001b40 <touchgfx_init+0xe0>)
 8001b00:	f021 f87c 	bl	8022bfc <atexit>
 8001b04:	4628      	mov	r0, r5
 8001b06:	f020 fa56 	bl	8021fb6 <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001b0a:	480e      	ldr	r0, [pc, #56]	; (8001b44 <touchgfx_init+0xe4>)
}
 8001b0c:	b002      	add	sp, #8
 8001b0e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001b12:	f7ff bc17 	b.w	8001344 <_ZN11TouchGFXHAL10initializeEv>
 8001b16:	bf00      	nop
 8001b18:	200137bc 	.word	0x200137bc
 8001b1c:	2000250c 	.word	0x2000250c
 8001b20:	20000318 	.word	0x20000318
 8001b24:	20000008 	.word	0x20000008
 8001b28:	2000031c 	.word	0x2000031c
 8001b2c:	08027ecc 	.word	0x08027ecc
 8001b30:	2000150c 	.word	0x2000150c
 8001b34:	08027e30 	.word	0x08027e30
 8001b38:	08027e64 	.word	0x08027e64
 8001b3c:	08027e98 	.word	0x08027e98
 8001b40:	08001a39 	.word	0x08001a39
 8001b44:	20002490 	.word	0x20002490

08001b48 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001b48:	4770      	bx	lr
	...

08001b4c <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001b4c:	4801      	ldr	r0, [pc, #4]	; (8001b54 <touchgfx_taskEntry+0x8>)
 8001b4e:	f7ff bc0b 	b.w	8001368 <_ZN11TouchGFXHAL9taskEntryEv>
 8001b52:	bf00      	nop
 8001b54:	20002490 	.word	0x20002490

08001b58 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001b58:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 8001b5a:	4c23      	ldr	r4, [pc, #140]	; (8001be8 <_GLOBAL__sub_I_touchgfx_init+0x90>)
static STM32DMA dma;
 8001b5c:	4e23      	ldr	r6, [pc, #140]	; (8001bec <_GLOBAL__sub_I_touchgfx_init+0x94>)
 8001b5e:	4b24      	ldr	r3, [pc, #144]	; (8001bf0 <_GLOBAL__sub_I_touchgfx_init+0x98>)
static LCD16bpp display;
 8001b60:	4d24      	ldr	r5, [pc, #144]	; (8001bf4 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001b62:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001b64:	4630      	mov	r0, r6
 8001b66:	f7ff fd61 	bl	800162c <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001b6a:	4628      	mov	r0, r5
 8001b6c:	f016 fb26 	bl	80181bc <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001b70:	4b21      	ldr	r3, [pc, #132]	; (8001bf8 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        instance = this;
 8001b72:	4822      	ldr	r0, [pc, #136]	; (8001bfc <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001b74:	60dc      	str	r4, [r3, #12]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b76:	4c22      	ldr	r4, [pc, #136]	; (8001c00 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
        instance = this;
 8001b78:	6003      	str	r3, [r0, #0]
          lastRenderMethod(HARDWARE)
 8001b7a:	2200      	movs	r2, #0
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b7c:	20f0      	movs	r0, #240	; 0xf0
          lastRenderMethod(HARDWARE)
 8001b7e:	f44f 7180 	mov.w	r1, #256	; 0x100
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b82:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8001b84:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b88:	4c1e      	ldr	r4, [pc, #120]	; (8001c04 <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001b8a:	491f      	ldr	r1, [pc, #124]	; (8001c08 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001b8c:	8020      	strh	r0, [r4, #0]
          lastRenderMethod(HARDWARE)
 8001b8e:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b92:	4c1e      	ldr	r4, [pc, #120]	; (8001c0c <_GLOBAL__sub_I_touchgfx_init+0xb4>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001b94:	861a      	strh	r2, [r3, #48]	; 0x30
          lastRenderMethod(HARDWARE)
 8001b96:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001b9a:	f44f 70a0 	mov.w	r0, #320	; 0x140
          lastRenderMethod(HARDWARE)
 8001b9e:	6759      	str	r1, [r3, #116]	; 0x74
 8001ba0:	2101      	movs	r1, #1
 8001ba2:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001ba6:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001baa:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001bae:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001bb2:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001bb6:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001bba:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001bbe:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001bc2:	661a      	str	r2, [r3, #96]	; 0x60
 8001bc4:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001bc8:	671a      	str	r2, [r3, #112]	; 0x70
 8001bca:	e9c3 6501 	strd	r6, r5, [r3, #4]
 8001bce:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001bd2:	8020      	strh	r0, [r4, #0]
 8001bd4:	4c0e      	ldr	r4, [pc, #56]	; (8001c10 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001bd6:	f883 1034 	strb.w	r1, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001bda:	8020      	strh	r0, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 8001bdc:	480d      	ldr	r0, [pc, #52]	; (8001c14 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001bde:	7002      	strb	r2, [r0, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 8001be0:	4a0d      	ldr	r2, [pc, #52]	; (8001c18 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001be2:	601a      	str	r2, [r3, #0]
}
 8001be4:	bd70      	pop	{r4, r5, r6, pc}
 8001be6:	bf00      	nop
 8001be8:	200016ec 	.word	0x200016ec
 8001bec:	200016f0 	.word	0x200016f0
 8001bf0:	08027920 	.word	0x08027920
 8001bf4:	20002510 	.word	0x20002510
 8001bf8:	20002490 	.word	0x20002490
 8001bfc:	20013758 	.word	0x20013758
 8001c00:	2001374c 	.word	0x2001374c
 8001c04:	20013752 	.word	0x20013752
 8001c08:	01000001 	.word	0x01000001
 8001c0c:	2001374e 	.word	0x2001374e
 8001c10:	20013754 	.word	0x20013754
 8001c14:	20013750 	.word	0x20013750
 8001c18:	08027aac 	.word	0x08027aac

08001c1c <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001c1c:	4801      	ldr	r0, [pc, #4]	; (8001c24 <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001c1e:	f7ff bce1 	b.w	80015e4 <_ZN8STM32DMAD1Ev>
 8001c22:	bf00      	nop
 8001c24:	200016f0 	.word	0x200016f0

08001c28 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001c28:	2000      	movs	r0, #0
 8001c2a:	4770      	bx	lr

08001c2c <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001c2c:	8081      	strh	r1, [r0, #4]
    }
 8001c2e:	4770      	bx	lr

08001c30 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001c30:	80c1      	strh	r1, [r0, #6]
    }
 8001c32:	4770      	bx	lr

08001c34 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001c34:	8101      	strh	r1, [r0, #8]
    }
 8001c36:	4770      	bx	lr

08001c38 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001c38:	8141      	strh	r1, [r0, #10]
    }
 8001c3a:	4770      	bx	lr

08001c3c <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001c3c:	4770      	bx	lr

08001c3e <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c3e:	4770      	bx	lr

08001c40 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c40:	4770      	bx	lr

08001c42 <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001c42:	4770      	bx	lr

08001c44 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001c44:	4770      	bx	lr

08001c46 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001c46:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001c48:	88c4      	ldrh	r4, [r0, #6]
 8001c4a:	6803      	ldr	r3, [r0, #0]
 8001c4c:	1b12      	subs	r2, r2, r4
 8001c4e:	8884      	ldrh	r4, [r0, #4]
 8001c50:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001c52:	1b09      	subs	r1, r1, r4
 8001c54:	b212      	sxth	r2, r2
    }
 8001c56:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001c5a:	b209      	sxth	r1, r1
 8001c5c:	4718      	bx	r3

08001c5e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001c5e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001c62:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001c64:	f04f 33ff 	mov.w	r3, #4294967295
 8001c68:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001c6a:	6813      	ldr	r3, [r2, #0]
 8001c6c:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001c6e:	6010      	str	r0, [r2, #0]
    }
 8001c70:	4770      	bx	lr

08001c72 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001c72:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001c76:	b11a      	cbz	r2, 8001c80 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001c78:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001c7c:	b102      	cbz	r2, 8001c80 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001c7e:	6018      	str	r0, [r3, #0]
        }
    }
 8001c80:	4770      	bx	lr

08001c82 <_ZNK8touchgfx15AbstractPainter18getRenderingMethodEv>:
     * @return HARDWARE if painter uses hardware based drawing, SOFTWARE otherwise.
     */
    virtual HAL::RenderingMethod getRenderingMethod() const
    {
        return HAL::SOFTWARE;
    }
 8001c82:	2000      	movs	r0, #0
 8001c84:	4770      	bx	lr

08001c86 <_ZNK8touchgfx15AbstractPainter5setupERKNS_4RectE>:
     *
     * @see AbstractPainter::paint, AbstractPainter::tearDown
     */
    virtual bool setup(const Rect& widgetRect) const
    {
        widgetWidth = widgetRect.width;
 8001c86:	888b      	ldrh	r3, [r1, #4]
 8001c88:	8083      	strh	r3, [r0, #4]
        return true;
    }
 8001c8a:	2001      	movs	r0, #1
 8001c8c:	4770      	bx	lr

08001c8e <_ZNK8touchgfx15AbstractPainter8tearDownEv>:
     * @see AbstractPainter::paint, AbstractPainter::setup
     */
    virtual void tearDown() const
    {
        return;
    }
 8001c8e:	4770      	bx	lr

08001c90 <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001c90:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001c94:	4770      	bx	lr

08001c96 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001c96:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8001c9a:	4770      	bx	lr

08001c9c <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001c9c:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001c9e:	2200      	movs	r2, #0
        return rect.width;
 8001ca0:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001ca4:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001ca8:	8002      	strh	r2, [r0, #0]
 8001caa:	8042      	strh	r2, [r0, #2]
 8001cac:	8084      	strh	r4, [r0, #4]
 8001cae:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001cb0:	bd10      	pop	{r4, pc}

08001cb2 <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	8002      	strh	r2, [r0, #0]
 8001cb6:	8042      	strh	r2, [r0, #2]
 8001cb8:	8082      	strh	r2, [r0, #4]
 8001cba:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001cbc:	4770      	bx	lr
	...

08001cc0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001cc0:	4b03      	ldr	r3, [pc, #12]	; (8001cd0 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0x10>)
 8001cc2:	2290      	movs	r2, #144	; 0x90
 8001cc4:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
 8001cc8:	f883 2358 	strb.w	r2, [r3, #856]	; 0x358

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
    NVIC_SetPriority(LTDC_IRQn, 9);
}
 8001ccc:	4770      	bx	lr
 8001cce:	bf00      	nop
 8001cd0:	e000e100 	.word	0xe000e100

08001cd4 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(LTDC_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001cd4:	4a09      	ldr	r2, [pc, #36]	; (8001cfc <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x28>)
 8001cd6:	490a      	ldr	r1, [pc, #40]	; (8001d00 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x2c>)
 8001cd8:	68d3      	ldr	r3, [r2, #12]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001cda:	480a      	ldr	r0, [pc, #40]	; (8001d04 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv+0x30>)
    lcd_int_active_line = (LTDC->BPCR & 0x7FF) - 1;
 8001cdc:	f3c3 030a 	ubfx	r3, r3, #0, #11
 8001ce0:	3b01      	subs	r3, #1
 8001ce2:	b29b      	uxth	r3, r3
 8001ce4:	800b      	strh	r3, [r1, #0]
    lcd_int_porch_line = (LTDC->AWCR & 0x7FF) - 1;
 8001ce6:	6911      	ldr	r1, [r2, #16]
 8001ce8:	f3c1 010a 	ubfx	r1, r1, #0, #11
 8001cec:	3901      	subs	r1, #1
 8001cee:	8001      	strh	r1, [r0, #0]

    /* Sets the Line Interrupt position */
    LTDC->LIPCR = lcd_int_active_line;
 8001cf0:	6413      	str	r3, [r2, #64]	; 0x40
    /* Line Interrupt Enable            */
    LTDC->IER |= LTDC_IER_LIE;
 8001cf2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8001cf4:	f043 0301 	orr.w	r3, r3, #1
 8001cf8:	6353      	str	r3, [r2, #52]	; 0x34
}
 8001cfa:	4770      	bx	lr
 8001cfc:	40016800 	.word	0x40016800
 8001d00:	2000258c 	.word	0x2000258c
 8001d04:	2000258a 	.word	0x2000258a

08001d08 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    HAL::endFrame();
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
    return (uint16_t*)LTDC_Layer1->CFBAR;
 8001d08:	4b01      	ldr	r3, [pc, #4]	; (8001d10 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv+0x8>)
 8001d0a:	f8d3 00ac 	ldr.w	r0, [r3, #172]	; 0xac
}
 8001d0e:	4770      	bx	lr
 8001d10:	40016800 	.word	0x40016800

08001d14 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d14:	4b02      	ldr	r3, [pc, #8]	; (8001d20 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt+0xc>)

    /* Reload immediate */
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d16:	2201      	movs	r2, #1
    LTDC_Layer1->CFBAR = (uint32_t)adr;
 8001d18:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
    LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001d1c:	625a      	str	r2, [r3, #36]	; 0x24
}
 8001d1e:	4770      	bx	lr
 8001d20:	40016800 	.word	0x40016800

08001d24 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001d24:	b570      	push	{r4, r5, r6, lr}
 8001d26:	4604      	mov	r4, r0
    HAL::initialize();
 8001d28:	f00a f9a1 	bl	800c06e <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001d2c:	6823      	ldr	r3, [r4, #0]
 8001d2e:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001d30:	f00f fdea 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 8001d34:	4601      	mov	r1, r0
 8001d36:	4620      	mov	r0, r4
 8001d38:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001d3a:	6823      	ldr	r3, [r4, #0]
 8001d3c:	4a05      	ldr	r2, [pc, #20]	; (8001d54 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x30>)
 8001d3e:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001d42:	4620      	mov	r0, r4
 8001d44:	46ac      	mov	ip, r5
 8001d46:	2300      	movs	r3, #0
}
 8001d48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)frameBuf, (void*)(frameBuf + sizeof(frameBuf) / (sizeof(uint32_t) * 2)), (void*)0);
 8001d4c:	f5a2 3116 	sub.w	r1, r2, #153600	; 0x25800
 8001d50:	4760      	bx	ip
 8001d52:	bf00      	nop
 8001d54:	d004b000 	.word	0xd004b000

08001d58 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:
    return HAL::beginFrame();
 8001d58:	f00a b970 	b.w	800c03c <_ZN8touchgfx3HAL10beginFrameEv>

08001d5c <_ZN20TouchGFXGeneratedHAL8endFrameEv>:
    if (frameBufferUpdatedThisFrame)
 8001d5c:	f890 304b 	ldrb.w	r3, [r0, #75]	; 0x4b
 8001d60:	b113      	cbz	r3, 8001d68 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xc>
        refreshRequested = true;
 8001d62:	4b02      	ldr	r3, [pc, #8]	; (8001d6c <_ZN20TouchGFXGeneratedHAL8endFrameEv+0x10>)
 8001d64:	2201      	movs	r2, #1
 8001d66:	701a      	strb	r2, [r3, #0]
    HAL::endFrame();
 8001d68:	f00a b974 	b.w	800c054 <_ZN8touchgfx3HAL8endFrameEv>
 8001d6c:	20002588 	.word	0x20002588

08001d70 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001d70:	f00a b92e 	b.w	800bfd0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001d74 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001d74:	f00a ba89 	b.w	800c28a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001d78:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001d7c:	b112      	cbz	r2, 8001d84 <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001d7e:	6803      	ldr	r3, [r0, #0]
 8001d80:	695b      	ldr	r3, [r3, #20]
 8001d82:	4718      	bx	r3
    }
 8001d84:	4770      	bx	lr
	...

08001d88 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d88:	4b03      	ldr	r3, [pc, #12]	; (8001d98 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0x10>)
 8001d8a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001d8e:	609a      	str	r2, [r3, #8]
 8001d90:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001d94:	609a      	str	r2, [r3, #8]
}
 8001d96:	4770      	bx	lr
 8001d98:	e000e100 	.word	0xe000e100

08001d9c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d9c:	4b08      	ldr	r3, [pc, #32]	; (8001dc0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x24>)
 8001d9e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001da2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001da6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001daa:	f3bf 8f6f 	isb	sy
 8001dae:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 8001db2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001db6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001dba:	f3bf 8f6f 	isb	sy
}
 8001dbe:	4770      	bx	lr
 8001dc0:	e000e100 	.word	0xe000e100

08001dc4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>:
public:
    static const uint16_t RMASK = 0xF800; ///< Mask for red   (1111100000000000)
    static const uint16_t GMASK = 0x07E0; ///< Mask for green (0000011111100000)
    static const uint16_t BMASK = 0x001F; ///< Mask for blue  (0000000000011111)

    AbstractPainterRGB565()
 8001dc4:	b570      	push	{r4, r5, r6, lr}
        : widgetWidth(0)
 8001dc6:	2300      	movs	r3, #0
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 8001dc8:	4e12      	ldr	r6, [pc, #72]	; (8001e14 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x50>)
 8001dca:	8083      	strh	r3, [r0, #4]
        : AbstractPainter()
 8001dcc:	4b12      	ldr	r3, [pc, #72]	; (8001e18 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x54>)
 8001dce:	6003      	str	r3, [r0, #0]
 8001dd0:	6833      	ldr	r3, [r6, #0]
 8001dd2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
    AbstractPainterRGB565()
 8001dd6:	4605      	mov	r5, r0
 8001dd8:	b10a      	cbz	r2, 8001dde <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1a>
 8001dda:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001ddc:	b900      	cbnz	r0, 8001de0 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x1c>
        return instance->lcdRef;
 8001dde:	6898      	ldr	r0, [r3, #8]
     *
     * @return True if the format matches the framebuffer format, false otherwise.
     */
    FORCE_INLINE_FUNCTION static bool compatibleFramebuffer(Bitmap::BitmapFormat format)
    {
        bool compat = HAL::lcd().framebufferFormat() == format;
 8001de0:	6803      	ldr	r3, [r0, #0]
 8001de2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001de4:	4798      	blx	r3
        return auxiliaryLCD;
 8001de6:	6833      	ldr	r3, [r6, #0]
 8001de8:	fab0 f480 	clz	r4, r0
 8001dec:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8001dee:	0964      	lsrs	r4, r4, #5
        if (HAL::getInstance()->getAuxiliaryLCD())
 8001df0:	b130      	cbz	r0, 8001e00 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x3c>
        {
            compat |= HAL::getInstance()->getAuxiliaryLCD()->framebufferFormat() == format;
 8001df2:	6803      	ldr	r3, [r0, #0]
 8001df4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8001df6:	4798      	blx	r3
 8001df8:	2800      	cmp	r0, #0
 8001dfa:	bf08      	it	eq
 8001dfc:	f044 0401 	orreq.w	r4, r4, #1
    {
        assert(compatibleFramebuffer(Bitmap::RGB565) && "The chosen painter only works with RGB565 displays");
 8001e00:	b92c      	cbnz	r4, 8001e0e <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x4a>
 8001e02:	4b06      	ldr	r3, [pc, #24]	; (8001e1c <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x58>)
 8001e04:	4a06      	ldr	r2, [pc, #24]	; (8001e20 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x5c>)
 8001e06:	4807      	ldr	r0, [pc, #28]	; (8001e24 <_ZN8touchgfx21AbstractPainterRGB565C1Ev+0x60>)
 8001e08:	212c      	movs	r1, #44	; 0x2c
 8001e0a:	f020 fed9 	bl	8022bc0 <__assert_func>
    }
 8001e0e:	4628      	mov	r0, r5
 8001e10:	bd70      	pop	{r4, r5, r6, pc}
 8001e12:	bf00      	nop
 8001e14:	20013758 	.word	0x20013758
 8001e18:	08027fdc 	.word	0x08027fdc
 8001e1c:	08027ed8 	.word	0x08027ed8
 8001e20:	08027f36 	.word	0x08027f36
 8001e24:	08027f6f 	.word	0x08027f6f

08001e28 <HAL_LTDC_LineEventCallback>:
}

extern "C"
{
    void HAL_LTDC_LineEventCallback(LTDC_HandleTypeDef* hltdc)
    {
 8001e28:	b510      	push	{r4, lr}
        return instance;
 8001e2a:	4c14      	ldr	r4, [pc, #80]	; (8001e7c <HAL_LTDC_LineEventCallback+0x54>)
        if (!HAL::getInstance())
 8001e2c:	6823      	ldr	r3, [r4, #0]
 8001e2e:	b323      	cbz	r3, 8001e7a <HAL_LTDC_LineEventCallback+0x52>
        {
            return;
        }

        if (LTDC->LIPCR == lcd_int_active_line)
 8001e30:	4b13      	ldr	r3, [pc, #76]	; (8001e80 <HAL_LTDC_LineEventCallback+0x58>)
 8001e32:	4a14      	ldr	r2, [pc, #80]	; (8001e84 <HAL_LTDC_LineEventCallback+0x5c>)
 8001e34:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e36:	8811      	ldrh	r1, [r2, #0]
 8001e38:	428b      	cmp	r3, r1
 8001e3a:	d113      	bne.n	8001e64 <HAL_LTDC_LineEventCallback+0x3c>
        {
            //entering active area
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_porch_line);
 8001e3c:	4b12      	ldr	r3, [pc, #72]	; (8001e88 <HAL_LTDC_LineEventCallback+0x60>)
 8001e3e:	8819      	ldrh	r1, [r3, #0]
 8001e40:	f005 fc30 	bl	80076a4 <HAL_LTDC_ProgramLineEvent>
 8001e44:	6822      	ldr	r2, [r4, #0]
        vSyncCnt++;
 8001e46:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8001e4a:	3301      	adds	r3, #1
 8001e4c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
            HAL::getInstance()->vSync();
            OSWrappers::signalVSync();
 8001e50:	f7ff fb76 	bl	8001540 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

            // Swap frame buffers immediately instead of waiting for the task to be scheduled in.
            // Note: task will also swap when it wakes up, but that operation is guarded and will not have
            // any effect if already swapped.
            HAL::getInstance()->swapFrameBuffers();
 8001e54:	6820      	ldr	r0, [r4, #0]
 8001e56:	f00a fe4f 	bl	800caf8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>

            // Signal to the framework that display update has finished.
            HAL::getInstance()->frontPorchEntered();
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8001e5a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::set(GPIO::VSYNC_FREQ);
 8001e5e:	2000      	movs	r0, #0
 8001e60:	f7ff b9b6 	b.w	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
            HAL_LTDC_ProgramLineEvent(hltdc, lcd_int_active_line);
 8001e64:	f005 fc1e 	bl	80076a4 <HAL_LTDC_ProgramLineEvent>
        return instance;
 8001e68:	6820      	ldr	r0, [r4, #0]
        allowDMATransfers();
 8001e6a:	6803      	ldr	r3, [r0, #0]
 8001e6c:	6a1b      	ldr	r3, [r3, #32]
 8001e6e:	4798      	blx	r3
    }
 8001e70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001e74:	2000      	movs	r0, #0
 8001e76:	f7ff b9d5 	b.w	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
    }
 8001e7a:	bd10      	pop	{r4, pc}
 8001e7c:	20013758 	.word	0x20013758
 8001e80:	40016800 	.word	0x40016800
 8001e84:	2000258c 	.word	0x2000258c
 8001e88:	2000258a 	.word	0x2000258a

08001e8c <bPrepareMessage>:
#include <stdio.h>

static bool bPrepareMessage(xQueueMsgFormat_t *pxQueueMsg, enModuleId_t enModuleSource, enQueueMsgId_t enMsgId, enQueueMsgType_t enMsgType, uint8_t u8MsgLength, void* vPayload);

static bool bPrepareMessage(xQueueMsgFormat_t *pxQueueMsg, enModuleId_t enModuleSource, enQueueMsgId_t enMsgId, enQueueMsgType_t enMsgType, uint8_t u8MsgLength, void* vPayload)
{
 8001e8c:	b510      	push	{r4, lr}
 8001e8e:	460c      	mov	r4, r1
 8001e90:	f89d 1008 	ldrb.w	r1, [sp, #8]
	bool bRetValue = false;
	uint8_t u8Index;

	pxQueueMsg->enModuleSource = enModuleSource;
 8001e94:	7004      	strb	r4, [r0, #0]
	pxQueueMsg->enMsgId = enMsgId;
 8001e96:	7042      	strb	r2, [r0, #1]
	pxQueueMsg->enMsgType = enMsgType;
 8001e98:	7083      	strb	r3, [r0, #2]
	pxQueueMsg->enMsgLength = u8MsgLength;
 8001e9a:	70c1      	strb	r1, [r0, #3]
	switch(pxQueueMsg->enMsgType)
 8001e9c:	2b05      	cmp	r3, #5
 8001e9e:	d819      	bhi.n	8001ed4 <bPrepareMessage+0x48>
 8001ea0:	e8df f003 	tbb	[pc, r3]
 8001ea4:	1a1a0703 	.word	0x1a1a0703
 8001ea8:	2929      	.short	0x2929
	{
		case enQueueMsgType_NONE:
			//printf("SendQueue function debug: Msg type None\n");
			pxQueueMsg->enMsgLength = 0; // force msg length to 0 just to avoid problems in case enMsgLength wasn't 0
 8001eaa:	2300      	movs	r3, #0
 8001eac:	70c3      	strb	r3, [r0, #3]
			{
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
				{
					pxQueueMsg->enMsgPayload.f[u8Index] = ((float*)vPayload)[u8Index];
				}
				bRetValue = true;
 8001eae:	2001      	movs	r0, #1
//			"		Msg ID: %d | Msg Type:%d | Msg Length: %d\n",\
//			pxQueueMsg->enModuleSource,\
//			pxQueueMsg->enMsgId, pxQueueMsg->enMsgType, pxQueueMsg->enMsgLength);

	return bRetValue;
}
 8001eb0:	bd10      	pop	{r4, pc}
			if(pxQueueMsg->enMsgLength <= QUEUE_MSG_MAX_LENGTH_FLOAT)
 8001eb2:	290a      	cmp	r1, #10
 8001eb4:	d80a      	bhi.n	8001ecc <bPrepareMessage+0x40>
 8001eb6:	9b03      	ldr	r3, [sp, #12]
 8001eb8:	3004      	adds	r0, #4
 8001eba:	eb03 0181 	add.w	r1, r3, r1, lsl #2
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001ebe:	428b      	cmp	r3, r1
 8001ec0:	d0f5      	beq.n	8001eae <bPrepareMessage+0x22>
					pxQueueMsg->enMsgPayload.f[u8Index] = ((float*)vPayload)[u8Index];
 8001ec2:	f853 2b04 	ldr.w	r2, [r3], #4
 8001ec6:	f840 2b04 	str.w	r2, [r0], #4
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001eca:	e7f8      	b.n	8001ebe <bPrepareMessage+0x32>
				printf("SendQueue function debug: Error Msg length(%d) exceed max(%d)!!\n", pxQueueMsg->enMsgLength, QUEUE_MSG_MAX_LENGTH_FLOAT);
 8001ecc:	220a      	movs	r2, #10
				printf("SendQueue function debug: Error Msg length(%d) exceed max(%d)!!\n", pxQueueMsg->enMsgLength, QUEUE_MSG_MAX_LENGTH_UINT8);
 8001ece:	4811      	ldr	r0, [pc, #68]	; (8001f14 <bPrepareMessage+0x88>)
 8001ed0:	f021 ffbe 	bl	8023e50 <iprintf>
	switch(pxQueueMsg->enMsgType)
 8001ed4:	2000      	movs	r0, #0
 8001ed6:	e7eb      	b.n	8001eb0 <bPrepareMessage+0x24>
			if(pxQueueMsg->enMsgLength <= QUEUE_MSG_MAX_LENGTH_UINT16)
 8001ed8:	2914      	cmp	r1, #20
 8001eda:	d80a      	bhi.n	8001ef2 <bPrepareMessage+0x66>
 8001edc:	9b03      	ldr	r3, [sp, #12]
 8001ede:	3004      	adds	r0, #4
 8001ee0:	eb03 0141 	add.w	r1, r3, r1, lsl #1
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001ee4:	428b      	cmp	r3, r1
 8001ee6:	d0e2      	beq.n	8001eae <bPrepareMessage+0x22>
					pxQueueMsg->enMsgPayload.ui16[u8Index] = ((uint16_t*)vPayload)[u8Index];
 8001ee8:	f833 2b02 	ldrh.w	r2, [r3], #2
 8001eec:	f820 2b02 	strh.w	r2, [r0], #2
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001ef0:	e7f8      	b.n	8001ee4 <bPrepareMessage+0x58>
				printf("SendQueue function debug: Error Msg length(%d) exceed max(%d)!!\n", pxQueueMsg->enMsgLength, QUEUE_MSG_MAX_LENGTH_UINT16);
 8001ef2:	2214      	movs	r2, #20
 8001ef4:	e7eb      	b.n	8001ece <bPrepareMessage+0x42>
			if(pxQueueMsg->enMsgLength <= QUEUE_MSG_MAX_LENGTH_UINT8)
 8001ef6:	2928      	cmp	r1, #40	; 0x28
 8001ef8:	d809      	bhi.n	8001f0e <bPrepareMessage+0x82>
 8001efa:	9b03      	ldr	r3, [sp, #12]
 8001efc:	3004      	adds	r0, #4
 8001efe:	4419      	add	r1, r3
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001f00:	428b      	cmp	r3, r1
 8001f02:	d0d4      	beq.n	8001eae <bPrepareMessage+0x22>
					pxQueueMsg->enMsgPayload.ui8[u8Index] = ((uint8_t*)vPayload)[u8Index];
 8001f04:	f813 2b01 	ldrb.w	r2, [r3], #1
 8001f08:	f800 2b01 	strb.w	r2, [r0], #1
				for(u8Index=0; u8Index<pxQueueMsg->enMsgLength; u8Index++)
 8001f0c:	e7f8      	b.n	8001f00 <bPrepareMessage+0x74>
				printf("SendQueue function debug: Error Msg length(%d) exceed max(%d)!!\n", pxQueueMsg->enMsgLength, QUEUE_MSG_MAX_LENGTH_UINT8);
 8001f0e:	2228      	movs	r2, #40	; 0x28
 8001f10:	e7dd      	b.n	8001ece <bPrepareMessage+0x42>
 8001f12:	bf00      	nop
 8001f14:	08027ff4 	.word	0x08027ff4

08001f18 <bSendQueue>:

bool bSendQueue(enModuleId_t enModuleSource, enModuleId_t enModuleDestination, enQueueMsgId_t enMsgId, enQueueMsgType_t enMsgType, uint8_t u8MsgLength, void* vPayload)
{
 8001f18:	b530      	push	{r4, r5, lr}
 8001f1a:	b08f      	sub	sp, #60	; 0x3c
 8001f1c:	460c      	mov	r4, r1
//		default:
//			printf("SendQueue function debug: Error Msg type not supported!!\n");
//			bRetValue = false;
//			break;
//	}
	if(bPrepareMessage(&xQueueMsg, enModuleSource, enMsgId, enMsgType, u8MsgLength, vPayload))
 8001f1e:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8001f20:	9101      	str	r1, [sp, #4]
 8001f22:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 8001f26:	9100      	str	r1, [sp, #0]
 8001f28:	4601      	mov	r1, r0
 8001f2a:	a803      	add	r0, sp, #12
 8001f2c:	f7ff ffae 	bl	8001e8c <bPrepareMessage>
 8001f30:	4605      	mov	r5, r0
 8001f32:	2800      	cmp	r0, #0
 8001f34:	d03b      	beq.n	8001fae <bSendQueue+0x96>
	{
		printf("SendQueue function:\n"\
 8001f36:	f89d 300f 	ldrb.w	r3, [sp, #15]
 8001f3a:	9301      	str	r3, [sp, #4]
 8001f3c:	f89d 300e 	ldrb.w	r3, [sp, #14]
 8001f40:	9300      	str	r3, [sp, #0]
 8001f42:	f89d 100c 	ldrb.w	r1, [sp, #12]
 8001f46:	f89d 300d 	ldrb.w	r3, [sp, #13]
 8001f4a:	481a      	ldr	r0, [pc, #104]	; (8001fb4 <bSendQueue+0x9c>)
 8001f4c:	4622      	mov	r2, r4
 8001f4e:	f021 ff7f 	bl	8023e50 <iprintf>
				"		Module Source: %d | Module Destination: %d\n"\
				"		Msg ID: %d | Msg Type:%d | Msg Length: %d\n",\
				xQueueMsg.enModuleSource, enModuleDestination,\
				xQueueMsg.enMsgId, xQueueMsg.enMsgType, xQueueMsg.enMsgLength);
		switch(enModuleDestination)
 8001f52:	2c01      	cmp	r4, #1
 8001f54:	d01b      	beq.n	8001f8e <bSendQueue+0x76>
 8001f56:	2c02      	cmp	r4, #2
 8001f58:	d011      	beq.n	8001f7e <bSendQueue+0x66>
 8001f5a:	bb04      	cbnz	r4, 8001f9e <bSendQueue+0x86>
		{
			case enModule_BackendSystem:
				printf("SendQueue: Send Queue msg to BackendSystem\n");
 8001f5c:	4816      	ldr	r0, [pc, #88]	; (8001fb8 <bSendQueue+0xa0>)
 8001f5e:	f022 f813 	bl	8023f88 <puts>
				xSendResult = osMessageQueuePut(xBackendSystemQueueHandle, &xQueueMsg, 0, 20);
 8001f62:	4816      	ldr	r0, [pc, #88]	; (8001fbc <bSendQueue+0xa4>)
 8001f64:	2314      	movs	r3, #20
 8001f66:	4622      	mov	r2, r4
 8001f68:	a903      	add	r1, sp, #12
				printf("SendQueue: Send Queue msg to Frontend\n");
				xSendResult = osMessageQueuePut(xFrontendQueueHandle, &xQueueMsg, 0, 20);
				break;
			case enModule_Daq:
				printf("SendQueue: Send Queue msg to Daq\n");
				xSendResult = osMessageQueuePut(xDaqQueueHandle, &xQueueMsg, 0, 20);
 8001f6a:	6800      	ldr	r0, [r0, #0]
 8001f6c:	f007 f927 	bl	80091be <osMessageQueuePut>
				break;
			default:
				xSendResult = osError;
				break;
		}
		if(xSendResult == osOK)
 8001f70:	b9b8      	cbnz	r0, 8001fa2 <bSendQueue+0x8a>
		{
			printf("SendQueue function debug: Send Queue msg successfully.\n");
 8001f72:	4813      	ldr	r0, [pc, #76]	; (8001fc0 <bSendQueue+0xa8>)
 8001f74:	f022 f808 	bl	8023f88 <puts>
			bRetValue = false;
		}
	}

	return bRetValue;
}
 8001f78:	4628      	mov	r0, r5
 8001f7a:	b00f      	add	sp, #60	; 0x3c
 8001f7c:	bd30      	pop	{r4, r5, pc}
				printf("SendQueue: Send Queue msg to Frontend\n");
 8001f7e:	4811      	ldr	r0, [pc, #68]	; (8001fc4 <bSendQueue+0xac>)
 8001f80:	f022 f802 	bl	8023f88 <puts>
				xSendResult = osMessageQueuePut(xFrontendQueueHandle, &xQueueMsg, 0, 20);
 8001f84:	4810      	ldr	r0, [pc, #64]	; (8001fc8 <bSendQueue+0xb0>)
 8001f86:	2314      	movs	r3, #20
 8001f88:	2200      	movs	r2, #0
 8001f8a:	a903      	add	r1, sp, #12
 8001f8c:	e7ed      	b.n	8001f6a <bSendQueue+0x52>
				printf("SendQueue: Send Queue msg to Daq\n");
 8001f8e:	480f      	ldr	r0, [pc, #60]	; (8001fcc <bSendQueue+0xb4>)
 8001f90:	f021 fffa 	bl	8023f88 <puts>
				xSendResult = osMessageQueuePut(xDaqQueueHandle, &xQueueMsg, 0, 20);
 8001f94:	480e      	ldr	r0, [pc, #56]	; (8001fd0 <bSendQueue+0xb8>)
 8001f96:	2314      	movs	r3, #20
 8001f98:	2200      	movs	r2, #0
 8001f9a:	a903      	add	r1, sp, #12
 8001f9c:	e7e5      	b.n	8001f6a <bSendQueue+0x52>
		switch(enModuleDestination)
 8001f9e:	f04f 30ff 	mov.w	r0, #4294967295
			printf("SendQueue function debug: Send Queue msg failed(%d)!!\n", xSendResult);
 8001fa2:	4601      	mov	r1, r0
 8001fa4:	480b      	ldr	r0, [pc, #44]	; (8001fd4 <bSendQueue+0xbc>)
 8001fa6:	f021 ff53 	bl	8023e50 <iprintf>
			bRetValue = false;
 8001faa:	2500      	movs	r5, #0
 8001fac:	e7e4      	b.n	8001f78 <bSendQueue+0x60>
	bool bRetValue = true;
 8001fae:	2501      	movs	r5, #1
 8001fb0:	e7e2      	b.n	8001f78 <bSendQueue+0x60>
 8001fb2:	bf00      	nop
 8001fb4:	08028035 	.word	0x08028035
 8001fb8:	080280a3 	.word	0x080280a3
 8001fbc:	2000288c 	.word	0x2000288c
 8001fc0:	08028115 	.word	0x08028115
 8001fc4:	080280ce 	.word	0x080280ce
 8001fc8:	200028d0 	.word	0x200028d0
 8001fcc:	080280f4 	.word	0x080280f4
 8001fd0:	200028cc 	.word	0x200028cc
 8001fd4:	0802814c 	.word	0x0802814c

08001fd8 <bSendQueueFromIsr>:

bool bSendQueueFromIsr(enModuleId_t enModuleSource, enModuleId_t enModuleDestination, enQueueMsgId_t enMsgId, enQueueMsgType_t enMsgType, uint8_t u8MsgLength, void* vPayload)
{
 8001fd8:	b510      	push	{r4, lr}
 8001fda:	b08e      	sub	sp, #56	; 0x38
 8001fdc:	460c      	mov	r4, r1
	bool bRetValue = true;
	osStatus_t xSendResult;
	xQueueMsgFormat_t xQueueMsg;

	if(bPrepareMessage(&xQueueMsg, enModuleSource, enMsgId, enMsgType, u8MsgLength, vPayload))
 8001fde:	9911      	ldr	r1, [sp, #68]	; 0x44
 8001fe0:	9101      	str	r1, [sp, #4]
 8001fe2:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8001fe6:	9100      	str	r1, [sp, #0]
 8001fe8:	4601      	mov	r1, r0
 8001fea:	a803      	add	r0, sp, #12
 8001fec:	f7ff ff4e 	bl	8001e8c <bPrepareMessage>
 8001ff0:	b1d0      	cbz	r0, 8002028 <bSendQueueFromIsr+0x50>
//				"		Module Source: %d | Module Destination: %d\n"\
//				"		Msg ID: %d | Msg Type:%d | Msg Length: %d\n",\
//				xQueueMsg.enModuleSource, enModuleDestination,\
//				xQueueMsg.enMsgId, xQueueMsg.enMsgType, xQueueMsg.enMsgLength);

		switch(enModuleDestination)
 8001ff2:	2c01      	cmp	r4, #1
 8001ff4:	d013      	beq.n	800201e <bSendQueueFromIsr+0x46>
 8001ff6:	2c02      	cmp	r4, #2
 8001ff8:	d00c      	beq.n	8002014 <bSendQueueFromIsr+0x3c>
 8001ffa:	b9bc      	cbnz	r4, 800202c <bSendQueueFromIsr+0x54>
		{
			case enModule_BackendSystem:
				//printf("SendQueue: Send Queue msg to BackendSystem\n");
				xSendResult = osMessageQueuePut(xBackendSystemQueueHandle, &xQueueMsg, 0, 0);
 8001ffc:	480c      	ldr	r0, [pc, #48]	; (8002030 <bSendQueueFromIsr+0x58>)
 8001ffe:	4623      	mov	r3, r4
 8002000:	4622      	mov	r2, r4
 8002002:	a903      	add	r1, sp, #12
				//printf("SendQueue: Send Queue msg to Frontend\n");
				xSendResult = osMessageQueuePut(xFrontendQueueHandle, &xQueueMsg, 0, 0);
				break;
			case enModule_Daq:
				//printf("SendQueue: Send Queue msg to Daq\n");
				xSendResult = osMessageQueuePut(xDaqQueueHandle, &xQueueMsg, 0, 0);
 8002004:	6800      	ldr	r0, [r0, #0]
 8002006:	f007 f8da 	bl	80091be <osMessageQueuePut>
				break;
			default:
				xSendResult = osError;
				break;
		}
		if(xSendResult == osOK)
 800200a:	fab0 f080 	clz	r0, r0
 800200e:	0940      	lsrs	r0, r0, #5
			bRetValue = false;
		}
	}

	return bRetValue;
}
 8002010:	b00e      	add	sp, #56	; 0x38
 8002012:	bd10      	pop	{r4, pc}
				xSendResult = osMessageQueuePut(xFrontendQueueHandle, &xQueueMsg, 0, 0);
 8002014:	2300      	movs	r3, #0
 8002016:	4807      	ldr	r0, [pc, #28]	; (8002034 <bSendQueueFromIsr+0x5c>)
 8002018:	461a      	mov	r2, r3
 800201a:	a903      	add	r1, sp, #12
 800201c:	e7f2      	b.n	8002004 <bSendQueueFromIsr+0x2c>
				xSendResult = osMessageQueuePut(xDaqQueueHandle, &xQueueMsg, 0, 0);
 800201e:	2300      	movs	r3, #0
 8002020:	4805      	ldr	r0, [pc, #20]	; (8002038 <bSendQueueFromIsr+0x60>)
 8002022:	461a      	mov	r2, r3
 8002024:	a903      	add	r1, sp, #12
 8002026:	e7ed      	b.n	8002004 <bSendQueueFromIsr+0x2c>
	bool bRetValue = true;
 8002028:	2001      	movs	r0, #1
 800202a:	e7f1      	b.n	8002010 <bSendQueueFromIsr+0x38>
		switch(enModuleDestination)
 800202c:	2000      	movs	r0, #0
 800202e:	e7ef      	b.n	8002010 <bSendQueueFromIsr+0x38>
 8002030:	2000288c 	.word	0x2000288c
 8002034:	200028d0 	.word	0x200028d0
 8002038:	200028cc 	.word	0x200028cc

0800203c <bReceiveQueue>:
bool bReceiveQueue(enModuleId_t enModule, xQueueMsgFormat_t* xMsg, uint32_t u32WaitingTime)
{
	bool bRetValue;
	osStatus_t  xReceiveResult;

	switch(enModule)
 800203c:	2801      	cmp	r0, #1
{
 800203e:	b508      	push	{r3, lr}
 8002040:	4613      	mov	r3, r2
	switch(enModule)
 8002042:	d00e      	beq.n	8002062 <bReceiveQueue+0x26>
 8002044:	2802      	cmp	r0, #2
 8002046:	d009      	beq.n	800205c <bReceiveQueue+0x20>
 8002048:	b970      	cbnz	r0, 8002068 <bReceiveQueue+0x2c>
	{
		case enModule_BackendSystem:
			xReceiveResult = osMessageQueueGet(xBackendSystemQueueHandle, xMsg, 0, u32WaitingTime);
 800204a:	4602      	mov	r2, r0
 800204c:	4807      	ldr	r0, [pc, #28]	; (800206c <bReceiveQueue+0x30>)
			break;
		case enModule_Frontend:
			xReceiveResult = osMessageQueueGet(xFrontendQueueHandle, xMsg, 0, u32WaitingTime);
			break;
		case enModule_Daq:
			xReceiveResult = osMessageQueueGet(xDaqQueueHandle, xMsg, 0, u32WaitingTime);
 800204e:	6800      	ldr	r0, [r0, #0]
 8002050:	f007 f8e5 	bl	800921e <osMessageQueueGet>
			break;
		default:
			xReceiveResult = osError;
			break;
	}
	if(xReceiveResult == osOK)
 8002054:	fab0 f080 	clz	r0, r0
 8002058:	0940      	lsrs	r0, r0, #5
	{
		bRetValue = false;
	}

	return bRetValue;
}
 800205a:	bd08      	pop	{r3, pc}
			xReceiveResult = osMessageQueueGet(xFrontendQueueHandle, xMsg, 0, u32WaitingTime);
 800205c:	4804      	ldr	r0, [pc, #16]	; (8002070 <bReceiveQueue+0x34>)
 800205e:	2200      	movs	r2, #0
 8002060:	e7f5      	b.n	800204e <bReceiveQueue+0x12>
			xReceiveResult = osMessageQueueGet(xDaqQueueHandle, xMsg, 0, u32WaitingTime);
 8002062:	4804      	ldr	r0, [pc, #16]	; (8002074 <bReceiveQueue+0x38>)
 8002064:	2200      	movs	r2, #0
 8002066:	e7f2      	b.n	800204e <bReceiveQueue+0x12>
	switch(enModule)
 8002068:	2000      	movs	r0, #0
 800206a:	e7f6      	b.n	800205a <bReceiveQueue+0x1e>
 800206c:	2000288c 	.word	0x2000288c
 8002070:	200028d0 	.word	0x200028d0
 8002074:	200028cc 	.word	0x200028cc

08002078 <StartDaqTask>:
static void vWaitingForCycle_SmHandler();
static void vReadData_SmHandler();
static void vStopAutoSendTemperature_SmHandler();

void StartDaqTask(void *argument)
{
 8002078:	b58f      	push	{r0, r1, r2, r3, r7, lr}
}

static void vDaqTaskInit()
{
	xDaqStatus.bIsAutoSendTemperatureEnabled = false;
	xDaqStatus.iAutoSendTemperatureDelay = 10000;
 800207a:	4c5c      	ldr	r4, [pc, #368]	; (80021ec <StartDaqTask+0x174>)
	xDaqStatus.enTemperatureUnit = enTemperatureUnitC;
	vTemperatureSensorConfig(&hi2c3);
 800207c:	485c      	ldr	r0, [pc, #368]	; (80021f0 <StartDaqTask+0x178>)
	}
}

static void vCmdHandler_SmHandler()
{
	printf("**DaqTask: vCmdHandler_SmHandler**\n");
 800207e:	4e5d      	ldr	r6, [pc, #372]	; (80021f4 <StartDaqTask+0x17c>)
	// in future we can use another alternative beside timer (exemple: timeout = cycle duration)
}

static void vReadData_SmHandler()
{
	printf("**DaqTask: vReadData_SmHandler**\n");
 8002080:	f8df 818c 	ldr.w	r8, [pc, #396]	; 8002210 <StartDaqTask+0x198>
	xDaqStatus.bIsAutoSendTemperatureEnabled = false;
 8002084:	2500      	movs	r5, #0
	xDaqStatus.iAutoSendTemperatureDelay = 10000;
 8002086:	f242 7310 	movw	r3, #10000	; 0x2710
 800208a:	63e3      	str	r3, [r4, #60]	; 0x3c
	xDaqStatus.bIsAutoSendTemperatureEnabled = false;
 800208c:	8725      	strh	r5, [r4, #56]	; 0x38
	vTemperatureSensorConfig(&hi2c3);
 800208e:	f003 fdf1 	bl	8005c74 <vSht35Config>
	bTemperatureSensorInit();
 8002092:	f003 fe39 	bl	8005d08 <bSht35Init>
	xDaqStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 8002096:	f04f 33ff 	mov.w	r3, #4294967295
	bSendQueue(enModule_Daq, enModule_BackendSystem, enQueueMsg_BackendSystemInitDone, enQueueMsgType_NONE, 0, NULL); // inform Backend system that daq module initialization is done
 800209a:	2201      	movs	r2, #1
	xDaqStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 800209c:	6063      	str	r3, [r4, #4]
	bSendQueue(enModule_Daq, enModule_BackendSystem, enQueueMsg_BackendSystemInitDone, enQueueMsgType_NONE, 0, NULL); // inform Backend system that daq module initialization is done
 800209e:	e9cd 5500 	strd	r5, r5, [sp]
 80020a2:	462b      	mov	r3, r5
 80020a4:	4629      	mov	r1, r5
 80020a6:	4610      	mov	r0, r2
	xDaqStatus.enDaqStateMachine = enDaqStateMachine_CmdHanlder;
 80020a8:	7025      	strb	r5, [r4, #0]
	bSendQueue(enModule_Daq, enModule_BackendSystem, enQueueMsg_BackendSystemInitDone, enQueueMsgType_NONE, 0, NULL); // inform Backend system that daq module initialization is done
 80020aa:	f7ff ff35 	bl	8001f18 <bSendQueue>
		xDaqStatus.bRxQueueStatus = bReceiveQueue(enModule_Daq, &(xDaqStatus.xMsg), xDaqStatus.u32StateTimeout);
 80020ae:	f104 070c 	add.w	r7, r4, #12
 80020b2:	6862      	ldr	r2, [r4, #4]
 80020b4:	4639      	mov	r1, r7
 80020b6:	2001      	movs	r0, #1
 80020b8:	f7ff ffc0 	bl	800203c <bReceiveQueue>
 80020bc:	7220      	strb	r0, [r4, #8]
		if(xDaqStatus.bRxQueueStatus)
 80020be:	2800      	cmp	r0, #0
 80020c0:	d0f7      	beq.n	80020b2 <StartDaqTask+0x3a>
	if(xDaqStatus.enDaqStateMachine == enDaqStateMachine_CmdHanlder)
 80020c2:	7823      	ldrb	r3, [r4, #0]
 80020c4:	2b00      	cmp	r3, #0
 80020c6:	d136      	bne.n	8002136 <StartDaqTask+0xbe>
		if(xDaqStatus.xMsg.enModuleSource == enModule_BackendSystem)
 80020c8:	7b25      	ldrb	r5, [r4, #12]
 80020ca:	2d00      	cmp	r5, #0
 80020cc:	d1f1      	bne.n	80020b2 <StartDaqTask+0x3a>
			if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqConfig)
 80020ce:	7b63      	ldrb	r3, [r4, #13]
 80020d0:	2b08      	cmp	r3, #8
 80020d2:	f000 8085 	beq.w	80021e0 <StartDaqTask+0x168>
			else if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqGetTemperature)
 80020d6:	2b09      	cmp	r3, #9
 80020d8:	d11b      	bne.n	8002112 <StartDaqTask+0x9a>
	printf("**DaqTask: vGetTemperature_SmHandler**\n");
 80020da:	4847      	ldr	r0, [pc, #284]	; (80021f8 <StartDaqTask+0x180>)
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_GetTemperature;
 80020dc:	f04f 0901 	mov.w	r9, #1
 80020e0:	f884 9000 	strb.w	r9, [r4]
	printf("**DaqTask: vGetTemperature_SmHandler**\n");
 80020e4:	f021 ff50 	bl	8023f88 <puts>
	fTemperatureTmp++; // virtual temperature
 80020e8:	4b44      	ldr	r3, [pc, #272]	; (80021fc <StartDaqTask+0x184>)
 80020ea:	edd3 7a00 	vldr	s15, [r3]
 80020ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80020f2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80020f6:	edc3 7a00 	vstr	s15, [r3]
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCmd, enQueueMsgType_NONE, 0, NULL);
 80020fa:	e9cd 5500 	strd	r5, r5, [sp]
	xDaqStatus.u32StateTimeout = osWaitForever;
 80020fe:	f04f 33ff 	mov.w	r3, #4294967295
 8002102:	6063      	str	r3, [r4, #4]
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCmd, enQueueMsgType_NONE, 0, NULL);
 8002104:	462b      	mov	r3, r5
static void vStopAutoSendTemperature_SmHandler()
{
	printf("**DaqTask: vStopAutoSendTemperature_SmHandler**\n");
	HAL_TIM_Base_Stop_IT(&htim2);
	xDaqStatus.u32StateTimeout = osWaitForever;
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCmd, enQueueMsgType_NONE, 0, NULL);
 8002106:	2207      	movs	r2, #7
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCycle, enQueueMsgType_NONE, 0, NULL);
 8002108:	2101      	movs	r1, #1
 800210a:	4608      	mov	r0, r1
 800210c:	f7ff ff04 	bl	8001f18 <bSendQueue>
}
 8002110:	e7cf      	b.n	80020b2 <StartDaqTask+0x3a>
			else if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqEnableAutoTemperature)
 8002112:	2b0a      	cmp	r3, #10
 8002114:	d1cd      	bne.n	80020b2 <StartDaqTask+0x3a>
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_StartAutoTemperature;
 8002116:	2302      	movs	r3, #2
	printf("**DaqTask: vStartAutoSendTemperature_SmHandler**\n");
 8002118:	4839      	ldr	r0, [pc, #228]	; (8002200 <StartDaqTask+0x188>)
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_StartAutoTemperature;
 800211a:	7023      	strb	r3, [r4, #0]
	printf("**DaqTask: vStartAutoSendTemperature_SmHandler**\n");
 800211c:	f021 ff34 	bl	8023f88 <puts>
	HAL_TIM_Base_Start_IT(&htim2);
 8002120:	4838      	ldr	r0, [pc, #224]	; (8002204 <StartDaqTask+0x18c>)
 8002122:	f006 fa61 	bl	80085e8 <HAL_TIM_Base_Start_IT>
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCycle, enQueueMsgType_NONE, 0, NULL);
 8002126:	e9cd 5500 	strd	r5, r5, [sp]
	xDaqStatus.u32StateTimeout = osWaitForever;
 800212a:	f04f 33ff 	mov.w	r3, #4294967295
 800212e:	6063      	str	r3, [r4, #4]
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCycle, enQueueMsgType_NONE, 0, NULL);
 8002130:	462b      	mov	r3, r5
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCycle, enQueueMsgType_NONE, 0, NULL);
 8002132:	220b      	movs	r2, #11
 8002134:	e7e8      	b.n	8002108 <StartDaqTask+0x90>
	else if(xDaqStatus.enDaqStateMachine == enDaqStateMachine_StartAutoTemperature)
 8002136:	2b02      	cmp	r3, #2
 8002138:	d10e      	bne.n	8002158 <StartDaqTask+0xe0>
		if(xDaqStatus.xMsg.enModuleSource == enModule_Daq)
 800213a:	7b23      	ldrb	r3, [r4, #12]
 800213c:	2b01      	cmp	r3, #1
 800213e:	d151      	bne.n	80021e4 <StartDaqTask+0x16c>
			if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqWaitForCycle)
 8002140:	7b63      	ldrb	r3, [r4, #13]
 8002142:	2b0b      	cmp	r3, #11
 8002144:	d1b5      	bne.n	80020b2 <StartDaqTask+0x3a>
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_WaitForCycle;
 8002146:	2303      	movs	r3, #3
	printf("**DaqTask: vWaitingForCycle_SmHandler**\n");
 8002148:	482f      	ldr	r0, [pc, #188]	; (8002208 <StartDaqTask+0x190>)
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_WaitForCycle;
 800214a:	7023      	strb	r3, [r4, #0]
	printf("**DaqTask: vCmdHandler_SmHandler**\n");
 800214c:	f021 ff1c 	bl	8023f88 <puts>
	xDaqStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 8002150:	f04f 33ff 	mov.w	r3, #4294967295
 8002154:	6063      	str	r3, [r4, #4]
}
 8002156:	e7ac      	b.n	80020b2 <StartDaqTask+0x3a>
	else if(xDaqStatus.enDaqStateMachine == enDaqStateMachine_WaitForCycle)
 8002158:	2b03      	cmp	r3, #3
 800215a:	d132      	bne.n	80021c2 <StartDaqTask+0x14a>
		if(xDaqStatus.xMsg.enModuleSource == enModule_Daq)
 800215c:	7b25      	ldrb	r5, [r4, #12]
 800215e:	2d01      	cmp	r5, #1
 8002160:	d11b      	bne.n	800219a <StartDaqTask+0x122>
			if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqDataReady)
 8002162:	7b63      	ldrb	r3, [r4, #13]
 8002164:	2b0c      	cmp	r3, #12
 8002166:	d1a4      	bne.n	80020b2 <StartDaqTask+0x3a>
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_ReadData;
 8002168:	2304      	movs	r3, #4
	printf("**DaqTask: vReadData_SmHandler**\n");
 800216a:	4640      	mov	r0, r8
	if(bTemperatureSensorGetTemperature(&fTemperature, xDaqStatus.enTemperatureUnit))
 800216c:	f10d 090c 	add.w	r9, sp, #12
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_ReadData;
 8002170:	7023      	strb	r3, [r4, #0]
	printf("**DaqTask: vReadData_SmHandler**\n");
 8002172:	f021 ff09 	bl	8023f88 <puts>
	if(bTemperatureSensorGetTemperature(&fTemperature, xDaqStatus.enTemperatureUnit))
 8002176:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800217a:	4648      	mov	r0, r9
 800217c:	f003 fde8 	bl	8005d50 <bSht35GetTemperature>
 8002180:	b138      	cbz	r0, 8002192 <StartDaqTask+0x11a>
		bSendQueue(enModule_Daq, enModule_BackendSystem, enQueueMsg_BackendSystemTemperatureReadyAutoMode, enQueueMsgType_float, 1, &fTemperature);
 8002182:	e9cd 5900 	strd	r5, r9, [sp]
 8002186:	462b      	mov	r3, r5
 8002188:	2206      	movs	r2, #6
 800218a:	2100      	movs	r1, #0
 800218c:	4628      	mov	r0, r5
 800218e:	f7ff fec3 	bl	8001f18 <bSendQueue>
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCycle, enQueueMsgType_NONE, 0, NULL);
 8002192:	2300      	movs	r3, #0
 8002194:	e9cd 3300 	strd	r3, r3, [sp]
 8002198:	e7cb      	b.n	8002132 <StartDaqTask+0xba>
		else if(xDaqStatus.xMsg.enModuleSource == enModule_BackendSystem)
 800219a:	2d00      	cmp	r5, #0
 800219c:	d189      	bne.n	80020b2 <StartDaqTask+0x3a>
			if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqDisableAutoTemperature)
 800219e:	7b63      	ldrb	r3, [r4, #13]
 80021a0:	2b0d      	cmp	r3, #13
 80021a2:	d186      	bne.n	80020b2 <StartDaqTask+0x3a>
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_StopAutoTemperature;
 80021a4:	2305      	movs	r3, #5
	printf("**DaqTask: vStopAutoSendTemperature_SmHandler**\n");
 80021a6:	4819      	ldr	r0, [pc, #100]	; (800220c <StartDaqTask+0x194>)
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_StopAutoTemperature;
 80021a8:	7023      	strb	r3, [r4, #0]
	printf("**DaqTask: vStopAutoSendTemperature_SmHandler**\n");
 80021aa:	f021 feed 	bl	8023f88 <puts>
	HAL_TIM_Base_Stop_IT(&htim2);
 80021ae:	4815      	ldr	r0, [pc, #84]	; (8002204 <StartDaqTask+0x18c>)
 80021b0:	f006 fa54 	bl	800865c <HAL_TIM_Base_Stop_IT>
	xDaqStatus.u32StateTimeout = osWaitForever;
 80021b4:	f04f 33ff 	mov.w	r3, #4294967295
 80021b8:	6063      	str	r3, [r4, #4]
	bSendQueue(enModule_Daq, enModule_Daq, enQueueMsg_DaqWaitForCmd, enQueueMsgType_NONE, 0, NULL);
 80021ba:	2300      	movs	r3, #0
 80021bc:	e9cd 3300 	strd	r3, r3, [sp]
 80021c0:	e7a1      	b.n	8002106 <StartDaqTask+0x8e>
	else if(xDaqStatus.enDaqStateMachine == enDaqStateMachine_ReadData)
 80021c2:	2b04      	cmp	r3, #4
 80021c4:	d0b9      	beq.n	800213a <StartDaqTask+0xc2>
	else if(xDaqStatus.enDaqStateMachine == enDaqStateMachine_StopAutoTemperature)
 80021c6:	2b05      	cmp	r3, #5
 80021c8:	f47f af73 	bne.w	80020b2 <StartDaqTask+0x3a>
		if(xDaqStatus.xMsg.enModuleSource == enModule_Daq)
 80021cc:	7b23      	ldrb	r3, [r4, #12]
 80021ce:	2b01      	cmp	r3, #1
 80021d0:	f47f af6f 	bne.w	80020b2 <StartDaqTask+0x3a>
			if(xDaqStatus.xMsg.enMsgId == enQueueMsg_DaqWaitForCmd)
 80021d4:	7b63      	ldrb	r3, [r4, #13]
 80021d6:	2b07      	cmp	r3, #7
 80021d8:	f47f af6b 	bne.w	80020b2 <StartDaqTask+0x3a>
				xDaqStatus.enDaqStateMachine = enDaqStateMachine_CmdHanlder;
 80021dc:	2300      	movs	r3, #0
 80021de:	7023      	strb	r3, [r4, #0]
	printf("**DaqTask: vCmdHandler_SmHandler**\n");
 80021e0:	4630      	mov	r0, r6
 80021e2:	e7b3      	b.n	800214c <StartDaqTask+0xd4>
		if(xDaqStatus.xMsg.enModuleSource == enModule_BackendSystem)
 80021e4:	2b00      	cmp	r3, #0
 80021e6:	d0da      	beq.n	800219e <StartDaqTask+0x126>
 80021e8:	e763      	b.n	80020b2 <StartDaqTask+0x3a>
 80021ea:	bf00      	nop
 80021ec:	20002594 	.word	0x20002594
 80021f0:	20002630 	.word	0x20002630
 80021f4:	08028254 	.word	0x08028254
 80021f8:	08028183 	.word	0x08028183
 80021fc:	20002590 	.word	0x20002590
 8002200:	080281aa 	.word	0x080281aa
 8002204:	200027b8 	.word	0x200027b8
 8002208:	080281db 	.word	0x080281db
 800220c:	08028203 	.word	0x08028203
 8002210:	08028233 	.word	0x08028233

08002214 <configureTimerForRunTimeStats>:

/* USER CODE BEGIN 1 */
/* Functions needed when configGENERATE_RUN_TIME_STATS is on */
__weak void configureTimerForRunTimeStats(void)
{
	ulStatesTimerTicks = 0;
 8002214:	4b02      	ldr	r3, [pc, #8]	; (8002220 <configureTimerForRunTimeStats+0xc>)
	HAL_TIM_Base_Start_IT(&htim7);
 8002216:	4803      	ldr	r0, [pc, #12]	; (8002224 <configureTimerForRunTimeStats+0x10>)
	ulStatesTimerTicks = 0;
 8002218:	2200      	movs	r2, #0
 800221a:	601a      	str	r2, [r3, #0]
	HAL_TIM_Base_Start_IT(&htim7);
 800221c:	f006 b9e4 	b.w	80085e8 <HAL_TIM_Base_Start_IT>
 8002220:	200025d4 	.word	0x200025d4
 8002224:	20002800 	.word	0x20002800

08002228 <getRunTimeCounterValue>:
}

__weak unsigned long getRunTimeCounterValue(void)
{
	return ulStatesTimerTicks;
 8002228:	4b01      	ldr	r3, [pc, #4]	; (8002230 <getRunTimeCounterValue+0x8>)
 800222a:	6818      	ldr	r0, [r3, #0]
//return 0;
}
 800222c:	4770      	bx	lr
 800222e:	bf00      	nop
 8002230:	200025d4 	.word	0x200025d4

08002234 <SPI5_Write>:
/**
  * @brief  Writes a byte to device.
  * @param  Value: value to be written
  */
static void SPI5_Write(uint16_t Value)
{
 8002234:	b507      	push	{r0, r1, r2, lr}
  HAL_StatusTypeDef status = HAL_OK;

  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 8002236:	4b06      	ldr	r3, [pc, #24]	; (8002250 <SPI5_Write+0x1c>)
{
 8002238:	f8ad 0006 	strh.w	r0, [sp, #6]
  status = HAL_SPI_Transmit(&hspi5, (uint8_t*) &Value, 1, Spi5Timeout);
 800223c:	681b      	ldr	r3, [r3, #0]
 800223e:	4805      	ldr	r0, [pc, #20]	; (8002254 <SPI5_Write+0x20>)
 8002240:	2201      	movs	r2, #1
 8002242:	f10d 0106 	add.w	r1, sp, #6
 8002246:	f005 ff89 	bl	800815c <HAL_SPI_Transmit>
  if(status != HAL_OK)
  {
    /* Re-Initialize the BUS */
    SPI5_Error();
  }
}
 800224a:	b003      	add	sp, #12
 800224c:	f85d fb04 	ldr.w	pc, [sp], #4
 8002250:	20000010 	.word	0x20000010
 8002254:	20002760 	.word	0x20002760

08002258 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8002258:	b583      	push	{r0, r1, r7, lr}
  /* USER CODE BEGIN 5 */
	/*********** Backend system ***********/
	printf("Start Maincontroller Task\n");
 800225a:	4844      	ldr	r0, [pc, #272]	; (800236c <StartDefaultTask+0x114>)
	xBackendSystemStatus.bIsLedOn = false;
 800225c:	4c44      	ldr	r4, [pc, #272]	; (8002370 <StartDefaultTask+0x118>)
	printf("Start Maincontroller Task\n");
 800225e:	f021 fe93 	bl	8023f88 <puts>
	HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8002262:	4844      	ldr	r0, [pc, #272]	; (8002374 <StartDefaultTask+0x11c>)
 8002264:	2200      	movs	r2, #0
 8002266:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800226a:	f004 f9ed 	bl	8006648 <HAL_GPIO_WritePin>
	xBackendSystemStatus.bIsLedOn = false;
 800226e:	2300      	movs	r3, #0
 8002270:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
		if(bReceiveQueue(enModule_BackendSystem, &(xBackendSystemStatus.xMsg), osWaitForever))
 8002274:	f104 050c 	add.w	r5, r4, #12
 8002278:	f04f 32ff 	mov.w	r2, #4294967295
 800227c:	4629      	mov	r1, r5
 800227e:	2000      	movs	r0, #0
 8002280:	f7ff fedc 	bl	800203c <bReceiveQueue>
 8002284:	2800      	cmp	r0, #0
 8002286:	d0f7      	beq.n	8002278 <StartDefaultTask+0x20>
			if(xBackendSystemStatus.xMsg.enModuleSource == enModule_Daq)
 8002288:	7b23      	ldrb	r3, [r4, #12]
 800228a:	2b01      	cmp	r3, #1
 800228c:	d1f4      	bne.n	8002278 <StartDefaultTask+0x20>
				if(xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemInitDone)
 800228e:	7b63      	ldrb	r3, [r4, #13]
 8002290:	2b01      	cmp	r3, #1
 8002292:	d1f1      	bne.n	8002278 <StartDefaultTask+0x20>
	bSendQueue(enModule_BackendSystem, enModule_Frontend, enQueueMsg_FrontendStartModule,  enQueueMsgType_NONE, 0, NULL);
 8002294:	2500      	movs	r5, #0
 8002296:	462b      	mov	r3, r5
 8002298:	e9cd 5500 	strd	r5, r5, [sp]
 800229c:	4628      	mov	r0, r5
 800229e:	220f      	movs	r2, #15
 80022a0:	2102      	movs	r1, #2
 80022a2:	f7ff fe39 	bl	8001f18 <bSendQueue>
	xBackendSystemStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 80022a6:	f04f 33ff 	mov.w	r3, #4294967295
	xBackendSystemStatus.enBackendSystemStateMachine = enBackendSystemStateMachine_CmdHandler;
 80022aa:	7025      	strb	r5, [r4, #0]
	// init Backend system module
	vBackendSystemTaskInit();
  /* Infinite loop */
  for(;;)
  {
	  xBackendSystemStatus.bRxQueueStatus = bReceiveQueue(enModule_BackendSystem, &(xBackendSystemStatus.xMsg), xBackendSystemStatus.u32StateTimeout);
 80022ac:	4f32      	ldr	r7, [pc, #200]	; (8002378 <StartDefaultTask+0x120>)
	  if(xBackendSystemStatus.bRxQueueStatus)
	  {
		  printf("Backend system received message queue\n");
 80022ae:	4e33      	ldr	r6, [pc, #204]	; (800237c <StartDefaultTask+0x124>)
	printf("Backend System Queue Handler:\n"\
 80022b0:	4d33      	ldr	r5, [pc, #204]	; (8002380 <StartDefaultTask+0x128>)
	xBackendSystemStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 80022b2:	6063      	str	r3, [r4, #4]
}
 80022b4:	e00d      	b.n	80022d2 <StartDefaultTask+0x7a>
		else if(xBackendSystemStatus.xMsg.enModuleSource == enModule_Daq)
 80022b6:	2901      	cmp	r1, #1
 80022b8:	d10b      	bne.n	80022d2 <StartDefaultTask+0x7a>
			if(xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemTemperatureReadyAutoMode)
 80022ba:	7b63      	ldrb	r3, [r4, #13]
 80022bc:	2b06      	cmp	r3, #6
 80022be:	d108      	bne.n	80022d2 <StartDefaultTask+0x7a>
				bSendQueue(enModule_BackendSystem, enModule_Frontend, enQueueMsg_FrontendUpdateTemperatureAutoMode, xBackendSystemStatus.xMsg.enMsgType, xBackendSystemStatus.xMsg.enMsgLength, &(xBackendSystemStatus.xMsg.enMsgPayload));
 80022c0:	4b30      	ldr	r3, [pc, #192]	; (8002384 <StartDefaultTask+0x12c>)
 80022c2:	9301      	str	r3, [sp, #4]
 80022c4:	7be3      	ldrb	r3, [r4, #15]
 80022c6:	9300      	str	r3, [sp, #0]
 80022c8:	2210      	movs	r2, #16
 80022ca:	7ba3      	ldrb	r3, [r4, #14]
 80022cc:	2102      	movs	r1, #2
 80022ce:	f7ff fe23 	bl	8001f18 <bSendQueue>
	  xBackendSystemStatus.bRxQueueStatus = bReceiveQueue(enModule_BackendSystem, &(xBackendSystemStatus.xMsg), xBackendSystemStatus.u32StateTimeout);
 80022d2:	6862      	ldr	r2, [r4, #4]
 80022d4:	4639      	mov	r1, r7
 80022d6:	2000      	movs	r0, #0
 80022d8:	f7ff feb0 	bl	800203c <bReceiveQueue>
 80022dc:	7220      	strb	r0, [r4, #8]
	  if(xBackendSystemStatus.bRxQueueStatus)
 80022de:	2800      	cmp	r0, #0
 80022e0:	d0f7      	beq.n	80022d2 <StartDefaultTask+0x7a>
		  printf("Backend system received message queue\n");
 80022e2:	4630      	mov	r0, r6
 80022e4:	f021 fe50 	bl	8023f88 <puts>
	printf("Backend System Queue Handler:\n"\
 80022e8:	7b63      	ldrb	r3, [r4, #13]
 80022ea:	7b22      	ldrb	r2, [r4, #12]
 80022ec:	7821      	ldrb	r1, [r4, #0]
 80022ee:	4628      	mov	r0, r5
 80022f0:	f021 fdae 	bl	8023e50 <iprintf>
	if(xBackendSystemStatus.enBackendSystemStateMachine == enBackendSystemStateMachine_CmdHandler)
 80022f4:	7820      	ldrb	r0, [r4, #0]
 80022f6:	2800      	cmp	r0, #0
 80022f8:	d1eb      	bne.n	80022d2 <StartDefaultTask+0x7a>
		if(xBackendSystemStatus.xMsg.enModuleSource == enModule_Frontend)
 80022fa:	7b21      	ldrb	r1, [r4, #12]
 80022fc:	2902      	cmp	r1, #2
 80022fe:	d1da      	bne.n	80022b6 <StartDefaultTask+0x5e>
			if((xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemSetLedState) ||
 8002300:	7b63      	ldrb	r3, [r4, #13]
 8002302:	1e9a      	subs	r2, r3, #2
 8002304:	2a03      	cmp	r2, #3
 8002306:	d8e4      	bhi.n	80022d2 <StartDefaultTask+0x7a>
		if(xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemSetLedState)
 8002308:	2b02      	cmp	r3, #2
 800230a:	d11a      	bne.n	8002342 <StartDefaultTask+0xea>
			if(xBackendSystemStatus.xMsg.enMsgPayload.ui8[0] && 0x01)
 800230c:	f894 8010 	ldrb.w	r8, [r4, #16]
 8002310:	f1b8 0f00 	cmp.w	r8, #0
 8002314:	d00c      	beq.n	8002330 <StartDefaultTask+0xd8>
		HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_SET);
 8002316:	4817      	ldr	r0, [pc, #92]	; (8002374 <StartDefaultTask+0x11c>)
 8002318:	2201      	movs	r2, #1
 800231a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800231e:	f004 f993 	bl	8006648 <HAL_GPIO_WritePin>
		xBackendSystemStatus.bIsLedOn = true;
 8002322:	2301      	movs	r3, #1
 8002324:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38
	xBackendSystemStatus.u32StateTimeout = osWaitForever; // keep waiting until cmd received
 8002328:	f04f 33ff 	mov.w	r3, #4294967295
 800232c:	6063      	str	r3, [r4, #4]
}
 800232e:	e7d0      	b.n	80022d2 <StartDefaultTask+0x7a>
		HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
 8002330:	4810      	ldr	r0, [pc, #64]	; (8002374 <StartDefaultTask+0x11c>)
 8002332:	4642      	mov	r2, r8
 8002334:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002338:	f004 f986 	bl	8006648 <HAL_GPIO_WritePin>
		xBackendSystemStatus.bIsLedOn = false;
 800233c:	f884 8038 	strb.w	r8, [r4, #56]	; 0x38
}
 8002340:	e7f2      	b.n	8002328 <StartDefaultTask+0xd0>
		else if(xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemGettLedState)
 8002342:	2b03      	cmp	r3, #3
 8002344:	d108      	bne.n	8002358 <StartDefaultTask+0x100>
			bSendQueue(enModule_BackendSystem, enModule_Frontend, enQueueMsg_FrontendLedStateResponse, enQueueMsgType_byte, 1, &(xBackendSystemStatus.bIsLedOn));
 8002346:	4b10      	ldr	r3, [pc, #64]	; (8002388 <StartDefaultTask+0x130>)
 8002348:	9301      	str	r3, [sp, #4]
 800234a:	2301      	movs	r3, #1
 800234c:	9300      	str	r3, [sp, #0]
 800234e:	220e      	movs	r2, #14
 8002350:	2304      	movs	r3, #4
			bSendQueue(enModule_BackendSystem, enModule_Daq, enQueueMsg_DaqDisableAutoTemperature, enQueueMsgType_NONE, 0, NULL);
 8002352:	f7ff fde1 	bl	8001f18 <bSendQueue>
 8002356:	e7e7      	b.n	8002328 <StartDefaultTask+0xd0>
		else if(xBackendSystemStatus.xMsg.enMsgId == enQueueMsg_BackendSystemStartAutoGetTemperature)
 8002358:	2b04      	cmp	r3, #4
			bSendQueue(enModule_BackendSystem, enModule_Daq, enQueueMsg_DaqEnableAutoTemperature, enQueueMsgType_NONE, 0, NULL);
 800235a:	e9cd 0000 	strd	r0, r0, [sp]
 800235e:	4603      	mov	r3, r0
 8002360:	bf0c      	ite	eq
 8002362:	220a      	moveq	r2, #10
			bSendQueue(enModule_BackendSystem, enModule_Daq, enQueueMsg_DaqDisableAutoTemperature, enQueueMsgType_NONE, 0, NULL);
 8002364:	220d      	movne	r2, #13
 8002366:	2101      	movs	r1, #1
 8002368:	e7f3      	b.n	8002352 <StartDefaultTask+0xfa>
 800236a:	bf00      	nop
 800236c:	08028277 	.word	0x08028277
 8002370:	20002890 	.word	0x20002890
 8002374:	40021800 	.word	0x40021800
 8002378:	2000289c 	.word	0x2000289c
 800237c:	08028291 	.word	0x08028291
 8002380:	080282b7 	.word	0x080282b7
 8002384:	200028a0 	.word	0x200028a0
 8002388:	200028c8 	.word	0x200028c8

0800238c <SystemClock_Config>:
{
 800238c:	b530      	push	{r4, r5, lr}
 800238e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002390:	2210      	movs	r2, #16
 8002392:	2100      	movs	r1, #0
 8002394:	a80a      	add	r0, sp, #40	; 0x28
 8002396:	f020 fc9f 	bl	8022cd8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800239a:	2214      	movs	r2, #20
 800239c:	2100      	movs	r1, #0
 800239e:	a803      	add	r0, sp, #12
 80023a0:	f020 fc9a 	bl	8022cd8 <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 80023a4:	2400      	movs	r4, #0
 80023a6:	4b1d      	ldr	r3, [pc, #116]	; (800241c <SystemClock_Config+0x90>)
 80023a8:	9401      	str	r4, [sp, #4]
 80023aa:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80023ac:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80023b0:	641a      	str	r2, [r3, #64]	; 0x40
 80023b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80023b4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80023b8:	9301      	str	r3, [sp, #4]
 80023ba:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80023bc:	4b18      	ldr	r3, [pc, #96]	; (8002420 <SystemClock_Config+0x94>)
 80023be:	9402      	str	r4, [sp, #8]
 80023c0:	681a      	ldr	r2, [r3, #0]
 80023c2:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 80023c6:	601a      	str	r2, [r3, #0]
 80023c8:	681b      	ldr	r3, [r3, #0]
 80023ca:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 80023ce:	9302      	str	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80023d0:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 80023d2:	9b02      	ldr	r3, [sp, #8]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 80023d4:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 80023d8:	e9cd 2308 	strd	r2, r3, [sp, #32]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 80023dc:	2502      	movs	r5, #2
 80023de:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 80023e2:	e9cd 530e 	strd	r5, r3, [sp, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLN = 336;
 80023e6:	2108      	movs	r1, #8
 80023e8:	f44f 73a8 	mov.w	r3, #336	; 0x150
 80023ec:	e9cd 1310 	strd	r1, r3, [sp, #64]	; 0x40
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023f0:	a808      	add	r0, sp, #32
  RCC_OscInitStruct.PLL.PLLQ = 4;
 80023f2:	2304      	movs	r3, #4
 80023f4:	9313      	str	r3, [sp, #76]	; 0x4c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 80023f6:	9512      	str	r5, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80023f8:	f005 f972 	bl	80076e0 <HAL_RCC_OscConfig>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80023fc:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80023fe:	e9cd 3503 	strd	r3, r5, [sp, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8002402:	f44f 50a0 	mov.w	r0, #5120	; 0x1400
 8002406:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800240a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800240e:	2105      	movs	r1, #5
 8002410:	a803      	add	r0, sp, #12
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002412:	9405      	str	r4, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8002414:	f005 fb42 	bl	8007a9c <HAL_RCC_ClockConfig>
}
 8002418:	b015      	add	sp, #84	; 0x54
 800241a:	bd30      	pop	{r4, r5, pc}
 800241c:	40023800 	.word	0x40023800
 8002420:	40007000 	.word	0x40007000

08002424 <main>:
{
 8002424:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8002428:	b09b      	sub	sp, #108	; 0x6c
  HAL_Init();
 800242a:	f003 fe83 	bl	8006134 <HAL_Init>
  SystemClock_Config();
 800242e:	f7ff ffad 	bl	800238c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002432:	2214      	movs	r2, #20
 8002434:	2100      	movs	r1, #0
 8002436:	a80d      	add	r0, sp, #52	; 0x34
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002438:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800243a:	f020 fc4d 	bl	8022cd8 <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 800243e:	4bc7      	ldr	r3, [pc, #796]	; (800275c <main+0x338>)
 8002440:	9400      	str	r4, [sp, #0]
 8002442:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 8002444:	48c6      	ldr	r0, [pc, #792]	; (8002760 <main+0x33c>)
  hi2c3.Instance = I2C3;
 8002446:	4dc7      	ldr	r5, [pc, #796]	; (8002764 <main+0x340>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8002448:	f042 0210 	orr.w	r2, r2, #16
 800244c:	631a      	str	r2, [r3, #48]	; 0x30
 800244e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002450:	f002 0210 	and.w	r2, r2, #16
 8002454:	9200      	str	r2, [sp, #0]
 8002456:	9a00      	ldr	r2, [sp, #0]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8002458:	9401      	str	r4, [sp, #4]
 800245a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800245c:	f042 0220 	orr.w	r2, r2, #32
 8002460:	631a      	str	r2, [r3, #48]	; 0x30
 8002462:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002464:	f002 0220 	and.w	r2, r2, #32
 8002468:	9201      	str	r2, [sp, #4]
 800246a:	9a01      	ldr	r2, [sp, #4]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800246c:	9402      	str	r4, [sp, #8]
 800246e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002470:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002474:	631a      	str	r2, [r3, #48]	; 0x30
 8002476:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002478:	f002 0280 	and.w	r2, r2, #128	; 0x80
 800247c:	9202      	str	r2, [sp, #8]
 800247e:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002480:	9403      	str	r4, [sp, #12]
 8002482:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002484:	f042 0204 	orr.w	r2, r2, #4
 8002488:	631a      	str	r2, [r3, #48]	; 0x30
 800248a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800248c:	f002 0204 	and.w	r2, r2, #4
 8002490:	9203      	str	r2, [sp, #12]
 8002492:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002494:	9404      	str	r4, [sp, #16]
 8002496:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002498:	f042 0201 	orr.w	r2, r2, #1
 800249c:	631a      	str	r2, [r3, #48]	; 0x30
 800249e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024a0:	f002 0201 	and.w	r2, r2, #1
 80024a4:	9204      	str	r2, [sp, #16]
 80024a6:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80024a8:	9405      	str	r4, [sp, #20]
 80024aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024ac:	f042 0202 	orr.w	r2, r2, #2
 80024b0:	631a      	str	r2, [r3, #48]	; 0x30
 80024b2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024b4:	f002 0202 	and.w	r2, r2, #2
 80024b8:	9205      	str	r2, [sp, #20]
 80024ba:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80024bc:	9406      	str	r4, [sp, #24]
 80024be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024c0:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80024c4:	631a      	str	r2, [r3, #48]	; 0x30
 80024c6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024c8:	f002 0240 	and.w	r2, r2, #64	; 0x40
 80024cc:	9206      	str	r2, [sp, #24]
 80024ce:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80024d0:	9407      	str	r4, [sp, #28]
 80024d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80024d4:	f042 0208 	orr.w	r2, r2, #8
 80024d8:	631a      	str	r2, [r3, #48]	; 0x30
 80024da:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80024dc:	f003 0308 	and.w	r3, r3, #8
 80024e0:	9307      	str	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80024e2:	4622      	mov	r2, r4
 80024e4:	213c      	movs	r1, #60	; 0x3c
  __HAL_RCC_GPIOD_CLK_ENABLE();
 80024e6:	9b07      	ldr	r3, [sp, #28]
  HAL_GPIO_WritePin(GPIOE, VSYNC_FREQ_Pin|RENDER_TIME_Pin|FRAME_RATE_Pin|MCU_ACTIVE_Pin, GPIO_PIN_RESET);
 80024e8:	f004 f8ae 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80024ec:	489e      	ldr	r0, [pc, #632]	; (8002768 <main+0x344>)
 80024ee:	4622      	mov	r2, r4
 80024f0:	2104      	movs	r1, #4
 80024f2:	f004 f8a9 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_12|GPIO_PIN_13, GPIO_PIN_RESET);
 80024f6:	489d      	ldr	r0, [pc, #628]	; (800276c <main+0x348>)
 80024f8:	4622      	mov	r2, r4
 80024fa:	f44f 5140 	mov.w	r1, #12288	; 0x3000
 80024fe:	f004 f8a3 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOG, LD3_Pin|LD4_Pin, GPIO_PIN_RESET);
 8002502:	4622      	mov	r2, r4
 8002504:	489a      	ldr	r0, [pc, #616]	; (8002770 <main+0x34c>)
 8002506:	f44f 41c0 	mov.w	r1, #24576	; 0x6000
 800250a:	f004 f89d 	bl	8006648 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800250e:	2601      	movs	r6, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002510:	f04f 0803 	mov.w	r8, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002514:	233c      	movs	r3, #60	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002516:	4892      	ldr	r0, [pc, #584]	; (8002760 <main+0x33c>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002518:	f8cd 8040 	str.w	r8, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800251c:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800251e:	2702      	movs	r7, #2
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 8002520:	f04f 0a04 	mov.w	sl, #4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002524:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002528:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800252a:	f003 ffa1 	bl	8006470 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800252e:	488e      	ldr	r0, [pc, #568]	; (8002768 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002530:	940f      	str	r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002532:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002534:	e9cd a60d 	strd	sl, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002538:	9710      	str	r7, [sp, #64]	; 0x40
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800253a:	f003 ff99 	bl	8006470 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_12|GPIO_PIN_13;
 800253e:	f44f 5340 	mov.w	r3, #12288	; 0x3000
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002542:	488a      	ldr	r0, [pc, #552]	; (800276c <main+0x348>)
 8002544:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002546:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 800254a:	e9cd 470f 	strd	r4, r7, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 800254e:	f003 ff8f 	bl	8006470 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002552:	a90d      	add	r1, sp, #52	; 0x34
  GPIO_InitStruct.Pin = LD3_Pin|LD4_Pin;
 8002554:	f44f 43c0 	mov.w	r3, #24576	; 0x6000
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002558:	4885      	ldr	r0, [pc, #532]	; (8002770 <main+0x34c>)
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800255a:	e9cd 360d 	strd	r3, r6, [sp, #52]	; 0x34
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800255e:	e9cd 440f 	strd	r4, r4, [sp, #60]	; 0x3c
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002562:	f003 ff85 	bl	8006470 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 8002566:	4883      	ldr	r0, [pc, #524]	; (8002774 <main+0x350>)
 8002568:	4b83      	ldr	r3, [pc, #524]	; (8002778 <main+0x354>)
 800256a:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 800256c:	f003 fe74 	bl	8006258 <HAL_CRC_Init>
  hi2c3.Init.ClockSpeed = 100000;
 8002570:	4a82      	ldr	r2, [pc, #520]	; (800277c <main+0x358>)
 8002572:	4b83      	ldr	r3, [pc, #524]	; (8002780 <main+0x35c>)
  hi2c3.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002574:	622c      	str	r4, [r5, #32]
  hi2c3.Init.ClockSpeed = 100000;
 8002576:	e9c5 2300 	strd	r2, r3, [r5]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800257a:	4628      	mov	r0, r5
  hi2c3.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 800257c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c3.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002580:	e9c5 3404 	strd	r3, r4, [r5, #16]
  hi2c3.Init.OwnAddress1 = 0;
 8002584:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c3.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002588:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c3) != HAL_OK)
 800258c:	f004 fa46 	bl	8006a1c <HAL_I2C_Init>
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c3, I2C_ANALOGFILTER_DISABLE) != HAL_OK)
 8002590:	2110      	movs	r1, #16
 8002592:	4628      	mov	r0, r5
 8002594:	f004 feca 	bl	800732c <HAL_I2CEx_ConfigAnalogFilter>
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c3, 0) != HAL_OK)
 8002598:	4621      	mov	r1, r4
 800259a:	4628      	mov	r0, r5
 800259c:	f004 fee5 	bl	800736a <HAL_I2CEx_ConfigDigitalFilter>
  hspi5.Instance = SPI5;
 80025a0:	4878      	ldr	r0, [pc, #480]	; (8002784 <main+0x360>)
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80025a2:	4979      	ldr	r1, [pc, #484]	; (8002788 <main+0x364>)
  hspi5.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80025a4:	6284      	str	r4, [r0, #40]	; 0x28
  hspi5.Init.Mode = SPI_MODE_MASTER;
 80025a6:	f44f 7382 	mov.w	r3, #260	; 0x104
 80025aa:	e9c0 1300 	strd	r1, r3, [r0]
  hspi5.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80025ae:	f44f 7500 	mov.w	r5, #512	; 0x200
 80025b2:	2318      	movs	r3, #24
 80025b4:	e9c0 5306 	strd	r5, r3, [r0, #24]
  hspi5.Init.CRCPolynomial = 10;
 80025b8:	230a      	movs	r3, #10
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80025ba:	4d74      	ldr	r5, [pc, #464]	; (800278c <main+0x368>)
  hspi5.Init.CRCPolynomial = 10;
 80025bc:	62c3      	str	r3, [r0, #44]	; 0x2c
  hspi5.Init.DataSize = SPI_DATASIZE_8BIT;
 80025be:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hspi5.Init.CLKPhase = SPI_PHASE_1EDGE;
 80025c2:	e9c0 4404 	strd	r4, r4, [r0, #16]
  hspi5.Init.TIMode = SPI_TIMODE_DISABLE;
 80025c6:	e9c0 4408 	strd	r4, r4, [r0, #32]
  if (HAL_SPI_Init(&hspi5) != HAL_OK)
 80025ca:	f005 fd6b 	bl	80080a4 <HAL_SPI_Init>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 80025ce:	4b70      	ldr	r3, [pc, #448]	; (8002790 <main+0x36c>)
  SdramTiming.LoadToActiveDelay = 2;
 80025d0:	970d      	str	r7, [sp, #52]	; 0x34
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80025d2:	f04f 0910 	mov.w	r9, #16
  hsdram1.Init.SDBank = FMC_SDRAM_BANK2;
 80025d6:	e9c5 3600 	strd	r3, r6, [r5]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 80025da:	2340      	movs	r3, #64	; 0x40
 80025dc:	e9c5 9304 	strd	r9, r3, [r5, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 80025e0:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 80025e4:	e9c5 3406 	strd	r3, r4, [r5, #24]
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_PERIOD_2;
 80025e8:	f44f 6300 	mov.w	r3, #2048	; 0x800
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_DISABLE;
 80025ec:	e9c5 3408 	strd	r3, r4, [r5, #32]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_1;
 80025f0:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80025f4:	62ab      	str	r3, [r5, #40]	; 0x28
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80025f6:	a90d      	add	r1, sp, #52	; 0x34
  SdramTiming.ExitSelfRefreshDelay = 7;
 80025f8:	2307      	movs	r3, #7
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80025fa:	4628      	mov	r0, r5
  SdramTiming.SelfRefreshTime = 4;
 80025fc:	e9cd 3a0e 	strd	r3, sl, [sp, #56]	; 0x38
  SdramTiming.WriteRecoveryTime = 3;
 8002600:	e9cd 3810 	strd	r3, r8, [sp, #64]	; 0x40
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002604:	f04f 0b08 	mov.w	fp, #8
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 8002608:	e9c5 4a02 	strd	r4, sl, [r5, #8]
  SdramTiming.RCDDelay = 2;
 800260c:	e9cd 7712 	strd	r7, r7, [sp, #72]	; 0x48
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002610:	f005 fc48 	bl	8007ea4 <HAL_SDRAM_Init>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002614:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002618:	a909      	add	r1, sp, #36	; 0x24
 800261a:	4628      	mov	r0, r5
  Command->AutoRefreshNumber       = 1;
 800261c:	e9cd b60a 	strd	fp, r6, [sp, #40]	; 0x28
 __IO uint32_t tmpmrd =0;
 8002620:	9408      	str	r4, [sp, #32]
  Command->CommandMode             = FMC_SDRAM_CMD_CLK_ENABLE;
 8002622:	9609      	str	r6, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8002624:	940c      	str	r4, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002626:	f005 fc5d 	bl	8007ee4 <HAL_SDRAM_SendCommand>
  HAL_Delay(1);
 800262a:	4630      	mov	r0, r6
 800262c:	f003 fdae 	bl	800618c <HAL_Delay>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002630:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002634:	a909      	add	r1, sp, #36	; 0x24
 8002636:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 8002638:	e9cd 7b09 	strd	r7, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 800263c:	e9cd 640b 	strd	r6, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002640:	f005 fc50 	bl	8007ee4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002644:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002648:	a909      	add	r1, sp, #36	; 0x24
 800264a:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800264c:	e9cd 8b09 	strd	r8, fp, [sp, #36]	; 0x24
  Command->ModeRegisterDefinition  = 0;
 8002650:	e9cd a40b 	strd	sl, r4, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002654:	f005 fc46 	bl	8007ee4 <HAL_SDRAM_SendCommand>
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |
 8002658:	f44f 730c 	mov.w	r3, #560	; 0x230
 800265c:	9308      	str	r3, [sp, #32]
  Command->ModeRegisterDefinition  = tmpmrd;
 800265e:	9b08      	ldr	r3, [sp, #32]
 8002660:	930c      	str	r3, [sp, #48]	; 0x30
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002662:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8002666:	a909      	add	r1, sp, #36	; 0x24
 8002668:	4628      	mov	r0, r5
  Command->CommandTarget           = FMC_SDRAM_CMD_TARGET_BANK2;
 800266a:	e9cd ab09 	strd	sl, fp, [sp, #36]	; 0x24
  Command->AutoRefreshNumber       = 1;
 800266e:	960b      	str	r6, [sp, #44]	; 0x2c
  HAL_SDRAM_SendCommand(hsdram, Command, SDRAM_TIMEOUT);
 8002670:	f005 fc38 	bl	8007ee4 <HAL_SDRAM_SendCommand>
  HAL_SDRAM_ProgramRefreshRate(hsdram, REFRESH_COUNT);
 8002674:	f240 516a 	movw	r1, #1386	; 0x56a
 8002678:	4628      	mov	r0, r5
 800267a:	f005 fc51 	bl	8007f20 <HAL_SDRAM_ProgramRefreshRate>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 800267e:	2234      	movs	r2, #52	; 0x34
 8002680:	4621      	mov	r1, r4
 8002682:	eb0d 0002 	add.w	r0, sp, r2
 8002686:	f020 fb27 	bl	8022cd8 <memset>
  hltdc.Instance = LTDC;
 800268a:	4d42      	ldr	r5, [pc, #264]	; (8002794 <main+0x370>)
 800268c:	4b42      	ldr	r3, [pc, #264]	; (8002798 <main+0x374>)
  hltdc.Init.Backcolor.Blue = 0;
 800268e:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 8002690:	e9c5 3400 	strd	r3, r4, [r5]
  hltdc.Init.HorizontalSync = 9;
 8002694:	2309      	movs	r3, #9
  hltdc.Init.VerticalSync = 1;
 8002696:	e9c5 3605 	strd	r3, r6, [r5, #20]
  hltdc.Init.AccumulatedHBP = 29;
 800269a:	231d      	movs	r3, #29
  hltdc.Init.AccumulatedActiveH = 323;
 800269c:	f240 1c0d 	movw	ip, #269	; 0x10d
  hltdc.Init.AccumulatedVBP = 3;
 80026a0:	e9c5 3807 	strd	r3, r8, [r5, #28]
  hltdc.Init.AccumulatedActiveH = 323;
 80026a4:	f240 1343 	movw	r3, #323	; 0x143
 80026a8:	e9c5 c309 	strd	ip, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 327;
 80026ac:	f240 1e17 	movw	lr, #279	; 0x117
 80026b0:	f240 1347 	movw	r3, #327	; 0x147
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80026b4:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 327;
 80026b6:	e9c5 e30b 	strd	lr, r3, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80026ba:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.PCPolarity = LTDC_PCPOLARITY_IPC;
 80026be:	612c      	str	r4, [r5, #16]
  hltdc.Init.Backcolor.Red = 0;
 80026c0:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80026c4:	f004 fef6 	bl	80074b4 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80026c8:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 240;
 80026ca:	22f0      	movs	r2, #240	; 0xf0
  pLayerCfg.Alpha0 = 0;
 80026cc:	e9cd 1412 	strd	r1, r4, [sp, #72]	; 0x48
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80026d0:	f44f 6880 	mov.w	r8, #1024	; 0x400
 80026d4:	2105      	movs	r1, #5
  pLayerCfg.WindowY1 = 320;
 80026d6:	f44f 73a0 	mov.w	r3, #320	; 0x140
  pLayerCfg.WindowY0 = 0;
 80026da:	e9cd 240e 	strd	r2, r4, [sp, #56]	; 0x38
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80026de:	e9cd 8114 	strd	r8, r1, [sp, #80]	; 0x50
  pLayerCfg.ImageWidth = 240;
 80026e2:	e9cd 4216 	strd	r4, r2, [sp, #88]	; 0x58
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80026e6:	a90d      	add	r1, sp, #52	; 0x34
 80026e8:	4622      	mov	r2, r4
 80026ea:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80026ec:	e9cd 3710 	strd	r3, r7, [sp, #64]	; 0x40
  LcdDrv = &ili9341_drv;
 80026f0:	4d2a      	ldr	r5, [pc, #168]	; (800279c <main+0x378>)
  pLayerCfg.ImageHeight = 320;
 80026f2:	9318      	str	r3, [sp, #96]	; 0x60
  pLayerCfg.WindowX0 = 0;
 80026f4:	940d      	str	r4, [sp, #52]	; 0x34
  pLayerCfg.Backcolor.Blue = 0;
 80026f6:	f8ad 4064 	strh.w	r4, [sp, #100]	; 0x64
  pLayerCfg.Backcolor.Red = 0;
 80026fa:	f88d 4066 	strb.w	r4, [sp, #102]	; 0x66
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80026fe:	f004 ffa4 	bl	800764a <HAL_LTDC_ConfigLayer>
  LcdDrv = &ili9341_drv;
 8002702:	4b27      	ldr	r3, [pc, #156]	; (80027a0 <main+0x37c>)
 8002704:	602b      	str	r3, [r5, #0]
  LcdDrv->Init();
 8002706:	681b      	ldr	r3, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8002708:	f8df b0a4 	ldr.w	fp, [pc, #164]	; 80027b0 <main+0x38c>
  LcdDrv->Init();
 800270c:	4798      	blx	r3
  LcdDrv->DisplayOff();
 800270e:	682b      	ldr	r3, [r5, #0]
  hdma2d.Instance = DMA2D;
 8002710:	4d24      	ldr	r5, [pc, #144]	; (80027a4 <main+0x380>)
  LcdDrv->DisplayOff();
 8002712:	68db      	ldr	r3, [r3, #12]
 8002714:	4798      	blx	r3
  hdma2d.Instance = DMA2D;
 8002716:	4b24      	ldr	r3, [pc, #144]	; (80027a8 <main+0x384>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_RGB565;
 8002718:	e9c5 470a 	strd	r4, r7, [r5, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800271c:	e9c5 440c 	strd	r4, r4, [r5, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8002720:	4628      	mov	r0, r5
  hdma2d.Init.Mode = DMA2D_M2M;
 8002722:	e9c5 3400 	strd	r3, r4, [r5]
  hdma2d.Init.OutputOffset = 0;
 8002726:	e9c5 7402 	strd	r7, r4, [r5, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800272a:	f003 fda5 	bl	8006278 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 800272e:	4631      	mov	r1, r6
 8002730:	4628      	mov	r0, r5
 8002732:	f003 fe59 	bl	80063e8 <HAL_DMA2D_ConfigLayer>
  htim2.Instance = TIM2;
 8002736:	4d1d      	ldr	r5, [pc, #116]	; (80027ac <main+0x388>)
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8002738:	464a      	mov	r2, r9
 800273a:	4621      	mov	r1, r4
 800273c:	a80d      	add	r0, sp, #52	; 0x34
 800273e:	f020 facb 	bl	8022cd8 <memset>
  htim2.Init.Prescaler = 13124;
 8002742:	f04f 4a80 	mov.w	sl, #1073741824	; 0x40000000
 8002746:	f243 3344 	movw	r3, #13124	; 0x3344
 800274a:	e9c5 a300 	strd	sl, r3, [r5]
  htim2.Init.Period = 63999;
 800274e:	f64f 13ff 	movw	r3, #63999	; 0xf9ff
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002752:	e9c5 3403 	strd	r3, r4, [r5, #12]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002756:	4628      	mov	r0, r5
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_ENABLE;
 8002758:	2380      	movs	r3, #128	; 0x80
 800275a:	e02b      	b.n	80027b4 <main+0x390>
 800275c:	40023800 	.word	0x40023800
 8002760:	40021000 	.word	0x40021000
 8002764:	20002630 	.word	0x20002630
 8002768:	40020800 	.word	0x40020800
 800276c:	40020c00 	.word	0x40020c00
 8002770:	40021800 	.word	0x40021800
 8002774:	200025e8 	.word	0x200025e8
 8002778:	40023000 	.word	0x40023000
 800277c:	40005c00 	.word	0x40005c00
 8002780:	000186a0 	.word	0x000186a0
 8002784:	20002760 	.word	0x20002760
 8002788:	40015000 	.word	0x40015000
 800278c:	2000272c 	.word	0x2000272c
 8002790:	a0000140 	.word	0xa0000140
 8002794:	20002684 	.word	0x20002684
 8002798:	40016800 	.word	0x40016800
 800279c:	200025dc 	.word	0x200025dc
 80027a0:	20000014 	.word	0x20000014
 80027a4:	200025f0 	.word	0x200025f0
 80027a8:	4002b000 	.word	0x4002b000
 80027ac:	200027b8 	.word	0x200027b8
 80027b0:	40011000 	.word	0x40011000
 80027b4:	61ab      	str	r3, [r5, #24]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027b6:	60ac      	str	r4, [r5, #8]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80027b8:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80027bc:	f006 f872 	bl	80088a4 <HAL_TIM_Base_Init>
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027c0:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027c4:	a90d      	add	r1, sp, #52	; 0x34
 80027c6:	4628      	mov	r0, r5
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80027c8:	930d      	str	r3, [sp, #52]	; 0x34
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80027ca:	f006 f8a1 	bl	8008910 <HAL_TIM_ConfigClockSource>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80027ce:	a909      	add	r1, sp, #36	; 0x24
 80027d0:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80027d2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80027d6:	f006 f937 	bl	8008a48 <HAL_TIMEx_MasterConfigSynchronization>
  huart1.Instance = USART1;
 80027da:	482c      	ldr	r0, [pc, #176]	; (800288c <main+0x468>)
  htim7.Instance = TIM7;
 80027dc:	4d2c      	ldr	r5, [pc, #176]	; (8002890 <main+0x46c>)
  huart1.Init.Parity = UART_PARITY_NONE;
 80027de:	6104      	str	r4, [r0, #16]
  huart1.Init.BaudRate = 115200;
 80027e0:	f44f 33e1 	mov.w	r3, #115200	; 0x1c200
 80027e4:	e9c0 b300 	strd	fp, r3, [r0]
  huart1.Init.Mode = UART_MODE_TX_RX;
 80027e8:	230c      	movs	r3, #12
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 80027ea:	e9c0 3405 	strd	r3, r4, [r0, #20]
  huart1.Init.StopBits = UART_STOPBITS_1;
 80027ee:	e9c0 4402 	strd	r4, r4, [r0, #8]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 80027f2:	61c4      	str	r4, [r0, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 80027f4:	f006 f9fc 	bl	8008bf0 <HAL_UART_Init>
  htim7.Instance = TIM7;
 80027f8:	4b26      	ldr	r3, [pc, #152]	; (8002894 <main+0x470>)
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 80027fa:	60ac      	str	r4, [r5, #8]
  htim7.Init.Prescaler = 0;
 80027fc:	e9c5 3400 	strd	r3, r4, [r5]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8002800:	4628      	mov	r0, r5
  htim7.Init.Period = 8399;
 8002802:	f242 03cf 	movw	r3, #8399	; 0x20cf
 8002806:	60eb      	str	r3, [r5, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002808:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800280c:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 800280e:	f006 f849 	bl	80088a4 <HAL_TIM_Base_Init>
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8002812:	a90d      	add	r1, sp, #52	; 0x34
 8002814:	4628      	mov	r0, r5
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002816:	e9cd 440d 	strd	r4, r4, [sp, #52]	; 0x34
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 800281a:	f006 f915 	bl	8008a48 <HAL_TIMEx_MasterConfigSynchronization>
  MX_TouchGFX_Init();
 800281e:	f7fe fc25 	bl	800106c <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002822:	f7fe fc22 	bl	800106a <MX_TouchGFX_PreOSInit>
  printf("Start Project\n");
 8002826:	481c      	ldr	r0, [pc, #112]	; (8002898 <main+0x474>)
 8002828:	f021 fbae 	bl	8023f88 <puts>
  osKernelInitialize();
 800282c:	f006 fb6e 	bl	8008f0c <osKernelInitialize>
  xBackendSystemQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xBackendSystemQueue_attributes);
 8002830:	4a1a      	ldr	r2, [pc, #104]	; (800289c <main+0x478>)
 8002832:	212c      	movs	r1, #44	; 0x2c
 8002834:	4648      	mov	r0, r9
 8002836:	f006 fc87 	bl	8009148 <osMessageQueueNew>
 800283a:	4b19      	ldr	r3, [pc, #100]	; (80028a0 <main+0x47c>)
  xFrontendQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xFrontendQueue_attributes);
 800283c:	4a19      	ldr	r2, [pc, #100]	; (80028a4 <main+0x480>)
  xBackendSystemQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xBackendSystemQueue_attributes);
 800283e:	6018      	str	r0, [r3, #0]
  xFrontendQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xFrontendQueue_attributes);
 8002840:	212c      	movs	r1, #44	; 0x2c
 8002842:	4648      	mov	r0, r9
 8002844:	f006 fc80 	bl	8009148 <osMessageQueueNew>
 8002848:	4b17      	ldr	r3, [pc, #92]	; (80028a8 <main+0x484>)
  xDaqQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xDaqQueue_attributes);
 800284a:	4a18      	ldr	r2, [pc, #96]	; (80028ac <main+0x488>)
  xFrontendQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xFrontendQueue_attributes);
 800284c:	6018      	str	r0, [r3, #0]
  xDaqQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xDaqQueue_attributes);
 800284e:	212c      	movs	r1, #44	; 0x2c
 8002850:	4648      	mov	r0, r9
 8002852:	f006 fc79 	bl	8009148 <osMessageQueueNew>
 8002856:	4b16      	ldr	r3, [pc, #88]	; (80028b0 <main+0x48c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002858:	4a16      	ldr	r2, [pc, #88]	; (80028b4 <main+0x490>)
  xDaqQueueHandle = osMessageQueueNew (16, sizeof(xQueueMsgFormat_t), &xDaqQueue_attributes);
 800285a:	6018      	str	r0, [r3, #0]
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800285c:	4621      	mov	r1, r4
 800285e:	4816      	ldr	r0, [pc, #88]	; (80028b8 <main+0x494>)
 8002860:	f006 fb80 	bl	8008f64 <osThreadNew>
 8002864:	4b15      	ldr	r3, [pc, #84]	; (80028bc <main+0x498>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002866:	4a16      	ldr	r2, [pc, #88]	; (80028c0 <main+0x49c>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 8002868:	6018      	str	r0, [r3, #0]
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 800286a:	4621      	mov	r1, r4
 800286c:	4815      	ldr	r0, [pc, #84]	; (80028c4 <main+0x4a0>)
 800286e:	f006 fb79 	bl	8008f64 <osThreadNew>
 8002872:	4b15      	ldr	r3, [pc, #84]	; (80028c8 <main+0x4a4>)
  daqTaskHandle = osThreadNew(StartDaqTask, NULL, &daqTask_attributes);
 8002874:	4a15      	ldr	r2, [pc, #84]	; (80028cc <main+0x4a8>)
  GUI_TaskHandle = osThreadNew(TouchGFX_Task, NULL, &GUI_Task_attributes);
 8002876:	6018      	str	r0, [r3, #0]
  daqTaskHandle = osThreadNew(StartDaqTask, NULL, &daqTask_attributes);
 8002878:	4621      	mov	r1, r4
 800287a:	4815      	ldr	r0, [pc, #84]	; (80028d0 <main+0x4ac>)
 800287c:	f006 fb72 	bl	8008f64 <osThreadNew>
 8002880:	4b14      	ldr	r3, [pc, #80]	; (80028d4 <main+0x4b0>)
 8002882:	6018      	str	r0, [r3, #0]
  osKernelStart();
 8002884:	f006 fb54 	bl	8008f30 <osKernelStart>
  while (1)
 8002888:	e7fe      	b.n	8002888 <main+0x464>
 800288a:	bf00      	nop
 800288c:	20002848 	.word	0x20002848
 8002890:	20002800 	.word	0x20002800
 8002894:	40001400 	.word	0x40001400
 8002898:	080282fd 	.word	0x080282fd
 800289c:	080283c4 	.word	0x080283c4
 80028a0:	2000288c 	.word	0x2000288c
 80028a4:	080283f4 	.word	0x080283f4
 80028a8:	200028d0 	.word	0x200028d0
 80028ac:	080283dc 	.word	0x080283dc
 80028b0:	200028cc 	.word	0x200028cc
 80028b4:	080283a0 	.word	0x080283a0
 80028b8:	08002259 	.word	0x08002259
 80028bc:	200025e4 	.word	0x200025e4
 80028c0:	08028358 	.word	0x08028358
 80028c4:	0800107b 	.word	0x0800107b
 80028c8:	200025d8 	.word	0x200025d8
 80028cc:	0802837c 	.word	0x0802837c
 80028d0:	08002079 	.word	0x08002079
 80028d4:	200025e0 	.word	0x200025e0

080028d8 <IOE_Init>:
 80028d8:	4770      	bx	lr

080028da <IOE_ITConfig>:
 80028da:	4770      	bx	lr

080028dc <IOE_Write>:
{
 80028dc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, &Value, 1, I2c3Timeout);
 80028de:	4b09      	ldr	r3, [pc, #36]	; (8002904 <IOE_Write+0x28>)
 80028e0:	f88d 2017 	strb.w	r2, [sp, #23]
 80028e4:	681b      	ldr	r3, [r3, #0]
 80028e6:	9302      	str	r3, [sp, #8]
 80028e8:	f10d 0217 	add.w	r2, sp, #23
 80028ec:	2301      	movs	r3, #1
 80028ee:	9200      	str	r2, [sp, #0]
 80028f0:	9301      	str	r3, [sp, #4]
 80028f2:	460a      	mov	r2, r1
 80028f4:	4601      	mov	r1, r0
 80028f6:	4804      	ldr	r0, [pc, #16]	; (8002908 <IOE_Write+0x2c>)
 80028f8:	f004 fb80 	bl	8006ffc <HAL_I2C_Mem_Write>
}
 80028fc:	b007      	add	sp, #28
 80028fe:	f85d fb04 	ldr.w	pc, [sp], #4
 8002902:	bf00      	nop
 8002904:	2000000c 	.word	0x2000000c
 8002908:	20002630 	.word	0x20002630

0800290c <IOE_Read>:
{
 800290c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t value = 0;
 800290e:	2300      	movs	r3, #0
 8002910:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 8002914:	4b08      	ldr	r3, [pc, #32]	; (8002938 <IOE_Read+0x2c>)
 8002916:	681b      	ldr	r3, [r3, #0]
 8002918:	9302      	str	r3, [sp, #8]
{
 800291a:	460a      	mov	r2, r1
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, Reg, I2C_MEMADD_SIZE_8BIT, &value, 1, I2c3Timeout);
 800291c:	2301      	movs	r3, #1
 800291e:	f10d 0117 	add.w	r1, sp, #23
 8002922:	9100      	str	r1, [sp, #0]
 8002924:	9301      	str	r3, [sp, #4]
 8002926:	4601      	mov	r1, r0
 8002928:	4804      	ldr	r0, [pc, #16]	; (800293c <IOE_Read+0x30>)
 800292a:	f004 fbf7 	bl	800711c <HAL_I2C_Mem_Read>
}
 800292e:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002932:	b007      	add	sp, #28
 8002934:	f85d fb04 	ldr.w	pc, [sp], #4
 8002938:	2000000c 	.word	0x2000000c
 800293c:	20002630 	.word	0x20002630

08002940 <IOE_ReadMultiple>:
{
 8002940:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&hi2c3, Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, pBuffer, Length, I2c3Timeout);
 8002942:	4c08      	ldr	r4, [pc, #32]	; (8002964 <IOE_ReadMultiple+0x24>)
 8002944:	6824      	ldr	r4, [r4, #0]
 8002946:	9200      	str	r2, [sp, #0]
 8002948:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800294c:	460a      	mov	r2, r1
 800294e:	2301      	movs	r3, #1
 8002950:	4601      	mov	r1, r0
 8002952:	4805      	ldr	r0, [pc, #20]	; (8002968 <IOE_ReadMultiple+0x28>)
 8002954:	f004 fbe2 	bl	800711c <HAL_I2C_Mem_Read>
}
 8002958:	3800      	subs	r0, #0
 800295a:	bf18      	it	ne
 800295c:	2001      	movne	r0, #1
 800295e:	b004      	add	sp, #16
 8002960:	bd10      	pop	{r4, pc}
 8002962:	bf00      	nop
 8002964:	2000000c 	.word	0x2000000c
 8002968:	20002630 	.word	0x20002630

0800296c <IOE_Delay>:
 800296c:	f003 bc0e 	b.w	800618c <HAL_Delay>

08002970 <LCD_IO_Init>:
{
 8002970:	b508      	push	{r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002972:	4806      	ldr	r0, [pc, #24]	; (800298c <LCD_IO_Init+0x1c>)
 8002974:	2200      	movs	r2, #0
 8002976:	2104      	movs	r1, #4
 8002978:	f003 fe66 	bl	8006648 <HAL_GPIO_WritePin>
}
 800297c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002980:	4802      	ldr	r0, [pc, #8]	; (800298c <LCD_IO_Init+0x1c>)
 8002982:	2201      	movs	r2, #1
 8002984:	2104      	movs	r1, #4
 8002986:	f003 be5f 	b.w	8006648 <HAL_GPIO_WritePin>
 800298a:	bf00      	nop
 800298c:	40020800 	.word	0x40020800

08002990 <LCD_IO_WriteData>:
{
 8002990:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002992:	4d0b      	ldr	r5, [pc, #44]	; (80029c0 <LCD_IO_WriteData+0x30>)
{
 8002994:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002996:	2201      	movs	r2, #1
 8002998:	480a      	ldr	r0, [pc, #40]	; (80029c4 <LCD_IO_WriteData+0x34>)
 800299a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800299e:	f003 fe53 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80029a2:	2200      	movs	r2, #0
 80029a4:	2104      	movs	r1, #4
 80029a6:	4628      	mov	r0, r5
 80029a8:	f003 fe4e 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 80029ac:	4620      	mov	r0, r4
 80029ae:	f7ff fc41 	bl	8002234 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80029b2:	4628      	mov	r0, r5
 80029b4:	2201      	movs	r2, #1
}
 80029b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80029ba:	2104      	movs	r1, #4
 80029bc:	f003 be44 	b.w	8006648 <HAL_GPIO_WritePin>
 80029c0:	40020800 	.word	0x40020800
 80029c4:	40020c00 	.word	0x40020c00

080029c8 <LCD_IO_WriteReg>:
{
 80029c8:	b538      	push	{r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80029ca:	4d0b      	ldr	r5, [pc, #44]	; (80029f8 <LCD_IO_WriteReg+0x30>)
{
 80029cc:	4604      	mov	r4, r0
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 80029ce:	2200      	movs	r2, #0
 80029d0:	480a      	ldr	r0, [pc, #40]	; (80029fc <LCD_IO_WriteReg+0x34>)
 80029d2:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80029d6:	f003 fe37 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 80029da:	2200      	movs	r2, #0
 80029dc:	2104      	movs	r1, #4
 80029de:	4628      	mov	r0, r5
 80029e0:	f003 fe32 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(Reg);
 80029e4:	4620      	mov	r0, r4
 80029e6:	f7ff fc25 	bl	8002234 <SPI5_Write>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80029ea:	4628      	mov	r0, r5
 80029ec:	2201      	movs	r2, #1
}
 80029ee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 80029f2:	2104      	movs	r1, #4
 80029f4:	f003 be28 	b.w	8006648 <HAL_GPIO_WritePin>
 80029f8:	40020800 	.word	0x40020800
 80029fc:	40020c00 	.word	0x40020c00

08002a00 <LCD_IO_ReadData>:
{
 8002a00:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a02:	4e14      	ldr	r6, [pc, #80]	; (8002a54 <LCD_IO_ReadData+0x54>)
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002a04:	4f14      	ldr	r7, [pc, #80]	; (8002a58 <LCD_IO_ReadData+0x58>)
{
 8002a06:	4605      	mov	r5, r0
 8002a08:	460c      	mov	r4, r1
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_RESET);
 8002a0a:	4630      	mov	r0, r6
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	2104      	movs	r1, #4
 8002a10:	f003 fe1a 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_RESET);
 8002a14:	2200      	movs	r2, #0
 8002a16:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 8002a1a:	4638      	mov	r0, r7
 8002a1c:	f003 fe14 	bl	8006648 <HAL_GPIO_WritePin>
  SPI5_Write(RegValue);
 8002a20:	4628      	mov	r0, r5
 8002a22:	f7ff fc07 	bl	8002234 <SPI5_Write>
  status = HAL_SPI_Receive(&hspi5, (uint8_t*) &readvalue, ReadSize, Spi5Timeout);
 8002a26:	4b0d      	ldr	r3, [pc, #52]	; (8002a5c <LCD_IO_ReadData+0x5c>)
 8002a28:	480d      	ldr	r0, [pc, #52]	; (8002a60 <LCD_IO_ReadData+0x60>)
 8002a2a:	681b      	ldr	r3, [r3, #0]
 8002a2c:	4622      	mov	r2, r4
 8002a2e:	a901      	add	r1, sp, #4
 8002a30:	f005 fd36 	bl	80084a0 <HAL_SPI_Receive>
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002a34:	4638      	mov	r0, r7
 8002a36:	2201      	movs	r2, #1
 8002a38:	f44f 5100 	mov.w	r1, #8192	; 0x2000
  return readvalue;
 8002a3c:	9c01      	ldr	r4, [sp, #4]
  HAL_GPIO_WritePin(GPIOD, GPIO_PIN_13, GPIO_PIN_SET);
 8002a3e:	f003 fe03 	bl	8006648 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, GPIO_PIN_SET);
 8002a42:	4630      	mov	r0, r6
 8002a44:	2201      	movs	r2, #1
 8002a46:	2104      	movs	r1, #4
 8002a48:	f003 fdfe 	bl	8006648 <HAL_GPIO_WritePin>
}
 8002a4c:	4620      	mov	r0, r4
 8002a4e:	b003      	add	sp, #12
 8002a50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002a52:	bf00      	nop
 8002a54:	40020800 	.word	0x40020800
 8002a58:	40020c00 	.word	0x40020c00
 8002a5c:	20000010 	.word	0x20000010
 8002a60:	20002760 	.word	0x20002760

08002a64 <LCD_Delay>:
  HAL_Delay(Delay);
 8002a64:	f003 bb92 	b.w	800618c <HAL_Delay>

08002a68 <__io_putchar>:
{
 8002a68:	b513      	push	{r0, r1, r4, lr}
  while (HAL_OK != HAL_UART_Transmit(&huart1, (uint8_t *) &ch, 1, 30000))
 8002a6a:	4c07      	ldr	r4, [pc, #28]	; (8002a88 <__io_putchar+0x20>)
{
 8002a6c:	9001      	str	r0, [sp, #4]
  while (HAL_OK != HAL_UART_Transmit(&huart1, (uint8_t *) &ch, 1, 30000))
 8002a6e:	f247 5330 	movw	r3, #30000	; 0x7530
 8002a72:	2201      	movs	r2, #1
 8002a74:	a901      	add	r1, sp, #4
 8002a76:	4620      	mov	r0, r4
 8002a78:	f006 f8e8 	bl	8008c4c <HAL_UART_Transmit>
 8002a7c:	2800      	cmp	r0, #0
 8002a7e:	d1f6      	bne.n	8002a6e <__io_putchar+0x6>
}
 8002a80:	9801      	ldr	r0, [sp, #4]
 8002a82:	b002      	add	sp, #8
 8002a84:	bd10      	pop	{r4, pc}
 8002a86:	bf00      	nop
 8002a88:	20002848 	.word	0x20002848

08002a8c <__io_getchar>:
{
 8002a8c:	b513      	push	{r0, r1, r4, lr}
  uint8_t ch = 0;
 8002a8e:	2300      	movs	r3, #0
  while (HAL_OK != HAL_UART_Receive(&huart1, (uint8_t *)&ch, 1, 30000))
 8002a90:	4c08      	ldr	r4, [pc, #32]	; (8002ab4 <__io_getchar+0x28>)
  uint8_t ch = 0;
 8002a92:	f88d 3007 	strb.w	r3, [sp, #7]
  while (HAL_OK != HAL_UART_Receive(&huart1, (uint8_t *)&ch, 1, 30000))
 8002a96:	f247 5330 	movw	r3, #30000	; 0x7530
 8002a9a:	2201      	movs	r2, #1
 8002a9c:	f10d 0107 	add.w	r1, sp, #7
 8002aa0:	4620      	mov	r0, r4
 8002aa2:	f006 f928 	bl	8008cf6 <HAL_UART_Receive>
 8002aa6:	2800      	cmp	r0, #0
 8002aa8:	d1f5      	bne.n	8002a96 <__io_getchar+0xa>
}
 8002aaa:	f89d 0007 	ldrb.w	r0, [sp, #7]
 8002aae:	b002      	add	sp, #8
 8002ab0:	bd10      	pop	{r4, pc}
 8002ab2:	bf00      	nop
 8002ab4:	20002848 	.word	0x20002848

08002ab8 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002ab8:	6802      	ldr	r2, [r0, #0]
 8002aba:	4b0d      	ldr	r3, [pc, #52]	; (8002af0 <HAL_TIM_PeriodElapsedCallback+0x38>)
 8002abc:	429a      	cmp	r2, r3
{
 8002abe:	b513      	push	{r0, r1, r4, lr}
 8002ac0:	4604      	mov	r4, r0
  if (htim->Instance == TIM6) {
 8002ac2:	d101      	bne.n	8002ac8 <HAL_TIM_PeriodElapsedCallback+0x10>
    HAL_IncTick();
 8002ac4:	f003 fb50 	bl	8006168 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */
  if(htim->Instance == TIM2)
 8002ac8:	6823      	ldr	r3, [r4, #0]
 8002aca:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8002ace:	d10c      	bne.n	8002aea <HAL_TIM_PeriodElapsedCallback+0x32>
  {
	  // todo: instead fo writing what to do here when timer is up, call a function which is defined in daqTask.c to do the job for clean code
	  HAL_GPIO_TogglePin(LD4_GPIO_Port, LD4_Pin);
 8002ad0:	4808      	ldr	r0, [pc, #32]	; (8002af4 <HAL_TIM_PeriodElapsedCallback+0x3c>)
 8002ad2:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 8002ad6:	f003 fdbc 	bl	8006652 <HAL_GPIO_TogglePin>
	  bSendQueueFromIsr(enModule_Daq, enModule_Daq, enQueueMsg_DaqDataReady, enQueueMsgType_NONE, 0, NULL);
 8002ada:	2300      	movs	r3, #0
 8002adc:	2101      	movs	r1, #1
 8002ade:	e9cd 3300 	strd	r3, r3, [sp]
 8002ae2:	220c      	movs	r2, #12
 8002ae4:	4608      	mov	r0, r1
 8002ae6:	f7ff fa77 	bl	8001fd8 <bSendQueueFromIsr>
  }
  /* USER CODE END Callback 1 */
}
 8002aea:	b002      	add	sp, #8
 8002aec:	bd10      	pop	{r4, pc}
 8002aee:	bf00      	nop
 8002af0:	40001000 	.word	0x40001000
 8002af4:	40021800 	.word	0x40021800

08002af8 <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002af8:	4770      	bx	lr
	...

08002afc <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002afc:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002afe:	4b0e      	ldr	r3, [pc, #56]	; (8002b38 <HAL_MspInit+0x3c>)
 8002b00:	2200      	movs	r2, #0
 8002b02:	9200      	str	r2, [sp, #0]
 8002b04:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002b06:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8002b0a:	6459      	str	r1, [r3, #68]	; 0x44
 8002b0c:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002b0e:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8002b12:	9100      	str	r1, [sp, #0]
 8002b14:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002b16:	9201      	str	r2, [sp, #4]
 8002b18:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002b1a:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002b1e:	6419      	str	r1, [r3, #64]	; 0x40
 8002b20:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002b22:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8002b26:	9301      	str	r3, [sp, #4]
 8002b28:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002b2a:	210f      	movs	r1, #15
 8002b2c:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002b30:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002b32:	f003 bb51 	b.w	80061d8 <HAL_NVIC_SetPriority>
 8002b36:	bf00      	nop
 8002b38:	40023800 	.word	0x40023800

08002b3c <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002b3c:	6802      	ldr	r2, [r0, #0]
 8002b3e:	4b09      	ldr	r3, [pc, #36]	; (8002b64 <HAL_CRC_MspInit+0x28>)
 8002b40:	429a      	cmp	r2, r3
{
 8002b42:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002b44:	d10b      	bne.n	8002b5e <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 8002b46:	2300      	movs	r3, #0
 8002b48:	9301      	str	r3, [sp, #4]
 8002b4a:	4b07      	ldr	r3, [pc, #28]	; (8002b68 <HAL_CRC_MspInit+0x2c>)
 8002b4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002b4e:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002b52:	631a      	str	r2, [r3, #48]	; 0x30
 8002b54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b56:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002b5a:	9301      	str	r3, [sp, #4]
 8002b5c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002b5e:	b002      	add	sp, #8
 8002b60:	4770      	bx	lr
 8002b62:	bf00      	nop
 8002b64:	40023000 	.word	0x40023000
 8002b68:	40023800 	.word	0x40023800

08002b6c <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 8002b6c:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 8002b6e:	4b0f      	ldr	r3, [pc, #60]	; (8002bac <HAL_DMA2D_MspInit+0x40>)
 8002b70:	6802      	ldr	r2, [r0, #0]
 8002b72:	429a      	cmp	r2, r3
 8002b74:	d116      	bne.n	8002ba4 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002b76:	2200      	movs	r2, #0
 8002b78:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 8002b7c:	9201      	str	r2, [sp, #4]
 8002b7e:	6b19      	ldr	r1, [r3, #48]	; 0x30
 8002b80:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8002b84:	6319      	str	r1, [r3, #48]	; 0x30
 8002b86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002b88:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002b8c:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002b8e:	2105      	movs	r1, #5
 8002b90:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8002b92:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8002b94:	f003 fb20 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002b98:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8002b9a:	b003      	add	sp, #12
 8002b9c:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8002ba0:	f003 bb4c 	b.w	800623c <HAL_NVIC_EnableIRQ>
}
 8002ba4:	b003      	add	sp, #12
 8002ba6:	f85d fb04 	ldr.w	pc, [sp], #4
 8002baa:	bf00      	nop
 8002bac:	4002b000 	.word	0x4002b000

08002bb0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002bb0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002bb4:	4604      	mov	r4, r0
 8002bb6:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002bb8:	2214      	movs	r2, #20
 8002bba:	2100      	movs	r1, #0
 8002bbc:	a803      	add	r0, sp, #12
 8002bbe:	f020 f88b 	bl	8022cd8 <memset>
  if(hi2c->Instance==I2C3)
 8002bc2:	6822      	ldr	r2, [r4, #0]
 8002bc4:	4b24      	ldr	r3, [pc, #144]	; (8002c58 <HAL_I2C_MspInit+0xa8>)
 8002bc6:	429a      	cmp	r2, r3
 8002bc8:	d143      	bne.n	8002c52 <HAL_I2C_MspInit+0xa2>
  {
  /* USER CODE BEGIN I2C3_MspInit 0 */

  /* USER CODE END I2C3_MspInit 0 */

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002bca:	4c24      	ldr	r4, [pc, #144]	; (8002c5c <HAL_I2C_MspInit+0xac>)
    GPIO_InitStruct.Pin = GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002bcc:	4824      	ldr	r0, [pc, #144]	; (8002c60 <HAL_I2C_MspInit+0xb0>)
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002bce:	2500      	movs	r5, #0
 8002bd0:	9500      	str	r5, [sp, #0]
 8002bd2:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002bd4:	f043 0304 	orr.w	r3, r3, #4
 8002bd8:	6323      	str	r3, [r4, #48]	; 0x30
 8002bda:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002bdc:	f003 0304 	and.w	r3, r3, #4
 8002be0:	9300      	str	r3, [sp, #0]
 8002be2:	9b00      	ldr	r3, [sp, #0]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002be4:	9501      	str	r5, [sp, #4]
 8002be6:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002be8:	f043 0301 	orr.w	r3, r3, #1
 8002bec:	6323      	str	r3, [r4, #48]	; 0x30
 8002bee:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002bf0:	f003 0301 	and.w	r3, r3, #1
 8002bf4:	9301      	str	r3, [sp, #4]
 8002bf6:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002bf8:	f04f 0912 	mov.w	r9, #18
 8002bfc:	f44f 7300 	mov.w	r3, #512	; 0x200
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c00:	f04f 0801 	mov.w	r8, #1
 8002c04:	2703      	movs	r7, #3
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c06:	2604      	movs	r6, #4
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c08:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002c0a:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c0e:	e9cd 8705 	strd	r8, r7, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c12:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002c14:	f003 fc2c 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_8;
 8002c18:	f44f 7380 	mov.w	r3, #256	; 0x100
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c1c:	4811      	ldr	r0, [pc, #68]	; (8002c64 <HAL_I2C_MspInit+0xb4>)
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C3;
 8002c1e:	9607      	str	r6, [sp, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c20:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002c22:	e9cd 3903 	strd	r3, r9, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c26:	e9cd 8705 	strd	r8, r7, [sp, #20]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002c2a:	f003 fc21 	bl	8006470 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C3_CLK_ENABLE();
 8002c2e:	9502      	str	r5, [sp, #8]
 8002c30:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002c32:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002c36:	6423      	str	r3, [r4, #64]	; 0x40
 8002c38:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002c3a:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8002c3e:	9302      	str	r3, [sp, #8]
 8002c40:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C3_MspInit 1 */
  /* Force the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_FORCE_RESET();
 8002c42:	6a23      	ldr	r3, [r4, #32]
 8002c44:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8002c48:	6223      	str	r3, [r4, #32]
      
    /* Release the I2C Peripheral Clock Reset */  
    __HAL_RCC_I2C3_RELEASE_RESET(); 
 8002c4a:	6a23      	ldr	r3, [r4, #32]
 8002c4c:	f423 0300 	bic.w	r3, r3, #8388608	; 0x800000
 8002c50:	6223      	str	r3, [r4, #32]
  /* USER CODE END I2C3_MspInit 1 */
  }

}
 8002c52:	b009      	add	sp, #36	; 0x24
 8002c54:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002c58:	40005c00 	.word	0x40005c00
 8002c5c:	40023800 	.word	0x40023800
 8002c60:	40020800 	.word	0x40020800
 8002c64:	40020000 	.word	0x40020000

08002c68 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002c68:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002c6a:	b099      	sub	sp, #100	; 0x64
 8002c6c:	4604      	mov	r4, r0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002c6e:	2214      	movs	r2, #20
 8002c70:	2100      	movs	r1, #0
 8002c72:	a807      	add	r0, sp, #28
 8002c74:	f020 f830 	bl	8022cd8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002c78:	2230      	movs	r2, #48	; 0x30
 8002c7a:	eb0d 0002 	add.w	r0, sp, r2
 8002c7e:	2100      	movs	r1, #0
 8002c80:	f020 f82a 	bl	8022cd8 <memset>
  if(hltdc->Instance==LTDC)
 8002c84:	6822      	ldr	r2, [r4, #0]
 8002c86:	4b5e      	ldr	r3, [pc, #376]	; (8002e00 <HAL_LTDC_MspInit+0x198>)
 8002c88:	429a      	cmp	r2, r3
 8002c8a:	f040 80b7 	bne.w	8002dfc <HAL_LTDC_MspInit+0x194>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002c8e:	2308      	movs	r3, #8
 8002c90:	930c      	str	r3, [sp, #48]	; 0x30
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 192;
 8002c92:	23c0      	movs	r3, #192	; 0xc0
 8002c94:	9310      	str	r3, [sp, #64]	; 0x40
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 4;
 8002c96:	2304      	movs	r3, #4
 8002c98:	9312      	str	r3, [sp, #72]	; 0x48
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002c9a:	a80c      	add	r0, sp, #48	; 0x30
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_8;
 8002c9c:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 8002ca0:	9315      	str	r3, [sp, #84]	; 0x54
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002ca2:	f004 ffd5 	bl	8007c50 <HAL_RCCEx_PeriphCLKConfig>
 8002ca6:	b108      	cbz	r0, 8002cac <HAL_LTDC_MspInit+0x44>
    {
      Error_Handler();
 8002ca8:	f7ff ff26 	bl	8002af8 <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002cac:	4b55      	ldr	r3, [pc, #340]	; (8002e04 <HAL_LTDC_MspInit+0x19c>)
    GPIO_InitStruct.Pin = GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002cae:	4856      	ldr	r0, [pc, #344]	; (8002e08 <HAL_LTDC_MspInit+0x1a0>)
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002cb0:	2400      	movs	r4, #0
 8002cb2:	9400      	str	r4, [sp, #0]
 8002cb4:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002cb6:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8002cba:	645a      	str	r2, [r3, #68]	; 0x44
 8002cbc:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002cbe:	f002 6280 	and.w	r2, r2, #67108864	; 0x4000000
 8002cc2:	9200      	str	r2, [sp, #0]
 8002cc4:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002cc6:	9401      	str	r4, [sp, #4]
 8002cc8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cca:	f042 0220 	orr.w	r2, r2, #32
 8002cce:	631a      	str	r2, [r3, #48]	; 0x30
 8002cd0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cd2:	f002 0220 	and.w	r2, r2, #32
 8002cd6:	9201      	str	r2, [sp, #4]
 8002cd8:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002cda:	9402      	str	r4, [sp, #8]
 8002cdc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cde:	f042 0201 	orr.w	r2, r2, #1
 8002ce2:	631a      	str	r2, [r3, #48]	; 0x30
 8002ce4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ce6:	f002 0201 	and.w	r2, r2, #1
 8002cea:	9202      	str	r2, [sp, #8]
 8002cec:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002cee:	9403      	str	r4, [sp, #12]
 8002cf0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cf2:	f042 0202 	orr.w	r2, r2, #2
 8002cf6:	631a      	str	r2, [r3, #48]	; 0x30
 8002cf8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cfa:	f002 0202 	and.w	r2, r2, #2
 8002cfe:	9203      	str	r2, [sp, #12]
 8002d00:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8002d02:	9404      	str	r4, [sp, #16]
 8002d04:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d06:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002d0a:	631a      	str	r2, [r3, #48]	; 0x30
 8002d0c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d0e:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8002d12:	9204      	str	r2, [sp, #16]
 8002d14:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8002d16:	9405      	str	r4, [sp, #20]
 8002d18:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d1a:	f042 0204 	orr.w	r2, r2, #4
 8002d1e:	631a      	str	r2, [r3, #48]	; 0x30
 8002d20:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d22:	f002 0204 	and.w	r2, r2, #4
 8002d26:	9205      	str	r2, [sp, #20]
 8002d28:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002d2a:	9406      	str	r4, [sp, #24]
 8002d2c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d2e:	f042 0208 	orr.w	r2, r2, #8
 8002d32:	631a      	str	r2, [r3, #48]	; 0x30
 8002d34:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d36:	f003 0308 	and.w	r3, r3, #8
 8002d3a:	9306      	str	r3, [sp, #24]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d3c:	2502      	movs	r5, #2
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d3e:	260e      	movs	r6, #14
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8002d40:	9b06      	ldr	r3, [sp, #24]
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d42:	960b      	str	r6, [sp, #44]	; 0x2c
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d44:	f44f 6380 	mov.w	r3, #1024	; 0x400
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002d48:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d4a:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d4e:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002d52:	f003 fb8d 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_6|GPIO_PIN_11
 8002d56:	f641 0358 	movw	r3, #6232	; 0x1858
                          |GPIO_PIN_12;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d5a:	482c      	ldr	r0, [pc, #176]	; (8002e0c <HAL_LTDC_MspInit+0x1a4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d5c:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d5e:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d60:	e9cd 3507 	strd	r3, r5, [sp, #28]

    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002d64:	2709      	movs	r7, #9
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d66:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d6a:	f003 fb81 	bl	8006470 <HAL_GPIO_Init>
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8002d6e:	2303      	movs	r3, #3
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d70:	4827      	ldr	r0, [pc, #156]	; (8002e10 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002d72:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d74:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d76:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d7a:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d7e:	f003 fb77 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_11|GPIO_PIN_8|GPIO_PIN_9;
 8002d82:	f44f 6370 	mov.w	r3, #3840	; 0xf00
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d86:	4822      	ldr	r0, [pc, #136]	; (8002e10 <HAL_LTDC_MspInit+0x1a8>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d88:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d8a:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d8c:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002d90:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002d94:	f003 fb6c 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7|GPIO_PIN_11;
 8002d98:	f44f 630c 	mov.w	r3, #2240	; 0x8c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002d9c:	481d      	ldr	r0, [pc, #116]	; (8002e14 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002d9e:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002da0:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002da2:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002da6:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002daa:	f003 fb61 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002dae:	23c0      	movs	r3, #192	; 0xc0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002db0:	4819      	ldr	r0, [pc, #100]	; (8002e18 <HAL_LTDC_MspInit+0x1b0>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002db2:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002db4:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002db6:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002dba:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002dbe:	f003 fb57 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 8002dc2:	2308      	movs	r3, #8
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dc4:	4815      	ldr	r0, [pc, #84]	; (8002e1c <HAL_LTDC_MspInit+0x1b4>)
    GPIO_InitStruct.Alternate = GPIO_AF14_LTDC;
 8002dc6:	960b      	str	r6, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dc8:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002dca:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002dce:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dd2:	f003 fb4d 	bl	8006470 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_12;
 8002dd6:	f44f 53a0 	mov.w	r3, #5120	; 0x1400
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002dda:	480e      	ldr	r0, [pc, #56]	; (8002e14 <HAL_LTDC_MspInit+0x1ac>)
    GPIO_InitStruct.Alternate = GPIO_AF9_LTDC;
 8002ddc:	970b      	str	r7, [sp, #44]	; 0x2c
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002dde:	a907      	add	r1, sp, #28
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002de0:	e9cd 3507 	strd	r3, r5, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002de4:	e9cd 4509 	strd	r4, r5, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002de8:	f003 fb42 	bl	8006470 <HAL_GPIO_Init>

    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002dec:	2058      	movs	r0, #88	; 0x58
 8002dee:	4622      	mov	r2, r4
 8002df0:	2105      	movs	r1, #5
 8002df2:	f003 f9f1 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002df6:	2058      	movs	r0, #88	; 0x58
 8002df8:	f003 fa20 	bl	800623c <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002dfc:	b019      	add	sp, #100	; 0x64
 8002dfe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e00:	40016800 	.word	0x40016800
 8002e04:	40023800 	.word	0x40023800
 8002e08:	40021400 	.word	0x40021400
 8002e0c:	40020000 	.word	0x40020000
 8002e10:	40020400 	.word	0x40020400
 8002e14:	40021800 	.word	0x40021800
 8002e18:	40020800 	.word	0x40020800
 8002e1c:	40020c00 	.word	0x40020c00

08002e20 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8002e20:	b510      	push	{r4, lr}
 8002e22:	4604      	mov	r4, r0
 8002e24:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e26:	2214      	movs	r2, #20
 8002e28:	2100      	movs	r1, #0
 8002e2a:	a803      	add	r0, sp, #12
 8002e2c:	f01f ff54 	bl	8022cd8 <memset>
  if(hspi->Instance==SPI5)
 8002e30:	6822      	ldr	r2, [r4, #0]
 8002e32:	4b14      	ldr	r3, [pc, #80]	; (8002e84 <HAL_SPI_MspInit+0x64>)
 8002e34:	429a      	cmp	r2, r3
 8002e36:	d123      	bne.n	8002e80 <HAL_SPI_MspInit+0x60>
  {
  /* USER CODE BEGIN SPI5_MspInit 0 */

  /* USER CODE END SPI5_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002e38:	f503 4368 	add.w	r3, r3, #59392	; 0xe800
 8002e3c:	2100      	movs	r1, #0
 8002e3e:	9101      	str	r1, [sp, #4]
 8002e40:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002e42:	4811      	ldr	r0, [pc, #68]	; (8002e88 <HAL_SPI_MspInit+0x68>)
    __HAL_RCC_SPI5_CLK_ENABLE();
 8002e44:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8002e48:	645a      	str	r2, [r3, #68]	; 0x44
 8002e4a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002e4c:	f402 1280 	and.w	r2, r2, #1048576	; 0x100000
 8002e50:	9201      	str	r2, [sp, #4]
 8002e52:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002e54:	9102      	str	r1, [sp, #8]
 8002e56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e58:	f042 0220 	orr.w	r2, r2, #32
 8002e5c:	631a      	str	r2, [r3, #48]	; 0x30
 8002e5e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e60:	f003 0320 	and.w	r3, r3, #32
 8002e64:	9302      	str	r3, [sp, #8]
 8002e66:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e68:	f44f 7260 	mov.w	r2, #896	; 0x380
 8002e6c:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002e6e:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e70:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI5;
 8002e74:	2305      	movs	r3, #5
 8002e76:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002e7a:	a903      	add	r1, sp, #12
 8002e7c:	f003 faf8 	bl	8006470 <HAL_GPIO_Init>
  /* USER CODE BEGIN SPI5_MspInit 1 */

  /* USER CODE END SPI5_MspInit 1 */
  }

}
 8002e80:	b008      	add	sp, #32
 8002e82:	bd10      	pop	{r4, pc}
 8002e84:	40015000 	.word	0x40015000
 8002e88:	40021400 	.word	0x40021400

08002e8c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM2)
 8002e8c:	6803      	ldr	r3, [r0, #0]
 8002e8e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
{
 8002e92:	b507      	push	{r0, r1, r2, lr}
  if(htim_base->Instance==TIM2)
 8002e94:	d116      	bne.n	8002ec4 <HAL_TIM_Base_MspInit+0x38>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002e96:	f503 330e 	add.w	r3, r3, #145408	; 0x23800
 8002e9a:	2200      	movs	r2, #0
 8002e9c:	9200      	str	r2, [sp, #0]
 8002e9e:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002ea0:	f041 0101 	orr.w	r1, r1, #1
 8002ea4:	6419      	str	r1, [r3, #64]	; 0x40
 8002ea6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ea8:	f003 0301 	and.w	r3, r3, #1
 8002eac:	9300      	str	r3, [sp, #0]
    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002eae:	201c      	movs	r0, #28
 8002eb0:	2105      	movs	r1, #5
    __HAL_RCC_TIM2_CLK_ENABLE();
 8002eb2:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(TIM2_IRQn, 5, 0);
 8002eb4:	f003 f990 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 8002eb8:	201c      	movs	r0, #28
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 8002eba:	b003      	add	sp, #12
 8002ebc:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8002ec0:	f003 b9bc 	b.w	800623c <HAL_NVIC_EnableIRQ>
  else if(htim_base->Instance==TIM7)
 8002ec4:	4a0b      	ldr	r2, [pc, #44]	; (8002ef4 <HAL_TIM_Base_MspInit+0x68>)
 8002ec6:	4293      	cmp	r3, r2
 8002ec8:	d111      	bne.n	8002eee <HAL_TIM_Base_MspInit+0x62>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8002eca:	4b0b      	ldr	r3, [pc, #44]	; (8002ef8 <HAL_TIM_Base_MspInit+0x6c>)
 8002ecc:	2200      	movs	r2, #0
 8002ece:	9201      	str	r2, [sp, #4]
 8002ed0:	6c19      	ldr	r1, [r3, #64]	; 0x40
 8002ed2:	f041 0120 	orr.w	r1, r1, #32
 8002ed6:	6419      	str	r1, [r3, #64]	; 0x40
 8002ed8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002eda:	f003 0320 	and.w	r3, r3, #32
 8002ede:	9301      	str	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8002ee0:	2037      	movs	r0, #55	; 0x37
 8002ee2:	2105      	movs	r1, #5
    __HAL_RCC_TIM7_CLK_ENABLE();
 8002ee4:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(TIM7_IRQn, 5, 0);
 8002ee6:	f003 f977 	bl	80061d8 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM7_IRQn);
 8002eea:	2037      	movs	r0, #55	; 0x37
 8002eec:	e7e5      	b.n	8002eba <HAL_TIM_Base_MspInit+0x2e>
}
 8002eee:	b003      	add	sp, #12
 8002ef0:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ef4:	40001400 	.word	0x40001400
 8002ef8:	40023800 	.word	0x40023800

08002efc <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002efc:	b510      	push	{r4, lr}
 8002efe:	4604      	mov	r4, r0
 8002f00:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002f02:	2214      	movs	r2, #20
 8002f04:	2100      	movs	r1, #0
 8002f06:	a803      	add	r0, sp, #12
 8002f08:	f01f fee6 	bl	8022cd8 <memset>
  if(huart->Instance==USART1)
 8002f0c:	6822      	ldr	r2, [r4, #0]
 8002f0e:	4b14      	ldr	r3, [pc, #80]	; (8002f60 <HAL_UART_MspInit+0x64>)
 8002f10:	429a      	cmp	r2, r3
 8002f12:	d123      	bne.n	8002f5c <HAL_UART_MspInit+0x60>
  {
  /* USER CODE BEGIN USART1_MspInit 0 */

  /* USER CODE END USART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART1_CLK_ENABLE();
 8002f14:	f503 3394 	add.w	r3, r3, #75776	; 0x12800
 8002f18:	2100      	movs	r1, #0
 8002f1a:	9101      	str	r1, [sp, #4]
 8002f1c:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002f1e:	4811      	ldr	r0, [pc, #68]	; (8002f64 <HAL_UART_MspInit+0x68>)
    __HAL_RCC_USART1_CLK_ENABLE();
 8002f20:	f042 0210 	orr.w	r2, r2, #16
 8002f24:	645a      	str	r2, [r3, #68]	; 0x44
 8002f26:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002f28:	f002 0210 	and.w	r2, r2, #16
 8002f2c:	9201      	str	r2, [sp, #4]
 8002f2e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002f30:	9102      	str	r1, [sp, #8]
 8002f32:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002f34:	f042 0201 	orr.w	r2, r2, #1
 8002f38:	631a      	str	r2, [r3, #48]	; 0x30
 8002f3a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002f3c:	f003 0301 	and.w	r3, r3, #1
 8002f40:	9302      	str	r3, [sp, #8]
 8002f42:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f44:	f44f 62c0 	mov.w	r2, #1536	; 0x600
 8002f48:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002f4a:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f4c:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 8002f50:	2307      	movs	r3, #7
 8002f52:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002f56:	a903      	add	r1, sp, #12
 8002f58:	f003 fa8a 	bl	8006470 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART1_MspInit 1 */

  /* USER CODE END USART1_MspInit 1 */
  }

}
 8002f5c:	b008      	add	sp, #32
 8002f5e:	bd10      	pop	{r4, pc}
 8002f60:	40011000 	.word	0x40011000
 8002f64:	40020000 	.word	0x40020000

08002f68 <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002f68:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8002f6c:	b086      	sub	sp, #24
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002f6e:	2300      	movs	r3, #0
 8002f70:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002f72:	4b2b      	ldr	r3, [pc, #172]	; (8003020 <HAL_SDRAM_MspInit+0xb8>)
 8002f74:	681c      	ldr	r4, [r3, #0]
 8002f76:	2c00      	cmp	r4, #0
 8002f78:	d14f      	bne.n	800301a <HAL_SDRAM_MspInit+0xb2>
  FMC_Initialized = 1;
 8002f7a:	f04f 0801 	mov.w	r8, #1
 8002f7e:	f8c3 8000 	str.w	r8, [r3]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002f82:	4b28      	ldr	r3, [pc, #160]	; (8003024 <HAL_SDRAM_MspInit+0xbc>)
 8002f84:	9400      	str	r4, [sp, #0]
 8002f86:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002f88:	4827      	ldr	r0, [pc, #156]	; (8003028 <HAL_SDRAM_MspInit+0xc0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002f8a:	ea42 0208 	orr.w	r2, r2, r8
 8002f8e:	639a      	str	r2, [r3, #56]	; 0x38
 8002f90:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002f92:	ea03 0308 	and.w	r3, r3, r8
 8002f96:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002f98:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002f9a:	2603      	movs	r6, #3
 8002f9c:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002f9e:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002fa0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fa2:	f64f 033f 	movw	r3, #63551	; 0xf83f
 8002fa6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002faa:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002fae:	f003 fa5f 	bl	8006470 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fb2:	481e      	ldr	r0, [pc, #120]	; (800302c <HAL_SDRAM_MspInit+0xc4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002fb4:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fb6:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fb8:	e9cd 8701 	strd	r8, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fbc:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002fc0:	f003 fa56 	bl	8006470 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_5
 8002fc4:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002fc8:	4819      	ldr	r0, [pc, #100]	; (8003030 <HAL_SDRAM_MspInit+0xc8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002fca:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002fcc:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fce:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fd2:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002fd6:	f003 fa4b 	bl	8006470 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10
 8002fda:	f64f 7383 	movw	r3, #65411	; 0xff83
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002fde:	4815      	ldr	r0, [pc, #84]	; (8003034 <HAL_SDRAM_MspInit+0xcc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002fe0:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002fe2:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002fe4:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002fe8:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002fec:	f003 fa40 	bl	8006470 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9|GPIO_PIN_10|GPIO_PIN_14
 8002ff0:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ff4:	4810      	ldr	r0, [pc, #64]	; (8003038 <HAL_SDRAM_MspInit+0xd0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002ff6:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002ff8:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ffa:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ffe:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8003002:	f003 fa35 	bl	8006470 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8003006:	2360      	movs	r3, #96	; 0x60
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003008:	480c      	ldr	r0, [pc, #48]	; (800303c <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 800300a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 800300c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800300e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003012:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8003016:	f003 fa2b 	bl	8006470 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 800301a:	b006      	add	sp, #24
 800301c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8003020:	200028d4 	.word	0x200028d4
 8003024:	40023800 	.word	0x40023800
 8003028:	40021400 	.word	0x40021400
 800302c:	40020800 	.word	0x40020800
 8003030:	40021800 	.word	0x40021800
 8003034:	40021000 	.word	0x40021000
 8003038:	40020c00 	.word	0x40020c00
 800303c:	40020400 	.word	0x40020400

08003040 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003040:	b570      	push	{r4, r5, r6, lr}
 8003042:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003044:	2300      	movs	r3, #0
 8003046:	9302      	str	r3, [sp, #8]
 8003048:	4b20      	ldr	r3, [pc, #128]	; (80030cc <HAL_InitTick+0x8c>)
 800304a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800304c:	f042 0210 	orr.w	r2, r2, #16
 8003050:	641a      	str	r2, [r3, #64]	; 0x40
 8003052:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003054:	f003 0310 	and.w	r3, r3, #16
 8003058:	9302      	str	r3, [sp, #8]
{
 800305a:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 800305c:	a901      	add	r1, sp, #4
 800305e:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8003060:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8003062:	f004 fdd7 	bl	8007c14 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8003066:	9b06      	ldr	r3, [sp, #24]
 8003068:	bb4b      	cbnz	r3, 80030be <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 800306a:	f004 fdb3 	bl	8007bd4 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 800306e:	4e18      	ldr	r6, [pc, #96]	; (80030d0 <HAL_InitTick+0x90>)
 8003070:	4b18      	ldr	r3, [pc, #96]	; (80030d4 <HAL_InitTick+0x94>)
 8003072:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8003074:	f240 33e7 	movw	r3, #999	; 0x3e7
 8003078:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 800307a:	4b17      	ldr	r3, [pc, #92]	; (80030d8 <HAL_InitTick+0x98>)
 800307c:	fbb0 f3f3 	udiv	r3, r0, r3
 8003080:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8003082:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8003084:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8003086:	2300      	movs	r3, #0
 8003088:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 800308a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800308c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 800308e:	f005 fc09 	bl	80088a4 <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8003092:	4604      	mov	r4, r0
 8003094:	b980      	cbnz	r0, 80030b8 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8003096:	4630      	mov	r0, r6
 8003098:	f005 faa6 	bl	80085e8 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 800309c:	4604      	mov	r4, r0
 800309e:	b958      	cbnz	r0, 80030b8 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 80030a0:	2036      	movs	r0, #54	; 0x36
 80030a2:	f003 f8cb 	bl	800623c <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80030a6:	2d0f      	cmp	r5, #15
 80030a8:	d80d      	bhi.n	80030c6 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 80030aa:	4622      	mov	r2, r4
 80030ac:	4629      	mov	r1, r5
 80030ae:	2036      	movs	r0, #54	; 0x36
 80030b0:	f003 f892 	bl	80061d8 <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 80030b4:	4b09      	ldr	r3, [pc, #36]	; (80030dc <HAL_InitTick+0x9c>)
 80030b6:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 80030b8:	4620      	mov	r0, r4
 80030ba:	b008      	add	sp, #32
 80030bc:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 80030be:	f004 fd89 	bl	8007bd4 <HAL_RCC_GetPCLK1Freq>
 80030c2:	0040      	lsls	r0, r0, #1
 80030c4:	e7d3      	b.n	800306e <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 80030c6:	2401      	movs	r4, #1
 80030c8:	e7f6      	b.n	80030b8 <HAL_InitTick+0x78>
 80030ca:	bf00      	nop
 80030cc:	40023800 	.word	0x40023800
 80030d0:	200028d8 	.word	0x200028d8
 80030d4:	40001000 	.word	0x40001000
 80030d8:	000f4240 	.word	0x000f4240
 80030dc:	2000007c 	.word	0x2000007c

080030e0 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 80030e0:	4770      	bx	lr

080030e2 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 80030e2:	e7fe      	b.n	80030e2 <HardFault_Handler>

080030e4 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 80030e4:	e7fe      	b.n	80030e4 <MemManage_Handler>

080030e6 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 80030e6:	e7fe      	b.n	80030e6 <BusFault_Handler>

080030e8 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 80030e8:	e7fe      	b.n	80030e8 <UsageFault_Handler>

080030ea <DebugMon_Handler>:
 80030ea:	4770      	bx	lr

080030ec <TIM2_IRQHandler>:
void TIM2_IRQHandler(void)
{
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80030ec:	4801      	ldr	r0, [pc, #4]	; (80030f4 <TIM2_IRQHandler+0x8>)
 80030ee:	f005 bad1 	b.w	8008694 <HAL_TIM_IRQHandler>
 80030f2:	bf00      	nop
 80030f4:	200027b8 	.word	0x200027b8

080030f8 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80030f8:	4801      	ldr	r0, [pc, #4]	; (8003100 <TIM6_DAC_IRQHandler+0x8>)
 80030fa:	f005 bacb 	b.w	8008694 <HAL_TIM_IRQHandler>
 80030fe:	bf00      	nop
 8003100:	200028d8 	.word	0x200028d8

08003104 <TIM7_IRQHandler>:
  * @brief This function handles TIM7 global interrupt.
  */
void TIM7_IRQHandler(void)
{
  /* USER CODE BEGIN TIM7_IRQn 0 */
	ulStatesTimerTicks++;
 8003104:	4a03      	ldr	r2, [pc, #12]	; (8003114 <TIM7_IRQHandler+0x10>)
  /* USER CODE END TIM7_IRQn 0 */
  HAL_TIM_IRQHandler(&htim7);
 8003106:	4804      	ldr	r0, [pc, #16]	; (8003118 <TIM7_IRQHandler+0x14>)
	ulStatesTimerTicks++;
 8003108:	6813      	ldr	r3, [r2, #0]
 800310a:	3301      	adds	r3, #1
 800310c:	6013      	str	r3, [r2, #0]
  HAL_TIM_IRQHandler(&htim7);
 800310e:	f005 bac1 	b.w	8008694 <HAL_TIM_IRQHandler>
 8003112:	bf00      	nop
 8003114:	200025d4 	.word	0x200025d4
 8003118:	20002800 	.word	0x20002800

0800311c <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 800311c:	4801      	ldr	r0, [pc, #4]	; (8003124 <LTDC_IRQHandler+0x8>)
 800311e:	f004 ba37 	b.w	8007590 <HAL_LTDC_IRQHandler>
 8003122:	bf00      	nop
 8003124:	20002684 	.word	0x20002684

08003128 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8003128:	4801      	ldr	r0, [pc, #4]	; (8003130 <DMA2D_IRQHandler+0x8>)
 800312a:	f003 b8d3 	b.w	80062d4 <HAL_DMA2D_IRQHandler>
 800312e:	bf00      	nop
 8003130:	200025f0 	.word	0x200025f0

08003134 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8003134:	2001      	movs	r0, #1
 8003136:	4770      	bx	lr

08003138 <_kill>:

int _kill(int pid, int sig)
{
 8003138:	b508      	push	{r3, lr}
	errno = EINVAL;
 800313a:	f01f fd73 	bl	8022c24 <__errno>
 800313e:	2316      	movs	r3, #22
 8003140:	6003      	str	r3, [r0, #0]
	return -1;
}
 8003142:	f04f 30ff 	mov.w	r0, #4294967295
 8003146:	bd08      	pop	{r3, pc}

08003148 <_exit>:

void _exit (int status)
{
 8003148:	b508      	push	{r3, lr}
	errno = EINVAL;
 800314a:	f01f fd6b 	bl	8022c24 <__errno>
 800314e:	2316      	movs	r3, #22
 8003150:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8003152:	e7fe      	b.n	8003152 <_exit+0xa>

08003154 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8003154:	b570      	push	{r4, r5, r6, lr}
 8003156:	460d      	mov	r5, r1
 8003158:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800315a:	460e      	mov	r6, r1
 800315c:	1b73      	subs	r3, r6, r5
 800315e:	429c      	cmp	r4, r3
 8003160:	dc01      	bgt.n	8003166 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8003162:	4620      	mov	r0, r4
 8003164:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8003166:	f7ff fc91 	bl	8002a8c <__io_getchar>
 800316a:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800316e:	e7f5      	b.n	800315c <_read+0x8>

08003170 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8003170:	b570      	push	{r4, r5, r6, lr}
 8003172:	460d      	mov	r5, r1
 8003174:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8003176:	460e      	mov	r6, r1
 8003178:	1b73      	subs	r3, r6, r5
 800317a:	429c      	cmp	r4, r3
 800317c:	dc01      	bgt.n	8003182 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 800317e:	4620      	mov	r0, r4
 8003180:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8003182:	f816 0b01 	ldrb.w	r0, [r6], #1
 8003186:	f7ff fc6f 	bl	8002a68 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800318a:	e7f5      	b.n	8003178 <_write+0x8>

0800318c <_close>:

int _close(int file)
{
	return -1;
}
 800318c:	f04f 30ff 	mov.w	r0, #4294967295
 8003190:	4770      	bx	lr

08003192 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8003192:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003196:	604b      	str	r3, [r1, #4]
	return 0;
}
 8003198:	2000      	movs	r0, #0
 800319a:	4770      	bx	lr

0800319c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800319c:	2001      	movs	r0, #1
 800319e:	4770      	bx	lr

080031a0 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 80031a0:	2000      	movs	r0, #0
 80031a2:	4770      	bx	lr

080031a4 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 80031a4:	4a0a      	ldr	r2, [pc, #40]	; (80031d0 <_sbrk+0x2c>)
 80031a6:	6811      	ldr	r1, [r2, #0]
{
 80031a8:	b508      	push	{r3, lr}
 80031aa:	4603      	mov	r3, r0
	if (heap_end == 0)
 80031ac:	b909      	cbnz	r1, 80031b2 <_sbrk+0xe>
		heap_end = &end;
 80031ae:	4909      	ldr	r1, [pc, #36]	; (80031d4 <_sbrk+0x30>)
 80031b0:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 80031b2:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 80031b4:	4669      	mov	r1, sp
 80031b6:	4403      	add	r3, r0
 80031b8:	428b      	cmp	r3, r1
 80031ba:	d906      	bls.n	80031ca <_sbrk+0x26>
	{
		errno = ENOMEM;
 80031bc:	f01f fd32 	bl	8022c24 <__errno>
 80031c0:	230c      	movs	r3, #12
 80031c2:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 80031c4:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 80031c8:	bd08      	pop	{r3, pc}
	heap_end += incr;
 80031ca:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 80031cc:	e7fc      	b.n	80031c8 <_sbrk+0x24>
 80031ce:	bf00      	nop
 80031d0:	20002920 	.word	0x20002920
 80031d4:	20013a08 	.word	0x20013a08

080031d8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80031d8:	4770      	bx	lr

080031da <_ZN23ApplicationFontProviderD0Ev>:
 80031da:	b510      	push	{r4, lr}
 80031dc:	2104      	movs	r1, #4
 80031de:	4604      	mov	r4, r0
 80031e0:	f01e fedb 	bl	8021f9a <_ZdlPvj>
 80031e4:	4620      	mov	r0, r4
 80031e6:	bd10      	pop	{r4, pc}

080031e8 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 80031e8:	2901      	cmp	r1, #1
{
 80031ea:	b508      	push	{r3, lr}
    switch (typography)
 80031ec:	d006      	beq.n	80031fc <_ZN23ApplicationFontProvider7getFontEt+0x14>
 80031ee:	2902      	cmp	r1, #2
 80031f0:	d008      	beq.n	8003204 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 80031f2:	b959      	cbnz	r1, 800320c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80031f4:	f002 f96a 	bl	80054cc <_ZN17TypedTextDatabase8getFontsEv>
 80031f8:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 80031fa:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80031fc:	f002 f966 	bl	80054cc <_ZN17TypedTextDatabase8getFontsEv>
 8003200:	6840      	ldr	r0, [r0, #4]
 8003202:	e7fa      	b.n	80031fa <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8003204:	f002 f962 	bl	80054cc <_ZN17TypedTextDatabase8getFontsEv>
 8003208:	6880      	ldr	r0, [r0, #8]
 800320a:	e7f6      	b.n	80031fa <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800320c:	2000      	movs	r0, #0
 800320e:	e7f4      	b.n	80031fa <_ZN23ApplicationFontProvider7getFontEt+0x12>

08003210 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003210:	4800      	ldr	r0, [pc, #0]	; (8003214 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003212:	4770      	bx	lr
 8003214:	08028420 	.word	0x08028420

08003218 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003218:	200f      	movs	r0, #15
 800321a:	4770      	bx	lr

0800321c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800321c:	b513      	push	{r0, r1, r4, lr}
 800321e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003220:	b151      	cbz	r1, 8003238 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003222:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003224:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003226:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800322a:	aa01      	add	r2, sp, #4
 800322c:	689c      	ldr	r4, [r3, #8]
 800322e:	f10d 0303 	add.w	r3, sp, #3
 8003232:	47a0      	blx	r4
        return glyph;
    }
 8003234:	b002      	add	sp, #8
 8003236:	bd10      	pop	{r4, pc}
            return 0;
 8003238:	4608      	mov	r0, r1
 800323a:	e7fb      	b.n	8003234 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

0800323c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 800323c:	89c0      	ldrh	r0, [r0, #14]
 800323e:	4770      	bx	lr

08003240 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8003240:	8a00      	ldrh	r0, [r0, #16]
 8003242:	4770      	bx	lr

08003244 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 8003244:	88c0      	ldrh	r0, [r0, #6]
 8003246:	4770      	bx	lr

08003248 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 8003248:	8880      	ldrh	r0, [r0, #4]
 800324a:	4770      	bx	lr

0800324c <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 800324c:	7a80      	ldrb	r0, [r0, #10]
    }
 800324e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8003252:	4770      	bx	lr

08003254 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8003254:	7a80      	ldrb	r0, [r0, #10]
    }
 8003256:	09c0      	lsrs	r0, r0, #7
 8003258:	4770      	bx	lr

0800325a <_ZN8touchgfx9TypedTextD1Ev>:
    }
 800325a:	4770      	bx	lr

0800325c <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 800325c:	b510      	push	{r4, lr}
    }
 800325e:	2108      	movs	r1, #8
    virtual ~TypedText()
 8003260:	4604      	mov	r4, r0
    }
 8003262:	f01e fe9a 	bl	8021f9a <_ZdlPvj>
 8003266:	4620      	mov	r0, r4
 8003268:	bd10      	pop	{r4, pc}

0800326a <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 800326a:	4770      	bx	lr

0800326c <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 800326c:	4770      	bx	lr

0800326e <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 800326e:	f500 7398 	add.w	r3, r0, #304	; 0x130
 8003272:	6808      	ldr	r0, [r1, #0]
 8003274:	6849      	ldr	r1, [r1, #4]
 8003276:	c303      	stmia	r3!, {r0, r1}
    }
 8003278:	4770      	bx	lr

0800327a <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 800327a:	4770      	bx	lr

0800327c <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 800327c:	4770      	bx	lr

0800327e <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 800327e:	6041      	str	r1, [r0, #4]
    }
 8003280:	4770      	bx	lr

08003282 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8003282:	4770      	bx	lr

08003284 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003284:	4b06      	ldr	r3, [pc, #24]	; (80032a0 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 8003286:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800328a:	2300      	movs	r3, #0
 800328c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// SplashScreen

void FrontendApplicationBase::gotoSplashScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoSplashScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003290:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003294:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003298:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoSplashScreenScreenNoTransition();
    }
 800329c:	4770      	bx	lr
 800329e:	bf00      	nop
 80032a0:	08003599 	.word	0x08003599

080032a4 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 80032a4:	2301      	movs	r3, #1
 80032a6:	7203      	strb	r3, [r0, #8]
    }
 80032a8:	4770      	bx	lr

080032aa <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 80032aa:	4770      	bx	lr

080032ac <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 80032ac:	4770      	bx	lr

080032ae <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 80032ae:	4770      	bx	lr

080032b0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev>:
 * Screen transitioning to.
 *
 * @see Transition
 */
template <Direction templateDirection>
class SlideTransition : public Transition
 80032b0:	4770      	bx	lr

080032b2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev>:
 80032b2:	4770      	bx	lr

080032b4 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 80032b4:	4770      	bx	lr

080032b6 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 80032b6:	4770      	bx	lr

080032b8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 80032b8:	4770      	bx	lr

080032ba <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80032ba:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 80032bc:	68c2      	ldr	r2, [r0, #12]
 80032be:	6841      	ldr	r1, [r0, #4]
 80032c0:	1054      	asrs	r4, r2, #1
    virtual void execute()
 80032c2:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 80032c4:	eb01 0062 	add.w	r0, r1, r2, asr #1
 80032c8:	07d2      	lsls	r2, r2, #31
 80032ca:	bf48      	it	mi
 80032cc:	590a      	ldrmi	r2, [r1, r4]
 80032ce:	689b      	ldr	r3, [r3, #8]
    }
 80032d0:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 80032d4:	bf48      	it	mi
 80032d6:	58d3      	ldrmi	r3, [r2, r3]
 80032d8:	4718      	bx	r3

080032da <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 80032da:	6843      	ldr	r3, [r0, #4]
 80032dc:	b12b      	cbz	r3, 80032ea <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 80032de:	6883      	ldr	r3, [r0, #8]
 80032e0:	b92b      	cbnz	r3, 80032ee <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 80032e2:	68c0      	ldr	r0, [r0, #12]
 80032e4:	f000 0001 	and.w	r0, r0, #1
 80032e8:	4770      	bx	lr
 80032ea:	4618      	mov	r0, r3
 80032ec:	4770      	bx	lr
 80032ee:	2001      	movs	r0, #1
    }
 80032f0:	4770      	bx	lr

080032f2 <_ZN8touchgfx15BlockTransitionD0Ev>:
 80032f2:	b510      	push	{r4, lr}
 80032f4:	2114      	movs	r1, #20
 80032f6:	4604      	mov	r4, r0
 80032f8:	f01e fe4f 	bl	8021f9a <_ZdlPvj>
 80032fc:	4620      	mov	r0, r4
 80032fe:	bd10      	pop	{r4, pc}

08003300 <_ZN8touchgfx12NoTransitionD0Ev>:
 8003300:	b510      	push	{r4, lr}
 8003302:	210c      	movs	r1, #12
 8003304:	4604      	mov	r4, r0
 8003306:	f01e fe48 	bl	8021f9a <_ZdlPvj>
 800330a:	4620      	mov	r0, r4
 800330c:	bd10      	pop	{r4, pc}

0800330e <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800330e:	b510      	push	{r4, lr}
 8003310:	2110      	movs	r1, #16
 8003312:	4604      	mov	r4, r0
 8003314:	f01e fe41 	bl	8021f9a <_ZdlPvj>
 8003318:	4620      	mov	r0, r4
 800331a:	bd10      	pop	{r4, pc}

0800331c <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 800331c:	b510      	push	{r4, lr}
 800331e:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 8003322:	4604      	mov	r4, r0
 8003324:	f01e fe39 	bl	8021f9a <_ZdlPvj>
 8003328:	4620      	mov	r0, r4
 800332a:	bd10      	pop	{r4, pc}

0800332c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED0Ev>:
 800332c:	b510      	push	{r4, lr}
 800332e:	2140      	movs	r1, #64	; 0x40
 8003330:	4604      	mov	r4, r0
 8003332:	f01e fe32 	bl	8021f9a <_ZdlPvj>
 8003336:	4620      	mov	r0, r4
 8003338:	bd10      	pop	{r4, pc}

0800333a <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED0Ev>:
 800333a:	b510      	push	{r4, lr}
 800333c:	2140      	movs	r1, #64	; 0x40
 800333e:	4604      	mov	r4, r0
 8003340:	f01e fe2b 	bl	8021f9a <_ZdlPvj>
 8003344:	4620      	mov	r0, r4
 8003346:	bd10      	pop	{r4, pc}

08003348 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 8003348:	b570      	push	{r4, r5, r6, lr}
 800334a:	4604      	mov	r4, r0
 800334c:	b0b2      	sub	sp, #200	; 0xc8
        const int indeces[animationSteps] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 800334e:	491d      	ldr	r1, [pc, #116]	; (80033c4 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7c>)
 8003350:	22c0      	movs	r2, #192	; 0xc0
 8003352:	a802      	add	r0, sp, #8
 8003354:	f01f fcb2 	bl	8022cbc <memcpy>
        if (animationCounter >= animationSteps)
 8003358:	7c23      	ldrb	r3, [r4, #16]
 800335a:	2b2f      	cmp	r3, #47	; 0x2f
 800335c:	d903      	bls.n	8003366 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1e>
            done = true;
 800335e:	2301      	movs	r3, #1
 8003360:	7223      	strb	r3, [r4, #8]
    }
 8003362:	b032      	add	sp, #200	; 0xc8
 8003364:	bd70      	pop	{r4, r5, r6, pc}
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 8003366:	b933      	cbnz	r3, 8003376 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
 8003368:	4b17      	ldr	r3, [pc, #92]	; (80033c8 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 800336a:	781b      	ldrb	r3, [r3, #0]
 800336c:	b11b      	cbz	r3, 8003376 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 800336e:	f00e facb 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 8003372:	f00e facf 	bl	8011914 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
    virtual void handleTickEvent()
 8003376:	2503      	movs	r5, #3
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 8003378:	3d01      	subs	r5, #1
 800337a:	d0f2      	beq.n	8003362 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
 800337c:	7c23      	ldrb	r3, [r4, #16]
 800337e:	2b30      	cmp	r3, #48	; 0x30
 8003380:	d8ef      	bhi.n	8003362 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            const int index = indeces[animationCounter];
 8003382:	aa32      	add	r2, sp, #200	; 0xc8
 8003384:	eb02 0383 	add.w	r3, r2, r3, lsl #2
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 8003388:	89e6      	ldrh	r6, [r4, #14]
            const int index = indeces[animationCounter];
 800338a:	f853 3cc0 	ldr.w	r3, [r3, #-192]
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 800338e:	8960      	ldrh	r0, [r4, #10]
 8003390:	fb93 f2f6 	sdiv	r2, r3, r6
 8003394:	fb06 3312 	mls	r3, r6, r2, r3
 8003398:	fb13 f300 	smulbb	r3, r3, r0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800339c:	f8ad 0004 	strh.w	r0, [sp, #4]
            screenContainer->invalidateRect(invRect);
 80033a0:	6860      	ldr	r0, [r4, #4]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 80033a2:	89a1      	ldrh	r1, [r4, #12]
 80033a4:	f8ad 3000 	strh.w	r3, [sp]
            screenContainer->invalidateRect(invRect);
 80033a8:	6803      	ldr	r3, [r0, #0]
 80033aa:	f8ad 1006 	strh.w	r1, [sp, #6]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 80033ae:	fb12 f201 	smulbb	r2, r2, r1
            screenContainer->invalidateRect(invRect);
 80033b2:	691b      	ldr	r3, [r3, #16]
 80033b4:	f8ad 2002 	strh.w	r2, [sp, #2]
 80033b8:	4669      	mov	r1, sp
 80033ba:	4798      	blx	r3
            animationCounter++;
 80033bc:	7c23      	ldrb	r3, [r4, #16]
 80033be:	3301      	adds	r3, #1
 80033c0:	7423      	strb	r3, [r4, #16]
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 80033c2:	e7d9      	b.n	8003378 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x30>
 80033c4:	080277e0 	.word	0x080277e0
 80033c8:	20013756 	.word	0x20013756

080033cc <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 80033cc:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 80033ce:	f00e fa9b 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    }
 80033d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 80033d6:	f00e bf51 	b.w	801227c <_ZN8touchgfx11Application10invalidateEv>
	...

080033dc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv>:
        screenContainer->invalidate();
    }

    virtual void tearDown()
    {
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80033dc:	4b05      	ldr	r3, [pc, #20]	; (80033f4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x18>)
 80033de:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80033e0:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80033e2:	b12b      	cbz	r3, 80033f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
 80033e4:	6840      	ldr	r0, [r0, #4]
 80033e6:	b118      	cbz	r0, 80033f0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv+0x14>
        {
            screenContainer->remove(snapshot);
 80033e8:	6803      	ldr	r3, [r0, #0]
 80033ea:	310c      	adds	r1, #12
 80033ec:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 80033ee:	4718      	bx	r3
        }
    }
 80033f0:	4770      	bx	lr
 80033f2:	bf00      	nop
 80033f4:	20013757 	.word	0x20013757

080033f8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv>:
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80033f8:	4b05      	ldr	r3, [pc, #20]	; (8003410 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x18>)
 80033fa:	781b      	ldrb	r3, [r3, #0]
    virtual void tearDown()
 80033fc:	4601      	mov	r1, r0
        if (HAL::USE_ANIMATION_STORAGE && screenContainer)
 80033fe:	b12b      	cbz	r3, 800340c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
 8003400:	6840      	ldr	r0, [r0, #4]
 8003402:	b118      	cbz	r0, 800340c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv+0x14>
            screenContainer->remove(snapshot);
 8003404:	6803      	ldr	r3, [r0, #0]
 8003406:	310c      	adds	r1, #12
 8003408:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800340a:	4718      	bx	r3
    }
 800340c:	4770      	bx	lr
 800340e:	bf00      	nop
 8003410:	20013757 	.word	0x20013757

08003414 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv>:

    virtual void init()
    {
        Transition::init();

        if (done)
 8003414:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 8003416:	b570      	push	{r4, r5, r6, lr}
 8003418:	4605      	mov	r5, r0
        if (done)
 800341a:	b9bb      	cbnz	r3, 800344c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x38>
        {
            return;
        }

        // Move snapshot and its children with delta value for X or Y
        Drawable* d = screenContainer->getFirstChild();
 800341c:	6840      	ldr	r0, [r0, #4]
 800341e:	6803      	ldr	r3, [r0, #0]
 8003420:	69db      	ldr	r3, [r3, #28]
 8003422:	4798      	blx	r3
 8003424:	4604      	mov	r4, r0
        while (d)
 8003426:	b14c      	cbz	r4, 800343c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x28>
        {
            switch (templateDirection)
            {
            case EAST:
            case WEST:
                d->setX(d->getX() - targetValue);
 8003428:	88a1      	ldrh	r1, [r4, #4]
 800342a:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 800342c:	1ac9      	subs	r1, r1, r3
 800342e:	6823      	ldr	r3, [r4, #0]
 8003430:	4620      	mov	r0, r4
 8003432:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003434:	b209      	sxth	r1, r1
 8003436:	4798      	blx	r3
        return nextSibling;
 8003438:	69a4      	ldr	r4, [r4, #24]
        while (d)
 800343a:	e7f4      	b.n	8003426 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv+0x12>
            }

            d = d->getNextSibling();
        }

        screenContainer->add(snapshot);
 800343c:	6868      	ldr	r0, [r5, #4]
 800343e:	6803      	ldr	r3, [r0, #0]
 8003440:	f105 010c 	add.w	r1, r5, #12
 8003444:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 8003446:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 800344a:	4718      	bx	r3
    }
 800344c:	bd70      	pop	{r4, r5, r6, pc}

0800344e <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv>:
    virtual void handleTickEvent()
 800344e:	b570      	push	{r4, r5, r6, lr}
 8003450:	4604      	mov	r4, r0
        animationCounter++;
 8003452:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003456:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 800345a:	3001      	adds	r0, #1
 800345c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800345e:	4298      	cmp	r0, r3
        animationCounter++;
 8003460:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003464:	d905      	bls.n	8003472 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x24>
            done = true;
 8003466:	2301      	movs	r3, #1
 8003468:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800346a:	2300      	movs	r3, #0
 800346c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8003470:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003472:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8003476:	2100      	movs	r1, #0
 8003478:	f010 f800 	bl	801347c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800347c:	f010 0201 	ands.w	r2, r0, #1
 8003480:	b283      	uxth	r3, r0
 8003482:	d006      	beq.n	8003492 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003484:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003488:	2800      	cmp	r0, #0
 800348a:	bfd8      	it	le
 800348c:	460a      	movle	r2, r1
 800348e:	1898      	adds	r0, r3, r2
 8003490:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8003492:	8a23      	ldrh	r3, [r4, #16]
 8003494:	1ac0      	subs	r0, r0, r3
 8003496:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8003498:	6860      	ldr	r0, [r4, #4]
 800349a:	6803      	ldr	r3, [r0, #0]
 800349c:	69db      	ldr	r3, [r3, #28]
 800349e:	4798      	blx	r3
 80034a0:	4605      	mov	r5, r0
        while (d)
 80034a2:	b14d      	cbz	r5, 80034b8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 80034a4:	88a9      	ldrh	r1, [r5, #4]
 80034a6:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 80034a8:	4419      	add	r1, r3
 80034aa:	682b      	ldr	r3, [r5, #0]
 80034ac:	4628      	mov	r0, r5
 80034ae:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034b0:	b209      	sxth	r1, r1
 80034b2:	4798      	blx	r3
 80034b4:	69ad      	ldr	r5, [r5, #24]
        while (d)
 80034b6:	e7f4      	b.n	80034a2 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 80034b8:	6860      	ldr	r0, [r4, #4]
 80034ba:	6803      	ldr	r3, [r0, #0]
    }
 80034bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 80034c0:	695b      	ldr	r3, [r3, #20]
 80034c2:	4718      	bx	r3

080034c4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv>:
        if (done)
 80034c4:	7a03      	ldrb	r3, [r0, #8]
    virtual void init()
 80034c6:	b570      	push	{r4, r5, r6, lr}
 80034c8:	4605      	mov	r5, r0
        if (done)
 80034ca:	b9bb      	cbnz	r3, 80034fc <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x38>
        Drawable* d = screenContainer->getFirstChild();
 80034cc:	6840      	ldr	r0, [r0, #4]
 80034ce:	6803      	ldr	r3, [r0, #0]
 80034d0:	69db      	ldr	r3, [r3, #28]
 80034d2:	4798      	blx	r3
 80034d4:	4604      	mov	r4, r0
        while (d)
 80034d6:	b14c      	cbz	r4, 80034ec <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x28>
                d->setX(d->getX() - targetValue);
 80034d8:	88a1      	ldrh	r1, [r4, #4]
 80034da:	8f6b      	ldrh	r3, [r5, #58]	; 0x3a
 80034dc:	1ac9      	subs	r1, r1, r3
 80034de:	6823      	ldr	r3, [r4, #0]
 80034e0:	4620      	mov	r0, r4
 80034e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80034e4:	b209      	sxth	r1, r1
 80034e6:	4798      	blx	r3
 80034e8:	69a4      	ldr	r4, [r4, #24]
        while (d)
 80034ea:	e7f4      	b.n	80034d6 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv+0x12>
        screenContainer->add(snapshot);
 80034ec:	6868      	ldr	r0, [r5, #4]
 80034ee:	6803      	ldr	r3, [r0, #0]
 80034f0:	f105 010c 	add.w	r1, r5, #12
 80034f4:	6e1b      	ldr	r3, [r3, #96]	; 0x60
    }
 80034f6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->add(snapshot);
 80034fa:	4718      	bx	r3
    }
 80034fc:	bd70      	pop	{r4, r5, r6, pc}

080034fe <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv>:
    virtual void handleTickEvent()
 80034fe:	b570      	push	{r4, r5, r6, lr}
 8003500:	4604      	mov	r4, r0
        animationCounter++;
 8003502:	f890 0039 	ldrb.w	r0, [r0, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003506:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
        animationCounter++;
 800350a:	3001      	adds	r0, #1
 800350c:	b2c0      	uxtb	r0, r0
        if (animationCounter > animationSteps)
 800350e:	4298      	cmp	r0, r3
        animationCounter++;
 8003510:	f884 0039 	strb.w	r0, [r4, #57]	; 0x39
        if (animationCounter > animationSteps)
 8003514:	d905      	bls.n	8003522 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x24>
            done = true;
 8003516:	2301      	movs	r3, #1
 8003518:	7223      	strb	r3, [r4, #8]
            animationCounter = 0;
 800351a:	2300      	movs	r3, #0
 800351c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
    }
 8003520:	bd70      	pop	{r4, r5, r6, pc}
        int16_t calculatedValue = EasingEquations::cubicEaseOut(animationCounter, 0, targetValue, animationSteps);
 8003522:	f9b4 203a 	ldrsh.w	r2, [r4, #58]	; 0x3a
 8003526:	2100      	movs	r1, #0
 8003528:	f00f ffa8 	bl	801347c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>
        if ((calculatedValue % 2) != 0)
 800352c:	f010 0201 	ands.w	r2, r0, #1
 8003530:	b283      	uxth	r3, r0
 8003532:	d006      	beq.n	8003542 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x44>
            calculatedValue += (calculatedValue > 0 ? 1 : -1);
 8003534:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8003538:	2800      	cmp	r0, #0
 800353a:	bfd8      	it	le
 800353c:	460a      	movle	r2, r1
 800353e:	1898      	adds	r0, r3, r2
 8003540:	b200      	sxth	r0, r0
            relativeValue = calculatedValue - snapshot.getX();
 8003542:	8a23      	ldrh	r3, [r4, #16]
 8003544:	1ac0      	subs	r0, r0, r3
 8003546:	87a0      	strh	r0, [r4, #60]	; 0x3c
        Drawable* d = screenContainer->getFirstChild();
 8003548:	6860      	ldr	r0, [r4, #4]
 800354a:	6803      	ldr	r3, [r0, #0]
 800354c:	69db      	ldr	r3, [r3, #28]
 800354e:	4798      	blx	r3
 8003550:	4605      	mov	r5, r0
        while (d)
 8003552:	b14d      	cbz	r5, 8003568 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x6a>
                d->setX(d->getX() + relativeValue);
 8003554:	88a9      	ldrh	r1, [r5, #4]
 8003556:	8fa3      	ldrh	r3, [r4, #60]	; 0x3c
 8003558:	4419      	add	r1, r3
 800355a:	682b      	ldr	r3, [r5, #0]
 800355c:	4628      	mov	r0, r5
 800355e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003560:	b209      	sxth	r1, r1
 8003562:	4798      	blx	r3
 8003564:	69ad      	ldr	r5, [r5, #24]
        while (d)
 8003566:	e7f4      	b.n	8003552 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv+0x54>
        screenContainer->invalidate();
 8003568:	6860      	ldr	r0, [r4, #4]
 800356a:	6803      	ldr	r3, [r0, #0]
    }
 800356c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        screenContainer->invalidate();
 8003570:	695b      	ldr	r3, [r3, #20]
 8003572:	4718      	bx	r3

08003574 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8003574:	b510      	push	{r4, lr}
 8003576:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8003578:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 800357c:	b158      	cbz	r0, 8003596 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 800357e:	6803      	ldr	r3, [r0, #0]
 8003580:	68db      	ldr	r3, [r3, #12]
 8003582:	4798      	blx	r3
 8003584:	b138      	cbz	r0, 8003596 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 8003586:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 800358a:	6803      	ldr	r3, [r0, #0]
 800358c:	689b      	ldr	r3, [r3, #8]
 800358e:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003590:	2300      	movs	r3, #0
 8003592:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 8003596:	bd10      	pop	{r4, pc}

08003598 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv>:
}

void FrontendApplicationBase::gotoSplashScreenScreenNoTransitionImpl()
{
 8003598:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<SplashScreenView, SplashScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 800359c:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80035a0:	4607      	mov	r7, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80035a2:	68a8      	ldr	r0, [r5, #8]
 80035a4:	6803      	ldr	r3, [r0, #0]
 80035a6:	6a1b      	ldr	r3, [r3, #32]
 80035a8:	4798      	blx	r3
 80035aa:	289b      	cmp	r0, #155	; 0x9b
 80035ac:	d805      	bhi.n	80035ba <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x22>
 80035ae:	4b46      	ldr	r3, [pc, #280]	; (80036c8 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x130>)
 80035b0:	4a46      	ldr	r2, [pc, #280]	; (80036cc <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x134>)
 80035b2:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80035b4:	4846      	ldr	r0, [pc, #280]	; (80036d0 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x138>)
 80035b6:	f01f fb03 	bl	8022bc0 <__assert_func>
 80035ba:	6868      	ldr	r0, [r5, #4]
 80035bc:	6803      	ldr	r3, [r0, #0]
 80035be:	6a1b      	ldr	r3, [r3, #32]
 80035c0:	4798      	blx	r3
 80035c2:	280f      	cmp	r0, #15
 80035c4:	d803      	bhi.n	80035ce <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x36>
 80035c6:	4b43      	ldr	r3, [pc, #268]	; (80036d4 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x13c>)
 80035c8:	4a40      	ldr	r2, [pc, #256]	; (80036cc <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x134>)
 80035ca:	21a4      	movs	r1, #164	; 0xa4
 80035cc:	e7f2      	b.n	80035b4 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80035ce:	68e8      	ldr	r0, [r5, #12]
 80035d0:	6803      	ldr	r3, [r0, #0]
 80035d2:	6a1b      	ldr	r3, [r3, #32]
 80035d4:	4798      	blx	r3
 80035d6:	280b      	cmp	r0, #11
 80035d8:	d803      	bhi.n	80035e2 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x4a>
 80035da:	4b3f      	ldr	r3, [pc, #252]	; (80036d8 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x140>)
 80035dc:	4a3b      	ldr	r2, [pc, #236]	; (80036cc <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x134>)
 80035de:	21a5      	movs	r1, #165	; 0xa5
 80035e0:	e7e8      	b.n	80035b4 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 80035e2:	f00e f991 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80035e6:	f8df 90f8 	ldr.w	r9, [pc, #248]	; 80036e0 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x148>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80035ea:	3004      	adds	r0, #4
 80035ec:	f00e f9f2 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80035f0:	f8d9 0000 	ldr.w	r0, [r9]
 80035f4:	b110      	cbz	r0, 80035fc <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 80035f6:	6803      	ldr	r3, [r0, #0]
 80035f8:	68db      	ldr	r3, [r3, #12]
 80035fa:	4798      	blx	r3
    if (*currentTrans)
 80035fc:	f8d9 0000 	ldr.w	r0, [r9]
 8003600:	b110      	cbz	r0, 8003608 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003602:	6803      	ldr	r3, [r0, #0]
 8003604:	681b      	ldr	r3, [r3, #0]
 8003606:	4798      	blx	r3
    if (*currentScreen)
 8003608:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80036e4 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x14c>
 800360c:	f8d8 0000 	ldr.w	r0, [r8]
 8003610:	b110      	cbz	r0, 8003618 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003612:	6803      	ldr	r3, [r0, #0]
 8003614:	695b      	ldr	r3, [r3, #20]
 8003616:	4798      	blx	r3
    if (*currentPresenter)
 8003618:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800361c:	b110      	cbz	r0, 8003624 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 800361e:	6803      	ldr	r3, [r0, #0]
 8003620:	685b      	ldr	r3, [r3, #4]
 8003622:	4798      	blx	r3
    if (*currentScreen)
 8003624:	f8d8 0000 	ldr.w	r0, [r8]
 8003628:	b110      	cbz	r0, 8003630 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800362a:	6803      	ldr	r3, [r0, #0]
 800362c:	681b      	ldr	r3, [r3, #0]
 800362e:	4798      	blx	r3
    if (*currentPresenter)
 8003630:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003634:	b110      	cbz	r0, 800363c <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 8003636:	6803      	ldr	r3, [r0, #0]
 8003638:	689b      	ldr	r3, [r3, #8]
 800363a:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800363c:	68e8      	ldr	r0, [r5, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 800363e:	6803      	ldr	r3, [r0, #0]
 8003640:	2100      	movs	r1, #0
 8003642:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003644:	4798      	blx	r3
        : screenContainer(0), done(false)
 8003646:	f04f 0b00 	mov.w	fp, #0
 800364a:	4b24      	ldr	r3, [pc, #144]	; (80036dc <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x144>)
 800364c:	6003      	str	r3, [r0, #0]
 800364e:	4604      	mov	r4, r0
 8003650:	f8c0 b004 	str.w	fp, [r0, #4]
 8003654:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003658:	68a8      	ldr	r0, [r5, #8]
 800365a:	6803      	ldr	r3, [r0, #0]
 800365c:	4659      	mov	r1, fp
 800365e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003660:	4798      	blx	r3
 8003662:	4606      	mov	r6, r0
 8003664:	f002 f8f0 	bl	8005848 <_ZN16SplashScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003668:	6868      	ldr	r0, [r5, #4]
 800366a:	6803      	ldr	r3, [r0, #0]
 800366c:	4659      	mov	r1, fp
 800366e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003670:	4798      	blx	r3
 8003672:	4631      	mov	r1, r6
 8003674:	4605      	mov	r5, r0
 8003676:	f002 f8c3 	bl	8005800 <_ZN21SplashScreenPresenterC1ER16SplashScreenView>
    *currentTrans = newTransition;
 800367a:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 800367e:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003682:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003686:	b1e5      	cbz	r5, 80036c2 <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0x12a>
 8003688:	1d2b      	adds	r3, r5, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800368a:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800368e:	6833      	ldr	r3, [r6, #0]
    virtual void vUpdateTemperature() {}
    virtual void vUpdateLedCmdToggleBotton(bool bIsLedOn) {}
    virtual void vUpdateTemperatureValueInAutoMode(float fTemperatureValue) {}
    void bind(Model* m)
    {
        model = m;
 8003690:	f8c5 a008 	str.w	sl, [r5, #8]
 8003694:	4630      	mov	r0, r6
 8003696:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 8003698:	63f5      	str	r5, [r6, #60]	; 0x3c
 800369a:	4798      	blx	r3
    newPresenter->activate();
 800369c:	682b      	ldr	r3, [r5, #0]
 800369e:	4628      	mov	r0, r5
 80036a0:	681b      	ldr	r3, [r3, #0]
 80036a2:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80036a4:	4621      	mov	r1, r4
 80036a6:	4630      	mov	r0, r6
 80036a8:	f00f fee2 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80036ac:	6823      	ldr	r3, [r4, #0]
 80036ae:	4620      	mov	r0, r4
 80036b0:	691b      	ldr	r3, [r3, #16]
 80036b2:	4798      	blx	r3
    newTransition->invalidate();
 80036b4:	6823      	ldr	r3, [r4, #0]
 80036b6:	695b      	ldr	r3, [r3, #20]
 80036b8:	4620      	mov	r0, r4
}
 80036ba:	b001      	add	sp, #4
 80036bc:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80036c0:	4718      	bx	r3
    model->bind(newPresenter);
 80036c2:	462b      	mov	r3, r5
 80036c4:	e7e1      	b.n	800368a <_ZN23FrontendApplicationBase38gotoSplashScreenScreenNoTransitionImplEv+0xf2>
 80036c6:	bf00      	nop
 80036c8:	0802855c 	.word	0x0802855c
 80036cc:	080285ea 	.word	0x080285ea
 80036d0:	080286f8 	.word	0x080286f8
 80036d4:	0802873f 	.word	0x0802873f
 80036d8:	080287e2 	.word	0x080287e2
 80036dc:	08029118 	.word	0x08029118
 80036e0:	200137a0 	.word	0x200137a0
 80036e4:	2001379c 	.word	0x2001379c

080036e8 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80036e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80036ec:	461d      	mov	r5, r3
        setX(x);
 80036ee:	6803      	ldr	r3, [r0, #0]
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80036f0:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
        setX(x);
 80036f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 80036f6:	4604      	mov	r4, r0
 80036f8:	4616      	mov	r6, r2
        setX(x);
 80036fa:	4798      	blx	r3
        setY(y);
 80036fc:	6823      	ldr	r3, [r4, #0]
 80036fe:	4631      	mov	r1, r6
 8003700:	4620      	mov	r0, r4
 8003702:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003704:	4798      	blx	r3
        setWidth(width);
 8003706:	6823      	ldr	r3, [r4, #0]
 8003708:	4629      	mov	r1, r5
 800370a:	4620      	mov	r0, r4
 800370c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800370e:	4798      	blx	r3
        setHeight(height);
 8003710:	6823      	ldr	r3, [r4, #0]
 8003712:	4639      	mov	r1, r7
 8003714:	4620      	mov	r0, r4
 8003716:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003718:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
        setHeight(height);
 800371c:	4718      	bx	r3
	...

08003720 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8003720:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8003722:	4604      	mov	r4, r0
 8003724:	4617      	mov	r7, r2
 8003726:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 8003728:	f00e fa22 	bl	8011b70 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 800372c:	4b10      	ldr	r3, [pc, #64]	; (8003770 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 800372e:	2500      	movs	r5, #0
      model(m)
 8003730:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
        return instance;
 8003734:	4e0f      	ldr	r6, [pc, #60]	; (8003774 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 8003736:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun(0)
 8003738:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 800373c:	4b0e      	ldr	r3, [pc, #56]	; (8003778 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 800373e:	6830      	ldr	r0, [r6, #0]
 8003740:	6023      	str	r3, [r4, #0]
 8003742:	4b0e      	ldr	r3, [pc, #56]	; (800377c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 8003744:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_PORTRAIT);
 8003748:	6803      	ldr	r3, [r0, #0]
 800374a:	2101      	movs	r1, #1
 800374c:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 800374e:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 8003752:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003754:	4628      	mov	r0, r5
 8003756:	f001 fe6d 	bl	8005434 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800375a:	6833      	ldr	r3, [r6, #0]
 800375c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8003760:	b10a      	cbz	r2, 8003766 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8003762:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003764:	b900      	cbnz	r0, 8003768 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 8003766:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8003768:	f016 fb0f 	bl	8019d8a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 800376c:	4620      	mov	r0, r4
 800376e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003770:	200137ac 	.word	0x200137ac
 8003774:	20013758 	.word	0x20013758
 8003778:	080290cc 	.word	0x080290cc
 800377c:	080290b4 	.word	0x080290b4

08003780 <_ZN23FrontendApplicationBase34gotoSplashScreenScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003780:	4b06      	ldr	r3, [pc, #24]	; (800379c <_ZN23FrontendApplicationBase34gotoSplashScreenScreenNoTransitionEv+0x1c>)
 8003782:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003786:	2300      	movs	r3, #0
 8003788:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 800378c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003790:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003794:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003798:	4770      	bx	lr
 800379a:	bf00      	nop
 800379c:	08003599 	.word	0x08003599

080037a0 <_ZN23FrontendApplicationBase42gotoTemperatureScreenScreenBlockTransitionEv>:
 80037a0:	4b06      	ldr	r3, [pc, #24]	; (80037bc <_ZN23FrontendApplicationBase42gotoTemperatureScreenScreenBlockTransitionEv+0x1c>)
 80037a2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037a6:	2300      	movs	r3, #0
 80037a8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// TemperatureScreen

void FrontendApplicationBase::gotoTemperatureScreenScreenBlockTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTemperatureScreenScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80037ac:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037b0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037b4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037b8:	4770      	bx	lr
 80037ba:	bf00      	nop
 80037bc:	0800388d 	.word	0x0800388d

080037c0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionWestEv>:
 80037c0:	4b06      	ldr	r3, [pc, #24]	; (80037dc <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionWestEv+0x1c>)
 80037c2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037c6:	2300      	movs	r3, #0
 80037c8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
}

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTemperatureScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80037cc:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037d0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037d4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037d8:	4770      	bx	lr
 80037da:	bf00      	nop
 80037dc:	08003d01 	.word	0x08003d01

080037e0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>:
 80037e0:	4b06      	ldr	r3, [pc, #24]	; (80037fc <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv+0x1c>)
 80037e2:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80037e6:	2300      	movs	r3, #0
 80037e8:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
}

void FrontendApplicationBase::gotoTemperatureScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoTemperatureScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80037ec:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80037f0:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80037f4:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80037f8:	4770      	bx	lr
 80037fa:	bf00      	nop
 80037fc:	08004131 	.word	0x08004131

08003800 <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionEastEv>:
 8003800:	4b06      	ldr	r3, [pc, #24]	; (800381c <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionEastEv+0x1c>)
 8003802:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003806:	2300      	movs	r3, #0
 8003808:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// GetTemperatureScreen

void FrontendApplicationBase::gotoGetTemperatureScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoGetTemperatureScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800380c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003810:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003814:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003818:	4770      	bx	lr
 800381a:	bf00      	nop
 800381c:	08003ff1 	.word	0x08003ff1

08003820 <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionWestEv>:
 8003820:	4b06      	ldr	r3, [pc, #24]	; (800383c <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionWestEv+0x1c>)
 8003822:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003826:	2300      	movs	r3, #0
 8003828:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
}

void FrontendApplicationBase::gotoGetTemperatureScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoGetTemperatureScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800382c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003830:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003834:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003838:	4770      	bx	lr
 800383a:	bf00      	nop
 800383c:	08003bc1 	.word	0x08003bc1

08003840 <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionWestEv>:
 8003840:	4b06      	ldr	r3, [pc, #24]	; (800385c <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionWestEv+0x1c>)
 8003842:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003846:	2300      	movs	r3, #0
 8003848:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// LedCommandScreen

void FrontendApplicationBase::gotoLedCommandScreenScreenSlideTransitionWest()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoLedCommandScreenScreenSlideTransitionWestImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800384c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003850:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003854:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003858:	4770      	bx	lr
 800385a:	bf00      	nop
 800385c:	08003a81 	.word	0x08003a81

08003860 <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionEastEv>:
 8003860:	4b06      	ldr	r3, [pc, #24]	; (800387c <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionEastEv+0x1c>)
 8003862:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 8003866:	2300      	movs	r3, #0
 8003868:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
}

void FrontendApplicationBase::gotoLedCommandScreenScreenSlideTransitionEast()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoLedCommandScreenScreenSlideTransitionEastImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 800386c:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003870:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003874:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 8003878:	4770      	bx	lr
 800387a:	bf00      	nop
 800387c:	08003eb1 	.word	0x08003eb1

08003880 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>:
 8003880:	6803      	ldr	r3, [r0, #0]
 8003882:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003884:	4718      	bx	r3

08003886 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>:
 8003886:	6803      	ldr	r3, [r0, #0]
 8003888:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800388a:	4718      	bx	r3

0800388c <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv>:
{
 800388c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003890:	e9d0 6955 	ldrd	r6, r9, [r0, #340]	; 0x154
{
 8003894:	4605      	mov	r5, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003896:	68b0      	ldr	r0, [r6, #8]
 8003898:	6803      	ldr	r3, [r0, #0]
 800389a:	6a1b      	ldr	r3, [r3, #32]
 800389c:	4798      	blx	r3
 800389e:	f241 13bb 	movw	r3, #4539	; 0x11bb
 80038a2:	4298      	cmp	r0, r3
 80038a4:	d805      	bhi.n	80038b2 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x26>
 80038a6:	4b50      	ldr	r3, [pc, #320]	; (80039e8 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x15c>)
 80038a8:	4a50      	ldr	r2, [pc, #320]	; (80039ec <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x160>)
 80038aa:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038ac:	4850      	ldr	r0, [pc, #320]	; (80039f0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x164>)
 80038ae:	f01f f987 	bl	8022bc0 <__assert_func>
 80038b2:	6870      	ldr	r0, [r6, #4]
 80038b4:	6803      	ldr	r3, [r0, #0]
 80038b6:	6a1b      	ldr	r3, [r3, #32]
 80038b8:	4798      	blx	r3
 80038ba:	280f      	cmp	r0, #15
 80038bc:	d803      	bhi.n	80038c6 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x3a>
 80038be:	4b4d      	ldr	r3, [pc, #308]	; (80039f4 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x168>)
 80038c0:	4a4a      	ldr	r2, [pc, #296]	; (80039ec <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x160>)
 80038c2:	21a4      	movs	r1, #164	; 0xa4
 80038c4:	e7f2      	b.n	80038ac <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80038c6:	68f0      	ldr	r0, [r6, #12]
 80038c8:	6803      	ldr	r3, [r0, #0]
 80038ca:	6a1b      	ldr	r3, [r3, #32]
 80038cc:	4798      	blx	r3
 80038ce:	2813      	cmp	r0, #19
 80038d0:	d803      	bhi.n	80038da <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x4e>
 80038d2:	4b49      	ldr	r3, [pc, #292]	; (80039f8 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x16c>)
 80038d4:	4a45      	ldr	r2, [pc, #276]	; (80039ec <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x160>)
 80038d6:	21a5      	movs	r1, #165	; 0xa5
 80038d8:	e7e8      	b.n	80038ac <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 80038da:	f00e f815 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80038de:	f8df 812c 	ldr.w	r8, [pc, #300]	; 8003a0c <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x180>
 80038e2:	3004      	adds	r0, #4
 80038e4:	f00e f876 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80038e8:	f8d8 0000 	ldr.w	r0, [r8]
 80038ec:	b110      	cbz	r0, 80038f4 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 80038ee:	6803      	ldr	r3, [r0, #0]
 80038f0:	68db      	ldr	r3, [r3, #12]
 80038f2:	4798      	blx	r3
    if (*currentTrans)
 80038f4:	f8d8 0000 	ldr.w	r0, [r8]
 80038f8:	b110      	cbz	r0, 8003900 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 80038fa:	6803      	ldr	r3, [r0, #0]
 80038fc:	681b      	ldr	r3, [r3, #0]
 80038fe:	4798      	blx	r3
    if (*currentScreen)
 8003900:	4f3e      	ldr	r7, [pc, #248]	; (80039fc <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x170>)
 8003902:	6838      	ldr	r0, [r7, #0]
 8003904:	b110      	cbz	r0, 800390c <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003906:	6803      	ldr	r3, [r0, #0]
 8003908:	695b      	ldr	r3, [r3, #20]
 800390a:	4798      	blx	r3
    if (*currentPresenter)
 800390c:	f8d5 013c 	ldr.w	r0, [r5, #316]	; 0x13c
 8003910:	b110      	cbz	r0, 8003918 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003912:	6803      	ldr	r3, [r0, #0]
 8003914:	685b      	ldr	r3, [r3, #4]
 8003916:	4798      	blx	r3
    if (*currentScreen)
 8003918:	6838      	ldr	r0, [r7, #0]
 800391a:	b110      	cbz	r0, 8003922 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x96>
        (*currentScreen)->~Screen();
 800391c:	6803      	ldr	r3, [r0, #0]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	4798      	blx	r3
    if (*currentPresenter)
 8003922:	f8d5 013c 	ldr.w	r0, [r5, #316]	; 0x13c
 8003926:	b110      	cbz	r0, 800392e <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0xa2>
        (*currentPresenter)->~Presenter();
 8003928:	6803      	ldr	r3, [r0, #0]
 800392a:	689b      	ldr	r3, [r3, #8]
 800392c:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800392e:	68f0      	ldr	r0, [r6, #12]
 8003930:	6803      	ldr	r3, [r0, #0]
 8003932:	2100      	movs	r1, #0
 8003934:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003936:	4798      	blx	r3
 8003938:	2300      	movs	r3, #0
 800393a:	6043      	str	r3, [r0, #4]
 800393c:	7203      	strb	r3, [r0, #8]
          animationCounter(0)
 800393e:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8003940:	4b2f      	ldr	r3, [pc, #188]	; (8003a00 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 8003942:	4a30      	ldr	r2, [pc, #192]	; (8003a04 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x178>)
 8003944:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8003946:	881a      	ldrh	r2, [r3, #0]
 8003948:	4b2f      	ldr	r3, [pc, #188]	; (8003a08 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x17c>)
 800394a:	881b      	ldrh	r3, [r3, #0]
 800394c:	429a      	cmp	r2, r3
 800394e:	4604      	mov	r4, r0
 8003950:	d93d      	bls.n	80039ce <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x142>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8003952:	3207      	adds	r2, #7
 8003954:	10d2      	asrs	r2, r2, #3
 8003956:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 8003958:	3305      	adds	r3, #5
 800395a:	2206      	movs	r2, #6
 800395c:	fbb3 f3f2 	udiv	r3, r3, r2
 8003960:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 8003962:	2308      	movs	r3, #8
 8003964:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003966:	2100      	movs	r1, #0
 8003968:	68b0      	ldr	r0, [r6, #8]
 800396a:	f7ff ff89 	bl	8003880 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 800396e:	4682      	mov	sl, r0
 8003970:	f001 ffb6 	bl	80058e0 <_ZN21TemperatureScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003974:	6870      	ldr	r0, [r6, #4]
 8003976:	2100      	movs	r1, #0
 8003978:	f7ff ff85 	bl	8003886 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 800397c:	4651      	mov	r1, sl
 800397e:	4606      	mov	r6, r0
 8003980:	f001 ff88 	bl	8005894 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
    *currentTrans = newTransition;
 8003984:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 8003988:	f8c5 613c 	str.w	r6, [r5, #316]	; 0x13c
    *currentScreen = newScreen;
 800398c:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 8003990:	b33e      	cbz	r6, 80039e2 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x156>
 8003992:	1d33      	adds	r3, r6, #4
 8003994:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 8003998:	f8da 3000 	ldr.w	r3, [sl]
 800399c:	f8c6 9008 	str.w	r9, [r6, #8]
 80039a0:	4650      	mov	r0, sl
 80039a2:	68db      	ldr	r3, [r3, #12]
 80039a4:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 80039a8:	4798      	blx	r3
    newPresenter->activate();
 80039aa:	6833      	ldr	r3, [r6, #0]
 80039ac:	4630      	mov	r0, r6
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039b2:	4621      	mov	r1, r4
 80039b4:	4650      	mov	r0, sl
 80039b6:	f00f fd5b 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039ba:	6823      	ldr	r3, [r4, #0]
 80039bc:	4620      	mov	r0, r4
 80039be:	691b      	ldr	r3, [r3, #16]
 80039c0:	4798      	blx	r3
    newTransition->invalidate();
 80039c2:	6823      	ldr	r3, [r4, #0]
 80039c4:	4620      	mov	r0, r4
 80039c6:	695b      	ldr	r3, [r3, #20]
}
 80039c8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80039cc:	4718      	bx	r3
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 80039ce:	3307      	adds	r3, #7
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 80039d0:	2106      	movs	r1, #6
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 80039d2:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 80039d4:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 80039d6:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 80039d8:	fbb2 f2f1 	udiv	r2, r2, r1
            blocksHorizontal = 6;
 80039dc:	81c1      	strh	r1, [r0, #14]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 80039de:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 80039e0:	e7c1      	b.n	8003966 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0xda>
    model->bind(newPresenter);
 80039e2:	4633      	mov	r3, r6
 80039e4:	e7d6      	b.n	8003994 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenBlockTransitionImplEv+0x108>
 80039e6:	bf00      	nop
 80039e8:	0802855c 	.word	0x0802855c
 80039ec:	08028885 	.word	0x08028885
 80039f0:	080286f8 	.word	0x080286f8
 80039f4:	0802873f 	.word	0x0802873f
 80039f8:	080287e2 	.word	0x080287e2
 80039fc:	2001379c 	.word	0x2001379c
 8003a00:	2001374c 	.word	0x2001374c
 8003a04:	0802913c 	.word	0x0802913c
 8003a08:	2001374e 	.word	0x2001374e
 8003a0c:	200137a0 	.word	0x200137a0

08003a10 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>:
 8003a10:	6803      	ldr	r3, [r0, #0]
 8003a12:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003a14:	4718      	bx	r3
	...

08003a18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8003a18:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8003a1a:	4605      	mov	r5, r0
 8003a1c:	2600      	movs	r6, #0
 8003a1e:	4b14      	ldr	r3, [pc, #80]	; (8003a70 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x58>)
 8003a20:	6046      	str	r6, [r0, #4]
 8003a22:	7206      	strb	r6, [r0, #8]
 8003a24:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8003a28:	4604      	mov	r4, r0
          relativeValue(0)
 8003a2a:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8003a2c:	460f      	mov	r7, r1
          relativeValue(0)
 8003a2e:	f00a f9c7 	bl	800ddc0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8003a32:	4b10      	ldr	r3, [pc, #64]	; (8003a74 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x5c>)
          relativeValue(0)
 8003a34:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8003a38:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8003a3a:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8003a3e:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8003a40:	b923      	cbnz	r3, 8003a4c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x34>
            done = true;
 8003a42:	2301      	movs	r3, #1
 8003a44:	7223      	strb	r3, [r4, #8]
    }
 8003a46:	4620      	mov	r0, r4
 8003a48:	b003      	add	sp, #12
 8003a4a:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003a4c:	4b0a      	ldr	r3, [pc, #40]	; (8003a78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x60>)
 8003a4e:	4f0b      	ldr	r7, [pc, #44]	; (8003a7c <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x64>)
 8003a50:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003a54:	9300      	str	r3, [sp, #0]
 8003a56:	f9b7 3000 	ldrsh.w	r3, [r7]
 8003a5a:	4632      	mov	r2, r6
 8003a5c:	4631      	mov	r1, r6
 8003a5e:	4628      	mov	r0, r5
 8003a60:	f7ff fe42 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8003a64:	4628      	mov	r0, r5
 8003a66:	f00a f927 	bl	800dcb8 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = HAL::DISPLAY_WIDTH;
 8003a6a:	883b      	ldrh	r3, [r7, #0]
 8003a6c:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8003a6e:	e7ea      	b.n	8003a46 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh+0x2e>
 8003a70:	08029184 	.word	0x08029184
 8003a74:	20013757 	.word	0x20013757
 8003a78:	2001374e 	.word	0x2001374e
 8003a7c:	2001374c 	.word	0x2001374c

08003a80 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv>:
{
 8003a80:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<LedCommandScreenView, LedCommandScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003a84:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003a88:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003a8a:	68a0      	ldr	r0, [r4, #8]
 8003a8c:	6803      	ldr	r3, [r0, #0]
 8003a8e:	6a1b      	ldr	r3, [r3, #32]
 8003a90:	4798      	blx	r3
 8003a92:	f5b0 7fd0 	cmp.w	r0, #416	; 0x1a0
 8003a96:	d205      	bcs.n	8003aa4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x24>
 8003a98:	4b42      	ldr	r3, [pc, #264]	; (8003ba4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x124>)
 8003a9a:	4a43      	ldr	r2, [pc, #268]	; (8003ba8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x128>)
 8003a9c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003a9e:	4843      	ldr	r0, [pc, #268]	; (8003bac <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x12c>)
 8003aa0:	f01f f88e 	bl	8022bc0 <__assert_func>
 8003aa4:	6860      	ldr	r0, [r4, #4]
 8003aa6:	6803      	ldr	r3, [r0, #0]
 8003aa8:	6a1b      	ldr	r3, [r3, #32]
 8003aaa:	4798      	blx	r3
 8003aac:	280f      	cmp	r0, #15
 8003aae:	d803      	bhi.n	8003ab8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x38>
 8003ab0:	4b3f      	ldr	r3, [pc, #252]	; (8003bb0 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x130>)
 8003ab2:	4a3d      	ldr	r2, [pc, #244]	; (8003ba8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x128>)
 8003ab4:	21a4      	movs	r1, #164	; 0xa4
 8003ab6:	e7f2      	b.n	8003a9e <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ab8:	68e0      	ldr	r0, [r4, #12]
 8003aba:	6803      	ldr	r3, [r0, #0]
 8003abc:	6a1b      	ldr	r3, [r3, #32]
 8003abe:	4798      	blx	r3
 8003ac0:	283f      	cmp	r0, #63	; 0x3f
 8003ac2:	d803      	bhi.n	8003acc <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x4c>
 8003ac4:	4b3b      	ldr	r3, [pc, #236]	; (8003bb4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x134>)
 8003ac6:	4a38      	ldr	r2, [pc, #224]	; (8003ba8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x128>)
 8003ac8:	21a5      	movs	r1, #165	; 0xa5
 8003aca:	e7e8      	b.n	8003a9e <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003acc:	f00d ff1c 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003ad0:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003bb8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x138>
 8003ad4:	3004      	adds	r0, #4
 8003ad6:	f00d ff7d 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003ada:	f8d9 0000 	ldr.w	r0, [r9]
 8003ade:	b110      	cbz	r0, 8003ae6 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003ae0:	6803      	ldr	r3, [r0, #0]
 8003ae2:	68db      	ldr	r3, [r3, #12]
 8003ae4:	4798      	blx	r3
    if (*currentTrans)
 8003ae6:	f8d9 0000 	ldr.w	r0, [r9]
 8003aea:	b110      	cbz	r0, 8003af2 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003aec:	6803      	ldr	r3, [r0, #0]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	4798      	blx	r3
    if (*currentScreen)
 8003af2:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003bbc <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x13c>
 8003af6:	f8d8 0000 	ldr.w	r0, [r8]
 8003afa:	b110      	cbz	r0, 8003b02 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003afc:	6803      	ldr	r3, [r0, #0]
 8003afe:	695b      	ldr	r3, [r3, #20]
 8003b00:	4798      	blx	r3
    if (*currentPresenter)
 8003b02:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b06:	b110      	cbz	r0, 8003b0e <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003b08:	6803      	ldr	r3, [r0, #0]
 8003b0a:	685b      	ldr	r3, [r3, #4]
 8003b0c:	4798      	blx	r3
    if (*currentScreen)
 8003b0e:	f8d8 0000 	ldr.w	r0, [r8]
 8003b12:	b110      	cbz	r0, 8003b1a <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003b14:	6803      	ldr	r3, [r0, #0]
 8003b16:	681b      	ldr	r3, [r3, #0]
 8003b18:	4798      	blx	r3
    if (*currentPresenter)
 8003b1a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003b1e:	b110      	cbz	r0, 8003b26 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003b20:	6803      	ldr	r3, [r0, #0]
 8003b22:	689b      	ldr	r3, [r3, #8]
 8003b24:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003b26:	68e0      	ldr	r0, [r4, #12]
 8003b28:	2100      	movs	r1, #0
 8003b2a:	f7ff ff71 	bl	8003a10 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8003b2e:	2114      	movs	r1, #20
 8003b30:	4605      	mov	r5, r0
 8003b32:	f7ff ff71 	bl	8003a18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003b36:	68a0      	ldr	r0, [r4, #8]
 8003b38:	6803      	ldr	r3, [r0, #0]
 8003b3a:	2100      	movs	r1, #0
 8003b3c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b3e:	4798      	blx	r3
 8003b40:	4606      	mov	r6, r0
 8003b42:	f001 fdd5 	bl	80056f0 <_ZN20LedCommandScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003b46:	6860      	ldr	r0, [r4, #4]
 8003b48:	6803      	ldr	r3, [r0, #0]
 8003b4a:	2100      	movs	r1, #0
 8003b4c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b4e:	4798      	blx	r3
 8003b50:	4631      	mov	r1, r6
 8003b52:	4604      	mov	r4, r0
 8003b54:	f001 fd78 	bl	8005648 <_ZN25LedCommandScreenPresenterC1ER20LedCommandScreenView>
    *currentTrans = newTransition;
 8003b58:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003b5c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003b60:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003b64:	b1dc      	cbz	r4, 8003b9e <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0x11e>
 8003b66:	1d23      	adds	r3, r4, #4
 8003b68:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003b6c:	6833      	ldr	r3, [r6, #0]
 8003b6e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003b72:	4630      	mov	r0, r6
 8003b74:	68db      	ldr	r3, [r3, #12]
 8003b76:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003b78:	4798      	blx	r3
    newPresenter->activate();
 8003b7a:	6823      	ldr	r3, [r4, #0]
 8003b7c:	4620      	mov	r0, r4
 8003b7e:	681b      	ldr	r3, [r3, #0]
 8003b80:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003b82:	4629      	mov	r1, r5
 8003b84:	4630      	mov	r0, r6
 8003b86:	f00f fc73 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003b8a:	682b      	ldr	r3, [r5, #0]
 8003b8c:	4628      	mov	r0, r5
 8003b8e:	691b      	ldr	r3, [r3, #16]
 8003b90:	4798      	blx	r3
    newTransition->invalidate();
 8003b92:	682b      	ldr	r3, [r5, #0]
 8003b94:	4628      	mov	r0, r5
 8003b96:	695b      	ldr	r3, [r3, #20]
}
 8003b98:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003b9c:	4718      	bx	r3
    model->bind(newPresenter);
 8003b9e:	4623      	mov	r3, r4
 8003ba0:	e7e2      	b.n	8003b68 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionWestImplEv+0xe8>
 8003ba2:	bf00      	nop
 8003ba4:	0802855c 	.word	0x0802855c
 8003ba8:	080289a0 	.word	0x080289a0
 8003bac:	080286f8 	.word	0x080286f8
 8003bb0:	0802873f 	.word	0x0802873f
 8003bb4:	080287e2 	.word	0x080287e2
 8003bb8:	200137a0 	.word	0x200137a0
 8003bbc:	2001379c 	.word	0x2001379c

08003bc0 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv>:
{
 8003bc0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GetTemperatureScreenView, GetTemperatureScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003bc4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003bc8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003bca:	68a0      	ldr	r0, [r4, #8]
 8003bcc:	6803      	ldr	r3, [r0, #0]
 8003bce:	6a1b      	ldr	r3, [r3, #32]
 8003bd0:	4798      	blx	r3
 8003bd2:	f5b0 7fee 	cmp.w	r0, #476	; 0x1dc
 8003bd6:	d205      	bcs.n	8003be4 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x24>
 8003bd8:	4b42      	ldr	r3, [pc, #264]	; (8003ce4 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x124>)
 8003bda:	4a43      	ldr	r2, [pc, #268]	; (8003ce8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x128>)
 8003bdc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003bde:	4843      	ldr	r0, [pc, #268]	; (8003cec <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x12c>)
 8003be0:	f01e ffee 	bl	8022bc0 <__assert_func>
 8003be4:	6860      	ldr	r0, [r4, #4]
 8003be6:	6803      	ldr	r3, [r0, #0]
 8003be8:	6a1b      	ldr	r3, [r3, #32]
 8003bea:	4798      	blx	r3
 8003bec:	280f      	cmp	r0, #15
 8003bee:	d803      	bhi.n	8003bf8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x38>
 8003bf0:	4b3f      	ldr	r3, [pc, #252]	; (8003cf0 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x130>)
 8003bf2:	4a3d      	ldr	r2, [pc, #244]	; (8003ce8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x128>)
 8003bf4:	21a4      	movs	r1, #164	; 0xa4
 8003bf6:	e7f2      	b.n	8003bde <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003bf8:	68e0      	ldr	r0, [r4, #12]
 8003bfa:	6803      	ldr	r3, [r0, #0]
 8003bfc:	6a1b      	ldr	r3, [r3, #32]
 8003bfe:	4798      	blx	r3
 8003c00:	283f      	cmp	r0, #63	; 0x3f
 8003c02:	d803      	bhi.n	8003c0c <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x4c>
 8003c04:	4b3b      	ldr	r3, [pc, #236]	; (8003cf4 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x134>)
 8003c06:	4a38      	ldr	r2, [pc, #224]	; (8003ce8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x128>)
 8003c08:	21a5      	movs	r1, #165	; 0xa5
 8003c0a:	e7e8      	b.n	8003bde <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003c0c:	f00d fe7c 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003c10:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003cf8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x138>
 8003c14:	3004      	adds	r0, #4
 8003c16:	f00d fedd 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003c1a:	f8d9 0000 	ldr.w	r0, [r9]
 8003c1e:	b110      	cbz	r0, 8003c26 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x66>
        (*currentTrans)->tearDown();
 8003c20:	6803      	ldr	r3, [r0, #0]
 8003c22:	68db      	ldr	r3, [r3, #12]
 8003c24:	4798      	blx	r3
    if (*currentTrans)
 8003c26:	f8d9 0000 	ldr.w	r0, [r9]
 8003c2a:	b110      	cbz	r0, 8003c32 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x72>
        (*currentTrans)->~Transition();
 8003c2c:	6803      	ldr	r3, [r0, #0]
 8003c2e:	681b      	ldr	r3, [r3, #0]
 8003c30:	4798      	blx	r3
    if (*currentScreen)
 8003c32:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003cfc <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x13c>
 8003c36:	f8d8 0000 	ldr.w	r0, [r8]
 8003c3a:	b110      	cbz	r0, 8003c42 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003c3c:	6803      	ldr	r3, [r0, #0]
 8003c3e:	695b      	ldr	r3, [r3, #20]
 8003c40:	4798      	blx	r3
    if (*currentPresenter)
 8003c42:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c46:	b110      	cbz	r0, 8003c4e <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003c48:	6803      	ldr	r3, [r0, #0]
 8003c4a:	685b      	ldr	r3, [r3, #4]
 8003c4c:	4798      	blx	r3
    if (*currentScreen)
 8003c4e:	f8d8 0000 	ldr.w	r0, [r8]
 8003c52:	b110      	cbz	r0, 8003c5a <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003c54:	6803      	ldr	r3, [r0, #0]
 8003c56:	681b      	ldr	r3, [r3, #0]
 8003c58:	4798      	blx	r3
    if (*currentPresenter)
 8003c5a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003c5e:	b110      	cbz	r0, 8003c66 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003c60:	6803      	ldr	r3, [r0, #0]
 8003c62:	689b      	ldr	r3, [r3, #8]
 8003c64:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003c66:	68e0      	ldr	r0, [r4, #12]
 8003c68:	2100      	movs	r1, #0
 8003c6a:	f7ff fed1 	bl	8003a10 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8003c6e:	2114      	movs	r1, #20
 8003c70:	4605      	mov	r5, r0
 8003c72:	f7ff fed1 	bl	8003a18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003c76:	68a0      	ldr	r0, [r4, #8]
 8003c78:	6803      	ldr	r3, [r0, #0]
 8003c7a:	2100      	movs	r1, #0
 8003c7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c7e:	4798      	blx	r3
 8003c80:	4606      	mov	r6, r0
 8003c82:	f001 fca5 	bl	80055d0 <_ZN24GetTemperatureScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003c86:	6860      	ldr	r0, [r4, #4]
 8003c88:	6803      	ldr	r3, [r0, #0]
 8003c8a:	2100      	movs	r1, #0
 8003c8c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c8e:	4798      	blx	r3
 8003c90:	4631      	mov	r1, r6
 8003c92:	4604      	mov	r4, r0
 8003c94:	f001 fc62 	bl	800555c <_ZN29GetTemperatureScreenPresenterC1ER24GetTemperatureScreenView>
    *currentTrans = newTransition;
 8003c98:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003c9c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003ca0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003ca4:	b1dc      	cbz	r4, 8003cde <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0x11e>
 8003ca6:	1d23      	adds	r3, r4, #4
 8003ca8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003cac:	6833      	ldr	r3, [r6, #0]
 8003cae:	f8c4 a008 	str.w	sl, [r4, #8]
 8003cb2:	4630      	mov	r0, r6
 8003cb4:	68db      	ldr	r3, [r3, #12]
 8003cb6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003cb8:	4798      	blx	r3
    newPresenter->activate();
 8003cba:	6823      	ldr	r3, [r4, #0]
 8003cbc:	4620      	mov	r0, r4
 8003cbe:	681b      	ldr	r3, [r3, #0]
 8003cc0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003cc2:	4629      	mov	r1, r5
 8003cc4:	4630      	mov	r0, r6
 8003cc6:	f00f fbd3 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003cca:	682b      	ldr	r3, [r5, #0]
 8003ccc:	4628      	mov	r0, r5
 8003cce:	691b      	ldr	r3, [r3, #16]
 8003cd0:	4798      	blx	r3
    newTransition->invalidate();
 8003cd2:	682b      	ldr	r3, [r5, #0]
 8003cd4:	4628      	mov	r0, r5
 8003cd6:	695b      	ldr	r3, [r3, #20]
}
 8003cd8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003cdc:	4718      	bx	r3
    model->bind(newPresenter);
 8003cde:	4623      	mov	r3, r4
 8003ce0:	e7e2      	b.n	8003ca8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionWestImplEv+0xe8>
 8003ce2:	bf00      	nop
 8003ce4:	0802855c 	.word	0x0802855c
 8003ce8:	08028ac9 	.word	0x08028ac9
 8003cec:	080286f8 	.word	0x080286f8
 8003cf0:	0802873f 	.word	0x0802873f
 8003cf4:	080287e2 	.word	0x080287e2
 8003cf8:	200137a0 	.word	0x200137a0
 8003cfc:	2001379c 	.word	0x2001379c

08003d00 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv>:
{
 8003d00:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::SlideTransition<WEST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003d04:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003d08:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003d0a:	68a0      	ldr	r0, [r4, #8]
 8003d0c:	6803      	ldr	r3, [r0, #0]
 8003d0e:	6a1b      	ldr	r3, [r3, #32]
 8003d10:	4798      	blx	r3
 8003d12:	f241 13bb 	movw	r3, #4539	; 0x11bb
 8003d16:	4298      	cmp	r0, r3
 8003d18:	d805      	bhi.n	8003d26 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x26>
 8003d1a:	4b41      	ldr	r3, [pc, #260]	; (8003e20 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x120>)
 8003d1c:	4a41      	ldr	r2, [pc, #260]	; (8003e24 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x124>)
 8003d1e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003d20:	4841      	ldr	r0, [pc, #260]	; (8003e28 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x128>)
 8003d22:	f01e ff4d 	bl	8022bc0 <__assert_func>
 8003d26:	6860      	ldr	r0, [r4, #4]
 8003d28:	6803      	ldr	r3, [r0, #0]
 8003d2a:	6a1b      	ldr	r3, [r3, #32]
 8003d2c:	4798      	blx	r3
 8003d2e:	280f      	cmp	r0, #15
 8003d30:	d803      	bhi.n	8003d3a <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x3a>
 8003d32:	4b3e      	ldr	r3, [pc, #248]	; (8003e2c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x12c>)
 8003d34:	4a3b      	ldr	r2, [pc, #236]	; (8003e24 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x124>)
 8003d36:	21a4      	movs	r1, #164	; 0xa4
 8003d38:	e7f2      	b.n	8003d20 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003d3a:	68e0      	ldr	r0, [r4, #12]
 8003d3c:	6803      	ldr	r3, [r0, #0]
 8003d3e:	6a1b      	ldr	r3, [r3, #32]
 8003d40:	4798      	blx	r3
 8003d42:	283f      	cmp	r0, #63	; 0x3f
 8003d44:	d803      	bhi.n	8003d4e <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x4e>
 8003d46:	4b3a      	ldr	r3, [pc, #232]	; (8003e30 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x130>)
 8003d48:	4a36      	ldr	r2, [pc, #216]	; (8003e24 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x124>)
 8003d4a:	21a5      	movs	r1, #165	; 0xa5
 8003d4c:	e7e8      	b.n	8003d20 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 8003d4e:	f00d fddb 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003d52:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8003e34 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x134>
 8003d56:	3004      	adds	r0, #4
 8003d58:	f00d fe3c 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003d5c:	f8d9 0000 	ldr.w	r0, [r9]
 8003d60:	b110      	cbz	r0, 8003d68 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x68>
        (*currentTrans)->tearDown();
 8003d62:	6803      	ldr	r3, [r0, #0]
 8003d64:	68db      	ldr	r3, [r3, #12]
 8003d66:	4798      	blx	r3
    if (*currentTrans)
 8003d68:	f8d9 0000 	ldr.w	r0, [r9]
 8003d6c:	b110      	cbz	r0, 8003d74 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x74>
        (*currentTrans)->~Transition();
 8003d6e:	6803      	ldr	r3, [r0, #0]
 8003d70:	681b      	ldr	r3, [r3, #0]
 8003d72:	4798      	blx	r3
    if (*currentScreen)
 8003d74:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8003e38 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x138>
 8003d78:	f8d8 0000 	ldr.w	r0, [r8]
 8003d7c:	b110      	cbz	r0, 8003d84 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 8003d7e:	6803      	ldr	r3, [r0, #0]
 8003d80:	695b      	ldr	r3, [r3, #20]
 8003d82:	4798      	blx	r3
    if (*currentPresenter)
 8003d84:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003d88:	b110      	cbz	r0, 8003d90 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x90>
        (*currentPresenter)->deactivate();
 8003d8a:	6803      	ldr	r3, [r0, #0]
 8003d8c:	685b      	ldr	r3, [r3, #4]
 8003d8e:	4798      	blx	r3
    if (*currentScreen)
 8003d90:	f8d8 0000 	ldr.w	r0, [r8]
 8003d94:	b110      	cbz	r0, 8003d9c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x9c>
        (*currentScreen)->~Screen();
 8003d96:	6803      	ldr	r3, [r0, #0]
 8003d98:	681b      	ldr	r3, [r3, #0]
 8003d9a:	4798      	blx	r3
    if (*currentPresenter)
 8003d9c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003da0:	b110      	cbz	r0, 8003da8 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 8003da2:	6803      	ldr	r3, [r0, #0]
 8003da4:	689b      	ldr	r3, [r3, #8]
 8003da6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003da8:	68e0      	ldr	r0, [r4, #12]
 8003daa:	2100      	movs	r1, #0
 8003dac:	f7ff fe30 	bl	8003a10 <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t>
 8003db0:	2114      	movs	r1, #20
 8003db2:	4605      	mov	r5, r0
 8003db4:	f7ff fe30 	bl	8003a18 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003db8:	2100      	movs	r1, #0
 8003dba:	68a0      	ldr	r0, [r4, #8]
 8003dbc:	f7ff fd60 	bl	8003880 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 8003dc0:	4606      	mov	r6, r0
 8003dc2:	f001 fd8d 	bl	80058e0 <_ZN21TemperatureScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003dc6:	6860      	ldr	r0, [r4, #4]
 8003dc8:	2100      	movs	r1, #0
 8003dca:	f7ff fd5c 	bl	8003886 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 8003dce:	4631      	mov	r1, r6
 8003dd0:	4604      	mov	r4, r0
 8003dd2:	f001 fd5f 	bl	8005894 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
    *currentTrans = newTransition;
 8003dd6:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003dda:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003dde:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003de2:	b1dc      	cbz	r4, 8003e1c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0x11c>
 8003de4:	1d23      	adds	r3, r4, #4
 8003de6:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003dea:	6833      	ldr	r3, [r6, #0]
 8003dec:	f8c4 a008 	str.w	sl, [r4, #8]
 8003df0:	4630      	mov	r0, r6
 8003df2:	68db      	ldr	r3, [r3, #12]
 8003df4:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003df6:	4798      	blx	r3
    newPresenter->activate();
 8003df8:	6823      	ldr	r3, [r4, #0]
 8003dfa:	4620      	mov	r0, r4
 8003dfc:	681b      	ldr	r3, [r3, #0]
 8003dfe:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003e00:	4629      	mov	r1, r5
 8003e02:	4630      	mov	r0, r6
 8003e04:	f00f fb34 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003e08:	682b      	ldr	r3, [r5, #0]
 8003e0a:	4628      	mov	r0, r5
 8003e0c:	691b      	ldr	r3, [r3, #16]
 8003e0e:	4798      	blx	r3
    newTransition->invalidate();
 8003e10:	682b      	ldr	r3, [r5, #0]
 8003e12:	4628      	mov	r0, r5
 8003e14:	695b      	ldr	r3, [r3, #20]
}
 8003e16:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003e1a:	4718      	bx	r3
    model->bind(newPresenter);
 8003e1c:	4623      	mov	r3, r4
 8003e1e:	e7e2      	b.n	8003de6 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionWestImplEv+0xe6>
 8003e20:	0802855c 	.word	0x0802855c
 8003e24:	08028bfa 	.word	0x08028bfa
 8003e28:	080286f8 	.word	0x080286f8
 8003e2c:	0802873f 	.word	0x0802873f
 8003e30:	080287e2 	.word	0x080287e2
 8003e34:	200137a0 	.word	0x200137a0
 8003e38:	2001379c 	.word	0x2001379c

08003e3c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>:
 8003e3c:	6803      	ldr	r3, [r0, #0]
 8003e3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003e40:	4718      	bx	r3
	...

08003e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>:
    SlideTransition(const uint8_t transitionSteps = 20)
 8003e44:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
          relativeValue(0)
 8003e46:	4605      	mov	r5, r0
 8003e48:	2600      	movs	r6, #0
 8003e4a:	4b15      	ldr	r3, [pc, #84]	; (8003ea0 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x5c>)
 8003e4c:	6046      	str	r6, [r0, #4]
 8003e4e:	7206      	strb	r6, [r0, #8]
 8003e50:	f845 3b0c 	str.w	r3, [r5], #12
    SlideTransition(const uint8_t transitionSteps = 20)
 8003e54:	4604      	mov	r4, r0
          relativeValue(0)
 8003e56:	4628      	mov	r0, r5
    SlideTransition(const uint8_t transitionSteps = 20)
 8003e58:	460f      	mov	r7, r1
          relativeValue(0)
 8003e5a:	f009 ffb1 	bl	800ddc0 <_ZN8touchgfx14SnapshotWidgetC1Ev>
        if (!HAL::USE_ANIMATION_STORAGE)
 8003e5e:	4b11      	ldr	r3, [pc, #68]	; (8003ea4 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x60>)
          relativeValue(0)
 8003e60:	f884 7038 	strb.w	r7, [r4, #56]	; 0x38
        if (!HAL::USE_ANIMATION_STORAGE)
 8003e64:	781b      	ldrb	r3, [r3, #0]
          relativeValue(0)
 8003e66:	f884 6039 	strb.w	r6, [r4, #57]	; 0x39
 8003e6a:	87a6      	strh	r6, [r4, #60]	; 0x3c
        if (!HAL::USE_ANIMATION_STORAGE)
 8003e6c:	b923      	cbnz	r3, 8003e78 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x34>
            done = true;
 8003e6e:	2301      	movs	r3, #1
 8003e70:	7223      	strb	r3, [r4, #8]
    }
 8003e72:	4620      	mov	r0, r4
 8003e74:	b003      	add	sp, #12
 8003e76:	bdf0      	pop	{r4, r5, r6, r7, pc}
        snapshot.setPosition(0, 0, HAL::DISPLAY_WIDTH, HAL::DISPLAY_HEIGHT);
 8003e78:	4b0b      	ldr	r3, [pc, #44]	; (8003ea8 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x64>)
 8003e7a:	4f0c      	ldr	r7, [pc, #48]	; (8003eac <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x68>)
 8003e7c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003e80:	9300      	str	r3, [sp, #0]
 8003e82:	f9b7 3000 	ldrsh.w	r3, [r7]
 8003e86:	4632      	mov	r2, r6
 8003e88:	4631      	mov	r1, r6
 8003e8a:	4628      	mov	r0, r5
 8003e8c:	f7ff fc2c 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
        snapshot.makeSnapshot();
 8003e90:	4628      	mov	r0, r5
 8003e92:	f009 ff11 	bl	800dcb8 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>
            targetValue = -HAL::DISPLAY_WIDTH;
 8003e96:	883b      	ldrh	r3, [r7, #0]
 8003e98:	425b      	negs	r3, r3
 8003e9a:	8763      	strh	r3, [r4, #58]	; 0x3a
            break;
 8003e9c:	e7e9      	b.n	8003e72 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh+0x2e>
 8003e9e:	bf00      	nop
 8003ea0:	08029160 	.word	0x08029160
 8003ea4:	20013757 	.word	0x20013757
 8003ea8:	2001374e 	.word	0x2001374e
 8003eac:	2001374c 	.word	0x2001374c

08003eb0 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv>:

void FrontendApplicationBase::gotoLedCommandScreenScreenSlideTransitionEastImpl()
{
 8003eb0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<LedCommandScreenView, LedCommandScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003eb4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003eb8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003eba:	68a0      	ldr	r0, [r4, #8]
 8003ebc:	6803      	ldr	r3, [r0, #0]
 8003ebe:	6a1b      	ldr	r3, [r3, #32]
 8003ec0:	4798      	blx	r3
 8003ec2:	f5b0 7fd0 	cmp.w	r0, #416	; 0x1a0
 8003ec6:	d205      	bcs.n	8003ed4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x24>
 8003ec8:	4b42      	ldr	r3, [pc, #264]	; (8003fd4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x124>)
 8003eca:	4a43      	ldr	r2, [pc, #268]	; (8003fd8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x128>)
 8003ecc:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8003ece:	4843      	ldr	r0, [pc, #268]	; (8003fdc <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x12c>)
 8003ed0:	f01e fe76 	bl	8022bc0 <__assert_func>
 8003ed4:	6860      	ldr	r0, [r4, #4]
 8003ed6:	6803      	ldr	r3, [r0, #0]
 8003ed8:	6a1b      	ldr	r3, [r3, #32]
 8003eda:	4798      	blx	r3
 8003edc:	280f      	cmp	r0, #15
 8003ede:	d803      	bhi.n	8003ee8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x38>
 8003ee0:	4b3f      	ldr	r3, [pc, #252]	; (8003fe0 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x130>)
 8003ee2:	4a3d      	ldr	r2, [pc, #244]	; (8003fd8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x128>)
 8003ee4:	21a4      	movs	r1, #164	; 0xa4
 8003ee6:	e7f2      	b.n	8003ece <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003ee8:	68e0      	ldr	r0, [r4, #12]
 8003eea:	6803      	ldr	r3, [r0, #0]
 8003eec:	6a1b      	ldr	r3, [r3, #32]
 8003eee:	4798      	blx	r3
 8003ef0:	283f      	cmp	r0, #63	; 0x3f
 8003ef2:	d803      	bhi.n	8003efc <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x4c>
 8003ef4:	4b3b      	ldr	r3, [pc, #236]	; (8003fe4 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x134>)
 8003ef6:	4a38      	ldr	r2, [pc, #224]	; (8003fd8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x128>)
 8003ef8:	21a5      	movs	r1, #165	; 0xa5
 8003efa:	e7e8      	b.n	8003ece <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003efc:	f00d fd04 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8003f00:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8003fe8 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x138>
 8003f04:	3004      	adds	r0, #4
 8003f06:	f00d fd65 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003f0a:	f8d9 0000 	ldr.w	r0, [r9]
 8003f0e:	b110      	cbz	r0, 8003f16 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8003f10:	6803      	ldr	r3, [r0, #0]
 8003f12:	68db      	ldr	r3, [r3, #12]
 8003f14:	4798      	blx	r3
    if (*currentTrans)
 8003f16:	f8d9 0000 	ldr.w	r0, [r9]
 8003f1a:	b110      	cbz	r0, 8003f22 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 8003f1c:	6803      	ldr	r3, [r0, #0]
 8003f1e:	681b      	ldr	r3, [r3, #0]
 8003f20:	4798      	blx	r3
    if (*currentScreen)
 8003f22:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003fec <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x13c>
 8003f26:	f8d8 0000 	ldr.w	r0, [r8]
 8003f2a:	b110      	cbz	r0, 8003f32 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003f2c:	6803      	ldr	r3, [r0, #0]
 8003f2e:	695b      	ldr	r3, [r3, #20]
 8003f30:	4798      	blx	r3
    if (*currentPresenter)
 8003f32:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f36:	b110      	cbz	r0, 8003f3e <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003f38:	6803      	ldr	r3, [r0, #0]
 8003f3a:	685b      	ldr	r3, [r3, #4]
 8003f3c:	4798      	blx	r3
    if (*currentScreen)
 8003f3e:	f8d8 0000 	ldr.w	r0, [r8]
 8003f42:	b110      	cbz	r0, 8003f4a <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003f44:	6803      	ldr	r3, [r0, #0]
 8003f46:	681b      	ldr	r3, [r3, #0]
 8003f48:	4798      	blx	r3
    if (*currentPresenter)
 8003f4a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003f4e:	b110      	cbz	r0, 8003f56 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8003f50:	6803      	ldr	r3, [r0, #0]
 8003f52:	689b      	ldr	r3, [r3, #8]
 8003f54:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003f56:	68e0      	ldr	r0, [r4, #12]
 8003f58:	2100      	movs	r1, #0
 8003f5a:	f7ff ff6f 	bl	8003e3c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 8003f5e:	2114      	movs	r1, #20
 8003f60:	4605      	mov	r5, r0
 8003f62:	f7ff ff6f 	bl	8003e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003f66:	68a0      	ldr	r0, [r4, #8]
 8003f68:	6803      	ldr	r3, [r0, #0]
 8003f6a:	2100      	movs	r1, #0
 8003f6c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f6e:	4798      	blx	r3
 8003f70:	4606      	mov	r6, r0
 8003f72:	f001 fbbd 	bl	80056f0 <_ZN20LedCommandScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003f76:	6860      	ldr	r0, [r4, #4]
 8003f78:	6803      	ldr	r3, [r0, #0]
 8003f7a:	2100      	movs	r1, #0
 8003f7c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003f7e:	4798      	blx	r3
 8003f80:	4631      	mov	r1, r6
 8003f82:	4604      	mov	r4, r0
 8003f84:	f001 fb60 	bl	8005648 <_ZN25LedCommandScreenPresenterC1ER20LedCommandScreenView>
    *currentTrans = newTransition;
 8003f88:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8003f8c:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003f90:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8003f94:	b1dc      	cbz	r4, 8003fce <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0x11e>
 8003f96:	1d23      	adds	r3, r4, #4
 8003f98:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003f9c:	6833      	ldr	r3, [r6, #0]
 8003f9e:	f8c4 a008 	str.w	sl, [r4, #8]
 8003fa2:	4630      	mov	r0, r6
 8003fa4:	68db      	ldr	r3, [r3, #12]
 8003fa6:	63f4      	str	r4, [r6, #60]	; 0x3c
 8003fa8:	4798      	blx	r3
    newPresenter->activate();
 8003faa:	6823      	ldr	r3, [r4, #0]
 8003fac:	4620      	mov	r0, r4
 8003fae:	681b      	ldr	r3, [r3, #0]
 8003fb0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003fb2:	4629      	mov	r1, r5
 8003fb4:	4630      	mov	r0, r6
 8003fb6:	f00f fa5b 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003fba:	682b      	ldr	r3, [r5, #0]
 8003fbc:	4628      	mov	r0, r5
 8003fbe:	691b      	ldr	r3, [r3, #16]
 8003fc0:	4798      	blx	r3
    newTransition->invalidate();
 8003fc2:	682b      	ldr	r3, [r5, #0]
 8003fc4:	4628      	mov	r0, r5
 8003fc6:	695b      	ldr	r3, [r3, #20]
}
 8003fc8:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003fcc:	4718      	bx	r3
    model->bind(newPresenter);
 8003fce:	4623      	mov	r3, r4
 8003fd0:	e7e2      	b.n	8003f98 <_ZN23FrontendApplicationBase49gotoLedCommandScreenScreenSlideTransitionEastImplEv+0xe8>
 8003fd2:	bf00      	nop
 8003fd4:	0802855c 	.word	0x0802855c
 8003fd8:	08028d25 	.word	0x08028d25
 8003fdc:	080286f8 	.word	0x080286f8
 8003fe0:	0802873f 	.word	0x0802873f
 8003fe4:	080287e2 	.word	0x080287e2
 8003fe8:	200137a0 	.word	0x200137a0
 8003fec:	2001379c 	.word	0x2001379c

08003ff0 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv>:
{
 8003ff0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<GetTemperatureScreenView, GetTemperatureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003ff4:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8003ff8:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003ffa:	68a0      	ldr	r0, [r4, #8]
 8003ffc:	6803      	ldr	r3, [r0, #0]
 8003ffe:	6a1b      	ldr	r3, [r3, #32]
 8004000:	4798      	blx	r3
 8004002:	f5b0 7fee 	cmp.w	r0, #476	; 0x1dc
 8004006:	d205      	bcs.n	8004014 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x24>
 8004008:	4b42      	ldr	r3, [pc, #264]	; (8004114 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x124>)
 800400a:	4a43      	ldr	r2, [pc, #268]	; (8004118 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x128>)
 800400c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800400e:	4843      	ldr	r0, [pc, #268]	; (800411c <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004010:	f01e fdd6 	bl	8022bc0 <__assert_func>
 8004014:	6860      	ldr	r0, [r4, #4]
 8004016:	6803      	ldr	r3, [r0, #0]
 8004018:	6a1b      	ldr	r3, [r3, #32]
 800401a:	4798      	blx	r3
 800401c:	280f      	cmp	r0, #15
 800401e:	d803      	bhi.n	8004028 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x38>
 8004020:	4b3f      	ldr	r3, [pc, #252]	; (8004120 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x130>)
 8004022:	4a3d      	ldr	r2, [pc, #244]	; (8004118 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x128>)
 8004024:	21a4      	movs	r1, #164	; 0xa4
 8004026:	e7f2      	b.n	800400e <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8004028:	68e0      	ldr	r0, [r4, #12]
 800402a:	6803      	ldr	r3, [r0, #0]
 800402c:	6a1b      	ldr	r3, [r3, #32]
 800402e:	4798      	blx	r3
 8004030:	283f      	cmp	r0, #63	; 0x3f
 8004032:	d803      	bhi.n	800403c <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x4c>
 8004034:	4b3b      	ldr	r3, [pc, #236]	; (8004124 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x134>)
 8004036:	4a38      	ldr	r2, [pc, #224]	; (8004118 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x128>)
 8004038:	21a5      	movs	r1, #165	; 0xa5
 800403a:	e7e8      	b.n	800400e <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800403c:	f00d fc64 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004040:	f8df 90e4 	ldr.w	r9, [pc, #228]	; 8004128 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x138>
 8004044:	3004      	adds	r0, #4
 8004046:	f00d fcc5 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800404a:	f8d9 0000 	ldr.w	r0, [r9]
 800404e:	b110      	cbz	r0, 8004056 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x66>
        (*currentTrans)->tearDown();
 8004050:	6803      	ldr	r3, [r0, #0]
 8004052:	68db      	ldr	r3, [r3, #12]
 8004054:	4798      	blx	r3
    if (*currentTrans)
 8004056:	f8d9 0000 	ldr.w	r0, [r9]
 800405a:	b110      	cbz	r0, 8004062 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x72>
        (*currentTrans)->~Transition();
 800405c:	6803      	ldr	r3, [r0, #0]
 800405e:	681b      	ldr	r3, [r3, #0]
 8004060:	4798      	blx	r3
    if (*currentScreen)
 8004062:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 800412c <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x13c>
 8004066:	f8d8 0000 	ldr.w	r0, [r8]
 800406a:	b110      	cbz	r0, 8004072 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 800406c:	6803      	ldr	r3, [r0, #0]
 800406e:	695b      	ldr	r3, [r3, #20]
 8004070:	4798      	blx	r3
    if (*currentPresenter)
 8004072:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8004076:	b110      	cbz	r0, 800407e <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8004078:	6803      	ldr	r3, [r0, #0]
 800407a:	685b      	ldr	r3, [r3, #4]
 800407c:	4798      	blx	r3
    if (*currentScreen)
 800407e:	f8d8 0000 	ldr.w	r0, [r8]
 8004082:	b110      	cbz	r0, 800408a <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x9a>
        (*currentScreen)->~Screen();
 8004084:	6803      	ldr	r3, [r0, #0]
 8004086:	681b      	ldr	r3, [r3, #0]
 8004088:	4798      	blx	r3
    if (*currentPresenter)
 800408a:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800408e:	b110      	cbz	r0, 8004096 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 8004090:	6803      	ldr	r3, [r0, #0]
 8004092:	689b      	ldr	r3, [r3, #8]
 8004094:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8004096:	68e0      	ldr	r0, [r4, #12]
 8004098:	2100      	movs	r1, #0
 800409a:	f7ff fecf 	bl	8003e3c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 800409e:	2114      	movs	r1, #20
 80040a0:	4605      	mov	r5, r0
 80040a2:	f7ff fecf 	bl	8003e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80040a6:	68a0      	ldr	r0, [r4, #8]
 80040a8:	6803      	ldr	r3, [r0, #0]
 80040aa:	2100      	movs	r1, #0
 80040ac:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040ae:	4798      	blx	r3
 80040b0:	4606      	mov	r6, r0
 80040b2:	f001 fa8d 	bl	80055d0 <_ZN24GetTemperatureScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80040b6:	6860      	ldr	r0, [r4, #4]
 80040b8:	6803      	ldr	r3, [r0, #0]
 80040ba:	2100      	movs	r1, #0
 80040bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80040be:	4798      	blx	r3
 80040c0:	4631      	mov	r1, r6
 80040c2:	4604      	mov	r4, r0
 80040c4:	f001 fa4a 	bl	800555c <_ZN29GetTemperatureScreenPresenterC1ER24GetTemperatureScreenView>
    *currentTrans = newTransition;
 80040c8:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 80040cc:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80040d0:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80040d4:	b1dc      	cbz	r4, 800410e <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0x11e>
 80040d6:	1d23      	adds	r3, r4, #4
 80040d8:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80040dc:	6833      	ldr	r3, [r6, #0]
 80040de:	f8c4 a008 	str.w	sl, [r4, #8]
 80040e2:	4630      	mov	r0, r6
 80040e4:	68db      	ldr	r3, [r3, #12]
 80040e6:	63f4      	str	r4, [r6, #60]	; 0x3c
 80040e8:	4798      	blx	r3
    newPresenter->activate();
 80040ea:	6823      	ldr	r3, [r4, #0]
 80040ec:	4620      	mov	r0, r4
 80040ee:	681b      	ldr	r3, [r3, #0]
 80040f0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80040f2:	4629      	mov	r1, r5
 80040f4:	4630      	mov	r0, r6
 80040f6:	f00f f9bb 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80040fa:	682b      	ldr	r3, [r5, #0]
 80040fc:	4628      	mov	r0, r5
 80040fe:	691b      	ldr	r3, [r3, #16]
 8004100:	4798      	blx	r3
    newTransition->invalidate();
 8004102:	682b      	ldr	r3, [r5, #0]
 8004104:	4628      	mov	r0, r5
 8004106:	695b      	ldr	r3, [r3, #20]
}
 8004108:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800410c:	4718      	bx	r3
    model->bind(newPresenter);
 800410e:	4623      	mov	r3, r4
 8004110:	e7e2      	b.n	80040d8 <_ZN23FrontendApplicationBase53gotoGetTemperatureScreenScreenSlideTransitionEastImplEv+0xe8>
 8004112:	bf00      	nop
 8004114:	0802855c 	.word	0x0802855c
 8004118:	08028e4e 	.word	0x08028e4e
 800411c:	080286f8 	.word	0x080286f8
 8004120:	0802873f 	.word	0x0802873f
 8004124:	080287e2 	.word	0x080287e2
 8004128:	200137a0 	.word	0x200137a0
 800412c:	2001379c 	.word	0x2001379c

08004130 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv>:
{
 8004130:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<TemperatureScreenView, TemperatureScreenPresenter, touchgfx::SlideTransition<EAST>, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8004134:	e9d0 4a55 	ldrd	r4, sl, [r0, #340]	; 0x154
{
 8004138:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800413a:	68a0      	ldr	r0, [r4, #8]
 800413c:	6803      	ldr	r3, [r0, #0]
 800413e:	6a1b      	ldr	r3, [r3, #32]
 8004140:	4798      	blx	r3
 8004142:	f241 13bb 	movw	r3, #4539	; 0x11bb
 8004146:	4298      	cmp	r0, r3
 8004148:	d805      	bhi.n	8004156 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x26>
 800414a:	4b41      	ldr	r3, [pc, #260]	; (8004250 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x120>)
 800414c:	4a41      	ldr	r2, [pc, #260]	; (8004254 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x124>)
 800414e:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8004150:	4841      	ldr	r0, [pc, #260]	; (8004258 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x128>)
 8004152:	f01e fd35 	bl	8022bc0 <__assert_func>
 8004156:	6860      	ldr	r0, [r4, #4]
 8004158:	6803      	ldr	r3, [r0, #0]
 800415a:	6a1b      	ldr	r3, [r3, #32]
 800415c:	4798      	blx	r3
 800415e:	280f      	cmp	r0, #15
 8004160:	d803      	bhi.n	800416a <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x3a>
 8004162:	4b3e      	ldr	r3, [pc, #248]	; (800425c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x12c>)
 8004164:	4a3b      	ldr	r2, [pc, #236]	; (8004254 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x124>)
 8004166:	21a4      	movs	r1, #164	; 0xa4
 8004168:	e7f2      	b.n	8004150 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800416a:	68e0      	ldr	r0, [r4, #12]
 800416c:	6803      	ldr	r3, [r0, #0]
 800416e:	6a1b      	ldr	r3, [r3, #32]
 8004170:	4798      	blx	r3
 8004172:	283f      	cmp	r0, #63	; 0x3f
 8004174:	d803      	bhi.n	800417e <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x4e>
 8004176:	4b3a      	ldr	r3, [pc, #232]	; (8004260 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x130>)
 8004178:	4a36      	ldr	r2, [pc, #216]	; (8004254 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x124>)
 800417a:	21a5      	movs	r1, #165	; 0xa5
 800417c:	e7e8      	b.n	8004150 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800417e:	f00d fbc3 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 8004182:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 8004264 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x134>
 8004186:	3004      	adds	r0, #4
 8004188:	f00d fc24 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 800418c:	f8d9 0000 	ldr.w	r0, [r9]
 8004190:	b110      	cbz	r0, 8004198 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x68>
        (*currentTrans)->tearDown();
 8004192:	6803      	ldr	r3, [r0, #0]
 8004194:	68db      	ldr	r3, [r3, #12]
 8004196:	4798      	blx	r3
    if (*currentTrans)
 8004198:	f8d9 0000 	ldr.w	r0, [r9]
 800419c:	b110      	cbz	r0, 80041a4 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x74>
        (*currentTrans)->~Transition();
 800419e:	6803      	ldr	r3, [r0, #0]
 80041a0:	681b      	ldr	r3, [r3, #0]
 80041a2:	4798      	blx	r3
    if (*currentScreen)
 80041a4:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8004268 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x138>
 80041a8:	f8d8 0000 	ldr.w	r0, [r8]
 80041ac:	b110      	cbz	r0, 80041b4 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80041ae:	6803      	ldr	r3, [r0, #0]
 80041b0:	695b      	ldr	r3, [r3, #20]
 80041b2:	4798      	blx	r3
    if (*currentPresenter)
 80041b4:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041b8:	b110      	cbz	r0, 80041c0 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x90>
        (*currentPresenter)->deactivate();
 80041ba:	6803      	ldr	r3, [r0, #0]
 80041bc:	685b      	ldr	r3, [r3, #4]
 80041be:	4798      	blx	r3
    if (*currentScreen)
 80041c0:	f8d8 0000 	ldr.w	r0, [r8]
 80041c4:	b110      	cbz	r0, 80041cc <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x9c>
        (*currentScreen)->~Screen();
 80041c6:	6803      	ldr	r3, [r0, #0]
 80041c8:	681b      	ldr	r3, [r3, #0]
 80041ca:	4798      	blx	r3
    if (*currentPresenter)
 80041cc:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80041d0:	b110      	cbz	r0, 80041d8 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80041d2:	6803      	ldr	r3, [r0, #0]
 80041d4:	689b      	ldr	r3, [r3, #8]
 80041d6:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80041d8:	68e0      	ldr	r0, [r4, #12]
 80041da:	2100      	movs	r1, #0
 80041dc:	f7ff fe2e 	bl	8003e3c <_ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t>
 80041e0:	2114      	movs	r1, #20
 80041e2:	4605      	mov	r5, r0
 80041e4:	f7ff fe2e 	bl	8003e44 <_ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh>
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80041e8:	2100      	movs	r1, #0
 80041ea:	68a0      	ldr	r0, [r4, #8]
 80041ec:	f7ff fb48 	bl	8003880 <_ZN8touchgfx17AbstractPartition2atI21TemperatureScreenViewEERT_t>
 80041f0:	4606      	mov	r6, r0
 80041f2:	f001 fb75 	bl	80058e0 <_ZN21TemperatureScreenViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80041f6:	6860      	ldr	r0, [r4, #4]
 80041f8:	2100      	movs	r1, #0
 80041fa:	f7ff fb44 	bl	8003886 <_ZN8touchgfx17AbstractPartition2atI26TemperatureScreenPresenterEERT_t>
 80041fe:	4631      	mov	r1, r6
 8004200:	4604      	mov	r4, r0
 8004202:	f001 fb47 	bl	8005894 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>
    *currentTrans = newTransition;
 8004206:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 800420a:	f8c7 413c 	str.w	r4, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 800420e:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 8004212:	b1dc      	cbz	r4, 800424c <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0x11c>
 8004214:	1d23      	adds	r3, r4, #4
 8004216:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 800421a:	6833      	ldr	r3, [r6, #0]
 800421c:	f8c4 a008 	str.w	sl, [r4, #8]
 8004220:	4630      	mov	r0, r6
 8004222:	68db      	ldr	r3, [r3, #12]
 8004224:	63f4      	str	r4, [r6, #60]	; 0x3c
 8004226:	4798      	blx	r3
    newPresenter->activate();
 8004228:	6823      	ldr	r3, [r4, #0]
 800422a:	4620      	mov	r0, r4
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8004230:	4629      	mov	r1, r5
 8004232:	4630      	mov	r0, r6
 8004234:	f00f f91c 	bl	8013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8004238:	682b      	ldr	r3, [r5, #0]
 800423a:	4628      	mov	r0, r5
 800423c:	691b      	ldr	r3, [r3, #16]
 800423e:	4798      	blx	r3
    newTransition->invalidate();
 8004240:	682b      	ldr	r3, [r5, #0]
 8004242:	4628      	mov	r0, r5
 8004244:	695b      	ldr	r3, [r3, #20]
}
 8004246:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800424a:	4718      	bx	r3
    model->bind(newPresenter);
 800424c:	4623      	mov	r3, r4
 800424e:	e7e2      	b.n	8004216 <_ZN23FrontendApplicationBase50gotoTemperatureScreenScreenSlideTransitionEastImplEv+0xe6>
 8004250:	0802855c 	.word	0x0802855c
 8004254:	08028f7f 	.word	0x08028f7f
 8004258:	080286f8 	.word	0x080286f8
 800425c:	0802873f 	.word	0x0802873f
 8004260:	080287e2 	.word	0x080287e2
 8004264:	200137a0 	.word	0x200137a0
 8004268:	2001379c 	.word	0x2001379c

0800426c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800426c:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800426e:	4770      	bx	lr

08004270 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8004270:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004272:	4770      	bx	lr

08004274 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8004274:	4770      	bx	lr

08004276 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8004276:	888b      	ldrh	r3, [r1, #4]
 8004278:	69c0      	ldr	r0, [r0, #28]
 800427a:	680a      	ldr	r2, [r1, #0]
 800427c:	0adb      	lsrs	r3, r3, #11
 800427e:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8004282:	4410      	add	r0, r2
 8004284:	4770      	bx	lr

08004286 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8004286:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8004288:	b1c2      	cbz	r2, 80042bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 800428a:	7b13      	ldrb	r3, [r2, #12]
 800428c:	b1b3      	cbz	r3, 80042bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800428e:	7b54      	ldrb	r4, [r2, #13]
 8004290:	7ad2      	ldrb	r2, [r2, #11]
 8004292:	0224      	lsls	r4, r4, #8
 8004294:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8004298:	4314      	orrs	r4, r2
 800429a:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800429c:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 800429e:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80042a2:	8813      	ldrh	r3, [r2, #0]
 80042a4:	428b      	cmp	r3, r1
 80042a6:	d102      	bne.n	80042ae <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80042a8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80042ac:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80042ae:	d805      	bhi.n	80042bc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80042b0:	3801      	subs	r0, #1
 80042b2:	b280      	uxth	r0, r0
 80042b4:	3204      	adds	r2, #4
 80042b6:	2800      	cmp	r0, #0
 80042b8:	d1f3      	bne.n	80042a2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80042ba:	e7f7      	b.n	80042ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80042bc:	2000      	movs	r0, #0
 80042be:	e7f5      	b.n	80042ac <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080042c0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80042c0:	b510      	push	{r4, lr}
 80042c2:	212c      	movs	r1, #44	; 0x2c
 80042c4:	4604      	mov	r4, r0
 80042c6:	f01d fe68 	bl	8021f9a <_ZdlPvj>
 80042ca:	4620      	mov	r0, r4
 80042cc:	bd10      	pop	{r4, pc}
	...

080042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 80042d0:	b530      	push	{r4, r5, lr}
 80042d2:	b08b      	sub	sp, #44	; 0x2c
 80042d4:	4604      	mov	r4, r0
      arabicTable(formsTable)
 80042d6:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 80042da:	9508      	str	r5, [sp, #32]
 80042dc:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 80042e0:	9507      	str	r5, [sp, #28]
 80042e2:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 80042e6:	9506      	str	r5, [sp, #24]
 80042e8:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 80042ec:	9505      	str	r5, [sp, #20]
 80042ee:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 80042f2:	9504      	str	r5, [sp, #16]
 80042f4:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 80042f8:	9503      	str	r5, [sp, #12]
 80042fa:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 80042fe:	9502      	str	r5, [sp, #8]
 8004300:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8004304:	9501      	str	r5, [sp, #4]
 8004306:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800430a:	9500      	str	r5, [sp, #0]
 800430c:	f00e fc60 	bl	8012bd0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8004310:	4b06      	ldr	r3, [pc, #24]	; (800432c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8004312:	6023      	str	r3, [r4, #0]
 8004314:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8004316:	61e3      	str	r3, [r4, #28]
 8004318:	9b16      	ldr	r3, [sp, #88]	; 0x58
 800431a:	6223      	str	r3, [r4, #32]
 800431c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 800431e:	6263      	str	r3, [r4, #36]	; 0x24
 8004320:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8004322:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8004324:	4620      	mov	r0, r4
 8004326:	b00b      	add	sp, #44	; 0x2c
 8004328:	bd30      	pop	{r4, r5, pc}
 800432a:	bf00      	nop
 800432c:	080291a8 	.word	0x080291a8

08004330 <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8004330:	4770      	bx	lr

08004332 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8004332:	4770      	bx	lr

08004334 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8004334:	4770      	bx	lr

08004336 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8004336:	4770      	bx	lr

08004338 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8004338:	4770      	bx	lr

0800433a <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
     * @return true if button is pressed, false otherwise.
     */
    virtual bool getPressedState() const
    {
        return pressed;
    }
 800433a:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800433e:	4770      	bx	lr

08004340 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
    int16_t iconY;       ///< y coordinate offset for icon.

private:
    virtual void setBitmaps(const Bitmap& /*bitmapReleased*/, const Bitmap& /*bitmapPressed*/)
    {
    }
 8004340:	4770      	bx	lr

08004342 <_ZN8touchgfx8TextArea8setWidthEs>:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
    {
    }

    virtual void setWidth(int16_t width)
 8004342:	b530      	push	{r4, r5, lr}
    {
        Widget::setWidth(width);
        boundingArea = calculateBoundingArea();
 8004344:	6803      	ldr	r3, [r0, #0]
        rect.width = width;
 8004346:	8101      	strh	r1, [r0, #8]
    virtual void setWidth(int16_t width)
 8004348:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800434a:	466d      	mov	r5, sp
 800434c:	4601      	mov	r1, r0
 800434e:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setWidth(int16_t width)
 8004352:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8004354:	4628      	mov	r0, r5
 8004356:	4798      	blx	r3
 8004358:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800435c:	343c      	adds	r4, #60	; 0x3c
 800435e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8004362:	b005      	add	sp, #20
 8004364:	bd30      	pop	{r4, r5, pc}

08004366 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 8004366:	b530      	push	{r4, r5, lr}
    {
        Widget::setHeight(height);
        boundingArea = calculateBoundingArea();
 8004368:	6803      	ldr	r3, [r0, #0]
        rect.height = height;
 800436a:	8141      	strh	r1, [r0, #10]
    virtual void setHeight(int16_t height)
 800436c:	b085      	sub	sp, #20
        boundingArea = calculateBoundingArea();
 800436e:	466d      	mov	r5, sp
 8004370:	4601      	mov	r1, r0
 8004372:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
    virtual void setHeight(int16_t height)
 8004376:	4604      	mov	r4, r0
        boundingArea = calculateBoundingArea();
 8004378:	4628      	mov	r0, r5
 800437a:	4798      	blx	r3
 800437c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004380:	343c      	adds	r4, #60	; 0x3c
 8004382:	e884 0007 	stmia.w	r4, {r0, r1, r2}
    }
 8004386:	b005      	add	sp, #20
 8004388:	bd30      	pop	{r4, r5, pc}

0800438a <_ZNK8touchgfx8TextArea12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 800438a:	2200      	movs	r2, #0
 800438c:	8002      	strh	r2, [r0, #0]
 800438e:	8042      	strh	r2, [r0, #2]
 8004390:	8082      	strh	r2, [r0, #4]
 8004392:	80c2      	strh	r2, [r0, #6]

    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8004394:	4770      	bx	lr

08004396 <_ZN8touchgfx8TextArea8setAlphaEh>:
    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8004396:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
    }
 800439a:	4770      	bx	lr

0800439c <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800439c:	b570      	push	{r4, r5, r6, lr}
    {
        setX(x);
 800439e:	6803      	ldr	r3, [r0, #0]
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80043a0:	4604      	mov	r4, r0
        setX(x);
 80043a2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 80043a4:	4615      	mov	r5, r2
        setX(x);
 80043a6:	4798      	blx	r3
        setBaselineY(baselineY);
 80043a8:	6823      	ldr	r3, [r4, #0]
 80043aa:	4629      	mov	r1, r5
 80043ac:	4620      	mov	r0, r4
 80043ae:	6e5b      	ldr	r3, [r3, #100]	; 0x64
    }
 80043b0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setBaselineY(baselineY);
 80043b4:	4718      	bx	r3

080043b6 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
    {
        return 0;
    }
 80043b6:	2000      	movs	r0, #0
 80043b8:	4770      	bx	lr

080043ba <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:
    }

    virtual const Unicode::UnicodeChar* getWildcard1() const
    {
        return wc1;
    }
 80043ba:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80043bc:	4770      	bx	lr

080043be <_ZN28GetTemperatureScreenViewBaseD1Ev>:
}

GetTemperatureScreenViewBase::~GetTemperatureScreenViewBase()
{

}
 80043be:	4770      	bx	lr

080043c0 <_ZN28GetTemperatureScreenViewBase11setupScreenEv>:

void GetTemperatureScreenViewBase::setupScreen()
{

}
 80043c0:	4770      	bx	lr

080043c2 <_ZN8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80043c2:	4770      	bx	lr

080043c4 <_ZN8touchgfx13ClickListenerINS_14ButtonWithIconEED1Ev>:
 * receives a click event.
 *
 * @tparam T specifies the type to extend with the ClickListener behavior.
 */
template <class T>
class ClickListener : public T
 80043c4:	4770      	bx	lr

080043c6 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 80043c6:	4770      	bx	lr

080043c8 <_ZN8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 80043c8:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 80043ca:	68c2      	ldr	r2, [r0, #12]
 80043cc:	6844      	ldr	r4, [r0, #4]
 80043ce:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 80043d0:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 80043d2:	eb04 0062 	add.w	r0, r4, r2, asr #1
 80043d6:	07d2      	lsls	r2, r2, #31
 80043d8:	bf48      	it	mi
 80043da:	5962      	ldrmi	r2, [r4, r5]
 80043dc:	689b      	ldr	r3, [r3, #8]
    }
 80043de:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 80043e0:	bf48      	it	mi
 80043e2:	58d3      	ldrmi	r3, [r2, r3]
 80043e4:	4718      	bx	r3

080043e6 <_ZNK8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 80043e6:	6843      	ldr	r3, [r0, #4]
 80043e8:	b12b      	cbz	r3, 80043f6 <_ZNK8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 80043ea:	6883      	ldr	r3, [r0, #8]
 80043ec:	b92b      	cbnz	r3, 80043fa <_ZNK8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 80043ee:	68c0      	ldr	r0, [r0, #12]
 80043f0:	f000 0001 	and.w	r0, r0, #1
 80043f4:	4770      	bx	lr
 80043f6:	4618      	mov	r0, r3
 80043f8:	4770      	bx	lr
 80043fa:	2001      	movs	r0, #1
    }
 80043fc:	4770      	bx	lr

080043fe <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 80043fe:	b510      	push	{r4, lr}
 8004400:	214c      	movs	r1, #76	; 0x4c
 8004402:	4604      	mov	r4, r0
 8004404:	f01d fdc9 	bl	8021f9a <_ZdlPvj>
 8004408:	4620      	mov	r0, r4
 800440a:	bd10      	pop	{r4, pc}

0800440c <_ZN8touchgfx13ClickListenerINS_14ButtonWithIconEED0Ev>:
 800440c:	b510      	push	{r4, lr}
 800440e:	2140      	movs	r1, #64	; 0x40
 8004410:	4604      	mov	r4, r0
 8004412:	f01d fdc2 	bl	8021f9a <_ZdlPvj>
 8004416:	4620      	mov	r0, r4
 8004418:	bd10      	pop	{r4, pc}

0800441a <_ZN8touchgfx8CallbackI28GetTemperatureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800441a:	b510      	push	{r4, lr}
 800441c:	2110      	movs	r1, #16
 800441e:	4604      	mov	r4, r0
 8004420:	f01d fdbb 	bl	8021f9a <_ZdlPvj>
 8004424:	4620      	mov	r0, r4
 8004426:	bd10      	pop	{r4, pc}

08004428 <_ZN28GetTemperatureScreenViewBaseD0Ev>:
GetTemperatureScreenViewBase::~GetTemperatureScreenViewBase()
 8004428:	b510      	push	{r4, lr}
}
 800442a:	f44f 71ea 	mov.w	r1, #468	; 0x1d4
GetTemperatureScreenViewBase::~GetTemperatureScreenViewBase()
 800442e:	4604      	mov	r4, r0
}
 8004430:	f01d fdb3 	bl	8021f9a <_ZdlPvj>
 8004434:	4620      	mov	r0, r4
 8004436:	bd10      	pop	{r4, pc}

08004438 <_ZNK8touchgfx6Button17invalidateContentEv>:
    Bitmap getCurrentlyDisplayedBitmap() const
    {
        return (pressed ? down : up);
    }

    virtual void invalidateContent() const
 8004438:	b508      	push	{r3, lr}
    {
        if (alpha > 0)
 800443a:	f890 3032 	ldrb.w	r3, [r0, #50]	; 0x32
 800443e:	b10b      	cbz	r3, 8004444 <_ZNK8touchgfx6Button17invalidateContentEv+0xc>
        {
            Widget::invalidateContent();
 8004440:	f7fd fc9a 	bl	8001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>
        }
    }
 8004444:	bd08      	pop	{r3, pc}

08004446 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:
    virtual void invalidateContent() const
 8004446:	b508      	push	{r3, lr}
        Widget::invalidateContent();
 8004448:	f7fd fc96 	bl	8001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800444c:	bd08      	pop	{r3, pc}

0800444e <_ZN8touchgfx14AbstractButton13executeActionEv>:
    virtual void executeAction()
 800444e:	b510      	push	{r4, lr}
 8004450:	4604      	mov	r4, r0
        if (action && action->isValid())
 8004452:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8004454:	b150      	cbz	r0, 800446c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8004456:	6803      	ldr	r3, [r0, #0]
 8004458:	68db      	ldr	r3, [r3, #12]
 800445a:	4798      	blx	r3
 800445c:	b130      	cbz	r0, 800446c <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
            action->execute(*this);
 800445e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8004460:	6803      	ldr	r3, [r0, #0]
 8004462:	4621      	mov	r1, r4
 8004464:	689b      	ldr	r3, [r3, #8]
    }
 8004466:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
            action->execute(*this);
 800446a:	4718      	bx	r3
    }
 800446c:	bd10      	pop	{r4, pc}

0800446e <_ZN8touchgfx13ClickListenerINS_14ButtonWithIconEE16handleClickEventERKNS_10ClickEventE>:
     * Ensures that the clickEvent is propagated to the super class T and to the clickAction
     * listener.
     *
     * @param  event Information about the click.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800446e:	b570      	push	{r4, r5, r6, lr}
 8004470:	4604      	mov	r4, r0
 8004472:	460d      	mov	r5, r1
    {
        T::handleClickEvent(event);
 8004474:	f009 fbd4 	bl	800dc20 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>
        if (clickAction && clickAction->isValid())
 8004478:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800447a:	b158      	cbz	r0, 8004494 <_ZN8touchgfx13ClickListenerINS_14ButtonWithIconEE16handleClickEventERKNS_10ClickEventE+0x26>
 800447c:	6803      	ldr	r3, [r0, #0]
 800447e:	68db      	ldr	r3, [r3, #12]
 8004480:	4798      	blx	r3
 8004482:	b138      	cbz	r0, 8004494 <_ZN8touchgfx13ClickListenerINS_14ButtonWithIconEE16handleClickEventERKNS_10ClickEventE+0x26>
        {
            clickAction->execute(*this, event);
 8004484:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8004486:	6803      	ldr	r3, [r0, #0]
 8004488:	462a      	mov	r2, r5
 800448a:	4621      	mov	r1, r4
 800448c:	689b      	ldr	r3, [r3, #8]
        }
    }
 800448e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            clickAction->execute(*this, event);
 8004492:	4718      	bx	r3
    }
 8004494:	bd70      	pop	{r4, r5, r6, pc}
	...

08004498 <_ZN8touchgfx8TextArea12setBaselineYEs>:
        setY(baselineY - getTypedText().getFont()->getBaseline());
 8004498:	6803      	ldr	r3, [r0, #0]
    virtual void setBaselineY(int16_t baselineY)
 800449a:	b570      	push	{r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800449c:	6b5e      	ldr	r6, [r3, #52]	; 0x34
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800449e:	4b12      	ldr	r3, [pc, #72]	; (80044e8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x50>)
 80044a0:	681b      	ldr	r3, [r3, #0]
    virtual void setBaselineY(int16_t baselineY)
 80044a2:	4604      	mov	r4, r0
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80044a4:	b28d      	uxth	r5, r1
 80044a6:	b92b      	cbnz	r3, 80044b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x1c>
 80044a8:	4b10      	ldr	r3, [pc, #64]	; (80044ec <_ZN8touchgfx8TextArea12setBaselineYEs+0x54>)
 80044aa:	4a11      	ldr	r2, [pc, #68]	; (80044f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80044ac:	216c      	movs	r1, #108	; 0x6c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044ae:	4811      	ldr	r0, [pc, #68]	; (80044f4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>)
 80044b0:	f01e fb86 	bl	8022bc0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80044b4:	4910      	ldr	r1, [pc, #64]	; (80044f8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x60>)
 80044b6:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80044b8:	8809      	ldrh	r1, [r1, #0]
 80044ba:	4291      	cmp	r1, r2
 80044bc:	d803      	bhi.n	80044c6 <_ZN8touchgfx8TextArea12setBaselineYEs+0x2e>
 80044be:	4b0f      	ldr	r3, [pc, #60]	; (80044fc <_ZN8touchgfx8TextArea12setBaselineYEs+0x64>)
 80044c0:	4a0b      	ldr	r2, [pc, #44]	; (80044f0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x58>)
 80044c2:	216d      	movs	r1, #109	; 0x6d
 80044c4:	e7f3      	b.n	80044ae <_ZN8touchgfx8TextArea12setBaselineYEs+0x16>
        return fonts[typedTexts[typedTextId].fontIdx];
 80044c6:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 80044ca:	4b0d      	ldr	r3, [pc, #52]	; (8004500 <_ZN8touchgfx8TextArea12setBaselineYEs+0x68>)
 80044cc:	681b      	ldr	r3, [r3, #0]
 80044ce:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80044d2:	6803      	ldr	r3, [r0, #0]
 80044d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044d6:	4798      	blx	r3
 80044d8:	1a28      	subs	r0, r5, r0
 80044da:	b201      	sxth	r1, r0
 80044dc:	4633      	mov	r3, r6
 80044de:	4620      	mov	r0, r4
    }
 80044e0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(baselineY - getTypedText().getFont()->getBaseline());
 80044e4:	4718      	bx	r3
 80044e6:	bf00      	nop
 80044e8:	200137b0 	.word	0x200137b0
 80044ec:	08029200 	.word	0x08029200
 80044f0:	08029242 	.word	0x08029242
 80044f4:	0802927d 	.word	0x0802927d
 80044f8:	200137b4 	.word	0x200137b4
 80044fc:	080292c4 	.word	0x080292c4
 8004500:	200137b8 	.word	0x200137b8

08004504 <_ZN28GetTemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void GetTemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004504:	b538      	push	{r3, r4, r5, lr}
    if (&src == &bLeftSlide)
 8004506:	f100 03d4 	add.w	r3, r0, #212	; 0xd4
 800450a:	4299      	cmp	r1, r3
{
 800450c:	4604      	mov	r4, r0
 800450e:	460d      	mov	r5, r1
    if (&src == &bLeftSlide)
 8004510:	d103      	bne.n	800451a <_ZN28GetTemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~GetTemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004512:	f00d f9f9 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //slideLeftToTemperatureScreen
        //When bLeftSlide clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards West
        application().gotoTemperatureScreenScreenSlideTransitionWest();
 8004516:	f7ff f953 	bl	80037c0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionWestEv>
    }
    if (&src == &bRightSlide)
 800451a:	3498      	adds	r4, #152	; 0x98
 800451c:	42a5      	cmp	r5, r4
 800451e:	d105      	bne.n	800452c <_ZN28GetTemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8004520:	f00d f9f2 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
        //slideRightToLedCommandScreen
        //When bRightSlide clicked change screen to LedCommandScreen
        //Go to LedCommandScreen with screen transition towards East
        application().gotoLedCommandScreenScreenSlideTransitionEast();
    }
}
 8004524:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoLedCommandScreenScreenSlideTransitionEast();
 8004528:	f7ff b99a 	b.w	8003860 <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionEastEv>
}
 800452c:	bd38      	pop	{r3, r4, r5, pc}

0800452e <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800452e:	2200      	movs	r2, #0
 8004530:	f04f 31ff 	mov.w	r1, #4294967295
 8004534:	e9c0 2100 	strd	r2, r1, [r0]
              text(0)
 8004538:	6082      	str	r2, [r0, #8]
    }
 800453a:	4770      	bx	lr

0800453c <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 800453c:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 800453e:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8004540:	4604      	mov	r4, r0
        setX(x);
 8004542:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8004544:	4615      	mov	r5, r2
        setX(x);
 8004546:	4798      	blx	r3
        setY(y);
 8004548:	6823      	ldr	r3, [r4, #0]
 800454a:	4629      	mov	r1, r5
 800454c:	4620      	mov	r0, r4
 800454e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8004550:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8004554:	4718      	bx	r3
	...

08004558 <_ZN28GetTemperatureScreenViewBaseC1Ev>:
GetTemperatureScreenViewBase::GetTemperatureScreenViewBase() :
 8004558:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800455c:	ed2d 8b02 	vpush	{d8}
 8004560:	4604      	mov	r4, r0
 8004562:	b08f      	sub	sp, #60	; 0x3c
    buttonCallback(this, &GetTemperatureScreenViewBase::buttonCallbackHandler)
 8004564:	46a3      	mov	fp, r4
        : presenter(0)
 8004566:	2500      	movs	r5, #0
 8004568:	f00e fdd6 	bl	8013118 <_ZN8touchgfx6ScreenC1Ev>
 800456c:	4ba5      	ldr	r3, [pc, #660]	; (8004804 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2ac>)
 800456e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004570:	f84b 3b40 	str.w	r3, [fp], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8004574:	4ba4      	ldr	r3, [pc, #656]	; (8004808 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2b0>)
          visible(true)
 8004576:	6625      	str	r5, [r4, #96]	; 0x60
 8004578:	22ff      	movs	r2, #255	; 0xff
 800457a:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 800457e:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8004582:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004586:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
 800458a:	a90c      	add	r1, sp, #48	; 0x30
 800458c:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8004590:	f104 0a98 	add.w	sl, r4, #152	; 0x98
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8004594:	f64f 76ff 	movw	r6, #65535	; 0xffff
 8004598:	4638      	mov	r0, r7
 800459a:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 800459e:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 80045a2:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
        : color(col)
 80045a6:	66a5      	str	r5, [r4, #104]	; 0x68
 80045a8:	f104 09d4 	add.w	r9, r4, #212	; 0xd4
 80045ac:	f8ad 6030 	strh.w	r6, [sp, #48]	; 0x30
 80045b0:	f009 fc64 	bl	800de7c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 80045b4:	4650      	mov	r0, sl
 80045b6:	f00a fd93 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80045ba:	4648      	mov	r0, r9
 80045bc:	f00a fd90 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 80045c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80045c4:	f8a4 3134 	strh.w	r3, [r4, #308]	; 0x134
        : typedTextId(id)
 80045c8:	4b90      	ldr	r3, [pc, #576]	; (800480c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2b4>)
 80045ca:	f8c4 3138 	str.w	r3, [r4, #312]	; 0x138
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80045ce:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80045d2:	f8c4 3144 	str.w	r3, [r4, #324]	; 0x144
        : TextAreaWithWildcardBase(), wc1(0)
 80045d6:	4b8e      	ldr	r3, [pc, #568]	; (8004810 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2b8>)
 80045d8:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80045dc:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80045e0:	e9c4 3554 	strd	r3, r5, [r4, #336]	; 0x150
 80045e4:	f504 73ae 	add.w	r3, r4, #348	; 0x15c
 80045e8:	f8a4 613c 	strh.w	r6, [r4, #316]	; 0x13c
        : T(), clickAction(0)
 80045ec:	4618      	mov	r0, r3
        : x(0), y(0), width(0), height(0)
 80045ee:	e9c4 5545 	strd	r5, r5, [r4, #276]	; 0x114
 80045f2:	e9c4 5547 	strd	r5, r5, [r4, #284]	; 0x11c
 80045f6:	e9c4 5549 	strd	r5, r5, [r4, #292]	; 0x124
 80045fa:	e9c4 554b 	strd	r5, r5, [r4, #300]	; 0x12c
        : color(col)
 80045fe:	f8c4 5140 	str.w	r5, [r4, #320]	; 0x140
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004602:	f8a4 5148 	strh.w	r5, [r4, #328]	; 0x148
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004606:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800460a:	f8c4 5158 	str.w	r5, [r4, #344]	; 0x158
 800460e:	ee08 3a10 	vmov	s16, r3
 8004612:	f00a fd65 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004616:	4b7f      	ldr	r3, [pc, #508]	; (8004814 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2bc>)
 8004618:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
        touchable = touch;
 800461c:	f04f 0301 	mov.w	r3, #1
 8004620:	f884 3180 	strb.w	r3, [r4, #384]	; 0x180
        : pobject(pObject), pmemfun(pmemfun_1)
 8004624:	4b7c      	ldr	r3, [pc, #496]	; (8004818 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2c0>)
 8004626:	f8c4 5198 	str.w	r5, [r4, #408]	; 0x198
 800462a:	e9c4 3471 	strd	r3, r4, [r4, #452]	; 0x1c4
 800462e:	4b7b      	ldr	r3, [pc, #492]	; (800481c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2c4>)
 8004630:	e9c4 3573 	strd	r3, r5, [r4, #460]	; 0x1cc
    __background.setPosition(0, 0, 240, 320);
 8004634:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004638:	462a      	mov	r2, r5
 800463a:	4658      	mov	r0, fp
 800463c:	9300      	str	r3, [sp, #0]
 800463e:	4629      	mov	r1, r5
 8004640:	23f0      	movs	r3, #240	; 0xf0
 8004642:	f7ff f851 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8004646:	1d26      	adds	r6, r4, #4
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8004648:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800464c:	66a3      	str	r3, [r4, #104]	; 0x68
 800464e:	4659      	mov	r1, fp
 8004650:	4630      	mov	r0, r6
 8004652:	f007 fa21 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
 8004656:	4638      	mov	r0, r7
 8004658:	a90c      	add	r1, sp, #48	; 0x30
 800465a:	f8ad 5030 	strh.w	r5, [sp, #48]	; 0x30
 800465e:	f00a fd66 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BackgroudImage.setPosition(0, 0, 240, 320);
 8004662:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8004666:	462a      	mov	r2, r5
 8004668:	4638      	mov	r0, r7
 800466a:	9300      	str	r3, [sp, #0]
 800466c:	4629      	mov	r1, r5
 800466e:	23f0      	movs	r3, #240	; 0xf0
 8004670:	f7ff f83a 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004674:	4638      	mov	r0, r7
 8004676:	4629      	mov	r1, r5
 8004678:	f009 fbc7 	bl	800de0a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800467c:	4639      	mov	r1, r7
 800467e:	4630      	mov	r0, r6
 8004680:	f007 fa0a 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bRightSlide.setXY(140, 284);
 8004684:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8004688:	218c      	movs	r1, #140	; 0x8c
 800468a:	4650      	mov	r0, sl
 800468c:	f7ff ff56 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8004690:	f04f 0301 	mov.w	r3, #1
 8004694:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004698:	230c      	movs	r3, #12
 800469a:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 800469e:	a90b      	add	r1, sp, #44	; 0x2c
 80046a0:	ab0c      	add	r3, sp, #48	; 0x30
 80046a2:	f04f 0202 	mov.w	r2, #2
 80046a6:	9300      	str	r3, [sp, #0]
 80046a8:	460b      	mov	r3, r1
 80046aa:	a90a      	add	r1, sp, #40	; 0x28
 80046ac:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80046b0:	f04f 0b0a 	mov.w	fp, #10
 80046b4:	460a      	mov	r2, r1
 80046b6:	4650      	mov	r0, sl
 80046b8:	a909      	add	r1, sp, #36	; 0x24
        iconX = x;
 80046ba:	4f59      	ldr	r7, [pc, #356]	; (8004820 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2c8>)
 80046bc:	f8ad b030 	strh.w	fp, [sp, #48]	; 0x30
 80046c0:	f00a fc78 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    bRightSlide.setAction(buttonCallback);
 80046c4:	f504 71e2 	add.w	r1, r4, #452	; 0x1c4
 80046c8:	f8c4 70d0 	str.w	r7, [r4, #208]	; 0xd0
 80046cc:	9103      	str	r1, [sp, #12]
        action = &callback;
 80046ce:	f8c4 10c0 	str.w	r1, [r4, #192]	; 0xc0
 80046d2:	4630      	mov	r0, r6
 80046d4:	4651      	mov	r1, sl
 80046d6:	f007 f9df 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bLeftSlide.setXY(0, 284);
 80046da:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80046de:	4629      	mov	r1, r5
 80046e0:	4648      	mov	r0, r9
 80046e2:	f7ff ff2b 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 80046e6:	f04f 0301 	mov.w	r3, #1
 80046ea:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80046ee:	230b      	movs	r3, #11
 80046f0:	f04f 0202 	mov.w	r2, #2
 80046f4:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 80046f8:	ab0c      	add	r3, sp, #48	; 0x30
 80046fa:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80046fe:	9300      	str	r3, [sp, #0]
 8004700:	aa0a      	add	r2, sp, #40	; 0x28
 8004702:	ab0b      	add	r3, sp, #44	; 0x2c
 8004704:	a909      	add	r1, sp, #36	; 0x24
 8004706:	4648      	mov	r0, r9
 8004708:	f8ad b030 	strh.w	fp, [sp, #48]	; 0x30
 800470c:	f00a fc52 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004710:	9b03      	ldr	r3, [sp, #12]
 8004712:	f8c4 710c 	str.w	r7, [r4, #268]	; 0x10c
 8004716:	f8c4 30fc 	str.w	r3, [r4, #252]	; 0xfc
 800471a:	4649      	mov	r1, r9
 800471c:	4630      	mov	r0, r6
 800471e:	f007 f9bb 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    buttonCallback(this, &GetTemperatureScreenViewBase::buttonCallbackHandler)
 8004722:	f504 7888 	add.w	r8, r4, #272	; 0x110
    L_temperature.setPosition(0, 50, 240, 110);
 8004726:	236e      	movs	r3, #110	; 0x6e
 8004728:	2232      	movs	r2, #50	; 0x32
 800472a:	9300      	str	r3, [sp, #0]
 800472c:	4629      	mov	r1, r5
 800472e:	23f0      	movs	r3, #240	; 0xf0
 8004730:	4640      	mov	r0, r8
 8004732:	f7fe ffd9 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8004736:	4b3b      	ldr	r3, [pc, #236]	; (8004824 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2cc>)
 8004738:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        boundingArea = calculateBoundingArea();
 800473c:	f8d4 3110 	ldr.w	r3, [r4, #272]	; 0x110
        linespace = space;
 8004740:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
        boundingArea = calculateBoundingArea();
 8004744:	af04      	add	r7, sp, #16
 8004746:	4638      	mov	r0, r7
 8004748:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800474c:	4641      	mov	r1, r8
 800474e:	4798      	blx	r3
 8004750:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004754:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
 8004758:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800475c:	4b32      	ldr	r3, [pc, #200]	; (8004828 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2d0>)
 800475e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(L_temperatureBuffer, L_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AQBC).getText());
 8004760:	f504 77ce 	add.w	r7, r4, #412	; 0x19c
 8004764:	b92b      	cbnz	r3, 8004772 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x21a>
 8004766:	4b31      	ldr	r3, [pc, #196]	; (800482c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2d4>)
 8004768:	4a31      	ldr	r2, [pc, #196]	; (8004830 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2d8>)
 800476a:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800476c:	4831      	ldr	r0, [pc, #196]	; (8004834 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2dc>)
 800476e:	f01e fa27 	bl	8022bc0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 8004772:	4b31      	ldr	r3, [pc, #196]	; (8004838 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2e0>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 8004774:	881b      	ldrh	r3, [r3, #0]
 8004776:	2b04      	cmp	r3, #4
 8004778:	d803      	bhi.n	8004782 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x22a>
 800477a:	4b30      	ldr	r3, [pc, #192]	; (800483c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2e4>)
 800477c:	4a2c      	ldr	r2, [pc, #176]	; (8004830 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2d8>)
 800477e:	2161      	movs	r1, #97	; 0x61
 8004780:	e7f4      	b.n	800476c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x214>
        return texts->getText(typedTextId);
 8004782:	4b2f      	ldr	r3, [pc, #188]	; (8004840 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2e8>)
 8004784:	2104      	movs	r1, #4
 8004786:	6818      	ldr	r0, [r3, #0]
 8004788:	f000 fe90 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800478c:	4a2d      	ldr	r2, [pc, #180]	; (8004844 <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2ec>)
 800478e:	4603      	mov	r3, r0
 8004790:	2114      	movs	r1, #20
 8004792:	4638      	mov	r0, r7
 8004794:	f010 f9aa 	bl	8014aec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8004798:	4b1c      	ldr	r3, [pc, #112]	; (800480c <_ZN28GetTemperatureScreenViewBaseC1Ev+0x2b4>)
        wc1 = value;
 800479a:	f8c4 7158 	str.w	r7, [r4, #344]	; 0x158
    L_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ITY));
 800479e:	a90c      	add	r1, sp, #48	; 0x30
 80047a0:	2703      	movs	r7, #3
 80047a2:	4640      	mov	r0, r8
 80047a4:	930c      	str	r3, [sp, #48]	; 0x30
 80047a6:	f8ad 7034 	strh.w	r7, [sp, #52]	; 0x34
 80047aa:	f00a f8d5 	bl	800e958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 80047ae:	4641      	mov	r1, r8
 80047b0:	4630      	mov	r0, r6
 80047b2:	f007 f971 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    B_refreshTemperature.setXY(0, 217);
 80047b6:	ee18 0a10 	vmov	r0, s16
 80047ba:	4629      	mov	r1, r5
 80047bc:	22d9      	movs	r2, #217	; 0xd9
 80047be:	f7ff febd 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 80047c2:	2304      	movs	r3, #4
 80047c4:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80047c8:	230d      	movs	r3, #13
 80047ca:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80047ce:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
    B_refreshTemperature.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_REFRESH_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_REFRESH_50_50_E8F6FB_SVG_ID));
 80047d2:	ab0c      	add	r3, sp, #48	; 0x30
 80047d4:	ee18 0a10 	vmov	r0, s16
 80047d8:	9300      	str	r3, [sp, #0]
 80047da:	aa0a      	add	r2, sp, #40	; 0x28
 80047dc:	ab0b      	add	r3, sp, #44	; 0x2c
 80047de:	a909      	add	r1, sp, #36	; 0x24
 80047e0:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 80047e4:	f00a fbe6 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80047e8:	2361      	movs	r3, #97	; 0x61
 80047ea:	4630      	mov	r0, r6
 80047ec:	ee18 1a10 	vmov	r1, s16
 80047f0:	f8c4 3194 	str.w	r3, [r4, #404]	; 0x194
 80047f4:	f007 f950 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80047f8:	4620      	mov	r0, r4
 80047fa:	b00f      	add	sp, #60	; 0x3c
 80047fc:	ecbd 8b02 	vpop	{d8}
 8004800:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004804:	08029468 	.word	0x08029468
 8004808:	0802a288 	.word	0x0802a288
 800480c:	08028554 	.word	0x08028554
 8004810:	08029348 	.word	0x08029348
 8004814:	080293d8 	.word	0x080293d8
 8004818:	08029450 	.word	0x08029450
 800481c:	08004505 	.word	0x08004505
 8004820:	fff90019 	.word	0xfff90019
 8004824:	ff0044ff 	.word	0xff0044ff
 8004828:	200137b0 	.word	0x200137b0
 800482c:	08029200 	.word	0x08029200
 8004830:	08029302 	.word	0x08029302
 8004834:	0802927d 	.word	0x0802927d
 8004838:	200137b4 	.word	0x200137b4
 800483c:	080292c4 	.word	0x080292c4
 8004840:	200137bc 	.word	0x200137bc
 8004844:	0802933a 	.word	0x0802933a

08004848 <_ZN24LedCommandScreenViewBase16vTBLedCmdClickedEv>:
     * Virtual Action Handlers
     */
    virtual void vTBLedCmdClicked()
    {
        // Override and implement this function in LedCommandScreen
    }
 8004848:	4770      	bx	lr

0800484a <_ZN24LedCommandScreenViewBaseD1Ev>:
}

LedCommandScreenViewBase::~LedCommandScreenViewBase()
{

}
 800484a:	4770      	bx	lr

0800484c <_ZN24LedCommandScreenViewBase11setupScreenEv>:

void LedCommandScreenViewBase::setupScreen()
{

}
 800484c:	4770      	bx	lr

0800484e <_ZN8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800484e:	4770      	bx	lr

08004850 <_ZN8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004850:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004852:	68c2      	ldr	r2, [r0, #12]
 8004854:	6844      	ldr	r4, [r0, #4]
 8004856:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004858:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800485a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 800485e:	07d2      	lsls	r2, r2, #31
 8004860:	bf48      	it	mi
 8004862:	5962      	ldrmi	r2, [r4, r5]
 8004864:	689b      	ldr	r3, [r3, #8]
    }
 8004866:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004868:	bf48      	it	mi
 800486a:	58d3      	ldrmi	r3, [r2, r3]
 800486c:	4718      	bx	r3

0800486e <_ZNK8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 800486e:	6843      	ldr	r3, [r0, #4]
 8004870:	b12b      	cbz	r3, 800487e <_ZNK8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004872:	6883      	ldr	r3, [r0, #8]
 8004874:	b92b      	cbnz	r3, 8004882 <_ZNK8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004876:	68c0      	ldr	r0, [r0, #12]
 8004878:	f000 0001 	and.w	r0, r0, #1
 800487c:	4770      	bx	lr
 800487e:	4618      	mov	r0, r3
 8004880:	4770      	bx	lr
 8004882:	2001      	movs	r0, #1
    }
 8004884:	4770      	bx	lr

08004886 <_ZN8touchgfx8CallbackI24LedCommandScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004886:	b510      	push	{r4, lr}
 8004888:	2110      	movs	r1, #16
 800488a:	4604      	mov	r4, r0
 800488c:	f01d fb85 	bl	8021f9a <_ZdlPvj>
 8004890:	4620      	mov	r0, r4
 8004892:	bd10      	pop	{r4, pc}

08004894 <_ZN24LedCommandScreenViewBaseD0Ev>:
LedCommandScreenViewBase::~LedCommandScreenViewBase()
 8004894:	b510      	push	{r4, lr}
}
 8004896:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
LedCommandScreenViewBase::~LedCommandScreenViewBase()
 800489a:	4604      	mov	r4, r0
}
 800489c:	f01d fb7d 	bl	8021f9a <_ZdlPvj>
 80048a0:	4620      	mov	r0, r4
 80048a2:	bd10      	pop	{r4, pc}

080048a4 <_ZN24LedCommandScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void LedCommandScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bLeftSlide)
 80048a4:	f100 0398 	add.w	r3, r0, #152	; 0x98
 80048a8:	4299      	cmp	r1, r3
{
 80048aa:	b570      	push	{r4, r5, r6, lr}
 80048ac:	4604      	mov	r4, r0
 80048ae:	460d      	mov	r5, r1
    if (&src == &bLeftSlide)
 80048b0:	d103      	bne.n	80048ba <_ZN24LedCommandScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80048b2:	f00d f829 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //slideLeftToGetTemperatureScreen
        //When bLeftSlide clicked change screen to GetTemperatureScreen
        //Go to GetTemperatureScreen with screen transition towards West
        application().gotoGetTemperatureScreenScreenSlideTransitionWest();
 80048b6:	f7fe ffb3 	bl	8003820 <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionWestEv>
    }
    if (&src == &bRightSlide)
 80048ba:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 80048be:	429d      	cmp	r5, r3
 80048c0:	d103      	bne.n	80048ca <_ZN24LedCommandScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
 80048c2:	f00d f821 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //slideRightToTemperatureScreen
        //When bRightSlide clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards East
        application().gotoTemperatureScreenScreenSlideTransitionEast();
 80048c6:	f7fe ff8b 	bl	80037e0 <_ZN23FrontendApplicationBase46gotoTemperatureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &tbCmdLed)
 80048ca:	f504 7388 	add.w	r3, r4, #272	; 0x110
 80048ce:	429d      	cmp	r5, r3
 80048d0:	d105      	bne.n	80048de <_ZN24LedCommandScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //TBLedCommanderClickHandler
        //When tbCmdLed clicked call virtual function
        //Call vTBLedCmdClicked
        vTBLedCmdClicked();
 80048d2:	6823      	ldr	r3, [r4, #0]
 80048d4:	4620      	mov	r0, r4
 80048d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    }
}
 80048d8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        vTBLedCmdClicked();
 80048dc:	4718      	bx	r3
}
 80048de:	bd70      	pop	{r4, r5, r6, pc}

080048e0 <_ZN8touchgfx6WidgetC1Ev>:
        : x(0), y(0), width(0), height(0)
 80048e0:	2200      	movs	r2, #0
 80048e2:	e9c0 2201 	strd	r2, r2, [r0, #4]
 80048e6:	e9c0 2203 	strd	r2, r2, [r0, #12]
          visible(true)
 80048ea:	e9c0 2205 	strd	r2, r2, [r0, #20]
 80048ee:	e9c0 2207 	strd	r2, r2, [r0, #28]
 80048f2:	f44f 7280 	mov.w	r2, #256	; 0x100
 80048f6:	8482      	strh	r2, [r0, #36]	; 0x24
class Widget : public Drawable
 80048f8:	4a01      	ldr	r2, [pc, #4]	; (8004900 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 80048fa:	6002      	str	r2, [r0, #0]
 80048fc:	4770      	bx	lr
 80048fe:	bf00      	nop
 8004900:	0802949c 	.word	0x0802949c

08004904 <_ZN24LedCommandScreenViewBaseC1Ev>:
LedCommandScreenViewBase::LedCommandScreenViewBase() :
 8004904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004908:	ed2d 8b02 	vpush	{d8}
 800490c:	4604      	mov	r4, r0
 800490e:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &LedCommandScreenViewBase::buttonCallbackHandler)
 8004910:	46a1      	mov	r9, r4
 8004912:	2500      	movs	r5, #0
 8004914:	f00e fc00 	bl	8013118 <_ZN8touchgfx6ScreenC1Ev>
 8004918:	4b94      	ldr	r3, [pc, #592]	; (8004b6c <_ZN24LedCommandScreenViewBaseC1Ev+0x268>)
 800491a:	63e5      	str	r5, [r4, #60]	; 0x3c
 800491c:	f849 3b40 	str.w	r3, [r9], #64
        : Widget(), alpha(255), color(0)
 8004920:	2226      	movs	r2, #38	; 0x26
 8004922:	4629      	mov	r1, r5
 8004924:	4648      	mov	r0, r9
 8004926:	f01e f9d7 	bl	8022cd8 <memset>
 800492a:	4648      	mov	r0, r9
 800492c:	f7ff ffd8 	bl	80048e0 <_ZN8touchgfx6WidgetC1Ev>
 8004930:	4b8f      	ldr	r3, [pc, #572]	; (8004b70 <_ZN24LedCommandScreenViewBaseC1Ev+0x26c>)
 8004932:	6423      	str	r3, [r4, #64]	; 0x40
 8004934:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004938:	23ff      	movs	r3, #255	; 0xff
 800493a:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800493e:	a90a      	add	r1, sp, #40	; 0x28
 8004940:	f104 0b98 	add.w	fp, r4, #152	; 0x98
 8004944:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
        : color(col)
 8004948:	66a5      	str	r5, [r4, #104]	; 0x68
 800494a:	4650      	mov	r0, sl
 800494c:	f8ad 6028 	strh.w	r6, [sp, #40]	; 0x28
 8004950:	f009 fa94 	bl	800de7c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004954:	4658      	mov	r0, fp
 8004956:	f00a fbc3 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 800495a:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 800495e:	f504 7888 	add.w	r8, r4, #272	; 0x110
 8004962:	4618      	mov	r0, r3
 8004964:	ee08 3a10 	vmov	s16, r3
 8004968:	f00a fbba 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
        : Widget(), action(), pressed(false)
 800496c:	4629      	mov	r1, r5
 800496e:	2226      	movs	r2, #38	; 0x26
 8004970:	4640      	mov	r0, r8
 8004972:	f01e f9b1 	bl	8022cd8 <memset>
 8004976:	4640      	mov	r0, r8
 8004978:	f7ff ffb2 	bl	80048e0 <_ZN8touchgfx6WidgetC1Ev>
        touchable = touch;
 800497c:	f04f 0301 	mov.w	r3, #1
 8004980:	f504 77a4 	add.w	r7, r4, #328	; 0x148
 8004984:	f884 3134 	strb.w	r3, [r4, #308]	; 0x134
 * A ToggleButton is a Button specialization that swaps the two bitmaps when clicked, such that
 * the previous "pressed" bitmap, now becomes the one displayed when button is not
 * pressed. This can by used to give the effect of a button that can be pressed in and
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
 8004988:	4b7a      	ldr	r3, [pc, #488]	; (8004b74 <_ZN24LedCommandScreenViewBaseC1Ev+0x270>)
 800498a:	f8c4 3110 	str.w	r3, [r4, #272]	; 0x110
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800498e:	4629      	mov	r1, r5
 8004990:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 8004994:	f884 513c 	strb.w	r5, [r4, #316]	; 0x13c
 8004998:	f8a4 613e 	strh.w	r6, [r4, #318]	; 0x13e
 800499c:	f8a4 6140 	strh.w	r6, [r4, #320]	; 0x140
        : AbstractButton(), up(), down(), alpha(255)
 80049a0:	f884 6142 	strb.w	r6, [r4, #322]	; 0x142
 80049a4:	f8a4 6144 	strh.w	r6, [r4, #324]	; 0x144
 80049a8:	2226      	movs	r2, #38	; 0x26
 80049aa:	4638      	mov	r0, r7
 80049ac:	f01e f994 	bl	8022cd8 <memset>
 80049b0:	4638      	mov	r0, r7
 80049b2:	f7ff ff95 	bl	80048e0 <_ZN8touchgfx6WidgetC1Ev>
 80049b6:	4b70      	ldr	r3, [pc, #448]	; (8004b78 <_ZN24LedCommandScreenViewBaseC1Ev+0x274>)
 80049b8:	f8c4 3148 	str.w	r3, [r4, #328]	; 0x148
 80049bc:	4b6f      	ldr	r3, [pc, #444]	; (8004b7c <_ZN24LedCommandScreenViewBaseC1Ev+0x278>)
 80049be:	f8c4 3170 	str.w	r3, [r4, #368]	; 0x170
 80049c2:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 80049c6:	f8c4 317c 	str.w	r3, [r4, #380]	; 0x17c
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80049ca:	f04f 33ff 	mov.w	r3, #4294967295
              text(0)
 80049ce:	e9c4 3562 	strd	r3, r5, [r4, #392]	; 0x188
        : pobject(pObject), pmemfun(pmemfun_1)
 80049d2:	4b6b      	ldr	r3, [pc, #428]	; (8004b80 <_ZN24LedCommandScreenViewBaseC1Ev+0x27c>)
 80049d4:	f8a4 6174 	strh.w	r6, [r4, #372]	; 0x174
 80049d8:	e9c4 3464 	strd	r3, r4, [r4, #400]	; 0x190
 80049dc:	4b69      	ldr	r3, [pc, #420]	; (8004b84 <_ZN24LedCommandScreenViewBaseC1Ev+0x280>)
        : color(col)
 80049de:	f8c4 5178 	str.w	r5, [r4, #376]	; 0x178
    __background.setPosition(0, 0, 240, 320);
 80049e2:	f44f 72a0 	mov.w	r2, #320	; 0x140
 80049e6:	e9c4 3566 	strd	r3, r5, [r4, #408]	; 0x198
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80049ea:	f8a4 5180 	strh.w	r5, [r4, #384]	; 0x180
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80049ee:	f8c4 5184 	str.w	r5, [r4, #388]	; 0x184
 80049f2:	9200      	str	r2, [sp, #0]
 80049f4:	4629      	mov	r1, r5
 80049f6:	462a      	mov	r2, r5
 80049f8:	4648      	mov	r0, r9
 80049fa:	23f0      	movs	r3, #240	; 0xf0
 80049fc:	f7fe fe74 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a00:	1d26      	adds	r6, r4, #4
        color = newColor;
 8004a02:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a06:	66a3      	str	r3, [r4, #104]	; 0x68
 8004a08:	4649      	mov	r1, r9
 8004a0a:	4630      	mov	r0, r6
 8004a0c:	f007 f844 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
 8004a10:	a90a      	add	r1, sp, #40	; 0x28
 8004a12:	4650      	mov	r0, sl
 8004a14:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8004a18:	f00a fb89 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BackgroudImage.setPosition(0, 0, 240, 320);
 8004a1c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8004a20:	23f0      	movs	r3, #240	; 0xf0
 8004a22:	9200      	str	r2, [sp, #0]
 8004a24:	4629      	mov	r1, r5
 8004a26:	462a      	mov	r2, r5
 8004a28:	4650      	mov	r0, sl
 8004a2a:	f7fe fe5d 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004a2e:	4629      	mov	r1, r5
 8004a30:	4650      	mov	r0, sl
 8004a32:	f009 f9ea 	bl	800de0a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004a36:	4651      	mov	r1, sl
 8004a38:	4630      	mov	r0, r6
 8004a3a:	f007 f82d 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bLeftSlide.setXY(0, 284);
 8004a3e:	4629      	mov	r1, r5
 8004a40:	4658      	mov	r0, fp
 8004a42:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8004a46:	f7ff fd79 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8004a4a:	f04f 0201 	mov.w	r2, #1
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 8004a4e:	f10d 0c24 	add.w	ip, sp, #36	; 0x24
 8004a52:	f8ad 201c 	strh.w	r2, [sp, #28]
 8004a56:	230b      	movs	r3, #11
 8004a58:	aa0a      	add	r2, sp, #40	; 0x28
 8004a5a:	f04f 000a 	mov.w	r0, #10
 8004a5e:	f04f 0a02 	mov.w	sl, #2
 8004a62:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004a66:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8004a6a:	4663      	mov	r3, ip
 8004a6c:	9200      	str	r2, [sp, #0]
 8004a6e:	a907      	add	r1, sp, #28
 8004a70:	aa08      	add	r2, sp, #32
 8004a72:	4658      	mov	r0, fp
    bLeftSlide.setAction(buttonCallback);
 8004a74:	f504 79c8 	add.w	r9, r4, #400	; 0x190
 8004a78:	f8ad a020 	strh.w	sl, [sp, #32]
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 8004a7c:	f00a fa9a 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004a80:	4a41      	ldr	r2, [pc, #260]	; (8004b88 <_ZN24LedCommandScreenViewBaseC1Ev+0x284>)
 8004a82:	f8c4 20d0 	str.w	r2, [r4, #208]	; 0xd0
 8004a86:	4659      	mov	r1, fp
 8004a88:	4630      	mov	r0, r6
        action = &callback;
 8004a8a:	f8c4 90c0 	str.w	r9, [r4, #192]	; 0xc0
 8004a8e:	f007 f803 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bRightSlide.setXY(140, 284);
 8004a92:	ee18 0a10 	vmov	r0, s16
 8004a96:	f44f 728e 	mov.w	r2, #284	; 0x11c
 8004a9a:	218c      	movs	r1, #140	; 0x8c
 8004a9c:	f7ff fd4e 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8004aa0:	f04f 0101 	mov.w	r1, #1
 8004aa4:	f8ad 101c 	strh.w	r1, [sp, #28]
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 8004aa8:	a90a      	add	r1, sp, #40	; 0x28
 8004aaa:	9100      	str	r1, [sp, #0]
 8004aac:	230c      	movs	r3, #12
 8004aae:	a909      	add	r1, sp, #36	; 0x24
 8004ab0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004ab4:	f04f 000a 	mov.w	r0, #10
 8004ab8:	460b      	mov	r3, r1
 8004aba:	a908      	add	r1, sp, #32
 8004abc:	f8ad 0028 	strh.w	r0, [sp, #40]	; 0x28
 8004ac0:	460a      	mov	r2, r1
 8004ac2:	ee18 0a10 	vmov	r0, s16
 8004ac6:	a907      	add	r1, sp, #28
 8004ac8:	f8ad a020 	strh.w	sl, [sp, #32]
 8004acc:	f00a fa72 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 8004ad0:	4a2d      	ldr	r2, [pc, #180]	; (8004b88 <_ZN24LedCommandScreenViewBaseC1Ev+0x284>)
 8004ad2:	f8c4 210c 	str.w	r2, [r4, #268]	; 0x10c
 8004ad6:	ee18 1a10 	vmov	r1, s16
 8004ada:	4630      	mov	r0, r6
 8004adc:	f8c4 90fc 	str.w	r9, [r4, #252]	; 0xfc
 8004ae0:	f006 ffda 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    tbCmdLed.setXY(35, 160);
 8004ae4:	4640      	mov	r0, r8
 8004ae6:	22a0      	movs	r2, #160	; 0xa0
 8004ae8:	2123      	movs	r1, #35	; 0x23
 8004aea:	f7ff fd27 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8004aee:	2309      	movs	r3, #9
 8004af0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 8004af4:	2308      	movs	r3, #8
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
    {
        originalPressed = bitmapPressed;
 8004af6:	f8a4 3144 	strh.w	r3, [r4, #324]	; 0x144
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 8004afa:	aa0a      	add	r2, sp, #40	; 0x28
 8004afc:	a909      	add	r1, sp, #36	; 0x24
 8004afe:	4640      	mov	r0, r8
 8004b00:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8004b04:	f00a f938 	bl	800ed78 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    tbCmdLed.forceState(true);
 8004b08:	4640      	mov	r0, r8
 8004b0a:	2101      	movs	r1, #1
 8004b0c:	f009 f8bf 	bl	800dc8e <_ZN8touchgfx12ToggleButton10forceStateEb>
 8004b10:	4641      	mov	r1, r8
 8004b12:	4630      	mov	r0, r6
 8004b14:	f8c4 9138 	str.w	r9, [r4, #312]	; 0x138
 8004b18:	f006 ffbe 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(22, 19);
 8004b1c:	2213      	movs	r2, #19
 8004b1e:	4638      	mov	r0, r7
 8004b20:	2116      	movs	r1, #22
 8004b22:	f7ff fd0b 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 8004b26:	4b19      	ldr	r3, [pc, #100]	; (8004b8c <_ZN24LedCommandScreenViewBaseC1Ev+0x288>)
        linespace = space;
 8004b28:	f8a4 517c 	strh.w	r5, [r4, #380]	; 0x17c
        boundingArea = calculateBoundingArea();
 8004b2c:	ad02      	add	r5, sp, #8
        color = newColor;
 8004b2e:	f8c4 3178 	str.w	r3, [r4, #376]	; 0x178
        boundingArea = calculateBoundingArea();
 8004b32:	4639      	mov	r1, r7
 8004b34:	4628      	mov	r0, r5
 8004b36:	f009 fc75 	bl	800e424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004b3a:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8004b3e:	f504 73c2 	add.w	r3, r4, #388	; 0x184
 8004b42:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8004b46:	4b0d      	ldr	r3, [pc, #52]	; (8004b7c <_ZN24LedCommandScreenViewBaseC1Ev+0x278>)
 8004b48:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RY0X));
 8004b4a:	a90a      	add	r1, sp, #40	; 0x28
 8004b4c:	4638      	mov	r0, r7
 8004b4e:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8004b52:	f009 ff01 	bl	800e958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004b56:	4630      	mov	r0, r6
 8004b58:	4639      	mov	r1, r7
 8004b5a:	f006 ff9d 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004b5e:	4620      	mov	r0, r4
 8004b60:	b00d      	add	sp, #52	; 0x34
 8004b62:	ecbd 8b02 	vpop	{d8}
 8004b66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b6a:	bf00      	nop
 8004b6c:	0802951c 	.word	0x0802951c
 8004b70:	0802a288 	.word	0x0802a288
 8004b74:	0802a0a0 	.word	0x0802a0a0
 8004b78:	0802a1f8 	.word	0x0802a1f8
 8004b7c:	08028554 	.word	0x08028554
 8004b80:	08029504 	.word	0x08029504
 8004b84:	080048a5 	.word	0x080048a5
 8004b88:	fff90019 	.word	0xfff90019
 8004b8c:	ff07eff7 	.word	0xff07eff7

08004b90 <_ZN20SplashScreenViewBaseD1Ev>:
}

SplashScreenViewBase::~SplashScreenViewBase()
{

}
 8004b90:	4770      	bx	lr

08004b92 <_ZN20SplashScreenViewBase11setupScreenEv>:

void SplashScreenViewBase::setupScreen()
{
    transitionBegins();
 8004b92:	6803      	ldr	r3, [r0, #0]
 8004b94:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004b96:	4718      	bx	r3

08004b98 <_ZN20SplashScreenViewBase16transitionBeginsEv>:
void SplashScreenViewBase::transitionBegins()
{
    //SplashScreenInteraction
    //When screen transition begins delay
    //Delay for 3000 ms (180 Ticks)
    splashScreenInteractionCounter = SPLASHSCREENINTERACTION_DURATION;
 8004b98:	23b4      	movs	r3, #180	; 0xb4
 8004b9a:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
}
 8004b9e:	4770      	bx	lr

08004ba0 <_ZN20SplashScreenViewBaseD0Ev>:
SplashScreenViewBase::~SplashScreenViewBase()
 8004ba0:	b510      	push	{r4, lr}
}
 8004ba2:	219c      	movs	r1, #156	; 0x9c
SplashScreenViewBase::~SplashScreenViewBase()
 8004ba4:	4604      	mov	r4, r0
}
 8004ba6:	f01d f9f8 	bl	8021f9a <_ZdlPvj>
 8004baa:	4620      	mov	r0, r4
 8004bac:	bd10      	pop	{r4, pc}

08004bae <_ZN20SplashScreenViewBase15handleTickEventEv>:

void SplashScreenViewBase::handleTickEvent()
{
 8004bae:	b508      	push	{r3, lr}
    if (splashScreenInteractionCounter > 0)
 8004bb0:	f8b0 3098 	ldrh.w	r3, [r0, #152]	; 0x98
 8004bb4:	b153      	cbz	r3, 8004bcc <_ZN20SplashScreenViewBase15handleTickEventEv+0x1e>
    {
        splashScreenInteractionCounter--;
 8004bb6:	3b01      	subs	r3, #1
 8004bb8:	b29b      	uxth	r3, r3
 8004bba:	f8a0 3098 	strh.w	r3, [r0, #152]	; 0x98
        if (splashScreenInteractionCounter == 0)
 8004bbe:	b92b      	cbnz	r3, 8004bcc <_ZN20SplashScreenViewBase15handleTickEventEv+0x1e>
    virtual void transitionBegins();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004bc0:	f00c fea2 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
                //When SplashScreenInteraction completed change screen to TemperatureScreen
                //Go to TemperatureScreen with block transition
                application().gotoTemperatureScreenScreenBlockTransition();
        }
    }
}
 8004bc4:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
                application().gotoTemperatureScreenScreenBlockTransition();
 8004bc8:	f7fe bdea 	b.w	80037a0 <_ZN23FrontendApplicationBase42gotoTemperatureScreenScreenBlockTransitionEv>
}
 8004bcc:	bd08      	pop	{r3, pc}
	...

08004bd0 <_ZN20SplashScreenViewBaseC1Ev>:
SplashScreenViewBase::SplashScreenViewBase() :
 8004bd0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8004bd4:	4604      	mov	r4, r0
    splashScreenInteractionCounter(0)
 8004bd6:	4626      	mov	r6, r4
 8004bd8:	f00e fa9e 	bl	8013118 <_ZN8touchgfx6ScreenC1Ev>
 8004bdc:	2500      	movs	r5, #0
 8004bde:	4b2e      	ldr	r3, [pc, #184]	; (8004c98 <_ZN20SplashScreenViewBaseC1Ev+0xc8>)
 8004be0:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004be2:	f846 3b40 	str.w	r3, [r6], #64
        : Widget(), alpha(255), color(0)
 8004be6:	4b2d      	ldr	r3, [pc, #180]	; (8004c9c <_ZN20SplashScreenViewBaseC1Ev+0xcc>)
          visible(true)
 8004be8:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8004bea:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8004bee:	f44f 7280 	mov.w	r2, #256	; 0x100
 8004bf2:	23ff      	movs	r3, #255	; 0xff
 8004bf4:	f104 076c 	add.w	r7, r4, #108	; 0x6c
 8004bf8:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 8004bfc:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8004c00:	f8a4 2090 	strh.w	r2, [r4, #144]	; 0x90
 8004c04:	f64f 73ff 	movw	r3, #65535	; 0xffff
     * @param   bmp (Optional) The bitmap to display.
     *
     * @see setBitmap
     */
    Image(const Bitmap& bmp = Bitmap())
        : Widget(), bitmap(bmp), alpha(255)
 8004c08:	4a25      	ldr	r2, [pc, #148]	; (8004ca0 <_ZN20SplashScreenViewBaseC1Ev+0xd0>)
 8004c0a:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 8004c0e:	f884 3094 	strb.w	r3, [r4, #148]	; 0x94
 8004c12:	66e2      	str	r2, [r4, #108]	; 0x6c
    {
        Image::setBitmap(bmp);
 8004c14:	a901      	add	r1, sp, #4
 8004c16:	4638      	mov	r0, r7
 8004c18:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004c1c:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 8004c20:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
 8004c24:	e9c4 551c 	strd	r5, r5, [r4, #112]	; 0x70
 8004c28:	e9c4 551e 	strd	r5, r5, [r4, #120]	; 0x78
 8004c2c:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 8004c30:	e9c4 5522 	strd	r5, r5, [r4, #136]	; 0x88
        : color(col)
 8004c34:	66a5      	str	r5, [r4, #104]	; 0x68
 8004c36:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004c3a:	f00a fa78 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
        setXY(x, y);
 8004c3e:	462a      	mov	r2, r5
 8004c40:	4629      	mov	r1, r5
 8004c42:	4630      	mov	r0, r6
 8004c44:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 8004c48:	f7ff fc78 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8004c4c:	4630      	mov	r0, r6
 8004c4e:	21f0      	movs	r1, #240	; 0xf0
 8004c50:	f7fc fff0 	bl	8001c34 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 8004c54:	4630      	mov	r0, r6
 8004c56:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8004c5a:	f7fc ffed 	bl	8001c38 <_ZN8touchgfx8Drawable9setHeightEs>
 8004c5e:	f104 0804 	add.w	r8, r4, #4
        color = newColor;
 8004c62:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004c66:	66a3      	str	r3, [r4, #104]	; 0x68
 8004c68:	4631      	mov	r1, r6
 8004c6a:	4640      	mov	r0, r8
 8004c6c:	f006 ff14 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    image1.setXY(0, 0);
 8004c70:	462a      	mov	r2, r5
 8004c72:	4629      	mov	r1, r5
 8004c74:	4638      	mov	r0, r7
 8004c76:	f7ff fc61 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8004c7a:	230e      	movs	r3, #14
    image1.setBitmap(touchgfx::Bitmap(BITMAP_NATURE_LIGHT_LAKE_83477_240X320_ID));
 8004c7c:	a901      	add	r1, sp, #4
 8004c7e:	4638      	mov	r0, r7
 8004c80:	f8ad 3004 	strh.w	r3, [sp, #4]
 8004c84:	f00a fa53 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 8004c88:	4640      	mov	r0, r8
 8004c8a:	4639      	mov	r1, r7
 8004c8c:	f006 ff04 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004c90:	4620      	mov	r0, r4
 8004c92:	b002      	add	sp, #8
 8004c94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8004c98:	08029554 	.word	0x08029554
 8004c9c:	0802a288 	.word	0x0802a288
 8004ca0:	0802a450 	.word	0x0802a450

08004ca4 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004ca4:	4770      	bx	lr
	...

08004ca8 <_Z23getFont_verdana_10_4bppv>:
{
 8004ca8:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004caa:	4d16      	ldr	r5, [pc, #88]	; (8004d04 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004cac:	782c      	ldrb	r4, [r5, #0]
 8004cae:	f3bf 8f5b 	dmb	ish
 8004cb2:	f014 0401 	ands.w	r4, r4, #1
{
 8004cb6:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004cb8:	d120      	bne.n	8004cfc <_Z23getFont_verdana_10_4bppv+0x54>
 8004cba:	4628      	mov	r0, r5
 8004cbc:	f01d f96f 	bl	8021f9e <__cxa_guard_acquire>
 8004cc0:	b1e0      	cbz	r0, 8004cfc <_Z23getFont_verdana_10_4bppv+0x54>
 8004cc2:	233f      	movs	r3, #63	; 0x3f
 8004cc4:	9309      	str	r3, [sp, #36]	; 0x24
 8004cc6:	4b10      	ldr	r3, [pc, #64]	; (8004d08 <_Z23getFont_verdana_10_4bppv+0x60>)
 8004cc8:	9308      	str	r3, [sp, #32]
 8004cca:	4b10      	ldr	r3, [pc, #64]	; (8004d0c <_Z23getFont_verdana_10_4bppv+0x64>)
 8004ccc:	4910      	ldr	r1, [pc, #64]	; (8004d10 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004cce:	4811      	ldr	r0, [pc, #68]	; (8004d14 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004cd0:	940a      	str	r4, [sp, #40]	; 0x28
 8004cd2:	2201      	movs	r2, #1
 8004cd4:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004cd8:	2304      	movs	r3, #4
 8004cda:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004cde:	230a      	movs	r3, #10
 8004ce0:	9300      	str	r3, [sp, #0]
 8004ce2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004ce6:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004cea:	9405      	str	r4, [sp, #20]
 8004cec:	f7ff faf0 	bl	80042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004cf0:	4809      	ldr	r0, [pc, #36]	; (8004d18 <_Z23getFont_verdana_10_4bppv+0x70>)
 8004cf2:	f01d ff83 	bl	8022bfc <atexit>
 8004cf6:	4628      	mov	r0, r5
 8004cf8:	f01d f95d 	bl	8021fb6 <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004cfc:	4805      	ldr	r0, [pc, #20]	; (8004d14 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004cfe:	b00f      	add	sp, #60	; 0x3c
 8004d00:	bd30      	pop	{r4, r5, pc}
 8004d02:	bf00      	nop
 8004d04:	20002924 	.word	0x20002924
 8004d08:	080312a8 	.word	0x080312a8
 8004d0c:	080314c4 	.word	0x080314c4
 8004d10:	080306f0 	.word	0x080306f0
 8004d14:	20002928 	.word	0x20002928
 8004d18:	08004ca5 	.word	0x08004ca5

08004d1c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 191, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004d1c:	4770      	bx	lr
	...

08004d20 <_Z23getFont_verdana_20_4bppv>:
{
 8004d20:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 191, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004d22:	4d17      	ldr	r5, [pc, #92]	; (8004d80 <_Z23getFont_verdana_20_4bppv+0x60>)
 8004d24:	782c      	ldrb	r4, [r5, #0]
 8004d26:	f3bf 8f5b 	dmb	ish
 8004d2a:	f014 0401 	ands.w	r4, r4, #1
{
 8004d2e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 191, 25, 20, 0, 0, 4, 1, 1, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004d30:	d122      	bne.n	8004d78 <_Z23getFont_verdana_20_4bppv+0x58>
 8004d32:	4628      	mov	r0, r5
 8004d34:	f01d f933 	bl	8021f9e <__cxa_guard_acquire>
 8004d38:	b1f0      	cbz	r0, 8004d78 <_Z23getFont_verdana_20_4bppv+0x58>
 8004d3a:	233f      	movs	r3, #63	; 0x3f
 8004d3c:	9309      	str	r3, [sp, #36]	; 0x24
 8004d3e:	4b11      	ldr	r3, [pc, #68]	; (8004d84 <_Z23getFont_verdana_20_4bppv+0x64>)
 8004d40:	9308      	str	r3, [sp, #32]
 8004d42:	4b11      	ldr	r3, [pc, #68]	; (8004d88 <_Z23getFont_verdana_20_4bppv+0x68>)
 8004d44:	9307      	str	r3, [sp, #28]
 8004d46:	2301      	movs	r3, #1
 8004d48:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8004d4c:	9304      	str	r3, [sp, #16]
 8004d4e:	2304      	movs	r3, #4
 8004d50:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004d54:	2314      	movs	r3, #20
 8004d56:	490d      	ldr	r1, [pc, #52]	; (8004d8c <_Z23getFont_verdana_20_4bppv+0x6c>)
 8004d58:	9300      	str	r3, [sp, #0]
 8004d5a:	22bf      	movs	r2, #191	; 0xbf
 8004d5c:	2319      	movs	r3, #25
 8004d5e:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004d62:	480b      	ldr	r0, [pc, #44]	; (8004d90 <_Z23getFont_verdana_20_4bppv+0x70>)
 8004d64:	940a      	str	r4, [sp, #40]	; 0x28
 8004d66:	9401      	str	r4, [sp, #4]
 8004d68:	f7ff fab2 	bl	80042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004d6c:	4809      	ldr	r0, [pc, #36]	; (8004d94 <_Z23getFont_verdana_20_4bppv+0x74>)
 8004d6e:	f01d ff45 	bl	8022bfc <atexit>
 8004d72:	4628      	mov	r0, r5
 8004d74:	f01d f91f 	bl	8021fb6 <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8004d78:	4805      	ldr	r0, [pc, #20]	; (8004d90 <_Z23getFont_verdana_20_4bppv+0x70>)
 8004d7a:	b00f      	add	sp, #60	; 0x3c
 8004d7c:	bd30      	pop	{r4, r5, pc}
 8004d7e:	bf00      	nop
 8004d80:	20002954 	.word	0x20002954
 8004d84:	080312ac 	.word	0x080312ac
 8004d88:	080314c8 	.word	0x080314c8
 8004d8c:	08030700 	.word	0x08030700
 8004d90:	20002958 	.word	0x20002958
 8004d94:	08004d1d 	.word	0x08004d1d

08004d98 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 22, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d98:	4770      	bx	lr
	...

08004d9c <_Z23getFont_verdana_40_4bppv>:
{
 8004d9c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 22, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004d9e:	4d17      	ldr	r5, [pc, #92]	; (8004dfc <_Z23getFont_verdana_40_4bppv+0x60>)
 8004da0:	782c      	ldrb	r4, [r5, #0]
 8004da2:	f3bf 8f5b 	dmb	ish
 8004da6:	f014 0401 	ands.w	r4, r4, #1
{
 8004daa:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 22, 41, 40, 0, 0, 4, 1, 0, 1, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004dac:	d122      	bne.n	8004df4 <_Z23getFont_verdana_40_4bppv+0x58>
 8004dae:	4628      	mov	r0, r5
 8004db0:	f01d f8f5 	bl	8021f9e <__cxa_guard_acquire>
 8004db4:	b1f0      	cbz	r0, 8004df4 <_Z23getFont_verdana_40_4bppv+0x58>
 8004db6:	233f      	movs	r3, #63	; 0x3f
 8004db8:	9309      	str	r3, [sp, #36]	; 0x24
 8004dba:	4b11      	ldr	r3, [pc, #68]	; (8004e00 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004dbc:	9308      	str	r3, [sp, #32]
 8004dbe:	4b11      	ldr	r3, [pc, #68]	; (8004e04 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004dc0:	9307      	str	r3, [sp, #28]
 8004dc2:	2301      	movs	r3, #1
 8004dc4:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8004dc8:	9304      	str	r3, [sp, #16]
 8004dca:	2304      	movs	r3, #4
 8004dcc:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004dd0:	2328      	movs	r3, #40	; 0x28
 8004dd2:	490d      	ldr	r1, [pc, #52]	; (8004e08 <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004dd4:	9300      	str	r3, [sp, #0]
 8004dd6:	2216      	movs	r2, #22
 8004dd8:	2329      	movs	r3, #41	; 0x29
 8004dda:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004dde:	480b      	ldr	r0, [pc, #44]	; (8004e0c <_Z23getFont_verdana_40_4bppv+0x70>)
 8004de0:	940a      	str	r4, [sp, #40]	; 0x28
 8004de2:	9401      	str	r4, [sp, #4]
 8004de4:	f7ff fa74 	bl	80042d0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004de8:	4809      	ldr	r0, [pc, #36]	; (8004e10 <_Z23getFont_verdana_40_4bppv+0x74>)
 8004dea:	f01d ff07 	bl	8022bfc <atexit>
 8004dee:	4628      	mov	r0, r5
 8004df0:	f01d f8e1 	bl	8021fb6 <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004df4:	4805      	ldr	r0, [pc, #20]	; (8004e0c <_Z23getFont_verdana_40_4bppv+0x70>)
 8004df6:	b00f      	add	sp, #60	; 0x3c
 8004df8:	bd30      	pop	{r4, r5, pc}
 8004dfa:	bf00      	nop
 8004dfc:	20002984 	.word	0x20002984
 8004e00:	080314c0 	.word	0x080314c0
 8004e04:	080314cc 	.word	0x080314cc
 8004e08:	08031174 	.word	0x08031174
 8004e0c:	20002988 	.word	0x20002988
 8004e10:	08004d99 	.word	0x08004d99

08004e14 <_ZN8touchgfx21AbstractPainterBitmapD1Ev>:
    }

    /** Destructor */
    virtual ~AbstractPainterBitmap()
    {
    }
 8004e14:	4770      	bx	lr

08004e16 <_ZN8touchgfx21AbstractPainterBitmap8setTiledEb>:
     *
     * @see setOffset
     */
    virtual void setTiled(bool tiled)
    {
        isTiled = tiled;
 8004e16:	7601      	strb	r1, [r0, #24]
    }
 8004e18:	4770      	bx	lr

08004e1a <_ZN8touchgfx21AbstractPainterBitmap9setOffsetEss>:
     *
     * @see setTiled
     */
    virtual void setOffset(int16_t x, int16_t y)
    {
        xOffset = x;
 8004e1a:	8281      	strh	r1, [r0, #20]
        yOffset = y;
 8004e1c:	82c2      	strh	r2, [r0, #22]
    }
 8004e1e:	4770      	bx	lr

08004e20 <_ZN25TemperatureScreenViewBase11setupScreenEv>:
}

void TemperatureScreenViewBase::setupScreen()
{

}
 8004e20:	4770      	bx	lr

08004e22 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e22:	4770      	bx	lr

08004e24 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004e24:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e26:	68c2      	ldr	r2, [r0, #12]
 8004e28:	6844      	ldr	r4, [r0, #4]
 8004e2a:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004e2c:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004e2e:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004e32:	07d2      	lsls	r2, r2, #31
 8004e34:	bf48      	it	mi
 8004e36:	5962      	ldrmi	r2, [r4, r5]
 8004e38:	689b      	ldr	r3, [r3, #8]
    }
 8004e3a:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e3c:	bf48      	it	mi
 8004e3e:	58d3      	ldrmi	r3, [r2, r3]
 8004e40:	4718      	bx	r3

08004e42 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004e42:	6843      	ldr	r3, [r0, #4]
 8004e44:	b12b      	cbz	r3, 8004e52 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004e46:	6883      	ldr	r3, [r0, #8]
 8004e48:	b92b      	cbnz	r3, 8004e56 <_ZNK8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004e4a:	68c0      	ldr	r0, [r0, #12]
 8004e4c:	f000 0001 	and.w	r0, r0, #1
 8004e50:	4770      	bx	lr
 8004e52:	4618      	mov	r0, r3
 8004e54:	4770      	bx	lr
 8004e56:	2001      	movs	r0, #1
    }
 8004e58:	4770      	bx	lr

08004e5a <_ZN8touchgfx21AbstractPainterBitmapD0Ev>:
    virtual ~AbstractPainterBitmap()
 8004e5a:	b510      	push	{r4, lr}
    }
 8004e5c:	2120      	movs	r1, #32
    virtual ~AbstractPainterBitmap()
 8004e5e:	4604      	mov	r4, r0
    }
 8004e60:	f01d f89b 	bl	8021f9a <_ZdlPvj>
 8004e64:	4620      	mov	r0, r4
 8004e66:	bd10      	pop	{r4, pc}

08004e68 <_ZN8touchgfx8CallbackI25TemperatureScreenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e68:	b510      	push	{r4, lr}
 8004e6a:	2110      	movs	r1, #16
 8004e6c:	4604      	mov	r4, r0
 8004e6e:	f01d f894 	bl	8021f9a <_ZdlPvj>
 8004e72:	4620      	mov	r0, r4
 8004e74:	bd10      	pop	{r4, pc}

08004e76 <_ZN8touchgfx21AbstractPainterBitmap9setBitmapERKNS_6BitmapE>:
    virtual void setBitmap(const Bitmap& bmp)
 8004e76:	b570      	push	{r4, r5, r6, lr}
        bitmap = bmp;
 8004e78:	4605      	mov	r5, r0
 8004e7a:	880b      	ldrh	r3, [r1, #0]
 8004e7c:	f825 3f04 	strh.w	r3, [r5, #4]!
    virtual void setBitmap(const Bitmap& bmp)
 8004e80:	4604      	mov	r4, r0
        bitmapFormat = bitmap.getFormat();
 8004e82:	4628      	mov	r0, r5
 8004e84:	f010 fa14 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8004e88:	71a0      	strb	r0, [r4, #6]
     *
     * @return a Rect describing the dimensions of this Bitmap.
     */
    Rect getRect() const
    {
        return Rect(0, 0, getWidth(), getHeight());
 8004e8a:	4628      	mov	r0, r5
 8004e8c:	f010 f8a0 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8004e90:	4606      	mov	r6, r0
 8004e92:	4628      	mov	r0, r5
 8004e94:	f010 f8d0 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
        bitmapRect = bitmap.getRect();
 8004e98:	2300      	movs	r3, #0
 8004e9a:	60a3      	str	r3, [r4, #8]
 8004e9c:	81e0      	strh	r0, [r4, #14]
 8004e9e:	81a6      	strh	r6, [r4, #12]
        DisplayTransformation::transformDisplayToFrameBuffer(bitmapRect);
 8004ea0:	f104 0008 	add.w	r0, r4, #8
 8004ea4:	f00c fb94 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
        bitmapData = bitmap.getData();
 8004ea8:	4628      	mov	r0, r5
 8004eaa:	f010 f97d 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8004eae:	6120      	str	r0, [r4, #16]
    }
 8004eb0:	bd70      	pop	{r4, r5, r6, pc}
	...

08004eb4 <_ZN25TemperatureScreenViewBaseD1Ev>:
TemperatureScreenViewBase::~TemperatureScreenViewBase()
 8004eb4:	b510      	push	{r4, lr}
 8004eb6:	4b03      	ldr	r3, [pc, #12]	; (8004ec4 <_ZN25TemperatureScreenViewBaseD1Ev+0x10>)
 8004eb8:	6003      	str	r3, [r0, #0]
 8004eba:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004ebc:	f00b f842 	bl	800ff44 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004ec0:	4620      	mov	r0, r4
 8004ec2:	bd10      	pop	{r4, pc}
 8004ec4:	080295c0 	.word	0x080295c0

08004ec8 <_ZN25TemperatureScreenViewBaseD0Ev>:
TemperatureScreenViewBase::~TemperatureScreenViewBase()
 8004ec8:	b507      	push	{r0, r1, r2, lr}
 8004eca:	4b07      	ldr	r3, [pc, #28]	; (8004ee8 <_ZN25TemperatureScreenViewBaseD0Ev+0x20>)
 8004ecc:	6003      	str	r3, [r0, #0]
 8004ece:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004ed0:	f00b f838 	bl	800ff44 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004ed4:	9801      	ldr	r0, [sp, #4]
 8004ed6:	f241 11b8 	movw	r1, #4536	; 0x11b8
 8004eda:	f01d f85e 	bl	8021f9a <_ZdlPvj>
 8004ede:	9801      	ldr	r0, [sp, #4]
 8004ee0:	b003      	add	sp, #12
 8004ee2:	f85d fb04 	ldr.w	pc, [sp], #4
 8004ee6:	bf00      	nop
 8004ee8:	080295c0 	.word	0x080295c0

08004eec <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8004eec:	b538      	push	{r3, r4, r5, lr}
    if (&src == &bRightSlide)
 8004eee:	f100 03d4 	add.w	r3, r0, #212	; 0xd4
 8004ef2:	4299      	cmp	r1, r3
{
 8004ef4:	4604      	mov	r4, r0
 8004ef6:	460d      	mov	r5, r1
    if (&src == &bRightSlide)
 8004ef8:	d103      	bne.n	8004f02 <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~TemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004efa:	f00c fd05 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //slideRightToGetTemperatureScreen
        //When bRightSlide clicked change screen to GetTemperatureScreen
        //Go to GetTemperatureScreen with screen transition towards East
        application().gotoGetTemperatureScreenScreenSlideTransitionEast();
 8004efe:	f7fe fc7f 	bl	8003800 <_ZN23FrontendApplicationBase49gotoGetTemperatureScreenScreenSlideTransitionEastEv>
    }
    if (&src == &bLeftSlide)
 8004f02:	3498      	adds	r4, #152	; 0x98
 8004f04:	42a5      	cmp	r5, r4
 8004f06:	d105      	bne.n	8004f14 <_ZN25TemperatureScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8004f08:	f00c fcfe 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
        //slideLeftToLedCommandScreen
        //When bLeftSlide clicked change screen to LedCommandScreen
        //Go to LedCommandScreen with screen transition towards West
        application().gotoLedCommandScreenScreenSlideTransitionWest();
    }
}
 8004f0c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotoLedCommandScreenScreenSlideTransitionWest();
 8004f10:	f7fe bc96 	b.w	8003840 <_ZN23FrontendApplicationBase45gotoLedCommandScreenScreenSlideTransitionWestEv>
}
 8004f14:	bd38      	pop	{r3, r4, r5, pc}
	...

08004f18 <_ZN8touchgfx8TextAreaC1Ev>:
          visible(true)
 8004f18:	f44f 7180 	mov.w	r1, #256	; 0x100
 8004f1c:	8481      	strh	r1, [r0, #36]	; 0x24
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004f1e:	490d      	ldr	r1, [pc, #52]	; (8004f54 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 8004f20:	6001      	str	r1, [r0, #0]
 8004f22:	490d      	ldr	r1, [pc, #52]	; (8004f58 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8004f24:	6281      	str	r1, [r0, #40]	; 0x28
 8004f26:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004f2a:	8581      	strh	r1, [r0, #44]	; 0x2c
 8004f2c:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(0), y(0), width(0), height(0)
 8004f30:	2200      	movs	r2, #0
 8004f32:	6341      	str	r1, [r0, #52]	; 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004f34:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8004f38:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004f3c:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8004f40:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004f44:	e9c0 2207 	strd	r2, r2, [r0, #28]
              text(0)
 8004f48:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 8004f4c:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004f4e:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004f50:	63c2      	str	r2, [r0, #60]	; 0x3c
    }
 8004f52:	4770      	bx	lr
 8004f54:	0802a1f8 	.word	0x0802a1f8
 8004f58:	08028554 	.word	0x08028554

08004f5c <_ZN25TemperatureScreenViewBaseC1Ev>:
TemperatureScreenViewBase::TemperatureScreenViewBase() :
 8004f5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f60:	ed2d 8b04 	vpush	{d8-d9}
 8004f64:	4604      	mov	r4, r0
 8004f66:	b08d      	sub	sp, #52	; 0x34
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
 8004f68:	46a2      	mov	sl, r4
 8004f6a:	2500      	movs	r5, #0
 8004f6c:	f00e f8d4 	bl	8013118 <_ZN8touchgfx6ScreenC1Ev>
 8004f70:	4bd3      	ldr	r3, [pc, #844]	; (80052c0 <_ZN25TemperatureScreenViewBaseC1Ev+0x364>)
 8004f72:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004f74:	f84a 3b40 	str.w	r3, [sl], #64
        : Widget(), alpha(255), color(0)
 8004f78:	4bd2      	ldr	r3, [pc, #840]	; (80052c4 <_ZN25TemperatureScreenViewBaseC1Ev+0x368>)
 8004f7a:	6625      	str	r5, [r4, #96]	; 0x60
        : x(0), y(0), width(0), height(0)
 8004f7c:	e9c4 3510 	strd	r3, r5, [r4, #64]	; 0x40
 8004f80:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f84:	f104 086c 	add.w	r8, r4, #108	; 0x6c
 8004f88:	f8a4 3064 	strh.w	r3, [r4, #100]	; 0x64
 8004f8c:	23ff      	movs	r3, #255	; 0xff
 8004f8e:	a90a      	add	r1, sp, #40	; 0x28
        : bitmapId(id)
 8004f90:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8004f94:	f884 3066 	strb.w	r3, [r4, #102]	; 0x66
 8004f98:	4640      	mov	r0, r8
 8004f9a:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8004f9e:	e9c4 5514 	strd	r5, r5, [r4, #80]	; 0x50
 8004fa2:	e9c4 5516 	strd	r5, r5, [r4, #88]	; 0x58
        : color(col)
 8004fa6:	66a5      	str	r5, [r4, #104]	; 0x68
 8004fa8:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8004fac:	f008 ff66 	bl	800de7c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004fb0:	f104 0398 	add.w	r3, r4, #152	; 0x98
 8004fb4:	4618      	mov	r0, r3
 8004fb6:	ee08 3a10 	vmov	s16, r3
 8004fba:	f00a f891 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004fbe:	f104 03d4 	add.w	r3, r4, #212	; 0xd4
 8004fc2:	f504 7988 	add.w	r9, r4, #272	; 0x110
 8004fc6:	4618      	mov	r0, r3
 8004fc8:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 8004fcc:	ee08 3a90 	vmov	s17, r3
 8004fd0:	f00a f886 	bl	800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>
 8004fd4:	4648      	mov	r0, r9
 8004fd6:	f7ff ff9f 	bl	8004f18 <_ZN8touchgfx8TextAreaC1Ev>
 8004fda:	4630      	mov	r0, r6
 8004fdc:	f009 fd5a 	bl	800ea94 <_ZN8touchgfx5GaugeC1Ev>
 8004fe0:	f504 733e 	add.w	r3, r4, #760	; 0x2f8
     * Constructor.
     *
     * @param  bmp (Optional) The bitmap to use in the painter.
     */
    PainterRGB565Bitmap(const Bitmap& bmp = Bitmap(BITMAP_INVALID))
        : AbstractPainterRGB565(), AbstractPainterBitmap(bmp)
 8004fe4:	4618      	mov	r0, r3
 8004fe6:	ee09 3a10 	vmov	s18, r3
 8004fea:	f8ad 7028 	strh.w	r7, [sp, #40]	; 0x28
 8004fee:	f7fc fee9 	bl	8001dc4 <_ZN8touchgfx21AbstractPainterRGB565C1Ev>
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
 8004ff2:	4bb5      	ldr	r3, [pc, #724]	; (80052c8 <_ZN25TemperatureScreenViewBaseC1Ev+0x36c>)
 8004ff4:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
 8004ff8:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8004ffc:	f8a4 3304 	strh.w	r3, [r4, #772]	; 0x304
        setBitmap(bmp);
 8005000:	a90a      	add	r1, sp, #40	; 0x28
 8005002:	f504 7040 	add.w	r0, r4, #768	; 0x300
        : x(0), y(0), width(0), height(0)
 8005006:	e9c4 55c2 	strd	r5, r5, [r4, #776]	; 0x308
        : bitmap(bmp), bitmapFormat(), bitmapRect(), bitmapData(0), xOffset(0), yOffset(0), isTiled(false)
 800500a:	e9c4 55c4 	strd	r5, r5, [r4, #784]	; 0x310
 800500e:	f884 5306 	strb.w	r5, [r4, #774]	; 0x306
 8005012:	f884 5318 	strb.w	r5, [r4, #792]	; 0x318
        setBitmap(bmp);
 8005016:	f7ff ff2e 	bl	8004e76 <_ZN8touchgfx21AbstractPainterBitmap9setBitmapERKNS_6BitmapE>
 800501a:	4bac      	ldr	r3, [pc, #688]	; (80052cc <_ZN25TemperatureScreenViewBaseC1Ev+0x370>)
 800501c:	f8c4 32f8 	str.w	r3, [r4, #760]	; 0x2f8
 8005020:	f504 7b49 	add.w	fp, r4, #804	; 0x324
 8005024:	3324      	adds	r3, #36	; 0x24
 8005026:	f8c4 3300 	str.w	r3, [r4, #768]	; 0x300
        : TextArea()
 800502a:	4658      	mov	r0, fp
 800502c:	f7ff ff74 	bl	8004f18 <_ZN8touchgfx8TextAreaC1Ev>
        : TextAreaWithWildcardBase(), wc1(0)
 8005030:	4ba7      	ldr	r3, [pc, #668]	; (80052d0 <_ZN25TemperatureScreenViewBaseC1Ev+0x374>)
        : pobject(pObject), pmemfun(pmemfun_1)
 8005032:	4aa8      	ldr	r2, [pc, #672]	; (80052d4 <_ZN25TemperatureScreenViewBaseC1Ev+0x378>)
 8005034:	f8c4 3324 	str.w	r3, [r4, #804]	; 0x324
 8005038:	f504 5380 	add.w	r3, r4, #4096	; 0x1000
 800503c:	f8c4 536c 	str.w	r5, [r4, #876]	; 0x36c
 8005040:	e9c3 246a 	strd	r2, r4, [r3, #424]	; 0x1a8
 8005044:	4aa4      	ldr	r2, [pc, #656]	; (80052d8 <_ZN25TemperatureScreenViewBaseC1Ev+0x37c>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 8005046:	f44f 6161 	mov.w	r1, #3600	; 0xe10
 800504a:	e9c3 256c 	strd	r2, r5, [r3, #432]	; 0x1b0
 800504e:	f504 7066 	add.w	r0, r4, #920	; 0x398
 8005052:	f00a ff6d 	bl	800ff30 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 240, 320);
 8005056:	f44f 73a0 	mov.w	r3, #320	; 0x140
 800505a:	462a      	mov	r2, r5
 800505c:	4650      	mov	r0, sl
 800505e:	9300      	str	r3, [sp, #0]
 8005060:	4629      	mov	r1, r5
 8005062:	23f0      	movs	r3, #240	; 0xf0
 8005064:	f7fe fb40 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005068:	1d27      	adds	r7, r4, #4
        color = newColor;
 800506a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800506e:	66a3      	str	r3, [r4, #104]	; 0x68
 8005070:	4651      	mov	r1, sl
 8005072:	4638      	mov	r0, r7
 8005074:	f006 fd10 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
 8005078:	4640      	mov	r0, r8
 800507a:	a90a      	add	r1, sp, #40	; 0x28
 800507c:	f8ad 5028 	strh.w	r5, [sp, #40]	; 0x28
 8005080:	f00a f855 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    BackgroudImage.setPosition(0, 0, 240, 320);
 8005084:	f44f 73a0 	mov.w	r3, #320	; 0x140
 8005088:	462a      	mov	r2, r5
 800508a:	4640      	mov	r0, r8
 800508c:	9300      	str	r3, [sp, #0]
 800508e:	4629      	mov	r1, r5
 8005090:	23f0      	movs	r3, #240	; 0xf0
 8005092:	f7fe fb29 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8005096:	4640      	mov	r0, r8
 8005098:	4629      	mov	r1, r5
 800509a:	f008 feb6 	bl	800de0a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 800509e:	4641      	mov	r1, r8
 80050a0:	4638      	mov	r0, r7
 80050a2:	f006 fcf9 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bLeftSlide.setXY(0, 284);
 80050a6:	ee18 0a10 	vmov	r0, s16
 80050aa:	f44f 728e 	mov.w	r2, #284	; 0x11c
 80050ae:	4629      	mov	r1, r5
 80050b0:	f7ff fa44 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 80050b4:	f04f 0302 	mov.w	r3, #2
 80050b8:	f8ad 3020 	strh.w	r3, [sp, #32]
 80050bc:	230b      	movs	r3, #11
 80050be:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 80050c2:	f04f 010a 	mov.w	r1, #10
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 80050c6:	ab0a      	add	r3, sp, #40	; 0x28
 80050c8:	a807      	add	r0, sp, #28
 80050ca:	f04f 0a01 	mov.w	sl, #1
 80050ce:	aa08      	add	r2, sp, #32
 80050d0:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 80050d4:	9300      	str	r3, [sp, #0]
 80050d6:	4601      	mov	r1, r0
 80050d8:	ab09      	add	r3, sp, #36	; 0x24
 80050da:	ee18 0a10 	vmov	r0, s16
    bLeftSlide.setAction(buttonCallback);
 80050de:	f504 588d 	add.w	r8, r4, #4512	; 0x11a0
 80050e2:	f108 0808 	add.w	r8, r8, #8
 80050e6:	f8ad a01c 	strh.w	sl, [sp, #28]
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 80050ea:	f009 ff63 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 80050ee:	4b7b      	ldr	r3, [pc, #492]	; (80052dc <_ZN25TemperatureScreenViewBaseC1Ev+0x380>)
 80050f0:	f8c4 30d0 	str.w	r3, [r4, #208]	; 0xd0
 80050f4:	ee18 1a10 	vmov	r1, s16
 80050f8:	f8c4 80c0 	str.w	r8, [r4, #192]	; 0xc0
 80050fc:	4638      	mov	r0, r7
 80050fe:	f006 fccb 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    bRightSlide.setXY(140, 284);
 8005102:	ee18 0a90 	vmov	r0, s17
 8005106:	f44f 728e 	mov.w	r2, #284	; 0x11c
 800510a:	218c      	movs	r1, #140	; 0x8c
 800510c:	f7ff fa16 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8005110:	f04f 0202 	mov.w	r2, #2
 8005114:	f8ad 2020 	strh.w	r2, [sp, #32]
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
 8005118:	aa0a      	add	r2, sp, #40	; 0x28
 800511a:	230c      	movs	r3, #12
 800511c:	f04f 010a 	mov.w	r1, #10
 8005120:	9200      	str	r2, [sp, #0]
 8005122:	aa09      	add	r2, sp, #36	; 0x24
 8005124:	ee18 0a90 	vmov	r0, s17
 8005128:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800512c:	f8ad 1028 	strh.w	r1, [sp, #40]	; 0x28
 8005130:	4613      	mov	r3, r2
 8005132:	a907      	add	r1, sp, #28
 8005134:	aa08      	add	r2, sp, #32
 8005136:	f8ad a01c 	strh.w	sl, [sp, #28]
 800513a:	f009 ff3b 	bl	800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
 800513e:	4b67      	ldr	r3, [pc, #412]	; (80052dc <_ZN25TemperatureScreenViewBaseC1Ev+0x380>)
 8005140:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 8005144:	ee18 1a90 	vmov	r1, s17
 8005148:	f8c4 80fc 	str.w	r8, [r4, #252]	; 0xfc
 800514c:	4638      	mov	r0, r7
 800514e:	f006 fca3 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(57, 240);
 8005152:	22f0      	movs	r2, #240	; 0xf0
 8005154:	4648      	mov	r0, r9
 8005156:	2139      	movs	r1, #57	; 0x39
 8005158:	f7ff f9f0 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 800515c:	f10d 0808 	add.w	r8, sp, #8
        color = newColor;
 8005160:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 8005164:	4649      	mov	r1, r9
        color = newColor;
 8005166:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
        boundingArea = calculateBoundingArea();
 800516a:	4640      	mov	r0, r8
        linespace = space;
 800516c:	f8a4 5144 	strh.w	r5, [r4, #324]	; 0x144
        boundingArea = calculateBoundingArea();
 8005170:	f009 f958 	bl	800e424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005174:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005178:	f504 73a6 	add.w	r3, r4, #332	; 0x14c
 800517c:	e883 0007 	stmia.w	r3, {r0, r1, r2}
 8005180:	4b57      	ldr	r3, [pc, #348]	; (80052e0 <_ZN25TemperatureScreenViewBaseC1Ev+0x384>)
 8005182:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LFPJ));
 8005184:	4648      	mov	r0, r9
 8005186:	f04f 0306 	mov.w	r3, #6
 800518a:	a90a      	add	r1, sp, #40	; 0x28
 800518c:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8005190:	f009 fbe2 	bl	800e958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005194:	4649      	mov	r1, r9
 8005196:	4638      	mov	r0, r7
 8005198:	f006 fc7e 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    gauge1.setPosition(0, 0, 240, 240);
 800519c:	f04f 09f0 	mov.w	r9, #240	; 0xf0
 80051a0:	2305      	movs	r3, #5
    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_BACKGROUNDS_DARK_FILLED_ID));
 80051a2:	4630      	mov	r0, r6
 80051a4:	a90a      	add	r1, sp, #40	; 0x28
 80051a6:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80051aa:	f006 fc07 	bl	800b9bc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>
    gauge1.setPosition(0, 0, 240, 240);
 80051ae:	464b      	mov	r3, r9
 80051b0:	4630      	mov	r0, r6
 80051b2:	462a      	mov	r2, r5
 80051b4:	4629      	mov	r1, r5
 80051b6:	f8cd 9000 	str.w	r9, [sp]
 80051ba:	f7fe fa95 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
    gauge1.setCenter(120, 120);
 80051be:	2278      	movs	r2, #120	; 0x78
 80051c0:	4611      	mov	r1, r2
 80051c2:	4630      	mov	r0, r6
 80051c4:	f009 fd3f 	bl	800ec46 <_ZN8touchgfx5Gauge9setCenterEii>
    gauge1.setStartEndAngle(-117, 121);
 80051c8:	4630      	mov	r0, r6
 80051ca:	2279      	movs	r2, #121	; 0x79
 80051cc:	f06f 0174 	mvn.w	r1, #116	; 0x74
 80051d0:	f009 fdbe 	bl	800ed50 <_ZN8touchgfx5Gauge16setStartEndAngleEii>
    gauge1.setRange(0, 100);
 80051d4:	462b      	mov	r3, r5
 80051d6:	2264      	movs	r2, #100	; 0x64
 80051d8:	4630      	mov	r0, r6
 80051da:	4629      	mov	r1, r5
 80051dc:	9500      	str	r5, [sp, #0]
 80051de:	f006 fa9a 	bl	800b716 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>
    gauge1.setValue(50);
 80051e2:	4630      	mov	r0, r6
 80051e4:	2132      	movs	r1, #50	; 0x32
 80051e6:	f009 fd5d 	bl	800eca4 <_ZN8touchgfx5Gauge8setValueEi>
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_ROUGH_ID, 10, 65);
 80051ea:	220a      	movs	r2, #10
 80051ec:	2341      	movs	r3, #65	; 0x41
 80051ee:	4630      	mov	r0, r6
 80051f0:	2107      	movs	r1, #7
 80051f2:	f009 fd13 	bl	800ec1c <_ZN8touchgfx5Gauge9setNeedleEtss>
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051f6:	4630      	mov	r0, r6
 80051f8:	4651      	mov	r1, sl
 80051fa:	f009 fcab 	bl	800eb54 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
 80051fe:	4630      	mov	r0, r6
 8005200:	4651      	mov	r1, sl
 8005202:	f009 fcaa 	bl	800eb5a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>
    gauge1.setArcVisible();
 8005206:	4630      	mov	r0, r6
 8005208:	4651      	mov	r1, sl
 800520a:	f009 fca9 	bl	800eb60 <_ZN8touchgfx5Gauge13setArcVisibleEb>
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_FILLERS_SWOOP_ID));
 800520e:	a90a      	add	r1, sp, #40	; 0x28
 8005210:	f04f 0306 	mov.w	r3, #6
 8005214:	ee19 0a10 	vmov	r0, s18
 8005218:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800521c:	f007 fef7 	bl	800d00e <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>
    gauge1.getArc().setPainter(gauge1Painter);
 8005220:	4630      	mov	r0, r6
 8005222:	f009 fca0 	bl	800eb66 <_ZN8touchgfx5Gauge6getArcEv>
        canvasPainter = &painter;
 8005226:	ed80 9a0a 	vstr	s18, [r0, #40]	; 0x28
    gauge1.getArc().setRadius(100);
 800522a:	4630      	mov	r0, r6
 800522c:	f009 fc9b 	bl	800eb66 <_ZN8touchgfx5Gauge6getArcEv>
     * @note The area containing the Circle is not invalidated.
     */
    template <typename T>
    void setRadius(const T r)
    {
        this->circleRadius = CWRUtil::toQ5(r);
 8005230:	f44f 6348 	mov.w	r3, #3200	; 0xc80
 8005234:	6343      	str	r3, [r0, #52]	; 0x34
    gauge1.getArc().setLineWidth(99);
 8005236:	4630      	mov	r0, r6
 8005238:	f009 fc95 	bl	800eb66 <_ZN8touchgfx5Gauge6getArcEv>
     *       before updating the width to ensure that the old circle is completely erased.
     */
    template <typename T>
    void setLineWidth(const T width)
    {
        this->circleLineWidth = CWRUtil::toQ5(width);
 800523c:	f44f 6346 	mov.w	r3, #3168	; 0xc60
 8005240:	6403      	str	r3, [r0, #64]	; 0x40
    gauge1.getArc().setCapPrecision(180);
 8005242:	4630      	mov	r0, r6
 8005244:	f009 fc8f 	bl	800eb66 <_ZN8touchgfx5Gauge6getArcEv>
 8005248:	21b4      	movs	r1, #180	; 0xb4
 800524a:	f007 ff77 	bl	800d13c <_ZN8touchgfx6Circle15setCapPrecisionEi>
    gauge1.setArcPosition(23, 23, 192, 142);
 800524e:	2217      	movs	r2, #23
 8005250:	238e      	movs	r3, #142	; 0x8e
 8005252:	4611      	mov	r1, r2
 8005254:	4630      	mov	r0, r6
 8005256:	9300      	str	r3, [sp, #0]
 8005258:	23c0      	movs	r3, #192	; 0xc0
 800525a:	f009 fc53 	bl	800eb04 <_ZN8touchgfx5Gauge14setArcPositionEssss>
 800525e:	4631      	mov	r1, r6
 8005260:	4638      	mov	r0, r7
 8005262:	f006 fc19 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    L_Temperature.setPosition(0, 179, 240, 25);
 8005266:	2319      	movs	r3, #25
 8005268:	22b3      	movs	r2, #179	; 0xb3
 800526a:	9300      	str	r3, [sp, #0]
 800526c:	4629      	mov	r1, r5
 800526e:	464b      	mov	r3, r9
 8005270:	4658      	mov	r0, fp
 8005272:	f7fe fa39 	bl	80036e8 <_ZN8touchgfx8Drawable11setPositionEssss>
        color = newColor;
 8005276:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800527a:	f8c4 3354 	str.w	r3, [r4, #852]	; 0x354
        boundingArea = calculateBoundingArea();
 800527e:	f8d4 3324 	ldr.w	r3, [r4, #804]	; 0x324
        linespace = space;
 8005282:	f8a4 5358 	strh.w	r5, [r4, #856]	; 0x358
        boundingArea = calculateBoundingArea();
 8005286:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800528a:	4659      	mov	r1, fp
 800528c:	4640      	mov	r0, r8
 800528e:	4798      	blx	r3
 8005290:	e898 0007 	ldmia.w	r8, {r0, r1, r2}
 8005294:	f504 7358 	add.w	r3, r4, #864	; 0x360
 8005298:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800529c:	4b11      	ldr	r3, [pc, #68]	; (80052e4 <_ZN25TemperatureScreenViewBaseC1Ev+0x388>)
 800529e:	681b      	ldr	r3, [r3, #0]
    Unicode::snprintf(L_TemperatureBuffer, L_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YDP8).getText());
 80052a0:	f504 765c 	add.w	r6, r4, #880	; 0x370
 80052a4:	b92b      	cbnz	r3, 80052b2 <_ZN25TemperatureScreenViewBaseC1Ev+0x356>
 80052a6:	4b10      	ldr	r3, [pc, #64]	; (80052e8 <_ZN25TemperatureScreenViewBaseC1Ev+0x38c>)
 80052a8:	4a10      	ldr	r2, [pc, #64]	; (80052ec <_ZN25TemperatureScreenViewBaseC1Ev+0x390>)
 80052aa:	2160      	movs	r1, #96	; 0x60
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80052ac:	4810      	ldr	r0, [pc, #64]	; (80052f0 <_ZN25TemperatureScreenViewBaseC1Ev+0x394>)
 80052ae:	f01d fc87 	bl	8022bc0 <__assert_func>
        return typedTextId < numberOfTypedTexts;
 80052b2:	4b10      	ldr	r3, [pc, #64]	; (80052f4 <_ZN25TemperatureScreenViewBaseC1Ev+0x398>)
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 80052b4:	881b      	ldrh	r3, [r3, #0]
 80052b6:	bb0b      	cbnz	r3, 80052fc <_ZN25TemperatureScreenViewBaseC1Ev+0x3a0>
 80052b8:	4b0f      	ldr	r3, [pc, #60]	; (80052f8 <_ZN25TemperatureScreenViewBaseC1Ev+0x39c>)
 80052ba:	4a0c      	ldr	r2, [pc, #48]	; (80052ec <_ZN25TemperatureScreenViewBaseC1Ev+0x390>)
 80052bc:	2161      	movs	r1, #97	; 0x61
 80052be:	e7f5      	b.n	80052ac <_ZN25TemperatureScreenViewBaseC1Ev+0x350>
 80052c0:	080295c0 	.word	0x080295c0
 80052c4:	0802a288 	.word	0x0802a288
 80052c8:	0802958c 	.word	0x0802958c
 80052cc:	08029eb8 	.word	0x08029eb8
 80052d0:	08029348 	.word	0x08029348
 80052d4:	080295a8 	.word	0x080295a8
 80052d8:	08004eed 	.word	0x08004eed
 80052dc:	fff90019 	.word	0xfff90019
 80052e0:	08028554 	.word	0x08028554
 80052e4:	200137b0 	.word	0x200137b0
 80052e8:	08029200 	.word	0x08029200
 80052ec:	08029302 	.word	0x08029302
 80052f0:	0802927d 	.word	0x0802927d
 80052f4:	200137b4 	.word	0x200137b4
 80052f8:	080292c4 	.word	0x080292c4
        return texts->getText(typedTextId);
 80052fc:	4b0f      	ldr	r3, [pc, #60]	; (800533c <_ZN25TemperatureScreenViewBaseC1Ev+0x3e0>)
 80052fe:	4629      	mov	r1, r5
 8005300:	6818      	ldr	r0, [r3, #0]
 8005302:	f000 f8d3 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 8005306:	4a0e      	ldr	r2, [pc, #56]	; (8005340 <_ZN25TemperatureScreenViewBaseC1Ev+0x3e4>)
 8005308:	4603      	mov	r3, r0
 800530a:	2114      	movs	r1, #20
 800530c:	4630      	mov	r0, r6
 800530e:	f00f fbed 	bl	8014aec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
        : typedTextId(id)
 8005312:	4b0c      	ldr	r3, [pc, #48]	; (8005344 <_ZN25TemperatureScreenViewBaseC1Ev+0x3e8>)
        wc1 = value;
 8005314:	f8c4 636c 	str.w	r6, [r4, #876]	; 0x36c
    L_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FHT5));
 8005318:	a90a      	add	r1, sp, #40	; 0x28
 800531a:	4658      	mov	r0, fp
 800531c:	930a      	str	r3, [sp, #40]	; 0x28
 800531e:	f8ad a02c 	strh.w	sl, [sp, #44]	; 0x2c
 8005322:	f009 fb19 	bl	800e958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005326:	4638      	mov	r0, r7
 8005328:	4659      	mov	r1, fp
 800532a:	f006 fbb5 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 800532e:	4620      	mov	r0, r4
 8005330:	b00d      	add	sp, #52	; 0x34
 8005332:	ecbd 8b04 	vpop	{d8-d9}
 8005336:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800533a:	bf00      	nop
 800533c:	200137bc 	.word	0x200137bc
 8005340:	0802933a 	.word	0x0802933a
 8005344:	08028554 	.word	0x08028554

08005348 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8005348:	2000      	movs	r0, #0
 800534a:	4770      	bx	lr

0800534c <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 800534c:	2000      	movs	r0, #0
 800534e:	4770      	bx	lr

08005350 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8005350:	b40e      	push	{r1, r2, r3}
 8005352:	b503      	push	{r0, r1, lr}
 8005354:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8005356:	2100      	movs	r1, #0
{
 8005358:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 800535c:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800535e:	f00d fa5f 	bl	8012820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8005362:	b002      	add	sp, #8
 8005364:	f85d eb04 	ldr.w	lr, [sp], #4
 8005368:	b003      	add	sp, #12
 800536a:	4770      	bx	lr

0800536c <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800536c:	b40c      	push	{r2, r3}
 800536e:	b507      	push	{r0, r1, r2, lr}
 8005370:	ab04      	add	r3, sp, #16
 8005372:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8005376:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8005378:	f00d fa52 	bl	8012820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 800537c:	b003      	add	sp, #12
 800537e:	f85d eb04 	ldr.w	lr, [sp], #4
 8005382:	b002      	add	sp, #8
 8005384:	4770      	bx	lr
	...

08005388 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8005388:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 800538a:	b510      	push	{r4, lr}
 800538c:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 800538e:	b373      	cbz	r3, 80053ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8005390:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8005392:	b92b      	cbnz	r3, 80053a0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8005394:	4b18      	ldr	r3, [pc, #96]	; (80053f8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8005396:	4a19      	ldr	r2, [pc, #100]	; (80053fc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8005398:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800539a:	4819      	ldr	r0, [pc, #100]	; (8005400 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 800539c:	f01d fc10 	bl	8022bc0 <__assert_func>
            return buffer[pos];
 80053a0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80053a2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80053a6:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 80053a8:	b30b      	cbz	r3, 80053ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80053aa:	f00e fdf0 	bl	8013f8e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80053ae:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 80053b0:	2b01      	cmp	r3, #1
 80053b2:	d803      	bhi.n	80053bc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80053b4:	4b13      	ldr	r3, [pc, #76]	; (8005404 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80053b6:	4a14      	ldr	r2, [pc, #80]	; (8005408 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 80053b8:	21cb      	movs	r1, #203	; 0xcb
 80053ba:	e7ee      	b.n	800539a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 80053bc:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 80053be:	1c53      	adds	r3, r2, #1
 80053c0:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 80053c2:	2b09      	cmp	r3, #9
 80053c4:	4619      	mov	r1, r3
 80053c6:	bf88      	it	hi
 80053c8:	f1a3 010a 	subhi.w	r1, r3, #10
 80053cc:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 80053d0:	f640 103f 	movw	r0, #2367	; 0x93f
 80053d4:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 80053d6:	4281      	cmp	r1, r0
 80053d8:	d109      	bne.n	80053ee <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 80053da:	2b0a      	cmp	r3, #10
 80053dc:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 80053e0:	bf28      	it	cs
 80053e2:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 80053e4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 80053e8:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 80053ea:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 80053ec:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 80053ee:	4620      	mov	r0, r4
}
 80053f0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 80053f4:	f00e bcce 	b.w	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80053f8:	080295ec 	.word	0x080295ec
 80053fc:	080295f5 	.word	0x080295f5
 8005400:	080296a0 	.word	0x080296a0
 8005404:	080296ea 	.word	0x080296ea
 8005408:	080296f8 	.word	0x080296f8

0800540c <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 800540c:	f00e bc89 	b.w	8013d22 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08005410 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8005410:	b510      	push	{r4, lr}
 8005412:	b086      	sub	sp, #24
 8005414:	ac02      	add	r4, sp, #8
 8005416:	e884 0006 	stmia.w	r4, {r1, r2}
 800541a:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 800541c:	ab0a      	add	r3, sp, #40	; 0x28
 800541e:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8005420:	9301      	str	r3, [sp, #4]
 8005422:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005424:	9300      	str	r3, [sp, #0]
 8005426:	4621      	mov	r1, r4
 8005428:	9b08      	ldr	r3, [sp, #32]
 800542a:	f00b fe0f 	bl	801104c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800542e:	b006      	add	sp, #24
 8005430:	bd10      	pop	{r4, pc}
	...

08005434 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8005434:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8005436:	bb18      	cbnz	r0, 8005480 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8005438:	4b12      	ldr	r3, [pc, #72]	; (8005484 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 800543a:	4813      	ldr	r0, [pc, #76]	; (8005488 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 800543c:	681b      	ldr	r3, [r3, #0]
 800543e:	4913      	ldr	r1, [pc, #76]	; (800548c <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8005440:	b1b3      	cbz	r3, 8005470 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8005442:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8005444:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8005446:	441a      	add	r2, r3
 8005448:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800544a:	685a      	ldr	r2, [r3, #4]
 800544c:	441a      	add	r2, r3
 800544e:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8005450:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8005452:	4b0f      	ldr	r3, [pc, #60]	; (8005490 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8005454:	2200      	movs	r2, #0
 8005456:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8005458:	f000 f838 	bl	80054cc <_ZN17TypedTextDatabase8getFontsEv>
 800545c:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800545e:	f000 f833 	bl	80054c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8005462:	4b0c      	ldr	r3, [pc, #48]	; (8005494 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8005464:	601c      	str	r4, [r3, #0]
        fonts = f;
 8005466:	4b0c      	ldr	r3, [pc, #48]	; (8005498 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8005468:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800546a:	4b0c      	ldr	r3, [pc, #48]	; (800549c <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 800546c:	8018      	strh	r0, [r3, #0]
    }
}
 800546e:	e007      	b.n	8005480 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8005470:	4b0b      	ldr	r3, [pc, #44]	; (80054a0 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8005472:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8005474:	4b0b      	ldr	r3, [pc, #44]	; (80054a4 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8005476:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8005478:	4b0b      	ldr	r3, [pc, #44]	; (80054a8 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 800547a:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 800547c:	2c00      	cmp	r4, #0
 800547e:	d1e8      	bne.n	8005452 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8005480:	bd38      	pop	{r3, r4, r5, pc}
 8005482:	bf00      	nop
 8005484:	200029b4 	.word	0x200029b4
 8005488:	200029b8 	.word	0x200029b8
 800548c:	200029bc 	.word	0x200029bc
 8005490:	200029c0 	.word	0x200029c0
 8005494:	200137b0 	.word	0x200137b0
 8005498:	200137b8 	.word	0x200137b8
 800549c:	200137b4 	.word	0x200137b4
 80054a0:	080314ec 	.word	0x080314ec
 80054a4:	080314d0 	.word	0x080314d0
 80054a8:	0803154c 	.word	0x0803154c

080054ac <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 80054ac:	4b04      	ldr	r3, [pc, #16]	; (80054c0 <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 80054ae:	681b      	ldr	r3, [r3, #0]
 80054b0:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80054b4:	4b03      	ldr	r3, [pc, #12]	; (80054c4 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 80054b6:	681b      	ldr	r3, [r3, #0]
}
 80054b8:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 80054bc:	4770      	bx	lr
 80054be:	bf00      	nop
 80054c0:	200029bc 	.word	0x200029bc
 80054c4:	200029b8 	.word	0x200029b8

080054c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80054c8:	2007      	movs	r0, #7
 80054ca:	4770      	bx	lr

080054cc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80054cc:	4800      	ldr	r0, [pc, #0]	; (80054d0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80054ce:	4770      	bx	lr
 80054d0:	200029c4 	.word	0x200029c4

080054d4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80054d4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80054d6:	f7ff fc23 	bl	8004d20 <_Z23getFont_verdana_20_4bppv>
};
 80054da:	4c04      	ldr	r4, [pc, #16]	; (80054ec <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80054dc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80054de:	f7ff fc5d 	bl	8004d9c <_Z23getFont_verdana_40_4bppv>
};
 80054e2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80054e4:	f7ff fbe0 	bl	8004ca8 <_Z23getFont_verdana_10_4bppv>
};
 80054e8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80054ea:	bd10      	pop	{r4, pc}
 80054ec:	200029c4 	.word	0x200029c4

080054f0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80054f0:	4770      	bx	lr

080054f2 <_ZN19FrontendApplicationD0Ev>:
 80054f2:	b510      	push	{r4, lr}
 80054f4:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80054f8:	4604      	mov	r4, r0
 80054fa:	f01c fd4e 	bl	8021f9a <_ZdlPvj>
 80054fe:	4620      	mov	r0, r4
 8005500:	bd10      	pop	{r4, pc}

08005502 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8005502:	b510      	push	{r4, lr}
 8005504:	4604      	mov	r4, r0
    {
        model.tick();
 8005506:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 800550a:	f000 f906 	bl	800571a <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800550e:	4620      	mov	r0, r4
    }
 8005510:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8005514:	f00c babc 	b.w	8011a90 <_ZN8touchgfx11Application15handleTickEventEv>

08005518 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8005518:	b510      	push	{r4, lr}
 800551a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800551c:	f7fe f900 	bl	8003720 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8005520:	4b01      	ldr	r3, [pc, #4]	; (8005528 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8005522:	6023      	str	r3, [r4, #0]
{

}
 8005524:	4620      	mov	r0, r4
 8005526:	bd10      	pop	{r4, pc}
 8005528:	080297d4 	.word	0x080297d4

0800552c <_ZN13ModelListener25vUpdateLedCmdToggleBottonEb>:
    virtual void vUpdateLedCmdToggleBotton(bool bIsLedOn) {}
 800552c:	4770      	bx	lr

0800552e <_ZN13ModelListener33vUpdateTemperatureValueInAutoModeEf>:
    virtual void vUpdateTemperatureValueInAutoMode(float fTemperatureValue) {}
 800552e:	4770      	bx	lr

08005530 <_ZN29GetTemperatureScreenPresenterD1Ev>:
     */
    virtual void deactivate();

    virtual void vUpdateTemperature();

    virtual ~GetTemperatureScreenPresenter() {};
 8005530:	4770      	bx	lr

08005532 <_ZThn4_N29GetTemperatureScreenPresenterD1Ev>:
 8005532:	3804      	subs	r0, #4
 8005534:	4770      	bx	lr

08005536 <_ZN29GetTemperatureScreenPresenter10deactivateEv>:
}

void GetTemperatureScreenPresenter::activate()
{

}
 8005536:	4770      	bx	lr

08005538 <_ZN29GetTemperatureScreenPresenterD0Ev>:
 8005538:	b510      	push	{r4, lr}
 800553a:	2110      	movs	r1, #16
 800553c:	4604      	mov	r4, r0
 800553e:	f01c fd2c 	bl	8021f9a <_ZdlPvj>
 8005542:	4620      	mov	r0, r4
 8005544:	bd10      	pop	{r4, pc}

08005546 <_ZThn4_N29GetTemperatureScreenPresenterD0Ev>:
 8005546:	f1a0 0004 	sub.w	r0, r0, #4
 800554a:	e7f5      	b.n	8005538 <_ZN29GetTemperatureScreenPresenterD0Ev>

0800554c <_ZN29GetTemperatureScreenPresenter18vUpdateTemperatureEv>:

}

void GetTemperatureScreenPresenter::vUpdateTemperature()
{
	view.vSetTemperature(21);
 800554c:	68c0      	ldr	r0, [r0, #12]
 800554e:	2115      	movs	r1, #21
 8005550:	f000 b84a 	b.w	80055e8 <_ZN24GetTemperatureScreenView15vSetTemperatureEi>

08005554 <_ZThn4_N29GetTemperatureScreenPresenter18vUpdateTemperatureEv>:
    virtual void vUpdateTemperature();
 8005554:	f1a0 0004 	sub.w	r0, r0, #4
 8005558:	f7ff bff8 	b.w	800554c <_ZN29GetTemperatureScreenPresenter18vUpdateTemperatureEv>

0800555c <_ZN29GetTemperatureScreenPresenterC1ER24GetTemperatureScreenView>:
GetTemperatureScreenPresenter::GetTemperatureScreenPresenter(GetTemperatureScreenView& v)
 800555c:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800555e:	2200      	movs	r2, #0
 8005560:	6082      	str	r2, [r0, #8]
    : view(v)
 8005562:	4a04      	ldr	r2, [pc, #16]	; (8005574 <_ZN29GetTemperatureScreenPresenterC1ER24GetTemperatureScreenView+0x18>)
 8005564:	60c1      	str	r1, [r0, #12]
 8005566:	f102 0408 	add.w	r4, r2, #8
 800556a:	3224      	adds	r2, #36	; 0x24
 800556c:	6004      	str	r4, [r0, #0]
 800556e:	6042      	str	r2, [r0, #4]
}
 8005570:	bd10      	pop	{r4, pc}
 8005572:	bf00      	nop
 8005574:	08029818 	.word	0x08029818

08005578 <_ZN24GetTemperatureScreenView14tearDownScreenEv>:
}

void GetTemperatureScreenView::tearDownScreen()
{
    GetTemperatureScreenViewBase::tearDownScreen();
}
 8005578:	4770      	bx	lr
	...

0800557c <_ZN24GetTemperatureScreenViewD1Ev>:

class GetTemperatureScreenView : public GetTemperatureScreenViewBase
{
public:
    GetTemperatureScreenView();
    virtual ~GetTemperatureScreenView() {}
 800557c:	b510      	push	{r4, lr}
 800557e:	4b03      	ldr	r3, [pc, #12]	; (800558c <_ZN24GetTemperatureScreenViewD1Ev+0x10>)
 8005580:	6003      	str	r3, [r0, #0]
 8005582:	4604      	mov	r4, r0
 8005584:	f7fe ff1b 	bl	80043be <_ZN28GetTemperatureScreenViewBaseD1Ev>
 8005588:	4620      	mov	r0, r4
 800558a:	bd10      	pop	{r4, pc}
 800558c:	08029858 	.word	0x08029858

08005590 <_ZN24GetTemperatureScreenViewD0Ev>:
 8005590:	b510      	push	{r4, lr}
 8005592:	4604      	mov	r4, r0
 8005594:	f7ff fff2 	bl	800557c <_ZN24GetTemperatureScreenViewD1Ev>
 8005598:	4620      	mov	r0, r4
 800559a:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 800559e:	f01c fcfc 	bl	8021f9a <_ZdlPvj>
 80055a2:	4620      	mov	r0, r4
 80055a4:	bd10      	pop	{r4, pc}

080055a6 <_ZN24GetTemperatureScreenView15handleTickEventEv>:
	L_temperature.invalidate();
}

void GetTemperatureScreenView ::handleTickEvent()
{
	iTickCounter++;
 80055a6:	f8d0 31d4 	ldr.w	r3, [r0, #468]	; 0x1d4
 80055aa:	3301      	adds	r3, #1
	if(iTickCounter>60)
 80055ac:	2b3c      	cmp	r3, #60	; 0x3c
 80055ae:	dc02      	bgt.n	80055b6 <_ZN24GetTemperatureScreenView15handleTickEventEv+0x10>
	iTickCounter++;
 80055b0:	f8c0 31d4 	str.w	r3, [r0, #468]	; 0x1d4
 80055b4:	4770      	bx	lr
	{
		iTickCounter = 0;
		iTemp++;
 80055b6:	f8d0 21d8 	ldr.w	r2, [r0, #472]	; 0x1d8
 80055ba:	3201      	adds	r2, #1
		iTickCounter = 0;
 80055bc:	2300      	movs	r3, #0
		iTemp++;
 80055be:	2a64      	cmp	r2, #100	; 0x64
		iTickCounter = 0;
 80055c0:	f8c0 31d4 	str.w	r3, [r0, #468]	; 0x1d4
		iTemp++;
 80055c4:	bfd8      	it	le
 80055c6:	4613      	movle	r3, r2
 80055c8:	f8c0 31d8 	str.w	r3, [r0, #472]	; 0x1d8
			iTemp = 0;
		}
		//Unicode::snprintf(L_temperatureBuffer, L_TEMPERATURE_SIZE, "%d", iTemp);
		//L_temperature.invalidate();
	}
}
 80055cc:	4770      	bx	lr
	...

080055d0 <_ZN24GetTemperatureScreenViewC1Ev>:
GetTemperatureScreenView::GetTemperatureScreenView()
 80055d0:	b510      	push	{r4, lr}
 80055d2:	4604      	mov	r4, r0
 80055d4:	f7fe ffc0 	bl	8004558 <_ZN28GetTemperatureScreenViewBaseC1Ev>
 80055d8:	4b01      	ldr	r3, [pc, #4]	; (80055e0 <_ZN24GetTemperatureScreenViewC1Ev+0x10>)
 80055da:	6023      	str	r3, [r4, #0]
}
 80055dc:	4620      	mov	r0, r4
 80055de:	bd10      	pop	{r4, pc}
 80055e0:	08029858 	.word	0x08029858

080055e4 <_ZN24GetTemperatureScreenView11setupScreenEv>:
    GetTemperatureScreenViewBase::setupScreen();
 80055e4:	f7fe beec 	b.w	80043c0 <_ZN28GetTemperatureScreenViewBase11setupScreenEv>

080055e8 <_ZN24GetTemperatureScreenView15vSetTemperatureEi>:
{
 80055e8:	b510      	push	{r4, lr}
 80055ea:	460b      	mov	r3, r1
 80055ec:	4604      	mov	r4, r0
	Unicode::snprintf(L_temperatureBuffer, L_TEMPERATURE_SIZE, "%d", fTemp);
 80055ee:	4a06      	ldr	r2, [pc, #24]	; (8005608 <_ZN24GetTemperatureScreenView15vSetTemperatureEi+0x20>)
 80055f0:	2114      	movs	r1, #20
 80055f2:	f500 70ce 	add.w	r0, r0, #412	; 0x19c
 80055f6:	f00f fa79 	bl	8014aec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	L_temperature.invalidate();
 80055fa:	f504 7088 	add.w	r0, r4, #272	; 0x110
}
 80055fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	L_temperature.invalidate();
 8005602:	f00d ba37 	b.w	8012a74 <_ZNK8touchgfx8Drawable10invalidateEv>
 8005606:	bf00      	nop
 8005608:	08029c61 	.word	0x08029c61

0800560c <_ZN13ModelListener18vUpdateTemperatureEv>:
    virtual void vUpdateTemperature() {}
 800560c:	4770      	bx	lr

0800560e <_ZN25LedCommandScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~LedCommandScreenPresenter() {};
 800560e:	4770      	bx	lr

08005610 <_ZThn4_N25LedCommandScreenPresenterD1Ev>:
 8005610:	3804      	subs	r0, #4
 8005612:	4770      	bx	lr

08005614 <_ZN25LedCommandScreenPresenter10deactivateEv>:
}

void LedCommandScreenPresenter::deactivate()
{

}
 8005614:	4770      	bx	lr

08005616 <_ZN25LedCommandScreenPresenterD0Ev>:
 8005616:	b510      	push	{r4, lr}
 8005618:	2110      	movs	r1, #16
 800561a:	4604      	mov	r4, r0
 800561c:	f01c fcbd 	bl	8021f9a <_ZdlPvj>
 8005620:	4620      	mov	r0, r4
 8005622:	bd10      	pop	{r4, pc}

08005624 <_ZThn4_N25LedCommandScreenPresenterD0Ev>:
 8005624:	f1a0 0004 	sub.w	r0, r0, #4
 8005628:	e7f5      	b.n	8005616 <_ZN25LedCommandScreenPresenterD0Ev>

0800562a <_ZN25LedCommandScreenPresenter8activateEv>:
	model->vRequestLedState();
 800562a:	6880      	ldr	r0, [r0, #8]
 800562c:	f000 b8b5 	b.w	800579a <_ZN5Model16vRequestLedStateEv>

08005630 <_ZN25LedCommandScreenPresenter25vUpdateLedCmdToggleBottonEb>:

void LedCommandScreenPresenter::vUpdateLedCmdToggleBotton(bool bIsLedOn)
{
	if(bIsLedOn)
	{
		view.vSetLedCmdToggleButtonState(false);
 8005630:	68c0      	ldr	r0, [r0, #12]
	if(bIsLedOn)
 8005632:	b111      	cbz	r1, 800563a <_ZN25LedCommandScreenPresenter25vUpdateLedCmdToggleBottonEb+0xa>
		view.vSetLedCmdToggleButtonState(false);
 8005634:	2100      	movs	r1, #0
	}
	else
	{
		view.vSetLedCmdToggleButtonState(true);
 8005636:	f000 b865 	b.w	8005704 <_ZN20LedCommandScreenView27vSetLedCmdToggleButtonStateEb>
 800563a:	2101      	movs	r1, #1
 800563c:	e7fb      	b.n	8005636 <_ZN25LedCommandScreenPresenter25vUpdateLedCmdToggleBottonEb+0x6>

0800563e <_ZThn4_N25LedCommandScreenPresenter25vUpdateLedCmdToggleBottonEb>:

    void vSetLed(bool bIsBottonToggled);
    virtual void vUpdateLedCmdToggleBotton(bool bIsLedOn);
 800563e:	f1a0 0004 	sub.w	r0, r0, #4
 8005642:	f7ff bff5 	b.w	8005630 <_ZN25LedCommandScreenPresenter25vUpdateLedCmdToggleBottonEb>
	...

08005648 <_ZN25LedCommandScreenPresenterC1ER20LedCommandScreenView>:
LedCommandScreenPresenter::LedCommandScreenPresenter(LedCommandScreenView& v)
 8005648:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800564a:	2200      	movs	r2, #0
 800564c:	6082      	str	r2, [r0, #8]
    : view(v)
 800564e:	4a04      	ldr	r2, [pc, #16]	; (8005660 <_ZN25LedCommandScreenPresenterC1ER20LedCommandScreenView+0x18>)
 8005650:	60c1      	str	r1, [r0, #12]
 8005652:	f102 0408 	add.w	r4, r2, #8
 8005656:	3224      	adds	r2, #36	; 0x24
 8005658:	6004      	str	r4, [r0, #0]
 800565a:	6042      	str	r2, [r0, #4]
}
 800565c:	bd10      	pop	{r4, pc}
 800565e:	bf00      	nop
 8005660:	08029884 	.word	0x08029884

08005664 <_ZN25LedCommandScreenPresenter7vSetLedEb>:
		model->vUserToggleLed(false);
 8005664:	6880      	ldr	r0, [r0, #8]
	if(bIsBottonToggled)
 8005666:	b111      	cbz	r1, 800566e <_ZN25LedCommandScreenPresenter7vSetLedEb+0xa>
		model->vUserToggleLed(false);
 8005668:	2100      	movs	r1, #0
		model->vUserToggleLed(true);
 800566a:	f000 b87d 	b.w	8005768 <_ZN5Model14vUserToggleLedEb>
 800566e:	2101      	movs	r1, #1
 8005670:	e7fb      	b.n	800566a <_ZN25LedCommandScreenPresenter7vSetLedEb+0x6>

08005672 <_ZN20LedCommandScreenView14tearDownScreenEv>:
}

void LedCommandScreenView::tearDownScreen()
{
    LedCommandScreenViewBase::tearDownScreen();
}
 8005672:	4770      	bx	lr

08005674 <_ZN20LedCommandScreenViewD1Ev>:

class LedCommandScreenView : public LedCommandScreenViewBase
{
public:
    LedCommandScreenView();
    virtual ~LedCommandScreenView() {}
 8005674:	b510      	push	{r4, lr}
 8005676:	4b03      	ldr	r3, [pc, #12]	; (8005684 <_ZN20LedCommandScreenViewD1Ev+0x10>)
 8005678:	6003      	str	r3, [r0, #0]
 800567a:	4604      	mov	r4, r0
 800567c:	f7ff f8e5 	bl	800484a <_ZN24LedCommandScreenViewBaseD1Ev>
 8005680:	4620      	mov	r0, r4
 8005682:	bd10      	pop	{r4, pc}
 8005684:	08029978 	.word	0x08029978

08005688 <_ZN20LedCommandScreenViewD0Ev>:
 8005688:	b510      	push	{r4, lr}
 800568a:	4604      	mov	r4, r0
 800568c:	f7ff fff2 	bl	8005674 <_ZN20LedCommandScreenViewD1Ev>
 8005690:	4620      	mov	r0, r4
 8005692:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 8005696:	f01c fc80 	bl	8021f9a <_ZdlPvj>
 800569a:	4620      	mov	r0, r4
 800569c:	bd10      	pop	{r4, pc}
	...

080056a0 <_ZNK8touchgfx6Bitmap5getIdEv>:
    BitmapId getId() const
 80056a0:	b508      	push	{r3, lr}
        assert(bitmaps != 0 && "Bitmap database has not been initialized.");
 80056a2:	4b05      	ldr	r3, [pc, #20]	; (80056b8 <_ZNK8touchgfx6Bitmap5getIdEv+0x18>)
 80056a4:	681b      	ldr	r3, [r3, #0]
 80056a6:	b92b      	cbnz	r3, 80056b4 <_ZNK8touchgfx6Bitmap5getIdEv+0x14>
 80056a8:	4b04      	ldr	r3, [pc, #16]	; (80056bc <_ZNK8touchgfx6Bitmap5getIdEv+0x1c>)
 80056aa:	4a05      	ldr	r2, [pc, #20]	; (80056c0 <_ZNK8touchgfx6Bitmap5getIdEv+0x20>)
 80056ac:	4805      	ldr	r0, [pc, #20]	; (80056c4 <_ZNK8touchgfx6Bitmap5getIdEv+0x24>)
 80056ae:	2187      	movs	r1, #135	; 0x87
 80056b0:	f01d fa86 	bl	8022bc0 <__assert_func>
    }
 80056b4:	8800      	ldrh	r0, [r0, #0]
 80056b6:	bd08      	pop	{r3, pc}
 80056b8:	200137e8 	.word	0x200137e8
 80056bc:	080298bc 	.word	0x080298bc
 80056c0:	080298f8 	.word	0x080298f8
 80056c4:	0802992b 	.word	0x0802992b

080056c8 <_ZN20LedCommandScreenView16vTBLedCmdClickedEv>:

void LedCommandScreenView::vTBLedCmdClicked()
{
 80056c8:	b538      	push	{r3, r4, r5, lr}
 80056ca:	4604      	mov	r4, r0
     * @return True if the button has been toggled, i.e. the pressed state is shown when the
     *         button is not pressed.
     */
    bool getState() const
    {
        return up.getId() == originalPressed.getId();
 80056cc:	f500 709f 	add.w	r0, r0, #318	; 0x13e
 80056d0:	f7ff ffe6 	bl	80056a0 <_ZNK8touchgfx6Bitmap5getIdEv>
 80056d4:	4605      	mov	r5, r0
 80056d6:	f504 70a2 	add.w	r0, r4, #324	; 0x144
 80056da:	f7ff ffe1 	bl	80056a0 <_ZNK8touchgfx6Bitmap5getIdEv>
	presenter->vSetLed(tbCmdLed.getState());
 80056de:	1a2b      	subs	r3, r5, r0
 80056e0:	4259      	negs	r1, r3
 80056e2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80056e4:	4159      	adcs	r1, r3
}
 80056e6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
	presenter->vSetLed(tbCmdLed.getState());
 80056ea:	f7ff bfbb 	b.w	8005664 <_ZN25LedCommandScreenPresenter7vSetLedEb>
	...

080056f0 <_ZN20LedCommandScreenViewC1Ev>:
LedCommandScreenView::LedCommandScreenView()
 80056f0:	b510      	push	{r4, lr}
 80056f2:	4604      	mov	r4, r0
 80056f4:	f7ff f906 	bl	8004904 <_ZN24LedCommandScreenViewBaseC1Ev>
 80056f8:	4b01      	ldr	r3, [pc, #4]	; (8005700 <_ZN20LedCommandScreenViewC1Ev+0x10>)
 80056fa:	6023      	str	r3, [r4, #0]
}
 80056fc:	4620      	mov	r0, r4
 80056fe:	bd10      	pop	{r4, pc}
 8005700:	08029978 	.word	0x08029978

08005704 <_ZN20LedCommandScreenView27vSetLedCmdToggleButtonStateEb>:

void LedCommandScreenView::vSetLedCmdToggleButtonState(bool bIsButtonPressed)
{
	tbCmdLed.forceState(bIsButtonPressed);
 8005704:	f500 7088 	add.w	r0, r0, #272	; 0x110
 8005708:	f008 bac1 	b.w	800dc8e <_ZN8touchgfx12ToggleButton10forceStateEb>

0800570c <_ZN20LedCommandScreenView11setupScreenEv>:
    LedCommandScreenViewBase::setupScreen();
 800570c:	f7ff b89e 	b.w	800484c <_ZN24LedCommandScreenViewBase11setupScreenEv>

08005710 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

//static int iTempCounter;

Model::Model() : modelListener(0)
 8005710:	2200      	movs	r2, #0
 8005712:	6002      	str	r2, [r0, #0]
{
	xFrontendSystemStatus.enTemperatureUnit = enTemperatureUnitC;
 8005714:	f880 2039 	strb.w	r2, [r0, #57]	; 0x39
}
 8005718:	4770      	bx	lr

0800571a <_ZN5Model4tickEv>:

void Model::tick()
{
 800571a:	b510      	push	{r4, lr}
//	else
//	{
//		iTempCounter++;
//	}

	xFrontendSystemStatus.bRxQueueStatus = bReceiveQueue(enModule_Frontend, &(xFrontendSystemStatus.xMsg), 1);
 800571c:	f100 010c 	add.w	r1, r0, #12
{
 8005720:	4604      	mov	r4, r0
	xFrontendSystemStatus.bRxQueueStatus = bReceiveQueue(enModule_Frontend, &(xFrontendSystemStatus.xMsg), 1);
 8005722:	2201      	movs	r2, #1
 8005724:	2002      	movs	r0, #2
 8005726:	f7fc fc89 	bl	800203c <bReceiveQueue>
 800572a:	7220      	strb	r0, [r4, #8]
	if(xFrontendSystemStatus.bRxQueueStatus)
 800572c:	b1d8      	cbz	r0, 8005766 <_ZN5Model4tickEv+0x4c>
	{
		if(xFrontendSystemStatus.xMsg.enModuleSource == enModule_BackendSystem)
 800572e:	7b23      	ldrb	r3, [r4, #12]
 8005730:	b9cb      	cbnz	r3, 8005766 <_ZN5Model4tickEv+0x4c>
		{
			if(xFrontendSystemStatus.xMsg.enMsgId == enQueueMsg_FrontendLedStateResponse)
 8005732:	7b63      	ldrb	r3, [r4, #13]
 8005734:	2b0e      	cmp	r3, #14
 8005736:	d106      	bne.n	8005746 <_ZN5Model4tickEv+0x2c>
			{
				if(xFrontendSystemStatus.xMsg.enMsgPayload.ui8[0] && 0x01)
				{
					modelListener->vUpdateLedCmdToggleBotton(true);
 8005738:	6820      	ldr	r0, [r4, #0]
				if(xFrontendSystemStatus.xMsg.enMsgPayload.ui8[0] && 0x01)
 800573a:	7c21      	ldrb	r1, [r4, #16]
					modelListener->vUpdateLedCmdToggleBotton(true);
 800573c:	6803      	ldr	r3, [r0, #0]
 800573e:	68db      	ldr	r3, [r3, #12]
				if(xFrontendSystemStatus.xMsg.enMsgPayload.ui8[0] && 0x01)
 8005740:	b101      	cbz	r1, 8005744 <_ZN5Model4tickEv+0x2a>
					modelListener->vUpdateLedCmdToggleBotton(true);
 8005742:	2101      	movs	r1, #1
				}
				else
				{
					modelListener->vUpdateLedCmdToggleBotton(false);
 8005744:	4798      	blx	r3
				}

			}
			if(xFrontendSystemStatus.xMsg.enMsgId == enQueueMsg_FrontendUpdateTemperatureAutoMode)
 8005746:	7b63      	ldrb	r3, [r4, #13]
 8005748:	2b10      	cmp	r3, #16
 800574a:	d10c      	bne.n	8005766 <_ZN5Model4tickEv+0x4c>
			{
				// message type should be float and length is 1
				if((xFrontendSystemStatus.xMsg.enMsgType == enQueueMsgType_float) && (xFrontendSystemStatus.xMsg.enMsgLength == 1))
 800574c:	89e2      	ldrh	r2, [r4, #14]
 800574e:	f240 1301 	movw	r3, #257	; 0x101
 8005752:	429a      	cmp	r2, r3
 8005754:	d107      	bne.n	8005766 <_ZN5Model4tickEv+0x4c>
				{
					modelListener->vUpdateTemperatureValueInAutoMode(xFrontendSystemStatus.xMsg.enMsgPayload.f[0]);
 8005756:	6820      	ldr	r0, [r4, #0]
 8005758:	ed94 0a04 	vldr	s0, [r4, #16]
 800575c:	6803      	ldr	r3, [r0, #0]
				}
			}
		}
	}

}
 800575e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					modelListener->vUpdateTemperatureValueInAutoMode(xFrontendSystemStatus.xMsg.enMsgPayload.f[0]);
 8005762:	691b      	ldr	r3, [r3, #16]
 8005764:	4718      	bx	r3
}
 8005766:	bd10      	pop	{r4, pc}

08005768 <_ZN5Model14vUserToggleLedEb>:

void Model::vUserToggleLed(bool bIsTurnLedOn)
{
 8005768:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800576a:	2201      	movs	r2, #1
 800576c:	f10d 000f 	add.w	r0, sp, #15
	uint8_t u8LedState;
	if(bIsTurnLedOn)
 8005770:	b161      	cbz	r1, 800578c <_ZN5Model14vUserToggleLedEb+0x24>
	{
		u8LedState = 1;
		bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemSetLedState, enQueueMsgType_byte, 1, &u8LedState);
 8005772:	e9cd 2000 	strd	r2, r0, [sp]
		u8LedState = 1;
 8005776:	f88d 200f 	strb.w	r2, [sp, #15]
		bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemSetLedState, enQueueMsgType_byte, 1, &u8LedState);
 800577a:	2304      	movs	r3, #4
 800577c:	2202      	movs	r2, #2
 800577e:	2100      	movs	r1, #0
	}
	else
	{
		u8LedState = 0;
		bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemSetLedState, enQueueMsgType_byte, 1, &u8LedState);
 8005780:	4610      	mov	r0, r2
 8005782:	f7fc fbc9 	bl	8001f18 <bSendQueue>
	}
}
 8005786:	b005      	add	sp, #20
 8005788:	f85d fb04 	ldr.w	pc, [sp], #4
		bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemSetLedState, enQueueMsgType_byte, 1, &u8LedState);
 800578c:	e9cd 2000 	strd	r2, r0, [sp]
		u8LedState = 0;
 8005790:	f88d 100f 	strb.w	r1, [sp, #15]
		bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemSetLedState, enQueueMsgType_byte, 1, &u8LedState);
 8005794:	2304      	movs	r3, #4
 8005796:	2202      	movs	r2, #2
 8005798:	e7f2      	b.n	8005780 <_ZN5Model14vUserToggleLedEb+0x18>

0800579a <_ZN5Model16vRequestLedStateEv>:

void Model::vRequestLedState()
{
 800579a:	b507      	push	{r0, r1, r2, lr}
	bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemGettLedState, enQueueMsgType_NONE, 0, NULL);
 800579c:	2300      	movs	r3, #0
 800579e:	e9cd 3300 	strd	r3, r3, [sp]
 80057a2:	2203      	movs	r2, #3
 80057a4:	4619      	mov	r1, r3
 80057a6:	2002      	movs	r0, #2
 80057a8:	f7fc fbb6 	bl	8001f18 <bSendQueue>
}
 80057ac:	b003      	add	sp, #12
 80057ae:	f85d fb04 	ldr.w	pc, [sp], #4

080057b2 <_ZN5Model31vRequestStartAutoGetTemperatureEv>:

void Model::vRequestStartAutoGetTemperature()
{
 80057b2:	b507      	push	{r0, r1, r2, lr}
	bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemStartAutoGetTemperature,  enQueueMsgType_NONE, 0, NULL);
 80057b4:	2300      	movs	r3, #0
 80057b6:	e9cd 3300 	strd	r3, r3, [sp]
 80057ba:	2204      	movs	r2, #4
 80057bc:	4619      	mov	r1, r3
 80057be:	2002      	movs	r0, #2
 80057c0:	f7fc fbaa 	bl	8001f18 <bSendQueue>
}
 80057c4:	b003      	add	sp, #12
 80057c6:	f85d fb04 	ldr.w	pc, [sp], #4

080057ca <_ZN5Model30vRequestStopAutoGetTemperatureEv>:

void Model::vRequestStopAutoGetTemperature()
{
 80057ca:	b507      	push	{r0, r1, r2, lr}
	bSendQueue(enModule_Frontend, enModule_BackendSystem, enQueueMsg_BackendSystemStopAutoGetTemperature,  enQueueMsgType_NONE, 0, NULL);
 80057cc:	2300      	movs	r3, #0
 80057ce:	e9cd 3300 	strd	r3, r3, [sp]
 80057d2:	2205      	movs	r2, #5
 80057d4:	4619      	mov	r1, r3
 80057d6:	2002      	movs	r0, #2
 80057d8:	f7fc fb9e 	bl	8001f18 <bSendQueue>
}
 80057dc:	b003      	add	sp, #12
 80057de:	f85d fb04 	ldr.w	pc, [sp], #4

080057e2 <_ZN21SplashScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~SplashScreenPresenter() {};
 80057e2:	4770      	bx	lr

080057e4 <_ZThn4_N21SplashScreenPresenterD1Ev>:
 80057e4:	3804      	subs	r0, #4
 80057e6:	4770      	bx	lr

080057e8 <_ZN21SplashScreenPresenter10deactivateEv>:
}

void SplashScreenPresenter::activate()
{

}
 80057e8:	4770      	bx	lr

080057ea <_ZN21SplashScreenPresenterD0Ev>:
 80057ea:	b510      	push	{r4, lr}
 80057ec:	2110      	movs	r1, #16
 80057ee:	4604      	mov	r4, r0
 80057f0:	f01c fbd3 	bl	8021f9a <_ZdlPvj>
 80057f4:	4620      	mov	r0, r4
 80057f6:	bd10      	pop	{r4, pc}

080057f8 <_ZThn4_N21SplashScreenPresenterD0Ev>:
 80057f8:	f1a0 0004 	sub.w	r0, r0, #4
 80057fc:	e7f5      	b.n	80057ea <_ZN21SplashScreenPresenterD0Ev>
	...

08005800 <_ZN21SplashScreenPresenterC1ER16SplashScreenView>:
SplashScreenPresenter::SplashScreenPresenter(SplashScreenView& v)
 8005800:	b510      	push	{r4, lr}
 8005802:	2200      	movs	r2, #0
 8005804:	6082      	str	r2, [r0, #8]
    : view(v)
 8005806:	4a04      	ldr	r2, [pc, #16]	; (8005818 <_ZN21SplashScreenPresenterC1ER16SplashScreenView+0x18>)
 8005808:	60c1      	str	r1, [r0, #12]
 800580a:	f102 0408 	add.w	r4, r2, #8
 800580e:	3220      	adds	r2, #32
 8005810:	6004      	str	r4, [r0, #0]
 8005812:	6042      	str	r2, [r0, #4]
}
 8005814:	bd10      	pop	{r4, pc}
 8005816:	bf00      	nop
 8005818:	080299a8 	.word	0x080299a8

0800581c <_ZN16SplashScreenView14tearDownScreenEv>:
}

void SplashScreenView::tearDownScreen()
{
    SplashScreenViewBase::tearDownScreen();
}
 800581c:	4770      	bx	lr
	...

08005820 <_ZN16SplashScreenViewD1Ev>:

class SplashScreenView : public SplashScreenViewBase
{
public:
    SplashScreenView();
    virtual ~SplashScreenView() {}
 8005820:	b510      	push	{r4, lr}
 8005822:	4b03      	ldr	r3, [pc, #12]	; (8005830 <_ZN16SplashScreenViewD1Ev+0x10>)
 8005824:	6003      	str	r3, [r0, #0]
 8005826:	4604      	mov	r4, r0
 8005828:	f7ff f9b2 	bl	8004b90 <_ZN20SplashScreenViewBaseD1Ev>
 800582c:	4620      	mov	r0, r4
 800582e:	bd10      	pop	{r4, pc}
 8005830:	080299e4 	.word	0x080299e4

08005834 <_ZN16SplashScreenViewD0Ev>:
 8005834:	b510      	push	{r4, lr}
 8005836:	4604      	mov	r4, r0
 8005838:	f7ff fff2 	bl	8005820 <_ZN16SplashScreenViewD1Ev>
 800583c:	4620      	mov	r0, r4
 800583e:	219c      	movs	r1, #156	; 0x9c
 8005840:	f01c fbab 	bl	8021f9a <_ZdlPvj>
 8005844:	4620      	mov	r0, r4
 8005846:	bd10      	pop	{r4, pc}

08005848 <_ZN16SplashScreenViewC1Ev>:
SplashScreenView::SplashScreenView()
 8005848:	b510      	push	{r4, lr}
 800584a:	4604      	mov	r4, r0
 800584c:	f7ff f9c0 	bl	8004bd0 <_ZN20SplashScreenViewBaseC1Ev>
 8005850:	4b01      	ldr	r3, [pc, #4]	; (8005858 <_ZN16SplashScreenViewC1Ev+0x10>)
 8005852:	6023      	str	r3, [r4, #0]
}
 8005854:	4620      	mov	r0, r4
 8005856:	bd10      	pop	{r4, pc}
 8005858:	080299e4 	.word	0x080299e4

0800585c <_ZN16SplashScreenView11setupScreenEv>:
    SplashScreenViewBase::setupScreen();
 800585c:	f7ff b999 	b.w	8004b92 <_ZN20SplashScreenViewBase11setupScreenEv>

08005860 <_ZN26TemperatureScreenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();
    virtual void vUpdateTemperatureValueInAutoMode(float fTemperatureValue);
    virtual ~TemperatureScreenPresenter() {};
 8005860:	4770      	bx	lr

08005862 <_ZThn4_N26TemperatureScreenPresenterD1Ev>:
 8005862:	3804      	subs	r0, #4
 8005864:	4770      	bx	lr

08005866 <_ZN26TemperatureScreenPresenterD0Ev>:
 8005866:	b510      	push	{r4, lr}
 8005868:	2110      	movs	r1, #16
 800586a:	4604      	mov	r4, r0
 800586c:	f01c fb95 	bl	8021f9a <_ZdlPvj>
 8005870:	4620      	mov	r0, r4
 8005872:	bd10      	pop	{r4, pc}

08005874 <_ZThn4_N26TemperatureScreenPresenterD0Ev>:
 8005874:	f1a0 0004 	sub.w	r0, r0, #4
 8005878:	e7f5      	b.n	8005866 <_ZN26TemperatureScreenPresenterD0Ev>

0800587a <_ZN26TemperatureScreenPresenter8activateEv>:

}

void TemperatureScreenPresenter::activate()
{
	model->vRequestStartAutoGetTemperature();
 800587a:	6880      	ldr	r0, [r0, #8]
 800587c:	f7ff bf99 	b.w	80057b2 <_ZN5Model31vRequestStartAutoGetTemperatureEv>

08005880 <_ZN26TemperatureScreenPresenter10deactivateEv>:
}

void TemperatureScreenPresenter::deactivate()
{
	model->vRequestStopAutoGetTemperature();
 8005880:	6880      	ldr	r0, [r0, #8]
 8005882:	f7ff bfa2 	b.w	80057ca <_ZN5Model30vRequestStopAutoGetTemperatureEv>

08005886 <_ZN26TemperatureScreenPresenter33vUpdateTemperatureValueInAutoModeEf>:
}

void TemperatureScreenPresenter::vUpdateTemperatureValueInAutoMode(float fTemperatureValue)
{
	view.vUpdateTemperatureView(fTemperatureValue);
 8005886:	68c0      	ldr	r0, [r0, #12]
 8005888:	f000 b836 	b.w	80058f8 <_ZN21TemperatureScreenView22vUpdateTemperatureViewEf>

0800588c <_ZThn4_N26TemperatureScreenPresenter33vUpdateTemperatureValueInAutoModeEf>:
    virtual void vUpdateTemperatureValueInAutoMode(float fTemperatureValue);
 800588c:	f1a0 0004 	sub.w	r0, r0, #4
 8005890:	f7ff bff9 	b.w	8005886 <_ZN26TemperatureScreenPresenter33vUpdateTemperatureValueInAutoModeEf>

08005894 <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView>:
TemperatureScreenPresenter::TemperatureScreenPresenter(TemperatureScreenView& v)
 8005894:	b510      	push	{r4, lr}
 8005896:	2200      	movs	r2, #0
 8005898:	6082      	str	r2, [r0, #8]
    : view(v)
 800589a:	4a04      	ldr	r2, [pc, #16]	; (80058ac <_ZN26TemperatureScreenPresenterC1ER21TemperatureScreenView+0x18>)
 800589c:	60c1      	str	r1, [r0, #12]
 800589e:	f102 0408 	add.w	r4, r2, #8
 80058a2:	3224      	adds	r2, #36	; 0x24
 80058a4:	6004      	str	r4, [r0, #0]
 80058a6:	6042      	str	r2, [r0, #4]
}
 80058a8:	bd10      	pop	{r4, pc}
 80058aa:	bf00      	nop
 80058ac:	08029a14 	.word	0x08029a14

080058b0 <_ZN21TemperatureScreenView14tearDownScreenEv>:
}

void TemperatureScreenView::tearDownScreen()
{
    TemperatureScreenViewBase::tearDownScreen();
}
 80058b0:	4770      	bx	lr
	...

080058b4 <_ZN21TemperatureScreenViewD1Ev>:

class TemperatureScreenView : public TemperatureScreenViewBase
{
public:
    TemperatureScreenView();
    virtual ~TemperatureScreenView() {}
 80058b4:	b510      	push	{r4, lr}
 80058b6:	4b03      	ldr	r3, [pc, #12]	; (80058c4 <_ZN21TemperatureScreenViewD1Ev+0x10>)
 80058b8:	6003      	str	r3, [r0, #0]
 80058ba:	4604      	mov	r4, r0
 80058bc:	f7ff fafa 	bl	8004eb4 <_ZN25TemperatureScreenViewBaseD1Ev>
 80058c0:	4620      	mov	r0, r4
 80058c2:	bd10      	pop	{r4, pc}
 80058c4:	08029a5c 	.word	0x08029a5c

080058c8 <_ZN21TemperatureScreenViewD0Ev>:
 80058c8:	b510      	push	{r4, lr}
 80058ca:	4604      	mov	r4, r0
 80058cc:	f7ff fff2 	bl	80058b4 <_ZN21TemperatureScreenViewD1Ev>
 80058d0:	4620      	mov	r0, r4
 80058d2:	f241 11bc 	movw	r1, #4540	; 0x11bc
 80058d6:	f01c fb60 	bl	8021f9a <_ZdlPvj>
 80058da:	4620      	mov	r0, r4
 80058dc:	bd10      	pop	{r4, pc}
	...

080058e0 <_ZN21TemperatureScreenViewC1Ev>:
TemperatureScreenView::TemperatureScreenView()
 80058e0:	b510      	push	{r4, lr}
 80058e2:	4604      	mov	r4, r0
 80058e4:	f7ff fb3a 	bl	8004f5c <_ZN25TemperatureScreenViewBaseC1Ev>
 80058e8:	4b01      	ldr	r3, [pc, #4]	; (80058f0 <_ZN21TemperatureScreenViewC1Ev+0x10>)
 80058ea:	6023      	str	r3, [r4, #0]
}
 80058ec:	4620      	mov	r0, r4
 80058ee:	bd10      	pop	{r4, pc}
 80058f0:	08029a5c 	.word	0x08029a5c

080058f4 <_ZN21TemperatureScreenView11setupScreenEv>:
    TemperatureScreenViewBase::setupScreen();
 80058f4:	f7ff ba94 	b.w	8004e20 <_ZN25TemperatureScreenViewBase11setupScreenEv>

080058f8 <_ZN21TemperatureScreenView22vUpdateTemperatureViewEf>:
//		gauge1.updateValue(100, 30);
//	}
}

void TemperatureScreenView::vUpdateTemperatureView(float fTemperatureValue)
{
 80058f8:	b570      	push	{r4, r5, r6, lr}
 80058fa:	ed2d 8b02 	vpush	{d8}
	gauge1.updateValue((int)fTemperatureValue, 5);
 80058fe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
{
 8005902:	4604      	mov	r4, r0
 8005904:	b082      	sub	sp, #8
	gauge1.updateValue((int)fTemperatureValue, 5);
 8005906:	ee17 1a90 	vmov	r1, s15
	memset(&L_TemperatureBuffer, 0, L_TEMPERATURE_SIZE);
 800590a:	f504 755c 	add.w	r5, r4, #880	; 0x370
 800590e:	2614      	movs	r6, #20
	gauge1.updateValue((int)fTemperatureValue, 5);
 8005910:	2205      	movs	r2, #5
 8005912:	f500 70ac 	add.w	r0, r0, #344	; 0x158
{
 8005916:	eeb0 8a40 	vmov.f32	s16, s0
	gauge1.updateValue((int)fTemperatureValue, 5);
 800591a:	f005 ff4a 	bl	800b7b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>
	memset(&L_TemperatureBuffer, 0, L_TEMPERATURE_SIZE);
 800591e:	4632      	mov	r2, r6
 8005920:	2100      	movs	r1, #0
 8005922:	4628      	mov	r0, r5
 8005924:	f01d f9d8 	bl	8022cd8 <memset>
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
    {
        return snprintfFloats(dst, dstSize, format, &value);
 8005928:	4a08      	ldr	r2, [pc, #32]	; (800594c <_ZN21TemperatureScreenView22vUpdateTemperatureViewEf+0x54>)
 800592a:	ed8d 8a01 	vstr	s16, [sp, #4]
 800592e:	ab01      	add	r3, sp, #4
 8005930:	4631      	mov	r1, r6
 8005932:	4628      	mov	r0, r5
 8005934:	f00f fa96 	bl	8014e64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
	Unicode::snprintfFloat(L_TemperatureBuffer, L_TEMPERATURE_SIZE, "%.2f°C", fTemperatureValue);
	L_Temperature.invalidate();
 8005938:	f504 7049 	add.w	r0, r4, #804	; 0x324
}
 800593c:	b002      	add	sp, #8
 800593e:	ecbd 8b02 	vpop	{d8}
 8005942:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	L_Temperature.invalidate();
 8005946:	f00d b895 	b.w	8012a74 <_ZNK8touchgfx8Drawable10invalidateEv>
 800594a:	bf00      	nop
 800594c:	08029a4c 	.word	0x08029a4c

08005950 <ili9341_GetLcdPixelWidth>:
  */
uint16_t ili9341_GetLcdPixelWidth(void)
{
  /* Return LCD PIXEL WIDTH */
  return ILI9341_LCD_PIXEL_WIDTH;
}
 8005950:	20f0      	movs	r0, #240	; 0xf0
 8005952:	4770      	bx	lr

08005954 <ili9341_GetLcdPixelHeight>:
  */
uint16_t ili9341_GetLcdPixelHeight(void)
{
  /* Return LCD PIXEL HEIGHT */
  return ILI9341_LCD_PIXEL_HEIGHT;
}
 8005954:	f44f 70a0 	mov.w	r0, #320	; 0x140
 8005958:	4770      	bx	lr

0800595a <ili9341_DisplayOn>:
  LCD_IO_WriteReg(LCD_Reg);
 800595a:	2029      	movs	r0, #41	; 0x29
 800595c:	f7fd b834 	b.w	80029c8 <LCD_IO_WriteReg>

08005960 <ili9341_DisplayOff>:
 8005960:	2028      	movs	r0, #40	; 0x28
 8005962:	f7fd b831 	b.w	80029c8 <LCD_IO_WriteReg>

08005966 <ili9341_Init>:
{
 8005966:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005968:	f7fd f802 	bl	8002970 <LCD_IO_Init>
  LCD_IO_WriteReg(LCD_Reg);
 800596c:	20ca      	movs	r0, #202	; 0xca
 800596e:	f7fd f82b 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005972:	20c3      	movs	r0, #195	; 0xc3
 8005974:	f7fd f80c 	bl	8002990 <LCD_IO_WriteData>
 8005978:	2008      	movs	r0, #8
 800597a:	f7fd f809 	bl	8002990 <LCD_IO_WriteData>
 800597e:	2050      	movs	r0, #80	; 0x50
 8005980:	f7fd f806 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005984:	20cf      	movs	r0, #207	; 0xcf
 8005986:	f7fd f81f 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 800598a:	2000      	movs	r0, #0
 800598c:	f7fd f800 	bl	8002990 <LCD_IO_WriteData>
 8005990:	20c1      	movs	r0, #193	; 0xc1
 8005992:	f7fc fffd 	bl	8002990 <LCD_IO_WriteData>
 8005996:	2030      	movs	r0, #48	; 0x30
 8005998:	f7fc fffa 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 800599c:	20ed      	movs	r0, #237	; 0xed
 800599e:	f7fd f813 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059a2:	2064      	movs	r0, #100	; 0x64
 80059a4:	f7fc fff4 	bl	8002990 <LCD_IO_WriteData>
 80059a8:	2003      	movs	r0, #3
 80059aa:	f7fc fff1 	bl	8002990 <LCD_IO_WriteData>
 80059ae:	2012      	movs	r0, #18
 80059b0:	f7fc ffee 	bl	8002990 <LCD_IO_WriteData>
 80059b4:	2081      	movs	r0, #129	; 0x81
 80059b6:	f7fc ffeb 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059ba:	20e8      	movs	r0, #232	; 0xe8
 80059bc:	f7fd f804 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059c0:	2085      	movs	r0, #133	; 0x85
 80059c2:	f7fc ffe5 	bl	8002990 <LCD_IO_WriteData>
 80059c6:	2000      	movs	r0, #0
 80059c8:	f7fc ffe2 	bl	8002990 <LCD_IO_WriteData>
 80059cc:	2078      	movs	r0, #120	; 0x78
 80059ce:	f7fc ffdf 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059d2:	20cb      	movs	r0, #203	; 0xcb
 80059d4:	f7fc fff8 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059d8:	2039      	movs	r0, #57	; 0x39
 80059da:	f7fc ffd9 	bl	8002990 <LCD_IO_WriteData>
 80059de:	202c      	movs	r0, #44	; 0x2c
 80059e0:	f7fc ffd6 	bl	8002990 <LCD_IO_WriteData>
 80059e4:	2000      	movs	r0, #0
 80059e6:	f7fc ffd3 	bl	8002990 <LCD_IO_WriteData>
 80059ea:	2034      	movs	r0, #52	; 0x34
 80059ec:	f7fc ffd0 	bl	8002990 <LCD_IO_WriteData>
 80059f0:	2002      	movs	r0, #2
 80059f2:	f7fc ffcd 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 80059f6:	20f7      	movs	r0, #247	; 0xf7
 80059f8:	f7fc ffe6 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 80059fc:	2020      	movs	r0, #32
 80059fe:	f7fc ffc7 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a02:	20ea      	movs	r0, #234	; 0xea
 8005a04:	f7fc ffe0 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a08:	2000      	movs	r0, #0
 8005a0a:	f7fc ffc1 	bl	8002990 <LCD_IO_WriteData>
 8005a0e:	2000      	movs	r0, #0
 8005a10:	f7fc ffbe 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a14:	20b1      	movs	r0, #177	; 0xb1
 8005a16:	f7fc ffd7 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a1a:	2000      	movs	r0, #0
 8005a1c:	f7fc ffb8 	bl	8002990 <LCD_IO_WriteData>
 8005a20:	201b      	movs	r0, #27
 8005a22:	f7fc ffb5 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a26:	20b6      	movs	r0, #182	; 0xb6
 8005a28:	f7fc ffce 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a2c:	200a      	movs	r0, #10
 8005a2e:	f7fc ffaf 	bl	8002990 <LCD_IO_WriteData>
 8005a32:	20a2      	movs	r0, #162	; 0xa2
 8005a34:	f7fc ffac 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a38:	20c0      	movs	r0, #192	; 0xc0
 8005a3a:	f7fc ffc5 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a3e:	2010      	movs	r0, #16
 8005a40:	f7fc ffa6 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a44:	20c1      	movs	r0, #193	; 0xc1
 8005a46:	f7fc ffbf 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a4a:	2010      	movs	r0, #16
 8005a4c:	f7fc ffa0 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a50:	20c5      	movs	r0, #197	; 0xc5
 8005a52:	f7fc ffb9 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a56:	2045      	movs	r0, #69	; 0x45
 8005a58:	f7fc ff9a 	bl	8002990 <LCD_IO_WriteData>
 8005a5c:	2015      	movs	r0, #21
 8005a5e:	f7fc ff97 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a62:	20c7      	movs	r0, #199	; 0xc7
 8005a64:	f7fc ffb0 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a68:	2090      	movs	r0, #144	; 0x90
 8005a6a:	f7fc ff91 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a6e:	2036      	movs	r0, #54	; 0x36
 8005a70:	f7fc ffaa 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a74:	20c8      	movs	r0, #200	; 0xc8
 8005a76:	f7fc ff8b 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a7a:	20f2      	movs	r0, #242	; 0xf2
 8005a7c:	f7fc ffa4 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a80:	2000      	movs	r0, #0
 8005a82:	f7fc ff85 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a86:	20b0      	movs	r0, #176	; 0xb0
 8005a88:	f7fc ff9e 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a8c:	20c2      	movs	r0, #194	; 0xc2
 8005a8e:	f7fc ff7f 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005a92:	20b6      	movs	r0, #182	; 0xb6
 8005a94:	f7fc ff98 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005a98:	200a      	movs	r0, #10
 8005a9a:	f7fc ff79 	bl	8002990 <LCD_IO_WriteData>
 8005a9e:	20a7      	movs	r0, #167	; 0xa7
 8005aa0:	f7fc ff76 	bl	8002990 <LCD_IO_WriteData>
 8005aa4:	2027      	movs	r0, #39	; 0x27
 8005aa6:	f7fc ff73 	bl	8002990 <LCD_IO_WriteData>
 8005aaa:	2004      	movs	r0, #4
 8005aac:	f7fc ff70 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ab0:	202a      	movs	r0, #42	; 0x2a
 8005ab2:	f7fc ff89 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ab6:	2000      	movs	r0, #0
 8005ab8:	f7fc ff6a 	bl	8002990 <LCD_IO_WriteData>
 8005abc:	2000      	movs	r0, #0
 8005abe:	f7fc ff67 	bl	8002990 <LCD_IO_WriteData>
 8005ac2:	2000      	movs	r0, #0
 8005ac4:	f7fc ff64 	bl	8002990 <LCD_IO_WriteData>
 8005ac8:	20ef      	movs	r0, #239	; 0xef
 8005aca:	f7fc ff61 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005ace:	202b      	movs	r0, #43	; 0x2b
 8005ad0:	f7fc ff7a 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005ad4:	2000      	movs	r0, #0
 8005ad6:	f7fc ff5b 	bl	8002990 <LCD_IO_WriteData>
 8005ada:	2000      	movs	r0, #0
 8005adc:	f7fc ff58 	bl	8002990 <LCD_IO_WriteData>
 8005ae0:	2001      	movs	r0, #1
 8005ae2:	f7fc ff55 	bl	8002990 <LCD_IO_WriteData>
 8005ae6:	203f      	movs	r0, #63	; 0x3f
 8005ae8:	f7fc ff52 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005aec:	20f6      	movs	r0, #246	; 0xf6
 8005aee:	f7fc ff6b 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005af2:	2001      	movs	r0, #1
 8005af4:	f7fc ff4c 	bl	8002990 <LCD_IO_WriteData>
 8005af8:	2000      	movs	r0, #0
 8005afa:	f7fc ff49 	bl	8002990 <LCD_IO_WriteData>
 8005afe:	2006      	movs	r0, #6
 8005b00:	f7fc ff46 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b04:	202c      	movs	r0, #44	; 0x2c
 8005b06:	f7fc ff5f 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005b0a:	20c8      	movs	r0, #200	; 0xc8
 8005b0c:	f7fc ffaa 	bl	8002a64 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005b10:	2026      	movs	r0, #38	; 0x26
 8005b12:	f7fc ff59 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b16:	2001      	movs	r0, #1
 8005b18:	f7fc ff3a 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b1c:	20e0      	movs	r0, #224	; 0xe0
 8005b1e:	f7fc ff53 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b22:	200f      	movs	r0, #15
 8005b24:	f7fc ff34 	bl	8002990 <LCD_IO_WriteData>
 8005b28:	2029      	movs	r0, #41	; 0x29
 8005b2a:	f7fc ff31 	bl	8002990 <LCD_IO_WriteData>
 8005b2e:	2024      	movs	r0, #36	; 0x24
 8005b30:	f7fc ff2e 	bl	8002990 <LCD_IO_WriteData>
 8005b34:	200c      	movs	r0, #12
 8005b36:	f7fc ff2b 	bl	8002990 <LCD_IO_WriteData>
 8005b3a:	200e      	movs	r0, #14
 8005b3c:	f7fc ff28 	bl	8002990 <LCD_IO_WriteData>
 8005b40:	2009      	movs	r0, #9
 8005b42:	f7fc ff25 	bl	8002990 <LCD_IO_WriteData>
 8005b46:	204e      	movs	r0, #78	; 0x4e
 8005b48:	f7fc ff22 	bl	8002990 <LCD_IO_WriteData>
 8005b4c:	2078      	movs	r0, #120	; 0x78
 8005b4e:	f7fc ff1f 	bl	8002990 <LCD_IO_WriteData>
 8005b52:	203c      	movs	r0, #60	; 0x3c
 8005b54:	f7fc ff1c 	bl	8002990 <LCD_IO_WriteData>
 8005b58:	2009      	movs	r0, #9
 8005b5a:	f7fc ff19 	bl	8002990 <LCD_IO_WriteData>
 8005b5e:	2013      	movs	r0, #19
 8005b60:	f7fc ff16 	bl	8002990 <LCD_IO_WriteData>
 8005b64:	2005      	movs	r0, #5
 8005b66:	f7fc ff13 	bl	8002990 <LCD_IO_WriteData>
 8005b6a:	2017      	movs	r0, #23
 8005b6c:	f7fc ff10 	bl	8002990 <LCD_IO_WriteData>
 8005b70:	2011      	movs	r0, #17
 8005b72:	f7fc ff0d 	bl	8002990 <LCD_IO_WriteData>
 8005b76:	2000      	movs	r0, #0
 8005b78:	f7fc ff0a 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005b7c:	20e1      	movs	r0, #225	; 0xe1
 8005b7e:	f7fc ff23 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_IO_WriteData(RegValue);
 8005b82:	2000      	movs	r0, #0
 8005b84:	f7fc ff04 	bl	8002990 <LCD_IO_WriteData>
 8005b88:	2016      	movs	r0, #22
 8005b8a:	f7fc ff01 	bl	8002990 <LCD_IO_WriteData>
 8005b8e:	201b      	movs	r0, #27
 8005b90:	f7fc fefe 	bl	8002990 <LCD_IO_WriteData>
 8005b94:	2004      	movs	r0, #4
 8005b96:	f7fc fefb 	bl	8002990 <LCD_IO_WriteData>
 8005b9a:	2011      	movs	r0, #17
 8005b9c:	f7fc fef8 	bl	8002990 <LCD_IO_WriteData>
 8005ba0:	2007      	movs	r0, #7
 8005ba2:	f7fc fef5 	bl	8002990 <LCD_IO_WriteData>
 8005ba6:	2031      	movs	r0, #49	; 0x31
 8005ba8:	f7fc fef2 	bl	8002990 <LCD_IO_WriteData>
 8005bac:	2033      	movs	r0, #51	; 0x33
 8005bae:	f7fc feef 	bl	8002990 <LCD_IO_WriteData>
 8005bb2:	2042      	movs	r0, #66	; 0x42
 8005bb4:	f7fc feec 	bl	8002990 <LCD_IO_WriteData>
 8005bb8:	2005      	movs	r0, #5
 8005bba:	f7fc fee9 	bl	8002990 <LCD_IO_WriteData>
 8005bbe:	200c      	movs	r0, #12
 8005bc0:	f7fc fee6 	bl	8002990 <LCD_IO_WriteData>
 8005bc4:	200a      	movs	r0, #10
 8005bc6:	f7fc fee3 	bl	8002990 <LCD_IO_WriteData>
 8005bca:	2028      	movs	r0, #40	; 0x28
 8005bcc:	f7fc fee0 	bl	8002990 <LCD_IO_WriteData>
 8005bd0:	202f      	movs	r0, #47	; 0x2f
 8005bd2:	f7fc fedd 	bl	8002990 <LCD_IO_WriteData>
 8005bd6:	200f      	movs	r0, #15
 8005bd8:	f7fc feda 	bl	8002990 <LCD_IO_WriteData>
  LCD_IO_WriteReg(LCD_Reg);
 8005bdc:	2011      	movs	r0, #17
 8005bde:	f7fc fef3 	bl	80029c8 <LCD_IO_WriteReg>
  LCD_Delay(200);
 8005be2:	20c8      	movs	r0, #200	; 0xc8
 8005be4:	f7fc ff3e 	bl	8002a64 <LCD_Delay>
  LCD_IO_WriteReg(LCD_Reg);
 8005be8:	2029      	movs	r0, #41	; 0x29
 8005bea:	f7fc feed 	bl	80029c8 <LCD_IO_WriteReg>
}
 8005bee:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  LCD_IO_WriteReg(LCD_Reg);
 8005bf2:	202c      	movs	r0, #44	; 0x2c
 8005bf4:	f7fc bee8 	b.w	80029c8 <LCD_IO_WriteReg>

08005bf8 <ili9341_ReadID>:
{
 8005bf8:	b508      	push	{r3, lr}
  LCD_IO_Init();
 8005bfa:	f7fc feb9 	bl	8002970 <LCD_IO_Init>
  return (LCD_IO_ReadData(RegValue, ReadSize));
 8005bfe:	2103      	movs	r1, #3
 8005c00:	20d3      	movs	r0, #211	; 0xd3
 8005c02:	f7fc fefd 	bl	8002a00 <LCD_IO_ReadData>
}
 8005c06:	b280      	uxth	r0, r0
 8005c08:	bd08      	pop	{r3, pc}
	...

08005c0c <bSendCmd>:

	return bRetValue;
}

static bool bSendCmd(uint16_t u16Cmd)
{
 8005c0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	bool bRetValue = false;
	uint8_t pu8Cmd[2] = {(u16Cmd&0xff00)>>8, u16Cmd&0x00ff};
 8005c0e:	0a03      	lsrs	r3, r0, #8
 8005c10:	f88d 300c 	strb.w	r3, [sp, #12]
 8005c14:	f88d 000d 	strb.w	r0, [sp, #13]

	if(HAL_I2C_Master_Transmit(hi2c, SHT35_DEFAULT_I2C_ADDR, pu8Cmd, 2, SHT35_DEFAULT_I2C_TIMEOUT) == HAL_OK)
 8005c18:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8005c1c:	4806      	ldr	r0, [pc, #24]	; (8005c38 <bSendCmd+0x2c>)
 8005c1e:	9300      	str	r3, [sp, #0]
 8005c20:	aa03      	add	r2, sp, #12
 8005c22:	2302      	movs	r3, #2
 8005c24:	218a      	movs	r1, #138	; 0x8a
 8005c26:	6800      	ldr	r0, [r0, #0]
 8005c28:	f000 ffa0 	bl	8006b6c <HAL_I2C_Master_Transmit>
	{
		bRetValue = true;
	}

	return bRetValue;
}
 8005c2c:	fab0 f080 	clz	r0, r0
 8005c30:	0940      	lsrs	r0, r0, #5
 8005c32:	b005      	add	sp, #20
 8005c34:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c38:	200029d0 	.word	0x200029d0

08005c3c <bReadWordFromAddress.constprop.0>:
static bool bReadWordFromAddress(uint16_t u16RegAddr, uint16_t* pu16RegData)
 8005c3c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
	enStatus = HAL_I2C_Mem_Read(hi2c, SHT35_DEFAULT_I2C_ADDR, u16RegAddr, I2C_MEMADD_SIZE_16BIT, (uint8_t*)pu16RegData, 2, SHT35_DEFAULT_I2C_TIMEOUT);
 8005c3e:	2302      	movs	r3, #2
 8005c40:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 8005c44:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005c48:	9000      	str	r0, [sp, #0]
static bool bReadWordFromAddress(uint16_t u16RegAddr, uint16_t* pu16RegData)
 8005c4a:	4604      	mov	r4, r0
	enStatus = HAL_I2C_Mem_Read(hi2c, SHT35_DEFAULT_I2C_ADDR, u16RegAddr, I2C_MEMADD_SIZE_16BIT, (uint8_t*)pu16RegData, 2, SHT35_DEFAULT_I2C_TIMEOUT);
 8005c4c:	4808      	ldr	r0, [pc, #32]	; (8005c70 <bReadWordFromAddress.constprop.0+0x34>)
 8005c4e:	2310      	movs	r3, #16
 8005c50:	6800      	ldr	r0, [r0, #0]
 8005c52:	f24f 322d 	movw	r2, #62253	; 0xf32d
 8005c56:	218a      	movs	r1, #138	; 0x8a
 8005c58:	f001 fa60 	bl	800711c <HAL_I2C_Mem_Read>
	if(enStatus == HAL_OK)
 8005c5c:	b928      	cbnz	r0, 8005c6a <bReadWordFromAddress.constprop.0+0x2e>
		*pu16RegData = ((*pu16RegData&0xff00U) >> 8) | ((*pu16RegData&0x00ffU) << 8);
 8005c5e:	8823      	ldrh	r3, [r4, #0]
 8005c60:	ba5b      	rev16	r3, r3
 8005c62:	8023      	strh	r3, [r4, #0]
		bRetValue = true;
 8005c64:	2001      	movs	r0, #1
}
 8005c66:	b004      	add	sp, #16
 8005c68:	bd10      	pop	{r4, pc}
	bool bRetValue = false;
 8005c6a:	2000      	movs	r0, #0
 8005c6c:	e7fb      	b.n	8005c66 <bReadWordFromAddress.constprop.0+0x2a>
 8005c6e:	bf00      	nop
 8005c70:	200029d0 	.word	0x200029d0

08005c74 <vSht35Config>:

	return fTemperature;
}

void vSht35Config(I2C_HandleTypeDef* pxI2cHandler)
{
 8005c74:	b513      	push	{r0, r1, r4, lr}
 8005c76:	4604      	mov	r4, r0
	uint16_t u16StatusReg;

	printf("SHT35 Initialization\n");
 8005c78:	481d      	ldr	r0, [pc, #116]	; (8005cf0 <vSht35Config+0x7c>)
 8005c7a:	f01e f985 	bl	8023f88 <puts>
	// set the I2C handler the driver will use
	hi2c = pxI2cHandler;
 8005c7e:	4b1d      	ldr	r3, [pc, #116]	; (8005cf4 <vSht35Config+0x80>)
	// read status register to check if sensor exist
	if(bReadWordFromAddress(SHT35_CMD_READ_STATUS_REG, &u16StatusReg))
 8005c80:	f10d 0006 	add.w	r0, sp, #6
	hi2c = pxI2cHandler;
 8005c84:	601c      	str	r4, [r3, #0]
	if(bReadWordFromAddress(SHT35_CMD_READ_STATUS_REG, &u16StatusReg))
 8005c86:	f7ff ffd9 	bl	8005c3c <bReadWordFromAddress.constprop.0>
 8005c8a:	b310      	cbz	r0, 8005cd2 <vSht35Config+0x5e>
	{
		printf("Status register of SHT35 = %04X\n", u16StatusReg);
 8005c8c:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8005c90:	4819      	ldr	r0, [pc, #100]	; (8005cf8 <vSht35Config+0x84>)
 8005c92:	f01e f8dd 	bl	8023e50 <iprintf>
	else
	{
		printf("Couldn't read Status register of SHT35\n");
	}

	if(bSendCmd(SHT35_CMD_SOFT_RST))
 8005c96:	f243 00a2 	movw	r0, #12450	; 0x30a2
 8005c9a:	f7ff ffb7 	bl	8005c0c <bSendCmd>
 8005c9e:	b1e0      	cbz	r0, 8005cda <vSht35Config+0x66>
	{
		printf("Send soft reset cmd successfully\n");
 8005ca0:	4816      	ldr	r0, [pc, #88]	; (8005cfc <vSht35Config+0x88>)
	}
	else
	{
		printf("Couldn't send soft reset CMD\n");
 8005ca2:	f01e f971 	bl	8023f88 <puts>
//	else
//	{
//		printf("Couldn't send enable heat CMD\n");
//	}

	if(bReadWordFromAddress(SHT35_CMD_READ_STATUS_REG, &u16StatusReg))
 8005ca6:	f10d 0006 	add.w	r0, sp, #6
 8005caa:	f7ff ffc7 	bl	8005c3c <bReadWordFromAddress.constprop.0>
 8005cae:	b1b0      	cbz	r0, 8005cde <vSht35Config+0x6a>
	{
		printf("Status register of SHT35 = %04X\n", u16StatusReg);
 8005cb0:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8005cb4:	4810      	ldr	r0, [pc, #64]	; (8005cf8 <vSht35Config+0x84>)
 8005cb6:	f01e f8cb 	bl	8023e50 <iprintf>
//	else
//	{
//		printf("Couldn't send enable heat CMD\n");
//	}

	if(bReadWordFromAddress(SHT35_CMD_READ_STATUS_REG, &u16StatusReg))
 8005cba:	f10d 0006 	add.w	r0, sp, #6
 8005cbe:	f7ff ffbd 	bl	8005c3c <bReadWordFromAddress.constprop.0>
 8005cc2:	b180      	cbz	r0, 8005ce6 <vSht35Config+0x72>
	{
		printf("Status register of SHT35 = %04X\n", u16StatusReg);
 8005cc4:	f8bd 1006 	ldrh.w	r1, [sp, #6]
 8005cc8:	480b      	ldr	r0, [pc, #44]	; (8005cf8 <vSht35Config+0x84>)
 8005cca:	f01e f8c1 	bl	8023e50 <iprintf>
	}
	else
	{
		printf("Couldn't read Status register of SHT35\n");
	}
}
 8005cce:	b002      	add	sp, #8
 8005cd0:	bd10      	pop	{r4, pc}
		printf("Couldn't read Status register of SHT35\n");
 8005cd2:	480b      	ldr	r0, [pc, #44]	; (8005d00 <vSht35Config+0x8c>)
 8005cd4:	f01e f958 	bl	8023f88 <puts>
 8005cd8:	e7dd      	b.n	8005c96 <vSht35Config+0x22>
		printf("Couldn't send soft reset CMD\n");
 8005cda:	480a      	ldr	r0, [pc, #40]	; (8005d04 <vSht35Config+0x90>)
 8005cdc:	e7e1      	b.n	8005ca2 <vSht35Config+0x2e>
		printf("Couldn't read Status register of SHT35\n");
 8005cde:	4808      	ldr	r0, [pc, #32]	; (8005d00 <vSht35Config+0x8c>)
 8005ce0:	f01e f952 	bl	8023f88 <puts>
 8005ce4:	e7e9      	b.n	8005cba <vSht35Config+0x46>
		printf("Couldn't read Status register of SHT35\n");
 8005ce6:	4806      	ldr	r0, [pc, #24]	; (8005d00 <vSht35Config+0x8c>)
 8005ce8:	f01e f94e 	bl	8023f88 <puts>
}
 8005cec:	e7ef      	b.n	8005cce <vSht35Config+0x5a>
 8005cee:	bf00      	nop
 8005cf0:	08029a88 	.word	0x08029a88
 8005cf4:	200029d0 	.word	0x200029d0
 8005cf8:	08029a9d 	.word	0x08029a9d
 8005cfc:	08029ae5 	.word	0x08029ae5
 8005d00:	08029abe 	.word	0x08029abe
 8005d04:	08029b06 	.word	0x08029b06

08005d08 <bSht35Init>:

bool bSht35Init()
{
 8005d08:	b510      	push	{r4, lr}
	bool bRetValue = false;

	if(bSendCmd(SHT35_CMD_SSDAQ_MODE_CLK_STRETCH_DISABLED_REPEAT_LOW))
 8005d0a:	f242 4016 	movw	r0, #9238	; 0x2416
 8005d0e:	f7ff ff7d 	bl	8005c0c <bSendCmd>
 8005d12:	4604      	mov	r4, r0
 8005d14:	b150      	cbz	r0, 8005d2c <bSht35Init+0x24>
	{
		printf("Send SSDAQ cmd successfully\n");
 8005d16:	4809      	ldr	r0, [pc, #36]	; (8005d3c <bSht35Init+0x34>)
 8005d18:	f01e f936 	bl	8023f88 <puts>
		printf("Couldn't send SSDAQ CMD\n");
	}

	if(bRetValue == true)
	{
		if(bSendCmd(SHT35_CMD_DISABLE_HEAT))
 8005d1c:	f243 0066 	movw	r0, #12390	; 0x3066
 8005d20:	f7ff ff74 	bl	8005c0c <bSendCmd>
 8005d24:	4604      	mov	r4, r0
 8005d26:	b930      	cbnz	r0, 8005d36 <bSht35Init+0x2e>
		{
			printf("Send enable heat cmd successfully\n");
		}
		else
		{
			printf("Couldn't send enable heat CMD\n");
 8005d28:	4805      	ldr	r0, [pc, #20]	; (8005d40 <bSht35Init+0x38>)
 8005d2a:	e000      	b.n	8005d2e <bSht35Init+0x26>
		printf("Couldn't send SSDAQ CMD\n");
 8005d2c:	4805      	ldr	r0, [pc, #20]	; (8005d44 <bSht35Init+0x3c>)
			printf("Couldn't send enable heat CMD\n");
 8005d2e:	f01e f92b 	bl	8023f88 <puts>
			bRetValue = false;
		}
	}

	return bRetValue;
}
 8005d32:	4620      	mov	r0, r4
 8005d34:	bd10      	pop	{r4, pc}
			printf("Send enable heat cmd successfully\n");
 8005d36:	4804      	ldr	r0, [pc, #16]	; (8005d48 <bSht35Init+0x40>)
 8005d38:	e7f9      	b.n	8005d2e <bSht35Init+0x26>
 8005d3a:	bf00      	nop
 8005d3c:	08029b23 	.word	0x08029b23
 8005d40:	08029b79 	.word	0x08029b79
 8005d44:	08029b3f 	.word	0x08029b3f
 8005d48:	08029b57 	.word	0x08029b57
 8005d4c:	00000000 	.word	0x00000000

08005d50 <bSht35GetTemperature>:

bool bSht35GetTemperature(float* pfTemperatureValue, enTemperatureUnit_t enUnit)
{
 8005d50:	b5f0      	push	{r4, r5, r6, r7, lr}
	bool bRetValue = false;
	uint8_t pu8Data[6] = {0,0,0,0,0,0};// 2 bytes for Temperatyre + 1 byte for CNC + 2 bytes for Humidity + 1 byte for CNC
 8005d52:	4b43      	ldr	r3, [pc, #268]	; (8005e60 <bSht35GetTemperature+0x110>)
{
 8005d54:	b087      	sub	sp, #28
 8005d56:	4606      	mov	r6, r0
	int iTemperatureRawValue=0;

	if(enUnit == enTemperatureUnitC || enUnit == entemperatureUnitF)
 8005d58:	2901      	cmp	r1, #1
	uint8_t pu8Data[6] = {0,0,0,0,0,0};// 2 bytes for Temperatyre + 1 byte for CNC + 2 bytes for Humidity + 1 byte for CNC
 8005d5a:	6818      	ldr	r0, [r3, #0]
 8005d5c:	889b      	ldrh	r3, [r3, #4]
 8005d5e:	9004      	str	r0, [sp, #16]
{
 8005d60:	460f      	mov	r7, r1
	uint8_t pu8Data[6] = {0,0,0,0,0,0};// 2 bytes for Temperatyre + 1 byte for CNC + 2 bytes for Humidity + 1 byte for CNC
 8005d62:	f8ad 3014 	strh.w	r3, [sp, #20]
	if(enUnit == enTemperatureUnitC || enUnit == entemperatureUnitF)
 8005d66:	d86f      	bhi.n	8005e48 <bSht35GetTemperature+0xf8>
	{
		if(bSendCmd(SHT35_CMD_SSDAQ_MODE_CLK_STRETCH_DISABLED_REPEAT_MED))
 8005d68:	f242 400b 	movw	r0, #9227	; 0x240b
 8005d6c:	f7ff ff4e 	bl	8005c0c <bSendCmd>
 8005d70:	4605      	mov	r5, r0
 8005d72:	2800      	cmp	r0, #0
 8005d74:	d064      	beq.n	8005e40 <bSht35GetTemperature+0xf0>
		{
			osDelay(SHT35_MAX_MEASUREMENT_DURATION_FOR_REPEAT_MED); // we can use osDelay since we call this function from task (if in the future we will call it from ISR, we must change the waiting process)
 8005d76:	2006      	movs	r0, #6
 8005d78:	f003 f93d 	bl	8008ff6 <osDelay>
	if(HAL_I2C_Master_Receive(hi2c, SHT35_DEFAULT_I2C_ADDR, pu8Data, u16DataLength, SHT35_DEFAULT_I2C_TIMEOUT) == HAL_OK)
 8005d7c:	f44f 5340 	mov.w	r3, #12288	; 0x3000
 8005d80:	4838      	ldr	r0, [pc, #224]	; (8005e64 <bSht35GetTemperature+0x114>)
 8005d82:	9300      	str	r3, [sp, #0]
 8005d84:	6800      	ldr	r0, [r0, #0]
 8005d86:	2306      	movs	r3, #6
 8005d88:	aa04      	add	r2, sp, #16
 8005d8a:	218a      	movs	r1, #138	; 0x8a
 8005d8c:	f000 ffc6 	bl	8006d1c <HAL_I2C_Master_Receive>
 8005d90:	b120      	cbz	r0, 8005d9c <bSht35GetTemperature+0x4c>
				printf("\n");
				bRetValue = true;
			}
			else
			{
				printf("bSht35GetTemperature: Couldn't read from sensor\n");
 8005d92:	4835      	ldr	r0, [pc, #212]	; (8005e68 <bSht35GetTemperature+0x118>)
			printf("bSht35GetTemperature: Couldn't send cmd to sensor\n");
		}
	}
	else
	{
		printf("bSht35GetTemperature: Wrong temperature unit\n");
 8005d94:	f01e f8f8 	bl	8023f88 <puts>
	bool bRetValue = false;
 8005d98:	2500      	movs	r5, #0
 8005d9a:	e044      	b.n	8005e26 <bSht35GetTemperature+0xd6>
				printf("bSht35GetTemperature: data => {%x, %x, %x, %x, %x, %x}\n", pu8Data[0], pu8Data[1], pu8Data[2], pu8Data[3], pu8Data[4], pu8Data[5]);
 8005d9c:	f89d 3015 	ldrb.w	r3, [sp, #21]
 8005da0:	9302      	str	r3, [sp, #8]
 8005da2:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8005da6:	9301      	str	r3, [sp, #4]
 8005da8:	f89d 3013 	ldrb.w	r3, [sp, #19]
 8005dac:	f89d 2011 	ldrb.w	r2, [sp, #17]
 8005db0:	f89d 1010 	ldrb.w	r1, [sp, #16]
 8005db4:	9300      	str	r3, [sp, #0]
 8005db6:	482d      	ldr	r0, [pc, #180]	; (8005e6c <bSht35GetTemperature+0x11c>)
 8005db8:	f89d 3012 	ldrb.w	r3, [sp, #18]
 8005dbc:	f01e f848 	bl	8023e50 <iprintf>
				iTemperatureRawValue = ( ((int16_t)pu8Data[0])<<8 ) | ((int16_t)pu8Data[1]);
 8005dc0:	f8bd 4010 	ldrh.w	r4, [sp, #16]
				printf("bSht35GetTemperature: temperature raw value=%d\n", iTemperatureRawValue);
 8005dc4:	482a      	ldr	r0, [pc, #168]	; (8005e70 <bSht35GetTemperature+0x120>)
 8005dc6:	ba64      	rev16	r4, r4
 8005dc8:	b2a4      	uxth	r4, r4
 8005dca:	4621      	mov	r1, r4
 8005dcc:	f01e f840 	bl	8023e50 <iprintf>
	switch(enUnit)
 8005dd0:	2f01      	cmp	r7, #1
			fTemperature = (iTemperatureRawValue * 0.004806) - 49.0;
 8005dd2:	4620      	mov	r0, r4
	switch(enUnit)
 8005dd4:	d02a      	beq.n	8005e2c <bSht35GetTemperature+0xdc>
			fTemperature = (iTemperatureRawValue * 0.002670) - 45.0;
 8005dd6:	f7fa fbb5 	bl	8000544 <__aeabi_i2d>
 8005dda:	a31d      	add	r3, pc, #116	; (adr r3, 8005e50 <bSht35GetTemperature+0x100>)
 8005ddc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005de0:	f7fa fc1a 	bl	8000618 <__aeabi_dmul>
 8005de4:	4b23      	ldr	r3, [pc, #140]	; (8005e74 <bSht35GetTemperature+0x124>)
 8005de6:	2200      	movs	r2, #0
			fTemperature = (iTemperatureRawValue * 0.004806) - 49.0;
 8005de8:	f7fa fa5e 	bl	80002a8 <__aeabi_dsub>
 8005dec:	f7fa ff0c 	bl	8000c08 <__aeabi_d2f>
				*pfTemperatureValue = fTemperatureConversion(iTemperatureRawValue, enUnit);
 8005df0:	6030      	str	r0, [r6, #0]
				printf("bSht35GetTemperature: temperature final value=");
 8005df2:	4821      	ldr	r0, [pc, #132]	; (8005e78 <bSht35GetTemperature+0x128>)
 8005df4:	f01e f82c 	bl	8023e50 <iprintf>
				printf_float(*pfTemperatureValue);
 8005df8:	edd6 7a00 	vldr	s15, [r6]
 8005dfc:	4a1f      	ldr	r2, [pc, #124]	; (8005e7c <bSht35GetTemperature+0x12c>)
 8005dfe:	4820      	ldr	r0, [pc, #128]	; (8005e80 <bSht35GetTemperature+0x130>)
 8005e00:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8005e04:	ee17 1a10 	vmov	r1, s14
 8005e08:	ed9f 7a1e 	vldr	s14, [pc, #120]	; 8005e84 <bSht35GetTemperature+0x134>
 8005e0c:	ee67 7a87 	vmul.f32	s15, s15, s14
 8005e10:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005e14:	ee17 3a90 	vmov	r3, s15
 8005e18:	fb02 3201 	mla	r2, r2, r1, r3
 8005e1c:	f01e f818 	bl	8023e50 <iprintf>
				printf("\n");
 8005e20:	200a      	movs	r0, #10
 8005e22:	f01e f82d 	bl	8023e80 <putchar>
	}
	return bRetValue;
}
 8005e26:	4628      	mov	r0, r5
 8005e28:	b007      	add	sp, #28
 8005e2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
			fTemperature = (iTemperatureRawValue * 0.004806) - 49.0;
 8005e2c:	f7fa fb8a 	bl	8000544 <__aeabi_i2d>
 8005e30:	a309      	add	r3, pc, #36	; (adr r3, 8005e58 <bSht35GetTemperature+0x108>)
 8005e32:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005e36:	f7fa fbef 	bl	8000618 <__aeabi_dmul>
 8005e3a:	4b13      	ldr	r3, [pc, #76]	; (8005e88 <bSht35GetTemperature+0x138>)
 8005e3c:	2200      	movs	r2, #0
 8005e3e:	e7d3      	b.n	8005de8 <bSht35GetTemperature+0x98>
			printf("bSht35GetTemperature: Couldn't send cmd to sensor\n");
 8005e40:	4812      	ldr	r0, [pc, #72]	; (8005e8c <bSht35GetTemperature+0x13c>)
 8005e42:	f01e f8a1 	bl	8023f88 <puts>
 8005e46:	e7ee      	b.n	8005e26 <bSht35GetTemperature+0xd6>
		printf("bSht35GetTemperature: Wrong temperature unit\n");
 8005e48:	4811      	ldr	r0, [pc, #68]	; (8005e90 <bSht35GetTemperature+0x140>)
 8005e4a:	e7a3      	b.n	8005d94 <bSht35GetTemperature+0x44>
 8005e4c:	f3af 8000 	nop.w
 8005e50:	55c52e73 	.word	0x55c52e73
 8005e54:	3f65df65 	.word	0x3f65df65
 8005e58:	cd31769b 	.word	0xcd31769b
 8005e5c:	3f73af74 	.word	0x3f73af74
 8005e60:	080278a0 	.word	0x080278a0
 8005e64:	200029d0 	.word	0x200029d0
 8005e68:	08029b97 	.word	0x08029b97
 8005e6c:	08029bc7 	.word	0x08029bc7
 8005e70:	08029bff 	.word	0x08029bff
 8005e74:	40468000 	.word	0x40468000
 8005e78:	08029c2f 	.word	0x08029c2f
 8005e7c:	fffffc18 	.word	0xfffffc18
 8005e80:	08029c5e 	.word	0x08029c5e
 8005e84:	447a0000 	.word	0x447a0000
 8005e88:	40488000 	.word	0x40488000
 8005e8c:	08029c64 	.word	0x08029c64
 8005e90:	08029c96 	.word	0x08029c96

08005e94 <stmpe811_Reset>:
  * @brief  Reset the stmpe811 by Software.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval None
  */
void stmpe811_Reset(uint16_t DeviceAddr)
{
 8005e94:	b510      	push	{r4, lr}
  /* Power Down the stmpe811 */  
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 2);
 8005e96:	b2c4      	uxtb	r4, r0
 8005e98:	2202      	movs	r2, #2
 8005e9a:	2103      	movs	r1, #3
 8005e9c:	4620      	mov	r0, r4
 8005e9e:	f7fc fd1d 	bl	80028dc <IOE_Write>

  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(10); 
 8005ea2:	200a      	movs	r0, #10
 8005ea4:	f7fc fd62 	bl	800296c <IOE_Delay>
  
  /* Power On the Codec after the power off => all registers are reinitialized */
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL1, 0);
 8005ea8:	4620      	mov	r0, r4
 8005eaa:	2200      	movs	r2, #0
 8005eac:	2103      	movs	r1, #3
 8005eae:	f7fc fd15 	bl	80028dc <IOE_Write>
  
  /* Wait for a delay to ensure registers erasing */
  IOE_Delay(2); 
}
 8005eb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Delay(2); 
 8005eb6:	2002      	movs	r0, #2
 8005eb8:	f7fc bd58 	b.w	800296c <IOE_Delay>

08005ebc <stmpe811_ReadID>:
  * @brief  Read the stmpe811 IO Expander device ID.
  * @param  DeviceAddr: Device address on communication Bus.  
  * @retval The Device ID (two bytes).
  */
uint16_t stmpe811_ReadID(uint16_t DeviceAddr)
{
 8005ebc:	b538      	push	{r3, r4, r5, lr}
 8005ebe:	4604      	mov	r4, r0
  /* Initialize IO BUS layer */
  IOE_Init(); 
  
  /* Return the device ID value */
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005ec0:	b2e4      	uxtb	r4, r4
  IOE_Init(); 
 8005ec2:	f7fc fd09 	bl	80028d8 <IOE_Init>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005ec6:	2100      	movs	r1, #0
 8005ec8:	4620      	mov	r0, r4
 8005eca:	f7fc fd1f 	bl	800290c <IOE_Read>
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005ece:	2101      	movs	r1, #1
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005ed0:	4605      	mov	r5, r0
          (IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_MSB)));
 8005ed2:	4620      	mov	r0, r4
 8005ed4:	f7fc fd1a 	bl	800290c <IOE_Read>
  return ((IOE_Read(DeviceAddr, STMPE811_REG_CHP_ID_LSB) << 8) |\
 8005ed8:	ea40 2005 	orr.w	r0, r0, r5, lsl #8
}
 8005edc:	b280      	uxth	r0, r0
 8005ede:	bd38      	pop	{r3, r4, r5, pc}

08005ee0 <stmpe811_TS_DetectTouch>:
  * @brief  Return if there is touch detected or not.
  * @param  DeviceAddr: Device address on communication Bus.
  * @retval Touch detected state.
  */
uint8_t stmpe811_TS_DetectTouch(uint16_t DeviceAddr)
{
 8005ee0:	b510      	push	{r4, lr}
  uint8_t state;
  uint8_t ret = 0;
  
  state = ((IOE_Read(DeviceAddr, STMPE811_REG_TSC_CTRL) & (uint8_t)STMPE811_TS_CTRL_STATUS) == (uint8_t)0x80);
 8005ee2:	b2c4      	uxtb	r4, r0
 8005ee4:	2140      	movs	r1, #64	; 0x40
 8005ee6:	4620      	mov	r0, r4
 8005ee8:	f7fc fd10 	bl	800290c <IOE_Read>
  
  if(state > 0)
 8005eec:	0603      	lsls	r3, r0, #24
 8005eee:	d507      	bpl.n	8005f00 <stmpe811_TS_DetectTouch+0x20>
  {
    if(IOE_Read(DeviceAddr, STMPE811_REG_FIFO_SIZE) > 0)
 8005ef0:	214c      	movs	r1, #76	; 0x4c
 8005ef2:	4620      	mov	r0, r4
 8005ef4:	f7fc fd0a 	bl	800290c <IOE_Read>
    {
      ret = 1;
 8005ef8:	3800      	subs	r0, #0
 8005efa:	bf18      	it	ne
 8005efc:	2001      	movne	r0, #1
    /* Enable the FIFO again */
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
  }
  
  return ret;
}
 8005efe:	bd10      	pop	{r4, pc}
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005f00:	2201      	movs	r2, #1
 8005f02:	214b      	movs	r1, #75	; 0x4b
 8005f04:	4620      	mov	r0, r4
 8005f06:	f7fc fce9 	bl	80028dc <IOE_Write>
    IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005f0a:	4620      	mov	r0, r4
 8005f0c:	2200      	movs	r2, #0
 8005f0e:	214b      	movs	r1, #75	; 0x4b
 8005f10:	f7fc fce4 	bl	80028dc <IOE_Write>
  uint8_t ret = 0;
 8005f14:	2000      	movs	r0, #0
 8005f16:	e7f2      	b.n	8005efe <stmpe811_TS_DetectTouch+0x1e>

08005f18 <stmpe811_TS_GetXY>:
  * @param  X: Pointer to X position value
  * @param  Y: Pointer to Y position value   
  * @retval None.
  */
void stmpe811_TS_GetXY(uint16_t DeviceAddr, uint16_t *X, uint16_t *Y)
{
 8005f18:	b573      	push	{r0, r1, r4, r5, r6, lr}
  uint8_t  dataXYZ[4];
  uint32_t uldataXYZ;
  
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005f1a:	2304      	movs	r3, #4
 8005f1c:	b2c4      	uxtb	r4, r0
{
 8005f1e:	460e      	mov	r6, r1
 8005f20:	4615      	mov	r5, r2
  IOE_ReadMultiple(DeviceAddr, STMPE811_REG_TSC_DATA_NON_INC, dataXYZ, sizeof(dataXYZ)) ;
 8005f22:	21d7      	movs	r1, #215	; 0xd7
 8005f24:	eb0d 0203 	add.w	r2, sp, r3
 8005f28:	4620      	mov	r0, r4
 8005f2a:	f7fc fd09 	bl	8002940 <IOE_ReadMultiple>
  
  /* Calculate positions values */
  uldataXYZ = (dataXYZ[0] << 24)|(dataXYZ[1] << 16)|(dataXYZ[2] << 8)|(dataXYZ[3] << 0);     
 8005f2e:	9b01      	ldr	r3, [sp, #4]
 8005f30:	ba1b      	rev	r3, r3
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005f32:	0d1a      	lsrs	r2, r3, #20
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005f34:	f3c3 230b 	ubfx	r3, r3, #8, #12
  *X = (uldataXYZ >> 20) & 0x00000FFF;     
 8005f38:	8032      	strh	r2, [r6, #0]
  
  /* Reset FIFO */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005f3a:	4620      	mov	r0, r4
  *Y = (uldataXYZ >>  8) & 0x00000FFF;     
 8005f3c:	802b      	strh	r3, [r5, #0]
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 8005f3e:	2201      	movs	r2, #1
 8005f40:	214b      	movs	r1, #75	; 0x4b
 8005f42:	f7fc fccb 	bl	80028dc <IOE_Write>
  /* Enable the FIFO again */
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 8005f46:	2200      	movs	r2, #0
 8005f48:	214b      	movs	r1, #75	; 0x4b
 8005f4a:	4620      	mov	r0, r4
 8005f4c:	f7fc fcc6 	bl	80028dc <IOE_Write>
}
 8005f50:	b002      	add	sp, #8
 8005f52:	bd70      	pop	{r4, r5, r6, pc}

08005f54 <stmpe811_Init>:
{
 8005f54:	b510      	push	{r4, lr}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
  {
    if(stmpe811[idx] == DeviceAddr)
 8005f56:	4b0a      	ldr	r3, [pc, #40]	; (8005f80 <stmpe811_Init+0x2c>)
 8005f58:	781a      	ldrb	r2, [r3, #0]
 8005f5a:	4290      	cmp	r0, r2
{
 8005f5c:	4604      	mov	r4, r0
    if(stmpe811[idx] == DeviceAddr)
 8005f5e:	d00d      	beq.n	8005f7c <stmpe811_Init+0x28>
 8005f60:	7859      	ldrb	r1, [r3, #1]
 8005f62:	4288      	cmp	r0, r1
 8005f64:	d00a      	beq.n	8005f7c <stmpe811_Init+0x28>
 8005f66:	b10a      	cbz	r2, 8005f6c <stmpe811_Init+0x18>
 8005f68:	b941      	cbnz	r1, 8005f7c <stmpe811_Init+0x28>
  for(idx = 0; idx < STMPE811_MAX_INSTANCE ; idx ++)
 8005f6a:	2201      	movs	r2, #1
      stmpe811[empty] = DeviceAddr;
 8005f6c:	549c      	strb	r4, [r3, r2]
      IOE_Init(); 
 8005f6e:	f7fc fcb3 	bl	80028d8 <IOE_Init>
      stmpe811_Reset(DeviceAddr);
 8005f72:	4620      	mov	r0, r4
}
 8005f74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      stmpe811_Reset(DeviceAddr);
 8005f78:	f7ff bf8c 	b.w	8005e94 <stmpe811_Reset>
}
 8005f7c:	bd10      	pop	{r4, pc}
 8005f7e:	bf00      	nop
 8005f80:	200029d4 	.word	0x200029d4

08005f84 <stmpe811_EnableGlobalIT>:
{
 8005f84:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005f86:	b2c4      	uxtb	r4, r0
 8005f88:	2109      	movs	r1, #9
 8005f8a:	4620      	mov	r0, r4
 8005f8c:	f7fc fcbe 	bl	800290c <IOE_Read>
  tmp |= (uint8_t)STMPE811_GIT_EN;
 8005f90:	f040 0001 	orr.w	r0, r0, #1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005f94:	b2c2      	uxtb	r2, r0
 8005f96:	2109      	movs	r1, #9
 8005f98:	4620      	mov	r0, r4
}
 8005f9a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp); 
 8005f9e:	f7fc bc9d 	b.w	80028dc <IOE_Write>

08005fa2 <stmpe811_DisableGlobalIT>:
{
 8005fa2:	b510      	push	{r4, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_CTRL);
 8005fa4:	b2c4      	uxtb	r4, r0
 8005fa6:	2109      	movs	r1, #9
 8005fa8:	4620      	mov	r0, r4
 8005faa:	f7fc fcaf 	bl	800290c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005fae:	2109      	movs	r1, #9
 8005fb0:	f000 02fe 	and.w	r2, r0, #254	; 0xfe
 8005fb4:	4620      	mov	r0, r4
}
 8005fb6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_CTRL, tmp);
 8005fba:	f7fc bc8f 	b.w	80028dc <IOE_Write>

08005fbe <stmpe811_EnableITSource>:
{
 8005fbe:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005fc0:	b2c4      	uxtb	r4, r0
{
 8005fc2:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005fc4:	4620      	mov	r0, r4
 8005fc6:	210a      	movs	r1, #10
 8005fc8:	f7fc fca0 	bl	800290c <IOE_Read>
  tmp |= Source; 
 8005fcc:	4328      	orrs	r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005fce:	b2c2      	uxtb	r2, r0
 8005fd0:	210a      	movs	r1, #10
 8005fd2:	4620      	mov	r0, r4
}
 8005fd4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8005fd8:	f7fc bc80 	b.w	80028dc <IOE_Write>

08005fdc <stmpe811_TS_EnableIT>:
{
 8005fdc:	b507      	push	{r0, r1, r2, lr}
 8005fde:	9001      	str	r0, [sp, #4]
  IOE_ITConfig();
 8005fe0:	f7fc fc7b 	bl	80028da <IOE_ITConfig>
  stmpe811_EnableITSource(DeviceAddr, STMPE811_TS_IT); 
 8005fe4:	9801      	ldr	r0, [sp, #4]
 8005fe6:	211f      	movs	r1, #31
 8005fe8:	f7ff ffe9 	bl	8005fbe <stmpe811_EnableITSource>
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005fec:	9801      	ldr	r0, [sp, #4]
}
 8005fee:	b003      	add	sp, #12
 8005ff0:	f85d eb04 	ldr.w	lr, [sp], #4
  stmpe811_EnableGlobalIT(DeviceAddr);
 8005ff4:	f7ff bfc6 	b.w	8005f84 <stmpe811_EnableGlobalIT>

08005ff8 <stmpe811_DisableITSource>:
{
 8005ff8:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005ffa:	b2c4      	uxtb	r4, r0
{
 8005ffc:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_INT_EN);
 8005ffe:	4620      	mov	r0, r4
 8006000:	210a      	movs	r1, #10
 8006002:	f7fc fc83 	bl	800290c <IOE_Read>
  tmp &= ~Source; 
 8006006:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 800600a:	b2c2      	uxtb	r2, r0
 800600c:	210a      	movs	r1, #10
 800600e:	4620      	mov	r0, r4
}
 8006010:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_INT_EN, tmp);   
 8006014:	f7fc bc62 	b.w	80028dc <IOE_Write>

08006018 <stmpe811_TS_DisableIT>:
{
 8006018:	b510      	push	{r4, lr}
 800601a:	4604      	mov	r4, r0
  stmpe811_DisableGlobalIT(DeviceAddr);
 800601c:	f7ff ffc1 	bl	8005fa2 <stmpe811_DisableGlobalIT>
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006020:	4620      	mov	r0, r4
 8006022:	211f      	movs	r1, #31
}
 8006024:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
  stmpe811_DisableITSource(DeviceAddr, STMPE811_TS_IT); 
 8006028:	f7ff bfe6 	b.w	8005ff8 <stmpe811_DisableITSource>

0800602c <stmpe811_ReadGITStatus>:
{
 800602c:	b510      	push	{r4, lr}
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 800602e:	b2c0      	uxtb	r0, r0
{
 8006030:	460c      	mov	r4, r1
  return((IOE_Read(DeviceAddr, STMPE811_REG_INT_STA) & Source));
 8006032:	210b      	movs	r1, #11
 8006034:	f7fc fc6a 	bl	800290c <IOE_Read>
}
 8006038:	4020      	ands	r0, r4
 800603a:	bd10      	pop	{r4, pc}

0800603c <stmpe811_TS_ITStatus>:
  return(stmpe811_ReadGITStatus(DeviceAddr, STMPE811_TS_IT));
 800603c:	211f      	movs	r1, #31
 800603e:	f7ff bff5 	b.w	800602c <stmpe811_ReadGITStatus>

08006042 <stmpe811_ClearGlobalIT>:
{
 8006042:	460a      	mov	r2, r1
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, Source);
 8006044:	b2c0      	uxtb	r0, r0
 8006046:	210b      	movs	r1, #11
 8006048:	f7fc bc48 	b.w	80028dc <IOE_Write>

0800604c <stmpe811_TS_ClearIT>:
  stmpe811_ClearGlobalIT(DeviceAddr, STMPE811_TS_IT);
 800604c:	211f      	movs	r1, #31
 800604e:	f7ff bff8 	b.w	8006042 <stmpe811_ClearGlobalIT>

08006052 <stmpe811_IO_EnableAF>:
{
 8006052:	b538      	push	{r3, r4, r5, lr}
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006054:	b2c4      	uxtb	r4, r0
{
 8006056:	460d      	mov	r5, r1
  tmp = IOE_Read(DeviceAddr, STMPE811_REG_IO_AF);
 8006058:	4620      	mov	r0, r4
 800605a:	2117      	movs	r1, #23
 800605c:	f7fc fc56 	bl	800290c <IOE_Read>
  tmp &= ~(uint8_t)IO_Pin;   
 8006060:	ea20 0005 	bic.w	r0, r0, r5
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 8006064:	b2c2      	uxtb	r2, r0
 8006066:	2117      	movs	r1, #23
 8006068:	4620      	mov	r0, r4
}
 800606a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
  IOE_Write(DeviceAddr, STMPE811_REG_IO_AF, tmp); 
 800606e:	f7fc bc35 	b.w	80028dc <IOE_Write>

08006072 <stmpe811_TS_Start>:
{
 8006072:	b570      	push	{r4, r5, r6, lr}
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006074:	b2c4      	uxtb	r4, r0
{
 8006076:	4606      	mov	r6, r0
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006078:	2104      	movs	r1, #4
 800607a:	4620      	mov	r0, r4
 800607c:	f7fc fc46 	bl	800290c <IOE_Read>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006080:	2104      	movs	r1, #4
 8006082:	f000 02fb 	and.w	r2, r0, #251	; 0xfb
  mode = IOE_Read(DeviceAddr, STMPE811_REG_SYS_CTRL2);
 8006086:	4605      	mov	r5, r0
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006088:	4620      	mov	r0, r4
 800608a:	f7fc fc27 	bl	80028dc <IOE_Write>
  stmpe811_IO_EnableAF(DeviceAddr, STMPE811_TOUCH_IO_ALL);
 800608e:	4630      	mov	r0, r6
 8006090:	21f0      	movs	r1, #240	; 0xf0
 8006092:	f7ff ffde 	bl	8006052 <stmpe811_IO_EnableAF>
  IOE_Write(DeviceAddr, STMPE811_REG_SYS_CTRL2, mode); 
 8006096:	f005 02f8 	and.w	r2, r5, #248	; 0xf8
 800609a:	4620      	mov	r0, r4
 800609c:	2104      	movs	r1, #4
 800609e:	f7fc fc1d 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL1, 0x49);
 80060a2:	2249      	movs	r2, #73	; 0x49
 80060a4:	2120      	movs	r1, #32
 80060a6:	4620      	mov	r0, r4
 80060a8:	f7fc fc18 	bl	80028dc <IOE_Write>
  IOE_Delay(2); 
 80060ac:	2002      	movs	r0, #2
 80060ae:	f7fc fc5d 	bl	800296c <IOE_Delay>
  IOE_Write(DeviceAddr, STMPE811_REG_ADC_CTRL2, 0x01);
 80060b2:	4620      	mov	r0, r4
 80060b4:	2201      	movs	r2, #1
 80060b6:	2121      	movs	r1, #33	; 0x21
 80060b8:	f7fc fc10 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CFG, 0x9A); 
 80060bc:	4620      	mov	r0, r4
 80060be:	229a      	movs	r2, #154	; 0x9a
 80060c0:	2141      	movs	r1, #65	; 0x41
 80060c2:	f7fc fc0b 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_TH, 0x01);
 80060c6:	4620      	mov	r0, r4
 80060c8:	2201      	movs	r2, #1
 80060ca:	214a      	movs	r1, #74	; 0x4a
 80060cc:	f7fc fc06 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x01);
 80060d0:	4620      	mov	r0, r4
 80060d2:	2201      	movs	r2, #1
 80060d4:	214b      	movs	r1, #75	; 0x4b
 80060d6:	f7fc fc01 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_FIFO_STA, 0x00);
 80060da:	4620      	mov	r0, r4
 80060dc:	2200      	movs	r2, #0
 80060de:	214b      	movs	r1, #75	; 0x4b
 80060e0:	f7fc fbfc 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_FRACT_XYZ, 0x01);
 80060e4:	4620      	mov	r0, r4
 80060e6:	2201      	movs	r2, #1
 80060e8:	2156      	movs	r1, #86	; 0x56
 80060ea:	f7fc fbf7 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_I_DRIVE, 0x01);
 80060ee:	4620      	mov	r0, r4
 80060f0:	2201      	movs	r2, #1
 80060f2:	2158      	movs	r1, #88	; 0x58
 80060f4:	f7fc fbf2 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_TSC_CTRL, 0x01);
 80060f8:	4620      	mov	r0, r4
 80060fa:	2201      	movs	r2, #1
 80060fc:	2140      	movs	r1, #64	; 0x40
 80060fe:	f7fc fbed 	bl	80028dc <IOE_Write>
  IOE_Write(DeviceAddr, STMPE811_REG_INT_STA, 0xFF);
 8006102:	4620      	mov	r0, r4
 8006104:	22ff      	movs	r2, #255	; 0xff
 8006106:	210b      	movs	r1, #11
 8006108:	f7fc fbe8 	bl	80028dc <IOE_Write>
}
 800610c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
  IOE_Delay(2); 
 8006110:	2002      	movs	r0, #2
 8006112:	f7fc bc2b 	b.w	800296c <IOE_Delay>
	...

08006118 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8006118:	4b05      	ldr	r3, [pc, #20]	; (8006130 <SystemInit+0x18>)
 800611a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800611e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006122:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8006126:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800612a:	609a      	str	r2, [r3, #8]
#endif
}
 800612c:	4770      	bx	lr
 800612e:	bf00      	nop
 8006130:	e000ed00 	.word	0xe000ed00

08006134 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006134:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8006136:	4b0b      	ldr	r3, [pc, #44]	; (8006164 <HAL_Init+0x30>)
 8006138:	681a      	ldr	r2, [r3, #0]
 800613a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800613e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006140:	681a      	ldr	r2, [r3, #0]
 8006142:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006146:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8006148:	681a      	ldr	r2, [r3, #0]
 800614a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800614e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006150:	2003      	movs	r0, #3
 8006152:	f000 f82f 	bl	80061b4 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8006156:	2000      	movs	r0, #0
 8006158:	f7fc ff72 	bl	8003040 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800615c:	f7fc fcce 	bl	8002afc <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006160:	2000      	movs	r0, #0
 8006162:	bd08      	pop	{r3, pc}
 8006164:	40023c00 	.word	0x40023c00

08006168 <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 8006168:	4a03      	ldr	r2, [pc, #12]	; (8006178 <HAL_IncTick+0x10>)
 800616a:	4b04      	ldr	r3, [pc, #16]	; (800617c <HAL_IncTick+0x14>)
 800616c:	6811      	ldr	r1, [r2, #0]
 800616e:	781b      	ldrb	r3, [r3, #0]
 8006170:	440b      	add	r3, r1
 8006172:	6013      	str	r3, [r2, #0]
}
 8006174:	4770      	bx	lr
 8006176:	bf00      	nop
 8006178:	200029d8 	.word	0x200029d8
 800617c:	20000078 	.word	0x20000078

08006180 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8006180:	4b01      	ldr	r3, [pc, #4]	; (8006188 <HAL_GetTick+0x8>)
 8006182:	6818      	ldr	r0, [r3, #0]
}
 8006184:	4770      	bx	lr
 8006186:	bf00      	nop
 8006188:	200029d8 	.word	0x200029d8

0800618c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800618c:	b538      	push	{r3, r4, r5, lr}
 800618e:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006190:	f7ff fff6 	bl	8006180 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006194:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 8006196:	bf1c      	itt	ne
 8006198:	4b05      	ldrne	r3, [pc, #20]	; (80061b0 <HAL_Delay+0x24>)
 800619a:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 800619c:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 800619e:	bf18      	it	ne
 80061a0:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80061a2:	f7ff ffed 	bl	8006180 <HAL_GetTick>
 80061a6:	1b43      	subs	r3, r0, r5
 80061a8:	42a3      	cmp	r3, r4
 80061aa:	d3fa      	bcc.n	80061a2 <HAL_Delay+0x16>
  {
  }
}
 80061ac:	bd38      	pop	{r3, r4, r5, pc}
 80061ae:	bf00      	nop
 80061b0:	20000078 	.word	0x20000078

080061b4 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80061b4:	4907      	ldr	r1, [pc, #28]	; (80061d4 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80061b6:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061b8:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80061bc:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061be:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80061c0:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80061c4:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80061c6:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80061c8:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80061cc:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80061d0:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80061d2:	4770      	bx	lr
 80061d4:	e000ed00 	.word	0xe000ed00

080061d8 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80061d8:	4b16      	ldr	r3, [pc, #88]	; (8006234 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80061da:	b530      	push	{r4, r5, lr}
 80061dc:	68dc      	ldr	r4, [r3, #12]
 80061de:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061e2:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061e6:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80061e8:	2d04      	cmp	r5, #4
 80061ea:	bf28      	it	cs
 80061ec:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061ee:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061f0:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80061f4:	bf8c      	ite	hi
 80061f6:	3c03      	subhi	r4, #3
 80061f8:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80061fa:	fa03 f505 	lsl.w	r5, r3, r5
 80061fe:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 8006202:	40a3      	lsls	r3, r4
 8006204:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006208:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 800620a:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800620c:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006210:	bfac      	ite	ge
 8006212:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006216:	4a08      	ldrlt	r2, [pc, #32]	; (8006238 <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006218:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800621c:	bfb8      	it	lt
 800621e:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006222:	b2db      	uxtb	r3, r3
 8006224:	bfaa      	itet	ge
 8006226:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800622a:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800622c:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006230:	bd30      	pop	{r4, r5, pc}
 8006232:	bf00      	nop
 8006234:	e000ed00 	.word	0xe000ed00
 8006238:	e000ed14 	.word	0xe000ed14

0800623c <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800623c:	2800      	cmp	r0, #0
 800623e:	db08      	blt.n	8006252 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006240:	0942      	lsrs	r2, r0, #5
 8006242:	2301      	movs	r3, #1
 8006244:	f000 001f 	and.w	r0, r0, #31
 8006248:	fa03 f000 	lsl.w	r0, r3, r0
 800624c:	4b01      	ldr	r3, [pc, #4]	; (8006254 <HAL_NVIC_EnableIRQ+0x18>)
 800624e:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006252:	4770      	bx	lr
 8006254:	e000e100 	.word	0xe000e100

08006258 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006258:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800625a:	4604      	mov	r4, r0
 800625c:	b150      	cbz	r0, 8006274 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800625e:	7943      	ldrb	r3, [r0, #5]
 8006260:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006264:	b913      	cbnz	r3, 800626c <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006266:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006268:	f7fc fc68 	bl	8002b3c <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 800626c:	2301      	movs	r3, #1
 800626e:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 8006270:	2000      	movs	r0, #0
}
 8006272:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006274:	2001      	movs	r0, #1
 8006276:	e7fc      	b.n	8006272 <HAL_CRC_Init+0x1a>

08006278 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8006278:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800627a:	4604      	mov	r4, r0
 800627c:	b330      	cbz	r0, 80062cc <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 800627e:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8006282:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006286:	b91b      	cbnz	r3, 8006290 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8006288:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 800628c:	f7fc fc6e 	bl	8002b6c <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8006290:	6822      	ldr	r2, [r4, #0]
 8006292:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8006294:	2302      	movs	r3, #2
 8006296:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 800629a:	6813      	ldr	r3, [r2, #0]
 800629c:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80062a0:	430b      	orrs	r3, r1
 80062a2:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80062a4:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80062a6:	68a1      	ldr	r1, [r4, #8]
 80062a8:	f023 0307 	bic.w	r3, r3, #7
 80062ac:	430b      	orrs	r3, r1
 80062ae:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80062b0:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80062b2:	68e1      	ldr	r1, [r4, #12]
 80062b4:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80062b8:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80062bc:	430b      	orrs	r3, r1
 80062be:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062c0:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062c2:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80062c4:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80062c6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80062ca:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80062cc:	2001      	movs	r0, #1
 80062ce:	e7fc      	b.n	80062ca <HAL_DMA2D_Init+0x52>

080062d0 <HAL_DMA2D_LineEventCallback>:
 80062d0:	4770      	bx	lr

080062d2 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80062d2:	4770      	bx	lr

080062d4 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062d4:	6803      	ldr	r3, [r0, #0]
{
 80062d6:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80062d8:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80062da:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062dc:	07f2      	lsls	r2, r6, #31
{
 80062de:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 80062e0:	d514      	bpl.n	800630c <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 80062e2:	05e9      	lsls	r1, r5, #23
 80062e4:	d512      	bpl.n	800630c <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 80062e6:	681a      	ldr	r2, [r3, #0]
 80062e8:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 80062ec:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 80062ee:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 80062f0:	f042 0201 	orr.w	r2, r2, #1
 80062f4:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 80062f6:	2201      	movs	r2, #1
 80062f8:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 80062fa:	2304      	movs	r3, #4
 80062fc:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006300:	2300      	movs	r3, #0
 8006302:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8006306:	6943      	ldr	r3, [r0, #20]
 8006308:	b103      	cbz	r3, 800630c <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800630a:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 800630c:	06b2      	lsls	r2, r6, #26
 800630e:	d516      	bpl.n	800633e <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006310:	04ab      	lsls	r3, r5, #18
 8006312:	d514      	bpl.n	800633e <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8006314:	6823      	ldr	r3, [r4, #0]
 8006316:	681a      	ldr	r2, [r3, #0]
 8006318:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 800631c:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 800631e:	2220      	movs	r2, #32
 8006320:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006322:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006324:	f043 0302 	orr.w	r3, r3, #2
 8006328:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800632a:	2304      	movs	r3, #4
 800632c:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006330:	2300      	movs	r3, #0
 8006332:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8006336:	6963      	ldr	r3, [r4, #20]
 8006338:	b10b      	cbz	r3, 800633e <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800633a:	4620      	mov	r0, r4
 800633c:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 800633e:	0730      	lsls	r0, r6, #28
 8006340:	d516      	bpl.n	8006370 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006342:	0529      	lsls	r1, r5, #20
 8006344:	d514      	bpl.n	8006370 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8006346:	6823      	ldr	r3, [r4, #0]
 8006348:	681a      	ldr	r2, [r3, #0]
 800634a:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 800634e:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006350:	2208      	movs	r2, #8
 8006352:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006354:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006356:	f043 0304 	orr.w	r3, r3, #4
 800635a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800635c:	2304      	movs	r3, #4
 800635e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006362:	2300      	movs	r3, #0
 8006364:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8006368:	6963      	ldr	r3, [r4, #20]
 800636a:	b10b      	cbz	r3, 8006370 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800636c:	4620      	mov	r0, r4
 800636e:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006370:	0772      	lsls	r2, r6, #29
 8006372:	d50b      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006374:	056b      	lsls	r3, r5, #21
 8006376:	d509      	bpl.n	800638c <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8006378:	6823      	ldr	r3, [r4, #0]
 800637a:	681a      	ldr	r2, [r3, #0]
 800637c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006380:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8006382:	2204      	movs	r2, #4
 8006384:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8006386:	4620      	mov	r0, r4
 8006388:	f7ff ffa2 	bl	80062d0 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 800638c:	07b0      	lsls	r0, r6, #30
 800638e:	d514      	bpl.n	80063ba <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8006390:	05a9      	lsls	r1, r5, #22
 8006392:	d512      	bpl.n	80063ba <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8006394:	6823      	ldr	r3, [r4, #0]
 8006396:	681a      	ldr	r2, [r3, #0]
 8006398:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 800639c:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 800639e:	2202      	movs	r2, #2
 80063a0:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063a2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063a4:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063a6:	2301      	movs	r3, #1
 80063a8:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063ac:	2300      	movs	r3, #0
 80063ae:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80063b2:	6923      	ldr	r3, [r4, #16]
 80063b4:	b10b      	cbz	r3, 80063ba <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80063b6:	4620      	mov	r0, r4
 80063b8:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80063ba:	06f2      	lsls	r2, r6, #27
 80063bc:	d513      	bpl.n	80063e6 <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80063be:	04eb      	lsls	r3, r5, #19
 80063c0:	d511      	bpl.n	80063e6 <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80063c2:	6823      	ldr	r3, [r4, #0]
 80063c4:	681a      	ldr	r2, [r3, #0]
 80063c6:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80063ca:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80063cc:	2210      	movs	r2, #16
 80063ce:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80063d0:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80063d2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80063d4:	2301      	movs	r3, #1
 80063d6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80063da:	2300      	movs	r3, #0
 80063dc:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 80063e0:	4620      	mov	r0, r4
 80063e2:	f7ff ff76 	bl	80062d2 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 80063e6:	bd70      	pop	{r4, r5, r6, pc}

080063e8 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 80063e8:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 80063ea:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 80063ee:	2b01      	cmp	r3, #1
 80063f0:	f04f 0302 	mov.w	r3, #2
 80063f4:	d02b      	beq.n	800644e <HAL_DMA2D_ConfigLayer+0x66>
 80063f6:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80063f8:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 80063fc:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006400:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8006404:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8006408:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800640a:	4f18      	ldr	r7, [pc, #96]	; (800646c <HAL_DMA2D_ConfigLayer+0x84>)
 800640c:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006410:	3c09      	subs	r4, #9
 8006412:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006414:	bf9c      	itt	ls
 8006416:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800641a:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 800641c:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006420:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006422:	bf88      	it	hi
 8006424:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8006428:	b999      	cbnz	r1, 8006452 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800642a:	6a59      	ldr	r1, [r3, #36]	; 0x24
 800642c:	4039      	ands	r1, r7
 800642e:	430a      	orrs	r2, r1
 8006430:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006432:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006434:	6982      	ldr	r2, [r0, #24]
 8006436:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006438:	d803      	bhi.n	8006442 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800643a:	6a42      	ldr	r2, [r0, #36]	; 0x24
 800643c:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006440:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006442:	2301      	movs	r3, #1
 8006444:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8006448:	2300      	movs	r3, #0
 800644a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 800644e:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006450:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006452:	69d9      	ldr	r1, [r3, #28]
 8006454:	4039      	ands	r1, r7
 8006456:	430a      	orrs	r2, r1
 8006458:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800645a:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800645c:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800645e:	6992      	ldr	r2, [r2, #24]
 8006460:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8006462:	bf9c      	itt	ls
 8006464:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8006468:	621d      	strls	r5, [r3, #32]
 800646a:	e7ea      	b.n	8006442 <HAL_DMA2D_ConfigLayer+0x5a>
 800646c:	00fcfff0 	.word	0x00fcfff0

08006470 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8006470:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006474:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8006638 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8006478:	4a6d      	ldr	r2, [pc, #436]	; (8006630 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 800647a:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800647c:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 800647e:	2401      	movs	r4, #1
 8006480:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8006482:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 8006486:	43ac      	bics	r4, r5
 8006488:	f040 80b9 	bne.w	80065fe <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800648c:	684d      	ldr	r5, [r1, #4]
 800648e:	f005 0403 	and.w	r4, r5, #3
 8006492:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8006496:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8006498:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800649a:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800649e:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064a0:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 80064a4:	d834      	bhi.n	8006510 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 80064a6:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80064a8:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 80064ac:	68cf      	ldr	r7, [r1, #12]
 80064ae:	fa07 f708 	lsl.w	r7, r7, r8
 80064b2:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 80064b6:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80064b8:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80064ba:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80064be:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80064c2:	409f      	lsls	r7, r3
 80064c4:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80064c8:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80064ca:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80064cc:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80064d0:	688f      	ldr	r7, [r1, #8]
 80064d2:	fa07 f708 	lsl.w	r7, r7, r8
 80064d6:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80064da:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80064dc:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80064de:	d119      	bne.n	8006514 <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80064e0:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80064e4:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064e8:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80064ec:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80064f0:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80064f4:	f04f 0e0f 	mov.w	lr, #15
 80064f8:	fa0e fe0b 	lsl.w	lr, lr, fp
 80064fc:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 8006500:	690f      	ldr	r7, [r1, #16]
 8006502:	fa07 f70b 	lsl.w	r7, r7, fp
 8006506:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 800650a:	f8ca 7020 	str.w	r7, [sl, #32]
 800650e:	e001      	b.n	8006514 <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8006510:	2c03      	cmp	r4, #3
 8006512:	d1da      	bne.n	80064ca <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 8006514:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8006516:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 800651a:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800651c:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800651e:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 8006522:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8006524:	d06b      	beq.n	80065fe <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006526:	f04f 0a00 	mov.w	sl, #0
 800652a:	f8cd a004 	str.w	sl, [sp, #4]
 800652e:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006532:	4c40      	ldr	r4, [pc, #256]	; (8006634 <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8006534:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8006538:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 800653c:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8006540:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 8006544:	9601      	str	r6, [sp, #4]
 8006546:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8006548:	f023 0603 	bic.w	r6, r3, #3
 800654c:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8006550:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006554:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8006558:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800655c:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8006560:	270f      	movs	r7, #15
 8006562:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8006566:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8006568:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800656c:	d04e      	beq.n	800660c <HAL_GPIO_Init+0x19c>
 800656e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006572:	42a0      	cmp	r0, r4
 8006574:	d04c      	beq.n	8006610 <HAL_GPIO_Init+0x1a0>
 8006576:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800657a:	42a0      	cmp	r0, r4
 800657c:	d04a      	beq.n	8006614 <HAL_GPIO_Init+0x1a4>
 800657e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006582:	42a0      	cmp	r0, r4
 8006584:	d048      	beq.n	8006618 <HAL_GPIO_Init+0x1a8>
 8006586:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800658a:	42a0      	cmp	r0, r4
 800658c:	d046      	beq.n	800661c <HAL_GPIO_Init+0x1ac>
 800658e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8006592:	42a0      	cmp	r0, r4
 8006594:	d044      	beq.n	8006620 <HAL_GPIO_Init+0x1b0>
 8006596:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800659a:	42a0      	cmp	r0, r4
 800659c:	d042      	beq.n	8006624 <HAL_GPIO_Init+0x1b4>
 800659e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80065a2:	42a0      	cmp	r0, r4
 80065a4:	d040      	beq.n	8006628 <HAL_GPIO_Init+0x1b8>
 80065a6:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80065aa:	42a0      	cmp	r0, r4
 80065ac:	d03e      	beq.n	800662c <HAL_GPIO_Init+0x1bc>
 80065ae:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 80065b2:	42a0      	cmp	r0, r4
 80065b4:	bf0c      	ite	eq
 80065b6:	2409      	moveq	r4, #9
 80065b8:	240a      	movne	r4, #10
 80065ba:	fa04 f40e 	lsl.w	r4, r4, lr
 80065be:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80065c0:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 80065c2:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 80065c4:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80065c8:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80065ca:	bf54      	ite	pl
 80065cc:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80065ce:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80065d2:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80065d4:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80065d6:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80065d8:	bf54      	ite	pl
 80065da:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80065dc:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80065e0:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80065e2:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80065e4:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 80065e6:	bf54      	ite	pl
 80065e8:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80065ea:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80065ee:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80065f0:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80065f2:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80065f4:	bf54      	ite	pl
 80065f6:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80065f8:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80065fc:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80065fe:	3301      	adds	r3, #1
 8006600:	2b10      	cmp	r3, #16
 8006602:	f47f af3b 	bne.w	800647c <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 8006606:	b003      	add	sp, #12
 8006608:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800660c:	4654      	mov	r4, sl
 800660e:	e7d4      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006610:	2401      	movs	r4, #1
 8006612:	e7d2      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006614:	2402      	movs	r4, #2
 8006616:	e7d0      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006618:	2403      	movs	r4, #3
 800661a:	e7ce      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 800661c:	2404      	movs	r4, #4
 800661e:	e7cc      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006620:	2405      	movs	r4, #5
 8006622:	e7ca      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006624:	2406      	movs	r4, #6
 8006626:	e7c8      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006628:	2407      	movs	r4, #7
 800662a:	e7c6      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 800662c:	2408      	movs	r4, #8
 800662e:	e7c4      	b.n	80065ba <HAL_GPIO_Init+0x14a>
 8006630:	40013c00 	.word	0x40013c00
 8006634:	40020000 	.word	0x40020000
 8006638:	40023800 	.word	0x40023800

0800663c <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 800663c:	6903      	ldr	r3, [r0, #16]
 800663e:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 8006640:	bf14      	ite	ne
 8006642:	2001      	movne	r0, #1
 8006644:	2000      	moveq	r0, #0
 8006646:	4770      	bx	lr

08006648 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8006648:	b10a      	cbz	r2, 800664e <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800664a:	6181      	str	r1, [r0, #24]
  }
}
 800664c:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800664e:	0409      	lsls	r1, r1, #16
 8006650:	e7fb      	b.n	800664a <HAL_GPIO_WritePin+0x2>

08006652 <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 8006652:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8006654:	ea01 0203 	and.w	r2, r1, r3
 8006658:	ea21 0103 	bic.w	r1, r1, r3
 800665c:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8006660:	6181      	str	r1, [r0, #24]
}
 8006662:	4770      	bx	lr

08006664 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006664:	6801      	ldr	r1, [r0, #0]
 8006666:	694b      	ldr	r3, [r1, #20]
 8006668:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 800666c:	f04f 0200 	mov.w	r2, #0
 8006670:	d010      	beq.n	8006694 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006672:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006676:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 8006678:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800667a:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 800667c:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006680:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006684:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8006686:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800668a:	f043 0304 	orr.w	r3, r3, #4
 800668e:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 8006690:	2001      	movs	r0, #1
 8006692:	4770      	bx	lr
  }
  return HAL_OK;
 8006694:	4618      	mov	r0, r3
}
 8006696:	4770      	bx	lr

08006698 <I2C_WaitOnFlagUntilTimeout>:
{
 8006698:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 800669c:	4606      	mov	r6, r0
 800669e:	460f      	mov	r7, r1
 80066a0:	4691      	mov	r9, r2
 80066a2:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80066a4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80066a8:	6833      	ldr	r3, [r6, #0]
 80066aa:	f1ba 0f01 	cmp.w	sl, #1
 80066ae:	bf0c      	ite	eq
 80066b0:	695c      	ldreq	r4, [r3, #20]
 80066b2:	699c      	ldrne	r4, [r3, #24]
 80066b4:	ea27 0404 	bic.w	r4, r7, r4
 80066b8:	b2a4      	uxth	r4, r4
 80066ba:	fab4 f484 	clz	r4, r4
 80066be:	0964      	lsrs	r4, r4, #5
 80066c0:	45a1      	cmp	r9, r4
 80066c2:	d001      	beq.n	80066c8 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80066c4:	2000      	movs	r0, #0
 80066c6:	e017      	b.n	80066f8 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80066c8:	1c6a      	adds	r2, r5, #1
 80066ca:	d0ee      	beq.n	80066aa <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80066cc:	f7ff fd58 	bl	8006180 <HAL_GetTick>
 80066d0:	9b08      	ldr	r3, [sp, #32]
 80066d2:	1ac0      	subs	r0, r0, r3
 80066d4:	42a8      	cmp	r0, r5
 80066d6:	d801      	bhi.n	80066dc <I2C_WaitOnFlagUntilTimeout+0x44>
 80066d8:	2d00      	cmp	r5, #0
 80066da:	d1e5      	bne.n	80066a8 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066dc:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80066de:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80066e0:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80066e2:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80066e6:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066ea:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80066ec:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80066f0:	f042 0220 	orr.w	r2, r2, #32
 80066f4:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 80066f6:	2001      	movs	r0, #1
}
 80066f8:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

080066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80066fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006700:	4604      	mov	r4, r0
 8006702:	460f      	mov	r7, r1
 8006704:	4616      	mov	r6, r2
 8006706:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8006708:	6825      	ldr	r5, [r4, #0]
 800670a:	6968      	ldr	r0, [r5, #20]
 800670c:	ea27 0000 	bic.w	r0, r7, r0
 8006710:	b280      	uxth	r0, r0
 8006712:	b1b8      	cbz	r0, 8006744 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8006714:	696b      	ldr	r3, [r5, #20]
 8006716:	055a      	lsls	r2, r3, #21
 8006718:	d516      	bpl.n	8006748 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800671a:	682b      	ldr	r3, [r5, #0]
 800671c:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006720:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8006722:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 8006726:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006728:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800672a:	2300      	movs	r3, #0
 800672c:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 800672e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006732:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8006736:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006738:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800673c:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800673e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8006742:	2001      	movs	r0, #1
}
 8006744:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8006748:	1c73      	adds	r3, r6, #1
 800674a:	d0de      	beq.n	800670a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800674c:	f7ff fd18 	bl	8006180 <HAL_GetTick>
 8006750:	eba0 0008 	sub.w	r0, r0, r8
 8006754:	42b0      	cmp	r0, r6
 8006756:	d801      	bhi.n	800675c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8006758:	2e00      	cmp	r6, #0
 800675a:	d1d5      	bne.n	8006708 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800675c:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800675e:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006760:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006762:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006766:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800676a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800676c:	f042 0220 	orr.w	r2, r2, #32
 8006770:	e7e4      	b.n	800673c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08006772 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8006772:	b570      	push	{r4, r5, r6, lr}
 8006774:	4604      	mov	r4, r0
 8006776:	460d      	mov	r5, r1
 8006778:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800677a:	6821      	ldr	r1, [r4, #0]
 800677c:	694b      	ldr	r3, [r1, #20]
 800677e:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8006782:	d001      	beq.n	8006788 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8006784:	2000      	movs	r0, #0
 8006786:	e010      	b.n	80067aa <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8006788:	694a      	ldr	r2, [r1, #20]
 800678a:	06d2      	lsls	r2, r2, #27
 800678c:	d50e      	bpl.n	80067ac <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800678e:	f06f 0210 	mvn.w	r2, #16
 8006792:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 8006794:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 8006796:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8006798:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800679c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80067a0:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067a2:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80067a4:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80067a8:	2001      	movs	r0, #1
}
 80067aa:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067ac:	f7ff fce8 	bl	8006180 <HAL_GetTick>
 80067b0:	1b80      	subs	r0, r0, r6
 80067b2:	42a8      	cmp	r0, r5
 80067b4:	d801      	bhi.n	80067ba <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80067b6:	2d00      	cmp	r5, #0
 80067b8:	d1df      	bne.n	800677a <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067ba:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80067bc:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80067be:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80067c0:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80067c4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80067c8:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80067ca:	f042 0220 	orr.w	r2, r2, #32
 80067ce:	e7e8      	b.n	80067a2 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080067d0 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80067d0:	b570      	push	{r4, r5, r6, lr}
 80067d2:	4604      	mov	r4, r0
 80067d4:	460d      	mov	r5, r1
 80067d6:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80067d8:	6823      	ldr	r3, [r4, #0]
 80067da:	695b      	ldr	r3, [r3, #20]
 80067dc:	075b      	lsls	r3, r3, #29
 80067de:	d501      	bpl.n	80067e4 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 80067e0:	2000      	movs	r0, #0
}
 80067e2:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80067e4:	4620      	mov	r0, r4
 80067e6:	f7ff ff3d 	bl	8006664 <I2C_IsAcknowledgeFailed>
 80067ea:	b9a8      	cbnz	r0, 8006818 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 80067ec:	1c6a      	adds	r2, r5, #1
 80067ee:	d0f3      	beq.n	80067d8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80067f0:	f7ff fcc6 	bl	8006180 <HAL_GetTick>
 80067f4:	1b80      	subs	r0, r0, r6
 80067f6:	42a8      	cmp	r0, r5
 80067f8:	d801      	bhi.n	80067fe <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 80067fa:	2d00      	cmp	r5, #0
 80067fc:	d1ec      	bne.n	80067d8 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 80067fe:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8006800:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8006802:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006804:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006808:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800680c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800680e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006812:	f042 0220 	orr.w	r2, r2, #32
 8006816:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006818:	2001      	movs	r0, #1
 800681a:	e7e2      	b.n	80067e2 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

0800681c <I2C_WaitOnTXEFlagUntilTimeout>:
{
 800681c:	b570      	push	{r4, r5, r6, lr}
 800681e:	4604      	mov	r4, r0
 8006820:	460d      	mov	r5, r1
 8006822:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8006824:	6823      	ldr	r3, [r4, #0]
 8006826:	695b      	ldr	r3, [r3, #20]
 8006828:	061b      	lsls	r3, r3, #24
 800682a:	d501      	bpl.n	8006830 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 800682c:	2000      	movs	r0, #0
}
 800682e:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8006830:	4620      	mov	r0, r4
 8006832:	f7ff ff17 	bl	8006664 <I2C_IsAcknowledgeFailed>
 8006836:	b9a8      	cbnz	r0, 8006864 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8006838:	1c6a      	adds	r2, r5, #1
 800683a:	d0f3      	beq.n	8006824 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800683c:	f7ff fca0 	bl	8006180 <HAL_GetTick>
 8006840:	1b80      	subs	r0, r0, r6
 8006842:	42a8      	cmp	r0, r5
 8006844:	d801      	bhi.n	800684a <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8006846:	2d00      	cmp	r5, #0
 8006848:	d1ec      	bne.n	8006824 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800684a:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 800684c:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 800684e:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8006850:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8006854:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8006858:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800685a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800685e:	f042 0220 	orr.w	r2, r2, #32
 8006862:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006864:	2001      	movs	r0, #1
 8006866:	e7e2      	b.n	800682e <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08006868 <I2C_RequestMemoryWrite>:
{
 8006868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800686c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800686e:	6802      	ldr	r2, [r0, #0]
{
 8006870:	b085      	sub	sp, #20
 8006872:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 8006876:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006878:	6813      	ldr	r3, [r2, #0]
 800687a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800687e:	6013      	str	r3, [r2, #0]
{
 8006880:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006882:	463b      	mov	r3, r7
 8006884:	f8cd 8000 	str.w	r8, [sp]
 8006888:	2200      	movs	r2, #0
 800688a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 800688e:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006890:	f7ff ff02 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006894:	6823      	ldr	r3, [r4, #0]
 8006896:	b138      	cbz	r0, 80068a8 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006898:	681b      	ldr	r3, [r3, #0]
 800689a:	05db      	lsls	r3, r3, #23
 800689c:	d502      	bpl.n	80068a4 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 800689e:	f44f 7300 	mov.w	r3, #512	; 0x200
 80068a2:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80068a4:	2003      	movs	r0, #3
 80068a6:	e00a      	b.n	80068be <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80068a8:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80068ac:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80068ae:	4919      	ldr	r1, [pc, #100]	; (8006914 <I2C_RequestMemoryWrite+0xac>)
 80068b0:	4643      	mov	r3, r8
 80068b2:	463a      	mov	r2, r7
 80068b4:	4620      	mov	r0, r4
 80068b6:	f7ff ff21 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80068ba:	b118      	cbz	r0, 80068c4 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80068bc:	2001      	movs	r0, #1
}
 80068be:	b005      	add	sp, #20
 80068c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068c4:	6823      	ldr	r3, [r4, #0]
 80068c6:	9003      	str	r0, [sp, #12]
 80068c8:	695a      	ldr	r2, [r3, #20]
 80068ca:	9203      	str	r2, [sp, #12]
 80068cc:	699b      	ldr	r3, [r3, #24]
 80068ce:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068d0:	4642      	mov	r2, r8
 80068d2:	4639      	mov	r1, r7
 80068d4:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80068d6:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80068d8:	f7ff ffa0 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 80068dc:	b140      	cbz	r0, 80068f0 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80068de:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80068e0:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068e2:	bf01      	itttt	eq
 80068e4:	6822      	ldreq	r2, [r4, #0]
 80068e6:	6813      	ldreq	r3, [r2, #0]
 80068e8:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80068ec:	6013      	streq	r3, [r2, #0]
 80068ee:	e7e5      	b.n	80068bc <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068f0:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80068f4:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80068f6:	d102      	bne.n	80068fe <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80068f8:	b2ed      	uxtb	r5, r5
 80068fa:	611d      	str	r5, [r3, #16]
 80068fc:	e7df      	b.n	80068be <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80068fe:	0a2a      	lsrs	r2, r5, #8
 8006900:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006902:	4639      	mov	r1, r7
 8006904:	4642      	mov	r2, r8
 8006906:	4620      	mov	r0, r4
 8006908:	f7ff ff88 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 800690c:	2800      	cmp	r0, #0
 800690e:	d1e6      	bne.n	80068de <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8006910:	6823      	ldr	r3, [r4, #0]
 8006912:	e7f1      	b.n	80068f8 <I2C_RequestMemoryWrite+0x90>
 8006914:	00010002 	.word	0x00010002

08006918 <I2C_RequestMemoryRead>:
{
 8006918:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800691c:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800691e:	6803      	ldr	r3, [r0, #0]
{
 8006920:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006922:	681a      	ldr	r2, [r3, #0]
 8006924:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8006928:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800692a:	681a      	ldr	r2, [r3, #0]
{
 800692c:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006930:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006934:	601a      	str	r2, [r3, #0]
{
 8006936:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006938:	463b      	mov	r3, r7
 800693a:	f8cd 8000 	str.w	r8, [sp]
 800693e:	2200      	movs	r2, #0
 8006940:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8006944:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006946:	f7ff fea7 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 800694a:	6823      	ldr	r3, [r4, #0]
 800694c:	b148      	cbz	r0, 8006962 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 800694e:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006950:	05db      	lsls	r3, r3, #23
 8006952:	d502      	bpl.n	800695a <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006954:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006958:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800695a:	2003      	movs	r0, #3
}
 800695c:	b004      	add	sp, #16
 800695e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006962:	fa5f f986 	uxtb.w	r9, r6
 8006966:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800696a:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 800696c:	492a      	ldr	r1, [pc, #168]	; (8006a18 <I2C_RequestMemoryRead+0x100>)
 800696e:	4643      	mov	r3, r8
 8006970:	463a      	mov	r2, r7
 8006972:	4620      	mov	r0, r4
 8006974:	f7ff fec2 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006978:	b108      	cbz	r0, 800697e <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800697a:	2001      	movs	r0, #1
 800697c:	e7ee      	b.n	800695c <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800697e:	6823      	ldr	r3, [r4, #0]
 8006980:	9003      	str	r0, [sp, #12]
 8006982:	695a      	ldr	r2, [r3, #20]
 8006984:	9203      	str	r2, [sp, #12]
 8006986:	699b      	ldr	r3, [r3, #24]
 8006988:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 800698a:	4642      	mov	r2, r8
 800698c:	4639      	mov	r1, r7
 800698e:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006990:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8006992:	f7ff ff43 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 8006996:	b140      	cbz	r0, 80069aa <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006998:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800699a:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800699c:	bf01      	itttt	eq
 800699e:	6822      	ldreq	r2, [r4, #0]
 80069a0:	6813      	ldreq	r3, [r2, #0]
 80069a2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80069a6:	6013      	streq	r3, [r2, #0]
 80069a8:	e7e7      	b.n	800697a <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80069aa:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80069ae:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80069b0:	d11a      	bne.n	80069e8 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069b2:	b2ed      	uxtb	r5, r5
 80069b4:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069b6:	4642      	mov	r2, r8
 80069b8:	4639      	mov	r1, r7
 80069ba:	4620      	mov	r0, r4
 80069bc:	f7ff ff2e 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 80069c0:	2800      	cmp	r0, #0
 80069c2:	d1e9      	bne.n	8006998 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80069c4:	6822      	ldr	r2, [r4, #0]
 80069c6:	6813      	ldr	r3, [r2, #0]
 80069c8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80069cc:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80069ce:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80069d2:	4602      	mov	r2, r0
 80069d4:	f8cd 8000 	str.w	r8, [sp]
 80069d8:	463b      	mov	r3, r7
 80069da:	4620      	mov	r0, r4
 80069dc:	f7ff fe5c 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 80069e0:	6822      	ldr	r2, [r4, #0]
 80069e2:	b160      	cbz	r0, 80069fe <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80069e4:	6813      	ldr	r3, [r2, #0]
 80069e6:	e7b3      	b.n	8006950 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 80069e8:	0a2a      	lsrs	r2, r5, #8
 80069ea:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80069ec:	4639      	mov	r1, r7
 80069ee:	4642      	mov	r2, r8
 80069f0:	4620      	mov	r0, r4
 80069f2:	f7ff ff13 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 80069f6:	2800      	cmp	r0, #0
 80069f8:	d1ce      	bne.n	8006998 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80069fa:	6823      	ldr	r3, [r4, #0]
 80069fc:	e7d9      	b.n	80069b2 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 80069fe:	f049 0301 	orr.w	r3, r9, #1
 8006a02:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006a04:	4904      	ldr	r1, [pc, #16]	; (8006a18 <I2C_RequestMemoryRead+0x100>)
 8006a06:	4643      	mov	r3, r8
 8006a08:	463a      	mov	r2, r7
 8006a0a:	4620      	mov	r0, r4
 8006a0c:	f7ff fe76 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8006a10:	3800      	subs	r0, #0
 8006a12:	bf18      	it	ne
 8006a14:	2001      	movne	r0, #1
 8006a16:	e7a1      	b.n	800695c <I2C_RequestMemoryRead+0x44>
 8006a18:	00010002 	.word	0x00010002

08006a1c <HAL_I2C_Init>:
{
 8006a1c:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8006a1e:	4604      	mov	r4, r0
 8006a20:	b908      	cbnz	r0, 8006a26 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8006a22:	2001      	movs	r0, #1
}
 8006a24:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8006a26:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8006a2a:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006a2e:	b91b      	cbnz	r3, 8006a38 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8006a30:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8006a34:	f7fc f8bc 	bl	8002bb0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8006a38:	2324      	movs	r3, #36	; 0x24
 8006a3a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8006a3e:	6823      	ldr	r3, [r4, #0]
 8006a40:	681a      	ldr	r2, [r3, #0]
 8006a42:	f022 0201 	bic.w	r2, r2, #1
 8006a46:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8006a48:	681a      	ldr	r2, [r3, #0]
 8006a4a:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8006a4e:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8006a50:	681a      	ldr	r2, [r3, #0]
 8006a52:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8006a56:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8006a58:	f001 f8bc 	bl	8007bd4 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8006a5c:	4b3f      	ldr	r3, [pc, #252]	; (8006b5c <HAL_I2C_Init+0x140>)
 8006a5e:	6865      	ldr	r5, [r4, #4]
 8006a60:	429d      	cmp	r5, r3
 8006a62:	bf94      	ite	ls
 8006a64:	4b3e      	ldrls	r3, [pc, #248]	; (8006b60 <HAL_I2C_Init+0x144>)
 8006a66:	4b3f      	ldrhi	r3, [pc, #252]	; (8006b64 <HAL_I2C_Init+0x148>)
 8006a68:	4298      	cmp	r0, r3
 8006a6a:	bf8c      	ite	hi
 8006a6c:	2300      	movhi	r3, #0
 8006a6e:	2301      	movls	r3, #1
 8006a70:	2b00      	cmp	r3, #0
 8006a72:	d1d6      	bne.n	8006a22 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a74:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a76:	4e39      	ldr	r6, [pc, #228]	; (8006b5c <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a78:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8006a7a:	493b      	ldr	r1, [pc, #236]	; (8006b68 <HAL_I2C_Init+0x14c>)
 8006a7c:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a80:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a84:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a86:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8006a88:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8006a8a:	bf88      	it	hi
 8006a8c:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 8006a90:	6a13      	ldr	r3, [r2, #32]
 8006a92:	bf88      	it	hi
 8006a94:	4371      	mulhi	r1, r6
 8006a96:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8006a9a:	bf84      	itt	hi
 8006a9c:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8006aa0:	fbb1 f1f6 	udivhi	r1, r1, r6
 8006aa4:	3101      	adds	r1, #1
 8006aa6:	4319      	orrs	r1, r3
 8006aa8:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006aaa:	69d1      	ldr	r1, [r2, #28]
 8006aac:	1e43      	subs	r3, r0, #1
 8006aae:	482b      	ldr	r0, [pc, #172]	; (8006b5c <HAL_I2C_Init+0x140>)
 8006ab0:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 8006ab4:	4285      	cmp	r5, r0
 8006ab6:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006aba:	d832      	bhi.n	8006b22 <HAL_I2C_Init+0x106>
 8006abc:	006d      	lsls	r5, r5, #1
 8006abe:	f640 70fc 	movw	r0, #4092	; 0xffc
 8006ac2:	fbb3 f3f5 	udiv	r3, r3, r5
 8006ac6:	3301      	adds	r3, #1
 8006ac8:	4203      	tst	r3, r0
 8006aca:	d042      	beq.n	8006b52 <HAL_I2C_Init+0x136>
 8006acc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006ad0:	430b      	orrs	r3, r1
 8006ad2:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8006ad4:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8006ad8:	6811      	ldr	r1, [r2, #0]
 8006ada:	4303      	orrs	r3, r0
 8006adc:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8006ae0:	430b      	orrs	r3, r1
 8006ae2:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8006ae4:	6891      	ldr	r1, [r2, #8]
 8006ae6:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8006aea:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8006aee:	4303      	orrs	r3, r0
 8006af0:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006af4:	430b      	orrs	r3, r1
 8006af6:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8006af8:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8006afc:	68d1      	ldr	r1, [r2, #12]
 8006afe:	4303      	orrs	r3, r0
 8006b00:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8006b04:	430b      	orrs	r3, r1
 8006b06:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 8006b08:	6813      	ldr	r3, [r2, #0]
 8006b0a:	f043 0301 	orr.w	r3, r3, #1
 8006b0e:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b10:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8006b12:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8006b14:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8006b16:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8006b1a:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8006b1c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8006b20:	e780      	b.n	8006a24 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8006b22:	68a0      	ldr	r0, [r4, #8]
 8006b24:	b950      	cbnz	r0, 8006b3c <HAL_I2C_Init+0x120>
 8006b26:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8006b2a:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b2e:	3301      	adds	r3, #1
 8006b30:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b34:	b17b      	cbz	r3, 8006b56 <HAL_I2C_Init+0x13a>
 8006b36:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8006b3a:	e7c9      	b.n	8006ad0 <HAL_I2C_Init+0xb4>
 8006b3c:	2019      	movs	r0, #25
 8006b3e:	4345      	muls	r5, r0
 8006b40:	fbb3 f3f5 	udiv	r3, r3, r5
 8006b44:	3301      	adds	r3, #1
 8006b46:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006b4a:	b123      	cbz	r3, 8006b56 <HAL_I2C_Init+0x13a>
 8006b4c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8006b50:	e7be      	b.n	8006ad0 <HAL_I2C_Init+0xb4>
 8006b52:	2304      	movs	r3, #4
 8006b54:	e7bc      	b.n	8006ad0 <HAL_I2C_Init+0xb4>
 8006b56:	2301      	movs	r3, #1
 8006b58:	e7ba      	b.n	8006ad0 <HAL_I2C_Init+0xb4>
 8006b5a:	bf00      	nop
 8006b5c:	000186a0 	.word	0x000186a0
 8006b60:	001e847f 	.word	0x001e847f
 8006b64:	003d08ff 	.word	0x003d08ff
 8006b68:	000f4240 	.word	0x000f4240

08006b6c <HAL_I2C_Master_Transmit>:
{
 8006b6c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006b70:	4604      	mov	r4, r0
 8006b72:	b085      	sub	sp, #20
 8006b74:	4698      	mov	r8, r3
 8006b76:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8006b78:	460d      	mov	r5, r1
 8006b7a:	4691      	mov	r9, r2
  uint32_t tickstart = HAL_GetTick();
 8006b7c:	f7ff fb00 	bl	8006180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b80:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006b84:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006b86:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006b88:	d004      	beq.n	8006b94 <HAL_I2C_Master_Transmit+0x28>
    return HAL_BUSY;
 8006b8a:	2502      	movs	r5, #2
}
 8006b8c:	4628      	mov	r0, r5
 8006b8e:	b005      	add	sp, #20
 8006b90:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006b94:	9000      	str	r0, [sp, #0]
 8006b96:	495d      	ldr	r1, [pc, #372]	; (8006d0c <HAL_I2C_Master_Transmit+0x1a0>)
 8006b98:	2319      	movs	r3, #25
 8006b9a:	2201      	movs	r2, #1
 8006b9c:	4620      	mov	r0, r4
 8006b9e:	f7ff fd7b 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006ba2:	2800      	cmp	r0, #0
 8006ba4:	d1f1      	bne.n	8006b8a <HAL_I2C_Master_Transmit+0x1e>
    __HAL_LOCK(hi2c);
 8006ba6:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006baa:	2b01      	cmp	r3, #1
 8006bac:	d0ed      	beq.n	8006b8a <HAL_I2C_Master_Transmit+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006bae:	6821      	ldr	r1, [r4, #0]
    __HAL_LOCK(hi2c);
 8006bb0:	2301      	movs	r3, #1
 8006bb2:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006bb6:	680b      	ldr	r3, [r1, #0]
 8006bb8:	07da      	lsls	r2, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006bba:	bf5e      	ittt	pl
 8006bbc:	680b      	ldrpl	r3, [r1, #0]
 8006bbe:	f043 0301 	orrpl.w	r3, r3, #1
 8006bc2:	600b      	strpl	r3, [r1, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006bc4:	680b      	ldr	r3, [r1, #0]
 8006bc6:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006bca:	600b      	str	r3, [r1, #0]
    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 8006bcc:	2321      	movs	r3, #33	; 0x21
 8006bce:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8006bd2:	2310      	movs	r3, #16
 8006bd4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8006bd8:	2300      	movs	r3, #0
 8006bda:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8006bdc:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006be0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006be2:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006be4:	4b4a      	ldr	r3, [pc, #296]	; (8006d10 <HAL_I2C_Master_Transmit+0x1a4>)
 8006be6:	62e3      	str	r3, [r4, #44]	; 0x2c
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8006be8:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
    hi2c->pBuffPtr    = pData;
 8006bea:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8006bee:	2b08      	cmp	r3, #8
 8006bf0:	d004      	beq.n	8006bfc <HAL_I2C_Master_Transmit+0x90>
 8006bf2:	2b01      	cmp	r3, #1
 8006bf4:	d002      	beq.n	8006bfc <HAL_I2C_Master_Transmit+0x90>
 8006bf6:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006bfa:	d104      	bne.n	8006c06 <HAL_I2C_Master_Transmit+0x9a>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006bfc:	680b      	ldr	r3, [r1, #0]
 8006bfe:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006c02:	600b      	str	r3, [r1, #0]
 8006c04:	e002      	b.n	8006c0c <HAL_I2C_Master_Transmit+0xa0>
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8006c06:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006c08:	2b12      	cmp	r3, #18
 8006c0a:	d0f7      	beq.n	8006bfc <HAL_I2C_Master_Transmit+0x90>
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006c0c:	2200      	movs	r2, #0
 8006c0e:	9600      	str	r6, [sp, #0]
 8006c10:	463b      	mov	r3, r7
 8006c12:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006c16:	4620      	mov	r0, r4
 8006c18:	f7ff fd3e 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006c1c:	6822      	ldr	r2, [r4, #0]
 8006c1e:	b138      	cbz	r0, 8006c30 <HAL_I2C_Master_Transmit+0xc4>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006c20:	6813      	ldr	r3, [r2, #0]
 8006c22:	05db      	lsls	r3, r3, #23
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006c24:	bf44      	itt	mi
 8006c26:	f44f 7300 	movmi.w	r3, #512	; 0x200
 8006c2a:	6423      	strmi	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006c2c:	2501      	movs	r5, #1
 8006c2e:	e7ad      	b.n	8006b8c <HAL_I2C_Master_Transmit+0x20>
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8006c30:	6923      	ldr	r3, [r4, #16]
 8006c32:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 8006c36:	d121      	bne.n	8006c7c <HAL_I2C_Master_Transmit+0x110>
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8006c38:	f005 05fe 	and.w	r5, r5, #254	; 0xfe
 8006c3c:	6115      	str	r5, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006c3e:	4935      	ldr	r1, [pc, #212]	; (8006d14 <HAL_I2C_Master_Transmit+0x1a8>)
 8006c40:	4633      	mov	r3, r6
 8006c42:	463a      	mov	r2, r7
 8006c44:	4620      	mov	r0, r4
 8006c46:	f7ff fd59 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006c4a:	4605      	mov	r5, r0
 8006c4c:	2800      	cmp	r0, #0
 8006c4e:	d1ed      	bne.n	8006c2c <HAL_I2C_Master_Transmit+0xc0>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006c50:	6823      	ldr	r3, [r4, #0]
 8006c52:	9003      	str	r0, [sp, #12]
 8006c54:	695a      	ldr	r2, [r3, #20]
 8006c56:	9203      	str	r2, [sp, #12]
 8006c58:	699b      	ldr	r3, [r3, #24]
 8006c5a:	9303      	str	r3, [sp, #12]
 8006c5c:	9b03      	ldr	r3, [sp, #12]
    while (hi2c->XferSize > 0U)
 8006c5e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006c60:	b9f3      	cbnz	r3, 8006ca0 <HAL_I2C_Master_Transmit+0x134>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006c62:	6821      	ldr	r1, [r4, #0]
 8006c64:	680a      	ldr	r2, [r1, #0]
 8006c66:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006c6a:	600a      	str	r2, [r1, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8006c6c:	2220      	movs	r2, #32
 8006c6e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006c72:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006c76:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006c7a:	e787      	b.n	8006b8c <HAL_I2C_Master_Transmit+0x20>
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8006c7c:	11eb      	asrs	r3, r5, #7
 8006c7e:	f003 0306 	and.w	r3, r3, #6
 8006c82:	f043 03f0 	orr.w	r3, r3, #240	; 0xf0
 8006c86:	6113      	str	r3, [r2, #16]
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8006c88:	4923      	ldr	r1, [pc, #140]	; (8006d18 <HAL_I2C_Master_Transmit+0x1ac>)
 8006c8a:	4633      	mov	r3, r6
 8006c8c:	463a      	mov	r2, r7
 8006c8e:	4620      	mov	r0, r4
 8006c90:	f7ff fd34 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006c94:	2800      	cmp	r0, #0
 8006c96:	d1c9      	bne.n	8006c2c <HAL_I2C_Master_Transmit+0xc0>
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8006c98:	6823      	ldr	r3, [r4, #0]
 8006c9a:	b2ed      	uxtb	r5, r5
 8006c9c:	611d      	str	r5, [r3, #16]
 8006c9e:	e7ce      	b.n	8006c3e <HAL_I2C_Master_Transmit+0xd2>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006ca0:	4632      	mov	r2, r6
 8006ca2:	4639      	mov	r1, r7
 8006ca4:	4620      	mov	r0, r4
 8006ca6:	f7ff fdb9 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 8006caa:	b140      	cbz	r0, 8006cbe <HAL_I2C_Master_Transmit+0x152>
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8006cac:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8006cae:	2b04      	cmp	r3, #4
 8006cb0:	d1bc      	bne.n	8006c2c <HAL_I2C_Master_Transmit+0xc0>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006cb2:	6822      	ldr	r2, [r4, #0]
 8006cb4:	6813      	ldr	r3, [r2, #0]
 8006cb6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006cba:	6013      	str	r3, [r2, #0]
 8006cbc:	e7b6      	b.n	8006c2c <HAL_I2C_Master_Transmit+0xc0>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006cbe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006cc0:	6820      	ldr	r0, [r4, #0]
 8006cc2:	461a      	mov	r2, r3
 8006cc4:	f812 1b01 	ldrb.w	r1, [r2], #1
 8006cc8:	6101      	str	r1, [r0, #16]
      hi2c->pBuffPtr++;
 8006cca:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8006ccc:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
 8006cce:	3a01      	subs	r2, #1
 8006cd0:	b292      	uxth	r2, r2
 8006cd2:	8562      	strh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8006cd4:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006cd6:	f8d0 c014 	ldr.w	ip, [r0, #20]
      hi2c->XferSize--;
 8006cda:	1e51      	subs	r1, r2, #1
 8006cdc:	b289      	uxth	r1, r1
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006cde:	f01c 0f04 	tst.w	ip, #4
      hi2c->XferSize--;
 8006ce2:	8521      	strh	r1, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8006ce4:	d00a      	beq.n	8006cfc <HAL_I2C_Master_Transmit+0x190>
 8006ce6:	b149      	cbz	r1, 8006cfc <HAL_I2C_Master_Transmit+0x190>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8006ce8:	7859      	ldrb	r1, [r3, #1]
 8006cea:	6101      	str	r1, [r0, #16]
        hi2c->pBuffPtr++;
 8006cec:	3302      	adds	r3, #2
 8006cee:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8006cf0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006cf2:	3b01      	subs	r3, #1
 8006cf4:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8006cf6:	3a02      	subs	r2, #2
        hi2c->XferCount--;
 8006cf8:	8563      	strh	r3, [r4, #42]	; 0x2a
        hi2c->XferSize--;
 8006cfa:	8522      	strh	r2, [r4, #40]	; 0x28
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006cfc:	4632      	mov	r2, r6
 8006cfe:	4639      	mov	r1, r7
 8006d00:	4620      	mov	r0, r4
 8006d02:	f7ff fd65 	bl	80067d0 <I2C_WaitOnBTFFlagUntilTimeout>
 8006d06:	2800      	cmp	r0, #0
 8006d08:	d0a9      	beq.n	8006c5e <HAL_I2C_Master_Transmit+0xf2>
 8006d0a:	e7cf      	b.n	8006cac <HAL_I2C_Master_Transmit+0x140>
 8006d0c:	00100002 	.word	0x00100002
 8006d10:	ffff0000 	.word	0xffff0000
 8006d14:	00010002 	.word	0x00010002
 8006d18:	00010008 	.word	0x00010008

08006d1c <HAL_I2C_Master_Receive>:
{
 8006d1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8006d20:	4604      	mov	r4, r0
 8006d22:	b089      	sub	sp, #36	; 0x24
 8006d24:	4698      	mov	r8, r3
 8006d26:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8006d28:	460e      	mov	r6, r1
 8006d2a:	4691      	mov	r9, r2
  uint32_t tickstart = HAL_GetTick();
 8006d2c:	f7ff fa28 	bl	8006180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d30:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8006d34:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8006d36:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8006d38:	d004      	beq.n	8006d44 <HAL_I2C_Master_Receive+0x28>
    return HAL_BUSY;
 8006d3a:	2602      	movs	r6, #2
}
 8006d3c:	4630      	mov	r0, r6
 8006d3e:	b009      	add	sp, #36	; 0x24
 8006d40:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8006d44:	9000      	str	r0, [sp, #0]
 8006d46:	499a      	ldr	r1, [pc, #616]	; (8006fb0 <HAL_I2C_Master_Receive+0x294>)
 8006d48:	2319      	movs	r3, #25
 8006d4a:	2201      	movs	r2, #1
 8006d4c:	4620      	mov	r0, r4
 8006d4e:	f7ff fca3 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006d52:	2800      	cmp	r0, #0
 8006d54:	d1f1      	bne.n	8006d3a <HAL_I2C_Master_Receive+0x1e>
    __HAL_LOCK(hi2c);
 8006d56:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8006d5a:	2b01      	cmp	r3, #1
 8006d5c:	d0ed      	beq.n	8006d3a <HAL_I2C_Master_Receive+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d5e:	6821      	ldr	r1, [r4, #0]
    __HAL_LOCK(hi2c);
 8006d60:	2301      	movs	r3, #1
 8006d62:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8006d66:	680b      	ldr	r3, [r1, #0]
 8006d68:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8006d6a:	bf5e      	ittt	pl
 8006d6c:	680b      	ldrpl	r3, [r1, #0]
 8006d6e:	f043 0301 	orrpl.w	r3, r3, #1
 8006d72:	600b      	strpl	r3, [r1, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006d74:	680b      	ldr	r3, [r1, #0]
 8006d76:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006d7a:	600b      	str	r3, [r1, #0]
    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8006d7c:	2322      	movs	r3, #34	; 0x22
 8006d7e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 8006d82:	2310      	movs	r3, #16
 8006d84:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8006d88:	2300      	movs	r3, #0
 8006d8a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->XferCount   = Size;
 8006d8c:	f8a4 802a 	strh.w	r8, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8006d90:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006d92:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8006d94:	4b87      	ldr	r3, [pc, #540]	; (8006fb4 <HAL_I2C_Master_Receive+0x298>)
 8006d96:	62e3      	str	r3, [r4, #44]	; 0x2c
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8006d98:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006d9a:	680a      	ldr	r2, [r1, #0]
    hi2c->pBuffPtr    = pData;
 8006d9c:	f8c4 9024 	str.w	r9, [r4, #36]	; 0x24
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006da0:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8006da4:	2b08      	cmp	r3, #8
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006da6:	600a      	str	r2, [r1, #0]
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8006da8:	d004      	beq.n	8006db4 <HAL_I2C_Master_Receive+0x98>
 8006daa:	2b01      	cmp	r3, #1
 8006dac:	d002      	beq.n	8006db4 <HAL_I2C_Master_Receive+0x98>
 8006dae:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 8006db2:	d104      	bne.n	8006dbe <HAL_I2C_Master_Receive+0xa2>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006db4:	680b      	ldr	r3, [r1, #0]
 8006db6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8006dba:	600b      	str	r3, [r1, #0]
 8006dbc:	e002      	b.n	8006dc4 <HAL_I2C_Master_Receive+0xa8>
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8006dbe:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8006dc0:	2b11      	cmp	r3, #17
 8006dc2:	d0f7      	beq.n	8006db4 <HAL_I2C_Master_Receive+0x98>
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006dc4:	463b      	mov	r3, r7
 8006dc6:	9500      	str	r5, [sp, #0]
 8006dc8:	2200      	movs	r2, #0
 8006dca:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006dce:	4620      	mov	r0, r4
 8006dd0:	f7ff fc62 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006dd4:	6823      	ldr	r3, [r4, #0]
 8006dd6:	b138      	cbz	r0, 8006de8 <HAL_I2C_Master_Receive+0xcc>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006dd8:	681b      	ldr	r3, [r3, #0]
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006dda:	05d8      	lsls	r0, r3, #23
 8006ddc:	d502      	bpl.n	8006de4 <HAL_I2C_Master_Receive+0xc8>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8006dde:	f44f 7300 	mov.w	r3, #512	; 0x200
 8006de2:	6423      	str	r3, [r4, #64]	; 0x40
      return HAL_ERROR;
 8006de4:	2601      	movs	r6, #1
 8006de6:	e7a9      	b.n	8006d3c <HAL_I2C_Master_Receive+0x20>
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8006de8:	6922      	ldr	r2, [r4, #16]
 8006dea:	f5b2 4f80 	cmp.w	r2, #16384	; 0x4000
 8006dee:	d127      	bne.n	8006e40 <HAL_I2C_Master_Receive+0x124>
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8006df0:	f046 0601 	orr.w	r6, r6, #1
 8006df4:	b2f6      	uxtb	r6, r6
 8006df6:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006df8:	496f      	ldr	r1, [pc, #444]	; (8006fb8 <HAL_I2C_Master_Receive+0x29c>)
 8006dfa:	462b      	mov	r3, r5
 8006dfc:	463a      	mov	r2, r7
 8006dfe:	4620      	mov	r0, r4
 8006e00:	f7ff fc7c 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e04:	4606      	mov	r6, r0
 8006e06:	2800      	cmp	r0, #0
 8006e08:	d1ec      	bne.n	8006de4 <HAL_I2C_Master_Receive+0xc8>
    if (hi2c->XferSize == 0U)
 8006e0a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e0c:	6821      	ldr	r1, [r4, #0]
    if (hi2c->XferSize == 0U)
 8006e0e:	2b00      	cmp	r3, #0
 8006e10:	d14b      	bne.n	8006eaa <HAL_I2C_Master_Receive+0x18e>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e12:	9003      	str	r0, [sp, #12]
 8006e14:	694b      	ldr	r3, [r1, #20]
 8006e16:	9303      	str	r3, [sp, #12]
 8006e18:	698b      	ldr	r3, [r1, #24]
 8006e1a:	9303      	str	r3, [sp, #12]
 8006e1c:	9b03      	ldr	r3, [sp, #12]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006e1e:	680b      	ldr	r3, [r1, #0]
 8006e20:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8006e24:	600b      	str	r3, [r1, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006e26:	f8df 8198 	ldr.w	r8, [pc, #408]	; 8006fc0 <HAL_I2C_Master_Receive+0x2a4>
    while (hi2c->XferSize > 0U)
 8006e2a:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006e2c:	2b00      	cmp	r3, #0
 8006e2e:	d164      	bne.n	8006efa <HAL_I2C_Master_Receive+0x1de>
    hi2c->State = HAL_I2C_STATE_READY;
 8006e30:	2220      	movs	r2, #32
 8006e32:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8006e36:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8006e3a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8006e3e:	e77d      	b.n	8006d3c <HAL_I2C_Master_Receive+0x20>
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8006e40:	ea4f 18e6 	mov.w	r8, r6, asr #7
 8006e44:	f008 0806 	and.w	r8, r8, #6
 8006e48:	f048 02f0 	orr.w	r2, r8, #240	; 0xf0
 8006e4c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8006e4e:	495b      	ldr	r1, [pc, #364]	; (8006fbc <HAL_I2C_Master_Receive+0x2a0>)
 8006e50:	462b      	mov	r3, r5
 8006e52:	463a      	mov	r2, r7
 8006e54:	4620      	mov	r0, r4
 8006e56:	f7ff fc51 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e5a:	2800      	cmp	r0, #0
 8006e5c:	d1c2      	bne.n	8006de4 <HAL_I2C_Master_Receive+0xc8>
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8006e5e:	6823      	ldr	r3, [r4, #0]
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006e60:	4955      	ldr	r1, [pc, #340]	; (8006fb8 <HAL_I2C_Master_Receive+0x29c>)
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8006e62:	b2f6      	uxtb	r6, r6
 8006e64:	611e      	str	r6, [r3, #16]
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8006e66:	463a      	mov	r2, r7
 8006e68:	462b      	mov	r3, r5
 8006e6a:	4620      	mov	r0, r4
 8006e6c:	f7ff fc46 	bl	80066fc <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8006e70:	2800      	cmp	r0, #0
 8006e72:	d1b7      	bne.n	8006de4 <HAL_I2C_Master_Receive+0xc8>
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006e74:	6823      	ldr	r3, [r4, #0]
 8006e76:	9007      	str	r0, [sp, #28]
 8006e78:	695a      	ldr	r2, [r3, #20]
 8006e7a:	9207      	str	r2, [sp, #28]
 8006e7c:	699a      	ldr	r2, [r3, #24]
 8006e7e:	9207      	str	r2, [sp, #28]
 8006e80:	9a07      	ldr	r2, [sp, #28]
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8006e82:	681a      	ldr	r2, [r3, #0]
 8006e84:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006e88:	601a      	str	r2, [r3, #0]
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8006e8a:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8006e8e:	4602      	mov	r2, r0
 8006e90:	9500      	str	r5, [sp, #0]
 8006e92:	463b      	mov	r3, r7
 8006e94:	4620      	mov	r0, r4
 8006e96:	f7ff fbff 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006e9a:	6822      	ldr	r2, [r4, #0]
 8006e9c:	b108      	cbz	r0, 8006ea2 <HAL_I2C_Master_Receive+0x186>
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8006e9e:	6813      	ldr	r3, [r2, #0]
 8006ea0:	e79b      	b.n	8006dda <HAL_I2C_Master_Receive+0xbe>
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8006ea2:	f048 03f1 	orr.w	r3, r8, #241	; 0xf1
 8006ea6:	6113      	str	r3, [r2, #16]
 8006ea8:	e7a6      	b.n	8006df8 <HAL_I2C_Master_Receive+0xdc>
    else if (hi2c->XferSize == 1U)
 8006eaa:	2b01      	cmp	r3, #1
 8006eac:	d10a      	bne.n	8006ec4 <HAL_I2C_Master_Receive+0x1a8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006eae:	680b      	ldr	r3, [r1, #0]
 8006eb0:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006eb4:	600b      	str	r3, [r1, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006eb6:	9004      	str	r0, [sp, #16]
 8006eb8:	694b      	ldr	r3, [r1, #20]
 8006eba:	9304      	str	r3, [sp, #16]
 8006ebc:	698b      	ldr	r3, [r1, #24]
 8006ebe:	9304      	str	r3, [sp, #16]
 8006ec0:	9b04      	ldr	r3, [sp, #16]
 8006ec2:	e7ac      	b.n	8006e1e <HAL_I2C_Master_Receive+0x102>
    else if (hi2c->XferSize == 2U)
 8006ec4:	2b02      	cmp	r3, #2
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ec6:	680b      	ldr	r3, [r1, #0]
    else if (hi2c->XferSize == 2U)
 8006ec8:	d10d      	bne.n	8006ee6 <HAL_I2C_Master_Receive+0x1ca>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006eca:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006ece:	600b      	str	r3, [r1, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8006ed0:	680b      	ldr	r3, [r1, #0]
 8006ed2:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8006ed6:	600b      	str	r3, [r1, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006ed8:	9005      	str	r0, [sp, #20]
 8006eda:	694b      	ldr	r3, [r1, #20]
 8006edc:	9305      	str	r3, [sp, #20]
 8006ede:	698b      	ldr	r3, [r1, #24]
 8006ee0:	9305      	str	r3, [sp, #20]
 8006ee2:	9b05      	ldr	r3, [sp, #20]
 8006ee4:	e79f      	b.n	8006e26 <HAL_I2C_Master_Receive+0x10a>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006ee6:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8006eea:	600b      	str	r3, [r1, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8006eec:	9006      	str	r0, [sp, #24]
 8006eee:	694b      	ldr	r3, [r1, #20]
 8006ef0:	9306      	str	r3, [sp, #24]
 8006ef2:	698b      	ldr	r3, [r1, #24]
 8006ef4:	9306      	str	r3, [sp, #24]
 8006ef6:	9b06      	ldr	r3, [sp, #24]
 8006ef8:	e795      	b.n	8006e26 <HAL_I2C_Master_Receive+0x10a>
      if (hi2c->XferSize <= 3U)
 8006efa:	2b03      	cmp	r3, #3
 8006efc:	d862      	bhi.n	8006fc4 <HAL_I2C_Master_Receive+0x2a8>
        if (hi2c->XferSize == 1U)
 8006efe:	2b01      	cmp	r3, #1
 8006f00:	d116      	bne.n	8006f30 <HAL_I2C_Master_Receive+0x214>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006f02:	462a      	mov	r2, r5
 8006f04:	4639      	mov	r1, r7
 8006f06:	4620      	mov	r0, r4
 8006f08:	f7ff fc33 	bl	8006772 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006f0c:	2800      	cmp	r0, #0
 8006f0e:	f47f af69 	bne.w	8006de4 <HAL_I2C_Master_Receive+0xc8>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f12:	6823      	ldr	r3, [r4, #0]
 8006f14:	691a      	ldr	r2, [r3, #16]
 8006f16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f18:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006f1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f1c:	3301      	adds	r3, #1
 8006f1e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006f20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f22:	3b01      	subs	r3, #1
 8006f24:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006f26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006f28:	3b01      	subs	r3, #1
 8006f2a:	b29b      	uxth	r3, r3
 8006f2c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8006f2e:	e77c      	b.n	8006e2a <HAL_I2C_Master_Receive+0x10e>
        else if (hi2c->XferSize == 2U)
 8006f30:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f32:	9500      	str	r5, [sp, #0]
 8006f34:	463b      	mov	r3, r7
 8006f36:	f04f 0200 	mov.w	r2, #0
 8006f3a:	4641      	mov	r1, r8
 8006f3c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8006f3e:	d11a      	bne.n	8006f76 <HAL_I2C_Master_Receive+0x25a>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f40:	f7ff fbaa 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006f44:	2800      	cmp	r0, #0
 8006f46:	f47f af4d 	bne.w	8006de4 <HAL_I2C_Master_Receive+0xc8>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8006f4a:	6823      	ldr	r3, [r4, #0]
 8006f4c:	681a      	ldr	r2, [r3, #0]
 8006f4e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006f52:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f54:	691a      	ldr	r2, [r3, #16]
 8006f56:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f58:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006f5a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006f5c:	1c53      	adds	r3, r2, #1
 8006f5e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006f60:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f62:	3b01      	subs	r3, #1
 8006f64:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006f66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006f68:	3b01      	subs	r3, #1
 8006f6a:	b29b      	uxth	r3, r3
 8006f6c:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f6e:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f70:	691b      	ldr	r3, [r3, #16]
 8006f72:	7053      	strb	r3, [r2, #1]
 8006f74:	e7d1      	b.n	8006f1a <HAL_I2C_Master_Receive+0x1fe>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f76:	f7ff fb8f 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8006f7a:	2800      	cmp	r0, #0
 8006f7c:	f47f af32 	bne.w	8006de4 <HAL_I2C_Master_Receive+0xc8>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8006f80:	6823      	ldr	r3, [r4, #0]
 8006f82:	681a      	ldr	r2, [r3, #0]
 8006f84:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006f88:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006f8a:	691a      	ldr	r2, [r3, #16]
 8006f8c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006f8e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8006f90:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006f92:	9500      	str	r5, [sp, #0]
          hi2c->pBuffPtr++;
 8006f94:	3301      	adds	r3, #1
 8006f96:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8006f98:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006f9a:	3b01      	subs	r3, #1
 8006f9c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8006f9e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006fa0:	3b01      	subs	r3, #1
 8006fa2:	b29b      	uxth	r3, r3
 8006fa4:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8006fa6:	4602      	mov	r2, r0
 8006fa8:	463b      	mov	r3, r7
 8006faa:	4641      	mov	r1, r8
 8006fac:	4620      	mov	r0, r4
 8006fae:	e7c7      	b.n	8006f40 <HAL_I2C_Master_Receive+0x224>
 8006fb0:	00100002 	.word	0x00100002
 8006fb4:	ffff0000 	.word	0xffff0000
 8006fb8:	00010002 	.word	0x00010002
 8006fbc:	00010008 	.word	0x00010008
 8006fc0:	00010004 	.word	0x00010004
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8006fc4:	462a      	mov	r2, r5
 8006fc6:	4639      	mov	r1, r7
 8006fc8:	4620      	mov	r0, r4
 8006fca:	f7ff fbd2 	bl	8006772 <I2C_WaitOnRXNEFlagUntilTimeout>
 8006fce:	2800      	cmp	r0, #0
 8006fd0:	f47f af08 	bne.w	8006de4 <HAL_I2C_Master_Receive+0xc8>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8006fd4:	6823      	ldr	r3, [r4, #0]
 8006fd6:	691a      	ldr	r2, [r3, #16]
 8006fd8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8006fda:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8006fdc:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006fde:	1c53      	adds	r3, r2, #1
 8006fe0:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8006fe2:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8006fe4:	3b01      	subs	r3, #1
 8006fe6:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8006fe8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8006fea:	3b01      	subs	r3, #1
 8006fec:	b29b      	uxth	r3, r3
 8006fee:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8006ff0:	6823      	ldr	r3, [r4, #0]
 8006ff2:	6959      	ldr	r1, [r3, #20]
 8006ff4:	0749      	lsls	r1, r1, #29
 8006ff6:	f57f af18 	bpl.w	8006e2a <HAL_I2C_Master_Receive+0x10e>
 8006ffa:	e7b9      	b.n	8006f70 <HAL_I2C_Master_Receive+0x254>

08006ffc <HAL_I2C_Mem_Write>:
{
 8006ffc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8007000:	4604      	mov	r4, r0
 8007002:	4699      	mov	r9, r3
 8007004:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8007006:	460f      	mov	r7, r1
 8007008:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800700a:	f7ff f8b9 	bl	8006180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 800700e:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007012:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007014:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007016:	d003      	beq.n	8007020 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8007018:	2002      	movs	r0, #2
}
 800701a:	b003      	add	sp, #12
 800701c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007020:	9000      	str	r0, [sp, #0]
 8007022:	493c      	ldr	r1, [pc, #240]	; (8007114 <HAL_I2C_Mem_Write+0x118>)
 8007024:	2319      	movs	r3, #25
 8007026:	2201      	movs	r2, #1
 8007028:	4620      	mov	r0, r4
 800702a:	f7ff fb35 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 800702e:	2800      	cmp	r0, #0
 8007030:	d1f2      	bne.n	8007018 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8007032:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8007036:	2b01      	cmp	r3, #1
 8007038:	d0ee      	beq.n	8007018 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800703a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 800703c:	2301      	movs	r3, #1
 800703e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007042:	6803      	ldr	r3, [r0, #0]
 8007044:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8007046:	bf5e      	ittt	pl
 8007048:	6803      	ldrpl	r3, [r0, #0]
 800704a:	f043 0301 	orrpl.w	r3, r3, #1
 800704e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007050:	6803      	ldr	r3, [r0, #0]
 8007052:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007056:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007058:	2321      	movs	r3, #33	; 0x21
 800705a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 800705e:	2340      	movs	r3, #64	; 0x40
 8007060:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007064:	2300      	movs	r3, #0
 8007066:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007068:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800706a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 800706c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8007070:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007072:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007074:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007076:	4b28      	ldr	r3, [pc, #160]	; (8007118 <HAL_I2C_Mem_Write+0x11c>)
 8007078:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800707a:	e9cd 6500 	strd	r6, r5, [sp]
 800707e:	464b      	mov	r3, r9
 8007080:	4642      	mov	r2, r8
 8007082:	4639      	mov	r1, r7
 8007084:	4620      	mov	r0, r4
 8007086:	f7ff fbef 	bl	8006868 <I2C_RequestMemoryWrite>
 800708a:	2800      	cmp	r0, #0
 800708c:	d02a      	beq.n	80070e4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 800708e:	2001      	movs	r0, #1
 8007090:	e7c3      	b.n	800701a <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007092:	f7ff fbc3 	bl	800681c <I2C_WaitOnTXEFlagUntilTimeout>
 8007096:	b140      	cbz	r0, 80070aa <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007098:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800709a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800709c:	bf01      	itttt	eq
 800709e:	6822      	ldreq	r2, [r4, #0]
 80070a0:	6813      	ldreq	r3, [r2, #0]
 80070a2:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80070a6:	6013      	streq	r3, [r2, #0]
 80070a8:	e7f1      	b.n	800708e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 80070aa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80070ac:	6827      	ldr	r7, [r4, #0]
 80070ae:	461a      	mov	r2, r3
 80070b0:	f812 1b01 	ldrb.w	r1, [r2], #1
 80070b4:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 80070b6:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 80070b8:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 80070ba:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 80070bc:	3a01      	subs	r2, #1
 80070be:	b292      	uxth	r2, r2
 80070c0:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070c2:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 80070c4:	1e48      	subs	r0, r1, #1
 80070c6:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070c8:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 80070ca:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 80070cc:	d50a      	bpl.n	80070e4 <HAL_I2C_Mem_Write+0xe8>
 80070ce:	b148      	cbz	r0, 80070e4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 80070d0:	785a      	ldrb	r2, [r3, #1]
 80070d2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 80070d4:	3302      	adds	r3, #2
 80070d6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80070d8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80070da:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80070dc:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80070de:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80070e0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80070e2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80070e4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80070e6:	462a      	mov	r2, r5
 80070e8:	4631      	mov	r1, r6
 80070ea:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80070ec:	2b00      	cmp	r3, #0
 80070ee:	d1d0      	bne.n	8007092 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80070f0:	f7ff fb6e 	bl	80067d0 <I2C_WaitOnBTFFlagUntilTimeout>
 80070f4:	2800      	cmp	r0, #0
 80070f6:	d1cf      	bne.n	8007098 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80070f8:	6822      	ldr	r2, [r4, #0]
 80070fa:	6813      	ldr	r3, [r2, #0]
 80070fc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007100:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8007102:	2320      	movs	r3, #32
 8007104:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007108:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 800710c:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8007110:	e783      	b.n	800701a <HAL_I2C_Mem_Write+0x1e>
 8007112:	bf00      	nop
 8007114:	00100002 	.word	0x00100002
 8007118:	ffff0000 	.word	0xffff0000

0800711c <HAL_I2C_Mem_Read>:
{
 800711c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007120:	4604      	mov	r4, r0
 8007122:	b087      	sub	sp, #28
 8007124:	4699      	mov	r9, r3
 8007126:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8007128:	460d      	mov	r5, r1
 800712a:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 800712c:	f7ff f828 	bl	8006180 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007130:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8007134:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8007136:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007138:	d004      	beq.n	8007144 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 800713a:	2502      	movs	r5, #2
}
 800713c:	4628      	mov	r0, r5
 800713e:	b007      	add	sp, #28
 8007140:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007144:	9000      	str	r0, [sp, #0]
 8007146:	4976      	ldr	r1, [pc, #472]	; (8007320 <HAL_I2C_Mem_Read+0x204>)
 8007148:	2319      	movs	r3, #25
 800714a:	2201      	movs	r2, #1
 800714c:	4620      	mov	r0, r4
 800714e:	f7ff faa3 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 8007152:	2800      	cmp	r0, #0
 8007154:	d1f1      	bne.n	800713a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8007156:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 800715a:	2b01      	cmp	r3, #1
 800715c:	d0ed      	beq.n	800713a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800715e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007160:	2301      	movs	r3, #1
 8007162:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007166:	6803      	ldr	r3, [r0, #0]
 8007168:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800716a:	bf5e      	ittt	pl
 800716c:	6803      	ldrpl	r3, [r0, #0]
 800716e:	f043 0301 	orrpl.w	r3, r3, #1
 8007172:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007174:	6803      	ldr	r3, [r0, #0]
 8007176:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800717a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 800717c:	2322      	movs	r3, #34	; 0x22
 800717e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007182:	2340      	movs	r3, #64	; 0x40
 8007184:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007188:	2300      	movs	r3, #0
 800718a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 800718c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800718e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007190:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007194:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007196:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007198:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800719a:	4b62      	ldr	r3, [pc, #392]	; (8007324 <HAL_I2C_Mem_Read+0x208>)
 800719c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 800719e:	4629      	mov	r1, r5
 80071a0:	e9cd 7600 	strd	r7, r6, [sp]
 80071a4:	464b      	mov	r3, r9
 80071a6:	4642      	mov	r2, r8
 80071a8:	4620      	mov	r0, r4
 80071aa:	f7ff fbb5 	bl	8006918 <I2C_RequestMemoryRead>
 80071ae:	4605      	mov	r5, r0
 80071b0:	b108      	cbz	r0, 80071b6 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 80071b2:	2501      	movs	r5, #1
 80071b4:	e7c2      	b.n	800713c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 80071b6:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80071b8:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 80071ba:	b9b2      	cbnz	r2, 80071ea <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80071bc:	9002      	str	r0, [sp, #8]
 80071be:	695a      	ldr	r2, [r3, #20]
 80071c0:	9202      	str	r2, [sp, #8]
 80071c2:	699a      	ldr	r2, [r3, #24]
 80071c4:	9202      	str	r2, [sp, #8]
 80071c6:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80071c8:	681a      	ldr	r2, [r3, #0]
 80071ca:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 80071ce:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80071d0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007328 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 80071d4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d12c      	bne.n	8007234 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 80071da:	2220      	movs	r2, #32
 80071dc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80071e0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80071e4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 80071e8:	e7a8      	b.n	800713c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 80071ea:	2a01      	cmp	r2, #1
 80071ec:	d10a      	bne.n	8007204 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80071ee:	681a      	ldr	r2, [r3, #0]
 80071f0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80071f4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80071f6:	9003      	str	r0, [sp, #12]
 80071f8:	695a      	ldr	r2, [r3, #20]
 80071fa:	9203      	str	r2, [sp, #12]
 80071fc:	699a      	ldr	r2, [r3, #24]
 80071fe:	9203      	str	r2, [sp, #12]
 8007200:	9a03      	ldr	r2, [sp, #12]
 8007202:	e7e1      	b.n	80071c8 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007204:	2a02      	cmp	r2, #2
 8007206:	d10e      	bne.n	8007226 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007208:	681a      	ldr	r2, [r3, #0]
 800720a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800720e:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007210:	681a      	ldr	r2, [r3, #0]
 8007212:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007216:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007218:	9004      	str	r0, [sp, #16]
 800721a:	695a      	ldr	r2, [r3, #20]
 800721c:	9204      	str	r2, [sp, #16]
 800721e:	699b      	ldr	r3, [r3, #24]
 8007220:	9304      	str	r3, [sp, #16]
 8007222:	9b04      	ldr	r3, [sp, #16]
 8007224:	e7d4      	b.n	80071d0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007226:	9005      	str	r0, [sp, #20]
 8007228:	695a      	ldr	r2, [r3, #20]
 800722a:	9205      	str	r2, [sp, #20]
 800722c:	699b      	ldr	r3, [r3, #24]
 800722e:	9305      	str	r3, [sp, #20]
 8007230:	9b05      	ldr	r3, [sp, #20]
 8007232:	e7cd      	b.n	80071d0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8007234:	2b03      	cmp	r3, #3
 8007236:	d856      	bhi.n	80072e6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8007238:	2b01      	cmp	r3, #1
 800723a:	d115      	bne.n	8007268 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800723c:	4632      	mov	r2, r6
 800723e:	4639      	mov	r1, r7
 8007240:	4620      	mov	r0, r4
 8007242:	f7ff fa96 	bl	8006772 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007246:	2800      	cmp	r0, #0
 8007248:	d1b3      	bne.n	80071b2 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800724a:	6823      	ldr	r3, [r4, #0]
 800724c:	691a      	ldr	r2, [r3, #16]
 800724e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007250:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007252:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007254:	3301      	adds	r3, #1
 8007256:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007258:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 800725a:	3b01      	subs	r3, #1
 800725c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800725e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007260:	3b01      	subs	r3, #1
 8007262:	b29b      	uxth	r3, r3
 8007264:	8563      	strh	r3, [r4, #42]	; 0x2a
 8007266:	e7b5      	b.n	80071d4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8007268:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 800726a:	9600      	str	r6, [sp, #0]
 800726c:	463b      	mov	r3, r7
 800726e:	f04f 0200 	mov.w	r2, #0
 8007272:	4641      	mov	r1, r8
 8007274:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8007276:	d119      	bne.n	80072ac <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007278:	f7ff fa0e 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 800727c:	2800      	cmp	r0, #0
 800727e:	d198      	bne.n	80071b2 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007280:	6823      	ldr	r3, [r4, #0]
 8007282:	681a      	ldr	r2, [r3, #0]
 8007284:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007288:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 800728a:	691a      	ldr	r2, [r3, #16]
 800728c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800728e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007290:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007292:	1c53      	adds	r3, r2, #1
 8007294:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007296:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007298:	3b01      	subs	r3, #1
 800729a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 800729c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800729e:	3b01      	subs	r3, #1
 80072a0:	b29b      	uxth	r3, r3
 80072a2:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072a4:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072a6:	691b      	ldr	r3, [r3, #16]
 80072a8:	7053      	strb	r3, [r2, #1]
 80072aa:	e7d2      	b.n	8007252 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072ac:	f7ff f9f4 	bl	8006698 <I2C_WaitOnFlagUntilTimeout>
 80072b0:	2800      	cmp	r0, #0
 80072b2:	f47f af7e 	bne.w	80071b2 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 80072b6:	6823      	ldr	r3, [r4, #0]
 80072b8:	681a      	ldr	r2, [r3, #0]
 80072ba:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80072be:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072c0:	691a      	ldr	r2, [r3, #16]
 80072c2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072c4:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 80072c6:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072c8:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 80072ca:	3301      	adds	r3, #1
 80072cc:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 80072ce:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 80072d0:	3b01      	subs	r3, #1
 80072d2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 80072d4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80072d6:	3b01      	subs	r3, #1
 80072d8:	b29b      	uxth	r3, r3
 80072da:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 80072dc:	4602      	mov	r2, r0
 80072de:	463b      	mov	r3, r7
 80072e0:	4641      	mov	r1, r8
 80072e2:	4620      	mov	r0, r4
 80072e4:	e7c8      	b.n	8007278 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80072e6:	4632      	mov	r2, r6
 80072e8:	4639      	mov	r1, r7
 80072ea:	4620      	mov	r0, r4
 80072ec:	f7ff fa41 	bl	8006772 <I2C_WaitOnRXNEFlagUntilTimeout>
 80072f0:	2800      	cmp	r0, #0
 80072f2:	f47f af5e 	bne.w	80071b2 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80072f6:	6823      	ldr	r3, [r4, #0]
 80072f8:	691a      	ldr	r2, [r3, #16]
 80072fa:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072fc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 80072fe:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007300:	1c53      	adds	r3, r2, #1
 8007302:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007304:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007306:	3b01      	subs	r3, #1
 8007308:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 800730a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800730c:	3b01      	subs	r3, #1
 800730e:	b29b      	uxth	r3, r3
 8007310:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8007312:	6823      	ldr	r3, [r4, #0]
 8007314:	6959      	ldr	r1, [r3, #20]
 8007316:	0749      	lsls	r1, r1, #29
 8007318:	f57f af5c 	bpl.w	80071d4 <HAL_I2C_Mem_Read+0xb8>
 800731c:	e7c3      	b.n	80072a6 <HAL_I2C_Mem_Read+0x18a>
 800731e:	bf00      	nop
 8007320:	00100002 	.word	0x00100002
 8007324:	ffff0000 	.word	0xffff0000
 8007328:	00010004 	.word	0x00010004

0800732c <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter new state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 800732c:	b510      	push	{r4, lr}
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800732e:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007332:	2b20      	cmp	r3, #32
 8007334:	b2dc      	uxtb	r4, r3
 8007336:	d116      	bne.n	8007366 <HAL_I2CEx_ConfigAnalogFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007338:	2324      	movs	r3, #36	; 0x24
 800733a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800733e:	6803      	ldr	r3, [r0, #0]
 8007340:	681a      	ldr	r2, [r3, #0]
 8007342:	f022 0201 	bic.w	r2, r2, #1
 8007346:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->FLTR &= ~(I2C_FLTR_ANOFF);
 8007348:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800734a:	f022 0210 	bic.w	r2, r2, #16
 800734e:	625a      	str	r2, [r3, #36]	; 0x24

    /* Disable the analog filter */
    hi2c->Instance->FLTR |= AnalogFilter;
 8007350:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8007352:	4311      	orrs	r1, r2
 8007354:	6259      	str	r1, [r3, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007356:	681a      	ldr	r2, [r3, #0]
 8007358:	f042 0201 	orr.w	r2, r2, #1
 800735c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800735e:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 8007362:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 8007364:	bd10      	pop	{r4, pc}
    return HAL_BUSY;
 8007366:	2002      	movs	r0, #2
 8007368:	e7fc      	b.n	8007364 <HAL_I2CEx_ConfigAnalogFilter+0x38>

0800736a <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between 0x00 and 0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 800736a:	b530      	push	{r4, r5, lr}

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800736c:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8007370:	2b20      	cmp	r3, #32
 8007372:	b2dc      	uxtb	r4, r3
 8007374:	d116      	bne.n	80073a4 <HAL_I2CEx_ConfigDigitalFilter+0x3a>
  {
    hi2c->State = HAL_I2C_STATE_BUSY;

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 8007376:	6802      	ldr	r2, [r0, #0]
    hi2c->State = HAL_I2C_STATE_BUSY;
 8007378:	2324      	movs	r3, #36	; 0x24
 800737a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    __HAL_I2C_DISABLE(hi2c);
 800737e:	6813      	ldr	r3, [r2, #0]
 8007380:	f023 0301 	bic.w	r3, r3, #1
 8007384:	6013      	str	r3, [r2, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->FLTR;
 8007386:	6a55      	ldr	r5, [r2, #36]	; 0x24

    /* Reset I2Cx DNF bit [3:0] */
    tmpreg &= ~(I2C_FLTR_DNF);
 8007388:	f64f 73f0 	movw	r3, #65520	; 0xfff0
 800738c:	402b      	ands	r3, r5

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter;
 800738e:	430b      	orrs	r3, r1

    /* Store the new register value */
    hi2c->Instance->FLTR = tmpreg;
 8007390:	b29b      	uxth	r3, r3
 8007392:	6253      	str	r3, [r2, #36]	; 0x24

    __HAL_I2C_ENABLE(hi2c);
 8007394:	6813      	ldr	r3, [r2, #0]
 8007396:	f043 0301 	orr.w	r3, r3, #1
 800739a:	6013      	str	r3, [r2, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800739c:	f880 403d 	strb.w	r4, [r0, #61]	; 0x3d

    return HAL_OK;
 80073a0:	2000      	movs	r0, #0
  }
  else
  {
    return HAL_BUSY;
  }
}
 80073a2:	bd30      	pop	{r4, r5, pc}
    return HAL_BUSY;
 80073a4:	2002      	movs	r0, #2
 80073a6:	e7fc      	b.n	80073a2 <HAL_I2CEx_ConfigDigitalFilter+0x38>

080073a8 <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073a8:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80073aa:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073ae:	01d2      	lsls	r2, r2, #7
 80073b0:	3284      	adds	r2, #132	; 0x84
 80073b2:	1883      	adds	r3, r0, r2
{
 80073b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073b8:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073ba:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073bc:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 80073be:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 80073c2:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80073c6:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073c8:	68c5      	ldr	r5, [r0, #12]
 80073ca:	f10c 0701 	add.w	r7, ip, #1
 80073ce:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073d2:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073d6:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 80073d8:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 80073da:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 80073de:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 80073e0:	68c5      	ldr	r5, [r0, #12]
 80073e2:	68ce      	ldr	r6, [r1, #12]
 80073e4:	f3c5 050a 	ubfx	r5, r5, #0, #11
 80073e8:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 80073ea:	689d      	ldr	r5, [r3, #8]
 80073ec:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 80073f0:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 80073f2:	68c7      	ldr	r7, [r0, #12]
 80073f4:	688d      	ldr	r5, [r1, #8]
 80073f6:	f3c7 070a 	ubfx	r7, r7, #0, #11
 80073fa:	3501      	adds	r5, #1
 80073fc:	443d      	add	r5, r7
 80073fe:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007402:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007404:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007406:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007408:	f025 0507 	bic.w	r5, r5, #7
 800740c:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800740e:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007412:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007414:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007416:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 800741a:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 800741e:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007422:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007426:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 800742a:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 800742e:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007432:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007434:	695d      	ldr	r5, [r3, #20]
 8007436:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 800743a:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 800743c:	694d      	ldr	r5, [r1, #20]
 800743e:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007440:	69dd      	ldr	r5, [r3, #28]
 8007442:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007446:	f025 0507 	bic.w	r5, r5, #7
 800744a:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 800744c:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007450:	433d      	orrs	r5, r7
 8007452:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007454:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007456:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007458:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 800745c:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800745e:	b31e      	cbz	r6, 80074a8 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007460:	2e01      	cmp	r6, #1
 8007462:	d023      	beq.n	80074ac <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007464:	1eb5      	subs	r5, r6, #2
 8007466:	2d02      	cmp	r5, #2
 8007468:	d922      	bls.n	80074b0 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 800746a:	2e07      	cmp	r6, #7
 800746c:	bf0c      	ite	eq
 800746e:	2502      	moveq	r5, #2
 8007470:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007472:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007474:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8007478:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 800747a:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 800747e:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007480:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007482:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007484:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007486:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007488:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 800748c:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 800748e:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8007490:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8007494:	f024 0407 	bic.w	r4, r4, #7
 8007498:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 800749a:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 800749c:	5883      	ldr	r3, [r0, r2]
 800749e:	f043 0301 	orr.w	r3, r3, #1
 80074a2:	5083      	str	r3, [r0, r2]
}
 80074a4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 80074a8:	2504      	movs	r5, #4
 80074aa:	e7e2      	b.n	8007472 <LTDC_SetConfig+0xca>
    tmp = 3U;
 80074ac:	2503      	movs	r5, #3
 80074ae:	e7e0      	b.n	8007472 <LTDC_SetConfig+0xca>
    tmp = 2U;
 80074b0:	2502      	movs	r5, #2
 80074b2:	e7de      	b.n	8007472 <LTDC_SetConfig+0xca>

080074b4 <HAL_LTDC_Init>:
{
 80074b4:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 80074b6:	4604      	mov	r4, r0
 80074b8:	2800      	cmp	r0, #0
 80074ba:	d063      	beq.n	8007584 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 80074bc:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 80074c0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80074c4:	b91b      	cbnz	r3, 80074ce <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 80074c6:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 80074ca:	f7fb fbcd 	bl	8002c68 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80074ce:	2302      	movs	r3, #2
 80074d0:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 80074d4:	6823      	ldr	r3, [r4, #0]
 80074d6:	699a      	ldr	r2, [r3, #24]
 80074d8:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 80074dc:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80074de:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 80074e2:	4302      	orrs	r2, r0
 80074e4:	68e0      	ldr	r0, [r4, #12]
 80074e6:	6999      	ldr	r1, [r3, #24]
 80074e8:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 80074ea:	6920      	ldr	r0, [r4, #16]
 80074ec:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 80074ee:	430a      	orrs	r2, r1
 80074f0:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80074f2:	689a      	ldr	r2, [r3, #8]
 80074f4:	4924      	ldr	r1, [pc, #144]	; (8007588 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 80074f6:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 80074f8:	400a      	ands	r2, r1
 80074fa:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 80074fc:	689a      	ldr	r2, [r3, #8]
 80074fe:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007502:	69a0      	ldr	r0, [r4, #24]
 8007504:	4302      	orrs	r2, r0
 8007506:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007508:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 800750a:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 800750c:	400a      	ands	r2, r1
 800750e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007510:	68da      	ldr	r2, [r3, #12]
 8007512:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007516:	6a20      	ldr	r0, [r4, #32]
 8007518:	4302      	orrs	r2, r0
 800751a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800751c:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800751e:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007520:	400a      	ands	r2, r1
 8007522:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007524:	691a      	ldr	r2, [r3, #16]
 8007526:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800752a:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800752c:	4302      	orrs	r2, r0
 800752e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007530:	695a      	ldr	r2, [r3, #20]
 8007532:	4011      	ands	r1, r2
 8007534:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007536:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007538:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 800753a:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800753e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007540:	430a      	orrs	r2, r1
 8007542:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007544:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007546:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 800754a:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 800754e:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007552:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007554:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007556:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 800755a:	430a      	orrs	r2, r1
 800755c:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007560:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007564:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007566:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007568:	f042 0206 	orr.w	r2, r2, #6
 800756c:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 800756e:	699a      	ldr	r2, [r3, #24]
 8007570:	f042 0201 	orr.w	r2, r2, #1
 8007574:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007576:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007578:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 800757a:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 800757e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007582:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007584:	2001      	movs	r0, #1
 8007586:	e7fc      	b.n	8007582 <HAL_LTDC_Init+0xce>
 8007588:	f000f800 	.word	0xf000f800

0800758c <HAL_LTDC_ErrorCallback>:
 800758c:	4770      	bx	lr

0800758e <HAL_LTDC_ReloadEventCallback>:
 800758e:	4770      	bx	lr

08007590 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007590:	6803      	ldr	r3, [r0, #0]
{
 8007592:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007594:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007596:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007598:	0772      	lsls	r2, r6, #29
{
 800759a:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 800759c:	d514      	bpl.n	80075c8 <HAL_LTDC_IRQHandler+0x38>
 800759e:	0769      	lsls	r1, r5, #29
 80075a0:	d512      	bpl.n	80075c8 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 80075a2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80075a4:	f022 0204 	bic.w	r2, r2, #4
 80075a8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 80075aa:	2204      	movs	r2, #4
 80075ac:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 80075ae:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 80075b2:	f043 0301 	orr.w	r3, r3, #1
 80075b6:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 80075ba:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80075bc:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80075c0:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80075c4:	f7ff ffe2 	bl	800758c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 80075c8:	07b2      	lsls	r2, r6, #30
 80075ca:	d516      	bpl.n	80075fa <HAL_LTDC_IRQHandler+0x6a>
 80075cc:	07ab      	lsls	r3, r5, #30
 80075ce:	d514      	bpl.n	80075fa <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 80075d0:	6823      	ldr	r3, [r4, #0]
 80075d2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80075d4:	f022 0202 	bic.w	r2, r2, #2
 80075d8:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 80075da:	2202      	movs	r2, #2
 80075dc:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 80075de:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 80075e2:	4313      	orrs	r3, r2
 80075e4:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 80075e8:	2304      	movs	r3, #4
 80075ea:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 80075ee:	2300      	movs	r3, #0
 80075f0:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 80075f4:	4620      	mov	r0, r4
 80075f6:	f7ff ffc9 	bl	800758c <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 80075fa:	07f0      	lsls	r0, r6, #31
 80075fc:	d510      	bpl.n	8007620 <HAL_LTDC_IRQHandler+0x90>
 80075fe:	07e9      	lsls	r1, r5, #31
 8007600:	d50e      	bpl.n	8007620 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007602:	6823      	ldr	r3, [r4, #0]
 8007604:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007606:	f022 0201 	bic.w	r2, r2, #1
 800760a:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800760c:	2201      	movs	r2, #1
 800760e:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007610:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007612:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007616:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 800761a:	4620      	mov	r0, r4
 800761c:	f7fa fc04 	bl	8001e28 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007620:	0732      	lsls	r2, r6, #28
 8007622:	d511      	bpl.n	8007648 <HAL_LTDC_IRQHandler+0xb8>
 8007624:	072b      	lsls	r3, r5, #28
 8007626:	d50f      	bpl.n	8007648 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007628:	6823      	ldr	r3, [r4, #0]
 800762a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800762c:	f022 0208 	bic.w	r2, r2, #8
 8007630:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007632:	2208      	movs	r2, #8
 8007634:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007636:	2301      	movs	r3, #1
 8007638:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800763c:	2300      	movs	r3, #0
 800763e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007642:	4620      	mov	r0, r4
 8007644:	f7ff ffa3 	bl	800758e <HAL_LTDC_ReloadEventCallback>
}
 8007648:	bd70      	pop	{r4, r5, r6, pc}

0800764a <HAL_LTDC_ConfigLayer>:
{
 800764a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 800764e:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007652:	2b01      	cmp	r3, #1
{
 8007654:	4606      	mov	r6, r0
 8007656:	460f      	mov	r7, r1
 8007658:	4694      	mov	ip, r2
 800765a:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 800765e:	d01f      	beq.n	80076a0 <HAL_LTDC_ConfigLayer+0x56>
 8007660:	f04f 0801 	mov.w	r8, #1
 8007664:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007668:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 800766c:	2434      	movs	r4, #52	; 0x34
 800766e:	460d      	mov	r5, r1
 8007670:	fb04 6402 	mla	r4, r4, r2, r6
 8007674:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007676:	3438      	adds	r4, #56	; 0x38
 8007678:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800767a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800767c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800767e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007680:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007682:	682b      	ldr	r3, [r5, #0]
 8007684:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007686:	4630      	mov	r0, r6
 8007688:	4662      	mov	r2, ip
 800768a:	4639      	mov	r1, r7
 800768c:	f7ff fe8c 	bl	80073a8 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007690:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007692:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007694:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007698:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 800769c:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80076a0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080076a4 <HAL_LTDC_ProgramLineEvent>:
  __HAL_LOCK(hltdc);
 80076a4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80076a8:	2b01      	cmp	r3, #1
 80076aa:	f04f 0302 	mov.w	r3, #2
 80076ae:	d012      	beq.n	80076d6 <HAL_LTDC_ProgramLineEvent+0x32>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80076b0:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 80076b4:	6803      	ldr	r3, [r0, #0]
 80076b6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076b8:	f022 0201 	bic.w	r2, r2, #1
 80076bc:	635a      	str	r2, [r3, #52]	; 0x34
  LTDC->LIPCR = (uint32_t)Line;
 80076be:	4a07      	ldr	r2, [pc, #28]	; (80076dc <HAL_LTDC_ProgramLineEvent+0x38>)
 80076c0:	6411      	str	r1, [r2, #64]	; 0x40
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_LI);
 80076c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80076c4:	f042 0201 	orr.w	r2, r2, #1
 80076c8:	635a      	str	r2, [r3, #52]	; 0x34
  hltdc->State = HAL_LTDC_STATE_READY;
 80076ca:	2301      	movs	r3, #1
 80076cc:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80076d0:	2300      	movs	r3, #0
 80076d2:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
  __HAL_LOCK(hltdc);
 80076d6:	4618      	mov	r0, r3
}
 80076d8:	4770      	bx	lr
 80076da:	bf00      	nop
 80076dc:	40016800 	.word	0x40016800

080076e0 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80076e0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80076e4:	4604      	mov	r4, r0
 80076e6:	b340      	cbz	r0, 800773a <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80076e8:	6803      	ldr	r3, [r0, #0]
 80076ea:	07dd      	lsls	r5, r3, #31
 80076ec:	d410      	bmi.n	8007710 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80076ee:	6823      	ldr	r3, [r4, #0]
 80076f0:	0798      	lsls	r0, r3, #30
 80076f2:	d45e      	bmi.n	80077b2 <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 80076f4:	6823      	ldr	r3, [r4, #0]
 80076f6:	071a      	lsls	r2, r3, #28
 80076f8:	f100 80a0 	bmi.w	800783c <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 80076fc:	6823      	ldr	r3, [r4, #0]
 80076fe:	075b      	lsls	r3, r3, #29
 8007700:	f100 80c0 	bmi.w	8007884 <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8007704:	69a0      	ldr	r0, [r4, #24]
 8007706:	2800      	cmp	r0, #0
 8007708:	f040 8128 	bne.w	800795c <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 800770c:	2000      	movs	r0, #0
 800770e:	e02b      	b.n	8007768 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007710:	4b8f      	ldr	r3, [pc, #572]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 8007712:	689a      	ldr	r2, [r3, #8]
 8007714:	f002 020c 	and.w	r2, r2, #12
 8007718:	2a04      	cmp	r2, #4
 800771a:	d007      	beq.n	800772c <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 800771c:	689a      	ldr	r2, [r3, #8]
 800771e:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 8007722:	2a08      	cmp	r2, #8
 8007724:	d10b      	bne.n	800773e <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8007726:	685a      	ldr	r2, [r3, #4]
 8007728:	0251      	lsls	r1, r2, #9
 800772a:	d508      	bpl.n	800773e <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800772c:	4b88      	ldr	r3, [pc, #544]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 800772e:	681b      	ldr	r3, [r3, #0]
 8007730:	039a      	lsls	r2, r3, #14
 8007732:	d5dc      	bpl.n	80076ee <HAL_RCC_OscConfig+0xe>
 8007734:	6863      	ldr	r3, [r4, #4]
 8007736:	2b00      	cmp	r3, #0
 8007738:	d1d9      	bne.n	80076ee <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 800773a:	2001      	movs	r0, #1
 800773c:	e014      	b.n	8007768 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800773e:	6862      	ldr	r2, [r4, #4]
 8007740:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8007744:	d113      	bne.n	800776e <HAL_RCC_OscConfig+0x8e>
 8007746:	681a      	ldr	r2, [r3, #0]
 8007748:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 800774c:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 800774e:	f7fe fd17 	bl	8006180 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007752:	4e7f      	ldr	r6, [pc, #508]	; (8007950 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007754:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007756:	6833      	ldr	r3, [r6, #0]
 8007758:	039b      	lsls	r3, r3, #14
 800775a:	d4c8      	bmi.n	80076ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800775c:	f7fe fd10 	bl	8006180 <HAL_GetTick>
 8007760:	1b40      	subs	r0, r0, r5
 8007762:	2864      	cmp	r0, #100	; 0x64
 8007764:	d9f7      	bls.n	8007756 <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8007766:	2003      	movs	r0, #3
}
 8007768:	b002      	add	sp, #8
 800776a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800776e:	4d78      	ldr	r5, [pc, #480]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 8007770:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8007774:	682b      	ldr	r3, [r5, #0]
 8007776:	d107      	bne.n	8007788 <HAL_RCC_OscConfig+0xa8>
 8007778:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 800777c:	602b      	str	r3, [r5, #0]
 800777e:	682b      	ldr	r3, [r5, #0]
 8007780:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8007784:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007786:	e7e2      	b.n	800774e <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8007788:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800778c:	602b      	str	r3, [r5, #0]
 800778e:	682b      	ldr	r3, [r5, #0]
 8007790:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007794:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8007796:	2a00      	cmp	r2, #0
 8007798:	d1d9      	bne.n	800774e <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 800779a:	f7fe fcf1 	bl	8006180 <HAL_GetTick>
 800779e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 80077a0:	682b      	ldr	r3, [r5, #0]
 80077a2:	039f      	lsls	r7, r3, #14
 80077a4:	d5a3      	bpl.n	80076ee <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80077a6:	f7fe fceb 	bl	8006180 <HAL_GetTick>
 80077aa:	1b80      	subs	r0, r0, r6
 80077ac:	2864      	cmp	r0, #100	; 0x64
 80077ae:	d9f7      	bls.n	80077a0 <HAL_RCC_OscConfig+0xc0>
 80077b0:	e7d9      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80077b2:	4b67      	ldr	r3, [pc, #412]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 80077b4:	689a      	ldr	r2, [r3, #8]
 80077b6:	f012 0f0c 	tst.w	r2, #12
 80077ba:	d007      	beq.n	80077cc <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80077bc:	689a      	ldr	r2, [r3, #8]
 80077be:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 80077c2:	2a08      	cmp	r2, #8
 80077c4:	d111      	bne.n	80077ea <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 80077c6:	685b      	ldr	r3, [r3, #4]
 80077c8:	025e      	lsls	r6, r3, #9
 80077ca:	d40e      	bmi.n	80077ea <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80077cc:	4a60      	ldr	r2, [pc, #384]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 80077ce:	6813      	ldr	r3, [r2, #0]
 80077d0:	079d      	lsls	r5, r3, #30
 80077d2:	d502      	bpl.n	80077da <HAL_RCC_OscConfig+0xfa>
 80077d4:	68e3      	ldr	r3, [r4, #12]
 80077d6:	2b01      	cmp	r3, #1
 80077d8:	d1af      	bne.n	800773a <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80077da:	6813      	ldr	r3, [r2, #0]
 80077dc:	6921      	ldr	r1, [r4, #16]
 80077de:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 80077e2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80077e6:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 80077e8:	e784      	b.n	80076f4 <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 80077ea:	68e2      	ldr	r2, [r4, #12]
 80077ec:	4b59      	ldr	r3, [pc, #356]	; (8007954 <HAL_RCC_OscConfig+0x274>)
 80077ee:	b1b2      	cbz	r2, 800781e <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 80077f0:	2201      	movs	r2, #1
 80077f2:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 80077f4:	f7fe fcc4 	bl	8006180 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80077f8:	4d55      	ldr	r5, [pc, #340]	; (8007950 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 80077fa:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80077fc:	682b      	ldr	r3, [r5, #0]
 80077fe:	0798      	lsls	r0, r3, #30
 8007800:	d507      	bpl.n	8007812 <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8007802:	682b      	ldr	r3, [r5, #0]
 8007804:	6922      	ldr	r2, [r4, #16]
 8007806:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 800780a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800780e:	602b      	str	r3, [r5, #0]
 8007810:	e770      	b.n	80076f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007812:	f7fe fcb5 	bl	8006180 <HAL_GetTick>
 8007816:	1b80      	subs	r0, r0, r6
 8007818:	2802      	cmp	r0, #2
 800781a:	d9ef      	bls.n	80077fc <HAL_RCC_OscConfig+0x11c>
 800781c:	e7a3      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 800781e:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8007820:	f7fe fcae 	bl	8006180 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007824:	4e4a      	ldr	r6, [pc, #296]	; (8007950 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8007826:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8007828:	6833      	ldr	r3, [r6, #0]
 800782a:	0799      	lsls	r1, r3, #30
 800782c:	f57f af62 	bpl.w	80076f4 <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8007830:	f7fe fca6 	bl	8006180 <HAL_GetTick>
 8007834:	1b40      	subs	r0, r0, r5
 8007836:	2802      	cmp	r0, #2
 8007838:	d9f6      	bls.n	8007828 <HAL_RCC_OscConfig+0x148>
 800783a:	e794      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 800783c:	6962      	ldr	r2, [r4, #20]
 800783e:	4b45      	ldr	r3, [pc, #276]	; (8007954 <HAL_RCC_OscConfig+0x274>)
 8007840:	b182      	cbz	r2, 8007864 <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8007842:	2201      	movs	r2, #1
 8007844:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007848:	f7fe fc9a 	bl	8006180 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 800784c:	4e40      	ldr	r6, [pc, #256]	; (8007950 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800784e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8007850:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007852:	079f      	lsls	r7, r3, #30
 8007854:	f53f af52 	bmi.w	80076fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007858:	f7fe fc92 	bl	8006180 <HAL_GetTick>
 800785c:	1b40      	subs	r0, r0, r5
 800785e:	2802      	cmp	r0, #2
 8007860:	d9f6      	bls.n	8007850 <HAL_RCC_OscConfig+0x170>
 8007862:	e780      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8007864:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8007868:	f7fe fc8a 	bl	8006180 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 800786c:	4e38      	ldr	r6, [pc, #224]	; (8007950 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 800786e:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8007870:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8007872:	0798      	lsls	r0, r3, #30
 8007874:	f57f af42 	bpl.w	80076fc <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8007878:	f7fe fc82 	bl	8006180 <HAL_GetTick>
 800787c:	1b40      	subs	r0, r0, r5
 800787e:	2802      	cmp	r0, #2
 8007880:	d9f6      	bls.n	8007870 <HAL_RCC_OscConfig+0x190>
 8007882:	e770      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007884:	4b32      	ldr	r3, [pc, #200]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 8007886:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007888:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 800788c:	d128      	bne.n	80078e0 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 800788e:	9201      	str	r2, [sp, #4]
 8007890:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007892:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007896:	641a      	str	r2, [r3, #64]	; 0x40
 8007898:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800789a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800789e:	9301      	str	r3, [sp, #4]
 80078a0:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 80078a2:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80078a4:	4d2c      	ldr	r5, [pc, #176]	; (8007958 <HAL_RCC_OscConfig+0x278>)
 80078a6:	682b      	ldr	r3, [r5, #0]
 80078a8:	05d9      	lsls	r1, r3, #23
 80078aa:	d51b      	bpl.n	80078e4 <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80078ac:	68a3      	ldr	r3, [r4, #8]
 80078ae:	4d28      	ldr	r5, [pc, #160]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 80078b0:	2b01      	cmp	r3, #1
 80078b2:	d127      	bne.n	8007904 <HAL_RCC_OscConfig+0x224>
 80078b4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80078b6:	f043 0301 	orr.w	r3, r3, #1
 80078ba:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80078bc:	f7fe fc60 	bl	8006180 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80078c0:	4e23      	ldr	r6, [pc, #140]	; (8007950 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 80078c2:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80078c4:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80078c8:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80078ca:	079b      	lsls	r3, r3, #30
 80078cc:	d539      	bpl.n	8007942 <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 80078ce:	2f00      	cmp	r7, #0
 80078d0:	f43f af18 	beq.w	8007704 <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80078d4:	4a1e      	ldr	r2, [pc, #120]	; (8007950 <HAL_RCC_OscConfig+0x270>)
 80078d6:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80078d8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80078dc:	6413      	str	r3, [r2, #64]	; 0x40
 80078de:	e711      	b.n	8007704 <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80078e0:	2700      	movs	r7, #0
 80078e2:	e7df      	b.n	80078a4 <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80078e4:	682b      	ldr	r3, [r5, #0]
 80078e6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80078ea:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80078ec:	f7fe fc48 	bl	8006180 <HAL_GetTick>
 80078f0:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80078f2:	682b      	ldr	r3, [r5, #0]
 80078f4:	05da      	lsls	r2, r3, #23
 80078f6:	d4d9      	bmi.n	80078ac <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80078f8:	f7fe fc42 	bl	8006180 <HAL_GetTick>
 80078fc:	1b80      	subs	r0, r0, r6
 80078fe:	2802      	cmp	r0, #2
 8007900:	d9f7      	bls.n	80078f2 <HAL_RCC_OscConfig+0x212>
 8007902:	e730      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8007904:	2b05      	cmp	r3, #5
 8007906:	d104      	bne.n	8007912 <HAL_RCC_OscConfig+0x232>
 8007908:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 800790a:	f043 0304 	orr.w	r3, r3, #4
 800790e:	672b      	str	r3, [r5, #112]	; 0x70
 8007910:	e7d0      	b.n	80078b4 <HAL_RCC_OscConfig+0x1d4>
 8007912:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8007914:	f022 0201 	bic.w	r2, r2, #1
 8007918:	672a      	str	r2, [r5, #112]	; 0x70
 800791a:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 800791c:	f022 0204 	bic.w	r2, r2, #4
 8007920:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8007922:	2b00      	cmp	r3, #0
 8007924:	d1ca      	bne.n	80078bc <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8007926:	f7fe fc2b 	bl	8006180 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800792a:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 800792e:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8007930:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007932:	0798      	lsls	r0, r3, #30
 8007934:	d5cb      	bpl.n	80078ce <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007936:	f7fe fc23 	bl	8006180 <HAL_GetTick>
 800793a:	1b80      	subs	r0, r0, r6
 800793c:	4540      	cmp	r0, r8
 800793e:	d9f7      	bls.n	8007930 <HAL_RCC_OscConfig+0x250>
 8007940:	e711      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007942:	f7fe fc1d 	bl	8006180 <HAL_GetTick>
 8007946:	1b40      	subs	r0, r0, r5
 8007948:	4540      	cmp	r0, r8
 800794a:	d9bd      	bls.n	80078c8 <HAL_RCC_OscConfig+0x1e8>
 800794c:	e70b      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
 800794e:	bf00      	nop
 8007950:	40023800 	.word	0x40023800
 8007954:	42470000 	.word	0x42470000
 8007958:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 800795c:	4d36      	ldr	r5, [pc, #216]	; (8007a38 <HAL_RCC_OscConfig+0x358>)
 800795e:	68ab      	ldr	r3, [r5, #8]
 8007960:	f003 030c 	and.w	r3, r3, #12
 8007964:	2b08      	cmp	r3, #8
 8007966:	d03d      	beq.n	80079e4 <HAL_RCC_OscConfig+0x304>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007968:	4b34      	ldr	r3, [pc, #208]	; (8007a3c <HAL_RCC_OscConfig+0x35c>)
 800796a:	2200      	movs	r2, #0
 800796c:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 800796e:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8007970:	d12b      	bne.n	80079ca <HAL_RCC_OscConfig+0x2ea>
        tickstart = HAL_GetTick();
 8007972:	f7fe fc05 	bl	8006180 <HAL_GetTick>
 8007976:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8007978:	682b      	ldr	r3, [r5, #0]
 800797a:	0199      	lsls	r1, r3, #6
 800797c:	d41f      	bmi.n	80079be <HAL_RCC_OscConfig+0x2de>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 800797e:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8007982:	4313      	orrs	r3, r2
 8007984:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007986:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800798a:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800798c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8007990:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007992:	0852      	lsrs	r2, r2, #1
 8007994:	3a01      	subs	r2, #1
 8007996:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800799a:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 800799c:	4b27      	ldr	r3, [pc, #156]	; (8007a3c <HAL_RCC_OscConfig+0x35c>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 800799e:	4d26      	ldr	r5, [pc, #152]	; (8007a38 <HAL_RCC_OscConfig+0x358>)
        __HAL_RCC_PLL_ENABLE();
 80079a0:	2201      	movs	r2, #1
 80079a2:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 80079a4:	f7fe fbec 	bl	8006180 <HAL_GetTick>
 80079a8:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80079aa:	682b      	ldr	r3, [r5, #0]
 80079ac:	019a      	lsls	r2, r3, #6
 80079ae:	f53f aead 	bmi.w	800770c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079b2:	f7fe fbe5 	bl	8006180 <HAL_GetTick>
 80079b6:	1b00      	subs	r0, r0, r4
 80079b8:	2802      	cmp	r0, #2
 80079ba:	d9f6      	bls.n	80079aa <HAL_RCC_OscConfig+0x2ca>
 80079bc:	e6d3      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079be:	f7fe fbdf 	bl	8006180 <HAL_GetTick>
 80079c2:	1b80      	subs	r0, r0, r6
 80079c4:	2802      	cmp	r0, #2
 80079c6:	d9d7      	bls.n	8007978 <HAL_RCC_OscConfig+0x298>
 80079c8:	e6cd      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80079ca:	f7fe fbd9 	bl	8006180 <HAL_GetTick>
 80079ce:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80079d0:	682b      	ldr	r3, [r5, #0]
 80079d2:	019b      	lsls	r3, r3, #6
 80079d4:	f57f ae9a 	bpl.w	800770c <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80079d8:	f7fe fbd2 	bl	8006180 <HAL_GetTick>
 80079dc:	1b00      	subs	r0, r0, r4
 80079de:	2802      	cmp	r0, #2
 80079e0:	d9f6      	bls.n	80079d0 <HAL_RCC_OscConfig+0x2f0>
 80079e2:	e6c0      	b.n	8007766 <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80079e4:	2801      	cmp	r0, #1
 80079e6:	f43f aebf 	beq.w	8007768 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80079ea:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80079ec:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80079ee:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80079f2:	4291      	cmp	r1, r2
 80079f4:	f47f aea1 	bne.w	800773a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80079f8:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80079fa:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80079fe:	428a      	cmp	r2, r1
 8007a00:	f47f ae9b 	bne.w	800773a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8007a04:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8007a06:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8007a0a:	401a      	ands	r2, r3
 8007a0c:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8007a10:	f47f ae93 	bne.w	800773a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8007a14:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007a16:	0852      	lsrs	r2, r2, #1
 8007a18:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8007a1c:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8007a1e:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8007a22:	f47f ae8a 	bne.w	800773a <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
 8007a26:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007a28:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8007a2c:	ebb3 6f02 	cmp.w	r3, r2, lsl #24
 8007a30:	f43f ae6c 	beq.w	800770c <HAL_RCC_OscConfig+0x2c>
 8007a34:	e681      	b.n	800773a <HAL_RCC_OscConfig+0x5a>
 8007a36:	bf00      	nop
 8007a38:	40023800 	.word	0x40023800
 8007a3c:	42470000 	.word	0x42470000

08007a40 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a40:	4913      	ldr	r1, [pc, #76]	; (8007a90 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8007a42:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a44:	688b      	ldr	r3, [r1, #8]
 8007a46:	f003 030c 	and.w	r3, r3, #12
 8007a4a:	2b04      	cmp	r3, #4
 8007a4c:	d01c      	beq.n	8007a88 <HAL_RCC_GetSysClockFreq+0x48>
 8007a4e:	2b08      	cmp	r3, #8
 8007a50:	d11c      	bne.n	8007a8c <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007a52:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007a54:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a56:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8007a58:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a5c:	bf14      	ite	ne
 8007a5e:	480d      	ldrne	r0, [pc, #52]	; (8007a94 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a60:	480d      	ldreq	r0, [pc, #52]	; (8007a98 <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a62:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8007a66:	bf18      	it	ne
 8007a68:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8007a6a:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8007a6e:	fba1 0100 	umull	r0, r1, r1, r0
 8007a72:	f7f9 f919 	bl	8000ca8 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8007a76:	4b06      	ldr	r3, [pc, #24]	; (8007a90 <HAL_RCC_GetSysClockFreq+0x50>)
 8007a78:	685b      	ldr	r3, [r3, #4]
 8007a7a:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8007a7e:	3301      	adds	r3, #1
 8007a80:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8007a82:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8007a86:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8007a88:	4802      	ldr	r0, [pc, #8]	; (8007a94 <HAL_RCC_GetSysClockFreq+0x54>)
 8007a8a:	e7fc      	b.n	8007a86 <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8007a8c:	4802      	ldr	r0, [pc, #8]	; (8007a98 <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8007a8e:	e7fa      	b.n	8007a86 <HAL_RCC_GetSysClockFreq+0x46>
 8007a90:	40023800 	.word	0x40023800
 8007a94:	007a1200 	.word	0x007a1200
 8007a98:	00f42400 	.word	0x00f42400

08007a9c <HAL_RCC_ClockConfig>:
{
 8007a9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007aa0:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8007aa2:	4604      	mov	r4, r0
 8007aa4:	b910      	cbnz	r0, 8007aac <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8007aa6:	2001      	movs	r0, #1
}
 8007aa8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8007aac:	4b44      	ldr	r3, [pc, #272]	; (8007bc0 <HAL_RCC_ClockConfig+0x124>)
 8007aae:	681a      	ldr	r2, [r3, #0]
 8007ab0:	f002 020f 	and.w	r2, r2, #15
 8007ab4:	428a      	cmp	r2, r1
 8007ab6:	d328      	bcc.n	8007b0a <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8007ab8:	6822      	ldr	r2, [r4, #0]
 8007aba:	0797      	lsls	r7, r2, #30
 8007abc:	d42d      	bmi.n	8007b1a <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8007abe:	07d0      	lsls	r0, r2, #31
 8007ac0:	d441      	bmi.n	8007b46 <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8007ac2:	4b3f      	ldr	r3, [pc, #252]	; (8007bc0 <HAL_RCC_ClockConfig+0x124>)
 8007ac4:	681a      	ldr	r2, [r3, #0]
 8007ac6:	f002 020f 	and.w	r2, r2, #15
 8007aca:	42aa      	cmp	r2, r5
 8007acc:	d866      	bhi.n	8007b9c <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007ace:	6822      	ldr	r2, [r4, #0]
 8007ad0:	0751      	lsls	r1, r2, #29
 8007ad2:	d46c      	bmi.n	8007bae <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007ad4:	0713      	lsls	r3, r2, #28
 8007ad6:	d507      	bpl.n	8007ae8 <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8007ad8:	4a3a      	ldr	r2, [pc, #232]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007ada:	6921      	ldr	r1, [r4, #16]
 8007adc:	6893      	ldr	r3, [r2, #8]
 8007ade:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8007ae2:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8007ae6:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8007ae8:	f7ff ffaa 	bl	8007a40 <HAL_RCC_GetSysClockFreq>
 8007aec:	4b35      	ldr	r3, [pc, #212]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007aee:	4a36      	ldr	r2, [pc, #216]	; (8007bc8 <HAL_RCC_ClockConfig+0x12c>)
 8007af0:	689b      	ldr	r3, [r3, #8]
 8007af2:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8007af6:	5cd3      	ldrb	r3, [r2, r3]
 8007af8:	40d8      	lsrs	r0, r3
 8007afa:	4b34      	ldr	r3, [pc, #208]	; (8007bcc <HAL_RCC_ClockConfig+0x130>)
 8007afc:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8007afe:	4b34      	ldr	r3, [pc, #208]	; (8007bd0 <HAL_RCC_ClockConfig+0x134>)
 8007b00:	6818      	ldr	r0, [r3, #0]
 8007b02:	f7fb fa9d 	bl	8003040 <HAL_InitTick>
  return HAL_OK;
 8007b06:	2000      	movs	r0, #0
 8007b08:	e7ce      	b.n	8007aa8 <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007b0a:	b2ca      	uxtb	r2, r1
 8007b0c:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007b0e:	681b      	ldr	r3, [r3, #0]
 8007b10:	f003 030f 	and.w	r3, r3, #15
 8007b14:	428b      	cmp	r3, r1
 8007b16:	d1c6      	bne.n	8007aa6 <HAL_RCC_ClockConfig+0xa>
 8007b18:	e7ce      	b.n	8007ab8 <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8007b1a:	4b2a      	ldr	r3, [pc, #168]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007b1c:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8007b20:	bf1e      	ittt	ne
 8007b22:	6899      	ldrne	r1, [r3, #8]
 8007b24:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8007b28:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8007b2a:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8007b2c:	bf42      	ittt	mi
 8007b2e:	6899      	ldrmi	r1, [r3, #8]
 8007b30:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8007b34:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8007b36:	4923      	ldr	r1, [pc, #140]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007b38:	68a0      	ldr	r0, [r4, #8]
 8007b3a:	688b      	ldr	r3, [r1, #8]
 8007b3c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8007b40:	4303      	orrs	r3, r0
 8007b42:	608b      	str	r3, [r1, #8]
 8007b44:	e7bb      	b.n	8007abe <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8007b46:	6862      	ldr	r2, [r4, #4]
 8007b48:	4b1e      	ldr	r3, [pc, #120]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007b4a:	2a01      	cmp	r2, #1
 8007b4c:	d11c      	bne.n	8007b88 <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8007b4e:	681b      	ldr	r3, [r3, #0]
 8007b50:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007b54:	d0a7      	beq.n	8007aa6 <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8007b56:	4e1b      	ldr	r6, [pc, #108]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007b58:	68b3      	ldr	r3, [r6, #8]
 8007b5a:	f023 0303 	bic.w	r3, r3, #3
 8007b5e:	4313      	orrs	r3, r2
 8007b60:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8007b62:	f7fe fb0d 	bl	8006180 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007b66:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8007b6a:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8007b6c:	68b3      	ldr	r3, [r6, #8]
 8007b6e:	6862      	ldr	r2, [r4, #4]
 8007b70:	f003 030c 	and.w	r3, r3, #12
 8007b74:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8007b78:	d0a3      	beq.n	8007ac2 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8007b7a:	f7fe fb01 	bl	8006180 <HAL_GetTick>
 8007b7e:	1bc0      	subs	r0, r0, r7
 8007b80:	4540      	cmp	r0, r8
 8007b82:	d9f3      	bls.n	8007b6c <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8007b84:	2003      	movs	r0, #3
 8007b86:	e78f      	b.n	8007aa8 <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007b88:	1e91      	subs	r1, r2, #2
 8007b8a:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b8c:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8007b8e:	d802      	bhi.n	8007b96 <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8007b90:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8007b94:	e7de      	b.n	8007b54 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8007b96:	f013 0f02 	tst.w	r3, #2
 8007b9a:	e7db      	b.n	8007b54 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8007b9c:	b2ea      	uxtb	r2, r5
 8007b9e:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8007ba0:	681b      	ldr	r3, [r3, #0]
 8007ba2:	f003 030f 	and.w	r3, r3, #15
 8007ba6:	42ab      	cmp	r3, r5
 8007ba8:	f47f af7d 	bne.w	8007aa6 <HAL_RCC_ClockConfig+0xa>
 8007bac:	e78f      	b.n	8007ace <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8007bae:	4905      	ldr	r1, [pc, #20]	; (8007bc4 <HAL_RCC_ClockConfig+0x128>)
 8007bb0:	68e0      	ldr	r0, [r4, #12]
 8007bb2:	688b      	ldr	r3, [r1, #8]
 8007bb4:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8007bb8:	4303      	orrs	r3, r0
 8007bba:	608b      	str	r3, [r1, #8]
 8007bbc:	e78a      	b.n	8007ad4 <HAL_RCC_ClockConfig+0x38>
 8007bbe:	bf00      	nop
 8007bc0:	40023c00 	.word	0x40023c00
 8007bc4:	40023800 	.word	0x40023800
 8007bc8:	08029cc3 	.word	0x08029cc3
 8007bcc:	20000074 	.word	0x20000074
 8007bd0:	2000007c 	.word	0x2000007c

08007bd4 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8007bd4:	4b04      	ldr	r3, [pc, #16]	; (8007be8 <HAL_RCC_GetPCLK1Freq+0x14>)
 8007bd6:	4a05      	ldr	r2, [pc, #20]	; (8007bec <HAL_RCC_GetPCLK1Freq+0x18>)
 8007bd8:	689b      	ldr	r3, [r3, #8]
 8007bda:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8007bde:	5cd3      	ldrb	r3, [r2, r3]
 8007be0:	4a03      	ldr	r2, [pc, #12]	; (8007bf0 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8007be2:	6810      	ldr	r0, [r2, #0]
}
 8007be4:	40d8      	lsrs	r0, r3
 8007be6:	4770      	bx	lr
 8007be8:	40023800 	.word	0x40023800
 8007bec:	08029cd3 	.word	0x08029cd3
 8007bf0:	20000074 	.word	0x20000074

08007bf4 <HAL_RCC_GetPCLK2Freq>:
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 8007bf4:	4b04      	ldr	r3, [pc, #16]	; (8007c08 <HAL_RCC_GetPCLK2Freq+0x14>)
 8007bf6:	4a05      	ldr	r2, [pc, #20]	; (8007c0c <HAL_RCC_GetPCLK2Freq+0x18>)
 8007bf8:	689b      	ldr	r3, [r3, #8]
 8007bfa:	f3c3 3342 	ubfx	r3, r3, #13, #3
 8007bfe:	5cd3      	ldrb	r3, [r2, r3]
 8007c00:	4a03      	ldr	r2, [pc, #12]	; (8007c10 <HAL_RCC_GetPCLK2Freq+0x1c>)
 8007c02:	6810      	ldr	r0, [r2, #0]
}
 8007c04:	40d8      	lsrs	r0, r3
 8007c06:	4770      	bx	lr
 8007c08:	40023800 	.word	0x40023800
 8007c0c:	08029cd3 	.word	0x08029cd3
 8007c10:	20000074 	.word	0x20000074

08007c14 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8007c14:	230f      	movs	r3, #15
 8007c16:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8007c18:	4b0b      	ldr	r3, [pc, #44]	; (8007c48 <HAL_RCC_GetClockConfig+0x34>)
 8007c1a:	689a      	ldr	r2, [r3, #8]
 8007c1c:	f002 0203 	and.w	r2, r2, #3
 8007c20:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8007c22:	689a      	ldr	r2, [r3, #8]
 8007c24:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8007c28:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8007c2a:	689a      	ldr	r2, [r3, #8]
 8007c2c:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8007c30:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8007c32:	689b      	ldr	r3, [r3, #8]
 8007c34:	08db      	lsrs	r3, r3, #3
 8007c36:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8007c3a:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8007c3c:	4b03      	ldr	r3, [pc, #12]	; (8007c4c <HAL_RCC_GetClockConfig+0x38>)
 8007c3e:	681b      	ldr	r3, [r3, #0]
 8007c40:	f003 030f 	and.w	r3, r3, #15
 8007c44:	600b      	str	r3, [r1, #0]
}
 8007c46:	4770      	bx	lr
 8007c48:	40023800 	.word	0x40023800
 8007c4c:	40023c00 	.word	0x40023c00

08007c50 <HAL_RCCEx_PeriphCLKConfig>:
  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*----------------------- Common configuration SAI/I2S ---------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == RCC_PERIPHCLK_SAI_PLLI2S) ||
 8007c50:	6803      	ldr	r3, [r0, #0]
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007c52:	f013 0f43 	tst.w	r3, #67	; 0x43
{
 8007c56:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007c58:	4604      	mov	r4, r0
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8007c5a:	f040 808c 	bne.w	8007d76 <HAL_RCCEx_PeriphCLKConfig+0x126>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI or LTDC Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8007c5e:	6823      	ldr	r3, [r4, #0]
 8007c60:	f013 0f0c 	tst.w	r3, #12
 8007c64:	d045      	beq.n	8007cf2 <HAL_RCCEx_PeriphCLKConfig+0xa2>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8007c66:	4b8b      	ldr	r3, [pc, #556]	; (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007c68:	4d8b      	ldr	r5, [pc, #556]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_DISABLE();
 8007c6a:	2200      	movs	r2, #0
 8007c6c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007c6e:	f7fe fa87 	bl	8006180 <HAL_GetTick>
 8007c72:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8007c74:	682b      	ldr	r3, [r5, #0]
 8007c76:	009f      	lsls	r7, r3, #2
 8007c78:	f100 80cf 	bmi.w	8007e1a <HAL_RCCEx_PeriphCLKConfig+0x1ca>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8007c7c:	6821      	ldr	r1, [r4, #0]
 8007c7e:	074e      	lsls	r6, r1, #29
 8007c80:	d515      	bpl.n	8007cae <HAL_RCCEx_PeriphCLKConfig+0x5e>
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007c82:	e9d4 0304 	ldrd	r0, r3, [r4, #16]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8007c86:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , PeriphClkInit->PLLSAI.PLLSAIQ, tmpreg1);
 8007c8a:	061b      	lsls	r3, r3, #24
 8007c8c:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8007c90:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007c94:	4313      	orrs	r3, r2
 8007c96:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8007c9a:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8007c9e:	6a22      	ldr	r2, [r4, #32]
 8007ca0:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8007ca4:	3a01      	subs	r2, #1
 8007ca6:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8007caa:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8007cae:	070d      	lsls	r5, r1, #28
 8007cb0:	d514      	bpl.n	8007cdc <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007cb2:	4a79      	ldr	r2, [pc, #484]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007cb4:	69a3      	ldr	r3, [r4, #24]
      tmpreg1 = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8007cb6:	f8d2 1088 	ldr.w	r1, [r2, #136]	; 0x88
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN , tmpreg1, PeriphClkInit->PLLSAI.PLLSAIR);
 8007cba:	6920      	ldr	r0, [r4, #16]
 8007cbc:	071b      	lsls	r3, r3, #28
 8007cbe:	f001 6170 	and.w	r1, r1, #251658240	; 0xf000000
 8007cc2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8007cc6:	430b      	orrs	r3, r1
 8007cc8:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8007ccc:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 8007cd0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8007cd2:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8007cd6:	430b      	orrs	r3, r1
 8007cd8:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }
    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8007cdc:	4b6d      	ldr	r3, [pc, #436]	; (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007cde:	4e6e      	ldr	r6, [pc, #440]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLSAI_ENABLE();
 8007ce0:	2201      	movs	r2, #1
 8007ce2:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 8007ce4:	f7fe fa4c 	bl	8006180 <HAL_GetTick>
 8007ce8:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8007cea:	6833      	ldr	r3, [r6, #0]
 8007cec:	0098      	lsls	r0, r3, #2
 8007cee:	f140 809b 	bpl.w	8007e28 <HAL_RCCEx_PeriphCLKConfig+0x1d8>
    }
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- RTC configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8007cf2:	6823      	ldr	r3, [r4, #0]
 8007cf4:	069b      	lsls	r3, r3, #26
 8007cf6:	d533      	bpl.n	8007d60 <HAL_RCCEx_PeriphCLKConfig+0x110>
  {
    /* Check for RTC Parameters used to output RTCCLK */
    assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->RTCClockSelection));

    /* Enable Power Clock*/
    __HAL_RCC_PWR_CLK_ENABLE();
 8007cf8:	2300      	movs	r3, #0
 8007cfa:	9301      	str	r3, [sp, #4]
 8007cfc:	4b66      	ldr	r3, [pc, #408]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)

    /* Enable write access to Backup domain */
    PWR->CR |= PWR_CR_DBP;
 8007cfe:	4d67      	ldr	r5, [pc, #412]	; (8007e9c <HAL_RCCEx_PeriphCLKConfig+0x24c>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8007d00:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007d02:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007d06:	641a      	str	r2, [r3, #64]	; 0x40
 8007d08:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007d0a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007d0e:	9301      	str	r3, [sp, #4]
 8007d10:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8007d12:	682b      	ldr	r3, [r5, #0]
 8007d14:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8007d18:	602b      	str	r3, [r5, #0]

    /* Get tick */
    tickstart = HAL_GetTick();
 8007d1a:	f7fe fa31 	bl	8006180 <HAL_GetTick>
 8007d1e:	4606      	mov	r6, r0

    while((PWR->CR & PWR_CR_DBP) == RESET)
 8007d20:	682b      	ldr	r3, [r5, #0]
 8007d22:	05d9      	lsls	r1, r3, #23
 8007d24:	f140 8087 	bpl.w	8007e36 <HAL_RCCEx_PeriphCLKConfig+0x1e6>
      {
        return HAL_TIMEOUT;
      }
    }
    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8007d28:	4d5b      	ldr	r5, [pc, #364]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007d2a:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007d2c:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8007d30:	f040 8088 	bne.w	8007e44 <HAL_RCCEx_PeriphCLKConfig+0x1f4>
            return HAL_TIMEOUT;
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007d34:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8007d36:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8007d3a:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8007d3e:	4a56      	ldr	r2, [pc, #344]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007d40:	f040 80a4 	bne.w	8007e8c <HAL_RCCEx_PeriphCLKConfig+0x23c>
 8007d44:	6891      	ldr	r1, [r2, #8]
 8007d46:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8007d4a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007d4e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8007d52:	4301      	orrs	r1, r0
 8007d54:	6091      	str	r1, [r2, #8]
 8007d56:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8007d58:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007d5c:	430b      	orrs	r3, r1
 8007d5e:	6713      	str	r3, [r2, #112]	; 0x70
  }
  /*--------------------------------------------------------------------------*/

  /*---------------------------- TIM configuration ---------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8007d60:	6820      	ldr	r0, [r4, #0]
 8007d62:	f010 0010 	ands.w	r0, r0, #16
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8007d66:	bf1f      	itttt	ne
 8007d68:	4b4d      	ldrne	r3, [pc, #308]	; (8007ea0 <HAL_RCCEx_PeriphCLKConfig+0x250>)
 8007d6a:	f894 202c 	ldrbne.w	r2, [r4, #44]	; 0x2c
 8007d6e:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  }
  return HAL_OK;
 8007d72:	2000      	movne	r0, #0
 8007d74:	e04f      	b.n	8007e16 <HAL_RCCEx_PeriphCLKConfig+0x1c6>
    __HAL_RCC_PLLI2S_DISABLE();
 8007d76:	4b47      	ldr	r3, [pc, #284]	; (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007d78:	4e47      	ldr	r6, [pc, #284]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_DISABLE();
 8007d7a:	2200      	movs	r2, #0
 8007d7c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007d7e:	f7fe f9ff 	bl	8006180 <HAL_GetTick>
 8007d82:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8007d84:	6833      	ldr	r3, [r6, #0]
 8007d86:	011f      	lsls	r7, r3, #4
 8007d88:	d43f      	bmi.n	8007e0a <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8007d8a:	6821      	ldr	r1, [r4, #0]
 8007d8c:	07cd      	lsls	r5, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8007d8e:	bf41      	itttt	mi
 8007d90:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8007d94:	071b      	lslmi	r3, r3, #28
 8007d96:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8007d9a:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8007d9e:	0788      	lsls	r0, r1, #30
 8007da0:	d515      	bpl.n	8007dce <HAL_RCCEx_PeriphCLKConfig+0x17e>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007da2:	4a3d      	ldr	r2, [pc, #244]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007da4:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8007da6:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8007daa:	6865      	ldr	r5, [r4, #4]
 8007dac:	061b      	lsls	r3, r3, #24
 8007dae:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8007db2:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8007db6:	4303      	orrs	r3, r0
 8007db8:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8007dbc:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8007dc0:	69e3      	ldr	r3, [r4, #28]
 8007dc2:	f020 001f 	bic.w	r0, r0, #31
 8007dc6:	3b01      	subs	r3, #1
 8007dc8:	4303      	orrs	r3, r0
 8007dca:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8007dce:	0649      	lsls	r1, r1, #25
 8007dd0:	d50a      	bpl.n	8007de8 <HAL_RCCEx_PeriphCLKConfig+0x198>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8007dd2:	68e3      	ldr	r3, [r4, #12]
 8007dd4:	6862      	ldr	r2, [r4, #4]
 8007dd6:	061b      	lsls	r3, r3, #24
 8007dd8:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8007ddc:	68a2      	ldr	r2, [r4, #8]
 8007dde:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8007de2:	4a2d      	ldr	r2, [pc, #180]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
 8007de4:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8007de8:	4b2a      	ldr	r3, [pc, #168]	; (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x244>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007dea:	4e2b      	ldr	r6, [pc, #172]	; (8007e98 <HAL_RCCEx_PeriphCLKConfig+0x248>)
    __HAL_RCC_PLLI2S_ENABLE();
 8007dec:	2201      	movs	r2, #1
 8007dee:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 8007df0:	f7fe f9c6 	bl	8006180 <HAL_GetTick>
 8007df4:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8007df6:	6833      	ldr	r3, [r6, #0]
 8007df8:	011a      	lsls	r2, r3, #4
 8007dfa:	f53f af30 	bmi.w	8007c5e <HAL_RCCEx_PeriphCLKConfig+0xe>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007dfe:	f7fe f9bf 	bl	8006180 <HAL_GetTick>
 8007e02:	1b40      	subs	r0, r0, r5
 8007e04:	2802      	cmp	r0, #2
 8007e06:	d9f6      	bls.n	8007df6 <HAL_RCCEx_PeriphCLKConfig+0x1a6>
 8007e08:	e004      	b.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8007e0a:	f7fe f9b9 	bl	8006180 <HAL_GetTick>
 8007e0e:	1b40      	subs	r0, r0, r5
 8007e10:	2802      	cmp	r0, #2
 8007e12:	d9b7      	bls.n	8007d84 <HAL_RCCEx_PeriphCLKConfig+0x134>
        return HAL_TIMEOUT;
 8007e14:	2003      	movs	r0, #3
}
 8007e16:	b003      	add	sp, #12
 8007e18:	bdf0      	pop	{r4, r5, r6, r7, pc}
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007e1a:	f7fe f9b1 	bl	8006180 <HAL_GetTick>
 8007e1e:	1b80      	subs	r0, r0, r6
 8007e20:	2802      	cmp	r0, #2
 8007e22:	f67f af27 	bls.w	8007c74 <HAL_RCCEx_PeriphCLKConfig+0x24>
 8007e26:	e7f5      	b.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8007e28:	f7fe f9aa 	bl	8006180 <HAL_GetTick>
 8007e2c:	1b40      	subs	r0, r0, r5
 8007e2e:	2802      	cmp	r0, #2
 8007e30:	f67f af5b 	bls.w	8007cea <HAL_RCCEx_PeriphCLKConfig+0x9a>
 8007e34:	e7ee      	b.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8007e36:	f7fe f9a3 	bl	8006180 <HAL_GetTick>
 8007e3a:	1b80      	subs	r0, r0, r6
 8007e3c:	2802      	cmp	r0, #2
 8007e3e:	f67f af6f 	bls.w	8007d20 <HAL_RCCEx_PeriphCLKConfig+0xd0>
 8007e42:	e7e7      	b.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8007e44:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8007e46:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8007e4a:	4293      	cmp	r3, r2
 8007e4c:	f43f af72 	beq.w	8007d34 <HAL_RCCEx_PeriphCLKConfig+0xe4>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007e50:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8007e52:	4a10      	ldr	r2, [pc, #64]	; (8007e94 <HAL_RCCEx_PeriphCLKConfig+0x244>)
 8007e54:	2101      	movs	r1, #1
 8007e56:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8007e5a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8007e5e:	2100      	movs	r1, #0
 8007e60:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8007e64:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8007e66:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007e68:	07da      	lsls	r2, r3, #31
 8007e6a:	f57f af63 	bpl.w	8007d34 <HAL_RCCEx_PeriphCLKConfig+0xe4>
        tickstart = HAL_GetTick();
 8007e6e:	f7fe f987 	bl	8006180 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007e72:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8007e76:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8007e78:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8007e7a:	079b      	lsls	r3, r3, #30
 8007e7c:	f53f af5a 	bmi.w	8007d34 <HAL_RCCEx_PeriphCLKConfig+0xe4>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8007e80:	f7fe f97e 	bl	8006180 <HAL_GetTick>
 8007e84:	1b80      	subs	r0, r0, r6
 8007e86:	42b8      	cmp	r0, r7
 8007e88:	d9f6      	bls.n	8007e78 <HAL_RCCEx_PeriphCLKConfig+0x228>
 8007e8a:	e7c3      	b.n	8007e14 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8007e8c:	6891      	ldr	r1, [r2, #8]
 8007e8e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8007e92:	e75f      	b.n	8007d54 <HAL_RCCEx_PeriphCLKConfig+0x104>
 8007e94:	42470000 	.word	0x42470000
 8007e98:	40023800 	.word	0x40023800
 8007e9c:	40007000 	.word	0x40007000
 8007ea0:	42471000 	.word	0x42471000

08007ea4 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8007ea4:	b538      	push	{r3, r4, r5, lr}
 8007ea6:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8007ea8:	4604      	mov	r4, r0
 8007eaa:	b1c8      	cbz	r0, 8007ee0 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8007eac:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007eb0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007eb4:	b91b      	cbnz	r3, 8007ebe <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8007eb6:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8007eba:	f7fb f855 	bl	8002f68 <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007ebe:	2302      	movs	r3, #2
 8007ec0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8007ec4:	1d21      	adds	r1, r4, #4
 8007ec6:	6820      	ldr	r0, [r4, #0]
 8007ec8:	f000 ff71 	bl	8008dae <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8007ecc:	6862      	ldr	r2, [r4, #4]
 8007ece:	6820      	ldr	r0, [r4, #0]
 8007ed0:	4629      	mov	r1, r5
 8007ed2:	f000 ffa7 	bl	8008e24 <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8007ed6:	2301      	movs	r3, #1
 8007ed8:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8007edc:	2000      	movs	r0, #0
}
 8007ede:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007ee0:	2001      	movs	r0, #1
 8007ee2:	e7fc      	b.n	8007ede <HAL_SDRAM_Init+0x3a>

08007ee4 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8007ee4:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007ee6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8007eea:	2b02      	cmp	r3, #2
{
 8007eec:	4605      	mov	r5, r0
 8007eee:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8007ef0:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8007ef2:	d012      	beq.n	8007f1a <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8007ef4:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8007ef8:	2c01      	cmp	r4, #1
 8007efa:	d10f      	bne.n	8007f1c <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007efc:	2302      	movs	r3, #2
 8007efe:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8007f02:	6828      	ldr	r0, [r5, #0]
 8007f04:	f000 ffc4 	bl	8008e90 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8007f08:	6833      	ldr	r3, [r6, #0]
 8007f0a:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8007f0c:	bf06      	itte	eq
 8007f0e:	2305      	moveq	r3, #5
 8007f10:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8007f14:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007f18:	2000      	movs	r0, #0
}
 8007f1a:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8007f1c:	2001      	movs	r0, #1
 8007f1e:	e7fc      	b.n	8007f1a <HAL_SDRAM_SendCommand+0x36>

08007f20 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8007f20:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007f22:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8007f26:	2b02      	cmp	r3, #2
{
 8007f28:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8007f2a:	b2d8      	uxtb	r0, r3
 8007f2c:	d00d      	beq.n	8007f4a <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8007f2e:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8007f32:	2b01      	cmp	r3, #1
 8007f34:	b2dd      	uxtb	r5, r3
 8007f36:	d109      	bne.n	8007f4c <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007f38:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007f3a:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8007f3c:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8007f40:	f000 ffcc 	bl	8008edc <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8007f44:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8007f48:	2000      	movs	r0, #0
}
 8007f4a:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007f4c:	2001      	movs	r0, #1
 8007f4e:	e7fc      	b.n	8007f4a <HAL_SDRAM_ProgramRefreshRate+0x2a>

08007f50 <SPI_WaitFlagStateUntilTimeout.constprop.0>:
  * @param  State flag state to check
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
 8007f50:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8007f54:	461d      	mov	r5, r3
 8007f56:	4617      	mov	r7, r2
 8007f58:	4688      	mov	r8, r1
 8007f5a:	4606      	mov	r6, r0
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8007f5c:	f7fe f910 	bl	8006180 <HAL_GetTick>
 8007f60:	443d      	add	r5, r7
 8007f62:	1a2c      	subs	r4, r5, r0
  tmp_tickstart = HAL_GetTick();
 8007f64:	f7fe f90c 	bl	8006180 <HAL_GetTick>

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007f68:	4b22      	ldr	r3, [pc, #136]	; (8007ff4 <SPI_WaitFlagStateUntilTimeout.constprop.0+0xa4>)
 8007f6a:	681b      	ldr	r3, [r3, #0]
 8007f6c:	f3c3 33cb 	ubfx	r3, r3, #15, #12
  tmp_tickstart = HAL_GetTick();
 8007f70:	4605      	mov	r5, r0
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8007f72:	4363      	muls	r3, r4

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007f74:	6832      	ldr	r2, [r6, #0]
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
      {
        tmp_timeout = 0U;
      }
      count--;
 8007f76:	9301      	str	r3, [sp, #4]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8007f78:	6893      	ldr	r3, [r2, #8]
 8007f7a:	ea38 0303 	bics.w	r3, r8, r3
 8007f7e:	d001      	beq.n	8007f84 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x34>
    }
  }

  return HAL_OK;
 8007f80:	2000      	movs	r0, #0
 8007f82:	e02d      	b.n	8007fe0 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x90>
    if (Timeout != HAL_MAX_DELAY)
 8007f84:	1c7b      	adds	r3, r7, #1
 8007f86:	d0f7      	beq.n	8007f78 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x28>
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8007f88:	f7fe f8fa 	bl	8006180 <HAL_GetTick>
 8007f8c:	1b40      	subs	r0, r0, r5
 8007f8e:	42a0      	cmp	r0, r4
 8007f90:	d329      	bcc.n	8007fe6 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x96>
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8007f92:	6833      	ldr	r3, [r6, #0]
 8007f94:	685a      	ldr	r2, [r3, #4]
 8007f96:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 8007f9a:	605a      	str	r2, [r3, #4]
        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007f9c:	6872      	ldr	r2, [r6, #4]
 8007f9e:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 8007fa2:	d10a      	bne.n	8007fba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
 8007fa4:	68b2      	ldr	r2, [r6, #8]
 8007fa6:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 8007faa:	d002      	beq.n	8007fb2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x62>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8007fac:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8007fb0:	d103      	bne.n	8007fba <SPI_WaitFlagStateUntilTimeout.constprop.0+0x6a>
          __HAL_SPI_DISABLE(hspi);
 8007fb2:	681a      	ldr	r2, [r3, #0]
 8007fb4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007fb8:	601a      	str	r2, [r3, #0]
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8007fba:	6ab2      	ldr	r2, [r6, #40]	; 0x28
 8007fbc:	f5b2 5f00 	cmp.w	r2, #8192	; 0x2000
 8007fc0:	d107      	bne.n	8007fd2 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x82>
          SPI_RESET_CRC(hspi);
 8007fc2:	681a      	ldr	r2, [r3, #0]
 8007fc4:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8007fc8:	601a      	str	r2, [r3, #0]
 8007fca:	681a      	ldr	r2, [r3, #0]
 8007fcc:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8007fd0:	601a      	str	r2, [r3, #0]
        hspi->State = HAL_SPI_STATE_READY;
 8007fd2:	2301      	movs	r3, #1
 8007fd4:	f886 3051 	strb.w	r3, [r6, #81]	; 0x51
        __HAL_UNLOCK(hspi);
 8007fd8:	2300      	movs	r3, #0
 8007fda:	f886 3050 	strb.w	r3, [r6, #80]	; 0x50
        return HAL_TIMEOUT;
 8007fde:	2003      	movs	r0, #3
}
 8007fe0:	b002      	add	sp, #8
 8007fe2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      if (count == 0U)
 8007fe6:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8007fe8:	2b00      	cmp	r3, #0
      count--;
 8007fea:	9b01      	ldr	r3, [sp, #4]
        tmp_timeout = 0U;
 8007fec:	bf08      	it	eq
 8007fee:	2400      	moveq	r4, #0
      count--;
 8007ff0:	3b01      	subs	r3, #1
 8007ff2:	e7bf      	b.n	8007f74 <SPI_WaitFlagStateUntilTimeout.constprop.0+0x24>
 8007ff4:	20000074 	.word	0x20000074

08007ff8 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8007ff8:	b538      	push	{r3, r4, r5, lr}
 8007ffa:	4613      	mov	r3, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8007ffc:	6842      	ldr	r2, [r0, #4]
 8007ffe:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8008002:	4604      	mov	r4, r0
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008004:	d11f      	bne.n	8008046 <SPI_EndRxTransaction+0x4e>
 8008006:	6882      	ldr	r2, [r0, #8]
 8008008:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
 800800c:	d002      	beq.n	8008014 <SPI_EndRxTransaction+0x1c>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 800800e:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
 8008012:	d107      	bne.n	8008024 <SPI_EndRxTransaction+0x2c>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8008014:	6825      	ldr	r5, [r4, #0]
 8008016:	6828      	ldr	r0, [r5, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8008018:	f5b2 6f80 	cmp.w	r2, #1024	; 0x400
    __HAL_SPI_DISABLE(hspi);
 800801c:	f020 0040 	bic.w	r0, r0, #64	; 0x40
 8008020:	6028      	str	r0, [r5, #0]
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8008022:	d007      	beq.n	8008034 <SPI_EndRxTransaction+0x3c>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8008024:	460a      	mov	r2, r1
 8008026:	2180      	movs	r1, #128	; 0x80
 8008028:	4620      	mov	r0, r4
 800802a:	f7ff ff91 	bl	8007f50 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 800802e:	b920      	cbnz	r0, 800803a <SPI_EndRxTransaction+0x42>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
      return HAL_TIMEOUT;
    }
  }
  return HAL_OK;
 8008030:	2000      	movs	r0, #0
}
 8008032:	bd38      	pop	{r3, r4, r5, pc}
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008034:	460a      	mov	r2, r1
 8008036:	2101      	movs	r1, #1
 8008038:	e7f6      	b.n	8008028 <SPI_EndRxTransaction+0x30>
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 800803a:	6d63      	ldr	r3, [r4, #84]	; 0x54
 800803c:	f043 0320 	orr.w	r3, r3, #32
 8008040:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 8008042:	2003      	movs	r0, #3
 8008044:	e7f5      	b.n	8008032 <SPI_EndRxTransaction+0x3a>
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8008046:	460a      	mov	r2, r1
 8008048:	2101      	movs	r1, #1
 800804a:	e7ee      	b.n	800802a <SPI_EndRxTransaction+0x32>

0800804c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 800804c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800804e:	4613      	mov	r3, r2
  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8008050:	4a12      	ldr	r2, [pc, #72]	; (800809c <SPI_EndRxTxTransaction+0x50>)
 8008052:	6815      	ldr	r5, [r2, #0]
 8008054:	4a12      	ldr	r2, [pc, #72]	; (80080a0 <SPI_EndRxTxTransaction+0x54>)
 8008056:	fbb5 f5f2 	udiv	r5, r5, r2
 800805a:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 800805e:	4355      	muls	r5, r2
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008060:	6842      	ldr	r2, [r0, #4]
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8008062:	9501      	str	r5, [sp, #4]
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8008064:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
{
 8008068:	4604      	mov	r4, r0
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 800806a:	d10b      	bne.n	8008084 <SPI_EndRxTxTransaction+0x38>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 800806c:	460a      	mov	r2, r1
 800806e:	2180      	movs	r1, #128	; 0x80
 8008070:	f7ff ff6e 	bl	8007f50 <SPI_WaitFlagStateUntilTimeout.constprop.0>
 8008074:	b178      	cbz	r0, 8008096 <SPI_EndRxTxTransaction+0x4a>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8008076:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8008078:	f043 0320 	orr.w	r3, r3, #32
 800807c:	6563      	str	r3, [r4, #84]	; 0x54
      return HAL_TIMEOUT;
 800807e:	2003      	movs	r0, #3
      count--;
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
  }

  return HAL_OK;
}
 8008080:	b003      	add	sp, #12
 8008082:	bd30      	pop	{r4, r5, pc}
      if (count == 0U)
 8008084:	9b01      	ldr	r3, [sp, #4]
 8008086:	b133      	cbz	r3, 8008096 <SPI_EndRxTxTransaction+0x4a>
      count--;
 8008088:	9b01      	ldr	r3, [sp, #4]
 800808a:	3b01      	subs	r3, #1
 800808c:	9301      	str	r3, [sp, #4]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 800808e:	6823      	ldr	r3, [r4, #0]
 8008090:	689b      	ldr	r3, [r3, #8]
 8008092:	061b      	lsls	r3, r3, #24
 8008094:	d4f6      	bmi.n	8008084 <SPI_EndRxTxTransaction+0x38>
  return HAL_OK;
 8008096:	2000      	movs	r0, #0
 8008098:	e7f2      	b.n	8008080 <SPI_EndRxTxTransaction+0x34>
 800809a:	bf00      	nop
 800809c:	20000074 	.word	0x20000074
 80080a0:	016e3600 	.word	0x016e3600

080080a4 <HAL_SPI_Init>:
{
 80080a4:	b510      	push	{r4, lr}
  if (hspi == NULL)
 80080a6:	4604      	mov	r4, r0
 80080a8:	2800      	cmp	r0, #0
 80080aa:	d055      	beq.n	8008158 <HAL_SPI_Init+0xb4>
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 80080ac:	6a43      	ldr	r3, [r0, #36]	; 0x24
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d14e      	bne.n	8008150 <HAL_SPI_Init+0xac>
    if (hspi->Init.Mode == SPI_MODE_MASTER)
 80080b2:	6842      	ldr	r2, [r0, #4]
 80080b4:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80080b8:	d000      	beq.n	80080bc <HAL_SPI_Init+0x18>
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 80080ba:	61c3      	str	r3, [r0, #28]
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 80080bc:	2300      	movs	r3, #0
 80080be:	62a3      	str	r3, [r4, #40]	; 0x28
  if (hspi->State == HAL_SPI_STATE_RESET)
 80080c0:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80080c4:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80080c8:	b923      	cbnz	r3, 80080d4 <HAL_SPI_Init+0x30>
    hspi->Lock = HAL_UNLOCKED;
 80080ca:	f884 2050 	strb.w	r2, [r4, #80]	; 0x50
    HAL_SPI_MspInit(hspi);
 80080ce:	4620      	mov	r0, r4
 80080d0:	f7fa fea6 	bl	8002e20 <HAL_SPI_MspInit>
  __HAL_SPI_DISABLE(hspi);
 80080d4:	6821      	ldr	r1, [r4, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80080d6:	68a0      	ldr	r0, [r4, #8]
 80080d8:	69a2      	ldr	r2, [r4, #24]
  hspi->State = HAL_SPI_STATE_BUSY;
 80080da:	2302      	movs	r3, #2
 80080dc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_SPI_DISABLE(hspi);
 80080e0:	680b      	ldr	r3, [r1, #0]
 80080e2:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80080e6:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 80080e8:	6863      	ldr	r3, [r4, #4]
 80080ea:	f400 4004 	and.w	r0, r0, #33792	; 0x8400
 80080ee:	f403 7382 	and.w	r3, r3, #260	; 0x104
 80080f2:	4303      	orrs	r3, r0
 80080f4:	68e0      	ldr	r0, [r4, #12]
 80080f6:	f400 6000 	and.w	r0, r0, #2048	; 0x800
 80080fa:	4303      	orrs	r3, r0
 80080fc:	6920      	ldr	r0, [r4, #16]
 80080fe:	f000 0002 	and.w	r0, r0, #2
 8008102:	4303      	orrs	r3, r0
 8008104:	6960      	ldr	r0, [r4, #20]
 8008106:	f000 0001 	and.w	r0, r0, #1
 800810a:	4303      	orrs	r3, r0
 800810c:	f402 7000 	and.w	r0, r2, #512	; 0x200
 8008110:	4303      	orrs	r3, r0
 8008112:	69e0      	ldr	r0, [r4, #28]
 8008114:	f000 0038 	and.w	r0, r0, #56	; 0x38
 8008118:	4303      	orrs	r3, r0
 800811a:	6a20      	ldr	r0, [r4, #32]
 800811c:	f000 0080 	and.w	r0, r0, #128	; 0x80
 8008120:	4303      	orrs	r3, r0
 8008122:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8008124:	f400 5000 	and.w	r0, r0, #8192	; 0x2000
 8008128:	4303      	orrs	r3, r0
 800812a:	600b      	str	r3, [r1, #0]
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 800812c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800812e:	0c12      	lsrs	r2, r2, #16
 8008130:	f003 0310 	and.w	r3, r3, #16
 8008134:	f002 0204 	and.w	r2, r2, #4
 8008138:	431a      	orrs	r2, r3
 800813a:	604a      	str	r2, [r1, #4]
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800813c:	69cb      	ldr	r3, [r1, #28]
 800813e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8008142:	61cb      	str	r3, [r1, #28]
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008144:	2000      	movs	r0, #0
  hspi->State     = HAL_SPI_STATE_READY;
 8008146:	2301      	movs	r3, #1
  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 8008148:	6560      	str	r0, [r4, #84]	; 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 800814a:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
}
 800814e:	bd10      	pop	{r4, pc}
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8008150:	2300      	movs	r3, #0
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8008152:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8008156:	e7b1      	b.n	80080bc <HAL_SPI_Init+0x18>
    return HAL_ERROR;
 8008158:	2001      	movs	r0, #1
 800815a:	e7f8      	b.n	800814e <HAL_SPI_Init+0xaa>

0800815c <HAL_SPI_Transmit>:
{
 800815c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008160:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 8008162:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
 8008166:	2b01      	cmp	r3, #1
{
 8008168:	4604      	mov	r4, r0
 800816a:	460d      	mov	r5, r1
 800816c:	4617      	mov	r7, r2
  __HAL_LOCK(hspi);
 800816e:	f000 80a1 	beq.w	80082b4 <HAL_SPI_Transmit+0x158>
 8008172:	2301      	movs	r3, #1
 8008174:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 8008178:	f7fe f802 	bl	8006180 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 800817c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 8008180:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 8008182:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 8008184:	b2d8      	uxtb	r0, r3
 8008186:	f040 8093 	bne.w	80082b0 <HAL_SPI_Transmit+0x154>
  if ((pData == NULL) || (Size == 0U))
 800818a:	2d00      	cmp	r5, #0
 800818c:	d05e      	beq.n	800824c <HAL_SPI_Transmit+0xf0>
 800818e:	2f00      	cmp	r7, #0
 8008190:	d05c      	beq.n	800824c <HAL_SPI_Transmit+0xf0>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008192:	68a2      	ldr	r2, [r4, #8]
  hspi->pTxBuffPtr  = (uint8_t *)pData;
 8008194:	6325      	str	r5, [r4, #48]	; 0x30
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8008196:	2303      	movs	r3, #3
 8008198:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800819c:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80081a0:	f04f 0300 	mov.w	r3, #0
 80081a4:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->RxISR       = NULL;
 80081a6:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  hspi->TxXferCount = Size;
 80081aa:	86e7      	strh	r7, [r4, #54]	; 0x36
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 80081ac:	63a3      	str	r3, [r4, #56]	; 0x38
  hspi->RxXferSize  = 0U;
 80081ae:	87a3      	strh	r3, [r4, #60]	; 0x3c
  hspi->RxXferCount = 0U;
 80081b0:	87e3      	strh	r3, [r4, #62]	; 0x3e
  hspi->TxXferSize  = Size;
 80081b2:	86a7      	strh	r7, [r4, #52]	; 0x34
    __HAL_SPI_DISABLE(hspi);
 80081b4:	6823      	ldr	r3, [r4, #0]
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80081b6:	d107      	bne.n	80081c8 <HAL_SPI_Transmit+0x6c>
    __HAL_SPI_DISABLE(hspi);
 80081b8:	681a      	ldr	r2, [r3, #0]
 80081ba:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80081be:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 80081c0:	681a      	ldr	r2, [r3, #0]
 80081c2:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 80081c6:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80081c8:	681a      	ldr	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80081ca:	68e1      	ldr	r1, [r4, #12]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80081cc:	0652      	lsls	r2, r2, #25
    __HAL_SPI_ENABLE(hspi);
 80081ce:	bf5e      	ittt	pl
 80081d0:	681a      	ldrpl	r2, [r3, #0]
 80081d2:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 80081d6:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80081d8:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80081dc:	6862      	ldr	r2, [r4, #4]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 80081de:	d141      	bne.n	8008264 <HAL_SPI_Transmit+0x108>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80081e0:	b10a      	cbz	r2, 80081e6 <HAL_SPI_Transmit+0x8a>
 80081e2:	2f01      	cmp	r7, #1
 80081e4:	d107      	bne.n	80081f6 <HAL_SPI_Transmit+0x9a>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 80081e6:	f835 2b02 	ldrh.w	r2, [r5], #2
 80081ea:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80081ec:	6325      	str	r5, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80081ee:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80081f0:	3b01      	subs	r3, #1
 80081f2:	b29b      	uxth	r3, r3
 80081f4:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 80081f6:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80081f8:	b29b      	uxth	r3, r3
 80081fa:	b9a3      	cbnz	r3, 8008226 <HAL_SPI_Transmit+0xca>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80081fc:	4642      	mov	r2, r8
 80081fe:	4631      	mov	r1, r6
 8008200:	4620      	mov	r0, r4
 8008202:	f7ff ff23 	bl	800804c <SPI_EndRxTxTransaction>
 8008206:	2800      	cmp	r0, #0
 8008208:	d14f      	bne.n	80082aa <HAL_SPI_Transmit+0x14e>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800820a:	68a3      	ldr	r3, [r4, #8]
 800820c:	b933      	cbnz	r3, 800821c <HAL_SPI_Transmit+0xc0>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 800820e:	9301      	str	r3, [sp, #4]
 8008210:	6823      	ldr	r3, [r4, #0]
 8008212:	68da      	ldr	r2, [r3, #12]
 8008214:	9201      	str	r2, [sp, #4]
 8008216:	689b      	ldr	r3, [r3, #8]
 8008218:	9301      	str	r3, [sp, #4]
 800821a:	9b01      	ldr	r3, [sp, #4]
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800821c:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 800821e:	3800      	subs	r0, #0
 8008220:	bf18      	it	ne
 8008222:	2001      	movne	r0, #1
error:
 8008224:	e012      	b.n	800824c <HAL_SPI_Transmit+0xf0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008226:	6822      	ldr	r2, [r4, #0]
 8008228:	6893      	ldr	r3, [r2, #8]
 800822a:	0798      	lsls	r0, r3, #30
 800822c:	d505      	bpl.n	800823a <HAL_SPI_Transmit+0xde>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 800822e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008230:	f833 1b02 	ldrh.w	r1, [r3], #2
 8008234:	60d1      	str	r1, [r2, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 8008236:	6323      	str	r3, [r4, #48]	; 0x30
 8008238:	e7d9      	b.n	80081ee <HAL_SPI_Transmit+0x92>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800823a:	f7fd ffa1 	bl	8006180 <HAL_GetTick>
 800823e:	eba0 0008 	sub.w	r0, r0, r8
 8008242:	42b0      	cmp	r0, r6
 8008244:	d30b      	bcc.n	800825e <HAL_SPI_Transmit+0x102>
 8008246:	1c71      	adds	r1, r6, #1
 8008248:	d0d5      	beq.n	80081f6 <HAL_SPI_Transmit+0x9a>
          errorcode = HAL_TIMEOUT;
 800824a:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 800824c:	2301      	movs	r3, #1
 800824e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 8008252:	2300      	movs	r3, #0
 8008254:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 8008258:	b002      	add	sp, #8
 800825a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800825e:	2e00      	cmp	r6, #0
 8008260:	d1c9      	bne.n	80081f6 <HAL_SPI_Transmit+0x9a>
 8008262:	e7f2      	b.n	800824a <HAL_SPI_Transmit+0xee>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8008264:	b10a      	cbz	r2, 800826a <HAL_SPI_Transmit+0x10e>
 8008266:	2f01      	cmp	r7, #1
 8008268:	d108      	bne.n	800827c <HAL_SPI_Transmit+0x120>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800826a:	782a      	ldrb	r2, [r5, #0]
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800826c:	731a      	strb	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800826e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008270:	3301      	adds	r3, #1
 8008272:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 8008274:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008276:	3b01      	subs	r3, #1
 8008278:	b29b      	uxth	r3, r3
 800827a:	86e3      	strh	r3, [r4, #54]	; 0x36
    while (hspi->TxXferCount > 0U)
 800827c:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800827e:	b29b      	uxth	r3, r3
 8008280:	2b00      	cmp	r3, #0
 8008282:	d0bb      	beq.n	80081fc <HAL_SPI_Transmit+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8008284:	6823      	ldr	r3, [r4, #0]
 8008286:	689a      	ldr	r2, [r3, #8]
 8008288:	0792      	lsls	r2, r2, #30
 800828a:	d502      	bpl.n	8008292 <HAL_SPI_Transmit+0x136>
        *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 800828c:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800828e:	7812      	ldrb	r2, [r2, #0]
 8008290:	e7ec      	b.n	800826c <HAL_SPI_Transmit+0x110>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8008292:	f7fd ff75 	bl	8006180 <HAL_GetTick>
 8008296:	eba0 0008 	sub.w	r0, r0, r8
 800829a:	42b0      	cmp	r0, r6
 800829c:	d302      	bcc.n	80082a4 <HAL_SPI_Transmit+0x148>
 800829e:	1c73      	adds	r3, r6, #1
 80082a0:	d0ec      	beq.n	800827c <HAL_SPI_Transmit+0x120>
 80082a2:	e7d2      	b.n	800824a <HAL_SPI_Transmit+0xee>
 80082a4:	2e00      	cmp	r6, #0
 80082a6:	d1e9      	bne.n	800827c <HAL_SPI_Transmit+0x120>
 80082a8:	e7cf      	b.n	800824a <HAL_SPI_Transmit+0xee>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80082aa:	2320      	movs	r3, #32
 80082ac:	6563      	str	r3, [r4, #84]	; 0x54
 80082ae:	e7ac      	b.n	800820a <HAL_SPI_Transmit+0xae>
    errorcode = HAL_BUSY;
 80082b0:	2002      	movs	r0, #2
 80082b2:	e7cb      	b.n	800824c <HAL_SPI_Transmit+0xf0>
  __HAL_LOCK(hspi);
 80082b4:	2002      	movs	r0, #2
 80082b6:	e7cf      	b.n	8008258 <HAL_SPI_Transmit+0xfc>

080082b8 <HAL_SPI_TransmitReceive>:
{
 80082b8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80082bc:	461e      	mov	r6, r3
  __HAL_LOCK(hspi);
 80082be:	f890 3050 	ldrb.w	r3, [r0, #80]	; 0x50
{
 80082c2:	9f0a      	ldr	r7, [sp, #40]	; 0x28
  __HAL_LOCK(hspi);
 80082c4:	2b01      	cmp	r3, #1
{
 80082c6:	4604      	mov	r4, r0
 80082c8:	460d      	mov	r5, r1
 80082ca:	4691      	mov	r9, r2
  __HAL_LOCK(hspi);
 80082cc:	f000 80e6 	beq.w	800849c <HAL_SPI_TransmitReceive+0x1e4>
 80082d0:	2301      	movs	r3, #1
 80082d2:	f880 3050 	strb.w	r3, [r0, #80]	; 0x50
  tickstart = HAL_GetTick();
 80082d6:	f7fd ff53 	bl	8006180 <HAL_GetTick>
  tmp_state           = hspi->State;
 80082da:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  tmp_mode            = hspi->Init.Mode;
 80082de:	6862      	ldr	r2, [r4, #4]
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80082e0:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80082e2:	4680      	mov	r8, r0
  tmp_state           = hspi->State;
 80082e4:	b2d9      	uxtb	r1, r3
  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80082e6:	d00a      	beq.n	80082fe <HAL_SPI_TransmitReceive+0x46>
 80082e8:	f5b2 7f82 	cmp.w	r2, #260	; 0x104
 80082ec:	f040 80d4 	bne.w	8008498 <HAL_SPI_TransmitReceive+0x1e0>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80082f0:	68a3      	ldr	r3, [r4, #8]
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	f040 80d0 	bne.w	8008498 <HAL_SPI_TransmitReceive+0x1e0>
 80082f8:	2904      	cmp	r1, #4
 80082fa:	f040 80cd 	bne.w	8008498 <HAL_SPI_TransmitReceive+0x1e0>
  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80082fe:	2d00      	cmp	r5, #0
 8008300:	d040      	beq.n	8008384 <HAL_SPI_TransmitReceive+0xcc>
 8008302:	f1b9 0f00 	cmp.w	r9, #0
 8008306:	d03d      	beq.n	8008384 <HAL_SPI_TransmitReceive+0xcc>
 8008308:	2e00      	cmp	r6, #0
 800830a:	d03b      	beq.n	8008384 <HAL_SPI_TransmitReceive+0xcc>
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 800830c:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8008310:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 8008314:	2b04      	cmp	r3, #4
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8008316:	bf1c      	itt	ne
 8008318:	2305      	movne	r3, #5
 800831a:	f884 3051 	strbne.w	r3, [r4, #81]	; 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800831e:	2300      	movs	r3, #0
 8008320:	6563      	str	r3, [r4, #84]	; 0x54
  hspi->TxISR       = NULL;
 8008322:	e9c4 3310 	strd	r3, r3, [r4, #64]	; 0x40
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008326:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008328:	87e6      	strh	r6, [r4, #62]	; 0x3e
  hspi->TxXferCount = Size;
 800832a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800832c:	6819      	ldr	r1, [r3, #0]
  hspi->RxXferSize  = Size;
 800832e:	87a6      	strh	r6, [r4, #60]	; 0x3c
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8008330:	0649      	lsls	r1, r1, #25
    __HAL_SPI_ENABLE(hspi);
 8008332:	bf58      	it	pl
 8008334:	6819      	ldrpl	r1, [r3, #0]
  hspi->pTxBuffPtr  = (uint8_t *)pTxData;
 8008336:	6325      	str	r5, [r4, #48]	; 0x30
    __HAL_SPI_ENABLE(hspi);
 8008338:	bf58      	it	pl
 800833a:	f041 0140 	orrpl.w	r1, r1, #64	; 0x40
  hspi->TxXferSize  = Size;
 800833e:	86a6      	strh	r6, [r4, #52]	; 0x34
    __HAL_SPI_ENABLE(hspi);
 8008340:	bf58      	it	pl
 8008342:	6019      	strpl	r1, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 8008344:	68e1      	ldr	r1, [r4, #12]
 8008346:	f5b1 6f00 	cmp.w	r1, #2048	; 0x800
 800834a:	d152      	bne.n	80083f2 <HAL_SPI_TransmitReceive+0x13a>
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800834c:	b10a      	cbz	r2, 8008352 <HAL_SPI_TransmitReceive+0x9a>
 800834e:	2e01      	cmp	r6, #1
 8008350:	d107      	bne.n	8008362 <HAL_SPI_TransmitReceive+0xaa>
      hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008352:	f835 2b02 	ldrh.w	r2, [r5], #2
 8008356:	60da      	str	r2, [r3, #12]
      hspi->TxXferCount--;
 8008358:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
      hspi->pTxBuffPtr += sizeof(uint16_t);
 800835a:	6325      	str	r5, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 800835c:	3b01      	subs	r3, #1
 800835e:	b29b      	uxth	r3, r3
 8008360:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 8008362:	2501      	movs	r5, #1
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8008364:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008366:	b29b      	uxth	r3, r3
 8008368:	b973      	cbnz	r3, 8008388 <HAL_SPI_TransmitReceive+0xd0>
 800836a:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800836c:	b29b      	uxth	r3, r3
 800836e:	b95b      	cbnz	r3, 8008388 <HAL_SPI_TransmitReceive+0xd0>
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008370:	4642      	mov	r2, r8
 8008372:	4639      	mov	r1, r7
 8008374:	4620      	mov	r0, r4
 8008376:	f7ff fe69 	bl	800804c <SPI_EndRxTxTransaction>
 800837a:	2800      	cmp	r0, #0
 800837c:	f000 8081 	beq.w	8008482 <HAL_SPI_TransmitReceive+0x1ca>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8008380:	2320      	movs	r3, #32
 8008382:	6563      	str	r3, [r4, #84]	; 0x54
    errorcode = HAL_ERROR;
 8008384:	2001      	movs	r0, #1
 8008386:	e02b      	b.n	80083e0 <HAL_SPI_TransmitReceive+0x128>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 8008388:	6821      	ldr	r1, [r4, #0]
 800838a:	688b      	ldr	r3, [r1, #8]
 800838c:	079e      	lsls	r6, r3, #30
 800838e:	d50d      	bpl.n	80083ac <HAL_SPI_TransmitReceive+0xf4>
 8008390:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008392:	b29b      	uxth	r3, r3
 8008394:	b153      	cbz	r3, 80083ac <HAL_SPI_TransmitReceive+0xf4>
 8008396:	b14d      	cbz	r5, 80083ac <HAL_SPI_TransmitReceive+0xf4>
        hspi->Instance->DR = *((uint16_t *)hspi->pTxBuffPtr);
 8008398:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800839a:	f833 2b02 	ldrh.w	r2, [r3], #2
 800839e:	60ca      	str	r2, [r1, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80083a0:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 80083a2:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80083a4:	3b01      	subs	r3, #1
 80083a6:	b29b      	uxth	r3, r3
 80083a8:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 80083aa:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80083ac:	688a      	ldr	r2, [r1, #8]
 80083ae:	f012 0201 	ands.w	r2, r2, #1
 80083b2:	d00c      	beq.n	80083ce <HAL_SPI_TransmitReceive+0x116>
 80083b4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083b6:	b29b      	uxth	r3, r3
 80083b8:	b14b      	cbz	r3, 80083ce <HAL_SPI_TransmitReceive+0x116>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80083ba:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 80083bc:	68c9      	ldr	r1, [r1, #12]
 80083be:	f823 1b02 	strh.w	r1, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80083c2:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 80083c4:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 80083c6:	3b01      	subs	r3, #1
 80083c8:	b29b      	uxth	r3, r3
 80083ca:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 80083cc:	4615      	mov	r5, r2
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 80083ce:	f7fd fed7 	bl	8006180 <HAL_GetTick>
 80083d2:	eba0 0008 	sub.w	r0, r0, r8
 80083d6:	42b8      	cmp	r0, r7
 80083d8:	d3c4      	bcc.n	8008364 <HAL_SPI_TransmitReceive+0xac>
 80083da:	1c78      	adds	r0, r7, #1
 80083dc:	d0c2      	beq.n	8008364 <HAL_SPI_TransmitReceive+0xac>
        errorcode = HAL_TIMEOUT;
 80083de:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80083e0:	2301      	movs	r3, #1
 80083e2:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80083e6:	2300      	movs	r3, #0
 80083e8:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
}
 80083ec:	b003      	add	sp, #12
 80083ee:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80083f2:	b10a      	cbz	r2, 80083f8 <HAL_SPI_TransmitReceive+0x140>
 80083f4:	2e01      	cmp	r6, #1
 80083f6:	d108      	bne.n	800840a <HAL_SPI_TransmitReceive+0x152>
      *((__IO uint8_t *)&hspi->Instance->DR) = (*hspi->pTxBuffPtr);
 80083f8:	782a      	ldrb	r2, [r5, #0]
 80083fa:	731a      	strb	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 80083fc:	6b23      	ldr	r3, [r4, #48]	; 0x30
 80083fe:	3301      	adds	r3, #1
 8008400:	6323      	str	r3, [r4, #48]	; 0x30
      hspi->TxXferCount--;
 8008402:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008404:	3b01      	subs	r3, #1
 8008406:	b29b      	uxth	r3, r3
 8008408:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 1U;
 800840a:	2501      	movs	r5, #1
 800840c:	e02d      	b.n	800846a <HAL_SPI_TransmitReceive+0x1b2>
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800840e:	6822      	ldr	r2, [r4, #0]
 8008410:	6893      	ldr	r3, [r2, #8]
 8008412:	0799      	lsls	r1, r3, #30
 8008414:	d50e      	bpl.n	8008434 <HAL_SPI_TransmitReceive+0x17c>
 8008416:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8008418:	b29b      	uxth	r3, r3
 800841a:	b15b      	cbz	r3, 8008434 <HAL_SPI_TransmitReceive+0x17c>
 800841c:	b155      	cbz	r5, 8008434 <HAL_SPI_TransmitReceive+0x17c>
        *(__IO uint8_t *)&hspi->Instance->DR = (*hspi->pTxBuffPtr);
 800841e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008420:	781b      	ldrb	r3, [r3, #0]
 8008422:	7313      	strb	r3, [r2, #12]
        hspi->pTxBuffPtr++;
 8008424:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8008426:	3301      	adds	r3, #1
 8008428:	6323      	str	r3, [r4, #48]	; 0x30
        hspi->TxXferCount--;
 800842a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800842c:	3b01      	subs	r3, #1
 800842e:	b29b      	uxth	r3, r3
 8008430:	86e3      	strh	r3, [r4, #54]	; 0x36
        txallowed = 0U;
 8008432:	2500      	movs	r5, #0
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 8008434:	6822      	ldr	r2, [r4, #0]
 8008436:	6891      	ldr	r1, [r2, #8]
 8008438:	f011 0101 	ands.w	r1, r1, #1
 800843c:	d00d      	beq.n	800845a <HAL_SPI_TransmitReceive+0x1a2>
 800843e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008440:	b29b      	uxth	r3, r3
 8008442:	b153      	cbz	r3, 800845a <HAL_SPI_TransmitReceive+0x1a2>
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 8008444:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008446:	68d2      	ldr	r2, [r2, #12]
 8008448:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800844a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800844c:	3301      	adds	r3, #1
 800844e:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008450:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008452:	3b01      	subs	r3, #1
 8008454:	b29b      	uxth	r3, r3
 8008456:	87e3      	strh	r3, [r4, #62]	; 0x3e
        txallowed = 1U;
 8008458:	460d      	mov	r5, r1
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800845a:	f7fd fe91 	bl	8006180 <HAL_GetTick>
 800845e:	eba0 0008 	sub.w	r0, r0, r8
 8008462:	42b8      	cmp	r0, r7
 8008464:	d30a      	bcc.n	800847c <HAL_SPI_TransmitReceive+0x1c4>
 8008466:	1c7b      	adds	r3, r7, #1
 8008468:	d1b9      	bne.n	80083de <HAL_SPI_TransmitReceive+0x126>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800846a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800846c:	b29b      	uxth	r3, r3
 800846e:	2b00      	cmp	r3, #0
 8008470:	d1cd      	bne.n	800840e <HAL_SPI_TransmitReceive+0x156>
 8008472:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008474:	b29b      	uxth	r3, r3
 8008476:	2b00      	cmp	r3, #0
 8008478:	d1c9      	bne.n	800840e <HAL_SPI_TransmitReceive+0x156>
 800847a:	e779      	b.n	8008370 <HAL_SPI_TransmitReceive+0xb8>
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 800847c:	2f00      	cmp	r7, #0
 800847e:	d1f4      	bne.n	800846a <HAL_SPI_TransmitReceive+0x1b2>
 8008480:	e7ad      	b.n	80083de <HAL_SPI_TransmitReceive+0x126>
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8008482:	68a3      	ldr	r3, [r4, #8]
 8008484:	2b00      	cmp	r3, #0
 8008486:	d1ab      	bne.n	80083e0 <HAL_SPI_TransmitReceive+0x128>
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8008488:	6823      	ldr	r3, [r4, #0]
 800848a:	9001      	str	r0, [sp, #4]
 800848c:	68da      	ldr	r2, [r3, #12]
 800848e:	9201      	str	r2, [sp, #4]
 8008490:	689b      	ldr	r3, [r3, #8]
 8008492:	9301      	str	r3, [sp, #4]
 8008494:	9b01      	ldr	r3, [sp, #4]
 8008496:	e7a3      	b.n	80083e0 <HAL_SPI_TransmitReceive+0x128>
    errorcode = HAL_BUSY;
 8008498:	2002      	movs	r0, #2
 800849a:	e7a1      	b.n	80083e0 <HAL_SPI_TransmitReceive+0x128>
  __HAL_LOCK(hspi);
 800849c:	2002      	movs	r0, #2
 800849e:	e7a5      	b.n	80083ec <HAL_SPI_TransmitReceive+0x134>

080084a0 <HAL_SPI_Receive>:
{
 80084a0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80084a4:	461d      	mov	r5, r3
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80084a6:	6843      	ldr	r3, [r0, #4]
 80084a8:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
{
 80084ac:	4604      	mov	r4, r0
 80084ae:	4689      	mov	r9, r1
 80084b0:	4617      	mov	r7, r2
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 80084b2:	d10c      	bne.n	80084ce <HAL_SPI_Receive+0x2e>
 80084b4:	6883      	ldr	r3, [r0, #8]
 80084b6:	b953      	cbnz	r3, 80084ce <HAL_SPI_Receive+0x2e>
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 80084b8:	2304      	movs	r3, #4
 80084ba:	f880 3051 	strb.w	r3, [r0, #81]	; 0x51
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 80084be:	4613      	mov	r3, r2
 80084c0:	9500      	str	r5, [sp, #0]
 80084c2:	460a      	mov	r2, r1
 80084c4:	f7ff fef8 	bl	80082b8 <HAL_SPI_TransmitReceive>
}
 80084c8:	b003      	add	sp, #12
 80084ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_LOCK(hspi);
 80084ce:	f894 3050 	ldrb.w	r3, [r4, #80]	; 0x50
 80084d2:	2b01      	cmp	r3, #1
 80084d4:	f000 8086 	beq.w	80085e4 <HAL_SPI_Receive+0x144>
 80084d8:	2301      	movs	r3, #1
 80084da:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  tickstart = HAL_GetTick();
 80084de:	f7fd fe4f 	bl	8006180 <HAL_GetTick>
  if (hspi->State != HAL_SPI_STATE_READY)
 80084e2:	f894 3051 	ldrb.w	r3, [r4, #81]	; 0x51
 80084e6:	2b01      	cmp	r3, #1
  tickstart = HAL_GetTick();
 80084e8:	4680      	mov	r8, r0
  if (hspi->State != HAL_SPI_STATE_READY)
 80084ea:	b2d8      	uxtb	r0, r3
 80084ec:	d178      	bne.n	80085e0 <HAL_SPI_Receive+0x140>
  if ((pData == NULL) || (Size == 0U))
 80084ee:	f1b9 0f00 	cmp.w	r9, #0
 80084f2:	d05c      	beq.n	80085ae <HAL_SPI_Receive+0x10e>
 80084f4:	2f00      	cmp	r7, #0
 80084f6:	d05a      	beq.n	80085ae <HAL_SPI_Receive+0x10e>
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 80084f8:	68a2      	ldr	r2, [r4, #8]
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80084fa:	f8c4 9038 	str.w	r9, [r4, #56]	; 0x38
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80084fe:	2600      	movs	r6, #0
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008500:	2304      	movs	r3, #4
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8008502:	f5b2 4f00 	cmp.w	r2, #32768	; 0x8000
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 8008506:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  hspi->TxISR       = NULL;
 800850a:	e9c4 6610 	strd	r6, r6, [r4, #64]	; 0x40
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800850e:	6566      	str	r6, [r4, #84]	; 0x54
    __HAL_SPI_DISABLE(hspi);
 8008510:	6823      	ldr	r3, [r4, #0]
  hspi->RxXferCount = Size;
 8008512:	87e7      	strh	r7, [r4, #62]	; 0x3e
  hspi->RxXferSize  = Size;
 8008514:	87a7      	strh	r7, [r4, #60]	; 0x3c
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 8008516:	6326      	str	r6, [r4, #48]	; 0x30
  hspi->TxXferSize  = 0U;
 8008518:	86a6      	strh	r6, [r4, #52]	; 0x34
  hspi->TxXferCount = 0U;
 800851a:	86e6      	strh	r6, [r4, #54]	; 0x36
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 800851c:	d107      	bne.n	800852e <HAL_SPI_Receive+0x8e>
    __HAL_SPI_DISABLE(hspi);
 800851e:	681a      	ldr	r2, [r3, #0]
 8008520:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8008524:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8008526:	681a      	ldr	r2, [r3, #0]
 8008528:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 800852c:	601a      	str	r2, [r3, #0]
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800852e:	681a      	ldr	r2, [r3, #0]
 8008530:	0656      	lsls	r6, r2, #25
    __HAL_SPI_ENABLE(hspi);
 8008532:	bf5e      	ittt	pl
 8008534:	681a      	ldrpl	r2, [r3, #0]
 8008536:	f042 0240 	orrpl.w	r2, r2, #64	; 0x40
 800853a:	601a      	strpl	r2, [r3, #0]
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 800853c:	68e3      	ldr	r3, [r4, #12]
 800853e:	b1f3      	cbz	r3, 800857e <HAL_SPI_Receive+0xde>
    while (hspi->RxXferCount > 0U)
 8008540:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008542:	b29b      	uxth	r3, r3
 8008544:	b1fb      	cbz	r3, 8008586 <HAL_SPI_Receive+0xe6>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008546:	6823      	ldr	r3, [r4, #0]
 8008548:	689a      	ldr	r2, [r3, #8]
 800854a:	07d2      	lsls	r2, r2, #31
 800854c:	d539      	bpl.n	80085c2 <HAL_SPI_Receive+0x122>
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 800854e:	68da      	ldr	r2, [r3, #12]
 8008550:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008552:	f823 2b02 	strh.w	r2, [r3], #2
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8008556:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008558:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 800855a:	3b01      	subs	r3, #1
 800855c:	b29b      	uxth	r3, r3
 800855e:	87e3      	strh	r3, [r4, #62]	; 0x3e
 8008560:	e7ee      	b.n	8008540 <HAL_SPI_Receive+0xa0>
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 8008562:	6823      	ldr	r3, [r4, #0]
 8008564:	689a      	ldr	r2, [r3, #8]
 8008566:	07d0      	lsls	r0, r2, #31
 8008568:	d518      	bpl.n	800859c <HAL_SPI_Receive+0xfc>
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 800856a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800856c:	7b1b      	ldrb	r3, [r3, #12]
 800856e:	7013      	strb	r3, [r2, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 8008570:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8008572:	3301      	adds	r3, #1
 8008574:	63a3      	str	r3, [r4, #56]	; 0x38
        hspi->RxXferCount--;
 8008576:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008578:	3b01      	subs	r3, #1
 800857a:	b29b      	uxth	r3, r3
 800857c:	87e3      	strh	r3, [r4, #62]	; 0x3e
    while (hspi->RxXferCount > 0U)
 800857e:	8fe3      	ldrh	r3, [r4, #62]	; 0x3e
 8008580:	b29b      	uxth	r3, r3
 8008582:	2b00      	cmp	r3, #0
 8008584:	d1ed      	bne.n	8008562 <HAL_SPI_Receive+0xc2>
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8008586:	4642      	mov	r2, r8
 8008588:	4629      	mov	r1, r5
 800858a:	4620      	mov	r0, r4
 800858c:	f7ff fd34 	bl	8007ff8 <SPI_EndRxTransaction>
 8008590:	bb18      	cbnz	r0, 80085da <HAL_SPI_Receive+0x13a>
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8008592:	6d60      	ldr	r0, [r4, #84]	; 0x54
    errorcode = HAL_BUSY;
 8008594:	3800      	subs	r0, #0
 8008596:	bf18      	it	ne
 8008598:	2001      	movne	r0, #1
error :
 800859a:	e008      	b.n	80085ae <HAL_SPI_Receive+0x10e>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800859c:	f7fd fdf0 	bl	8006180 <HAL_GetTick>
 80085a0:	eba0 0008 	sub.w	r0, r0, r8
 80085a4:	42a8      	cmp	r0, r5
 80085a6:	d309      	bcc.n	80085bc <HAL_SPI_Receive+0x11c>
 80085a8:	1c69      	adds	r1, r5, #1
 80085aa:	d0e8      	beq.n	800857e <HAL_SPI_Receive+0xde>
          errorcode = HAL_TIMEOUT;
 80085ac:	2003      	movs	r0, #3
  hspi->State = HAL_SPI_STATE_READY;
 80085ae:	2301      	movs	r3, #1
 80085b0:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
  __HAL_UNLOCK(hspi);
 80085b4:	2300      	movs	r3, #0
 80085b6:	f884 3050 	strb.w	r3, [r4, #80]	; 0x50
  return errorcode;
 80085ba:	e785      	b.n	80084c8 <HAL_SPI_Receive+0x28>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80085bc:	2d00      	cmp	r5, #0
 80085be:	d1de      	bne.n	800857e <HAL_SPI_Receive+0xde>
 80085c0:	e7f4      	b.n	80085ac <HAL_SPI_Receive+0x10c>
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80085c2:	f7fd fddd 	bl	8006180 <HAL_GetTick>
 80085c6:	eba0 0008 	sub.w	r0, r0, r8
 80085ca:	42a8      	cmp	r0, r5
 80085cc:	d302      	bcc.n	80085d4 <HAL_SPI_Receive+0x134>
 80085ce:	1c6b      	adds	r3, r5, #1
 80085d0:	d0b6      	beq.n	8008540 <HAL_SPI_Receive+0xa0>
 80085d2:	e7eb      	b.n	80085ac <HAL_SPI_Receive+0x10c>
 80085d4:	2d00      	cmp	r5, #0
 80085d6:	d1b3      	bne.n	8008540 <HAL_SPI_Receive+0xa0>
 80085d8:	e7e8      	b.n	80085ac <HAL_SPI_Receive+0x10c>
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 80085da:	2320      	movs	r3, #32
 80085dc:	6563      	str	r3, [r4, #84]	; 0x54
 80085de:	e7d8      	b.n	8008592 <HAL_SPI_Receive+0xf2>
    errorcode = HAL_BUSY;
 80085e0:	2002      	movs	r0, #2
 80085e2:	e7e4      	b.n	80085ae <HAL_SPI_Receive+0x10e>
  __HAL_LOCK(hspi);
 80085e4:	2002      	movs	r0, #2
 80085e6:	e76f      	b.n	80084c8 <HAL_SPI_Receive+0x28>

080085e8 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80085e8:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80085ec:	2b01      	cmp	r3, #1
 80085ee:	d130      	bne.n	8008652 <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80085f0:	2302      	movs	r3, #2
 80085f2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80085f6:	6803      	ldr	r3, [r0, #0]
 80085f8:	68da      	ldr	r2, [r3, #12]
 80085fa:	f042 0201 	orr.w	r2, r2, #1
 80085fe:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008600:	4a15      	ldr	r2, [pc, #84]	; (8008658 <HAL_TIM_Base_Start_IT+0x70>)
 8008602:	4293      	cmp	r3, r2
 8008604:	d01a      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 8008606:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800860a:	d017      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 800860c:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8008610:	4293      	cmp	r3, r2
 8008612:	d013      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 8008614:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008618:	4293      	cmp	r3, r2
 800861a:	d00f      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 800861c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008620:	4293      	cmp	r3, r2
 8008622:	d00b      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 8008624:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008628:	4293      	cmp	r3, r2
 800862a:	d007      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 800862c:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8008630:	4293      	cmp	r3, r2
 8008632:	d003      	beq.n	800863c <HAL_TIM_Base_Start_IT+0x54>
 8008634:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8008638:	4293      	cmp	r3, r2
 800863a:	d104      	bne.n	8008646 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800863c:	689a      	ldr	r2, [r3, #8]
 800863e:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8008642:	2a06      	cmp	r2, #6
 8008644:	d003      	beq.n	800864e <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8008646:	681a      	ldr	r2, [r3, #0]
 8008648:	f042 0201 	orr.w	r2, r2, #1
 800864c:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800864e:	2000      	movs	r0, #0
}
 8008650:	4770      	bx	lr
    return HAL_ERROR;
 8008652:	2001      	movs	r0, #1
 8008654:	4770      	bx	lr
 8008656:	bf00      	nop
 8008658:	40010000 	.word	0x40010000

0800865c <HAL_TIM_Base_Stop_IT>:
{
  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Disable the TIM Update interrupt */
  __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 800865c:	6803      	ldr	r3, [r0, #0]
 800865e:	68da      	ldr	r2, [r3, #12]
 8008660:	f022 0201 	bic.w	r2, r2, #1
 8008664:	60da      	str	r2, [r3, #12]

  /* Disable the Peripheral */
  __HAL_TIM_DISABLE(htim);
 8008666:	6a19      	ldr	r1, [r3, #32]
 8008668:	f241 1211 	movw	r2, #4369	; 0x1111
 800866c:	4211      	tst	r1, r2
 800866e:	d108      	bne.n	8008682 <HAL_TIM_Base_Stop_IT+0x26>
 8008670:	6a19      	ldr	r1, [r3, #32]
 8008672:	f240 4244 	movw	r2, #1092	; 0x444
 8008676:	4211      	tst	r1, r2
 8008678:	bf02      	ittt	eq
 800867a:	681a      	ldreq	r2, [r3, #0]
 800867c:	f022 0201 	biceq.w	r2, r2, #1
 8008680:	601a      	streq	r2, [r3, #0]

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_READY;
 8008682:	2301      	movs	r3, #1
 8008684:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Return function status */
  return HAL_OK;
}
 8008688:	2000      	movs	r0, #0
 800868a:	4770      	bx	lr

0800868c <HAL_TIM_OC_DelayElapsedCallback>:
 800868c:	4770      	bx	lr

0800868e <HAL_TIM_IC_CaptureCallback>:
 800868e:	4770      	bx	lr

08008690 <HAL_TIM_PWM_PulseFinishedCallback>:
 8008690:	4770      	bx	lr

08008692 <HAL_TIM_TriggerCallback>:
 8008692:	4770      	bx	lr

08008694 <HAL_TIM_IRQHandler>:
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8008694:	6803      	ldr	r3, [r0, #0]
 8008696:	691a      	ldr	r2, [r3, #16]
 8008698:	0791      	lsls	r1, r2, #30
{
 800869a:	b510      	push	{r4, lr}
 800869c:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800869e:	d50e      	bpl.n	80086be <HAL_TIM_IRQHandler+0x2a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80086a0:	68da      	ldr	r2, [r3, #12]
 80086a2:	0792      	lsls	r2, r2, #30
 80086a4:	d50b      	bpl.n	80086be <HAL_TIM_IRQHandler+0x2a>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80086a6:	f06f 0202 	mvn.w	r2, #2
 80086aa:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80086ac:	2201      	movs	r2, #1
 80086ae:	7702      	strb	r2, [r0, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80086b0:	699b      	ldr	r3, [r3, #24]
 80086b2:	079b      	lsls	r3, r3, #30
 80086b4:	d077      	beq.n	80087a6 <HAL_TIM_IRQHandler+0x112>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80086b6:	f7ff ffea 	bl	800868e <HAL_TIM_IC_CaptureCallback>
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
          HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80086ba:	2300      	movs	r3, #0
 80086bc:	7723      	strb	r3, [r4, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80086be:	6823      	ldr	r3, [r4, #0]
 80086c0:	691a      	ldr	r2, [r3, #16]
 80086c2:	0750      	lsls	r0, r2, #29
 80086c4:	d510      	bpl.n	80086e8 <HAL_TIM_IRQHandler+0x54>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80086c6:	68da      	ldr	r2, [r3, #12]
 80086c8:	0751      	lsls	r1, r2, #29
 80086ca:	d50d      	bpl.n	80086e8 <HAL_TIM_IRQHandler+0x54>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80086cc:	f06f 0204 	mvn.w	r2, #4
 80086d0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80086d2:	2202      	movs	r2, #2
 80086d4:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80086d6:	699b      	ldr	r3, [r3, #24]
 80086d8:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80086dc:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80086de:	d068      	beq.n	80087b2 <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80086e0:	f7ff ffd5 	bl	800868e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80086e4:	2300      	movs	r3, #0
 80086e6:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80086e8:	6823      	ldr	r3, [r4, #0]
 80086ea:	691a      	ldr	r2, [r3, #16]
 80086ec:	0712      	lsls	r2, r2, #28
 80086ee:	d50f      	bpl.n	8008710 <HAL_TIM_IRQHandler+0x7c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80086f0:	68da      	ldr	r2, [r3, #12]
 80086f2:	0710      	lsls	r0, r2, #28
 80086f4:	d50c      	bpl.n	8008710 <HAL_TIM_IRQHandler+0x7c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80086f6:	f06f 0208 	mvn.w	r2, #8
 80086fa:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 80086fc:	2204      	movs	r2, #4
 80086fe:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008700:	69db      	ldr	r3, [r3, #28]
 8008702:	0799      	lsls	r1, r3, #30
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8008704:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8008706:	d05a      	beq.n	80087be <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8008708:	f7ff ffc1 	bl	800868e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800870c:	2300      	movs	r3, #0
 800870e:	7723      	strb	r3, [r4, #28]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8008710:	6823      	ldr	r3, [r4, #0]
 8008712:	691a      	ldr	r2, [r3, #16]
 8008714:	06d2      	lsls	r2, r2, #27
 8008716:	d510      	bpl.n	800873a <HAL_TIM_IRQHandler+0xa6>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8008718:	68da      	ldr	r2, [r3, #12]
 800871a:	06d0      	lsls	r0, r2, #27
 800871c:	d50d      	bpl.n	800873a <HAL_TIM_IRQHandler+0xa6>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 800871e:	f06f 0210 	mvn.w	r2, #16
 8008722:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 8008724:	2208      	movs	r2, #8
 8008726:	7722      	strb	r2, [r4, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008728:	69db      	ldr	r3, [r3, #28]
 800872a:	f413 7f40 	tst.w	r3, #768	; 0x300
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800872e:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8008730:	d04b      	beq.n	80087ca <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 8008732:	f7ff ffac 	bl	800868e <HAL_TIM_IC_CaptureCallback>
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
        HAL_TIM_PWM_PulseFinishedCallback(htim);
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8008736:	2300      	movs	r3, #0
 8008738:	7723      	strb	r3, [r4, #28]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 800873a:	6823      	ldr	r3, [r4, #0]
 800873c:	691a      	ldr	r2, [r3, #16]
 800873e:	07d1      	lsls	r1, r2, #31
 8008740:	d508      	bpl.n	8008754 <HAL_TIM_IRQHandler+0xc0>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 8008742:	68da      	ldr	r2, [r3, #12]
 8008744:	07d2      	lsls	r2, r2, #31
 8008746:	d505      	bpl.n	8008754 <HAL_TIM_IRQHandler+0xc0>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8008748:	f06f 0201 	mvn.w	r2, #1
 800874c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800874e:	4620      	mov	r0, r4
 8008750:	f7fa f9b2 	bl	8002ab8 <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 8008754:	6823      	ldr	r3, [r4, #0]
 8008756:	691a      	ldr	r2, [r3, #16]
 8008758:	0610      	lsls	r0, r2, #24
 800875a:	d508      	bpl.n	800876e <HAL_TIM_IRQHandler+0xda>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 800875c:	68da      	ldr	r2, [r3, #12]
 800875e:	0611      	lsls	r1, r2, #24
 8008760:	d505      	bpl.n	800876e <HAL_TIM_IRQHandler+0xda>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 8008762:	f06f 0280 	mvn.w	r2, #128	; 0x80
 8008766:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8008768:	4620      	mov	r0, r4
 800876a:	f000 f9ac 	bl	8008ac6 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 800876e:	6823      	ldr	r3, [r4, #0]
 8008770:	691a      	ldr	r2, [r3, #16]
 8008772:	0652      	lsls	r2, r2, #25
 8008774:	d508      	bpl.n	8008788 <HAL_TIM_IRQHandler+0xf4>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8008776:	68da      	ldr	r2, [r3, #12]
 8008778:	0650      	lsls	r0, r2, #25
 800877a:	d505      	bpl.n	8008788 <HAL_TIM_IRQHandler+0xf4>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 800877c:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8008780:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8008782:	4620      	mov	r0, r4
 8008784:	f7ff ff85 	bl	8008692 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8008788:	6823      	ldr	r3, [r4, #0]
 800878a:	691a      	ldr	r2, [r3, #16]
 800878c:	0691      	lsls	r1, r2, #26
 800878e:	d522      	bpl.n	80087d6 <HAL_TIM_IRQHandler+0x142>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8008790:	68da      	ldr	r2, [r3, #12]
 8008792:	0692      	lsls	r2, r2, #26
 8008794:	d51f      	bpl.n	80087d6 <HAL_TIM_IRQHandler+0x142>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 8008796:	f06f 0220 	mvn.w	r2, #32
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800879a:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800879c:	611a      	str	r2, [r3, #16]
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 800879e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80087a2:	f000 b98f 	b.w	8008ac4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80087a6:	f7ff ff71 	bl	800868c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80087aa:	4620      	mov	r0, r4
 80087ac:	f7ff ff70 	bl	8008690 <HAL_TIM_PWM_PulseFinishedCallback>
 80087b0:	e783      	b.n	80086ba <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80087b2:	f7ff ff6b 	bl	800868c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80087b6:	4620      	mov	r0, r4
 80087b8:	f7ff ff6a 	bl	8008690 <HAL_TIM_PWM_PulseFinishedCallback>
 80087bc:	e792      	b.n	80086e4 <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80087be:	f7ff ff65 	bl	800868c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80087c2:	4620      	mov	r0, r4
 80087c4:	f7ff ff64 	bl	8008690 <HAL_TIM_PWM_PulseFinishedCallback>
 80087c8:	e7a0      	b.n	800870c <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80087ca:	f7ff ff5f 	bl	800868c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80087ce:	4620      	mov	r0, r4
 80087d0:	f7ff ff5e 	bl	8008690 <HAL_TIM_PWM_PulseFinishedCallback>
 80087d4:	e7af      	b.n	8008736 <HAL_TIM_IRQHandler+0xa2>
}
 80087d6:	bd10      	pop	{r4, pc}

080087d8 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80087d8:	4a30      	ldr	r2, [pc, #192]	; (800889c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80087da:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80087dc:	4290      	cmp	r0, r2
 80087de:	d012      	beq.n	8008806 <TIM_Base_SetConfig+0x2e>
 80087e0:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80087e4:	d00f      	beq.n	8008806 <TIM_Base_SetConfig+0x2e>
 80087e6:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80087ea:	4290      	cmp	r0, r2
 80087ec:	d00b      	beq.n	8008806 <TIM_Base_SetConfig+0x2e>
 80087ee:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80087f2:	4290      	cmp	r0, r2
 80087f4:	d007      	beq.n	8008806 <TIM_Base_SetConfig+0x2e>
 80087f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80087fa:	4290      	cmp	r0, r2
 80087fc:	d003      	beq.n	8008806 <TIM_Base_SetConfig+0x2e>
 80087fe:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008802:	4290      	cmp	r0, r2
 8008804:	d119      	bne.n	800883a <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8008806:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8008808:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800880c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800880e:	4a23      	ldr	r2, [pc, #140]	; (800889c <TIM_Base_SetConfig+0xc4>)
 8008810:	4290      	cmp	r0, r2
 8008812:	d029      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008814:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8008818:	d026      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 800881a:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800881e:	4290      	cmp	r0, r2
 8008820:	d022      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008822:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008826:	4290      	cmp	r0, r2
 8008828:	d01e      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 800882a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800882e:	4290      	cmp	r0, r2
 8008830:	d01a      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008832:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8008836:	4290      	cmp	r0, r2
 8008838:	d016      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 800883a:	4a19      	ldr	r2, [pc, #100]	; (80088a0 <TIM_Base_SetConfig+0xc8>)
 800883c:	4290      	cmp	r0, r2
 800883e:	d013      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008840:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008844:	4290      	cmp	r0, r2
 8008846:	d00f      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008848:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800884c:	4290      	cmp	r0, r2
 800884e:	d00b      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008850:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 8008854:	4290      	cmp	r0, r2
 8008856:	d007      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008858:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800885c:	4290      	cmp	r0, r2
 800885e:	d003      	beq.n	8008868 <TIM_Base_SetConfig+0x90>
 8008860:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8008864:	4290      	cmp	r0, r2
 8008866:	d103      	bne.n	8008870 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8008868:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 800886a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 800886e:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8008870:	694a      	ldr	r2, [r1, #20]
 8008872:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8008876:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8008878:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800887a:	688b      	ldr	r3, [r1, #8]
 800887c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800887e:	680b      	ldr	r3, [r1, #0]
 8008880:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8008882:	4b06      	ldr	r3, [pc, #24]	; (800889c <TIM_Base_SetConfig+0xc4>)
 8008884:	4298      	cmp	r0, r3
 8008886:	d003      	beq.n	8008890 <TIM_Base_SetConfig+0xb8>
 8008888:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800888c:	4298      	cmp	r0, r3
 800888e:	d101      	bne.n	8008894 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8008890:	690b      	ldr	r3, [r1, #16]
 8008892:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8008894:	2301      	movs	r3, #1
 8008896:	6143      	str	r3, [r0, #20]
}
 8008898:	4770      	bx	lr
 800889a:	bf00      	nop
 800889c:	40010000 	.word	0x40010000
 80088a0:	40014000 	.word	0x40014000

080088a4 <HAL_TIM_Base_Init>:
{
 80088a4:	b510      	push	{r4, lr}
  if (htim == NULL)
 80088a6:	4604      	mov	r4, r0
 80088a8:	b330      	cbz	r0, 80088f8 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80088aa:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80088ae:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80088b2:	b91b      	cbnz	r3, 80088bc <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80088b4:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80088b8:	f7fa fae8 	bl	8002e8c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80088bc:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80088be:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80088c0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80088c4:	1d21      	adds	r1, r4, #4
 80088c6:	f7ff ff87 	bl	80087d8 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80088ca:	2301      	movs	r3, #1
 80088cc:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80088d0:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80088d2:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80088d6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80088da:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80088de:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80088e2:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80088e6:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80088ea:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80088ee:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80088f2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80088f6:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80088f8:	2001      	movs	r0, #1
 80088fa:	e7fc      	b.n	80088f6 <HAL_TIM_Base_Init+0x52>

080088fc <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 80088fc:	b510      	push	{r4, lr}
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 80088fe:	6884      	ldr	r4, [r0, #8]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008900:	4311      	orrs	r1, r2
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008902:	f424 447f 	bic.w	r4, r4, #65280	; 0xff00
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8008906:	ea41 2303 	orr.w	r3, r1, r3, lsl #8
 800890a:	4323      	orrs	r3, r4

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 800890c:	6083      	str	r3, [r0, #8]
}
 800890e:	bd10      	pop	{r4, pc}

08008910 <HAL_TIM_ConfigClockSource>:
{
 8008910:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 8008912:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8008916:	2b01      	cmp	r3, #1
{
 8008918:	4604      	mov	r4, r0
 800891a:	f04f 0302 	mov.w	r3, #2
  __HAL_LOCK(htim);
 800891e:	f000 8091 	beq.w	8008a44 <HAL_TIM_ConfigClockSource+0x134>
 8008922:	2201      	movs	r2, #1
  htim->State = HAL_TIM_STATE_BUSY;
 8008924:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_LOCK(htim);
 8008928:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
  tmpsmcr = htim->Instance->SMCR;
 800892c:	6800      	ldr	r0, [r0, #0]
 800892e:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8008930:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8008934:	f023 0377 	bic.w	r3, r3, #119	; 0x77
  htim->Instance->SMCR = tmpsmcr;
 8008938:	6083      	str	r3, [r0, #8]
  switch (sClockSourceConfig->ClockSource)
 800893a:	680b      	ldr	r3, [r1, #0]
 800893c:	2b60      	cmp	r3, #96	; 0x60
 800893e:	d052      	beq.n	80089e6 <HAL_TIM_ConfigClockSource+0xd6>
 8008940:	d833      	bhi.n	80089aa <HAL_TIM_ConfigClockSource+0x9a>
 8008942:	2b40      	cmp	r3, #64	; 0x40
 8008944:	d067      	beq.n	8008a16 <HAL_TIM_ConfigClockSource+0x106>
 8008946:	d816      	bhi.n	8008976 <HAL_TIM_ConfigClockSource+0x66>
 8008948:	2b20      	cmp	r3, #32
 800894a:	d00d      	beq.n	8008968 <HAL_TIM_ConfigClockSource+0x58>
 800894c:	d80a      	bhi.n	8008964 <HAL_TIM_ConfigClockSource+0x54>
 800894e:	f033 0110 	bics.w	r1, r3, #16
 8008952:	d009      	beq.n	8008968 <HAL_TIM_ConfigClockSource+0x58>
  htim->State = HAL_TIM_STATE_READY;
 8008954:	2301      	movs	r3, #1
 8008956:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UNLOCK(htim);
 800895a:	2300      	movs	r3, #0
 800895c:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
}
 8008960:	4610      	mov	r0, r2
 8008962:	bd70      	pop	{r4, r5, r6, pc}
  switch (sClockSourceConfig->ClockSource)
 8008964:	2b30      	cmp	r3, #48	; 0x30
 8008966:	d1f5      	bne.n	8008954 <HAL_TIM_ConfigClockSource+0x44>
  tmpsmcr = TIMx->SMCR;
 8008968:	6882      	ldr	r2, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800896a:	f022 0270 	bic.w	r2, r2, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 800896e:	4313      	orrs	r3, r2
 8008970:	f043 0307 	orr.w	r3, r3, #7
 8008974:	e017      	b.n	80089a6 <HAL_TIM_ConfigClockSource+0x96>
  switch (sClockSourceConfig->ClockSource)
 8008976:	2b50      	cmp	r3, #80	; 0x50
 8008978:	d1ec      	bne.n	8008954 <HAL_TIM_ConfigClockSource+0x44>
      TIM_TI1_ConfigInputStage(htim->Instance,
 800897a:	684a      	ldr	r2, [r1, #4]
 800897c:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 800897e:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008980:	6a05      	ldr	r5, [r0, #32]
 8008982:	f025 0501 	bic.w	r5, r5, #1
 8008986:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008988:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 800898a:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 800898e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008992:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8008996:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8008998:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 800899a:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 800899c:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 800899e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 80089a2:	f043 0357 	orr.w	r3, r3, #87	; 0x57
  TIMx->SMCR = tmpsmcr;
 80089a6:	6083      	str	r3, [r0, #8]
 80089a8:	e011      	b.n	80089ce <HAL_TIM_ConfigClockSource+0xbe>
  switch (sClockSourceConfig->ClockSource)
 80089aa:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 80089ae:	d00e      	beq.n	80089ce <HAL_TIM_ConfigClockSource+0xbe>
 80089b0:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 80089b4:	d00d      	beq.n	80089d2 <HAL_TIM_ConfigClockSource+0xc2>
 80089b6:	2b70      	cmp	r3, #112	; 0x70
 80089b8:	d1cc      	bne.n	8008954 <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 80089ba:	68cb      	ldr	r3, [r1, #12]
 80089bc:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 80089c0:	f7ff ff9c 	bl	80088fc <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 80089c4:	6822      	ldr	r2, [r4, #0]
 80089c6:	6893      	ldr	r3, [r2, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80089c8:	f043 0377 	orr.w	r3, r3, #119	; 0x77
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80089cc:	6093      	str	r3, [r2, #8]
  HAL_StatusTypeDef status = HAL_OK;
 80089ce:	2200      	movs	r2, #0
 80089d0:	e7c0      	b.n	8008954 <HAL_TIM_ConfigClockSource+0x44>
      TIM_ETR_SetConfig(htim->Instance,
 80089d2:	68cb      	ldr	r3, [r1, #12]
 80089d4:	e9d1 2101 	ldrd	r2, r1, [r1, #4]
 80089d8:	f7ff ff90 	bl	80088fc <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80089dc:	6822      	ldr	r2, [r4, #0]
 80089de:	6893      	ldr	r3, [r2, #8]
 80089e0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80089e4:	e7f2      	b.n	80089cc <HAL_TIM_ConfigClockSource+0xbc>
      TIM_TI2_ConfigInputStage(htim->Instance,
 80089e6:	684d      	ldr	r5, [r1, #4]
 80089e8:	68ce      	ldr	r6, [r1, #12]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 80089ea:	6a01      	ldr	r1, [r0, #32]
 80089ec:	f021 0110 	bic.w	r1, r1, #16
 80089f0:	6201      	str	r1, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 80089f2:	6982      	ldr	r2, [r0, #24]
  tmpccer = TIMx->CCER;
 80089f4:	6a03      	ldr	r3, [r0, #32]
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 80089f6:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 80089fa:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
  tmpccer |= (TIM_ICPolarity << 4U);
 80089fe:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8008a02:	ea42 3206 	orr.w	r2, r2, r6, lsl #12
  TIMx->CCMR1 = tmpccmr1 ;
 8008a06:	6182      	str	r2, [r0, #24]
  TIMx->CCER = tmpccer;
 8008a08:	6203      	str	r3, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8008a0a:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8008a0c:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008a10:	f043 0367 	orr.w	r3, r3, #103	; 0x67
  TIMx->SMCR = tmpsmcr;
 8008a14:	e7c7      	b.n	80089a6 <HAL_TIM_ConfigClockSource+0x96>
      TIM_TI1_ConfigInputStage(htim->Instance,
 8008a16:	684a      	ldr	r2, [r1, #4]
 8008a18:	68ce      	ldr	r6, [r1, #12]
  tmpccer = TIMx->CCER;
 8008a1a:	6a01      	ldr	r1, [r0, #32]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008a1c:	6a05      	ldr	r5, [r0, #32]
 8008a1e:	f025 0501 	bic.w	r5, r5, #1
 8008a22:	6205      	str	r5, [r0, #32]
  tmpccmr1 = TIMx->CCMR1;
 8008a24:	6983      	ldr	r3, [r0, #24]
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8008a26:	f021 010a 	bic.w	r1, r1, #10
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8008a2a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8008a2e:	ea43 1306 	orr.w	r3, r3, r6, lsl #4
  tmpccer |= TIM_ICPolarity;
 8008a32:	430a      	orrs	r2, r1
  TIMx->CCMR1 = tmpccmr1;
 8008a34:	6183      	str	r3, [r0, #24]
  TIMx->CCER = tmpccer;
 8008a36:	6202      	str	r2, [r0, #32]
  tmpsmcr = TIMx->SMCR;
 8008a38:	6883      	ldr	r3, [r0, #8]
  tmpsmcr &= ~TIM_SMCR_TS;
 8008a3a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8008a3e:	f043 0347 	orr.w	r3, r3, #71	; 0x47
  TIMx->SMCR = tmpsmcr;
 8008a42:	e7b0      	b.n	80089a6 <HAL_TIM_ConfigClockSource+0x96>
  __HAL_LOCK(htim);
 8008a44:	461a      	mov	r2, r3
 8008a46:	e78b      	b.n	8008960 <HAL_TIM_ConfigClockSource+0x50>

08008a48 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8008a48:	b530      	push	{r4, r5, lr}
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8008a4a:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8008a4e:	2b01      	cmp	r3, #1
 8008a50:	f04f 0302 	mov.w	r3, #2
 8008a54:	d032      	beq.n	8008abc <HAL_TIMEx_MasterConfigSynchronization+0x74>

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8008a56:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8008a5a:	6803      	ldr	r3, [r0, #0]
  tmpsmcr = htim->Instance->SMCR;

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008a5c:	680d      	ldr	r5, [r1, #0]
  tmpcr2 = htim->Instance->CR2;
 8008a5e:	685c      	ldr	r4, [r3, #4]
  tmpsmcr = htim->Instance->SMCR;
 8008a60:	689a      	ldr	r2, [r3, #8]
  tmpcr2 &= ~TIM_CR2_MMS;
 8008a62:	f024 0470 	bic.w	r4, r4, #112	; 0x70
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8008a66:	432c      	orrs	r4, r5

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8008a68:	605c      	str	r4, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8008a6a:	4c15      	ldr	r4, [pc, #84]	; (8008ac0 <HAL_TIMEx_MasterConfigSynchronization+0x78>)
 8008a6c:	42a3      	cmp	r3, r4
 8008a6e:	d01a      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8008a74:	d017      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a76:	f5a4 447c 	sub.w	r4, r4, #64512	; 0xfc00
 8008a7a:	42a3      	cmp	r3, r4
 8008a7c:	d013      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a7e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008a82:	42a3      	cmp	r3, r4
 8008a84:	d00f      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a86:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8008a8a:	42a3      	cmp	r3, r4
 8008a8c:	d00b      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a8e:	f504 4478 	add.w	r4, r4, #63488	; 0xf800
 8008a92:	42a3      	cmp	r3, r4
 8008a94:	d007      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a96:	f504 5470 	add.w	r4, r4, #15360	; 0x3c00
 8008a9a:	42a3      	cmp	r3, r4
 8008a9c:	d003      	beq.n	8008aa6 <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 8008a9e:	f5a4 3494 	sub.w	r4, r4, #75776	; 0x12800
 8008aa2:	42a3      	cmp	r3, r4
 8008aa4:	d104      	bne.n	8008ab0 <HAL_TIMEx_MasterConfigSynchronization+0x68>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008aa6:	6849      	ldr	r1, [r1, #4]
    tmpsmcr &= ~TIM_SMCR_MSM;
 8008aa8:	f022 0280 	bic.w	r2, r2, #128	; 0x80
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8008aac:	430a      	orrs	r2, r1

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8008aae:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8008ab0:	2301      	movs	r3, #1
 8008ab2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 8008ab6:	2300      	movs	r3, #0
 8008ab8:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
  __HAL_LOCK(htim);
 8008abc:	4618      	mov	r0, r3

  return HAL_OK;
}
 8008abe:	bd30      	pop	{r4, r5, pc}
 8008ac0:	40010000 	.word	0x40010000

08008ac4 <HAL_TIMEx_CommutCallback>:
 8008ac4:	4770      	bx	lr

08008ac6 <HAL_TIMEx_BreakCallback>:
 8008ac6:	4770      	bx	lr

08008ac8 <UART_SetConfig>:
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8008ac8:	6802      	ldr	r2, [r0, #0]
 8008aca:	68c1      	ldr	r1, [r0, #12]
 8008acc:	6913      	ldr	r3, [r2, #16]
 8008ace:	f423 5340 	bic.w	r3, r3, #12288	; 0x3000
 8008ad2:	430b      	orrs	r3, r1
{
 8008ad4:	b570      	push	{r4, r5, r6, lr}
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8008ad6:	6113      	str	r3, [r2, #16]
{
 8008ad8:	4605      	mov	r5, r0
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8008ada:	6883      	ldr	r3, [r0, #8]
 8008adc:	6900      	ldr	r0, [r0, #16]
  MODIFY_REG(huart->Instance->CR1,
 8008ade:	68d1      	ldr	r1, [r2, #12]
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8008ae0:	4303      	orrs	r3, r0
 8008ae2:	6968      	ldr	r0, [r5, #20]
 8008ae4:	4303      	orrs	r3, r0
 8008ae6:	69e8      	ldr	r0, [r5, #28]
  MODIFY_REG(huart->Instance->CR1,
 8008ae8:	f421 4116 	bic.w	r1, r1, #38400	; 0x9600
 8008aec:	f021 010c 	bic.w	r1, r1, #12
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 8008af0:	4303      	orrs	r3, r0
  MODIFY_REG(huart->Instance->CR1,
 8008af2:	430b      	orrs	r3, r1
 8008af4:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 8008af6:	6953      	ldr	r3, [r2, #20]
 8008af8:	69a9      	ldr	r1, [r5, #24]
 8008afa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8008afe:	430b      	orrs	r3, r1
 8008b00:	6153      	str	r3, [r2, #20]
    if ((huart->Instance == USART1) || (huart->Instance == USART6) || (huart->Instance == UART9) || (huart->Instance == UART10))
    {
      pclk = HAL_RCC_GetPCLK2Freq();
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 8008b02:	4b1f      	ldr	r3, [pc, #124]	; (8008b80 <UART_SetConfig+0xb8>)
 8008b04:	429a      	cmp	r2, r3
 8008b06:	d003      	beq.n	8008b10 <UART_SetConfig+0x48>
 8008b08:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8008b0c:	429a      	cmp	r2, r3
 8008b0e:	d123      	bne.n	8008b58 <UART_SetConfig+0x90>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 8008b10:	f7ff f870 	bl	8007bf4 <HAL_RCC_GetPCLK2Freq>
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
    }
  /*-------------------------- USART BRR Configuration ---------------------*/
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008b14:	69eb      	ldr	r3, [r5, #28]
  {
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008b16:	2119      	movs	r1, #25
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008b18:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008b1c:	e9d5 4600 	ldrd	r4, r6, [r5]
 8008b20:	fba0 0101 	umull	r0, r1, r0, r1
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8008b24:	d11b      	bne.n	8008b5e <UART_SetConfig+0x96>
    huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 8008b26:	19b2      	adds	r2, r6, r6
 8008b28:	f04f 0300 	mov.w	r3, #0
 8008b2c:	415b      	adcs	r3, r3
 8008b2e:	f7f8 f8bb 	bl	8000ca8 <__aeabi_uldivmod>
 8008b32:	2164      	movs	r1, #100	; 0x64
 8008b34:	fbb0 f5f1 	udiv	r5, r0, r1
 8008b38:	fb01 0315 	mls	r3, r1, r5, r0
 8008b3c:	00db      	lsls	r3, r3, #3
 8008b3e:	3332      	adds	r3, #50	; 0x32
 8008b40:	fbb3 f3f1 	udiv	r3, r3, r1
 8008b44:	f003 0207 	and.w	r2, r3, #7
 8008b48:	005b      	lsls	r3, r3, #1
 8008b4a:	eb02 1205 	add.w	r2, r2, r5, lsl #4
 8008b4e:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008b52:	4413      	add	r3, r2
  }
  else
  {
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8008b54:	60a3      	str	r3, [r4, #8]
  }
}
 8008b56:	bd70      	pop	{r4, r5, r6, pc}
      pclk = HAL_RCC_GetPCLK1Freq();
 8008b58:	f7ff f83c 	bl	8007bd4 <HAL_RCC_GetPCLK1Freq>
 8008b5c:	e7da      	b.n	8008b14 <UART_SetConfig+0x4c>
    huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 8008b5e:	00b2      	lsls	r2, r6, #2
 8008b60:	0fb3      	lsrs	r3, r6, #30
 8008b62:	f7f8 f8a1 	bl	8000ca8 <__aeabi_uldivmod>
 8008b66:	2264      	movs	r2, #100	; 0x64
 8008b68:	fbb0 f1f2 	udiv	r1, r0, r2
 8008b6c:	fb02 0311 	mls	r3, r2, r1, r0
 8008b70:	011b      	lsls	r3, r3, #4
 8008b72:	3332      	adds	r3, #50	; 0x32
 8008b74:	fbb3 f3f2 	udiv	r3, r3, r2
 8008b78:	eb03 1301 	add.w	r3, r3, r1, lsl #4
 8008b7c:	e7ea      	b.n	8008b54 <UART_SetConfig+0x8c>
 8008b7e:	bf00      	nop
 8008b80:	40011000 	.word	0x40011000

08008b84 <UART_WaitOnFlagUntilTimeout.constprop.0>:
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status,
 8008b84:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b86:	4604      	mov	r4, r0
 8008b88:	460e      	mov	r6, r1
 8008b8a:	4617      	mov	r7, r2
 8008b8c:	461d      	mov	r5, r3
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8008b8e:	6822      	ldr	r2, [r4, #0]
 8008b90:	6813      	ldr	r3, [r2, #0]
 8008b92:	ea36 0303 	bics.w	r3, r6, r3
 8008b96:	d101      	bne.n	8008b9c <UART_WaitOnFlagUntilTimeout.constprop.0+0x18>
  return HAL_OK;
 8008b98:	2000      	movs	r0, #0
 8008b9a:	e028      	b.n	8008bee <UART_WaitOnFlagUntilTimeout.constprop.0+0x6a>
    if (Timeout != HAL_MAX_DELAY)
 8008b9c:	1c6b      	adds	r3, r5, #1
 8008b9e:	d0f7      	beq.n	8008b90 <UART_WaitOnFlagUntilTimeout.constprop.0+0xc>
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 8008ba0:	b125      	cbz	r5, 8008bac <UART_WaitOnFlagUntilTimeout.constprop.0+0x28>
 8008ba2:	f7fd faed 	bl	8006180 <HAL_GetTick>
 8008ba6:	1bc0      	subs	r0, r0, r7
 8008ba8:	4285      	cmp	r5, r0
 8008baa:	d2f0      	bcs.n	8008b8e <UART_WaitOnFlagUntilTimeout.constprop.0+0xa>
        ATOMIC_CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8008bac:	6822      	ldr	r2, [r4, #0]
 */
__STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
{
    uint32_t result;

   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008bae:	f102 030c 	add.w	r3, r2, #12
 8008bb2:	e853 3f00 	ldrex	r3, [r3]
 8008bb6:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 */
__STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
{
   uint32_t result;

   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008bba:	320c      	adds	r2, #12
 8008bbc:	e842 3000 	strex	r0, r3, [r2]
   return(result);
 8008bc0:	6821      	ldr	r1, [r4, #0]
 8008bc2:	2800      	cmp	r0, #0
 8008bc4:	d1f2      	bne.n	8008bac <UART_WaitOnFlagUntilTimeout.constprop.0+0x28>
   __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 8008bc6:	f101 0314 	add.w	r3, r1, #20
 8008bca:	e853 3f00 	ldrex	r3, [r3]
        ATOMIC_CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8008bce:	f023 0301 	bic.w	r3, r3, #1
   __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 8008bd2:	f101 0014 	add.w	r0, r1, #20
 8008bd6:	e840 3200 	strex	r2, r3, [r0]
 8008bda:	2a00      	cmp	r2, #0
 8008bdc:	d1f3      	bne.n	8008bc6 <UART_WaitOnFlagUntilTimeout.constprop.0+0x42>
        huart->gState  = HAL_UART_STATE_READY;
 8008bde:	2320      	movs	r3, #32
 8008be0:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
        __HAL_UNLOCK(huart);
 8008be4:	f884 203c 	strb.w	r2, [r4, #60]	; 0x3c
        huart->RxState = HAL_UART_STATE_READY;
 8008be8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        __HAL_UNLOCK(huart);
 8008bec:	2003      	movs	r0, #3
}
 8008bee:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08008bf0 <HAL_UART_Init>:
{
 8008bf0:	b510      	push	{r4, lr}
  if (huart == NULL)
 8008bf2:	4604      	mov	r4, r0
 8008bf4:	b340      	cbz	r0, 8008c48 <HAL_UART_Init+0x58>
  if (huart->gState == HAL_UART_STATE_RESET)
 8008bf6:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8008bfa:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008bfe:	b91b      	cbnz	r3, 8008c08 <HAL_UART_Init+0x18>
    huart->Lock = HAL_UNLOCKED;
 8008c00:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_UART_MspInit(huart);
 8008c04:	f7fa f97a 	bl	8002efc <HAL_UART_MspInit>
  __HAL_UART_DISABLE(huart);
 8008c08:	6822      	ldr	r2, [r4, #0]
  huart->gState = HAL_UART_STATE_BUSY;
 8008c0a:	2324      	movs	r3, #36	; 0x24
 8008c0c:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_UART_DISABLE(huart);
 8008c10:	68d3      	ldr	r3, [r2, #12]
 8008c12:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8008c16:	60d3      	str	r3, [r2, #12]
  UART_SetConfig(huart);
 8008c18:	4620      	mov	r0, r4
 8008c1a:	f7ff ff55 	bl	8008ac8 <UART_SetConfig>
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8008c1e:	6823      	ldr	r3, [r4, #0]
 8008c20:	691a      	ldr	r2, [r3, #16]
 8008c22:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 8008c26:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8008c28:	695a      	ldr	r2, [r3, #20]
 8008c2a:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 8008c2e:	615a      	str	r2, [r3, #20]
  __HAL_UART_ENABLE(huart);
 8008c30:	68da      	ldr	r2, [r3, #12]
 8008c32:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8008c36:	60da      	str	r2, [r3, #12]
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008c38:	2000      	movs	r0, #0
  huart->gState = HAL_UART_STATE_READY;
 8008c3a:	2320      	movs	r3, #32
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008c3c:	6420      	str	r0, [r4, #64]	; 0x40
  huart->gState = HAL_UART_STATE_READY;
 8008c3e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  huart->RxState = HAL_UART_STATE_READY;
 8008c42:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 8008c46:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8008c48:	2001      	movs	r0, #1
 8008c4a:	e7fc      	b.n	8008c46 <HAL_UART_Init+0x56>

08008c4c <HAL_UART_Transmit>:
{
 8008c4c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008c4e:	4617      	mov	r7, r2
  if (huart->gState == HAL_UART_STATE_READY)
 8008c50:	f890 203d 	ldrb.w	r2, [r0, #61]	; 0x3d
{
 8008c54:	9300      	str	r3, [sp, #0]
  if (huart->gState == HAL_UART_STATE_READY)
 8008c56:	2a20      	cmp	r2, #32
{
 8008c58:	4604      	mov	r4, r0
 8008c5a:	460e      	mov	r6, r1
  if (huart->gState == HAL_UART_STATE_READY)
 8008c5c:	d149      	bne.n	8008cf2 <HAL_UART_Transmit+0xa6>
    if ((pData == NULL) || (Size == 0U))
 8008c5e:	2900      	cmp	r1, #0
 8008c60:	d045      	beq.n	8008cee <HAL_UART_Transmit+0xa2>
 8008c62:	2f00      	cmp	r7, #0
 8008c64:	d043      	beq.n	8008cee <HAL_UART_Transmit+0xa2>
    __HAL_LOCK(huart);
 8008c66:	f890 203c 	ldrb.w	r2, [r0, #60]	; 0x3c
 8008c6a:	2a01      	cmp	r2, #1
 8008c6c:	d041      	beq.n	8008cf2 <HAL_UART_Transmit+0xa6>
 8008c6e:	2201      	movs	r2, #1
 8008c70:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008c74:	2500      	movs	r5, #0
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8008c76:	2221      	movs	r2, #33	; 0x21
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008c78:	6405      	str	r5, [r0, #64]	; 0x40
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8008c7a:	f880 203d 	strb.w	r2, [r0, #61]	; 0x3d
    tickstart = HAL_GetTick();
 8008c7e:	f7fd fa7f 	bl	8006180 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008c82:	68a1      	ldr	r1, [r4, #8]
 8008c84:	9b00      	ldr	r3, [sp, #0]
    huart->TxXferSize = Size;
 8008c86:	84a7      	strh	r7, [r4, #36]	; 0x24
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008c88:	f5b1 5f80 	cmp.w	r1, #4096	; 0x1000
    tickstart = HAL_GetTick();
 8008c8c:	4602      	mov	r2, r0
    huart->TxXferCount = Size;
 8008c8e:	84e7      	strh	r7, [r4, #38]	; 0x26
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008c90:	d103      	bne.n	8008c9a <HAL_UART_Transmit+0x4e>
 8008c92:	6921      	ldr	r1, [r4, #16]
 8008c94:	b909      	cbnz	r1, 8008c9a <HAL_UART_Transmit+0x4e>
 8008c96:	4635      	mov	r5, r6
      pdata8bits  = NULL;
 8008c98:	460e      	mov	r6, r1
    __HAL_UNLOCK(huart);
 8008c9a:	2100      	movs	r1, #0
 8008c9c:	f884 103c 	strb.w	r1, [r4, #60]	; 0x3c
    while (huart->TxXferCount > 0U)
 8008ca0:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8008ca2:	b289      	uxth	r1, r1
 8008ca4:	b941      	cbnz	r1, 8008cb8 <HAL_UART_Transmit+0x6c>
    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8008ca6:	2140      	movs	r1, #64	; 0x40
 8008ca8:	4620      	mov	r0, r4
 8008caa:	f7ff ff6b 	bl	8008b84 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8008cae:	b960      	cbnz	r0, 8008cca <HAL_UART_Transmit+0x7e>
    huart->gState = HAL_UART_STATE_READY;
 8008cb0:	2320      	movs	r3, #32
 8008cb2:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    return HAL_OK;
 8008cb6:	e009      	b.n	8008ccc <HAL_UART_Transmit+0x80>
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8008cb8:	2180      	movs	r1, #128	; 0x80
 8008cba:	4620      	mov	r0, r4
 8008cbc:	e9cd 2300 	strd	r2, r3, [sp]
 8008cc0:	f7ff ff60 	bl	8008b84 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8008cc4:	e9dd 2300 	ldrd	r2, r3, [sp]
 8008cc8:	b110      	cbz	r0, 8008cd0 <HAL_UART_Transmit+0x84>
        return HAL_TIMEOUT;
 8008cca:	2003      	movs	r0, #3
}
 8008ccc:	b003      	add	sp, #12
 8008cce:	bdf0      	pop	{r4, r5, r6, r7, pc}
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8008cd0:	6820      	ldr	r0, [r4, #0]
      if (pdata8bits == NULL)
 8008cd2:	b94e      	cbnz	r6, 8008ce8 <HAL_UART_Transmit+0x9c>
        huart->Instance->DR = (uint16_t)(*pdata16bits & 0x01FFU);
 8008cd4:	f835 1b02 	ldrh.w	r1, [r5], #2
 8008cd8:	f3c1 0108 	ubfx	r1, r1, #0, #9
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8008cdc:	6041      	str	r1, [r0, #4]
      huart->TxXferCount--;
 8008cde:	8ce1      	ldrh	r1, [r4, #38]	; 0x26
 8008ce0:	3901      	subs	r1, #1
 8008ce2:	b289      	uxth	r1, r1
 8008ce4:	84e1      	strh	r1, [r4, #38]	; 0x26
 8008ce6:	e7db      	b.n	8008ca0 <HAL_UART_Transmit+0x54>
        huart->Instance->DR = (uint8_t)(*pdata8bits & 0xFFU);
 8008ce8:	f816 1b01 	ldrb.w	r1, [r6], #1
 8008cec:	e7f6      	b.n	8008cdc <HAL_UART_Transmit+0x90>
      return  HAL_ERROR;
 8008cee:	2001      	movs	r0, #1
 8008cf0:	e7ec      	b.n	8008ccc <HAL_UART_Transmit+0x80>
    return HAL_BUSY;
 8008cf2:	2002      	movs	r0, #2
 8008cf4:	e7ea      	b.n	8008ccc <HAL_UART_Transmit+0x80>

08008cf6 <HAL_UART_Receive>:
{
 8008cf6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8008cfa:	4699      	mov	r9, r3
  if (huart->RxState == HAL_UART_STATE_READY)
 8008cfc:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 8008d00:	2b20      	cmp	r3, #32
{
 8008d02:	4604      	mov	r4, r0
 8008d04:	460f      	mov	r7, r1
 8008d06:	4615      	mov	r5, r2
  if (huart->RxState == HAL_UART_STATE_READY)
 8008d08:	d14d      	bne.n	8008da6 <HAL_UART_Receive+0xb0>
    if ((pData == NULL) || (Size == 0U))
 8008d0a:	2900      	cmp	r1, #0
 8008d0c:	d049      	beq.n	8008da2 <HAL_UART_Receive+0xac>
 8008d0e:	2a00      	cmp	r2, #0
 8008d10:	d047      	beq.n	8008da2 <HAL_UART_Receive+0xac>
    __HAL_LOCK(huart);
 8008d12:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 8008d16:	2b01      	cmp	r3, #1
 8008d18:	d045      	beq.n	8008da6 <HAL_UART_Receive+0xb0>
 8008d1a:	2301      	movs	r3, #1
 8008d1c:	f880 303c 	strb.w	r3, [r0, #60]	; 0x3c
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008d20:	2600      	movs	r6, #0
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8008d22:	2322      	movs	r3, #34	; 0x22
    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8008d24:	6406      	str	r6, [r0, #64]	; 0x40
    huart->RxState = HAL_UART_STATE_BUSY_RX;
 8008d26:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
    huart->ReceptionType = HAL_UART_RECEPTION_STANDARD;
 8008d2a:	6306      	str	r6, [r0, #48]	; 0x30
    tickstart = HAL_GetTick();
 8008d2c:	f7fd fa28 	bl	8006180 <HAL_GetTick>
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008d30:	68a3      	ldr	r3, [r4, #8]
    huart->RxXferSize = Size;
 8008d32:	85a5      	strh	r5, [r4, #44]	; 0x2c
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008d34:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
    tickstart = HAL_GetTick();
 8008d38:	4680      	mov	r8, r0
    huart->RxXferCount = Size;
 8008d3a:	85e5      	strh	r5, [r4, #46]	; 0x2e
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8008d3c:	d103      	bne.n	8008d46 <HAL_UART_Receive+0x50>
 8008d3e:	6923      	ldr	r3, [r4, #16]
 8008d40:	b90b      	cbnz	r3, 8008d46 <HAL_UART_Receive+0x50>
 8008d42:	463e      	mov	r6, r7
      pdata8bits  = NULL;
 8008d44:	461f      	mov	r7, r3
    __HAL_UNLOCK(huart);
 8008d46:	2300      	movs	r3, #0
 8008d48:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    while (huart->RxXferCount > 0U)
 8008d4c:	8de5      	ldrh	r5, [r4, #46]	; 0x2e
 8008d4e:	b2a8      	uxth	r0, r5
 8008d50:	b920      	cbnz	r0, 8008d5c <HAL_UART_Receive+0x66>
    huart->RxState = HAL_UART_STATE_READY;
 8008d52:	2320      	movs	r3, #32
 8008d54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 8008d58:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_RXNE, RESET, tickstart, Timeout) != HAL_OK)
 8008d5c:	464b      	mov	r3, r9
 8008d5e:	4642      	mov	r2, r8
 8008d60:	2120      	movs	r1, #32
 8008d62:	4620      	mov	r0, r4
 8008d64:	f7ff ff0e 	bl	8008b84 <UART_WaitOnFlagUntilTimeout.constprop.0>
 8008d68:	b9f8      	cbnz	r0, 8008daa <HAL_UART_Receive+0xb4>
        *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 8008d6a:	6823      	ldr	r3, [r4, #0]
      if (pdata8bits == NULL)
 8008d6c:	b94f      	cbnz	r7, 8008d82 <HAL_UART_Receive+0x8c>
        *pdata16bits = (uint16_t)(huart->Instance->DR & 0x01FF);
 8008d6e:	685b      	ldr	r3, [r3, #4]
 8008d70:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8008d74:	f826 3b02 	strh.w	r3, [r6], #2
      huart->RxXferCount--;
 8008d78:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 8008d7a:	3b01      	subs	r3, #1
 8008d7c:	b29b      	uxth	r3, r3
 8008d7e:	85e3      	strh	r3, [r4, #46]	; 0x2e
 8008d80:	e7e4      	b.n	8008d4c <HAL_UART_Receive+0x56>
        if ((huart->Init.WordLength == UART_WORDLENGTH_9B) || ((huart->Init.WordLength == UART_WORDLENGTH_8B) && (huart->Init.Parity == UART_PARITY_NONE)))
 8008d82:	68a2      	ldr	r2, [r4, #8]
 8008d84:	f5b2 5f80 	cmp.w	r2, #4096	; 0x1000
 8008d88:	d002      	beq.n	8008d90 <HAL_UART_Receive+0x9a>
 8008d8a:	b932      	cbnz	r2, 8008d9a <HAL_UART_Receive+0xa4>
 8008d8c:	6922      	ldr	r2, [r4, #16]
 8008d8e:	b922      	cbnz	r2, 8008d9a <HAL_UART_Receive+0xa4>
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x00FF);
 8008d90:	6859      	ldr	r1, [r3, #4]
 8008d92:	b2c9      	uxtb	r1, r1
 8008d94:	f807 1b01 	strb.w	r1, [r7], #1
        pdata8bits++;
 8008d98:	e7ee      	b.n	8008d78 <HAL_UART_Receive+0x82>
          *pdata8bits = (uint8_t)(huart->Instance->DR & (uint8_t)0x007F);
 8008d9a:	6859      	ldr	r1, [r3, #4]
 8008d9c:	f001 017f 	and.w	r1, r1, #127	; 0x7f
 8008da0:	e7f8      	b.n	8008d94 <HAL_UART_Receive+0x9e>
      return  HAL_ERROR;
 8008da2:	2001      	movs	r0, #1
 8008da4:	e7d8      	b.n	8008d58 <HAL_UART_Receive+0x62>
    return HAL_BUSY;
 8008da6:	2002      	movs	r0, #2
 8008da8:	e7d6      	b.n	8008d58 <HAL_UART_Receive+0x62>
        return HAL_TIMEOUT;
 8008daa:	2003      	movs	r0, #3
 8008dac:	e7d4      	b.n	8008d58 <HAL_UART_Receive+0x62>

08008dae <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 8008dae:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008db2:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8008db6:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008db8:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8008dbc:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 8008dc0:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 8008dc4:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8008dc8:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8008dca:	b9a2      	cbnz	r2, 8008df6 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008dcc:	ea43 0209 	orr.w	r2, r3, r9
 8008dd0:	432a      	orrs	r2, r5
 8008dd2:	ea42 0308 	orr.w	r3, r2, r8
 8008dd6:	6801      	ldr	r1, [r0, #0]
 8008dd8:	ea43 030e 	orr.w	r3, r3, lr
 8008ddc:	ea43 030c 	orr.w	r3, r3, ip
 8008de0:	433b      	orrs	r3, r7
 8008de2:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8008de6:	4333      	orrs	r3, r6
 8008de8:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8008dec:	430b      	orrs	r3, r1
 8008dee:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 8008df0:	2000      	movs	r0, #0
 8008df2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8008df6:	6802      	ldr	r2, [r0, #0]
 8008df8:	ea43 0309 	orr.w	r3, r3, r9
 8008dfc:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 8008e00:	4313      	orrs	r3, r2
 8008e02:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 8008e04:	ea45 0308 	orr.w	r3, r5, r8
 8008e08:	6842      	ldr	r2, [r0, #4]
 8008e0a:	ea43 030e 	orr.w	r3, r3, lr
 8008e0e:	ea43 030c 	orr.w	r3, r3, ip
 8008e12:	433b      	orrs	r3, r7
 8008e14:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8008e18:	4333      	orrs	r3, r6
 8008e1a:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8008e1e:	4313      	orrs	r3, r2
 8008e20:	6043      	str	r3, [r0, #4]
 8008e22:	e7e5      	b.n	8008df0 <FMC_SDRAM_Init+0x42>

08008e24 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008e24:	68cb      	ldr	r3, [r1, #12]
 8008e26:	f103 3cff 	add.w	ip, r3, #4294967295
 8008e2a:	694b      	ldr	r3, [r1, #20]
{
 8008e2c:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008e2e:	680f      	ldr	r7, [r1, #0]
 8008e30:	684c      	ldr	r4, [r1, #4]
 8008e32:	688e      	ldr	r6, [r1, #8]
 8008e34:	690d      	ldr	r5, [r1, #16]
 8008e36:	6989      	ldr	r1, [r1, #24]
 8008e38:	3b01      	subs	r3, #1
 8008e3a:	051b      	lsls	r3, r3, #20
 8008e3c:	3c01      	subs	r4, #1
 8008e3e:	3e01      	subs	r6, #1
 8008e40:	3d01      	subs	r5, #1
 8008e42:	3901      	subs	r1, #1
 8008e44:	3f01      	subs	r7, #1
 8008e46:	0124      	lsls	r4, r4, #4
 8008e48:	0236      	lsls	r6, r6, #8
 8008e4a:	042d      	lsls	r5, r5, #16
 8008e4c:	0609      	lsls	r1, r1, #24
 8008e4e:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 8008e52:	b95a      	cbnz	r2, 8008e6c <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008e54:	433b      	orrs	r3, r7
 8008e56:	4323      	orrs	r3, r4
 8008e58:	6882      	ldr	r2, [r0, #8]
 8008e5a:	4333      	orrs	r3, r6
 8008e5c:	432b      	orrs	r3, r5
 8008e5e:	430b      	orrs	r3, r1
 8008e60:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8008e64:	4313      	orrs	r3, r2
 8008e66:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 8008e68:	2000      	movs	r0, #0
 8008e6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8008e6c:	6882      	ldr	r2, [r0, #8]
 8008e6e:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 8008e72:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 8008e76:	431a      	orrs	r2, r3
 8008e78:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 8008e7a:	ea44 0306 	orr.w	r3, r4, r6
 8008e7e:	68c2      	ldr	r2, [r0, #12]
 8008e80:	433b      	orrs	r3, r7
 8008e82:	432b      	orrs	r3, r5
 8008e84:	430b      	orrs	r3, r1
 8008e86:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 8008e8a:	4313      	orrs	r3, r2
 8008e8c:	60c3      	str	r3, [r0, #12]
 8008e8e:	e7eb      	b.n	8008e68 <FMC_SDRAM_Timing_Init+0x44>

08008e90 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 8008e90:	b570      	push	{r4, r5, r6, lr}
 8008e92:	4604      	mov	r4, r0
 8008e94:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 8008e96:	6902      	ldr	r2, [r0, #16]
 8008e98:	e9d1 3000 	ldrd	r3, r0, [r1]
 8008e9c:	4303      	orrs	r3, r0
 8008e9e:	68c8      	ldr	r0, [r1, #12]
 8008ea0:	0d92      	lsrs	r2, r2, #22
 8008ea2:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 8008ea6:	0592      	lsls	r2, r2, #22
 8008ea8:	4313      	orrs	r3, r2
 8008eaa:	688a      	ldr	r2, [r1, #8]
 8008eac:	3a01      	subs	r2, #1
 8008eae:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 8008eb2:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 8008eb4:	f7fd f964 	bl	8006180 <HAL_GetTick>
 8008eb8:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8008eba:	69a3      	ldr	r3, [r4, #24]
 8008ebc:	f013 0320 	ands.w	r3, r3, #32
 8008ec0:	d101      	bne.n	8008ec6 <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 8008ec2:	4618      	mov	r0, r3
 8008ec4:	e003      	b.n	8008ece <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 8008ec6:	1c6b      	adds	r3, r5, #1
 8008ec8:	d0f7      	beq.n	8008eba <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008eca:	b90d      	cbnz	r5, 8008ed0 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8008ecc:	2003      	movs	r0, #3
}
 8008ece:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8008ed0:	f7fd f956 	bl	8006180 <HAL_GetTick>
 8008ed4:	1b80      	subs	r0, r0, r6
 8008ed6:	42a8      	cmp	r0, r5
 8008ed8:	d9ef      	bls.n	8008eba <FMC_SDRAM_SendCommand+0x2a>
 8008eda:	e7f7      	b.n	8008ecc <FMC_SDRAM_SendCommand+0x3c>

08008edc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8008edc:	6943      	ldr	r3, [r0, #20]
 8008ede:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8008ee2:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 8008ee6:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8008eea:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8008eec:	2000      	movs	r0, #0
 8008eee:	4770      	bx	lr

08008ef0 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8008ef0:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 8008ef2:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8008ef6:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8008ef8:	f001 fffe 	bl	800aef8 <xTaskGetSchedulerState>
 8008efc:	2801      	cmp	r0, #1
 8008efe:	d003      	beq.n	8008f08 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8008f00:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 8008f04:	f000 bbde 	b.w	80096c4 <xPortSysTickHandler>
}
 8008f08:	bd08      	pop	{r3, pc}
	...

08008f0c <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8008f0c:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8008f10:	b92b      	cbnz	r3, 8008f1e <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 8008f12:	4b06      	ldr	r3, [pc, #24]	; (8008f2c <osKernelInitialize+0x20>)
 8008f14:	6818      	ldr	r0, [r3, #0]
 8008f16:	b928      	cbnz	r0, 8008f24 <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8008f18:	2201      	movs	r2, #1
 8008f1a:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8008f1c:	4770      	bx	lr
    stat = osErrorISR;
 8008f1e:	f06f 0005 	mvn.w	r0, #5
 8008f22:	4770      	bx	lr
    } else {
      stat = osError;
 8008f24:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8008f28:	4770      	bx	lr
 8008f2a:	bf00      	nop
 8008f2c:	20002c44 	.word	0x20002c44

08008f30 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8008f30:	b510      	push	{r4, lr}
 8008f32:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008f36:	b95c      	cbnz	r4, 8008f50 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8008f38:	4b08      	ldr	r3, [pc, #32]	; (8008f5c <osKernelStart+0x2c>)
 8008f3a:	681a      	ldr	r2, [r3, #0]
 8008f3c:	2a01      	cmp	r2, #1
 8008f3e:	d10a      	bne.n	8008f56 <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8008f40:	4a07      	ldr	r2, [pc, #28]	; (8008f60 <osKernelStart+0x30>)
 8008f42:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 8008f44:	2202      	movs	r2, #2
 8008f46:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8008f48:	f001 fb72 	bl	800a630 <vTaskStartScheduler>
      stat = osOK;
 8008f4c:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8008f4e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8008f50:	f06f 0005 	mvn.w	r0, #5
 8008f54:	e7fb      	b.n	8008f4e <osKernelStart+0x1e>
      stat = osError;
 8008f56:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8008f5a:	e7f8      	b.n	8008f4e <osKernelStart+0x1e>
 8008f5c:	20002c44 	.word	0x20002c44
 8008f60:	e000ed00 	.word	0xe000ed00

08008f64 <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008f64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008f66:	b087      	sub	sp, #28
 8008f68:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8008f6a:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8008f6c:	460b      	mov	r3, r1
  hTask = NULL;
 8008f6e:	9205      	str	r2, [sp, #20]
 8008f70:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 8008f74:	b9d2      	cbnz	r2, 8008fac <osThreadNew+0x48>
 8008f76:	b1c8      	cbz	r0, 8008fac <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8008f78:	2c00      	cmp	r4, #0
 8008f7a:	d02f      	beq.n	8008fdc <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8008f7c:	69a5      	ldr	r5, [r4, #24]
 8008f7e:	2d00      	cmp	r5, #0
 8008f80:	bf08      	it	eq
 8008f82:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 8008f84:	1e69      	subs	r1, r5, #1
 8008f86:	2937      	cmp	r1, #55	; 0x37
 8008f88:	46ac      	mov	ip, r5
 8008f8a:	d82b      	bhi.n	8008fe4 <osThreadNew+0x80>
 8008f8c:	6861      	ldr	r1, [r4, #4]
 8008f8e:	07c9      	lsls	r1, r1, #31
 8008f90:	d428      	bmi.n	8008fe4 <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 8008f92:	6966      	ldr	r6, [r4, #20]
 8008f94:	b16e      	cbz	r6, 8008fb2 <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 8008f96:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008f98:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8008f9c:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008f9e:	b157      	cbz	r7, 8008fb6 <osThreadNew+0x52>
 8008fa0:	f1be 0f67 	cmp.w	lr, #103	; 0x67
 8008fa4:	d902      	bls.n	8008fac <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008fa6:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8008fa8:	b104      	cbz	r4, 8008fac <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8008faa:	b9ee      	cbnz	r6, 8008fe8 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8008fac:	9805      	ldr	r0, [sp, #20]
}
 8008fae:	b007      	add	sp, #28
 8008fb0:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 8008fb2:	2280      	movs	r2, #128	; 0x80
 8008fb4:	e7f0      	b.n	8008f98 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 8008fb6:	f1be 0f00 	cmp.w	lr, #0
 8008fba:	d1f7      	bne.n	8008fac <osThreadNew+0x48>
      if (mem == 0) {
 8008fbc:	6924      	ldr	r4, [r4, #16]
 8008fbe:	2c00      	cmp	r4, #0
 8008fc0:	d1f4      	bne.n	8008fac <osThreadNew+0x48>
 8008fc2:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 8008fc4:	a905      	add	r1, sp, #20
 8008fc6:	e9cd c100 	strd	ip, r1, [sp]
 8008fca:	b292      	uxth	r2, r2
 8008fcc:	4621      	mov	r1, r4
 8008fce:	f001 f9ae 	bl	800a32e <xTaskCreate>
 8008fd2:	2801      	cmp	r0, #1
            hTask = NULL;
 8008fd4:	bf1c      	itt	ne
 8008fd6:	2300      	movne	r3, #0
 8008fd8:	9305      	strne	r3, [sp, #20]
 8008fda:	e7e7      	b.n	8008fac <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8008fdc:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8008fe0:	2280      	movs	r2, #128	; 0x80
 8008fe2:	e7ef      	b.n	8008fc4 <osThreadNew+0x60>
        return (NULL);
 8008fe4:	4610      	mov	r0, r2
 8008fe6:	e7e2      	b.n	8008fae <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8008fe8:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8008fec:	9500      	str	r5, [sp, #0]
 8008fee:	f001 f941 	bl	800a274 <xTaskCreateStatic>
 8008ff2:	9005      	str	r0, [sp, #20]
 8008ff4:	e7da      	b.n	8008fac <osThreadNew+0x48>

08008ff6 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8008ff6:	b510      	push	{r4, lr}
 8008ff8:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8008ffc:	b924      	cbnz	r4, 8009008 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8008ffe:	b110      	cbz	r0, 8009006 <osDelay+0x10>
      vTaskDelay(ticks);
 8009000:	f001 fae2 	bl	800a5c8 <vTaskDelay>
    stat = osOK;
 8009004:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8009006:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009008:	f06f 0005 	mvn.w	r0, #5
 800900c:	e7fb      	b.n	8009006 <osDelay+0x10>

0800900e <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800900e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009010:	4604      	mov	r4, r0
 8009012:	460e      	mov	r6, r1
 8009014:	4615      	mov	r5, r2
 8009016:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800901a:	b11a      	cbz	r2, 8009024 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800901c:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800901e:	4620      	mov	r0, r4
 8009020:	b003      	add	sp, #12
 8009022:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009024:	2800      	cmp	r0, #0
 8009026:	d0f9      	beq.n	800901c <osSemaphoreNew+0xe>
 8009028:	4288      	cmp	r0, r1
 800902a:	d3f7      	bcc.n	800901c <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800902c:	b1e5      	cbz	r5, 8009068 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800902e:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8009032:	b1bb      	cbz	r3, 8009064 <osSemaphoreNew+0x56>
 8009034:	2f4f      	cmp	r7, #79	; 0x4f
 8009036:	d9f1      	bls.n	800901c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009038:	2801      	cmp	r0, #1
 800903a:	d12a      	bne.n	8009092 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800903c:	2103      	movs	r1, #3
 800903e:	9100      	str	r1, [sp, #0]
 8009040:	4611      	mov	r1, r2
 8009042:	f000 fce8 	bl	8009a16 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8009046:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8009048:	2800      	cmp	r0, #0
 800904a:	d0e7      	beq.n	800901c <osSemaphoreNew+0xe>
 800904c:	b1de      	cbz	r6, 8009086 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800904e:	2300      	movs	r3, #0
 8009050:	461a      	mov	r2, r3
 8009052:	4619      	mov	r1, r3
 8009054:	f000 fd94 	bl	8009b80 <xQueueGenericSend>
 8009058:	2801      	cmp	r0, #1
 800905a:	d014      	beq.n	8009086 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800905c:	4620      	mov	r0, r4
 800905e:	f001 f8cf 	bl	800a200 <vQueueDelete>
 8009062:	e7db      	b.n	800901c <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8009064:	2f00      	cmp	r7, #0
 8009066:	d1d9      	bne.n	800901c <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8009068:	2c01      	cmp	r4, #1
 800906a:	d105      	bne.n	8009078 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800906c:	2203      	movs	r2, #3
 800906e:	2100      	movs	r1, #0
 8009070:	4620      	mov	r0, r4
 8009072:	f000 fd1e 	bl	8009ab2 <xQueueGenericCreate>
 8009076:	e7e6      	b.n	8009046 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8009078:	4620      	mov	r0, r4
 800907a:	4631      	mov	r1, r6
 800907c:	f000 fd62 	bl	8009b44 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 8009080:	4604      	mov	r4, r0
 8009082:	2800      	cmp	r0, #0
 8009084:	d0ca      	beq.n	800901c <osSemaphoreNew+0xe>
        if (attr != NULL) {
 8009086:	b955      	cbnz	r5, 800909e <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 8009088:	4629      	mov	r1, r5
 800908a:	4620      	mov	r0, r4
 800908c:	f001 f892 	bl	800a1b4 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 8009090:	e7c5      	b.n	800901e <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 8009092:	461a      	mov	r2, r3
 8009094:	f000 fd34 	bl	8009b00 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8009098:	4604      	mov	r4, r0
 800909a:	2800      	cmp	r0, #0
 800909c:	d0be      	beq.n	800901c <osSemaphoreNew+0xe>
          name = attr->name;
 800909e:	682d      	ldr	r5, [r5, #0]
 80090a0:	e7f2      	b.n	8009088 <osSemaphoreNew+0x7a>

080090a2 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80090a2:	b513      	push	{r0, r1, r4, lr}
 80090a4:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80090a6:	b308      	cbz	r0, 80090ec <osSemaphoreAcquire+0x4a>
 80090a8:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80090ac:	b1b3      	cbz	r3, 80090dc <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 80090ae:	b9e9      	cbnz	r1, 80090ec <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80090b0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80090b2:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80090b4:	f001 f82f 	bl	800a116 <xQueueReceiveFromISR>
 80090b8:	2801      	cmp	r0, #1
 80090ba:	d114      	bne.n	80090e6 <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80090bc:	9b01      	ldr	r3, [sp, #4]
 80090be:	b913      	cbnz	r3, 80090c6 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80090c0:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80090c2:	b002      	add	sp, #8
 80090c4:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80090c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80090ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80090ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80090d2:	f3bf 8f4f 	dsb	sy
 80090d6:	f3bf 8f6f 	isb	sy
 80090da:	e7f1      	b.n	80090c0 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80090dc:	f000 ff58 	bl	8009f90 <xQueueSemaphoreTake>
 80090e0:	2801      	cmp	r0, #1
 80090e2:	d0ed      	beq.n	80090c0 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80090e4:	b92c      	cbnz	r4, 80090f2 <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 80090e6:	f06f 0002 	mvn.w	r0, #2
 80090ea:	e7ea      	b.n	80090c2 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 80090ec:	f06f 0003 	mvn.w	r0, #3
 80090f0:	e7e7      	b.n	80090c2 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 80090f2:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 80090f6:	e7e4      	b.n	80090c2 <osSemaphoreAcquire+0x20>

080090f8 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 80090f8:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80090fa:	b310      	cbz	r0, 8009142 <osSemaphoreRelease+0x4a>
 80090fc:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009100:	b1b3      	cbz	r3, 8009130 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 8009102:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009104:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8009106:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009108:	f000 fe4f 	bl	8009daa <xQueueGiveFromISR>
 800910c:	2801      	cmp	r0, #1
 800910e:	d115      	bne.n	800913c <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009110:	9b01      	ldr	r3, [sp, #4]
 8009112:	b913      	cbnz	r3, 800911a <osSemaphoreRelease+0x22>
  stat = osOK;
 8009114:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8009116:	b002      	add	sp, #8
 8009118:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800911a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800911e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009122:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009126:	f3bf 8f4f 	dsb	sy
 800912a:	f3bf 8f6f 	isb	sy
 800912e:	e7f1      	b.n	8009114 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009130:	461a      	mov	r2, r3
 8009132:	4619      	mov	r1, r3
 8009134:	f000 fd24 	bl	8009b80 <xQueueGenericSend>
 8009138:	2801      	cmp	r0, #1
 800913a:	d0eb      	beq.n	8009114 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 800913c:	f06f 0002 	mvn.w	r0, #2
 8009140:	e7e9      	b.n	8009116 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 8009142:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8009146:	e7e6      	b.n	8009116 <osSemaphoreRelease+0x1e>

08009148 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8009148:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800914a:	4605      	mov	r5, r0
 800914c:	460e      	mov	r6, r1
 800914e:	4614      	mov	r4, r2
 8009150:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8009154:	b11f      	cbz	r7, 800915e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8009156:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8009158:	4628      	mov	r0, r5
 800915a:	b003      	add	sp, #12
 800915c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800915e:	2800      	cmp	r0, #0
 8009160:	d0f9      	beq.n	8009156 <osMessageQueueNew+0xe>
 8009162:	2900      	cmp	r1, #0
 8009164:	d0f7      	beq.n	8009156 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8009166:	b1da      	cbz	r2, 80091a0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009168:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800916c:	b183      	cbz	r3, 8009190 <osMessageQueueNew+0x48>
 800916e:	2a4f      	cmp	r2, #79	; 0x4f
 8009170:	d9f1      	bls.n	8009156 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009172:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8009174:	2a00      	cmp	r2, #0
 8009176:	d0ee      	beq.n	8009156 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8009178:	6966      	ldr	r6, [r4, #20]
 800917a:	434d      	muls	r5, r1
 800917c:	42ae      	cmp	r6, r5
 800917e:	d3ea      	bcc.n	8009156 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 8009180:	9700      	str	r7, [sp, #0]
 8009182:	f000 fc48 	bl	8009a16 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 8009186:	4605      	mov	r5, r0
 8009188:	2800      	cmp	r0, #0
 800918a:	d0e4      	beq.n	8009156 <osMessageQueueNew+0xe>
        name = attr->name;
 800918c:	6824      	ldr	r4, [r4, #0]
 800918e:	e011      	b.n	80091b4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 8009190:	2a00      	cmp	r2, #0
 8009192:	d1e0      	bne.n	8009156 <osMessageQueueNew+0xe>
 8009194:	6923      	ldr	r3, [r4, #16]
 8009196:	2b00      	cmp	r3, #0
 8009198:	d1dd      	bne.n	8009156 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 800919a:	6963      	ldr	r3, [r4, #20]
 800919c:	2b00      	cmp	r3, #0
 800919e:	d1da      	bne.n	8009156 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80091a0:	4628      	mov	r0, r5
 80091a2:	2200      	movs	r2, #0
 80091a4:	4631      	mov	r1, r6
 80091a6:	f000 fc84 	bl	8009ab2 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80091aa:	4605      	mov	r5, r0
 80091ac:	2800      	cmp	r0, #0
 80091ae:	d0d2      	beq.n	8009156 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80091b0:	2c00      	cmp	r4, #0
 80091b2:	d1eb      	bne.n	800918c <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80091b4:	4621      	mov	r1, r4
 80091b6:	4628      	mov	r0, r5
 80091b8:	f000 fffc 	bl	800a1b4 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80091bc:	e7cc      	b.n	8009158 <osMessageQueueNew+0x10>

080091be <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80091be:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80091c0:	461c      	mov	r4, r3
 80091c2:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80091c6:	b1c6      	cbz	r6, 80091fa <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80091c8:	b318      	cbz	r0, 8009212 <osMessageQueuePut+0x54>
 80091ca:	b311      	cbz	r1, 8009212 <osMessageQueuePut+0x54>
 80091cc:	bb0b      	cbnz	r3, 8009212 <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80091ce:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80091d0:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80091d2:	f000 fd88 	bl	8009ce6 <xQueueGenericSendFromISR>
 80091d6:	2801      	cmp	r0, #1
 80091d8:	d118      	bne.n	800920c <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80091da:	9b01      	ldr	r3, [sp, #4]
 80091dc:	b913      	cbnz	r3, 80091e4 <osMessageQueuePut+0x26>
  stat = osOK;
 80091de:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80091e0:	b002      	add	sp, #8
 80091e2:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 80091e4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80091e8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80091ec:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80091f0:	f3bf 8f4f 	dsb	sy
 80091f4:	f3bf 8f6f 	isb	sy
 80091f8:	e7f1      	b.n	80091de <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 80091fa:	b150      	cbz	r0, 8009212 <osMessageQueuePut+0x54>
 80091fc:	b149      	cbz	r1, 8009212 <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 80091fe:	4633      	mov	r3, r6
 8009200:	4622      	mov	r2, r4
 8009202:	f000 fcbd 	bl	8009b80 <xQueueGenericSend>
 8009206:	2801      	cmp	r0, #1
 8009208:	d0e9      	beq.n	80091de <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 800920a:	b92c      	cbnz	r4, 8009218 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 800920c:	f06f 0002 	mvn.w	r0, #2
 8009210:	e7e6      	b.n	80091e0 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009212:	f06f 0003 	mvn.w	r0, #3
 8009216:	e7e3      	b.n	80091e0 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009218:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800921c:	e7e0      	b.n	80091e0 <osMessageQueuePut+0x22>

0800921e <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 800921e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009220:	461c      	mov	r4, r3
 8009222:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009226:	b1c3      	cbz	r3, 800925a <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009228:	b310      	cbz	r0, 8009270 <osMessageQueueGet+0x52>
 800922a:	b309      	cbz	r1, 8009270 <osMessageQueueGet+0x52>
 800922c:	bb04      	cbnz	r4, 8009270 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 800922e:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009230:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009232:	f000 ff70 	bl	800a116 <xQueueReceiveFromISR>
 8009236:	2801      	cmp	r0, #1
 8009238:	d117      	bne.n	800926a <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800923a:	9b01      	ldr	r3, [sp, #4]
 800923c:	b913      	cbnz	r3, 8009244 <osMessageQueueGet+0x26>
  stat = osOK;
 800923e:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009240:	b003      	add	sp, #12
 8009242:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009244:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009248:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800924c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009250:	f3bf 8f4f 	dsb	sy
 8009254:	f3bf 8f6f 	isb	sy
 8009258:	e7f1      	b.n	800923e <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 800925a:	b148      	cbz	r0, 8009270 <osMessageQueueGet+0x52>
 800925c:	b141      	cbz	r1, 8009270 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800925e:	4622      	mov	r2, r4
 8009260:	f000 fdf7 	bl	8009e52 <xQueueReceive>
 8009264:	2801      	cmp	r0, #1
 8009266:	d0ea      	beq.n	800923e <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8009268:	b92c      	cbnz	r4, 8009276 <osMessageQueueGet+0x58>
          stat = osErrorResource;
 800926a:	f06f 0002 	mvn.w	r0, #2
 800926e:	e7e7      	b.n	8009240 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8009270:	f06f 0003 	mvn.w	r0, #3
 8009274:	e7e4      	b.n	8009240 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8009276:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800927a:	e7e1      	b.n	8009240 <osMessageQueueGet+0x22>

0800927c <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 800927c:	4b03      	ldr	r3, [pc, #12]	; (800928c <vApplicationGetIdleTaskMemory+0x10>)
 800927e:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009280:	4b03      	ldr	r3, [pc, #12]	; (8009290 <vApplicationGetIdleTaskMemory+0x14>)
 8009282:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009284:	2380      	movs	r3, #128	; 0x80
 8009286:	6013      	str	r3, [r2, #0]
}
 8009288:	4770      	bx	lr
 800928a:	bf00      	nop
 800928c:	20002bdc 	.word	0x20002bdc
 8009290:	200029dc 	.word	0x200029dc

08009294 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009294:	4b03      	ldr	r3, [pc, #12]	; (80092a4 <vApplicationGetTimerTaskMemory+0x10>)
 8009296:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009298:	4b03      	ldr	r3, [pc, #12]	; (80092a8 <vApplicationGetTimerTaskMemory+0x14>)
 800929a:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 800929c:	f44f 7380 	mov.w	r3, #256	; 0x100
 80092a0:	6013      	str	r3, [r2, #0]
}
 80092a2:	4770      	bx	lr
 80092a4:	20003048 	.word	0x20003048
 80092a8:	20002c48 	.word	0x20002c48

080092ac <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80092ac:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80092ae:	4b0f      	ldr	r3, [pc, #60]	; (80092ec <prvInsertBlockIntoFreeList+0x40>)
 80092b0:	461a      	mov	r2, r3
 80092b2:	681b      	ldr	r3, [r3, #0]
 80092b4:	4283      	cmp	r3, r0
 80092b6:	d3fb      	bcc.n	80092b0 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80092b8:	6854      	ldr	r4, [r2, #4]
 80092ba:	1911      	adds	r1, r2, r4
 80092bc:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80092be:	bf01      	itttt	eq
 80092c0:	6841      	ldreq	r1, [r0, #4]
 80092c2:	4610      	moveq	r0, r2
 80092c4:	1909      	addeq	r1, r1, r4
 80092c6:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80092c8:	6844      	ldr	r4, [r0, #4]
 80092ca:	1901      	adds	r1, r0, r4
 80092cc:	428b      	cmp	r3, r1
 80092ce:	d107      	bne.n	80092e0 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80092d0:	4907      	ldr	r1, [pc, #28]	; (80092f0 <prvInsertBlockIntoFreeList+0x44>)
 80092d2:	6809      	ldr	r1, [r1, #0]
 80092d4:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80092d6:	bf1f      	itttt	ne
 80092d8:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80092da:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80092dc:	1909      	addne	r1, r1, r4
 80092de:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 80092e0:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 80092e2:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 80092e4:	bf18      	it	ne
 80092e6:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 80092e8:	bd10      	pop	{r4, pc}
 80092ea:	bf00      	nop
 80092ec:	200130c8 	.word	0x200130c8
 80092f0:	200030b0 	.word	0x200030b0

080092f4 <pvPortMalloc>:
{
 80092f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80092f8:	4604      	mov	r4, r0
	vTaskSuspendAll();
 80092fa:	f001 fa01 	bl	800a700 <vTaskSuspendAll>
		if( pxEnd == NULL )
 80092fe:	4842      	ldr	r0, [pc, #264]	; (8009408 <pvPortMalloc+0x114>)
 8009300:	4d42      	ldr	r5, [pc, #264]	; (800940c <pvPortMalloc+0x118>)
 8009302:	6803      	ldr	r3, [r0, #0]
 8009304:	bb0b      	cbnz	r3, 800934a <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009306:	4942      	ldr	r1, [pc, #264]	; (8009410 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009308:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 800930a:	bf1f      	itttt	ne
 800930c:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 800930e:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009312:	f501 3280 	addne.w	r2, r1, #65536	; 0x10000
 8009316:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009318:	bf14      	ite	ne
 800931a:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 800931c:	f44f 3280 	moveq.w	r2, #65536	; 0x10000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009320:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009322:	4e3c      	ldr	r6, [pc, #240]	; (8009414 <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8009324:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009326:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 800932a:	2300      	movs	r3, #0
 800932c:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 800932e:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8009330:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009334:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009336:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 800933a:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 800933c:	4a36      	ldr	r2, [pc, #216]	; (8009418 <pvPortMalloc+0x124>)
 800933e:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009340:	4a36      	ldr	r2, [pc, #216]	; (800941c <pvPortMalloc+0x128>)
 8009342:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009344:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009348:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 800934a:	682f      	ldr	r7, [r5, #0]
 800934c:	4227      	tst	r7, r4
 800934e:	d155      	bne.n	80093fc <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009350:	2c00      	cmp	r4, #0
 8009352:	d046      	beq.n	80093e2 <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009354:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009358:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 800935a:	bf1c      	itt	ne
 800935c:	f023 0307 	bicne.w	r3, r3, #7
 8009360:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009362:	2b00      	cmp	r3, #0
 8009364:	d04a      	beq.n	80093fc <pvPortMalloc+0x108>
 8009366:	4c2d      	ldr	r4, [pc, #180]	; (800941c <pvPortMalloc+0x128>)
 8009368:	6826      	ldr	r6, [r4, #0]
 800936a:	429e      	cmp	r6, r3
 800936c:	d346      	bcc.n	80093fc <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 800936e:	4a29      	ldr	r2, [pc, #164]	; (8009414 <pvPortMalloc+0x120>)
 8009370:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009372:	6869      	ldr	r1, [r5, #4]
 8009374:	4299      	cmp	r1, r3
 8009376:	d204      	bcs.n	8009382 <pvPortMalloc+0x8e>
 8009378:	f8d5 c000 	ldr.w	ip, [r5]
 800937c:	f1bc 0f00 	cmp.w	ip, #0
 8009380:	d115      	bne.n	80093ae <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009382:	6800      	ldr	r0, [r0, #0]
 8009384:	42a8      	cmp	r0, r5
 8009386:	d039      	beq.n	80093fc <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009388:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 800938a:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 800938c:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009390:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009392:	2910      	cmp	r1, #16
 8009394:	d912      	bls.n	80093bc <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009396:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009398:	0742      	lsls	r2, r0, #29
 800939a:	d00b      	beq.n	80093b4 <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 800939c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093a0:	f383 8811 	msr	BASEPRI, r3
 80093a4:	f3bf 8f6f 	isb	sy
 80093a8:	f3bf 8f4f 	dsb	sy
 80093ac:	e7fe      	b.n	80093ac <pvPortMalloc+0xb8>
 80093ae:	462a      	mov	r2, r5
 80093b0:	4665      	mov	r5, ip
 80093b2:	e7de      	b.n	8009372 <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 80093b4:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 80093b6:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 80093b8:	f7ff ff78 	bl	80092ac <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80093bc:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80093be:	4916      	ldr	r1, [pc, #88]	; (8009418 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 80093c0:	4a17      	ldr	r2, [pc, #92]	; (8009420 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80093c2:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80093c4:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80093c6:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 80093c8:	2300      	movs	r3, #0
 80093ca:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 80093cc:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 80093ce:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 80093d0:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 80093d2:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 80093d6:	bf38      	it	cc
 80093d8:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 80093da:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 80093de:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 80093e0:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 80093e2:	f001 f99b 	bl	800a71c <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 80093e6:	0763      	lsls	r3, r4, #29
 80093e8:	d00a      	beq.n	8009400 <pvPortMalloc+0x10c>
 80093ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80093ee:	f383 8811 	msr	BASEPRI, r3
 80093f2:	f3bf 8f6f 	isb	sy
 80093f6:	f3bf 8f4f 	dsb	sy
 80093fa:	e7fe      	b.n	80093fa <pvPortMalloc+0x106>
void *pvReturn = NULL;
 80093fc:	2400      	movs	r4, #0
 80093fe:	e7f0      	b.n	80093e2 <pvPortMalloc+0xee>
}
 8009400:	4620      	mov	r0, r4
 8009402:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009406:	bf00      	nop
 8009408:	200030b0 	.word	0x200030b0
 800940c:	200130b4 	.word	0x200130b4
 8009410:	200030b4 	.word	0x200030b4
 8009414:	200130c8 	.word	0x200130c8
 8009418:	200130bc 	.word	0x200130bc
 800941c:	200130b8 	.word	0x200130b8
 8009420:	200130c0 	.word	0x200130c0

08009424 <vPortFree>:
{
 8009424:	b510      	push	{r4, lr}
	if( pv != NULL )
 8009426:	4604      	mov	r4, r0
 8009428:	b390      	cbz	r0, 8009490 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 800942a:	4a1a      	ldr	r2, [pc, #104]	; (8009494 <vPortFree+0x70>)
 800942c:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009430:	6812      	ldr	r2, [r2, #0]
 8009432:	4213      	tst	r3, r2
 8009434:	d108      	bne.n	8009448 <vPortFree+0x24>
 8009436:	f04f 0350 	mov.w	r3, #80	; 0x50
 800943a:	f383 8811 	msr	BASEPRI, r3
 800943e:	f3bf 8f6f 	isb	sy
 8009442:	f3bf 8f4f 	dsb	sy
 8009446:	e7fe      	b.n	8009446 <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009448:	f850 1c08 	ldr.w	r1, [r0, #-8]
 800944c:	b141      	cbz	r1, 8009460 <vPortFree+0x3c>
 800944e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009452:	f383 8811 	msr	BASEPRI, r3
 8009456:	f3bf 8f6f 	isb	sy
 800945a:	f3bf 8f4f 	dsb	sy
 800945e:	e7fe      	b.n	800945e <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8009460:	ea23 0302 	bic.w	r3, r3, r2
 8009464:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009468:	f001 f94a 	bl	800a700 <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 800946c:	4a0a      	ldr	r2, [pc, #40]	; (8009498 <vPortFree+0x74>)
 800946e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009472:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009474:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009478:	440b      	add	r3, r1
 800947a:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 800947c:	f7ff ff16 	bl	80092ac <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8009480:	4a06      	ldr	r2, [pc, #24]	; (800949c <vPortFree+0x78>)
 8009482:	6813      	ldr	r3, [r2, #0]
}
 8009484:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8009488:	3301      	adds	r3, #1
 800948a:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 800948c:	f001 b946 	b.w	800a71c <xTaskResumeAll>
}
 8009490:	bd10      	pop	{r4, pc}
 8009492:	bf00      	nop
 8009494:	200130b4 	.word	0x200130b4
 8009498:	200130b8 	.word	0x200130b8
 800949c:	200130c4 	.word	0x200130c4

080094a0 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80094a0:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 80094a4:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80094a8:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80094ac:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 80094ae:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 80094b0:	2300      	movs	r3, #0
 80094b2:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 80094b4:	4770      	bx	lr

080094b6 <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 80094b6:	2300      	movs	r3, #0
 80094b8:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 80094ba:	4770      	bx	lr

080094bc <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 80094bc:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 80094be:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 80094c0:	689a      	ldr	r2, [r3, #8]
 80094c2:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 80094c4:	689a      	ldr	r2, [r3, #8]
 80094c6:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 80094c8:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80094ca:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80094cc:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80094ce:	3301      	adds	r3, #1
 80094d0:	6003      	str	r3, [r0, #0]
}
 80094d2:	4770      	bx	lr

080094d4 <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 80094d4:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 80094d6:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 80094d8:	1c63      	adds	r3, r4, #1
 80094da:	d10a      	bne.n	80094f2 <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 80094dc:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 80094de:	685a      	ldr	r2, [r3, #4]
 80094e0:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 80094e2:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 80094e4:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 80094e6:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 80094e8:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 80094ea:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 80094ec:	3301      	adds	r3, #1
 80094ee:	6003      	str	r3, [r0, #0]
}
 80094f0:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 80094f2:	f100 0208 	add.w	r2, r0, #8
 80094f6:	4613      	mov	r3, r2
 80094f8:	6852      	ldr	r2, [r2, #4]
 80094fa:	6815      	ldr	r5, [r2, #0]
 80094fc:	42a5      	cmp	r5, r4
 80094fe:	d9fa      	bls.n	80094f6 <vListInsert+0x22>
 8009500:	e7ed      	b.n	80094de <vListInsert+0xa>

08009502 <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009502:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8009506:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009508:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 800950a:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 800950c:	6859      	ldr	r1, [r3, #4]
 800950e:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009510:	bf08      	it	eq
 8009512:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009514:	2200      	movs	r2, #0
 8009516:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009518:	681a      	ldr	r2, [r3, #0]
 800951a:	3a01      	subs	r2, #1
 800951c:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 800951e:	6818      	ldr	r0, [r3, #0]
}
 8009520:	4770      	bx	lr
	...

08009524 <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009524:	4808      	ldr	r0, [pc, #32]	; (8009548 <prvPortStartFirstTask+0x24>)
 8009526:	6800      	ldr	r0, [r0, #0]
 8009528:	6800      	ldr	r0, [r0, #0]
 800952a:	f380 8808 	msr	MSP, r0
 800952e:	f04f 0000 	mov.w	r0, #0
 8009532:	f380 8814 	msr	CONTROL, r0
 8009536:	b662      	cpsie	i
 8009538:	b661      	cpsie	f
 800953a:	f3bf 8f4f 	dsb	sy
 800953e:	f3bf 8f6f 	isb	sy
 8009542:	df00      	svc	0
 8009544:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8009546:	0000      	.short	0x0000
 8009548:	e000ed08 	.word	0xe000ed08

0800954c <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 800954c:	f8df 000c 	ldr.w	r0, [pc, #12]	; 800955c <vPortEnableVFP+0x10>
 8009550:	6801      	ldr	r1, [r0, #0]
 8009552:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009556:	6001      	str	r1, [r0, #0]
 8009558:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 800955a:	0000      	.short	0x0000
 800955c:	e000ed88 	.word	0xe000ed88

08009560 <prvTaskExitError>:
{
 8009560:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8009562:	2300      	movs	r3, #0
 8009564:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8009566:	4b0d      	ldr	r3, [pc, #52]	; (800959c <prvTaskExitError+0x3c>)
 8009568:	681b      	ldr	r3, [r3, #0]
 800956a:	3301      	adds	r3, #1
 800956c:	d008      	beq.n	8009580 <prvTaskExitError+0x20>
 800956e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009572:	f383 8811 	msr	BASEPRI, r3
 8009576:	f3bf 8f6f 	isb	sy
 800957a:	f3bf 8f4f 	dsb	sy
 800957e:	e7fe      	b.n	800957e <prvTaskExitError+0x1e>
 8009580:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009584:	f383 8811 	msr	BASEPRI, r3
 8009588:	f3bf 8f6f 	isb	sy
 800958c:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009590:	9b01      	ldr	r3, [sp, #4]
 8009592:	2b00      	cmp	r3, #0
 8009594:	d0fc      	beq.n	8009590 <prvTaskExitError+0x30>
}
 8009596:	b002      	add	sp, #8
 8009598:	4770      	bx	lr
 800959a:	bf00      	nop
 800959c:	20000080 	.word	0x20000080

080095a0 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 80095a0:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 80095a4:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 80095a8:	4b07      	ldr	r3, [pc, #28]	; (80095c8 <pxPortInitialiseStack+0x28>)
 80095aa:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80095ae:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80095b2:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 80095b6:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 80095ba:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 80095be:	f840 3c24 	str.w	r3, [r0, #-36]
}
 80095c2:	3844      	subs	r0, #68	; 0x44
 80095c4:	4770      	bx	lr
 80095c6:	bf00      	nop
 80095c8:	08009561 	.word	0x08009561
 80095cc:	00000000 	.word	0x00000000

080095d0 <SVC_Handler>:
	__asm volatile (
 80095d0:	4b07      	ldr	r3, [pc, #28]	; (80095f0 <pxCurrentTCBConst2>)
 80095d2:	6819      	ldr	r1, [r3, #0]
 80095d4:	6808      	ldr	r0, [r1, #0]
 80095d6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80095da:	f380 8809 	msr	PSP, r0
 80095de:	f3bf 8f6f 	isb	sy
 80095e2:	f04f 0000 	mov.w	r0, #0
 80095e6:	f380 8811 	msr	BASEPRI, r0
 80095ea:	4770      	bx	lr
 80095ec:	f3af 8000 	nop.w

080095f0 <pxCurrentTCBConst2>:
 80095f0:	20013118 	.word	0x20013118

080095f4 <vPortEnterCritical>:
 80095f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80095f8:	f383 8811 	msr	BASEPRI, r3
 80095fc:	f3bf 8f6f 	isb	sy
 8009600:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009604:	4a0a      	ldr	r2, [pc, #40]	; (8009630 <vPortEnterCritical+0x3c>)
 8009606:	6813      	ldr	r3, [r2, #0]
 8009608:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 800960a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 800960c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 800960e:	d10e      	bne.n	800962e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009610:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009614:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009618:	b2db      	uxtb	r3, r3
 800961a:	b143      	cbz	r3, 800962e <vPortEnterCritical+0x3a>
 800961c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009620:	f383 8811 	msr	BASEPRI, r3
 8009624:	f3bf 8f6f 	isb	sy
 8009628:	f3bf 8f4f 	dsb	sy
 800962c:	e7fe      	b.n	800962c <vPortEnterCritical+0x38>
}
 800962e:	4770      	bx	lr
 8009630:	20000080 	.word	0x20000080

08009634 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009634:	4a08      	ldr	r2, [pc, #32]	; (8009658 <vPortExitCritical+0x24>)
 8009636:	6813      	ldr	r3, [r2, #0]
 8009638:	b943      	cbnz	r3, 800964c <vPortExitCritical+0x18>
 800963a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800963e:	f383 8811 	msr	BASEPRI, r3
 8009642:	f3bf 8f6f 	isb	sy
 8009646:	f3bf 8f4f 	dsb	sy
 800964a:	e7fe      	b.n	800964a <vPortExitCritical+0x16>
	uxCriticalNesting--;
 800964c:	3b01      	subs	r3, #1
 800964e:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8009650:	b90b      	cbnz	r3, 8009656 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009652:	f383 8811 	msr	BASEPRI, r3
}
 8009656:	4770      	bx	lr
 8009658:	20000080 	.word	0x20000080
 800965c:	00000000 	.word	0x00000000

08009660 <PendSV_Handler>:
	__asm volatile
 8009660:	f3ef 8009 	mrs	r0, PSP
 8009664:	f3bf 8f6f 	isb	sy
 8009668:	4b15      	ldr	r3, [pc, #84]	; (80096c0 <pxCurrentTCBConst>)
 800966a:	681a      	ldr	r2, [r3, #0]
 800966c:	f01e 0f10 	tst.w	lr, #16
 8009670:	bf08      	it	eq
 8009672:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009676:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800967a:	6010      	str	r0, [r2, #0]
 800967c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009680:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009684:	f380 8811 	msr	BASEPRI, r0
 8009688:	f3bf 8f4f 	dsb	sy
 800968c:	f3bf 8f6f 	isb	sy
 8009690:	f001 f9ac 	bl	800a9ec <vTaskSwitchContext>
 8009694:	f04f 0000 	mov.w	r0, #0
 8009698:	f380 8811 	msr	BASEPRI, r0
 800969c:	bc09      	pop	{r0, r3}
 800969e:	6819      	ldr	r1, [r3, #0]
 80096a0:	6808      	ldr	r0, [r1, #0]
 80096a2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80096a6:	f01e 0f10 	tst.w	lr, #16
 80096aa:	bf08      	it	eq
 80096ac:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80096b0:	f380 8809 	msr	PSP, r0
 80096b4:	f3bf 8f6f 	isb	sy
 80096b8:	4770      	bx	lr
 80096ba:	bf00      	nop
 80096bc:	f3af 8000 	nop.w

080096c0 <pxCurrentTCBConst>:
 80096c0:	20013118 	.word	0x20013118

080096c4 <xPortSysTickHandler>:
{
 80096c4:	b508      	push	{r3, lr}
	__asm volatile
 80096c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80096ca:	f383 8811 	msr	BASEPRI, r3
 80096ce:	f3bf 8f6f 	isb	sy
 80096d2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 80096d6:	f001 f8cf 	bl	800a878 <xTaskIncrementTick>
 80096da:	b128      	cbz	r0, 80096e8 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 80096dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80096e0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80096e4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 80096e8:	2300      	movs	r3, #0
 80096ea:	f383 8811 	msr	BASEPRI, r3
}
 80096ee:	bd08      	pop	{r3, pc}

080096f0 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 80096f0:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 80096f4:	2300      	movs	r3, #0
 80096f6:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 80096f8:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 80096fa:	4b05      	ldr	r3, [pc, #20]	; (8009710 <vPortSetupTimerInterrupt+0x20>)
 80096fc:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009700:	681b      	ldr	r3, [r3, #0]
 8009702:	fbb3 f3f1 	udiv	r3, r3, r1
 8009706:	3b01      	subs	r3, #1
 8009708:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 800970a:	2307      	movs	r3, #7
 800970c:	6113      	str	r3, [r2, #16]
}
 800970e:	4770      	bx	lr
 8009710:	20000074 	.word	0x20000074

08009714 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009714:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009718:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 800971a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 800971e:	4a3a      	ldr	r2, [pc, #232]	; (8009808 <xPortStartScheduler+0xf4>)
 8009720:	4291      	cmp	r1, r2
 8009722:	d108      	bne.n	8009736 <xPortStartScheduler+0x22>
	__asm volatile
 8009724:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009728:	f383 8811 	msr	BASEPRI, r3
 800972c:	f3bf 8f6f 	isb	sy
 8009730:	f3bf 8f4f 	dsb	sy
 8009734:	e7fe      	b.n	8009734 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8009736:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 800973a:	4b34      	ldr	r3, [pc, #208]	; (800980c <xPortStartScheduler+0xf8>)
 800973c:	429a      	cmp	r2, r3
 800973e:	d108      	bne.n	8009752 <xPortStartScheduler+0x3e>
 8009740:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009744:	f383 8811 	msr	BASEPRI, r3
 8009748:	f3bf 8f6f 	isb	sy
 800974c:	f3bf 8f4f 	dsb	sy
 8009750:	e7fe      	b.n	8009750 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009752:	4b2f      	ldr	r3, [pc, #188]	; (8009810 <xPortStartScheduler+0xfc>)
 8009754:	781a      	ldrb	r2, [r3, #0]
 8009756:	b2d2      	uxtb	r2, r2
 8009758:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 800975a:	22ff      	movs	r2, #255	; 0xff
 800975c:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 800975e:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009760:	4a2c      	ldr	r2, [pc, #176]	; (8009814 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009762:	b2db      	uxtb	r3, r3
 8009764:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009768:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800976c:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009770:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8009772:	4a29      	ldr	r2, [pc, #164]	; (8009818 <xPortStartScheduler+0x104>)
 8009774:	2307      	movs	r3, #7
 8009776:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009778:	2100      	movs	r1, #0
 800977a:	f89d 0003 	ldrb.w	r0, [sp, #3]
 800977e:	0600      	lsls	r0, r0, #24
 8009780:	f103 34ff 	add.w	r4, r3, #4294967295
 8009784:	d40c      	bmi.n	80097a0 <xPortStartScheduler+0x8c>
 8009786:	b111      	cbz	r1, 800978e <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009788:	2b03      	cmp	r3, #3
 800978a:	6013      	str	r3, [r2, #0]
 800978c:	d011      	beq.n	80097b2 <xPortStartScheduler+0x9e>
 800978e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009792:	f383 8811 	msr	BASEPRI, r3
 8009796:	f3bf 8f6f 	isb	sy
 800979a:	f3bf 8f4f 	dsb	sy
 800979e:	e7fe      	b.n	800979e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 80097a0:	f89d 3003 	ldrb.w	r3, [sp, #3]
 80097a4:	005b      	lsls	r3, r3, #1
 80097a6:	b2db      	uxtb	r3, r3
 80097a8:	f88d 3003 	strb.w	r3, [sp, #3]
 80097ac:	2101      	movs	r1, #1
 80097ae:	4623      	mov	r3, r4
 80097b0:	e7e3      	b.n	800977a <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 80097b2:	f44f 7340 	mov.w	r3, #768	; 0x300
 80097b6:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80097b8:	9b01      	ldr	r3, [sp, #4]
 80097ba:	4a15      	ldr	r2, [pc, #84]	; (8009810 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80097bc:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 80097c0:	b2db      	uxtb	r3, r3
 80097c2:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 80097c4:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80097c8:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 80097cc:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 80097d0:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 80097d4:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 80097d8:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 80097dc:	f7ff ff88 	bl	80096f0 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 80097e0:	4b0e      	ldr	r3, [pc, #56]	; (800981c <xPortStartScheduler+0x108>)
 80097e2:	2500      	movs	r5, #0
 80097e4:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 80097e6:	f7ff feb1 	bl	800954c <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 80097ea:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 80097ee:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 80097f2:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 80097f6:	f7ff fe95 	bl	8009524 <prvPortStartFirstTask>
	vTaskSwitchContext();
 80097fa:	f001 f8f7 	bl	800a9ec <vTaskSwitchContext>
	prvTaskExitError();
 80097fe:	f7ff feaf 	bl	8009560 <prvTaskExitError>
}
 8009802:	4628      	mov	r0, r5
 8009804:	b003      	add	sp, #12
 8009806:	bd30      	pop	{r4, r5, pc}
 8009808:	410fc271 	.word	0x410fc271
 800980c:	410fc270 	.word	0x410fc270
 8009810:	e000e400 	.word	0xe000e400
 8009814:	200130d0 	.word	0x200130d0
 8009818:	200130d4 	.word	0x200130d4
 800981c:	20000080 	.word	0x20000080

08009820 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8009820:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8009824:	2b0f      	cmp	r3, #15
 8009826:	d90e      	bls.n	8009846 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8009828:	4a11      	ldr	r2, [pc, #68]	; (8009870 <vPortValidateInterruptPriority+0x50>)
 800982a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800982c:	4a11      	ldr	r2, [pc, #68]	; (8009874 <vPortValidateInterruptPriority+0x54>)
 800982e:	7812      	ldrb	r2, [r2, #0]
 8009830:	429a      	cmp	r2, r3
 8009832:	d908      	bls.n	8009846 <vPortValidateInterruptPriority+0x26>
 8009834:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009838:	f383 8811 	msr	BASEPRI, r3
 800983c:	f3bf 8f6f 	isb	sy
 8009840:	f3bf 8f4f 	dsb	sy
 8009844:	e7fe      	b.n	8009844 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8009846:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800984a:	4a0b      	ldr	r2, [pc, #44]	; (8009878 <vPortValidateInterruptPriority+0x58>)
 800984c:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 8009850:	6812      	ldr	r2, [r2, #0]
 8009852:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8009856:	4293      	cmp	r3, r2
 8009858:	d908      	bls.n	800986c <vPortValidateInterruptPriority+0x4c>
 800985a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800985e:	f383 8811 	msr	BASEPRI, r3
 8009862:	f3bf 8f6f 	isb	sy
 8009866:	f3bf 8f4f 	dsb	sy
 800986a:	e7fe      	b.n	800986a <vPortValidateInterruptPriority+0x4a>
	}
 800986c:	4770      	bx	lr
 800986e:	bf00      	nop
 8009870:	e000e3f0 	.word	0xe000e3f0
 8009874:	200130d0 	.word	0x200130d0
 8009878:	200130d4 	.word	0x200130d4

0800987c <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800987c:	b510      	push	{r4, lr}
 800987e:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009880:	f7ff feb8 	bl	80095f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8009884:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009886:	f7ff fed5 	bl	8009634 <vPortExitCritical>

	return xReturn;
}
 800988a:	fab4 f084 	clz	r0, r4
 800988e:	0940      	lsrs	r0, r0, #5
 8009890:	bd10      	pop	{r4, pc}

08009892 <prvCopyDataToQueue>:
{
 8009892:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009894:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8009896:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009898:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800989a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800989c:	b952      	cbnz	r2, 80098b4 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800989e:	6807      	ldr	r7, [r0, #0]
 80098a0:	bb47      	cbnz	r7, 80098f4 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80098a2:	6880      	ldr	r0, [r0, #8]
 80098a4:	f001 fbae 	bl	800b004 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 80098a8:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 80098aa:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 80098ac:	3601      	adds	r6, #1
 80098ae:	63a6      	str	r6, [r4, #56]	; 0x38
}
 80098b0:	4628      	mov	r0, r5
 80098b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 80098b4:	b965      	cbnz	r5, 80098d0 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 80098b6:	6840      	ldr	r0, [r0, #4]
 80098b8:	f019 fa00 	bl	8022cbc <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80098bc:	6863      	ldr	r3, [r4, #4]
 80098be:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80098c0:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80098c2:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 80098c4:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80098c6:	4293      	cmp	r3, r2
 80098c8:	d3f0      	bcc.n	80098ac <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 80098ca:	6823      	ldr	r3, [r4, #0]
 80098cc:	6063      	str	r3, [r4, #4]
 80098ce:	e7ed      	b.n	80098ac <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 80098d0:	68c0      	ldr	r0, [r0, #12]
 80098d2:	f019 f9f3 	bl	8022cbc <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80098d6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80098d8:	68e3      	ldr	r3, [r4, #12]
 80098da:	4251      	negs	r1, r2
 80098dc:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80098de:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 80098e0:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 80098e2:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 80098e4:	bf3e      	ittt	cc
 80098e6:	68a3      	ldrcc	r3, [r4, #8]
 80098e8:	185b      	addcc	r3, r3, r1
 80098ea:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 80098ec:	2d02      	cmp	r5, #2
 80098ee:	d101      	bne.n	80098f4 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 80098f0:	b116      	cbz	r6, 80098f8 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 80098f2:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 80098f4:	2500      	movs	r5, #0
 80098f6:	e7d9      	b.n	80098ac <prvCopyDataToQueue+0x1a>
 80098f8:	4635      	mov	r5, r6
 80098fa:	e7d7      	b.n	80098ac <prvCopyDataToQueue+0x1a>

080098fc <prvCopyDataFromQueue>:
{
 80098fc:	4603      	mov	r3, r0
 80098fe:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009900:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 8009902:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8009904:	b16a      	cbz	r2, 8009922 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009906:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8009908:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800990a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800990c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800990e:	bf28      	it	cs
 8009910:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8009912:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8009914:	bf28      	it	cs
 8009916:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8009918:	68d9      	ldr	r1, [r3, #12]
}
 800991a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800991e:	f019 b9cd 	b.w	8022cbc <memcpy>
}
 8009922:	f85d 4b04 	ldr.w	r4, [sp], #4
 8009926:	4770      	bx	lr

08009928 <prvUnlockQueue>:
{
 8009928:	b570      	push	{r4, r5, r6, lr}
 800992a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800992c:	f7ff fe62 	bl	80095f4 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 8009930:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009934:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8009938:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800993a:	2d00      	cmp	r5, #0
 800993c:	dc14      	bgt.n	8009968 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800993e:	23ff      	movs	r3, #255	; 0xff
 8009940:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8009944:	f7ff fe76 	bl	8009634 <vPortExitCritical>
	taskENTER_CRITICAL();
 8009948:	f7ff fe54 	bl	80095f4 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800994c:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009950:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8009954:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8009956:	2d00      	cmp	r5, #0
 8009958:	dc12      	bgt.n	8009980 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800995a:	23ff      	movs	r3, #255	; 0xff
 800995c:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 8009960:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8009964:	f7ff be66 	b.w	8009634 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009968:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800996a:	2b00      	cmp	r3, #0
 800996c:	d0e7      	beq.n	800993e <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800996e:	4630      	mov	r0, r6
 8009970:	f001 f904 	bl	800ab7c <xTaskRemoveFromEventList>
 8009974:	b108      	cbz	r0, 800997a <prvUnlockQueue+0x52>
						vTaskMissedYield();
 8009976:	f001 f9dd 	bl	800ad34 <vTaskMissedYield>
			--cTxLock;
 800997a:	3d01      	subs	r5, #1
 800997c:	b26d      	sxtb	r5, r5
 800997e:	e7dc      	b.n	800993a <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009980:	6923      	ldr	r3, [r4, #16]
 8009982:	2b00      	cmp	r3, #0
 8009984:	d0e9      	beq.n	800995a <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009986:	4630      	mov	r0, r6
 8009988:	f001 f8f8 	bl	800ab7c <xTaskRemoveFromEventList>
 800998c:	b108      	cbz	r0, 8009992 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800998e:	f001 f9d1 	bl	800ad34 <vTaskMissedYield>
				--cRxLock;
 8009992:	3d01      	subs	r5, #1
 8009994:	b26d      	sxtb	r5, r5
 8009996:	e7de      	b.n	8009956 <prvUnlockQueue+0x2e>

08009998 <xQueueGenericReset>:
{
 8009998:	b538      	push	{r3, r4, r5, lr}
 800999a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800999c:	4604      	mov	r4, r0
 800999e:	b940      	cbnz	r0, 80099b2 <xQueueGenericReset+0x1a>
 80099a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80099a4:	f383 8811 	msr	BASEPRI, r3
 80099a8:	f3bf 8f6f 	isb	sy
 80099ac:	f3bf 8f4f 	dsb	sy
 80099b0:	e7fe      	b.n	80099b0 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80099b2:	f7ff fe1f 	bl	80095f4 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80099b6:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80099ba:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80099bc:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80099be:	434b      	muls	r3, r1
 80099c0:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80099c2:	1a5b      	subs	r3, r3, r1
 80099c4:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80099c6:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80099c8:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80099ca:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80099cc:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80099ce:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80099d0:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 80099d4:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 80099d8:	b9a5      	cbnz	r5, 8009a04 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80099da:	6923      	ldr	r3, [r4, #16]
 80099dc:	b173      	cbz	r3, 80099fc <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80099de:	f104 0010 	add.w	r0, r4, #16
 80099e2:	f001 f8cb 	bl	800ab7c <xTaskRemoveFromEventList>
 80099e6:	b148      	cbz	r0, 80099fc <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 80099e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80099ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80099f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 80099f4:	f3bf 8f4f 	dsb	sy
 80099f8:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 80099fc:	f7ff fe1a 	bl	8009634 <vPortExitCritical>
}
 8009a00:	2001      	movs	r0, #1
 8009a02:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 8009a04:	f104 0010 	add.w	r0, r4, #16
 8009a08:	f7ff fd4a 	bl	80094a0 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8009a0c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009a10:	f7ff fd46 	bl	80094a0 <vListInitialise>
 8009a14:	e7f2      	b.n	80099fc <xQueueGenericReset+0x64>

08009a16 <xQueueGenericCreateStatic>:
	{
 8009a16:	b513      	push	{r0, r1, r4, lr}
 8009a18:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009a1a:	b940      	cbnz	r0, 8009a2e <xQueueGenericCreateStatic+0x18>
 8009a1c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a20:	f383 8811 	msr	BASEPRI, r3
 8009a24:	f3bf 8f6f 	isb	sy
 8009a28:	f3bf 8f4f 	dsb	sy
 8009a2c:	e7fe      	b.n	8009a2c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 8009a2e:	b943      	cbnz	r3, 8009a42 <xQueueGenericCreateStatic+0x2c>
 8009a30:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a34:	f383 8811 	msr	BASEPRI, r3
 8009a38:	f3bf 8f6f 	isb	sy
 8009a3c:	f3bf 8f4f 	dsb	sy
 8009a40:	e7fe      	b.n	8009a40 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8009a42:	b14a      	cbz	r2, 8009a58 <xQueueGenericCreateStatic+0x42>
 8009a44:	b991      	cbnz	r1, 8009a6c <xQueueGenericCreateStatic+0x56>
 8009a46:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a4a:	f383 8811 	msr	BASEPRI, r3
 8009a4e:	f3bf 8f6f 	isb	sy
 8009a52:	f3bf 8f4f 	dsb	sy
 8009a56:	e7fe      	b.n	8009a56 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8009a58:	b141      	cbz	r1, 8009a6c <xQueueGenericCreateStatic+0x56>
 8009a5a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a5e:	f383 8811 	msr	BASEPRI, r3
 8009a62:	f3bf 8f6f 	isb	sy
 8009a66:	f3bf 8f4f 	dsb	sy
 8009a6a:	e7fe      	b.n	8009a6a <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 8009a6c:	2350      	movs	r3, #80	; 0x50
 8009a6e:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 8009a70:	9b01      	ldr	r3, [sp, #4]
 8009a72:	2b50      	cmp	r3, #80	; 0x50
 8009a74:	d008      	beq.n	8009a88 <xQueueGenericCreateStatic+0x72>
 8009a76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009a7a:	f383 8811 	msr	BASEPRI, r3
 8009a7e:	f3bf 8f6f 	isb	sy
 8009a82:	f3bf 8f4f 	dsb	sy
 8009a86:	e7fe      	b.n	8009a86 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009a88:	2900      	cmp	r1, #0
 8009a8a:	bf08      	it	eq
 8009a8c:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 8009a8e:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009a90:	6022      	str	r2, [r4, #0]
 8009a92:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 8009a94:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 8009a98:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009a9c:	4619      	mov	r1, r3
 8009a9e:	4620      	mov	r0, r4
 8009aa0:	f7ff ff7a 	bl	8009998 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009aa4:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8009aa8:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 8009aac:	4620      	mov	r0, r4
 8009aae:	b002      	add	sp, #8
 8009ab0:	bd10      	pop	{r4, pc}

08009ab2 <xQueueGenericCreate>:
	{
 8009ab2:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ab4:	460d      	mov	r5, r1
 8009ab6:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8009ab8:	4606      	mov	r6, r0
 8009aba:	b940      	cbnz	r0, 8009ace <xQueueGenericCreate+0x1c>
 8009abc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ac0:	f383 8811 	msr	BASEPRI, r3
 8009ac4:	f3bf 8f6f 	isb	sy
 8009ac8:	f3bf 8f4f 	dsb	sy
 8009acc:	e7fe      	b.n	8009acc <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8009ace:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 8009ad0:	3050      	adds	r0, #80	; 0x50
 8009ad2:	f7ff fc0f 	bl	80092f4 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8009ad6:	4604      	mov	r4, r0
 8009ad8:	b170      	cbz	r0, 8009af8 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8009ada:	2300      	movs	r3, #0
 8009adc:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 8009ae0:	b165      	cbz	r5, 8009afc <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8009ae2:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8009ae6:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8009aea:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 8009aec:	2101      	movs	r1, #1
 8009aee:	4620      	mov	r0, r4
 8009af0:	f7ff ff52 	bl	8009998 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8009af4:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8009af8:	4620      	mov	r0, r4
 8009afa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009afc:	4603      	mov	r3, r0
 8009afe:	e7f2      	b.n	8009ae6 <xQueueGenericCreate+0x34>

08009b00 <xQueueCreateCountingSemaphoreStatic>:
	{
 8009b00:	b513      	push	{r0, r1, r4, lr}
 8009b02:	4613      	mov	r3, r2
 8009b04:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009b06:	b940      	cbnz	r0, 8009b1a <xQueueCreateCountingSemaphoreStatic+0x1a>
 8009b08:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b0c:	f383 8811 	msr	BASEPRI, r3
 8009b10:	f3bf 8f6f 	isb	sy
 8009b14:	f3bf 8f4f 	dsb	sy
 8009b18:	e7fe      	b.n	8009b18 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009b1a:	4288      	cmp	r0, r1
 8009b1c:	d208      	bcs.n	8009b30 <xQueueCreateCountingSemaphoreStatic+0x30>
 8009b1e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b22:	f383 8811 	msr	BASEPRI, r3
 8009b26:	f3bf 8f6f 	isb	sy
 8009b2a:	f3bf 8f4f 	dsb	sy
 8009b2e:	e7fe      	b.n	8009b2e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009b30:	2202      	movs	r2, #2
 8009b32:	9200      	str	r2, [sp, #0]
 8009b34:	2200      	movs	r2, #0
 8009b36:	4611      	mov	r1, r2
 8009b38:	f7ff ff6d 	bl	8009a16 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 8009b3c:	b100      	cbz	r0, 8009b40 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009b3e:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009b40:	b002      	add	sp, #8
 8009b42:	bd10      	pop	{r4, pc}

08009b44 <xQueueCreateCountingSemaphore>:
	{
 8009b44:	b510      	push	{r4, lr}
 8009b46:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8009b48:	b940      	cbnz	r0, 8009b5c <xQueueCreateCountingSemaphore+0x18>
 8009b4a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b4e:	f383 8811 	msr	BASEPRI, r3
 8009b52:	f3bf 8f6f 	isb	sy
 8009b56:	f3bf 8f4f 	dsb	sy
 8009b5a:	e7fe      	b.n	8009b5a <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 8009b5c:	4288      	cmp	r0, r1
 8009b5e:	d208      	bcs.n	8009b72 <xQueueCreateCountingSemaphore+0x2e>
 8009b60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b64:	f383 8811 	msr	BASEPRI, r3
 8009b68:	f3bf 8f6f 	isb	sy
 8009b6c:	f3bf 8f4f 	dsb	sy
 8009b70:	e7fe      	b.n	8009b70 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 8009b72:	2202      	movs	r2, #2
 8009b74:	2100      	movs	r1, #0
 8009b76:	f7ff ff9c 	bl	8009ab2 <xQueueGenericCreate>
		if( xHandle != NULL )
 8009b7a:	b100      	cbz	r0, 8009b7e <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 8009b7c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 8009b7e:	bd10      	pop	{r4, pc}

08009b80 <xQueueGenericSend>:
{
 8009b80:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009b84:	b085      	sub	sp, #20
 8009b86:	4688      	mov	r8, r1
 8009b88:	9201      	str	r2, [sp, #4]
 8009b8a:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009b8c:	4604      	mov	r4, r0
 8009b8e:	b940      	cbnz	r0, 8009ba2 <xQueueGenericSend+0x22>
 8009b90:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009b94:	f383 8811 	msr	BASEPRI, r3
 8009b98:	f3bf 8f6f 	isb	sy
 8009b9c:	f3bf 8f4f 	dsb	sy
 8009ba0:	e7fe      	b.n	8009ba0 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009ba2:	b951      	cbnz	r1, 8009bba <xQueueGenericSend+0x3a>
 8009ba4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009ba6:	b143      	cbz	r3, 8009bba <xQueueGenericSend+0x3a>
 8009ba8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bac:	f383 8811 	msr	BASEPRI, r3
 8009bb0:	f3bf 8f6f 	isb	sy
 8009bb4:	f3bf 8f4f 	dsb	sy
 8009bb8:	e7fe      	b.n	8009bb8 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009bba:	2f02      	cmp	r7, #2
 8009bbc:	d10b      	bne.n	8009bd6 <xQueueGenericSend+0x56>
 8009bbe:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009bc0:	2b01      	cmp	r3, #1
 8009bc2:	d008      	beq.n	8009bd6 <xQueueGenericSend+0x56>
 8009bc4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009bc8:	f383 8811 	msr	BASEPRI, r3
 8009bcc:	f3bf 8f6f 	isb	sy
 8009bd0:	f3bf 8f4f 	dsb	sy
 8009bd4:	e7fe      	b.n	8009bd4 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009bd6:	f001 f98f 	bl	800aef8 <xTaskGetSchedulerState>
 8009bda:	4606      	mov	r6, r0
 8009bdc:	b950      	cbnz	r0, 8009bf4 <xQueueGenericSend+0x74>
 8009bde:	9b01      	ldr	r3, [sp, #4]
 8009be0:	b14b      	cbz	r3, 8009bf6 <xQueueGenericSend+0x76>
 8009be2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009be6:	f383 8811 	msr	BASEPRI, r3
 8009bea:	f3bf 8f6f 	isb	sy
 8009bee:	f3bf 8f4f 	dsb	sy
 8009bf2:	e7fe      	b.n	8009bf2 <xQueueGenericSend+0x72>
 8009bf4:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009bf6:	f04f 0900 	mov.w	r9, #0
 8009bfa:	e037      	b.n	8009c6c <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009bfc:	9d01      	ldr	r5, [sp, #4]
 8009bfe:	b91d      	cbnz	r5, 8009c08 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 8009c00:	f7ff fd18 	bl	8009634 <vPortExitCritical>
			return errQUEUE_FULL;
 8009c04:	2000      	movs	r0, #0
 8009c06:	e052      	b.n	8009cae <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 8009c08:	b916      	cbnz	r6, 8009c10 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009c0a:	a802      	add	r0, sp, #8
 8009c0c:	f001 f81a 	bl	800ac44 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009c10:	f7ff fd10 	bl	8009634 <vPortExitCritical>
		vTaskSuspendAll();
 8009c14:	f000 fd74 	bl	800a700 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009c18:	f7ff fcec 	bl	80095f4 <vPortEnterCritical>
 8009c1c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009c20:	2bff      	cmp	r3, #255	; 0xff
 8009c22:	bf08      	it	eq
 8009c24:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 8009c28:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009c2c:	2bff      	cmp	r3, #255	; 0xff
 8009c2e:	bf08      	it	eq
 8009c30:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8009c34:	f7ff fcfe 	bl	8009634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009c38:	a901      	add	r1, sp, #4
 8009c3a:	a802      	add	r0, sp, #8
 8009c3c:	f001 f818 	bl	800ac70 <xTaskCheckForTimeOut>
 8009c40:	2800      	cmp	r0, #0
 8009c42:	d14a      	bne.n	8009cda <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8009c44:	f7ff fcd6 	bl	80095f4 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 8009c48:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009c4a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009c4c:	429a      	cmp	r2, r3
 8009c4e:	d131      	bne.n	8009cb4 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8009c50:	f7ff fcf0 	bl	8009634 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8009c54:	9901      	ldr	r1, [sp, #4]
 8009c56:	f104 0010 	add.w	r0, r4, #16
 8009c5a:	f000 ff3f 	bl	800aadc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009c5e:	4620      	mov	r0, r4
 8009c60:	f7ff fe62 	bl	8009928 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009c64:	f000 fd5a 	bl	800a71c <xTaskResumeAll>
 8009c68:	b360      	cbz	r0, 8009cc4 <xQueueGenericSend+0x144>
 8009c6a:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009c6c:	f7ff fcc2 	bl	80095f4 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009c70:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009c72:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009c74:	429a      	cmp	r2, r3
 8009c76:	d301      	bcc.n	8009c7c <xQueueGenericSend+0xfc>
 8009c78:	2f02      	cmp	r7, #2
 8009c7a:	d1bf      	bne.n	8009bfc <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009c7c:	463a      	mov	r2, r7
 8009c7e:	4641      	mov	r1, r8
 8009c80:	4620      	mov	r0, r4
 8009c82:	f7ff fe06 	bl	8009892 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009c86:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009c88:	b11b      	cbz	r3, 8009c92 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009c8a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009c8e:	f000 ff75 	bl	800ab7c <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 8009c92:	b148      	cbz	r0, 8009ca8 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 8009c94:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009c98:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009c9c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ca0:	f3bf 8f4f 	dsb	sy
 8009ca4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009ca8:	f7ff fcc4 	bl	8009634 <vPortExitCritical>
				return pdPASS;
 8009cac:	2001      	movs	r0, #1
}
 8009cae:	b005      	add	sp, #20
 8009cb0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 8009cb4:	f7ff fcbe 	bl	8009634 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 8009cb8:	4620      	mov	r0, r4
 8009cba:	f7ff fe35 	bl	8009928 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009cbe:	f000 fd2d 	bl	800a71c <xTaskResumeAll>
 8009cc2:	e7d2      	b.n	8009c6a <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 8009cc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009cc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ccc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009cd0:	f3bf 8f4f 	dsb	sy
 8009cd4:	f3bf 8f6f 	isb	sy
 8009cd8:	e7c7      	b.n	8009c6a <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 8009cda:	4620      	mov	r0, r4
 8009cdc:	f7ff fe24 	bl	8009928 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009ce0:	f000 fd1c 	bl	800a71c <xTaskResumeAll>
 8009ce4:	e78e      	b.n	8009c04 <xQueueGenericSend+0x84>

08009ce6 <xQueueGenericSendFromISR>:
{
 8009ce6:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009cea:	4689      	mov	r9, r1
 8009cec:	4690      	mov	r8, r2
 8009cee:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 8009cf0:	4604      	mov	r4, r0
 8009cf2:	b940      	cbnz	r0, 8009d06 <xQueueGenericSendFromISR+0x20>
 8009cf4:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cf8:	f383 8811 	msr	BASEPRI, r3
 8009cfc:	f3bf 8f6f 	isb	sy
 8009d00:	f3bf 8f4f 	dsb	sy
 8009d04:	e7fe      	b.n	8009d04 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009d06:	b951      	cbnz	r1, 8009d1e <xQueueGenericSendFromISR+0x38>
 8009d08:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009d0a:	b143      	cbz	r3, 8009d1e <xQueueGenericSendFromISR+0x38>
 8009d0c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d10:	f383 8811 	msr	BASEPRI, r3
 8009d14:	f3bf 8f6f 	isb	sy
 8009d18:	f3bf 8f4f 	dsb	sy
 8009d1c:	e7fe      	b.n	8009d1c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 8009d1e:	2f02      	cmp	r7, #2
 8009d20:	d10b      	bne.n	8009d3a <xQueueGenericSendFromISR+0x54>
 8009d22:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009d24:	2b01      	cmp	r3, #1
 8009d26:	d008      	beq.n	8009d3a <xQueueGenericSendFromISR+0x54>
 8009d28:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d2c:	f383 8811 	msr	BASEPRI, r3
 8009d30:	f3bf 8f6f 	isb	sy
 8009d34:	f3bf 8f4f 	dsb	sy
 8009d38:	e7fe      	b.n	8009d38 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009d3a:	f7ff fd71 	bl	8009820 <vPortValidateInterruptPriority>
	__asm volatile
 8009d3e:	f3ef 8611 	mrs	r6, BASEPRI
 8009d42:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009d46:	f383 8811 	msr	BASEPRI, r3
 8009d4a:	f3bf 8f6f 	isb	sy
 8009d4e:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8009d52:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8009d54:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009d56:	429a      	cmp	r2, r3
 8009d58:	d301      	bcc.n	8009d5e <xQueueGenericSendFromISR+0x78>
 8009d5a:	2f02      	cmp	r7, #2
 8009d5c:	d123      	bne.n	8009da6 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009d5e:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009d62:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8009d64:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8009d66:	463a      	mov	r2, r7
 8009d68:	4649      	mov	r1, r9
 8009d6a:	4620      	mov	r0, r4
 8009d6c:	f7ff fd91 	bl	8009892 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 8009d70:	1c6b      	adds	r3, r5, #1
 8009d72:	d113      	bne.n	8009d9c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009d74:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009d76:	b90b      	cbnz	r3, 8009d7c <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 8009d78:	2001      	movs	r0, #1
 8009d7a:	e00b      	b.n	8009d94 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009d7c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009d80:	f000 fefc 	bl	800ab7c <xTaskRemoveFromEventList>
 8009d84:	2800      	cmp	r0, #0
 8009d86:	d0f7      	beq.n	8009d78 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 8009d88:	f1b8 0f00 	cmp.w	r8, #0
 8009d8c:	d0f4      	beq.n	8009d78 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009d8e:	2001      	movs	r0, #1
 8009d90:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 8009d94:	f386 8811 	msr	BASEPRI, r6
}
 8009d98:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009d9c:	3501      	adds	r5, #1
 8009d9e:	b26d      	sxtb	r5, r5
 8009da0:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 8009da4:	e7e8      	b.n	8009d78 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 8009da6:	2000      	movs	r0, #0
 8009da8:	e7f4      	b.n	8009d94 <xQueueGenericSendFromISR+0xae>

08009daa <xQueueGiveFromISR>:
{
 8009daa:	b570      	push	{r4, r5, r6, lr}
 8009dac:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 8009dae:	4604      	mov	r4, r0
 8009db0:	b940      	cbnz	r0, 8009dc4 <xQueueGiveFromISR+0x1a>
	__asm volatile
 8009db2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009db6:	f383 8811 	msr	BASEPRI, r3
 8009dba:	f3bf 8f6f 	isb	sy
 8009dbe:	f3bf 8f4f 	dsb	sy
 8009dc2:	e7fe      	b.n	8009dc2 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009dc4:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009dc6:	b143      	cbz	r3, 8009dda <xQueueGiveFromISR+0x30>
 8009dc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dcc:	f383 8811 	msr	BASEPRI, r3
 8009dd0:	f3bf 8f6f 	isb	sy
 8009dd4:	f3bf 8f4f 	dsb	sy
 8009dd8:	e7fe      	b.n	8009dd8 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8009dda:	6803      	ldr	r3, [r0, #0]
 8009ddc:	b953      	cbnz	r3, 8009df4 <xQueueGiveFromISR+0x4a>
 8009dde:	6883      	ldr	r3, [r0, #8]
 8009de0:	b143      	cbz	r3, 8009df4 <xQueueGiveFromISR+0x4a>
 8009de2:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009de6:	f383 8811 	msr	BASEPRI, r3
 8009dea:	f3bf 8f6f 	isb	sy
 8009dee:	f3bf 8f4f 	dsb	sy
 8009df2:	e7fe      	b.n	8009df2 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8009df4:	f7ff fd14 	bl	8009820 <vPortValidateInterruptPriority>
	__asm volatile
 8009df8:	f3ef 8611 	mrs	r6, BASEPRI
 8009dfc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e00:	f383 8811 	msr	BASEPRI, r3
 8009e04:	f3bf 8f6f 	isb	sy
 8009e08:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009e0c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 8009e0e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009e10:	4293      	cmp	r3, r2
 8009e12:	d91c      	bls.n	8009e4e <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8009e14:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009e18:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8009e1a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 8009e1c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8009e1e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 8009e20:	d110      	bne.n	8009e44 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8009e22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009e24:	b90b      	cbnz	r3, 8009e2a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8009e26:	2001      	movs	r0, #1
 8009e28:	e009      	b.n	8009e3e <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8009e2a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009e2e:	f000 fea5 	bl	800ab7c <xTaskRemoveFromEventList>
 8009e32:	2800      	cmp	r0, #0
 8009e34:	d0f7      	beq.n	8009e26 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8009e36:	2d00      	cmp	r5, #0
 8009e38:	d0f5      	beq.n	8009e26 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8009e3a:	2001      	movs	r0, #1
 8009e3c:	6028      	str	r0, [r5, #0]
	__asm volatile
 8009e3e:	f386 8811 	msr	BASEPRI, r6
}
 8009e42:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8009e44:	3301      	adds	r3, #1
 8009e46:	b25b      	sxtb	r3, r3
 8009e48:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8009e4c:	e7eb      	b.n	8009e26 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 8009e4e:	2000      	movs	r0, #0
 8009e50:	e7f5      	b.n	8009e3e <xQueueGiveFromISR+0x94>

08009e52 <xQueueReceive>:
{
 8009e52:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8009e56:	460f      	mov	r7, r1
 8009e58:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009e5a:	4604      	mov	r4, r0
 8009e5c:	b940      	cbnz	r0, 8009e70 <xQueueReceive+0x1e>
	__asm volatile
 8009e5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e62:	f383 8811 	msr	BASEPRI, r3
 8009e66:	f3bf 8f6f 	isb	sy
 8009e6a:	f3bf 8f4f 	dsb	sy
 8009e6e:	e7fe      	b.n	8009e6e <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8009e70:	b951      	cbnz	r1, 8009e88 <xQueueReceive+0x36>
 8009e72:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8009e74:	b143      	cbz	r3, 8009e88 <xQueueReceive+0x36>
 8009e76:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e7a:	f383 8811 	msr	BASEPRI, r3
 8009e7e:	f3bf 8f6f 	isb	sy
 8009e82:	f3bf 8f4f 	dsb	sy
 8009e86:	e7fe      	b.n	8009e86 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009e88:	f001 f836 	bl	800aef8 <xTaskGetSchedulerState>
 8009e8c:	4606      	mov	r6, r0
 8009e8e:	b950      	cbnz	r0, 8009ea6 <xQueueReceive+0x54>
 8009e90:	9b01      	ldr	r3, [sp, #4]
 8009e92:	b14b      	cbz	r3, 8009ea8 <xQueueReceive+0x56>
 8009e94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e98:	f383 8811 	msr	BASEPRI, r3
 8009e9c:	f3bf 8f6f 	isb	sy
 8009ea0:	f3bf 8f4f 	dsb	sy
 8009ea4:	e7fe      	b.n	8009ea4 <xQueueReceive+0x52>
 8009ea6:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 8009ea8:	f04f 0800 	mov.w	r8, #0
 8009eac:	e03d      	b.n	8009f2a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009eae:	9d01      	ldr	r5, [sp, #4]
 8009eb0:	b91d      	cbnz	r5, 8009eba <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 8009eb2:	f7ff fbbf 	bl	8009634 <vPortExitCritical>
				return errQUEUE_EMPTY;
 8009eb6:	2000      	movs	r0, #0
 8009eb8:	e056      	b.n	8009f68 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 8009eba:	b916      	cbnz	r6, 8009ec2 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 8009ebc:	a802      	add	r0, sp, #8
 8009ebe:	f000 fec1 	bl	800ac44 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8009ec2:	f7ff fbb7 	bl	8009634 <vPortExitCritical>
		vTaskSuspendAll();
 8009ec6:	f000 fc1b 	bl	800a700 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 8009eca:	f7ff fb93 	bl	80095f4 <vPortEnterCritical>
 8009ece:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8009ed2:	2bff      	cmp	r3, #255	; 0xff
 8009ed4:	bf08      	it	eq
 8009ed6:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 8009eda:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8009ede:	2bff      	cmp	r3, #255	; 0xff
 8009ee0:	bf08      	it	eq
 8009ee2:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 8009ee6:	f7ff fba5 	bl	8009634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 8009eea:	a901      	add	r1, sp, #4
 8009eec:	a802      	add	r0, sp, #8
 8009eee:	f000 febf 	bl	800ac70 <xTaskCheckForTimeOut>
 8009ef2:	2800      	cmp	r0, #0
 8009ef4:	d141      	bne.n	8009f7a <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009ef6:	4620      	mov	r0, r4
 8009ef8:	f7ff fcc0 	bl	800987c <prvIsQueueEmpty>
 8009efc:	b3b8      	cbz	r0, 8009f6e <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8009efe:	9901      	ldr	r1, [sp, #4]
 8009f00:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8009f04:	f000 fdea 	bl	800aadc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8009f08:	4620      	mov	r0, r4
 8009f0a:	f7ff fd0d 	bl	8009928 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8009f0e:	f000 fc05 	bl	800a71c <xTaskResumeAll>
 8009f12:	b948      	cbnz	r0, 8009f28 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 8009f14:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f18:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f1c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f20:	f3bf 8f4f 	dsb	sy
 8009f24:	f3bf 8f6f 	isb	sy
 8009f28:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 8009f2a:	f7ff fb63 	bl	80095f4 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8009f2e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8009f30:	2d00      	cmp	r5, #0
 8009f32:	d0bc      	beq.n	8009eae <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009f34:	4639      	mov	r1, r7
 8009f36:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009f38:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8009f3a:	f7ff fcdf 	bl	80098fc <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8009f3e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8009f40:	6923      	ldr	r3, [r4, #16]
 8009f42:	b173      	cbz	r3, 8009f62 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8009f44:	f104 0010 	add.w	r0, r4, #16
 8009f48:	f000 fe18 	bl	800ab7c <xTaskRemoveFromEventList>
 8009f4c:	b148      	cbz	r0, 8009f62 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 8009f4e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f52:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f56:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009f5a:	f3bf 8f4f 	dsb	sy
 8009f5e:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 8009f62:	f7ff fb67 	bl	8009634 <vPortExitCritical>
				return pdPASS;
 8009f66:	2001      	movs	r0, #1
}
 8009f68:	b004      	add	sp, #16
 8009f6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8009f6e:	4620      	mov	r0, r4
 8009f70:	f7ff fcda 	bl	8009928 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8009f74:	f000 fbd2 	bl	800a71c <xTaskResumeAll>
 8009f78:	e7d6      	b.n	8009f28 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 8009f7a:	4620      	mov	r0, r4
 8009f7c:	f7ff fcd4 	bl	8009928 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8009f80:	f000 fbcc 	bl	800a71c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8009f84:	4620      	mov	r0, r4
 8009f86:	f7ff fc79 	bl	800987c <prvIsQueueEmpty>
 8009f8a:	2800      	cmp	r0, #0
 8009f8c:	d0cc      	beq.n	8009f28 <xQueueReceive+0xd6>
 8009f8e:	e792      	b.n	8009eb6 <xQueueReceive+0x64>

08009f90 <xQueueSemaphoreTake>:
{
 8009f90:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f92:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 8009f94:	4604      	mov	r4, r0
{
 8009f96:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 8009f98:	b940      	cbnz	r0, 8009fac <xQueueSemaphoreTake+0x1c>
 8009f9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f9e:	f383 8811 	msr	BASEPRI, r3
 8009fa2:	f3bf 8f6f 	isb	sy
 8009fa6:	f3bf 8f4f 	dsb	sy
 8009faa:	e7fe      	b.n	8009faa <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 8009fac:	6c05      	ldr	r5, [r0, #64]	; 0x40
 8009fae:	b145      	cbz	r5, 8009fc2 <xQueueSemaphoreTake+0x32>
 8009fb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb4:	f383 8811 	msr	BASEPRI, r3
 8009fb8:	f3bf 8f6f 	isb	sy
 8009fbc:	f3bf 8f4f 	dsb	sy
 8009fc0:	e7fe      	b.n	8009fc0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8009fc2:	f000 ff99 	bl	800aef8 <xTaskGetSchedulerState>
 8009fc6:	4606      	mov	r6, r0
 8009fc8:	b950      	cbnz	r0, 8009fe0 <xQueueSemaphoreTake+0x50>
 8009fca:	9b01      	ldr	r3, [sp, #4]
 8009fcc:	b15b      	cbz	r3, 8009fe6 <xQueueSemaphoreTake+0x56>
 8009fce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fd2:	f383 8811 	msr	BASEPRI, r3
 8009fd6:	f3bf 8f6f 	isb	sy
 8009fda:	f3bf 8f4f 	dsb	sy
 8009fde:	e7fe      	b.n	8009fde <xQueueSemaphoreTake+0x4e>
 8009fe0:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 8009fe2:	2700      	movs	r7, #0
 8009fe4:	e053      	b.n	800a08e <xQueueSemaphoreTake+0xfe>
 8009fe6:	4605      	mov	r5, r0
 8009fe8:	e7fb      	b.n	8009fe2 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 8009fea:	9b01      	ldr	r3, [sp, #4]
 8009fec:	b963      	cbnz	r3, 800a008 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8009fee:	b145      	cbz	r5, 800a002 <xQueueSemaphoreTake+0x72>
 8009ff0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ff4:	f383 8811 	msr	BASEPRI, r3
 8009ff8:	f3bf 8f6f 	isb	sy
 8009ffc:	f3bf 8f4f 	dsb	sy
 800a000:	e7fe      	b.n	800a000 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800a002:	f7ff fb17 	bl	8009634 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800a006:	e062      	b.n	800a0ce <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800a008:	b916      	cbnz	r6, 800a010 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a00a:	a802      	add	r0, sp, #8
 800a00c:	f000 fe1a 	bl	800ac44 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a010:	f7ff fb10 	bl	8009634 <vPortExitCritical>
		vTaskSuspendAll();
 800a014:	f000 fb74 	bl	800a700 <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a018:	f7ff faec 	bl	80095f4 <vPortEnterCritical>
 800a01c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a020:	2bff      	cmp	r3, #255	; 0xff
 800a022:	bf08      	it	eq
 800a024:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800a028:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a02c:	2bff      	cmp	r3, #255	; 0xff
 800a02e:	bf08      	it	eq
 800a030:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800a034:	f7ff fafe 	bl	8009634 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a038:	a901      	add	r1, sp, #4
 800a03a:	a802      	add	r0, sp, #8
 800a03c:	f000 fe18 	bl	800ac70 <xTaskCheckForTimeOut>
 800a040:	2800      	cmp	r0, #0
 800a042:	d14d      	bne.n	800a0e0 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a044:	4620      	mov	r0, r4
 800a046:	f7ff fc19 	bl	800987c <prvIsQueueEmpty>
 800a04a:	2800      	cmp	r0, #0
 800a04c:	d042      	beq.n	800a0d4 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a04e:	6823      	ldr	r3, [r4, #0]
 800a050:	b93b      	cbnz	r3, 800a062 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800a052:	f7ff facf 	bl	80095f4 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a056:	68a0      	ldr	r0, [r4, #8]
 800a058:	f000 ff6c 	bl	800af34 <xTaskPriorityInherit>
 800a05c:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800a05e:	f7ff fae9 	bl	8009634 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a062:	9901      	ldr	r1, [sp, #4]
 800a064:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a068:	f000 fd38 	bl	800aadc <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a06c:	4620      	mov	r0, r4
 800a06e:	f7ff fc5b 	bl	8009928 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a072:	f000 fb53 	bl	800a71c <xTaskResumeAll>
 800a076:	b948      	cbnz	r0, 800a08c <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800a078:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a07c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a080:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a084:	f3bf 8f4f 	dsb	sy
 800a088:	f3bf 8f6f 	isb	sy
 800a08c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a08e:	f7ff fab1 	bl	80095f4 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800a092:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800a094:	2b00      	cmp	r3, #0
 800a096:	d0a8      	beq.n	8009fea <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800a098:	3b01      	subs	r3, #1
 800a09a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a09c:	6823      	ldr	r3, [r4, #0]
 800a09e:	b913      	cbnz	r3, 800a0a6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800a0a0:	f001 f8a0 	bl	800b1e4 <pvTaskIncrementMutexHeldCount>
 800a0a4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a0a6:	6923      	ldr	r3, [r4, #16]
 800a0a8:	b173      	cbz	r3, 800a0c8 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a0aa:	f104 0010 	add.w	r0, r4, #16
 800a0ae:	f000 fd65 	bl	800ab7c <xTaskRemoveFromEventList>
 800a0b2:	b148      	cbz	r0, 800a0c8 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800a0b4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a0b8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a0bc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a0c0:	f3bf 8f4f 	dsb	sy
 800a0c4:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a0c8:	f7ff fab4 	bl	8009634 <vPortExitCritical>
				return pdPASS;
 800a0cc:	2501      	movs	r5, #1
}
 800a0ce:	4628      	mov	r0, r5
 800a0d0:	b005      	add	sp, #20
 800a0d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800a0d4:	4620      	mov	r0, r4
 800a0d6:	f7ff fc27 	bl	8009928 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a0da:	f000 fb1f 	bl	800a71c <xTaskResumeAll>
 800a0de:	e7d5      	b.n	800a08c <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800a0e0:	4620      	mov	r0, r4
 800a0e2:	f7ff fc21 	bl	8009928 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a0e6:	f000 fb19 	bl	800a71c <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a0ea:	4620      	mov	r0, r4
 800a0ec:	f7ff fbc6 	bl	800987c <prvIsQueueEmpty>
 800a0f0:	2800      	cmp	r0, #0
 800a0f2:	d0cb      	beq.n	800a08c <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800a0f4:	2d00      	cmp	r5, #0
 800a0f6:	d0ea      	beq.n	800a0ce <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800a0f8:	f7ff fa7c 	bl	80095f4 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800a0fc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a0fe:	b119      	cbz	r1, 800a108 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800a100:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a102:	6819      	ldr	r1, [r3, #0]
 800a104:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a108:	68a0      	ldr	r0, [r4, #8]
 800a10a:	f000 ffe9 	bl	800b0e0 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800a10e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800a110:	f7ff fa90 	bl	8009634 <vPortExitCritical>
 800a114:	e7db      	b.n	800a0ce <xQueueSemaphoreTake+0x13e>

0800a116 <xQueueReceiveFromISR>:
{
 800a116:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a11a:	4689      	mov	r9, r1
 800a11c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800a11e:	4605      	mov	r5, r0
 800a120:	b940      	cbnz	r0, 800a134 <xQueueReceiveFromISR+0x1e>
 800a122:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a126:	f383 8811 	msr	BASEPRI, r3
 800a12a:	f3bf 8f6f 	isb	sy
 800a12e:	f3bf 8f4f 	dsb	sy
 800a132:	e7fe      	b.n	800a132 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a134:	b951      	cbnz	r1, 800a14c <xQueueReceiveFromISR+0x36>
 800a136:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a138:	b143      	cbz	r3, 800a14c <xQueueReceiveFromISR+0x36>
 800a13a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a13e:	f383 8811 	msr	BASEPRI, r3
 800a142:	f3bf 8f6f 	isb	sy
 800a146:	f3bf 8f4f 	dsb	sy
 800a14a:	e7fe      	b.n	800a14a <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a14c:	f7ff fb68 	bl	8009820 <vPortValidateInterruptPriority>
	__asm volatile
 800a150:	f3ef 8711 	mrs	r7, BASEPRI
 800a154:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a158:	f383 8811 	msr	BASEPRI, r3
 800a15c:	f3bf 8f6f 	isb	sy
 800a160:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a164:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a166:	b31c      	cbz	r4, 800a1b0 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800a168:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a16c:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800a16e:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a170:	4628      	mov	r0, r5
 800a172:	f7ff fbc3 	bl	80098fc <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a176:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800a178:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a17a:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800a17c:	d113      	bne.n	800a1a6 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a17e:	692b      	ldr	r3, [r5, #16]
 800a180:	b90b      	cbnz	r3, 800a186 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800a182:	2001      	movs	r0, #1
 800a184:	e00b      	b.n	800a19e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a186:	f105 0010 	add.w	r0, r5, #16
 800a18a:	f000 fcf7 	bl	800ab7c <xTaskRemoveFromEventList>
 800a18e:	2800      	cmp	r0, #0
 800a190:	d0f7      	beq.n	800a182 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800a192:	f1b8 0f00 	cmp.w	r8, #0
 800a196:	d0f4      	beq.n	800a182 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800a198:	2001      	movs	r0, #1
 800a19a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a19e:	f387 8811 	msr	BASEPRI, r7
}
 800a1a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800a1a6:	3601      	adds	r6, #1
 800a1a8:	b276      	sxtb	r6, r6
 800a1aa:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800a1ae:	e7e8      	b.n	800a182 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800a1b0:	4620      	mov	r0, r4
 800a1b2:	e7f4      	b.n	800a19e <xQueueReceiveFromISR+0x88>

0800a1b4 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800a1b4:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a1b6:	4a07      	ldr	r2, [pc, #28]	; (800a1d4 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a1b8:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800a1ba:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800a1be:	b92c      	cbnz	r4, 800a1cc <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800a1c0:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800a1c4:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800a1c8:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800a1ca:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a1cc:	3301      	adds	r3, #1
 800a1ce:	2b08      	cmp	r3, #8
 800a1d0:	d1f3      	bne.n	800a1ba <vQueueAddToRegistry+0x6>
 800a1d2:	e7fa      	b.n	800a1ca <vQueueAddToRegistry+0x16>
 800a1d4:	200130d8 	.word	0x200130d8

0800a1d8 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800a1d8:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a1da:	4a08      	ldr	r2, [pc, #32]	; (800a1fc <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a1dc:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800a1de:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800a1e2:	684c      	ldr	r4, [r1, #4]
 800a1e4:	4284      	cmp	r4, r0
 800a1e6:	d104      	bne.n	800a1f2 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800a1e8:	2000      	movs	r0, #0
 800a1ea:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800a1ee:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800a1f0:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800a1f2:	3301      	adds	r3, #1
 800a1f4:	2b08      	cmp	r3, #8
 800a1f6:	d1f2      	bne.n	800a1de <vQueueUnregisterQueue+0x6>
 800a1f8:	e7fa      	b.n	800a1f0 <vQueueUnregisterQueue+0x18>
 800a1fa:	bf00      	nop
 800a1fc:	200130d8 	.word	0x200130d8

0800a200 <vQueueDelete>:
{
 800a200:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800a202:	4604      	mov	r4, r0
 800a204:	b940      	cbnz	r0, 800a218 <vQueueDelete+0x18>
	__asm volatile
 800a206:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a20a:	f383 8811 	msr	BASEPRI, r3
 800a20e:	f3bf 8f6f 	isb	sy
 800a212:	f3bf 8f4f 	dsb	sy
 800a216:	e7fe      	b.n	800a216 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800a218:	f7ff ffde 	bl	800a1d8 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800a21c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800a220:	b923      	cbnz	r3, 800a22c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800a222:	4620      	mov	r0, r4
}
 800a224:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800a228:	f7ff b8fc 	b.w	8009424 <vPortFree>
}
 800a22c:	bd10      	pop	{r4, pc}

0800a22e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800a22e:	b570      	push	{r4, r5, r6, lr}
 800a230:	4604      	mov	r4, r0
 800a232:	460d      	mov	r5, r1
 800a234:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800a236:	f7ff f9dd 	bl	80095f4 <vPortEnterCritical>
 800a23a:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a23e:	2bff      	cmp	r3, #255	; 0xff
 800a240:	bf04      	itt	eq
 800a242:	2300      	moveq	r3, #0
 800a244:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800a248:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a24c:	2bff      	cmp	r3, #255	; 0xff
 800a24e:	bf04      	itt	eq
 800a250:	2300      	moveq	r3, #0
 800a252:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800a256:	f7ff f9ed 	bl	8009634 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800a25a:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800a25c:	b92b      	cbnz	r3, 800a26a <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800a25e:	4632      	mov	r2, r6
 800a260:	4629      	mov	r1, r5
 800a262:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a266:	f000 fc5d 	bl	800ab24 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800a26a:	4620      	mov	r0, r4
	}
 800a26c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800a270:	f7ff bb5a 	b.w	8009928 <prvUnlockQueue>

0800a274 <xTaskCreateStatic>:
									const uint32_t ulStackDepth,
									void * const pvParameters,
									UBaseType_t uxPriority,
									StackType_t * const puxStackBuffer,
									StaticTask_t * const pxTaskBuffer )
	{
 800a274:	b580      	push	{r7, lr}
 800a276:	b08e      	sub	sp, #56	; 0x38
 800a278:	af04      	add	r7, sp, #16
 800a27a:	60f8      	str	r0, [r7, #12]
 800a27c:	60b9      	str	r1, [r7, #8]
 800a27e:	607a      	str	r2, [r7, #4]
 800a280:	603b      	str	r3, [r7, #0]
	TCB_t *pxNewTCB;
	TaskHandle_t xReturn;

		configASSERT( puxStackBuffer != NULL );
 800a282:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a284:	2b00      	cmp	r3, #0
 800a286:	d10a      	bne.n	800a29e <xTaskCreateStatic+0x2a>
 800a288:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a28c:	f383 8811 	msr	BASEPRI, r3
 800a290:	f3bf 8f6f 	isb	sy
 800a294:	f3bf 8f4f 	dsb	sy
 800a298:	623b      	str	r3, [r7, #32]
}
 800a29a:	bf00      	nop
 800a29c:	e7fe      	b.n	800a29c <xTaskCreateStatic+0x28>
		configASSERT( pxTaskBuffer != NULL );
 800a29e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a2a0:	2b00      	cmp	r3, #0
 800a2a2:	d10a      	bne.n	800a2ba <xTaskCreateStatic+0x46>
	__asm volatile
 800a2a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2a8:	f383 8811 	msr	BASEPRI, r3
 800a2ac:	f3bf 8f6f 	isb	sy
 800a2b0:	f3bf 8f4f 	dsb	sy
 800a2b4:	61fb      	str	r3, [r7, #28]
}
 800a2b6:	bf00      	nop
 800a2b8:	e7fe      	b.n	800a2b8 <xTaskCreateStatic+0x44>
		#if( configASSERT_DEFINED == 1 )
		{
			/* Sanity check that the size of the structure used to declare a
			variable of type StaticTask_t equals the size of the real task
			structure. */
			volatile size_t xSize = sizeof( StaticTask_t );
 800a2ba:	2368      	movs	r3, #104	; 0x68
 800a2bc:	613b      	str	r3, [r7, #16]
			configASSERT( xSize == sizeof( TCB_t ) );
 800a2be:	693b      	ldr	r3, [r7, #16]
 800a2c0:	2b68      	cmp	r3, #104	; 0x68
 800a2c2:	d00a      	beq.n	800a2da <xTaskCreateStatic+0x66>
	__asm volatile
 800a2c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2c8:	f383 8811 	msr	BASEPRI, r3
 800a2cc:	f3bf 8f6f 	isb	sy
 800a2d0:	f3bf 8f4f 	dsb	sy
 800a2d4:	61bb      	str	r3, [r7, #24]
}
 800a2d6:	bf00      	nop
 800a2d8:	e7fe      	b.n	800a2d8 <xTaskCreateStatic+0x64>
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800a2da:	693b      	ldr	r3, [r7, #16]
		}
		#endif /* configASSERT_DEFINED */


		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 800a2dc:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a2de:	2b00      	cmp	r3, #0
 800a2e0:	d01e      	beq.n	800a320 <xTaskCreateStatic+0xac>
 800a2e2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800a2e4:	2b00      	cmp	r3, #0
 800a2e6:	d01b      	beq.n	800a320 <xTaskCreateStatic+0xac>
		{
			/* The memory used for the task's TCB and stack are passed into this
			function - use them. */
			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures are designed to have the same alignment, and the size is checked by an assert. */
 800a2e8:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800a2ea:	627b      	str	r3, [r7, #36]	; 0x24
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800a2ec:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2ee:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800a2f0:	631a      	str	r2, [r3, #48]	; 0x30

			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created statically in case the task is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800a2f2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a2f4:	2202      	movs	r2, #2
 800a2f6:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800a2fa:	2300      	movs	r3, #0
 800a2fc:	9303      	str	r3, [sp, #12]
 800a2fe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800a300:	9302      	str	r3, [sp, #8]
 800a302:	f107 0314 	add.w	r3, r7, #20
 800a306:	9301      	str	r3, [sp, #4]
 800a308:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a30a:	9300      	str	r3, [sp, #0]
 800a30c:	683b      	ldr	r3, [r7, #0]
 800a30e:	687a      	ldr	r2, [r7, #4]
 800a310:	68b9      	ldr	r1, [r7, #8]
 800a312:	68f8      	ldr	r0, [r7, #12]
 800a314:	f000 f850 	bl	800a3b8 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a318:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800a31a:	f000 f8e5 	bl	800a4e8 <prvAddNewTaskToReadyList>
 800a31e:	e001      	b.n	800a324 <xTaskCreateStatic+0xb0>
		}
		else
		{
			xReturn = NULL;
 800a320:	2300      	movs	r3, #0
 800a322:	617b      	str	r3, [r7, #20]
		}

		return xReturn;
 800a324:	697b      	ldr	r3, [r7, #20]
	}
 800a326:	4618      	mov	r0, r3
 800a328:	3728      	adds	r7, #40	; 0x28
 800a32a:	46bd      	mov	sp, r7
 800a32c:	bd80      	pop	{r7, pc}

0800a32e <xTaskCreate>:
							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and single characters only. */
							const configSTACK_DEPTH_TYPE usStackDepth,
							void * const pvParameters,
							UBaseType_t uxPriority,
							TaskHandle_t * const pxCreatedTask )
	{
 800a32e:	b580      	push	{r7, lr}
 800a330:	b08c      	sub	sp, #48	; 0x30
 800a332:	af04      	add	r7, sp, #16
 800a334:	60f8      	str	r0, [r7, #12]
 800a336:	60b9      	str	r1, [r7, #8]
 800a338:	603b      	str	r3, [r7, #0]
 800a33a:	4613      	mov	r3, r2
 800a33c:	80fb      	strh	r3, [r7, #6]
		#else /* portSTACK_GROWTH */
		{
		StackType_t *pxStack;

			/* Allocate space for the stack used by the task being created. */
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800a33e:	88fb      	ldrh	r3, [r7, #6]
 800a340:	009b      	lsls	r3, r3, #2
 800a342:	4618      	mov	r0, r3
 800a344:	f7fe ffd6 	bl	80092f4 <pvPortMalloc>
 800a348:	6178      	str	r0, [r7, #20]

			if( pxStack != NULL )
 800a34a:	697b      	ldr	r3, [r7, #20]
 800a34c:	2b00      	cmp	r3, #0
 800a34e:	d00e      	beq.n	800a36e <xTaskCreate+0x40>
			{
				/* Allocate space for the TCB. */
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800a350:	2068      	movs	r0, #104	; 0x68
 800a352:	f7fe ffcf 	bl	80092f4 <pvPortMalloc>
 800a356:	61f8      	str	r0, [r7, #28]

				if( pxNewTCB != NULL )
 800a358:	69fb      	ldr	r3, [r7, #28]
 800a35a:	2b00      	cmp	r3, #0
 800a35c:	d003      	beq.n	800a366 <xTaskCreate+0x38>
				{
					/* Store the stack location in the TCB. */
					pxNewTCB->pxStack = pxStack;
 800a35e:	69fb      	ldr	r3, [r7, #28]
 800a360:	697a      	ldr	r2, [r7, #20]
 800a362:	631a      	str	r2, [r3, #48]	; 0x30
 800a364:	e005      	b.n	800a372 <xTaskCreate+0x44>
				}
				else
				{
					/* The stack cannot be used as the TCB was not created.  Free
					it again. */
					vPortFree( pxStack );
 800a366:	6978      	ldr	r0, [r7, #20]
 800a368:	f7ff f85c 	bl	8009424 <vPortFree>
 800a36c:	e001      	b.n	800a372 <xTaskCreate+0x44>
				}
			}
			else
			{
				pxNewTCB = NULL;
 800a36e:	2300      	movs	r3, #0
 800a370:	61fb      	str	r3, [r7, #28]
			}
		}
		#endif /* portSTACK_GROWTH */

		if( pxNewTCB != NULL )
 800a372:	69fb      	ldr	r3, [r7, #28]
 800a374:	2b00      	cmp	r3, #0
 800a376:	d017      	beq.n	800a3a8 <xTaskCreate+0x7a>
		{
			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consolidated for readability reasons. */
			{
				/* Tasks can be created statically or dynamically, so note this
				task was created dynamically in case it is later deleted. */
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800a378:	69fb      	ldr	r3, [r7, #28]
 800a37a:	2200      	movs	r2, #0
 800a37c:	f883 2065 	strb.w	r2, [r3, #101]	; 0x65
			}
			#endif /* tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE */

			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800a380:	88fa      	ldrh	r2, [r7, #6]
 800a382:	2300      	movs	r3, #0
 800a384:	9303      	str	r3, [sp, #12]
 800a386:	69fb      	ldr	r3, [r7, #28]
 800a388:	9302      	str	r3, [sp, #8]
 800a38a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a38c:	9301      	str	r3, [sp, #4]
 800a38e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a390:	9300      	str	r3, [sp, #0]
 800a392:	683b      	ldr	r3, [r7, #0]
 800a394:	68b9      	ldr	r1, [r7, #8]
 800a396:	68f8      	ldr	r0, [r7, #12]
 800a398:	f000 f80e 	bl	800a3b8 <prvInitialiseNewTask>
			prvAddNewTaskToReadyList( pxNewTCB );
 800a39c:	69f8      	ldr	r0, [r7, #28]
 800a39e:	f000 f8a3 	bl	800a4e8 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800a3a2:	2301      	movs	r3, #1
 800a3a4:	61bb      	str	r3, [r7, #24]
 800a3a6:	e002      	b.n	800a3ae <xTaskCreate+0x80>
		}
		else
		{
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800a3a8:	f04f 33ff 	mov.w	r3, #4294967295
 800a3ac:	61bb      	str	r3, [r7, #24]
		}

		return xReturn;
 800a3ae:	69bb      	ldr	r3, [r7, #24]
	}
 800a3b0:	4618      	mov	r0, r3
 800a3b2:	3720      	adds	r7, #32
 800a3b4:	46bd      	mov	sp, r7
 800a3b6:	bd80      	pop	{r7, pc}

0800a3b8 <prvInitialiseNewTask>:
									void * const pvParameters,
									UBaseType_t uxPriority,
									TaskHandle_t * const pxCreatedTask,
									TCB_t *pxNewTCB,
									const MemoryRegion_t * const xRegions )
{
 800a3b8:	b580      	push	{r7, lr}
 800a3ba:	b088      	sub	sp, #32
 800a3bc:	af00      	add	r7, sp, #0
 800a3be:	60f8      	str	r0, [r7, #12]
 800a3c0:	60b9      	str	r1, [r7, #8]
 800a3c2:	607a      	str	r2, [r7, #4]
 800a3c4:	603b      	str	r3, [r7, #0]

	/* Avoid dependency on memset() if it is not required. */
	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
	{
		/* Fill the stack with a known value to assist debugging. */
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800a3c6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3c8:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800a3ca:	687b      	ldr	r3, [r7, #4]
 800a3cc:	009b      	lsls	r3, r3, #2
 800a3ce:	461a      	mov	r2, r3
 800a3d0:	21a5      	movs	r1, #165	; 0xa5
 800a3d2:	f018 fc81 	bl	8022cd8 <memset>
	grows from high memory to low (as per the 80x86) or vice versa.
	portSTACK_GROWTH is used to make the result positive or negative as required
	by the port. */
	#if( portSTACK_GROWTH < 0 )
	{
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800a3d6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a3d8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800a3da:	687b      	ldr	r3, [r7, #4]
 800a3dc:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800a3e0:	3b01      	subs	r3, #1
 800a3e2:	009b      	lsls	r3, r3, #2
 800a3e4:	4413      	add	r3, r2
 800a3e6:	61bb      	str	r3, [r7, #24]
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800a3e8:	69bb      	ldr	r3, [r7, #24]
 800a3ea:	f023 0307 	bic.w	r3, r3, #7
 800a3ee:	61bb      	str	r3, [r7, #24]

		/* Check the alignment of the calculated top of stack is correct. */
		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) == 0UL ) );
 800a3f0:	69bb      	ldr	r3, [r7, #24]
 800a3f2:	f003 0307 	and.w	r3, r3, #7
 800a3f6:	2b00      	cmp	r3, #0
 800a3f8:	d00a      	beq.n	800a410 <prvInitialiseNewTask+0x58>
	__asm volatile
 800a3fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3fe:	f383 8811 	msr	BASEPRI, r3
 800a402:	f3bf 8f6f 	isb	sy
 800a406:	f3bf 8f4f 	dsb	sy
 800a40a:	617b      	str	r3, [r7, #20]
}
 800a40c:	bf00      	nop
 800a40e:	e7fe      	b.n	800a40e <prvInitialiseNewTask+0x56>

		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
		{
			/* Also record the stack's high address, which may assist
			debugging. */
			pxNewTCB->pxEndOfStack = pxTopOfStack;
 800a410:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a412:	69ba      	ldr	r2, [r7, #24]
 800a414:	645a      	str	r2, [r3, #68]	; 0x44
		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
	}
	#endif /* portSTACK_GROWTH */

	/* Store the task name in the TCB. */
	if( pcName != NULL )
 800a416:	68bb      	ldr	r3, [r7, #8]
 800a418:	2b00      	cmp	r3, #0
 800a41a:	d01f      	beq.n	800a45c <prvInitialiseNewTask+0xa4>
	{
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a41c:	2300      	movs	r3, #0
 800a41e:	61fb      	str	r3, [r7, #28]
 800a420:	e012      	b.n	800a448 <prvInitialiseNewTask+0x90>
		{
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800a422:	68ba      	ldr	r2, [r7, #8]
 800a424:	69fb      	ldr	r3, [r7, #28]
 800a426:	4413      	add	r3, r2
 800a428:	7819      	ldrb	r1, [r3, #0]
 800a42a:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a42c:	69fb      	ldr	r3, [r7, #28]
 800a42e:	4413      	add	r3, r2
 800a430:	3334      	adds	r3, #52	; 0x34
 800a432:	460a      	mov	r2, r1
 800a434:	701a      	strb	r2, [r3, #0]

			/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
			configMAX_TASK_NAME_LEN characters just in case the memory after the
			string is not accessible (extremely unlikely). */
			if( pcName[ x ] == ( char ) 0x00 )
 800a436:	68ba      	ldr	r2, [r7, #8]
 800a438:	69fb      	ldr	r3, [r7, #28]
 800a43a:	4413      	add	r3, r2
 800a43c:	781b      	ldrb	r3, [r3, #0]
 800a43e:	2b00      	cmp	r3, #0
 800a440:	d006      	beq.n	800a450 <prvInitialiseNewTask+0x98>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800a442:	69fb      	ldr	r3, [r7, #28]
 800a444:	3301      	adds	r3, #1
 800a446:	61fb      	str	r3, [r7, #28]
 800a448:	69fb      	ldr	r3, [r7, #28]
 800a44a:	2b0f      	cmp	r3, #15
 800a44c:	d9e9      	bls.n	800a422 <prvInitialiseNewTask+0x6a>
 800a44e:	e000      	b.n	800a452 <prvInitialiseNewTask+0x9a>
			{
				break;
 800a450:	bf00      	nop
			}
		}

		/* Ensure the name string is terminated in the case that the string length
		was greater or equal to configMAX_TASK_NAME_LEN. */
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800a452:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a454:	2200      	movs	r2, #0
 800a456:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800a45a:	e003      	b.n	800a464 <prvInitialiseNewTask+0xac>
	}
	else
	{
		/* The task has not been given a name, so just ensure there is a NULL
		terminator when it is read out. */
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800a45c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a45e:	2200      	movs	r2, #0
 800a460:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
	}

	/* This is used as an array index so must ensure it's not too large.  First
	remove the privilege bit if one is present. */
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800a464:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a466:	2b37      	cmp	r3, #55	; 0x37
 800a468:	d901      	bls.n	800a46e <prvInitialiseNewTask+0xb6>
	{
		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 800a46a:	2337      	movs	r3, #55	; 0x37
 800a46c:	62bb      	str	r3, [r7, #40]	; 0x28
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxNewTCB->uxPriority = uxPriority;
 800a46e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a470:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a472:	62da      	str	r2, [r3, #44]	; 0x2c
	#if ( configUSE_MUTEXES == 1 )
	{
		pxNewTCB->uxBasePriority = uxPriority;
 800a474:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a476:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800a478:	651a      	str	r2, [r3, #80]	; 0x50
		pxNewTCB->uxMutexesHeld = 0;
 800a47a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a47c:	2200      	movs	r2, #0
 800a47e:	655a      	str	r2, [r3, #84]	; 0x54
	}
	#endif /* configUSE_MUTEXES */

	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800a480:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a482:	3304      	adds	r3, #4
 800a484:	4618      	mov	r0, r3
 800a486:	f7ff f816 	bl	80094b6 <vListInitialiseItem>
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800a48a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a48c:	3318      	adds	r3, #24
 800a48e:	4618      	mov	r0, r3
 800a490:	f7ff f811 	bl	80094b6 <vListInitialiseItem>

	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
	back to	the containing TCB from a generic item in a list. */
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800a494:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a496:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a498:	611a      	str	r2, [r3, #16]

	/* Event lists are always in priority order. */
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a49a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800a49c:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800a4a0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4a2:	619a      	str	r2, [r3, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800a4a4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4a6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a4a8:	625a      	str	r2, [r3, #36]	; 0x24
	}
	#endif /* portCRITICAL_NESTING_IN_TCB */

	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
	{
		pxNewTCB->pxTaskTag = NULL;
 800a4aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4ac:	2200      	movs	r2, #0
 800a4ae:	659a      	str	r2, [r3, #88]	; 0x58
	}
	#endif /* configUSE_APPLICATION_TASK_TAG */

	#if ( configGENERATE_RUN_TIME_STATS == 1 )
	{
		pxNewTCB->ulRunTimeCounter = 0UL;
 800a4b0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4b2:	2200      	movs	r2, #0
 800a4b4:	65da      	str	r2, [r3, #92]	; 0x5c
	}
	#endif

	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
	{
		pxNewTCB->ulNotifiedValue = 0;
 800a4b6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4b8:	2200      	movs	r2, #0
 800a4ba:	661a      	str	r2, [r3, #96]	; 0x60
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800a4bc:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4be:	2200      	movs	r2, #0
 800a4c0:	f883 2064 	strb.w	r2, [r3, #100]	; 0x64
			}
			#endif /* portSTACK_GROWTH */
		}
		#else /* portHAS_STACK_OVERFLOW_CHECKING */
		{
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800a4c4:	683a      	ldr	r2, [r7, #0]
 800a4c6:	68f9      	ldr	r1, [r7, #12]
 800a4c8:	69b8      	ldr	r0, [r7, #24]
 800a4ca:	f7ff f869 	bl	80095a0 <pxPortInitialiseStack>
 800a4ce:	4602      	mov	r2, r0
 800a4d0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800a4d2:	601a      	str	r2, [r3, #0]
		}
		#endif /* portHAS_STACK_OVERFLOW_CHECKING */
	}
	#endif /* portUSING_MPU_WRAPPERS */

	if( pxCreatedTask != NULL )
 800a4d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a4d6:	2b00      	cmp	r3, #0
 800a4d8:	d002      	beq.n	800a4e0 <prvInitialiseNewTask+0x128>
	{
		/* Pass the handle out in an anonymous way.  The handle can be used to
		change the created task's priority, delete the created task, etc.*/
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800a4da:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800a4dc:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800a4de:	601a      	str	r2, [r3, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a4e0:	bf00      	nop
 800a4e2:	3720      	adds	r7, #32
 800a4e4:	46bd      	mov	sp, r7
 800a4e6:	bd80      	pop	{r7, pc}

0800a4e8 <prvAddNewTaskToReadyList>:
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800a4e8:	b580      	push	{r7, lr}
 800a4ea:	b082      	sub	sp, #8
 800a4ec:	af00      	add	r7, sp, #0
 800a4ee:	6078      	str	r0, [r7, #4]
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800a4f0:	f7ff f880 	bl	80095f4 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800a4f4:	4b2d      	ldr	r3, [pc, #180]	; (800a5ac <prvAddNewTaskToReadyList+0xc4>)
 800a4f6:	681b      	ldr	r3, [r3, #0]
 800a4f8:	3301      	adds	r3, #1
 800a4fa:	4a2c      	ldr	r2, [pc, #176]	; (800a5ac <prvAddNewTaskToReadyList+0xc4>)
 800a4fc:	6013      	str	r3, [r2, #0]
		if( pxCurrentTCB == NULL )
 800a4fe:	4b2c      	ldr	r3, [pc, #176]	; (800a5b0 <prvAddNewTaskToReadyList+0xc8>)
 800a500:	681b      	ldr	r3, [r3, #0]
 800a502:	2b00      	cmp	r3, #0
 800a504:	d109      	bne.n	800a51a <prvAddNewTaskToReadyList+0x32>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800a506:	4a2a      	ldr	r2, [pc, #168]	; (800a5b0 <prvAddNewTaskToReadyList+0xc8>)
 800a508:	687b      	ldr	r3, [r7, #4]
 800a50a:	6013      	str	r3, [r2, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800a50c:	4b27      	ldr	r3, [pc, #156]	; (800a5ac <prvAddNewTaskToReadyList+0xc4>)
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	2b01      	cmp	r3, #1
 800a512:	d110      	bne.n	800a536 <prvAddNewTaskToReadyList+0x4e>
			{
				/* This is the first task to be created so do the preliminary
				initialisation required.  We will not recover if this call
				fails, but we will report the failure. */
				prvInitialiseTaskLists();
 800a514:	f000 fc32 	bl	800ad7c <prvInitialiseTaskLists>
 800a518:	e00d      	b.n	800a536 <prvAddNewTaskToReadyList+0x4e>
		else
		{
			/* If the scheduler is not already running, make this task the
			current task if it is the highest priority task to be created
			so far. */
			if( xSchedulerRunning == pdFALSE )
 800a51a:	4b26      	ldr	r3, [pc, #152]	; (800a5b4 <prvAddNewTaskToReadyList+0xcc>)
 800a51c:	681b      	ldr	r3, [r3, #0]
 800a51e:	2b00      	cmp	r3, #0
 800a520:	d109      	bne.n	800a536 <prvAddNewTaskToReadyList+0x4e>
			{
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800a522:	4b23      	ldr	r3, [pc, #140]	; (800a5b0 <prvAddNewTaskToReadyList+0xc8>)
 800a524:	681b      	ldr	r3, [r3, #0]
 800a526:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a52c:	429a      	cmp	r2, r3
 800a52e:	d802      	bhi.n	800a536 <prvAddNewTaskToReadyList+0x4e>
				{
					pxCurrentTCB = pxNewTCB;
 800a530:	4a1f      	ldr	r2, [pc, #124]	; (800a5b0 <prvAddNewTaskToReadyList+0xc8>)
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	6013      	str	r3, [r2, #0]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

		uxTaskNumber++;
 800a536:	4b20      	ldr	r3, [pc, #128]	; (800a5b8 <prvAddNewTaskToReadyList+0xd0>)
 800a538:	681b      	ldr	r3, [r3, #0]
 800a53a:	3301      	adds	r3, #1
 800a53c:	4a1e      	ldr	r2, [pc, #120]	; (800a5b8 <prvAddNewTaskToReadyList+0xd0>)
 800a53e:	6013      	str	r3, [r2, #0]

		#if ( configUSE_TRACE_FACILITY == 1 )
		{
			/* Add a counter into the TCB for tracing only. */
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800a540:	4b1d      	ldr	r3, [pc, #116]	; (800a5b8 <prvAddNewTaskToReadyList+0xd0>)
 800a542:	681a      	ldr	r2, [r3, #0]
 800a544:	687b      	ldr	r3, [r7, #4]
 800a546:	649a      	str	r2, [r3, #72]	; 0x48
		}
		#endif /* configUSE_TRACE_FACILITY */
		traceTASK_CREATE( pxNewTCB );

		prvAddTaskToReadyList( pxNewTCB );
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a54c:	4b1b      	ldr	r3, [pc, #108]	; (800a5bc <prvAddNewTaskToReadyList+0xd4>)
 800a54e:	681b      	ldr	r3, [r3, #0]
 800a550:	429a      	cmp	r2, r3
 800a552:	d903      	bls.n	800a55c <prvAddNewTaskToReadyList+0x74>
 800a554:	687b      	ldr	r3, [r7, #4]
 800a556:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a558:	4a18      	ldr	r2, [pc, #96]	; (800a5bc <prvAddNewTaskToReadyList+0xd4>)
 800a55a:	6013      	str	r3, [r2, #0]
 800a55c:	687b      	ldr	r3, [r7, #4]
 800a55e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a560:	4613      	mov	r3, r2
 800a562:	009b      	lsls	r3, r3, #2
 800a564:	4413      	add	r3, r2
 800a566:	009b      	lsls	r3, r3, #2
 800a568:	4a15      	ldr	r2, [pc, #84]	; (800a5c0 <prvAddNewTaskToReadyList+0xd8>)
 800a56a:	441a      	add	r2, r3
 800a56c:	687b      	ldr	r3, [r7, #4]
 800a56e:	3304      	adds	r3, #4
 800a570:	4619      	mov	r1, r3
 800a572:	4610      	mov	r0, r2
 800a574:	f7fe ffa2 	bl	80094bc <vListInsertEnd>

		portSETUP_TCB( pxNewTCB );
	}
	taskEXIT_CRITICAL();
 800a578:	f7ff f85c 	bl	8009634 <vPortExitCritical>

	if( xSchedulerRunning != pdFALSE )
 800a57c:	4b0d      	ldr	r3, [pc, #52]	; (800a5b4 <prvAddNewTaskToReadyList+0xcc>)
 800a57e:	681b      	ldr	r3, [r3, #0]
 800a580:	2b00      	cmp	r3, #0
 800a582:	d00e      	beq.n	800a5a2 <prvAddNewTaskToReadyList+0xba>
	{
		/* If the created task is of a higher priority than the current task
		then it should run now. */
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800a584:	4b0a      	ldr	r3, [pc, #40]	; (800a5b0 <prvAddNewTaskToReadyList+0xc8>)
 800a586:	681b      	ldr	r3, [r3, #0]
 800a588:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a58a:	687b      	ldr	r3, [r7, #4]
 800a58c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a58e:	429a      	cmp	r2, r3
 800a590:	d207      	bcs.n	800a5a2 <prvAddNewTaskToReadyList+0xba>
		{
			taskYIELD_IF_USING_PREEMPTION();
 800a592:	4b0c      	ldr	r3, [pc, #48]	; (800a5c4 <prvAddNewTaskToReadyList+0xdc>)
 800a594:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a598:	601a      	str	r2, [r3, #0]
 800a59a:	f3bf 8f4f 	dsb	sy
 800a59e:	f3bf 8f6f 	isb	sy
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 800a5a2:	bf00      	nop
 800a5a4:	3708      	adds	r7, #8
 800a5a6:	46bd      	mov	sp, r7
 800a5a8:	bd80      	pop	{r7, pc}
 800a5aa:	bf00      	nop
 800a5ac:	200135ec 	.word	0x200135ec
 800a5b0:	20013118 	.word	0x20013118
 800a5b4:	200135f8 	.word	0x200135f8
 800a5b8:	20013608 	.word	0x20013608
 800a5bc:	200135f4 	.word	0x200135f4
 800a5c0:	2001311c 	.word	0x2001311c
 800a5c4:	e000ed04 	.word	0xe000ed04

0800a5c8 <vTaskDelay>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelay == 1 )

	void vTaskDelay( const TickType_t xTicksToDelay )
	{
 800a5c8:	b580      	push	{r7, lr}
 800a5ca:	b084      	sub	sp, #16
 800a5cc:	af00      	add	r7, sp, #0
 800a5ce:	6078      	str	r0, [r7, #4]
	BaseType_t xAlreadyYielded = pdFALSE;
 800a5d0:	2300      	movs	r3, #0
 800a5d2:	60fb      	str	r3, [r7, #12]

		/* A delay time of zero just forces a reschedule. */
		if( xTicksToDelay > ( TickType_t ) 0U )
 800a5d4:	687b      	ldr	r3, [r7, #4]
 800a5d6:	2b00      	cmp	r3, #0
 800a5d8:	d017      	beq.n	800a60a <vTaskDelay+0x42>
		{
			configASSERT( uxSchedulerSuspended == 0 );
 800a5da:	4b13      	ldr	r3, [pc, #76]	; (800a628 <vTaskDelay+0x60>)
 800a5dc:	681b      	ldr	r3, [r3, #0]
 800a5de:	2b00      	cmp	r3, #0
 800a5e0:	d00a      	beq.n	800a5f8 <vTaskDelay+0x30>
	__asm volatile
 800a5e2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5e6:	f383 8811 	msr	BASEPRI, r3
 800a5ea:	f3bf 8f6f 	isb	sy
 800a5ee:	f3bf 8f4f 	dsb	sy
 800a5f2:	60bb      	str	r3, [r7, #8]
}
 800a5f4:	bf00      	nop
 800a5f6:	e7fe      	b.n	800a5f6 <vTaskDelay+0x2e>
			vTaskSuspendAll();
 800a5f8:	f000 f882 	bl	800a700 <vTaskSuspendAll>
				list or removed from the blocked list until the scheduler
				is resumed.

				This task cannot be in an event list as it is the currently
				executing task. */
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800a5fc:	2100      	movs	r1, #0
 800a5fe:	6878      	ldr	r0, [r7, #4]
 800a600:	f000 fe04 	bl	800b20c <prvAddCurrentTaskToDelayedList>
			}
			xAlreadyYielded = xTaskResumeAll();
 800a604:	f000 f88a 	bl	800a71c <xTaskResumeAll>
 800a608:	60f8      	str	r0, [r7, #12]
			mtCOVERAGE_TEST_MARKER();
		}

		/* Force a reschedule if xTaskResumeAll has not already done so, we may
		have put ourselves to sleep. */
		if( xAlreadyYielded == pdFALSE )
 800a60a:	68fb      	ldr	r3, [r7, #12]
 800a60c:	2b00      	cmp	r3, #0
 800a60e:	d107      	bne.n	800a620 <vTaskDelay+0x58>
		{
			portYIELD_WITHIN_API();
 800a610:	4b06      	ldr	r3, [pc, #24]	; (800a62c <vTaskDelay+0x64>)
 800a612:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a616:	601a      	str	r2, [r3, #0]
 800a618:	f3bf 8f4f 	dsb	sy
 800a61c:	f3bf 8f6f 	isb	sy
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 800a620:	bf00      	nop
 800a622:	3710      	adds	r7, #16
 800a624:	46bd      	mov	sp, r7
 800a626:	bd80      	pop	{r7, pc}
 800a628:	20013614 	.word	0x20013614
 800a62c:	e000ed04 	.word	0xe000ed04

0800a630 <vTaskStartScheduler>:

#endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
/*-----------------------------------------------------------*/

void vTaskStartScheduler( void )
{
 800a630:	b580      	push	{r7, lr}
 800a632:	b08a      	sub	sp, #40	; 0x28
 800a634:	af04      	add	r7, sp, #16
BaseType_t xReturn;

	/* Add the idle task at the lowest priority. */
	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
	{
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800a636:	2300      	movs	r3, #0
 800a638:	60bb      	str	r3, [r7, #8]
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800a63a:	2300      	movs	r3, #0
 800a63c:	607b      	str	r3, [r7, #4]
		uint32_t ulIdleTaskStackSize;

		/* The Idle task is created using user provided RAM - obtain the
		address of the RAM then create the idle task. */
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800a63e:	463a      	mov	r2, r7
 800a640:	1d39      	adds	r1, r7, #4
 800a642:	f107 0308 	add.w	r3, r7, #8
 800a646:	4618      	mov	r0, r3
 800a648:	f7fe fe18 	bl	800927c <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800a64c:	6839      	ldr	r1, [r7, #0]
 800a64e:	687b      	ldr	r3, [r7, #4]
 800a650:	68ba      	ldr	r2, [r7, #8]
 800a652:	9202      	str	r2, [sp, #8]
 800a654:	9301      	str	r3, [sp, #4]
 800a656:	2300      	movs	r3, #0
 800a658:	9300      	str	r3, [sp, #0]
 800a65a:	2300      	movs	r3, #0
 800a65c:	460a      	mov	r2, r1
 800a65e:	4922      	ldr	r1, [pc, #136]	; (800a6e8 <vTaskStartScheduler+0xb8>)
 800a660:	4822      	ldr	r0, [pc, #136]	; (800a6ec <vTaskStartScheduler+0xbc>)
 800a662:	f7ff fe07 	bl	800a274 <xTaskCreateStatic>
 800a666:	4603      	mov	r3, r0
 800a668:	4a21      	ldr	r2, [pc, #132]	; (800a6f0 <vTaskStartScheduler+0xc0>)
 800a66a:	6013      	str	r3, [r2, #0]
												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIORITY is zero. */
												pxIdleTaskStackBuffer,
												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant explicit cast to all supported compilers. */

		if( xIdleTaskHandle != NULL )
 800a66c:	4b20      	ldr	r3, [pc, #128]	; (800a6f0 <vTaskStartScheduler+0xc0>)
 800a66e:	681b      	ldr	r3, [r3, #0]
 800a670:	2b00      	cmp	r3, #0
 800a672:	d002      	beq.n	800a67a <vTaskStartScheduler+0x4a>
		{
			xReturn = pdPASS;
 800a674:	2301      	movs	r3, #1
 800a676:	617b      	str	r3, [r7, #20]
 800a678:	e001      	b.n	800a67e <vTaskStartScheduler+0x4e>
		}
		else
		{
			xReturn = pdFAIL;
 800a67a:	2300      	movs	r3, #0
 800a67c:	617b      	str	r3, [r7, #20]
	}
	#endif /* configSUPPORT_STATIC_ALLOCATION */

	#if ( configUSE_TIMERS == 1 )
	{
		if( xReturn == pdPASS )
 800a67e:	697b      	ldr	r3, [r7, #20]
 800a680:	2b01      	cmp	r3, #1
 800a682:	d102      	bne.n	800a68a <vTaskStartScheduler+0x5a>
		{
			xReturn = xTimerCreateTimerTask();
 800a684:	f000 fe68 	bl	800b358 <xTimerCreateTimerTask>
 800a688:	6178      	str	r0, [r7, #20]
			mtCOVERAGE_TEST_MARKER();
		}
	}
	#endif /* configUSE_TIMERS */

	if( xReturn == pdPASS )
 800a68a:	697b      	ldr	r3, [r7, #20]
 800a68c:	2b01      	cmp	r3, #1
 800a68e:	d118      	bne.n	800a6c2 <vTaskStartScheduler+0x92>
	__asm volatile
 800a690:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a694:	f383 8811 	msr	BASEPRI, r3
 800a698:	f3bf 8f6f 	isb	sy
 800a69c:	f3bf 8f4f 	dsb	sy
 800a6a0:	613b      	str	r3, [r7, #16]
}
 800a6a2:	bf00      	nop
			for additional information. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */

		xNextTaskUnblockTime = portMAX_DELAY;
 800a6a4:	4b13      	ldr	r3, [pc, #76]	; (800a6f4 <vTaskStartScheduler+0xc4>)
 800a6a6:	f04f 32ff 	mov.w	r2, #4294967295
 800a6aa:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800a6ac:	4b12      	ldr	r3, [pc, #72]	; (800a6f8 <vTaskStartScheduler+0xc8>)
 800a6ae:	2201      	movs	r2, #1
 800a6b0:	601a      	str	r2, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800a6b2:	4b12      	ldr	r3, [pc, #72]	; (800a6fc <vTaskStartScheduler+0xcc>)
 800a6b4:	2200      	movs	r2, #0
 800a6b6:	601a      	str	r2, [r3, #0]
		macro must be defined to configure the timer/counter used to generate
		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
		is set to 0 and the following line fails to build then ensure you do not
		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
		FreeRTOSConfig.h file. */
		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
 800a6b8:	f7f7 fdac 	bl	8002214 <configureTimerForRunTimeStats>

		traceTASK_SWITCHED_IN();

		/* Setting up the timer tick is hardware specific and thus in the
		portable interface. */
		if( xPortStartScheduler() != pdFALSE )
 800a6bc:	f7ff f82a 	bl	8009714 <xPortStartScheduler>
	}

	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
	meaning xIdleTaskHandle is not used anywhere else. */
	( void ) xIdleTaskHandle;
}
 800a6c0:	e00e      	b.n	800a6e0 <vTaskStartScheduler+0xb0>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800a6c2:	697b      	ldr	r3, [r7, #20]
 800a6c4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800a6c8:	d10a      	bne.n	800a6e0 <vTaskStartScheduler+0xb0>
	__asm volatile
 800a6ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6ce:	f383 8811 	msr	BASEPRI, r3
 800a6d2:	f3bf 8f6f 	isb	sy
 800a6d6:	f3bf 8f4f 	dsb	sy
 800a6da:	60fb      	str	r3, [r7, #12]
}
 800a6dc:	bf00      	nop
 800a6de:	e7fe      	b.n	800a6de <vTaskStartScheduler+0xae>
}
 800a6e0:	bf00      	nop
 800a6e2:	3718      	adds	r7, #24
 800a6e4:	46bd      	mov	sp, r7
 800a6e6:	bd80      	pop	{r7, pc}
 800a6e8:	080278a8 	.word	0x080278a8
 800a6ec:	0800ad4d 	.word	0x0800ad4d
 800a6f0:	20013610 	.word	0x20013610
 800a6f4:	2001360c 	.word	0x2001360c
 800a6f8:	200135f8 	.word	0x200135f8
 800a6fc:	200135f0 	.word	0x200135f0

0800a700 <vTaskSuspendAll>:
	vPortEndScheduler();
}
/*----------------------------------------------------------*/

void vTaskSuspendAll( void )
{
 800a700:	b480      	push	{r7}
 800a702:	af00      	add	r7, sp, #0
	do not otherwise exhibit real time behaviour. */
	portSOFTWARE_BARRIER();

	/* The scheduler is suspended if uxSchedulerSuspended is non-zero.  An increment
	is used to allow calls to vTaskSuspendAll() to nest. */
	++uxSchedulerSuspended;
 800a704:	4b04      	ldr	r3, [pc, #16]	; (800a718 <vTaskSuspendAll+0x18>)
 800a706:	681b      	ldr	r3, [r3, #0]
 800a708:	3301      	adds	r3, #1
 800a70a:	4a03      	ldr	r2, [pc, #12]	; (800a718 <vTaskSuspendAll+0x18>)
 800a70c:	6013      	str	r3, [r2, #0]

	/* Enforces ordering for ports and optimised compilers that may otherwise place
	the above increment elsewhere. */
	portMEMORY_BARRIER();
}
 800a70e:	bf00      	nop
 800a710:	46bd      	mov	sp, r7
 800a712:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a716:	4770      	bx	lr
 800a718:	20013614 	.word	0x20013614

0800a71c <xTaskResumeAll>:

#endif /* configUSE_TICKLESS_IDLE */
/*----------------------------------------------------------*/

BaseType_t xTaskResumeAll( void )
{
 800a71c:	b580      	push	{r7, lr}
 800a71e:	b084      	sub	sp, #16
 800a720:	af00      	add	r7, sp, #0
TCB_t *pxTCB = NULL;
 800a722:	2300      	movs	r3, #0
 800a724:	60fb      	str	r3, [r7, #12]
BaseType_t xAlreadyYielded = pdFALSE;
 800a726:	2300      	movs	r3, #0
 800a728:	60bb      	str	r3, [r7, #8]

	/* If uxSchedulerSuspended is zero then this function does not match a
	previous call to vTaskSuspendAll(). */
	configASSERT( uxSchedulerSuspended );
 800a72a:	4b42      	ldr	r3, [pc, #264]	; (800a834 <xTaskResumeAll+0x118>)
 800a72c:	681b      	ldr	r3, [r3, #0]
 800a72e:	2b00      	cmp	r3, #0
 800a730:	d10a      	bne.n	800a748 <xTaskResumeAll+0x2c>
	__asm volatile
 800a732:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a736:	f383 8811 	msr	BASEPRI, r3
 800a73a:	f3bf 8f6f 	isb	sy
 800a73e:	f3bf 8f4f 	dsb	sy
 800a742:	603b      	str	r3, [r7, #0]
}
 800a744:	bf00      	nop
 800a746:	e7fe      	b.n	800a746 <xTaskResumeAll+0x2a>
	/* It is possible that an ISR caused a task to be removed from an event
	list while the scheduler was suspended.  If this was the case then the
	removed task will have been added to the xPendingReadyList.  Once the
	scheduler has been resumed it is safe to move all the pending ready
	tasks from this list into their appropriate ready list. */
	taskENTER_CRITICAL();
 800a748:	f7fe ff54 	bl	80095f4 <vPortEnterCritical>
	{
		--uxSchedulerSuspended;
 800a74c:	4b39      	ldr	r3, [pc, #228]	; (800a834 <xTaskResumeAll+0x118>)
 800a74e:	681b      	ldr	r3, [r3, #0]
 800a750:	3b01      	subs	r3, #1
 800a752:	4a38      	ldr	r2, [pc, #224]	; (800a834 <xTaskResumeAll+0x118>)
 800a754:	6013      	str	r3, [r2, #0]

		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a756:	4b37      	ldr	r3, [pc, #220]	; (800a834 <xTaskResumeAll+0x118>)
 800a758:	681b      	ldr	r3, [r3, #0]
 800a75a:	2b00      	cmp	r3, #0
 800a75c:	d162      	bne.n	800a824 <xTaskResumeAll+0x108>
		{
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800a75e:	4b36      	ldr	r3, [pc, #216]	; (800a838 <xTaskResumeAll+0x11c>)
 800a760:	681b      	ldr	r3, [r3, #0]
 800a762:	2b00      	cmp	r3, #0
 800a764:	d05e      	beq.n	800a824 <xTaskResumeAll+0x108>
			{
				/* Move any readied tasks from the pending list into the
				appropriate ready list. */
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a766:	e02f      	b.n	800a7c8 <xTaskResumeAll+0xac>
				{
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a768:	4b34      	ldr	r3, [pc, #208]	; (800a83c <xTaskResumeAll+0x120>)
 800a76a:	68db      	ldr	r3, [r3, #12]
 800a76c:	68db      	ldr	r3, [r3, #12]
 800a76e:	60fb      	str	r3, [r7, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a770:	68fb      	ldr	r3, [r7, #12]
 800a772:	3318      	adds	r3, #24
 800a774:	4618      	mov	r0, r3
 800a776:	f7fe fec4 	bl	8009502 <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a77a:	68fb      	ldr	r3, [r7, #12]
 800a77c:	3304      	adds	r3, #4
 800a77e:	4618      	mov	r0, r3
 800a780:	f7fe febf 	bl	8009502 <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800a784:	68fb      	ldr	r3, [r7, #12]
 800a786:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a788:	4b2d      	ldr	r3, [pc, #180]	; (800a840 <xTaskResumeAll+0x124>)
 800a78a:	681b      	ldr	r3, [r3, #0]
 800a78c:	429a      	cmp	r2, r3
 800a78e:	d903      	bls.n	800a798 <xTaskResumeAll+0x7c>
 800a790:	68fb      	ldr	r3, [r7, #12]
 800a792:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a794:	4a2a      	ldr	r2, [pc, #168]	; (800a840 <xTaskResumeAll+0x124>)
 800a796:	6013      	str	r3, [r2, #0]
 800a798:	68fb      	ldr	r3, [r7, #12]
 800a79a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a79c:	4613      	mov	r3, r2
 800a79e:	009b      	lsls	r3, r3, #2
 800a7a0:	4413      	add	r3, r2
 800a7a2:	009b      	lsls	r3, r3, #2
 800a7a4:	4a27      	ldr	r2, [pc, #156]	; (800a844 <xTaskResumeAll+0x128>)
 800a7a6:	441a      	add	r2, r3
 800a7a8:	68fb      	ldr	r3, [r7, #12]
 800a7aa:	3304      	adds	r3, #4
 800a7ac:	4619      	mov	r1, r3
 800a7ae:	4610      	mov	r0, r2
 800a7b0:	f7fe fe84 	bl	80094bc <vListInsertEnd>

					/* If the moved task has a priority higher than the current
					task then a yield must be performed. */
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a7b4:	68fb      	ldr	r3, [r7, #12]
 800a7b6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a7b8:	4b23      	ldr	r3, [pc, #140]	; (800a848 <xTaskResumeAll+0x12c>)
 800a7ba:	681b      	ldr	r3, [r3, #0]
 800a7bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a7be:	429a      	cmp	r2, r3
 800a7c0:	d302      	bcc.n	800a7c8 <xTaskResumeAll+0xac>
					{
						xYieldPending = pdTRUE;
 800a7c2:	4b22      	ldr	r3, [pc, #136]	; (800a84c <xTaskResumeAll+0x130>)
 800a7c4:	2201      	movs	r2, #1
 800a7c6:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800a7c8:	4b1c      	ldr	r3, [pc, #112]	; (800a83c <xTaskResumeAll+0x120>)
 800a7ca:	681b      	ldr	r3, [r3, #0]
 800a7cc:	2b00      	cmp	r3, #0
 800a7ce:	d1cb      	bne.n	800a768 <xTaskResumeAll+0x4c>
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( pxTCB != NULL )
 800a7d0:	68fb      	ldr	r3, [r7, #12]
 800a7d2:	2b00      	cmp	r3, #0
 800a7d4:	d001      	beq.n	800a7da <xTaskResumeAll+0xbe>
					which may have prevented the next unblock time from being
					re-calculated, in which case re-calculate it now.  Mainly
					important for low power tickless implementations, where
					this can prevent an unnecessary exit from low power
					state. */
					prvResetNextTaskUnblockTime();
 800a7d6:	f000 fb6f 	bl	800aeb8 <prvResetNextTaskUnblockTime>
				/* If any ticks occurred while the scheduler was suspended then
				they should be processed now.  This ensures the tick count does
				not	slip, and that any delayed tasks are resumed at the correct
				time. */
				{
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800a7da:	4b1d      	ldr	r3, [pc, #116]	; (800a850 <xTaskResumeAll+0x134>)
 800a7dc:	681b      	ldr	r3, [r3, #0]
 800a7de:	607b      	str	r3, [r7, #4]

					if( xPendedCounts > ( TickType_t ) 0U )
 800a7e0:	687b      	ldr	r3, [r7, #4]
 800a7e2:	2b00      	cmp	r3, #0
 800a7e4:	d010      	beq.n	800a808 <xTaskResumeAll+0xec>
					{
						do
						{
							if( xTaskIncrementTick() != pdFALSE )
 800a7e6:	f000 f847 	bl	800a878 <xTaskIncrementTick>
 800a7ea:	4603      	mov	r3, r0
 800a7ec:	2b00      	cmp	r3, #0
 800a7ee:	d002      	beq.n	800a7f6 <xTaskResumeAll+0xda>
							{
								xYieldPending = pdTRUE;
 800a7f0:	4b16      	ldr	r3, [pc, #88]	; (800a84c <xTaskResumeAll+0x130>)
 800a7f2:	2201      	movs	r2, #1
 800a7f4:	601a      	str	r2, [r3, #0]
							}
							else
							{
								mtCOVERAGE_TEST_MARKER();
							}
							--xPendedCounts;
 800a7f6:	687b      	ldr	r3, [r7, #4]
 800a7f8:	3b01      	subs	r3, #1
 800a7fa:	607b      	str	r3, [r7, #4]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d1f1      	bne.n	800a7e6 <xTaskResumeAll+0xca>

						xPendedTicks = 0;
 800a802:	4b13      	ldr	r3, [pc, #76]	; (800a850 <xTaskResumeAll+0x134>)
 800a804:	2200      	movs	r2, #0
 800a806:	601a      	str	r2, [r3, #0]
					{
						mtCOVERAGE_TEST_MARKER();
					}
				}

				if( xYieldPending != pdFALSE )
 800a808:	4b10      	ldr	r3, [pc, #64]	; (800a84c <xTaskResumeAll+0x130>)
 800a80a:	681b      	ldr	r3, [r3, #0]
 800a80c:	2b00      	cmp	r3, #0
 800a80e:	d009      	beq.n	800a824 <xTaskResumeAll+0x108>
				{
					#if( configUSE_PREEMPTION != 0 )
					{
						xAlreadyYielded = pdTRUE;
 800a810:	2301      	movs	r3, #1
 800a812:	60bb      	str	r3, [r7, #8]
					}
					#endif
					taskYIELD_IF_USING_PREEMPTION();
 800a814:	4b0f      	ldr	r3, [pc, #60]	; (800a854 <xTaskResumeAll+0x138>)
 800a816:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a81a:	601a      	str	r2, [r3, #0]
 800a81c:	f3bf 8f4f 	dsb	sy
 800a820:	f3bf 8f6f 	isb	sy
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
 800a824:	f7fe ff06 	bl	8009634 <vPortExitCritical>

	return xAlreadyYielded;
 800a828:	68bb      	ldr	r3, [r7, #8]
}
 800a82a:	4618      	mov	r0, r3
 800a82c:	3710      	adds	r7, #16
 800a82e:	46bd      	mov	sp, r7
 800a830:	bd80      	pop	{r7, pc}
 800a832:	bf00      	nop
 800a834:	20013614 	.word	0x20013614
 800a838:	200135ec 	.word	0x200135ec
 800a83c:	200135ac 	.word	0x200135ac
 800a840:	200135f4 	.word	0x200135f4
 800a844:	2001311c 	.word	0x2001311c
 800a848:	20013118 	.word	0x20013118
 800a84c:	20013600 	.word	0x20013600
 800a850:	200135fc 	.word	0x200135fc
 800a854:	e000ed04 	.word	0xe000ed04

0800a858 <xTaskGetTickCount>:
/*-----------------------------------------------------------*/

TickType_t xTaskGetTickCount( void )
{
 800a858:	b480      	push	{r7}
 800a85a:	b083      	sub	sp, #12
 800a85c:	af00      	add	r7, sp, #0
TickType_t xTicks;

	/* Critical section required if running on a 16 bit processor. */
	portTICK_TYPE_ENTER_CRITICAL();
	{
		xTicks = xTickCount;
 800a85e:	4b05      	ldr	r3, [pc, #20]	; (800a874 <xTaskGetTickCount+0x1c>)
 800a860:	681b      	ldr	r3, [r3, #0]
 800a862:	607b      	str	r3, [r7, #4]
	}
	portTICK_TYPE_EXIT_CRITICAL();

	return xTicks;
 800a864:	687b      	ldr	r3, [r7, #4]
}
 800a866:	4618      	mov	r0, r3
 800a868:	370c      	adds	r7, #12
 800a86a:	46bd      	mov	sp, r7
 800a86c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a870:	4770      	bx	lr
 800a872:	bf00      	nop
 800a874:	200135f0 	.word	0x200135f0

0800a878 <xTaskIncrementTick>:

#endif /* INCLUDE_xTaskAbortDelay */
/*----------------------------------------------------------*/

BaseType_t xTaskIncrementTick( void )
{
 800a878:	b580      	push	{r7, lr}
 800a87a:	b086      	sub	sp, #24
 800a87c:	af00      	add	r7, sp, #0
TCB_t * pxTCB;
TickType_t xItemValue;
BaseType_t xSwitchRequired = pdFALSE;
 800a87e:	2300      	movs	r3, #0
 800a880:	617b      	str	r3, [r7, #20]

	/* Called by the portable layer each time a tick interrupt occurs.
	Increments the tick then checks to see if the new tick value will cause any
	tasks to be unblocked. */
	traceTASK_INCREMENT_TICK( xTickCount );
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800a882:	4b4f      	ldr	r3, [pc, #316]	; (800a9c0 <xTaskIncrementTick+0x148>)
 800a884:	681b      	ldr	r3, [r3, #0]
 800a886:	2b00      	cmp	r3, #0
 800a888:	f040 808f 	bne.w	800a9aa <xTaskIncrementTick+0x132>
	{
		/* Minor optimisation.  The tick count cannot change in this
		block. */
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800a88c:	4b4d      	ldr	r3, [pc, #308]	; (800a9c4 <xTaskIncrementTick+0x14c>)
 800a88e:	681b      	ldr	r3, [r3, #0]
 800a890:	3301      	adds	r3, #1
 800a892:	613b      	str	r3, [r7, #16]

		/* Increment the RTOS tick, switching the delayed and overflowed
		delayed lists if it wraps to 0. */
		xTickCount = xConstTickCount;
 800a894:	4a4b      	ldr	r2, [pc, #300]	; (800a9c4 <xTaskIncrementTick+0x14c>)
 800a896:	693b      	ldr	r3, [r7, #16]
 800a898:	6013      	str	r3, [r2, #0]

		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800a89a:	693b      	ldr	r3, [r7, #16]
 800a89c:	2b00      	cmp	r3, #0
 800a89e:	d120      	bne.n	800a8e2 <xTaskIncrementTick+0x6a>
		{
			taskSWITCH_DELAYED_LISTS();
 800a8a0:	4b49      	ldr	r3, [pc, #292]	; (800a9c8 <xTaskIncrementTick+0x150>)
 800a8a2:	681b      	ldr	r3, [r3, #0]
 800a8a4:	681b      	ldr	r3, [r3, #0]
 800a8a6:	2b00      	cmp	r3, #0
 800a8a8:	d00a      	beq.n	800a8c0 <xTaskIncrementTick+0x48>
	__asm volatile
 800a8aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a8ae:	f383 8811 	msr	BASEPRI, r3
 800a8b2:	f3bf 8f6f 	isb	sy
 800a8b6:	f3bf 8f4f 	dsb	sy
 800a8ba:	603b      	str	r3, [r7, #0]
}
 800a8bc:	bf00      	nop
 800a8be:	e7fe      	b.n	800a8be <xTaskIncrementTick+0x46>
 800a8c0:	4b41      	ldr	r3, [pc, #260]	; (800a9c8 <xTaskIncrementTick+0x150>)
 800a8c2:	681b      	ldr	r3, [r3, #0]
 800a8c4:	60fb      	str	r3, [r7, #12]
 800a8c6:	4b41      	ldr	r3, [pc, #260]	; (800a9cc <xTaskIncrementTick+0x154>)
 800a8c8:	681b      	ldr	r3, [r3, #0]
 800a8ca:	4a3f      	ldr	r2, [pc, #252]	; (800a9c8 <xTaskIncrementTick+0x150>)
 800a8cc:	6013      	str	r3, [r2, #0]
 800a8ce:	4a3f      	ldr	r2, [pc, #252]	; (800a9cc <xTaskIncrementTick+0x154>)
 800a8d0:	68fb      	ldr	r3, [r7, #12]
 800a8d2:	6013      	str	r3, [r2, #0]
 800a8d4:	4b3e      	ldr	r3, [pc, #248]	; (800a9d0 <xTaskIncrementTick+0x158>)
 800a8d6:	681b      	ldr	r3, [r3, #0]
 800a8d8:	3301      	adds	r3, #1
 800a8da:	4a3d      	ldr	r2, [pc, #244]	; (800a9d0 <xTaskIncrementTick+0x158>)
 800a8dc:	6013      	str	r3, [r2, #0]
 800a8de:	f000 faeb 	bl	800aeb8 <prvResetNextTaskUnblockTime>

		/* See if this tick has made a timeout expire.  Tasks are stored in
		the	queue in the order of their wake time - meaning once one task
		has been found whose block time has not expired there is no need to
		look any further down the list. */
		if( xConstTickCount >= xNextTaskUnblockTime )
 800a8e2:	4b3c      	ldr	r3, [pc, #240]	; (800a9d4 <xTaskIncrementTick+0x15c>)
 800a8e4:	681b      	ldr	r3, [r3, #0]
 800a8e6:	693a      	ldr	r2, [r7, #16]
 800a8e8:	429a      	cmp	r2, r3
 800a8ea:	d349      	bcc.n	800a980 <xTaskIncrementTick+0x108>
		{
			for( ;; )
			{
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a8ec:	4b36      	ldr	r3, [pc, #216]	; (800a9c8 <xTaskIncrementTick+0x150>)
 800a8ee:	681b      	ldr	r3, [r3, #0]
 800a8f0:	681b      	ldr	r3, [r3, #0]
 800a8f2:	2b00      	cmp	r3, #0
 800a8f4:	d104      	bne.n	800a900 <xTaskIncrementTick+0x88>
					/* The delayed list is empty.  Set xNextTaskUnblockTime
					to the maximum possible value so it is extremely
					unlikely that the
					if( xTickCount >= xNextTaskUnblockTime ) test will pass
					next time through. */
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a8f6:	4b37      	ldr	r3, [pc, #220]	; (800a9d4 <xTaskIncrementTick+0x15c>)
 800a8f8:	f04f 32ff 	mov.w	r2, #4294967295
 800a8fc:	601a      	str	r2, [r3, #0]
					break;
 800a8fe:	e03f      	b.n	800a980 <xTaskIncrementTick+0x108>
				{
					/* The delayed list is not empty, get the value of the
					item at the head of the delayed list.  This is the time
					at which the task at the head of the delayed list must
					be removed from the Blocked state. */
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800a900:	4b31      	ldr	r3, [pc, #196]	; (800a9c8 <xTaskIncrementTick+0x150>)
 800a902:	681b      	ldr	r3, [r3, #0]
 800a904:	68db      	ldr	r3, [r3, #12]
 800a906:	68db      	ldr	r3, [r3, #12]
 800a908:	60bb      	str	r3, [r7, #8]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800a90a:	68bb      	ldr	r3, [r7, #8]
 800a90c:	685b      	ldr	r3, [r3, #4]
 800a90e:	607b      	str	r3, [r7, #4]

					if( xConstTickCount < xItemValue )
 800a910:	693a      	ldr	r2, [r7, #16]
 800a912:	687b      	ldr	r3, [r7, #4]
 800a914:	429a      	cmp	r2, r3
 800a916:	d203      	bcs.n	800a920 <xTaskIncrementTick+0xa8>
						/* It is not time to unblock this item yet, but the
						item value is the time at which the task at the head
						of the blocked list must be removed from the Blocked
						state -	so record the item value in
						xNextTaskUnblockTime. */
						xNextTaskUnblockTime = xItemValue;
 800a918:	4a2e      	ldr	r2, [pc, #184]	; (800a9d4 <xTaskIncrementTick+0x15c>)
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	6013      	str	r3, [r2, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800a91e:	e02f      	b.n	800a980 <xTaskIncrementTick+0x108>
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* It is time to remove the item from the Blocked state. */
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800a920:	68bb      	ldr	r3, [r7, #8]
 800a922:	3304      	adds	r3, #4
 800a924:	4618      	mov	r0, r3
 800a926:	f7fe fdec 	bl	8009502 <uxListRemove>

					/* Is the task waiting on an event also?  If so remove
					it from the event list. */
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800a92a:	68bb      	ldr	r3, [r7, #8]
 800a92c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a92e:	2b00      	cmp	r3, #0
 800a930:	d004      	beq.n	800a93c <xTaskIncrementTick+0xc4>
					{
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800a932:	68bb      	ldr	r3, [r7, #8]
 800a934:	3318      	adds	r3, #24
 800a936:	4618      	mov	r0, r3
 800a938:	f7fe fde3 	bl	8009502 <uxListRemove>
						mtCOVERAGE_TEST_MARKER();
					}

					/* Place the unblocked task into the appropriate ready
					list. */
					prvAddTaskToReadyList( pxTCB );
 800a93c:	68bb      	ldr	r3, [r7, #8]
 800a93e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a940:	4b25      	ldr	r3, [pc, #148]	; (800a9d8 <xTaskIncrementTick+0x160>)
 800a942:	681b      	ldr	r3, [r3, #0]
 800a944:	429a      	cmp	r2, r3
 800a946:	d903      	bls.n	800a950 <xTaskIncrementTick+0xd8>
 800a948:	68bb      	ldr	r3, [r7, #8]
 800a94a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a94c:	4a22      	ldr	r2, [pc, #136]	; (800a9d8 <xTaskIncrementTick+0x160>)
 800a94e:	6013      	str	r3, [r2, #0]
 800a950:	68bb      	ldr	r3, [r7, #8]
 800a952:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a954:	4613      	mov	r3, r2
 800a956:	009b      	lsls	r3, r3, #2
 800a958:	4413      	add	r3, r2
 800a95a:	009b      	lsls	r3, r3, #2
 800a95c:	4a1f      	ldr	r2, [pc, #124]	; (800a9dc <xTaskIncrementTick+0x164>)
 800a95e:	441a      	add	r2, r3
 800a960:	68bb      	ldr	r3, [r7, #8]
 800a962:	3304      	adds	r3, #4
 800a964:	4619      	mov	r1, r3
 800a966:	4610      	mov	r0, r2
 800a968:	f7fe fda8 	bl	80094bc <vListInsertEnd>
					{
						/* Preemption is on, but a context switch should
						only be performed if the unblocked task has a
						priority that is equal to or higher than the
						currently executing task. */
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800a96c:	68bb      	ldr	r3, [r7, #8]
 800a96e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a970:	4b1b      	ldr	r3, [pc, #108]	; (800a9e0 <xTaskIncrementTick+0x168>)
 800a972:	681b      	ldr	r3, [r3, #0]
 800a974:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800a976:	429a      	cmp	r2, r3
 800a978:	d3b8      	bcc.n	800a8ec <xTaskIncrementTick+0x74>
						{
							xSwitchRequired = pdTRUE;
 800a97a:	2301      	movs	r3, #1
 800a97c:	617b      	str	r3, [r7, #20]
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800a97e:	e7b5      	b.n	800a8ec <xTaskIncrementTick+0x74>
		/* Tasks of equal priority to the currently running task will share
		processing time (time slice) if preemption is on, and the application
		writer has not explicitly turned time slicing off. */
		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
		{
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800a980:	4b17      	ldr	r3, [pc, #92]	; (800a9e0 <xTaskIncrementTick+0x168>)
 800a982:	681b      	ldr	r3, [r3, #0]
 800a984:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800a986:	4915      	ldr	r1, [pc, #84]	; (800a9dc <xTaskIncrementTick+0x164>)
 800a988:	4613      	mov	r3, r2
 800a98a:	009b      	lsls	r3, r3, #2
 800a98c:	4413      	add	r3, r2
 800a98e:	009b      	lsls	r3, r3, #2
 800a990:	440b      	add	r3, r1
 800a992:	681b      	ldr	r3, [r3, #0]
 800a994:	2b01      	cmp	r3, #1
 800a996:	d901      	bls.n	800a99c <xTaskIncrementTick+0x124>
			{
				xSwitchRequired = pdTRUE;
 800a998:	2301      	movs	r3, #1
 800a99a:	617b      	str	r3, [r7, #20]
		}
		#endif /* configUSE_TICK_HOOK */

		#if ( configUSE_PREEMPTION == 1 )
		{
			if( xYieldPending != pdFALSE )
 800a99c:	4b11      	ldr	r3, [pc, #68]	; (800a9e4 <xTaskIncrementTick+0x16c>)
 800a99e:	681b      	ldr	r3, [r3, #0]
 800a9a0:	2b00      	cmp	r3, #0
 800a9a2:	d007      	beq.n	800a9b4 <xTaskIncrementTick+0x13c>
			{
				xSwitchRequired = pdTRUE;
 800a9a4:	2301      	movs	r3, #1
 800a9a6:	617b      	str	r3, [r7, #20]
 800a9a8:	e004      	b.n	800a9b4 <xTaskIncrementTick+0x13c>
		}
		#endif /* configUSE_PREEMPTION */
	}
	else
	{
		++xPendedTicks;
 800a9aa:	4b0f      	ldr	r3, [pc, #60]	; (800a9e8 <xTaskIncrementTick+0x170>)
 800a9ac:	681b      	ldr	r3, [r3, #0]
 800a9ae:	3301      	adds	r3, #1
 800a9b0:	4a0d      	ldr	r2, [pc, #52]	; (800a9e8 <xTaskIncrementTick+0x170>)
 800a9b2:	6013      	str	r3, [r2, #0]
			vApplicationTickHook();
		}
		#endif
	}

	return xSwitchRequired;
 800a9b4:	697b      	ldr	r3, [r7, #20]
}
 800a9b6:	4618      	mov	r0, r3
 800a9b8:	3718      	adds	r7, #24
 800a9ba:	46bd      	mov	sp, r7
 800a9bc:	bd80      	pop	{r7, pc}
 800a9be:	bf00      	nop
 800a9c0:	20013614 	.word	0x20013614
 800a9c4:	200135f0 	.word	0x200135f0
 800a9c8:	200135a4 	.word	0x200135a4
 800a9cc:	200135a8 	.word	0x200135a8
 800a9d0:	20013604 	.word	0x20013604
 800a9d4:	2001360c 	.word	0x2001360c
 800a9d8:	200135f4 	.word	0x200135f4
 800a9dc:	2001311c 	.word	0x2001311c
 800a9e0:	20013118 	.word	0x20013118
 800a9e4:	20013600 	.word	0x20013600
 800a9e8:	200135fc 	.word	0x200135fc

0800a9ec <vTaskSwitchContext>:

#endif /* configUSE_APPLICATION_TASK_TAG */
/*-----------------------------------------------------------*/

void vTaskSwitchContext( void )
{
 800a9ec:	b580      	push	{r7, lr}
 800a9ee:	b084      	sub	sp, #16
 800a9f0:	af00      	add	r7, sp, #0
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800a9f2:	4b33      	ldr	r3, [pc, #204]	; (800aac0 <vTaskSwitchContext+0xd4>)
 800a9f4:	681b      	ldr	r3, [r3, #0]
 800a9f6:	2b00      	cmp	r3, #0
 800a9f8:	d003      	beq.n	800aa02 <vTaskSwitchContext+0x16>
	{
		/* The scheduler is currently suspended - do not allow a context
		switch. */
		xYieldPending = pdTRUE;
 800a9fa:	4b32      	ldr	r3, [pc, #200]	; (800aac4 <vTaskSwitchContext+0xd8>)
 800a9fc:	2201      	movs	r2, #1
 800a9fe:	601a      	str	r2, [r3, #0]
			for additional information. */
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
		}
		#endif /* configUSE_NEWLIB_REENTRANT */
	}
}
 800aa00:	e05a      	b.n	800aab8 <vTaskSwitchContext+0xcc>
		xYieldPending = pdFALSE;
 800aa02:	4b30      	ldr	r3, [pc, #192]	; (800aac4 <vTaskSwitchContext+0xd8>)
 800aa04:	2200      	movs	r2, #0
 800aa06:	601a      	str	r2, [r3, #0]
				ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
 800aa08:	f7f7 fc0e 	bl	8002228 <getRunTimeCounterValue>
 800aa0c:	4603      	mov	r3, r0
 800aa0e:	4a2e      	ldr	r2, [pc, #184]	; (800aac8 <vTaskSwitchContext+0xdc>)
 800aa10:	6013      	str	r3, [r2, #0]
			if( ulTotalRunTime > ulTaskSwitchedInTime )
 800aa12:	4b2d      	ldr	r3, [pc, #180]	; (800aac8 <vTaskSwitchContext+0xdc>)
 800aa14:	681a      	ldr	r2, [r3, #0]
 800aa16:	4b2d      	ldr	r3, [pc, #180]	; (800aacc <vTaskSwitchContext+0xe0>)
 800aa18:	681b      	ldr	r3, [r3, #0]
 800aa1a:	429a      	cmp	r2, r3
 800aa1c:	d909      	bls.n	800aa32 <vTaskSwitchContext+0x46>
				pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
 800aa1e:	4b2c      	ldr	r3, [pc, #176]	; (800aad0 <vTaskSwitchContext+0xe4>)
 800aa20:	681b      	ldr	r3, [r3, #0]
 800aa22:	6dd9      	ldr	r1, [r3, #92]	; 0x5c
 800aa24:	4a28      	ldr	r2, [pc, #160]	; (800aac8 <vTaskSwitchContext+0xdc>)
 800aa26:	6810      	ldr	r0, [r2, #0]
 800aa28:	4a28      	ldr	r2, [pc, #160]	; (800aacc <vTaskSwitchContext+0xe0>)
 800aa2a:	6812      	ldr	r2, [r2, #0]
 800aa2c:	1a82      	subs	r2, r0, r2
 800aa2e:	440a      	add	r2, r1
 800aa30:	65da      	str	r2, [r3, #92]	; 0x5c
			ulTaskSwitchedInTime = ulTotalRunTime;
 800aa32:	4b25      	ldr	r3, [pc, #148]	; (800aac8 <vTaskSwitchContext+0xdc>)
 800aa34:	681b      	ldr	r3, [r3, #0]
 800aa36:	4a25      	ldr	r2, [pc, #148]	; (800aacc <vTaskSwitchContext+0xe0>)
 800aa38:	6013      	str	r3, [r2, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aa3a:	4b26      	ldr	r3, [pc, #152]	; (800aad4 <vTaskSwitchContext+0xe8>)
 800aa3c:	681b      	ldr	r3, [r3, #0]
 800aa3e:	60fb      	str	r3, [r7, #12]
 800aa40:	e010      	b.n	800aa64 <vTaskSwitchContext+0x78>
 800aa42:	68fb      	ldr	r3, [r7, #12]
 800aa44:	2b00      	cmp	r3, #0
 800aa46:	d10a      	bne.n	800aa5e <vTaskSwitchContext+0x72>
	__asm volatile
 800aa48:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa4c:	f383 8811 	msr	BASEPRI, r3
 800aa50:	f3bf 8f6f 	isb	sy
 800aa54:	f3bf 8f4f 	dsb	sy
 800aa58:	607b      	str	r3, [r7, #4]
}
 800aa5a:	bf00      	nop
 800aa5c:	e7fe      	b.n	800aa5c <vTaskSwitchContext+0x70>
 800aa5e:	68fb      	ldr	r3, [r7, #12]
 800aa60:	3b01      	subs	r3, #1
 800aa62:	60fb      	str	r3, [r7, #12]
 800aa64:	491c      	ldr	r1, [pc, #112]	; (800aad8 <vTaskSwitchContext+0xec>)
 800aa66:	68fa      	ldr	r2, [r7, #12]
 800aa68:	4613      	mov	r3, r2
 800aa6a:	009b      	lsls	r3, r3, #2
 800aa6c:	4413      	add	r3, r2
 800aa6e:	009b      	lsls	r3, r3, #2
 800aa70:	440b      	add	r3, r1
 800aa72:	681b      	ldr	r3, [r3, #0]
 800aa74:	2b00      	cmp	r3, #0
 800aa76:	d0e4      	beq.n	800aa42 <vTaskSwitchContext+0x56>
 800aa78:	68fa      	ldr	r2, [r7, #12]
 800aa7a:	4613      	mov	r3, r2
 800aa7c:	009b      	lsls	r3, r3, #2
 800aa7e:	4413      	add	r3, r2
 800aa80:	009b      	lsls	r3, r3, #2
 800aa82:	4a15      	ldr	r2, [pc, #84]	; (800aad8 <vTaskSwitchContext+0xec>)
 800aa84:	4413      	add	r3, r2
 800aa86:	60bb      	str	r3, [r7, #8]
 800aa88:	68bb      	ldr	r3, [r7, #8]
 800aa8a:	685b      	ldr	r3, [r3, #4]
 800aa8c:	685a      	ldr	r2, [r3, #4]
 800aa8e:	68bb      	ldr	r3, [r7, #8]
 800aa90:	605a      	str	r2, [r3, #4]
 800aa92:	68bb      	ldr	r3, [r7, #8]
 800aa94:	685a      	ldr	r2, [r3, #4]
 800aa96:	68bb      	ldr	r3, [r7, #8]
 800aa98:	3308      	adds	r3, #8
 800aa9a:	429a      	cmp	r2, r3
 800aa9c:	d104      	bne.n	800aaa8 <vTaskSwitchContext+0xbc>
 800aa9e:	68bb      	ldr	r3, [r7, #8]
 800aaa0:	685b      	ldr	r3, [r3, #4]
 800aaa2:	685a      	ldr	r2, [r3, #4]
 800aaa4:	68bb      	ldr	r3, [r7, #8]
 800aaa6:	605a      	str	r2, [r3, #4]
 800aaa8:	68bb      	ldr	r3, [r7, #8]
 800aaaa:	685b      	ldr	r3, [r3, #4]
 800aaac:	68db      	ldr	r3, [r3, #12]
 800aaae:	4a08      	ldr	r2, [pc, #32]	; (800aad0 <vTaskSwitchContext+0xe4>)
 800aab0:	6013      	str	r3, [r2, #0]
 800aab2:	4a08      	ldr	r2, [pc, #32]	; (800aad4 <vTaskSwitchContext+0xe8>)
 800aab4:	68fb      	ldr	r3, [r7, #12]
 800aab6:	6013      	str	r3, [r2, #0]
}
 800aab8:	bf00      	nop
 800aaba:	3710      	adds	r7, #16
 800aabc:	46bd      	mov	sp, r7
 800aabe:	bd80      	pop	{r7, pc}
 800aac0:	20013614 	.word	0x20013614
 800aac4:	20013600 	.word	0x20013600
 800aac8:	2001361c 	.word	0x2001361c
 800aacc:	20013618 	.word	0x20013618
 800aad0:	20013118 	.word	0x20013118
 800aad4:	200135f4 	.word	0x200135f4
 800aad8:	2001311c 	.word	0x2001311c

0800aadc <vTaskPlaceOnEventList>:
/*-----------------------------------------------------------*/

void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
{
 800aadc:	b580      	push	{r7, lr}
 800aade:	b084      	sub	sp, #16
 800aae0:	af00      	add	r7, sp, #0
 800aae2:	6078      	str	r0, [r7, #4]
 800aae4:	6039      	str	r1, [r7, #0]
	configASSERT( pxEventList );
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	2b00      	cmp	r3, #0
 800aaea:	d10a      	bne.n	800ab02 <vTaskPlaceOnEventList+0x26>
	__asm volatile
 800aaec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aaf0:	f383 8811 	msr	BASEPRI, r3
 800aaf4:	f3bf 8f6f 	isb	sy
 800aaf8:	f3bf 8f4f 	dsb	sy
 800aafc:	60fb      	str	r3, [r7, #12]
}
 800aafe:	bf00      	nop
 800ab00:	e7fe      	b.n	800ab00 <vTaskPlaceOnEventList+0x24>

	/* Place the event list item of the TCB in the appropriate event list.
	This is placed in the list in priority order so the highest priority task
	is the first to be woken by the event.  The queue that contains the event
	list is locked, preventing simultaneous access from interrupts. */
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ab02:	4b07      	ldr	r3, [pc, #28]	; (800ab20 <vTaskPlaceOnEventList+0x44>)
 800ab04:	681b      	ldr	r3, [r3, #0]
 800ab06:	3318      	adds	r3, #24
 800ab08:	4619      	mov	r1, r3
 800ab0a:	6878      	ldr	r0, [r7, #4]
 800ab0c:	f7fe fce2 	bl	80094d4 <vListInsert>

	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800ab10:	2101      	movs	r1, #1
 800ab12:	6838      	ldr	r0, [r7, #0]
 800ab14:	f000 fb7a 	bl	800b20c <prvAddCurrentTaskToDelayedList>
}
 800ab18:	bf00      	nop
 800ab1a:	3710      	adds	r7, #16
 800ab1c:	46bd      	mov	sp, r7
 800ab1e:	bd80      	pop	{r7, pc}
 800ab20:	20013118 	.word	0x20013118

0800ab24 <vTaskPlaceOnEventListRestricted>:
/*-----------------------------------------------------------*/

#if( configUSE_TIMERS == 1 )

	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800ab24:	b580      	push	{r7, lr}
 800ab26:	b086      	sub	sp, #24
 800ab28:	af00      	add	r7, sp, #0
 800ab2a:	60f8      	str	r0, [r7, #12]
 800ab2c:	60b9      	str	r1, [r7, #8]
 800ab2e:	607a      	str	r2, [r7, #4]
		configASSERT( pxEventList );
 800ab30:	68fb      	ldr	r3, [r7, #12]
 800ab32:	2b00      	cmp	r3, #0
 800ab34:	d10a      	bne.n	800ab4c <vTaskPlaceOnEventListRestricted+0x28>
	__asm volatile
 800ab36:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab3a:	f383 8811 	msr	BASEPRI, r3
 800ab3e:	f3bf 8f6f 	isb	sy
 800ab42:	f3bf 8f4f 	dsb	sy
 800ab46:	617b      	str	r3, [r7, #20]
}
 800ab48:	bf00      	nop
 800ab4a:	e7fe      	b.n	800ab4a <vTaskPlaceOnEventListRestricted+0x26>

		/* Place the event list item of the TCB in the appropriate event list.
		In this case it is assume that this is the only task that is going to
		be waiting on this event list, so the faster vListInsertEnd() function
		can be used in place of vListInsert. */
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800ab4c:	4b0a      	ldr	r3, [pc, #40]	; (800ab78 <vTaskPlaceOnEventListRestricted+0x54>)
 800ab4e:	681b      	ldr	r3, [r3, #0]
 800ab50:	3318      	adds	r3, #24
 800ab52:	4619      	mov	r1, r3
 800ab54:	68f8      	ldr	r0, [r7, #12]
 800ab56:	f7fe fcb1 	bl	80094bc <vListInsertEnd>

		/* If the task should block indefinitely then set the block time to a
		value that will be recognised as an indefinite delay inside the
		prvAddCurrentTaskToDelayedList() function. */
		if( xWaitIndefinitely != pdFALSE )
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	2b00      	cmp	r3, #0
 800ab5e:	d002      	beq.n	800ab66 <vTaskPlaceOnEventListRestricted+0x42>
		{
			xTicksToWait = portMAX_DELAY;
 800ab60:	f04f 33ff 	mov.w	r3, #4294967295
 800ab64:	60bb      	str	r3, [r7, #8]
		}

		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800ab66:	6879      	ldr	r1, [r7, #4]
 800ab68:	68b8      	ldr	r0, [r7, #8]
 800ab6a:	f000 fb4f 	bl	800b20c <prvAddCurrentTaskToDelayedList>
	}
 800ab6e:	bf00      	nop
 800ab70:	3718      	adds	r7, #24
 800ab72:	46bd      	mov	sp, r7
 800ab74:	bd80      	pop	{r7, pc}
 800ab76:	bf00      	nop
 800ab78:	20013118 	.word	0x20013118

0800ab7c <xTaskRemoveFromEventList>:

#endif /* configUSE_TIMERS */
/*-----------------------------------------------------------*/

BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
{
 800ab7c:	b580      	push	{r7, lr}
 800ab7e:	b086      	sub	sp, #24
 800ab80:	af00      	add	r7, sp, #0
 800ab82:	6078      	str	r0, [r7, #4]
	get called - the lock count on the queue will get modified instead.  This
	means exclusive access to the event list is guaranteed here.

	This function assumes that a check has already been made to ensure that
	pxEventList is not empty. */
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ab84:	687b      	ldr	r3, [r7, #4]
 800ab86:	68db      	ldr	r3, [r3, #12]
 800ab88:	68db      	ldr	r3, [r3, #12]
 800ab8a:	613b      	str	r3, [r7, #16]
	configASSERT( pxUnblockedTCB );
 800ab8c:	693b      	ldr	r3, [r7, #16]
 800ab8e:	2b00      	cmp	r3, #0
 800ab90:	d10a      	bne.n	800aba8 <xTaskRemoveFromEventList+0x2c>
	__asm volatile
 800ab92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ab96:	f383 8811 	msr	BASEPRI, r3
 800ab9a:	f3bf 8f6f 	isb	sy
 800ab9e:	f3bf 8f4f 	dsb	sy
 800aba2:	60fb      	str	r3, [r7, #12]
}
 800aba4:	bf00      	nop
 800aba6:	e7fe      	b.n	800aba6 <xTaskRemoveFromEventList+0x2a>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800aba8:	693b      	ldr	r3, [r7, #16]
 800abaa:	3318      	adds	r3, #24
 800abac:	4618      	mov	r0, r3
 800abae:	f7fe fca8 	bl	8009502 <uxListRemove>

	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800abb2:	4b1e      	ldr	r3, [pc, #120]	; (800ac2c <xTaskRemoveFromEventList+0xb0>)
 800abb4:	681b      	ldr	r3, [r3, #0]
 800abb6:	2b00      	cmp	r3, #0
 800abb8:	d11d      	bne.n	800abf6 <xTaskRemoveFromEventList+0x7a>
	{
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800abba:	693b      	ldr	r3, [r7, #16]
 800abbc:	3304      	adds	r3, #4
 800abbe:	4618      	mov	r0, r3
 800abc0:	f7fe fc9f 	bl	8009502 <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800abc4:	693b      	ldr	r3, [r7, #16]
 800abc6:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800abc8:	4b19      	ldr	r3, [pc, #100]	; (800ac30 <xTaskRemoveFromEventList+0xb4>)
 800abca:	681b      	ldr	r3, [r3, #0]
 800abcc:	429a      	cmp	r2, r3
 800abce:	d903      	bls.n	800abd8 <xTaskRemoveFromEventList+0x5c>
 800abd0:	693b      	ldr	r3, [r7, #16]
 800abd2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800abd4:	4a16      	ldr	r2, [pc, #88]	; (800ac30 <xTaskRemoveFromEventList+0xb4>)
 800abd6:	6013      	str	r3, [r2, #0]
 800abd8:	693b      	ldr	r3, [r7, #16]
 800abda:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800abdc:	4613      	mov	r3, r2
 800abde:	009b      	lsls	r3, r3, #2
 800abe0:	4413      	add	r3, r2
 800abe2:	009b      	lsls	r3, r3, #2
 800abe4:	4a13      	ldr	r2, [pc, #76]	; (800ac34 <xTaskRemoveFromEventList+0xb8>)
 800abe6:	441a      	add	r2, r3
 800abe8:	693b      	ldr	r3, [r7, #16]
 800abea:	3304      	adds	r3, #4
 800abec:	4619      	mov	r1, r3
 800abee:	4610      	mov	r0, r2
 800abf0:	f7fe fc64 	bl	80094bc <vListInsertEnd>
 800abf4:	e005      	b.n	800ac02 <xTaskRemoveFromEventList+0x86>
	}
	else
	{
		/* The delayed and ready lists cannot be accessed, so hold this task
		pending until the scheduler is resumed. */
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800abf6:	693b      	ldr	r3, [r7, #16]
 800abf8:	3318      	adds	r3, #24
 800abfa:	4619      	mov	r1, r3
 800abfc:	480e      	ldr	r0, [pc, #56]	; (800ac38 <xTaskRemoveFromEventList+0xbc>)
 800abfe:	f7fe fc5d 	bl	80094bc <vListInsertEnd>
	}

	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800ac02:	693b      	ldr	r3, [r7, #16]
 800ac04:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ac06:	4b0d      	ldr	r3, [pc, #52]	; (800ac3c <xTaskRemoveFromEventList+0xc0>)
 800ac08:	681b      	ldr	r3, [r3, #0]
 800ac0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ac0c:	429a      	cmp	r2, r3
 800ac0e:	d905      	bls.n	800ac1c <xTaskRemoveFromEventList+0xa0>
	{
		/* Return true if the task removed from the event list has a higher
		priority than the calling task.  This allows the calling task to know if
		it should force a context switch now. */
		xReturn = pdTRUE;
 800ac10:	2301      	movs	r3, #1
 800ac12:	617b      	str	r3, [r7, #20]

		/* Mark that a yield is pending in case the user is not using the
		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
		xYieldPending = pdTRUE;
 800ac14:	4b0a      	ldr	r3, [pc, #40]	; (800ac40 <xTaskRemoveFromEventList+0xc4>)
 800ac16:	2201      	movs	r2, #1
 800ac18:	601a      	str	r2, [r3, #0]
 800ac1a:	e001      	b.n	800ac20 <xTaskRemoveFromEventList+0xa4>
	}
	else
	{
		xReturn = pdFALSE;
 800ac1c:	2300      	movs	r3, #0
 800ac1e:	617b      	str	r3, [r7, #20]
	}

	return xReturn;
 800ac20:	697b      	ldr	r3, [r7, #20]
}
 800ac22:	4618      	mov	r0, r3
 800ac24:	3718      	adds	r7, #24
 800ac26:	46bd      	mov	sp, r7
 800ac28:	bd80      	pop	{r7, pc}
 800ac2a:	bf00      	nop
 800ac2c:	20013614 	.word	0x20013614
 800ac30:	200135f4 	.word	0x200135f4
 800ac34:	2001311c 	.word	0x2001311c
 800ac38:	200135ac 	.word	0x200135ac
 800ac3c:	20013118 	.word	0x20013118
 800ac40:	20013600 	.word	0x20013600

0800ac44 <vTaskInternalSetTimeOutState>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
{
 800ac44:	b480      	push	{r7}
 800ac46:	b083      	sub	sp, #12
 800ac48:	af00      	add	r7, sp, #0
 800ac4a:	6078      	str	r0, [r7, #4]
	/* For internal use only as it does not use a critical section. */
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800ac4c:	4b06      	ldr	r3, [pc, #24]	; (800ac68 <vTaskInternalSetTimeOutState+0x24>)
 800ac4e:	681a      	ldr	r2, [r3, #0]
 800ac50:	687b      	ldr	r3, [r7, #4]
 800ac52:	601a      	str	r2, [r3, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800ac54:	4b05      	ldr	r3, [pc, #20]	; (800ac6c <vTaskInternalSetTimeOutState+0x28>)
 800ac56:	681a      	ldr	r2, [r3, #0]
 800ac58:	687b      	ldr	r3, [r7, #4]
 800ac5a:	605a      	str	r2, [r3, #4]
}
 800ac5c:	bf00      	nop
 800ac5e:	370c      	adds	r7, #12
 800ac60:	46bd      	mov	sp, r7
 800ac62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ac66:	4770      	bx	lr
 800ac68:	20013604 	.word	0x20013604
 800ac6c:	200135f0 	.word	0x200135f0

0800ac70 <xTaskCheckForTimeOut>:
/*-----------------------------------------------------------*/

BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
{
 800ac70:	b580      	push	{r7, lr}
 800ac72:	b088      	sub	sp, #32
 800ac74:	af00      	add	r7, sp, #0
 800ac76:	6078      	str	r0, [r7, #4]
 800ac78:	6039      	str	r1, [r7, #0]
BaseType_t xReturn;

	configASSERT( pxTimeOut );
 800ac7a:	687b      	ldr	r3, [r7, #4]
 800ac7c:	2b00      	cmp	r3, #0
 800ac7e:	d10a      	bne.n	800ac96 <xTaskCheckForTimeOut+0x26>
	__asm volatile
 800ac80:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac84:	f383 8811 	msr	BASEPRI, r3
 800ac88:	f3bf 8f6f 	isb	sy
 800ac8c:	f3bf 8f4f 	dsb	sy
 800ac90:	613b      	str	r3, [r7, #16]
}
 800ac92:	bf00      	nop
 800ac94:	e7fe      	b.n	800ac94 <xTaskCheckForTimeOut+0x24>
	configASSERT( pxTicksToWait );
 800ac96:	683b      	ldr	r3, [r7, #0]
 800ac98:	2b00      	cmp	r3, #0
 800ac9a:	d10a      	bne.n	800acb2 <xTaskCheckForTimeOut+0x42>
	__asm volatile
 800ac9c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aca0:	f383 8811 	msr	BASEPRI, r3
 800aca4:	f3bf 8f6f 	isb	sy
 800aca8:	f3bf 8f4f 	dsb	sy
 800acac:	60fb      	str	r3, [r7, #12]
}
 800acae:	bf00      	nop
 800acb0:	e7fe      	b.n	800acb0 <xTaskCheckForTimeOut+0x40>

	taskENTER_CRITICAL();
 800acb2:	f7fe fc9f 	bl	80095f4 <vPortEnterCritical>
	{
		/* Minor optimisation.  The tick count cannot change in this block. */
		const TickType_t xConstTickCount = xTickCount;
 800acb6:	4b1d      	ldr	r3, [pc, #116]	; (800ad2c <xTaskCheckForTimeOut+0xbc>)
 800acb8:	681b      	ldr	r3, [r3, #0]
 800acba:	61bb      	str	r3, [r7, #24]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800acbc:	687b      	ldr	r3, [r7, #4]
 800acbe:	685b      	ldr	r3, [r3, #4]
 800acc0:	69ba      	ldr	r2, [r7, #24]
 800acc2:	1ad3      	subs	r3, r2, r3
 800acc4:	617b      	str	r3, [r7, #20]
			}
			else
		#endif

		#if ( INCLUDE_vTaskSuspend == 1 )
			if( *pxTicksToWait == portMAX_DELAY )
 800acc6:	683b      	ldr	r3, [r7, #0]
 800acc8:	681b      	ldr	r3, [r3, #0]
 800acca:	f1b3 3fff 	cmp.w	r3, #4294967295
 800acce:	d102      	bne.n	800acd6 <xTaskCheckForTimeOut+0x66>
			{
				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
				specified is the maximum block time then the task should block
				indefinitely, and therefore never time out. */
				xReturn = pdFALSE;
 800acd0:	2300      	movs	r3, #0
 800acd2:	61fb      	str	r3, [r7, #28]
 800acd4:	e023      	b.n	800ad1e <xTaskCheckForTimeOut+0xae>
			}
			else
		#endif

		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800acd6:	687b      	ldr	r3, [r7, #4]
 800acd8:	681a      	ldr	r2, [r3, #0]
 800acda:	4b15      	ldr	r3, [pc, #84]	; (800ad30 <xTaskCheckForTimeOut+0xc0>)
 800acdc:	681b      	ldr	r3, [r3, #0]
 800acde:	429a      	cmp	r2, r3
 800ace0:	d007      	beq.n	800acf2 <xTaskCheckForTimeOut+0x82>
 800ace2:	687b      	ldr	r3, [r7, #4]
 800ace4:	685b      	ldr	r3, [r3, #4]
 800ace6:	69ba      	ldr	r2, [r7, #24]
 800ace8:	429a      	cmp	r2, r3
 800acea:	d302      	bcc.n	800acf2 <xTaskCheckForTimeOut+0x82>
			/* The tick count is greater than the time at which
			vTaskSetTimeout() was called, but has also overflowed since
			vTaskSetTimeOut() was called.  It must have wrapped all the way
			around and gone past again. This passed since vTaskSetTimeout()
			was called. */
			xReturn = pdTRUE;
 800acec:	2301      	movs	r3, #1
 800acee:	61fb      	str	r3, [r7, #28]
 800acf0:	e015      	b.n	800ad1e <xTaskCheckForTimeOut+0xae>
		}
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800acf2:	683b      	ldr	r3, [r7, #0]
 800acf4:	681b      	ldr	r3, [r3, #0]
 800acf6:	697a      	ldr	r2, [r7, #20]
 800acf8:	429a      	cmp	r2, r3
 800acfa:	d20b      	bcs.n	800ad14 <xTaskCheckForTimeOut+0xa4>
		{
			/* Not a genuine timeout. Adjust parameters for time remaining. */
			*pxTicksToWait -= xElapsedTime;
 800acfc:	683b      	ldr	r3, [r7, #0]
 800acfe:	681a      	ldr	r2, [r3, #0]
 800ad00:	697b      	ldr	r3, [r7, #20]
 800ad02:	1ad2      	subs	r2, r2, r3
 800ad04:	683b      	ldr	r3, [r7, #0]
 800ad06:	601a      	str	r2, [r3, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800ad08:	6878      	ldr	r0, [r7, #4]
 800ad0a:	f7ff ff9b 	bl	800ac44 <vTaskInternalSetTimeOutState>
			xReturn = pdFALSE;
 800ad0e:	2300      	movs	r3, #0
 800ad10:	61fb      	str	r3, [r7, #28]
 800ad12:	e004      	b.n	800ad1e <xTaskCheckForTimeOut+0xae>
		}
		else
		{
			*pxTicksToWait = 0;
 800ad14:	683b      	ldr	r3, [r7, #0]
 800ad16:	2200      	movs	r2, #0
 800ad18:	601a      	str	r2, [r3, #0]
			xReturn = pdTRUE;
 800ad1a:	2301      	movs	r3, #1
 800ad1c:	61fb      	str	r3, [r7, #28]
		}
	}
	taskEXIT_CRITICAL();
 800ad1e:	f7fe fc89 	bl	8009634 <vPortExitCritical>

	return xReturn;
 800ad22:	69fb      	ldr	r3, [r7, #28]
}
 800ad24:	4618      	mov	r0, r3
 800ad26:	3720      	adds	r7, #32
 800ad28:	46bd      	mov	sp, r7
 800ad2a:	bd80      	pop	{r7, pc}
 800ad2c:	200135f0 	.word	0x200135f0
 800ad30:	20013604 	.word	0x20013604

0800ad34 <vTaskMissedYield>:
/*-----------------------------------------------------------*/

void vTaskMissedYield( void )
{
 800ad34:	b480      	push	{r7}
 800ad36:	af00      	add	r7, sp, #0
	xYieldPending = pdTRUE;
 800ad38:	4b03      	ldr	r3, [pc, #12]	; (800ad48 <vTaskMissedYield+0x14>)
 800ad3a:	2201      	movs	r2, #1
 800ad3c:	601a      	str	r2, [r3, #0]
}
 800ad3e:	bf00      	nop
 800ad40:	46bd      	mov	sp, r7
 800ad42:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ad46:	4770      	bx	lr
 800ad48:	20013600 	.word	0x20013600

0800ad4c <prvIdleTask>:
 *
 * void prvIdleTask( void *pvParameters );
 *
 */
static portTASK_FUNCTION( prvIdleTask, pvParameters )
{
 800ad4c:	b580      	push	{r7, lr}
 800ad4e:	b082      	sub	sp, #8
 800ad50:	af00      	add	r7, sp, #0
 800ad52:	6078      	str	r0, [r7, #4]

	for( ;; )
	{
		/* See if any tasks have deleted themselves - if so then the idle task
		is responsible for freeing the deleted task's TCB and stack. */
		prvCheckTasksWaitingTermination();
 800ad54:	f000 f852 	bl	800adfc <prvCheckTasksWaitingTermination>

			A critical region is not required here as we are just reading from
			the list, and an occasional incorrect value will not matter.  If
			the ready list at the idle priority contains more than one task
			then a task other than the idle task is ready to execute. */
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800ad58:	4b06      	ldr	r3, [pc, #24]	; (800ad74 <prvIdleTask+0x28>)
 800ad5a:	681b      	ldr	r3, [r3, #0]
 800ad5c:	2b01      	cmp	r3, #1
 800ad5e:	d9f9      	bls.n	800ad54 <prvIdleTask+0x8>
			{
				taskYIELD();
 800ad60:	4b05      	ldr	r3, [pc, #20]	; (800ad78 <prvIdleTask+0x2c>)
 800ad62:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ad66:	601a      	str	r2, [r3, #0]
 800ad68:	f3bf 8f4f 	dsb	sy
 800ad6c:	f3bf 8f6f 	isb	sy
		prvCheckTasksWaitingTermination();
 800ad70:	e7f0      	b.n	800ad54 <prvIdleTask+0x8>
 800ad72:	bf00      	nop
 800ad74:	2001311c 	.word	0x2001311c
 800ad78:	e000ed04 	.word	0xe000ed04

0800ad7c <prvInitialiseTaskLists>:

#endif /* portUSING_MPU_WRAPPERS */
/*-----------------------------------------------------------*/

static void prvInitialiseTaskLists( void )
{
 800ad7c:	b580      	push	{r7, lr}
 800ad7e:	b082      	sub	sp, #8
 800ad80:	af00      	add	r7, sp, #0
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ad82:	2300      	movs	r3, #0
 800ad84:	607b      	str	r3, [r7, #4]
 800ad86:	e00c      	b.n	800ada2 <prvInitialiseTaskLists+0x26>
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ad88:	687a      	ldr	r2, [r7, #4]
 800ad8a:	4613      	mov	r3, r2
 800ad8c:	009b      	lsls	r3, r3, #2
 800ad8e:	4413      	add	r3, r2
 800ad90:	009b      	lsls	r3, r3, #2
 800ad92:	4a12      	ldr	r2, [pc, #72]	; (800addc <prvInitialiseTaskLists+0x60>)
 800ad94:	4413      	add	r3, r2
 800ad96:	4618      	mov	r0, r3
 800ad98:	f7fe fb82 	bl	80094a0 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ad9c:	687b      	ldr	r3, [r7, #4]
 800ad9e:	3301      	adds	r3, #1
 800ada0:	607b      	str	r3, [r7, #4]
 800ada2:	687b      	ldr	r3, [r7, #4]
 800ada4:	2b37      	cmp	r3, #55	; 0x37
 800ada6:	d9ef      	bls.n	800ad88 <prvInitialiseTaskLists+0xc>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ada8:	480d      	ldr	r0, [pc, #52]	; (800ade0 <prvInitialiseTaskLists+0x64>)
 800adaa:	f7fe fb79 	bl	80094a0 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800adae:	480d      	ldr	r0, [pc, #52]	; (800ade4 <prvInitialiseTaskLists+0x68>)
 800adb0:	f7fe fb76 	bl	80094a0 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800adb4:	480c      	ldr	r0, [pc, #48]	; (800ade8 <prvInitialiseTaskLists+0x6c>)
 800adb6:	f7fe fb73 	bl	80094a0 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800adba:	480c      	ldr	r0, [pc, #48]	; (800adec <prvInitialiseTaskLists+0x70>)
 800adbc:	f7fe fb70 	bl	80094a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800adc0:	480b      	ldr	r0, [pc, #44]	; (800adf0 <prvInitialiseTaskLists+0x74>)
 800adc2:	f7fe fb6d 	bl	80094a0 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800adc6:	4b0b      	ldr	r3, [pc, #44]	; (800adf4 <prvInitialiseTaskLists+0x78>)
 800adc8:	4a05      	ldr	r2, [pc, #20]	; (800ade0 <prvInitialiseTaskLists+0x64>)
 800adca:	601a      	str	r2, [r3, #0]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800adcc:	4b0a      	ldr	r3, [pc, #40]	; (800adf8 <prvInitialiseTaskLists+0x7c>)
 800adce:	4a05      	ldr	r2, [pc, #20]	; (800ade4 <prvInitialiseTaskLists+0x68>)
 800add0:	601a      	str	r2, [r3, #0]
}
 800add2:	bf00      	nop
 800add4:	3708      	adds	r7, #8
 800add6:	46bd      	mov	sp, r7
 800add8:	bd80      	pop	{r7, pc}
 800adda:	bf00      	nop
 800addc:	2001311c 	.word	0x2001311c
 800ade0:	2001357c 	.word	0x2001357c
 800ade4:	20013590 	.word	0x20013590
 800ade8:	200135ac 	.word	0x200135ac
 800adec:	200135c0 	.word	0x200135c0
 800adf0:	200135d8 	.word	0x200135d8
 800adf4:	200135a4 	.word	0x200135a4
 800adf8:	200135a8 	.word	0x200135a8

0800adfc <prvCheckTasksWaitingTermination>:
/*-----------------------------------------------------------*/

static void prvCheckTasksWaitingTermination( void )
{
 800adfc:	b580      	push	{r7, lr}
 800adfe:	b082      	sub	sp, #8
 800ae00:	af00      	add	r7, sp, #0
	{
		TCB_t *pxTCB;

		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
		being called too often in the idle task. */
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ae02:	e019      	b.n	800ae38 <prvCheckTasksWaitingTermination+0x3c>
		{
			taskENTER_CRITICAL();
 800ae04:	f7fe fbf6 	bl	80095f4 <vPortEnterCritical>
			{
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ae08:	4b10      	ldr	r3, [pc, #64]	; (800ae4c <prvCheckTasksWaitingTermination+0x50>)
 800ae0a:	68db      	ldr	r3, [r3, #12]
 800ae0c:	68db      	ldr	r3, [r3, #12]
 800ae0e:	607b      	str	r3, [r7, #4]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ae10:	687b      	ldr	r3, [r7, #4]
 800ae12:	3304      	adds	r3, #4
 800ae14:	4618      	mov	r0, r3
 800ae16:	f7fe fb74 	bl	8009502 <uxListRemove>
				--uxCurrentNumberOfTasks;
 800ae1a:	4b0d      	ldr	r3, [pc, #52]	; (800ae50 <prvCheckTasksWaitingTermination+0x54>)
 800ae1c:	681b      	ldr	r3, [r3, #0]
 800ae1e:	3b01      	subs	r3, #1
 800ae20:	4a0b      	ldr	r2, [pc, #44]	; (800ae50 <prvCheckTasksWaitingTermination+0x54>)
 800ae22:	6013      	str	r3, [r2, #0]
				--uxDeletedTasksWaitingCleanUp;
 800ae24:	4b0b      	ldr	r3, [pc, #44]	; (800ae54 <prvCheckTasksWaitingTermination+0x58>)
 800ae26:	681b      	ldr	r3, [r3, #0]
 800ae28:	3b01      	subs	r3, #1
 800ae2a:	4a0a      	ldr	r2, [pc, #40]	; (800ae54 <prvCheckTasksWaitingTermination+0x58>)
 800ae2c:	6013      	str	r3, [r2, #0]
			}
			taskEXIT_CRITICAL();
 800ae2e:	f7fe fc01 	bl	8009634 <vPortExitCritical>

			prvDeleteTCB( pxTCB );
 800ae32:	6878      	ldr	r0, [r7, #4]
 800ae34:	f000 f810 	bl	800ae58 <prvDeleteTCB>
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800ae38:	4b06      	ldr	r3, [pc, #24]	; (800ae54 <prvCheckTasksWaitingTermination+0x58>)
 800ae3a:	681b      	ldr	r3, [r3, #0]
 800ae3c:	2b00      	cmp	r3, #0
 800ae3e:	d1e1      	bne.n	800ae04 <prvCheckTasksWaitingTermination+0x8>
		}
	}
	#endif /* INCLUDE_vTaskDelete */
}
 800ae40:	bf00      	nop
 800ae42:	bf00      	nop
 800ae44:	3708      	adds	r7, #8
 800ae46:	46bd      	mov	sp, r7
 800ae48:	bd80      	pop	{r7, pc}
 800ae4a:	bf00      	nop
 800ae4c:	200135c0 	.word	0x200135c0
 800ae50:	200135ec 	.word	0x200135ec
 800ae54:	200135d4 	.word	0x200135d4

0800ae58 <prvDeleteTCB>:
/*-----------------------------------------------------------*/

#if ( INCLUDE_vTaskDelete == 1 )

	static void prvDeleteTCB( TCB_t *pxTCB )
	{
 800ae58:	b580      	push	{r7, lr}
 800ae5a:	b084      	sub	sp, #16
 800ae5c:	af00      	add	r7, sp, #0
 800ae5e:	6078      	str	r0, [r7, #4]
		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolidated for readability reasons. */
		{
			/* The task could have been allocated statically or dynamically, so
			check what was statically allocated before trying to free the
			memory. */
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ae60:	687b      	ldr	r3, [r7, #4]
 800ae62:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 800ae66:	2b00      	cmp	r3, #0
 800ae68:	d108      	bne.n	800ae7c <prvDeleteTCB+0x24>
			{
				/* Both the stack and TCB were allocated dynamically, so both
				must be freed. */
				vPortFree( pxTCB->pxStack );
 800ae6a:	687b      	ldr	r3, [r7, #4]
 800ae6c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ae6e:	4618      	mov	r0, r3
 800ae70:	f7fe fad8 	bl	8009424 <vPortFree>
				vPortFree( pxTCB );
 800ae74:	6878      	ldr	r0, [r7, #4]
 800ae76:	f7fe fad5 	bl	8009424 <vPortFree>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
				mtCOVERAGE_TEST_MARKER();
			}
		}
		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
	}
 800ae7a:	e018      	b.n	800aeae <prvDeleteTCB+0x56>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800ae7c:	687b      	ldr	r3, [r7, #4]
 800ae7e:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 800ae82:	2b01      	cmp	r3, #1
 800ae84:	d103      	bne.n	800ae8e <prvDeleteTCB+0x36>
				vPortFree( pxTCB );
 800ae86:	6878      	ldr	r0, [r7, #4]
 800ae88:	f7fe facc 	bl	8009424 <vPortFree>
	}
 800ae8c:	e00f      	b.n	800aeae <prvDeleteTCB+0x56>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	f893 3065 	ldrb.w	r3, [r3, #101]	; 0x65
 800ae94:	2b02      	cmp	r3, #2
 800ae96:	d00a      	beq.n	800aeae <prvDeleteTCB+0x56>
	__asm volatile
 800ae98:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ae9c:	f383 8811 	msr	BASEPRI, r3
 800aea0:	f3bf 8f6f 	isb	sy
 800aea4:	f3bf 8f4f 	dsb	sy
 800aea8:	60fb      	str	r3, [r7, #12]
}
 800aeaa:	bf00      	nop
 800aeac:	e7fe      	b.n	800aeac <prvDeleteTCB+0x54>
	}
 800aeae:	bf00      	nop
 800aeb0:	3710      	adds	r7, #16
 800aeb2:	46bd      	mov	sp, r7
 800aeb4:	bd80      	pop	{r7, pc}
	...

0800aeb8 <prvResetNextTaskUnblockTime>:

#endif /* INCLUDE_vTaskDelete */
/*-----------------------------------------------------------*/

static void prvResetNextTaskUnblockTime( void )
{
 800aeb8:	b480      	push	{r7}
 800aeba:	b083      	sub	sp, #12
 800aebc:	af00      	add	r7, sp, #0
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800aebe:	4b0c      	ldr	r3, [pc, #48]	; (800aef0 <prvResetNextTaskUnblockTime+0x38>)
 800aec0:	681b      	ldr	r3, [r3, #0]
 800aec2:	681b      	ldr	r3, [r3, #0]
 800aec4:	2b00      	cmp	r3, #0
 800aec6:	d104      	bne.n	800aed2 <prvResetNextTaskUnblockTime+0x1a>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 800aec8:	4b0a      	ldr	r3, [pc, #40]	; (800aef4 <prvResetNextTaskUnblockTime+0x3c>)
 800aeca:	f04f 32ff 	mov.w	r2, #4294967295
 800aece:	601a      	str	r2, [r3, #0]
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
	}
}
 800aed0:	e008      	b.n	800aee4 <prvResetNextTaskUnblockTime+0x2c>
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800aed2:	4b07      	ldr	r3, [pc, #28]	; (800aef0 <prvResetNextTaskUnblockTime+0x38>)
 800aed4:	681b      	ldr	r3, [r3, #0]
 800aed6:	68db      	ldr	r3, [r3, #12]
 800aed8:	68db      	ldr	r3, [r3, #12]
 800aeda:	607b      	str	r3, [r7, #4]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800aedc:	687b      	ldr	r3, [r7, #4]
 800aede:	685b      	ldr	r3, [r3, #4]
 800aee0:	4a04      	ldr	r2, [pc, #16]	; (800aef4 <prvResetNextTaskUnblockTime+0x3c>)
 800aee2:	6013      	str	r3, [r2, #0]
}
 800aee4:	bf00      	nop
 800aee6:	370c      	adds	r7, #12
 800aee8:	46bd      	mov	sp, r7
 800aeea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800aeee:	4770      	bx	lr
 800aef0:	200135a4 	.word	0x200135a4
 800aef4:	2001360c 	.word	0x2001360c

0800aef8 <xTaskGetSchedulerState>:
/*-----------------------------------------------------------*/

#if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )

	BaseType_t xTaskGetSchedulerState( void )
	{
 800aef8:	b480      	push	{r7}
 800aefa:	b083      	sub	sp, #12
 800aefc:	af00      	add	r7, sp, #0
	BaseType_t xReturn;

		if( xSchedulerRunning == pdFALSE )
 800aefe:	4b0b      	ldr	r3, [pc, #44]	; (800af2c <xTaskGetSchedulerState+0x34>)
 800af00:	681b      	ldr	r3, [r3, #0]
 800af02:	2b00      	cmp	r3, #0
 800af04:	d102      	bne.n	800af0c <xTaskGetSchedulerState+0x14>
		{
			xReturn = taskSCHEDULER_NOT_STARTED;
 800af06:	2301      	movs	r3, #1
 800af08:	607b      	str	r3, [r7, #4]
 800af0a:	e008      	b.n	800af1e <xTaskGetSchedulerState+0x26>
		}
		else
		{
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800af0c:	4b08      	ldr	r3, [pc, #32]	; (800af30 <xTaskGetSchedulerState+0x38>)
 800af0e:	681b      	ldr	r3, [r3, #0]
 800af10:	2b00      	cmp	r3, #0
 800af12:	d102      	bne.n	800af1a <xTaskGetSchedulerState+0x22>
			{
				xReturn = taskSCHEDULER_RUNNING;
 800af14:	2302      	movs	r3, #2
 800af16:	607b      	str	r3, [r7, #4]
 800af18:	e001      	b.n	800af1e <xTaskGetSchedulerState+0x26>
			}
			else
			{
				xReturn = taskSCHEDULER_SUSPENDED;
 800af1a:	2300      	movs	r3, #0
 800af1c:	607b      	str	r3, [r7, #4]
			}
		}

		return xReturn;
 800af1e:	687b      	ldr	r3, [r7, #4]
	}
 800af20:	4618      	mov	r0, r3
 800af22:	370c      	adds	r7, #12
 800af24:	46bd      	mov	sp, r7
 800af26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af2a:	4770      	bx	lr
 800af2c:	200135f8 	.word	0x200135f8
 800af30:	20013614 	.word	0x20013614

0800af34 <xTaskPriorityInherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
	{
 800af34:	b580      	push	{r7, lr}
 800af36:	b084      	sub	sp, #16
 800af38:	af00      	add	r7, sp, #0
 800af3a:	6078      	str	r0, [r7, #4]
	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 800af3c:	687b      	ldr	r3, [r7, #4]
 800af3e:	60bb      	str	r3, [r7, #8]
	BaseType_t xReturn = pdFALSE;
 800af40:	2300      	movs	r3, #0
 800af42:	60fb      	str	r3, [r7, #12]

		/* If the mutex was given back by an interrupt while the queue was
		locked then the mutex holder might now be NULL.  _RB_ Is this still
		needed as interrupts can no longer use mutexes? */
		if( pxMutexHolder != NULL )
 800af44:	687b      	ldr	r3, [r7, #4]
 800af46:	2b00      	cmp	r3, #0
 800af48:	d051      	beq.n	800afee <xTaskPriorityInherit+0xba>
		{
			/* If the holder of the mutex has a priority below the priority of
			the task attempting to obtain the mutex then it will temporarily
			inherit the priority of the task attempting to obtain the mutex. */
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800af4a:	68bb      	ldr	r3, [r7, #8]
 800af4c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af4e:	4b2a      	ldr	r3, [pc, #168]	; (800aff8 <xTaskPriorityInherit+0xc4>)
 800af50:	681b      	ldr	r3, [r3, #0]
 800af52:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af54:	429a      	cmp	r2, r3
 800af56:	d241      	bcs.n	800afdc <xTaskPriorityInherit+0xa8>
			{
				/* Adjust the mutex holder state to account for its new
				priority.  Only reset the event list item value if the value is
				not being used for anything else. */
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800af58:	68bb      	ldr	r3, [r7, #8]
 800af5a:	699b      	ldr	r3, [r3, #24]
 800af5c:	2b00      	cmp	r3, #0
 800af5e:	db06      	blt.n	800af6e <xTaskPriorityInherit+0x3a>
				{
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af60:	4b25      	ldr	r3, [pc, #148]	; (800aff8 <xTaskPriorityInherit+0xc4>)
 800af62:	681b      	ldr	r3, [r3, #0]
 800af64:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800af66:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800af6a:	68bb      	ldr	r3, [r7, #8]
 800af6c:	619a      	str	r2, [r3, #24]
					mtCOVERAGE_TEST_MARKER();
				}

				/* If the task being modified is in the ready state it will need
				to be moved into a new list. */
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800af6e:	68bb      	ldr	r3, [r7, #8]
 800af70:	6959      	ldr	r1, [r3, #20]
 800af72:	68bb      	ldr	r3, [r7, #8]
 800af74:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af76:	4613      	mov	r3, r2
 800af78:	009b      	lsls	r3, r3, #2
 800af7a:	4413      	add	r3, r2
 800af7c:	009b      	lsls	r3, r3, #2
 800af7e:	4a1f      	ldr	r2, [pc, #124]	; (800affc <xTaskPriorityInherit+0xc8>)
 800af80:	4413      	add	r3, r2
 800af82:	4299      	cmp	r1, r3
 800af84:	d122      	bne.n	800afcc <xTaskPriorityInherit+0x98>
				{
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800af86:	68bb      	ldr	r3, [r7, #8]
 800af88:	3304      	adds	r3, #4
 800af8a:	4618      	mov	r0, r3
 800af8c:	f7fe fab9 	bl	8009502 <uxListRemove>
					{
						mtCOVERAGE_TEST_MARKER();
					}

					/* Inherit the priority before being moved into the new list. */
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800af90:	4b19      	ldr	r3, [pc, #100]	; (800aff8 <xTaskPriorityInherit+0xc4>)
 800af92:	681b      	ldr	r3, [r3, #0]
 800af94:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af96:	68bb      	ldr	r3, [r7, #8]
 800af98:	62da      	str	r2, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800af9a:	68bb      	ldr	r3, [r7, #8]
 800af9c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800af9e:	4b18      	ldr	r3, [pc, #96]	; (800b000 <xTaskPriorityInherit+0xcc>)
 800afa0:	681b      	ldr	r3, [r3, #0]
 800afa2:	429a      	cmp	r2, r3
 800afa4:	d903      	bls.n	800afae <xTaskPriorityInherit+0x7a>
 800afa6:	68bb      	ldr	r3, [r7, #8]
 800afa8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afaa:	4a15      	ldr	r2, [pc, #84]	; (800b000 <xTaskPriorityInherit+0xcc>)
 800afac:	6013      	str	r3, [r2, #0]
 800afae:	68bb      	ldr	r3, [r7, #8]
 800afb0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800afb2:	4613      	mov	r3, r2
 800afb4:	009b      	lsls	r3, r3, #2
 800afb6:	4413      	add	r3, r2
 800afb8:	009b      	lsls	r3, r3, #2
 800afba:	4a10      	ldr	r2, [pc, #64]	; (800affc <xTaskPriorityInherit+0xc8>)
 800afbc:	441a      	add	r2, r3
 800afbe:	68bb      	ldr	r3, [r7, #8]
 800afc0:	3304      	adds	r3, #4
 800afc2:	4619      	mov	r1, r3
 800afc4:	4610      	mov	r0, r2
 800afc6:	f7fe fa79 	bl	80094bc <vListInsertEnd>
 800afca:	e004      	b.n	800afd6 <xTaskPriorityInherit+0xa2>
				}
				else
				{
					/* Just inherit the priority. */
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800afcc:	4b0a      	ldr	r3, [pc, #40]	; (800aff8 <xTaskPriorityInherit+0xc4>)
 800afce:	681b      	ldr	r3, [r3, #0]
 800afd0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800afd2:	68bb      	ldr	r3, [r7, #8]
 800afd4:	62da      	str	r2, [r3, #44]	; 0x2c
				}

				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );

				/* Inheritance occurred. */
				xReturn = pdTRUE;
 800afd6:	2301      	movs	r3, #1
 800afd8:	60fb      	str	r3, [r7, #12]
 800afda:	e008      	b.n	800afee <xTaskPriorityInherit+0xba>
			}
			else
			{
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800afdc:	68bb      	ldr	r3, [r7, #8]
 800afde:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800afe0:	4b05      	ldr	r3, [pc, #20]	; (800aff8 <xTaskPriorityInherit+0xc4>)
 800afe2:	681b      	ldr	r3, [r3, #0]
 800afe4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800afe6:	429a      	cmp	r2, r3
 800afe8:	d201      	bcs.n	800afee <xTaskPriorityInherit+0xba>
					current priority of the mutex holder is not lower than the
					priority of the task attempting to take the mutex.
					Therefore the mutex holder must have already inherited a
					priority, but inheritance would have occurred if that had
					not been the case. */
					xReturn = pdTRUE;
 800afea:	2301      	movs	r3, #1
 800afec:	60fb      	str	r3, [r7, #12]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
 800afee:	68fb      	ldr	r3, [r7, #12]
	}
 800aff0:	4618      	mov	r0, r3
 800aff2:	3710      	adds	r7, #16
 800aff4:	46bd      	mov	sp, r7
 800aff6:	bd80      	pop	{r7, pc}
 800aff8:	20013118 	.word	0x20013118
 800affc:	2001311c 	.word	0x2001311c
 800b000:	200135f4 	.word	0x200135f4

0800b004 <xTaskPriorityDisinherit>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
	{
 800b004:	b580      	push	{r7, lr}
 800b006:	b086      	sub	sp, #24
 800b008:	af00      	add	r7, sp, #0
 800b00a:	6078      	str	r0, [r7, #4]
	TCB_t * const pxTCB = pxMutexHolder;
 800b00c:	687b      	ldr	r3, [r7, #4]
 800b00e:	613b      	str	r3, [r7, #16]
	BaseType_t xReturn = pdFALSE;
 800b010:	2300      	movs	r3, #0
 800b012:	617b      	str	r3, [r7, #20]

		if( pxMutexHolder != NULL )
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	2b00      	cmp	r3, #0
 800b018:	d056      	beq.n	800b0c8 <xTaskPriorityDisinherit+0xc4>
		{
			/* A task can only have an inherited priority if it holds the mutex.
			If the mutex is held by a task then it cannot be given from an
			interrupt, and if a mutex is given by the holding task then it must
			be the running state task. */
			configASSERT( pxTCB == pxCurrentTCB );
 800b01a:	4b2e      	ldr	r3, [pc, #184]	; (800b0d4 <xTaskPriorityDisinherit+0xd0>)
 800b01c:	681b      	ldr	r3, [r3, #0]
 800b01e:	693a      	ldr	r2, [r7, #16]
 800b020:	429a      	cmp	r2, r3
 800b022:	d00a      	beq.n	800b03a <xTaskPriorityDisinherit+0x36>
	__asm volatile
 800b024:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b028:	f383 8811 	msr	BASEPRI, r3
 800b02c:	f3bf 8f6f 	isb	sy
 800b030:	f3bf 8f4f 	dsb	sy
 800b034:	60fb      	str	r3, [r7, #12]
}
 800b036:	bf00      	nop
 800b038:	e7fe      	b.n	800b038 <xTaskPriorityDisinherit+0x34>
			configASSERT( pxTCB->uxMutexesHeld );
 800b03a:	693b      	ldr	r3, [r7, #16]
 800b03c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b03e:	2b00      	cmp	r3, #0
 800b040:	d10a      	bne.n	800b058 <xTaskPriorityDisinherit+0x54>
	__asm volatile
 800b042:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b046:	f383 8811 	msr	BASEPRI, r3
 800b04a:	f3bf 8f6f 	isb	sy
 800b04e:	f3bf 8f4f 	dsb	sy
 800b052:	60bb      	str	r3, [r7, #8]
}
 800b054:	bf00      	nop
 800b056:	e7fe      	b.n	800b056 <xTaskPriorityDisinherit+0x52>
			( pxTCB->uxMutexesHeld )--;
 800b058:	693b      	ldr	r3, [r7, #16]
 800b05a:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b05c:	1e5a      	subs	r2, r3, #1
 800b05e:	693b      	ldr	r3, [r7, #16]
 800b060:	655a      	str	r2, [r3, #84]	; 0x54

			/* Has the holder of the mutex inherited the priority of another
			task? */
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b062:	693b      	ldr	r3, [r7, #16]
 800b064:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b066:	693b      	ldr	r3, [r7, #16]
 800b068:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b06a:	429a      	cmp	r2, r3
 800b06c:	d02c      	beq.n	800b0c8 <xTaskPriorityDisinherit+0xc4>
			{
				/* Only disinherit if no other mutexes are held. */
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b06e:	693b      	ldr	r3, [r7, #16]
 800b070:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b072:	2b00      	cmp	r3, #0
 800b074:	d128      	bne.n	800b0c8 <xTaskPriorityDisinherit+0xc4>
					/* A task can only have an inherited priority if it holds
					the mutex.  If the mutex is held by a task then it cannot be
					given from an interrupt, and if a mutex is given by the
					holding task then it must be the running state task.  Remove
					the holding task from the ready/delayed list. */
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b076:	693b      	ldr	r3, [r7, #16]
 800b078:	3304      	adds	r3, #4
 800b07a:	4618      	mov	r0, r3
 800b07c:	f7fe fa41 	bl	8009502 <uxListRemove>
					}

					/* Disinherit the priority before adding the task into the
					new	ready list. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b080:	693b      	ldr	r3, [r7, #16]
 800b082:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 800b084:	693b      	ldr	r3, [r7, #16]
 800b086:	62da      	str	r2, [r3, #44]	; 0x2c

					/* Reset the event list item value.  It cannot be in use for
					any other purpose if this task is running, and it must be
					running to give back the mutex. */
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b088:	693b      	ldr	r3, [r7, #16]
 800b08a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b08c:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800b090:	693b      	ldr	r3, [r7, #16]
 800b092:	619a      	str	r2, [r3, #24]
					prvAddTaskToReadyList( pxTCB );
 800b094:	693b      	ldr	r3, [r7, #16]
 800b096:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b098:	4b0f      	ldr	r3, [pc, #60]	; (800b0d8 <xTaskPriorityDisinherit+0xd4>)
 800b09a:	681b      	ldr	r3, [r3, #0]
 800b09c:	429a      	cmp	r2, r3
 800b09e:	d903      	bls.n	800b0a8 <xTaskPriorityDisinherit+0xa4>
 800b0a0:	693b      	ldr	r3, [r7, #16]
 800b0a2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b0a4:	4a0c      	ldr	r2, [pc, #48]	; (800b0d8 <xTaskPriorityDisinherit+0xd4>)
 800b0a6:	6013      	str	r3, [r2, #0]
 800b0a8:	693b      	ldr	r3, [r7, #16]
 800b0aa:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b0ac:	4613      	mov	r3, r2
 800b0ae:	009b      	lsls	r3, r3, #2
 800b0b0:	4413      	add	r3, r2
 800b0b2:	009b      	lsls	r3, r3, #2
 800b0b4:	4a09      	ldr	r2, [pc, #36]	; (800b0dc <xTaskPriorityDisinherit+0xd8>)
 800b0b6:	441a      	add	r2, r3
 800b0b8:	693b      	ldr	r3, [r7, #16]
 800b0ba:	3304      	adds	r3, #4
 800b0bc:	4619      	mov	r1, r3
 800b0be:	4610      	mov	r0, r2
 800b0c0:	f7fe f9fc 	bl	80094bc <vListInsertEnd>
					in an order different to that in which they were taken.
					If a context switch did not occur when the first mutex was
					returned, even if a task was waiting on it, then a context
					switch should occur when the last mutex is returned whether
					a task is waiting on it or not. */
					xReturn = pdTRUE;
 800b0c4:	2301      	movs	r3, #1
 800b0c6:	617b      	str	r3, [r7, #20]
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}

		return xReturn;
 800b0c8:	697b      	ldr	r3, [r7, #20]
	}
 800b0ca:	4618      	mov	r0, r3
 800b0cc:	3718      	adds	r7, #24
 800b0ce:	46bd      	mov	sp, r7
 800b0d0:	bd80      	pop	{r7, pc}
 800b0d2:	bf00      	nop
 800b0d4:	20013118 	.word	0x20013118
 800b0d8:	200135f4 	.word	0x200135f4
 800b0dc:	2001311c 	.word	0x2001311c

0800b0e0 <vTaskPriorityDisinheritAfterTimeout>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestPriorityWaitingTask )
	{
 800b0e0:	b580      	push	{r7, lr}
 800b0e2:	b088      	sub	sp, #32
 800b0e4:	af00      	add	r7, sp, #0
 800b0e6:	6078      	str	r0, [r7, #4]
 800b0e8:	6039      	str	r1, [r7, #0]
	TCB_t * const pxTCB = pxMutexHolder;
 800b0ea:	687b      	ldr	r3, [r7, #4]
 800b0ec:	61bb      	str	r3, [r7, #24]
	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 800b0ee:	2301      	movs	r3, #1
 800b0f0:	617b      	str	r3, [r7, #20]

		if( pxMutexHolder != NULL )
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	2b00      	cmp	r3, #0
 800b0f6:	d06a      	beq.n	800b1ce <vTaskPriorityDisinheritAfterTimeout+0xee>
		{
			/* If pxMutexHolder is not NULL then the holder must hold at least
			one mutex. */
			configASSERT( pxTCB->uxMutexesHeld );
 800b0f8:	69bb      	ldr	r3, [r7, #24]
 800b0fa:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b0fc:	2b00      	cmp	r3, #0
 800b0fe:	d10a      	bne.n	800b116 <vTaskPriorityDisinheritAfterTimeout+0x36>
	__asm volatile
 800b100:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b104:	f383 8811 	msr	BASEPRI, r3
 800b108:	f3bf 8f6f 	isb	sy
 800b10c:	f3bf 8f4f 	dsb	sy
 800b110:	60fb      	str	r3, [r7, #12]
}
 800b112:	bf00      	nop
 800b114:	e7fe      	b.n	800b114 <vTaskPriorityDisinheritAfterTimeout+0x34>

			/* Determine the priority to which the priority of the task that
			holds the mutex should be set.  This will be the greater of the
			holding task's base priority and the priority of the highest
			priority task that is waiting to obtain the mutex. */
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b116:	69bb      	ldr	r3, [r7, #24]
 800b118:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b11a:	683a      	ldr	r2, [r7, #0]
 800b11c:	429a      	cmp	r2, r3
 800b11e:	d902      	bls.n	800b126 <vTaskPriorityDisinheritAfterTimeout+0x46>
			{
				uxPriorityToUse = uxHighestPriorityWaitingTask;
 800b120:	683b      	ldr	r3, [r7, #0]
 800b122:	61fb      	str	r3, [r7, #28]
 800b124:	e002      	b.n	800b12c <vTaskPriorityDisinheritAfterTimeout+0x4c>
			}
			else
			{
				uxPriorityToUse = pxTCB->uxBasePriority;
 800b126:	69bb      	ldr	r3, [r7, #24]
 800b128:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800b12a:	61fb      	str	r3, [r7, #28]
			}

			/* Does the priority need to change? */
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b12c:	69bb      	ldr	r3, [r7, #24]
 800b12e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b130:	69fa      	ldr	r2, [r7, #28]
 800b132:	429a      	cmp	r2, r3
 800b134:	d04b      	beq.n	800b1ce <vTaskPriorityDisinheritAfterTimeout+0xee>
			{
				/* Only disinherit if no other mutexes are held.  This is a
				simplification in the priority inheritance implementation.  If
				the task that holds the mutex is also holding other mutexes then
				the other mutexes may have caused the priority inheritance. */
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b136:	69bb      	ldr	r3, [r7, #24]
 800b138:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b13a:	697a      	ldr	r2, [r7, #20]
 800b13c:	429a      	cmp	r2, r3
 800b13e:	d146      	bne.n	800b1ce <vTaskPriorityDisinheritAfterTimeout+0xee>
				{
					/* If a task has timed out because it already holds the
					mutex it was trying to obtain then it cannot of inherited
					its own priority. */
					configASSERT( pxTCB != pxCurrentTCB );
 800b140:	4b25      	ldr	r3, [pc, #148]	; (800b1d8 <vTaskPriorityDisinheritAfterTimeout+0xf8>)
 800b142:	681b      	ldr	r3, [r3, #0]
 800b144:	69ba      	ldr	r2, [r7, #24]
 800b146:	429a      	cmp	r2, r3
 800b148:	d10a      	bne.n	800b160 <vTaskPriorityDisinheritAfterTimeout+0x80>
	__asm volatile
 800b14a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b14e:	f383 8811 	msr	BASEPRI, r3
 800b152:	f3bf 8f6f 	isb	sy
 800b156:	f3bf 8f4f 	dsb	sy
 800b15a:	60bb      	str	r3, [r7, #8]
}
 800b15c:	bf00      	nop
 800b15e:	e7fe      	b.n	800b15e <vTaskPriorityDisinheritAfterTimeout+0x7e>

					/* Disinherit the priority, remembering the previous
					priority to facilitate determining the subject task's
					state. */
					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 800b160:	69bb      	ldr	r3, [r7, #24]
 800b162:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b164:	613b      	str	r3, [r7, #16]
					pxTCB->uxPriority = uxPriorityToUse;
 800b166:	69bb      	ldr	r3, [r7, #24]
 800b168:	69fa      	ldr	r2, [r7, #28]
 800b16a:	62da      	str	r2, [r3, #44]	; 0x2c

					/* Only reset the event list item value if the value is not
					being used for anything else. */
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b16c:	69bb      	ldr	r3, [r7, #24]
 800b16e:	699b      	ldr	r3, [r3, #24]
 800b170:	2b00      	cmp	r3, #0
 800b172:	db04      	blt.n	800b17e <vTaskPriorityDisinheritAfterTimeout+0x9e>
					{
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b174:	69fb      	ldr	r3, [r7, #28]
 800b176:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800b17a:	69bb      	ldr	r3, [r7, #24]
 800b17c:	619a      	str	r2, [r3, #24]
					then the task that holds the mutex could be in either the
					Ready, Blocked or Suspended states.  Only remove the task
					from its current state list if it is in the Ready state as
					the task's priority is going to change and there is one
					Ready list per priority. */
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b17e:	69bb      	ldr	r3, [r7, #24]
 800b180:	6959      	ldr	r1, [r3, #20]
 800b182:	693a      	ldr	r2, [r7, #16]
 800b184:	4613      	mov	r3, r2
 800b186:	009b      	lsls	r3, r3, #2
 800b188:	4413      	add	r3, r2
 800b18a:	009b      	lsls	r3, r3, #2
 800b18c:	4a13      	ldr	r2, [pc, #76]	; (800b1dc <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 800b18e:	4413      	add	r3, r2
 800b190:	4299      	cmp	r1, r3
 800b192:	d11c      	bne.n	800b1ce <vTaskPriorityDisinheritAfterTimeout+0xee>
					{
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b194:	69bb      	ldr	r3, [r7, #24]
 800b196:	3304      	adds	r3, #4
 800b198:	4618      	mov	r0, r3
 800b19a:	f7fe f9b2 	bl	8009502 <uxListRemove>
						else
						{
							mtCOVERAGE_TEST_MARKER();
						}

						prvAddTaskToReadyList( pxTCB );
 800b19e:	69bb      	ldr	r3, [r7, #24]
 800b1a0:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b1a2:	4b0f      	ldr	r3, [pc, #60]	; (800b1e0 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 800b1a4:	681b      	ldr	r3, [r3, #0]
 800b1a6:	429a      	cmp	r2, r3
 800b1a8:	d903      	bls.n	800b1b2 <vTaskPriorityDisinheritAfterTimeout+0xd2>
 800b1aa:	69bb      	ldr	r3, [r7, #24]
 800b1ac:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b1ae:	4a0c      	ldr	r2, [pc, #48]	; (800b1e0 <vTaskPriorityDisinheritAfterTimeout+0x100>)
 800b1b0:	6013      	str	r3, [r2, #0]
 800b1b2:	69bb      	ldr	r3, [r7, #24]
 800b1b4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800b1b6:	4613      	mov	r3, r2
 800b1b8:	009b      	lsls	r3, r3, #2
 800b1ba:	4413      	add	r3, r2
 800b1bc:	009b      	lsls	r3, r3, #2
 800b1be:	4a07      	ldr	r2, [pc, #28]	; (800b1dc <vTaskPriorityDisinheritAfterTimeout+0xfc>)
 800b1c0:	441a      	add	r2, r3
 800b1c2:	69bb      	ldr	r3, [r7, #24]
 800b1c4:	3304      	adds	r3, #4
 800b1c6:	4619      	mov	r1, r3
 800b1c8:	4610      	mov	r0, r2
 800b1ca:	f7fe f977 	bl	80094bc <vListInsertEnd>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
 800b1ce:	bf00      	nop
 800b1d0:	3720      	adds	r7, #32
 800b1d2:	46bd      	mov	sp, r7
 800b1d4:	bd80      	pop	{r7, pc}
 800b1d6:	bf00      	nop
 800b1d8:	20013118 	.word	0x20013118
 800b1dc:	2001311c 	.word	0x2001311c
 800b1e0:	200135f4 	.word	0x200135f4

0800b1e4 <pvTaskIncrementMutexHeldCount>:
/*-----------------------------------------------------------*/

#if ( configUSE_MUTEXES == 1 )

	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
	{
 800b1e4:	b480      	push	{r7}
 800b1e6:	af00      	add	r7, sp, #0
		/* If xSemaphoreCreateMutex() is called before any tasks have been created
		then pxCurrentTCB will be NULL. */
		if( pxCurrentTCB != NULL )
 800b1e8:	4b07      	ldr	r3, [pc, #28]	; (800b208 <pvTaskIncrementMutexHeldCount+0x24>)
 800b1ea:	681b      	ldr	r3, [r3, #0]
 800b1ec:	2b00      	cmp	r3, #0
 800b1ee:	d004      	beq.n	800b1fa <pvTaskIncrementMutexHeldCount+0x16>
		{
			( pxCurrentTCB->uxMutexesHeld )++;
 800b1f0:	4b05      	ldr	r3, [pc, #20]	; (800b208 <pvTaskIncrementMutexHeldCount+0x24>)
 800b1f2:	681b      	ldr	r3, [r3, #0]
 800b1f4:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800b1f6:	3201      	adds	r2, #1
 800b1f8:	655a      	str	r2, [r3, #84]	; 0x54
		}

		return pxCurrentTCB;
 800b1fa:	4b03      	ldr	r3, [pc, #12]	; (800b208 <pvTaskIncrementMutexHeldCount+0x24>)
 800b1fc:	681b      	ldr	r3, [r3, #0]
	}
 800b1fe:	4618      	mov	r0, r3
 800b200:	46bd      	mov	sp, r7
 800b202:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b206:	4770      	bx	lr
 800b208:	20013118 	.word	0x20013118

0800b20c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800b20c:	b580      	push	{r7, lr}
 800b20e:	b084      	sub	sp, #16
 800b210:	af00      	add	r7, sp, #0
 800b212:	6078      	str	r0, [r7, #4]
 800b214:	6039      	str	r1, [r7, #0]
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800b216:	4b21      	ldr	r3, [pc, #132]	; (800b29c <prvAddCurrentTaskToDelayedList+0x90>)
 800b218:	681b      	ldr	r3, [r3, #0]
 800b21a:	60fb      	str	r3, [r7, #12]
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b21c:	4b20      	ldr	r3, [pc, #128]	; (800b2a0 <prvAddCurrentTaskToDelayedList+0x94>)
 800b21e:	681b      	ldr	r3, [r3, #0]
 800b220:	3304      	adds	r3, #4
 800b222:	4618      	mov	r0, r3
 800b224:	f7fe f96d 	bl	8009502 <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800b228:	687b      	ldr	r3, [r7, #4]
 800b22a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800b22e:	d10a      	bne.n	800b246 <prvAddCurrentTaskToDelayedList+0x3a>
 800b230:	683b      	ldr	r3, [r7, #0]
 800b232:	2b00      	cmp	r3, #0
 800b234:	d007      	beq.n	800b246 <prvAddCurrentTaskToDelayedList+0x3a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b236:	4b1a      	ldr	r3, [pc, #104]	; (800b2a0 <prvAddCurrentTaskToDelayedList+0x94>)
 800b238:	681b      	ldr	r3, [r3, #0]
 800b23a:	3304      	adds	r3, #4
 800b23c:	4619      	mov	r1, r3
 800b23e:	4819      	ldr	r0, [pc, #100]	; (800b2a4 <prvAddCurrentTaskToDelayedList+0x98>)
 800b240:	f7fe f93c 	bl	80094bc <vListInsertEnd>

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800b244:	e026      	b.n	800b294 <prvAddCurrentTaskToDelayedList+0x88>
			xTimeToWake = xConstTickCount + xTicksToWait;
 800b246:	68fa      	ldr	r2, [r7, #12]
 800b248:	687b      	ldr	r3, [r7, #4]
 800b24a:	4413      	add	r3, r2
 800b24c:	60bb      	str	r3, [r7, #8]
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800b24e:	4b14      	ldr	r3, [pc, #80]	; (800b2a0 <prvAddCurrentTaskToDelayedList+0x94>)
 800b250:	681b      	ldr	r3, [r3, #0]
 800b252:	68ba      	ldr	r2, [r7, #8]
 800b254:	605a      	str	r2, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800b256:	68ba      	ldr	r2, [r7, #8]
 800b258:	68fb      	ldr	r3, [r7, #12]
 800b25a:	429a      	cmp	r2, r3
 800b25c:	d209      	bcs.n	800b272 <prvAddCurrentTaskToDelayedList+0x66>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b25e:	4b12      	ldr	r3, [pc, #72]	; (800b2a8 <prvAddCurrentTaskToDelayedList+0x9c>)
 800b260:	681a      	ldr	r2, [r3, #0]
 800b262:	4b0f      	ldr	r3, [pc, #60]	; (800b2a0 <prvAddCurrentTaskToDelayedList+0x94>)
 800b264:	681b      	ldr	r3, [r3, #0]
 800b266:	3304      	adds	r3, #4
 800b268:	4619      	mov	r1, r3
 800b26a:	4610      	mov	r0, r2
 800b26c:	f7fe f932 	bl	80094d4 <vListInsert>
}
 800b270:	e010      	b.n	800b294 <prvAddCurrentTaskToDelayedList+0x88>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800b272:	4b0e      	ldr	r3, [pc, #56]	; (800b2ac <prvAddCurrentTaskToDelayedList+0xa0>)
 800b274:	681a      	ldr	r2, [r3, #0]
 800b276:	4b0a      	ldr	r3, [pc, #40]	; (800b2a0 <prvAddCurrentTaskToDelayedList+0x94>)
 800b278:	681b      	ldr	r3, [r3, #0]
 800b27a:	3304      	adds	r3, #4
 800b27c:	4619      	mov	r1, r3
 800b27e:	4610      	mov	r0, r2
 800b280:	f7fe f928 	bl	80094d4 <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800b284:	4b0a      	ldr	r3, [pc, #40]	; (800b2b0 <prvAddCurrentTaskToDelayedList+0xa4>)
 800b286:	681b      	ldr	r3, [r3, #0]
 800b288:	68ba      	ldr	r2, [r7, #8]
 800b28a:	429a      	cmp	r2, r3
 800b28c:	d202      	bcs.n	800b294 <prvAddCurrentTaskToDelayedList+0x88>
					xNextTaskUnblockTime = xTimeToWake;
 800b28e:	4a08      	ldr	r2, [pc, #32]	; (800b2b0 <prvAddCurrentTaskToDelayedList+0xa4>)
 800b290:	68bb      	ldr	r3, [r7, #8]
 800b292:	6013      	str	r3, [r2, #0]
}
 800b294:	bf00      	nop
 800b296:	3710      	adds	r7, #16
 800b298:	46bd      	mov	sp, r7
 800b29a:	bd80      	pop	{r7, pc}
 800b29c:	200135f0 	.word	0x200135f0
 800b2a0:	20013118 	.word	0x20013118
 800b2a4:	200135d8 	.word	0x200135d8
 800b2a8:	200135a8 	.word	0x200135a8
 800b2ac:	200135a4 	.word	0x200135a4
 800b2b0:	2001360c 	.word	0x2001360c

0800b2b4 <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b2b4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800b2b6:	4c11      	ldr	r4, [pc, #68]	; (800b2fc <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800b2b8:	f7fe f99c 	bl	80095f4 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800b2bc:	6825      	ldr	r5, [r4, #0]
 800b2be:	b9bd      	cbnz	r5, 800b2f0 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800b2c0:	4f0f      	ldr	r7, [pc, #60]	; (800b300 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800b2c2:	4e10      	ldr	r6, [pc, #64]	; (800b304 <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800b2c4:	4638      	mov	r0, r7
 800b2c6:	f7fe f8eb 	bl	80094a0 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b2ca:	4630      	mov	r0, r6
 800b2cc:	f7fe f8e8 	bl	80094a0 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b2d0:	4b0d      	ldr	r3, [pc, #52]	; (800b308 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b2d2:	4a0e      	ldr	r2, [pc, #56]	; (800b30c <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800b2d4:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800b2d6:	4b0e      	ldr	r3, [pc, #56]	; (800b310 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b2d8:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800b2da:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b2dc:	200a      	movs	r0, #10
 800b2de:	4b0d      	ldr	r3, [pc, #52]	; (800b314 <prvCheckForValidListAndQueue+0x60>)
 800b2e0:	9500      	str	r5, [sp, #0]
 800b2e2:	f7fe fb98 	bl	8009a16 <xQueueGenericCreateStatic>
 800b2e6:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b2e8:	b110      	cbz	r0, 800b2f0 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b2ea:	490b      	ldr	r1, [pc, #44]	; (800b318 <prvCheckForValidListAndQueue+0x64>)
 800b2ec:	f7fe ff62 	bl	800a1b4 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b2f0:	b003      	add	sp, #12
 800b2f2:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b2f6:	f7fe b99d 	b.w	8009634 <vPortExitCritical>
 800b2fa:	bf00      	nop
 800b2fc:	20013744 	.word	0x20013744
 800b300:	200136c8 	.word	0x200136c8
 800b304:	200136dc 	.word	0x200136dc
 800b308:	20013620 	.word	0x20013620
 800b30c:	20013628 	.word	0x20013628
 800b310:	20013624 	.word	0x20013624
 800b314:	200136f4 	.word	0x200136f4
 800b318:	08029cdb 	.word	0x08029cdb

0800b31c <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b31c:	4291      	cmp	r1, r2
{
 800b31e:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b320:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b322:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b324:	d80a      	bhi.n	800b33c <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b326:	1ad2      	subs	r2, r2, r3
 800b328:	6983      	ldr	r3, [r0, #24]
 800b32a:	429a      	cmp	r2, r3
 800b32c:	d20d      	bcs.n	800b34a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b32e:	4b08      	ldr	r3, [pc, #32]	; (800b350 <prvInsertTimerInActiveList+0x34>)
 800b330:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b332:	6818      	ldr	r0, [r3, #0]
 800b334:	f7fe f8ce 	bl	80094d4 <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b338:	2000      	movs	r0, #0
}
 800b33a:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b33c:	429a      	cmp	r2, r3
 800b33e:	d201      	bcs.n	800b344 <prvInsertTimerInActiveList+0x28>
 800b340:	4299      	cmp	r1, r3
 800b342:	d202      	bcs.n	800b34a <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b344:	4b03      	ldr	r3, [pc, #12]	; (800b354 <prvInsertTimerInActiveList+0x38>)
 800b346:	1d01      	adds	r1, r0, #4
 800b348:	e7f3      	b.n	800b332 <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b34a:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b34c:	e7f5      	b.n	800b33a <prvInsertTimerInActiveList+0x1e>
 800b34e:	bf00      	nop
 800b350:	20013624 	.word	0x20013624
 800b354:	20013620 	.word	0x20013620

0800b358 <xTimerCreateTimerTask>:
{
 800b358:	b510      	push	{r4, lr}
 800b35a:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b35c:	f7ff ffaa 	bl	800b2b4 <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b360:	4b12      	ldr	r3, [pc, #72]	; (800b3ac <xTimerCreateTimerTask+0x54>)
 800b362:	681b      	ldr	r3, [r3, #0]
 800b364:	b1b3      	cbz	r3, 800b394 <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b366:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b368:	aa07      	add	r2, sp, #28
 800b36a:	a906      	add	r1, sp, #24
 800b36c:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b36e:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b372:	f7fd ff8f 	bl	8009294 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b376:	9b05      	ldr	r3, [sp, #20]
 800b378:	9302      	str	r3, [sp, #8]
 800b37a:	9b06      	ldr	r3, [sp, #24]
 800b37c:	9301      	str	r3, [sp, #4]
 800b37e:	2302      	movs	r3, #2
 800b380:	9300      	str	r3, [sp, #0]
 800b382:	9a07      	ldr	r2, [sp, #28]
 800b384:	490a      	ldr	r1, [pc, #40]	; (800b3b0 <xTimerCreateTimerTask+0x58>)
 800b386:	480b      	ldr	r0, [pc, #44]	; (800b3b4 <xTimerCreateTimerTask+0x5c>)
 800b388:	4623      	mov	r3, r4
 800b38a:	f7fe ff73 	bl	800a274 <xTaskCreateStatic>
 800b38e:	4b0a      	ldr	r3, [pc, #40]	; (800b3b8 <xTimerCreateTimerTask+0x60>)
 800b390:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b392:	b940      	cbnz	r0, 800b3a6 <xTimerCreateTimerTask+0x4e>
	__asm volatile
 800b394:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b398:	f383 8811 	msr	BASEPRI, r3
 800b39c:	f3bf 8f6f 	isb	sy
 800b3a0:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800b3a4:	e7fe      	b.n	800b3a4 <xTimerCreateTimerTask+0x4c>
}
 800b3a6:	2001      	movs	r0, #1
 800b3a8:	b008      	add	sp, #32
 800b3aa:	bd10      	pop	{r4, pc}
 800b3ac:	20013744 	.word	0x20013744
 800b3b0:	08029ce0 	.word	0x08029ce0
 800b3b4:	0800b4c1 	.word	0x0800b4c1
 800b3b8:	20013748 	.word	0x20013748

0800b3bc <xTimerGenericCommand>:
{
 800b3bc:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b3be:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800b3c0:	4604      	mov	r4, r0
{
 800b3c2:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800b3c4:	b940      	cbnz	r0, 800b3d8 <xTimerGenericCommand+0x1c>
 800b3c6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b3ca:	f383 8811 	msr	BASEPRI, r3
 800b3ce:	f3bf 8f6f 	isb	sy
 800b3d2:	f3bf 8f4f 	dsb	sy
 800b3d6:	e7fe      	b.n	800b3d6 <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800b3d8:	4d0d      	ldr	r5, [pc, #52]	; (800b410 <xTimerGenericCommand+0x54>)
 800b3da:	6828      	ldr	r0, [r5, #0]
 800b3dc:	b180      	cbz	r0, 800b400 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b3de:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b3e0:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b3e4:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b3e6:	dc0d      	bgt.n	800b404 <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b3e8:	f7ff fd86 	bl	800aef8 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b3ec:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b3ee:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b3f0:	bf08      	it	eq
 800b3f2:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b3f4:	6828      	ldr	r0, [r5, #0]
 800b3f6:	bf18      	it	ne
 800b3f8:	461a      	movne	r2, r3
 800b3fa:	4669      	mov	r1, sp
 800b3fc:	f7fe fbc0 	bl	8009b80 <xQueueGenericSend>
}
 800b400:	b004      	add	sp, #16
 800b402:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b404:	2300      	movs	r3, #0
 800b406:	4669      	mov	r1, sp
 800b408:	f7fe fc6d 	bl	8009ce6 <xQueueGenericSendFromISR>
 800b40c:	e7f8      	b.n	800b400 <xTimerGenericCommand+0x44>
 800b40e:	bf00      	nop
 800b410:	20013744 	.word	0x20013744

0800b414 <prvSampleTimeNow>:
{
 800b414:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800b418:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b4bc <prvSampleTimeNow+0xa8>
{
 800b41c:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800b41e:	f7ff fa1b 	bl	800a858 <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800b422:	f8d8 3000 	ldr.w	r3, [r8]
 800b426:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800b428:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800b42a:	d940      	bls.n	800b4ae <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b42c:	4f21      	ldr	r7, [pc, #132]	; (800b4b4 <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b42e:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b432:	683b      	ldr	r3, [r7, #0]
 800b434:	681a      	ldr	r2, [r3, #0]
 800b436:	b95a      	cbnz	r2, 800b450 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800b438:	4a1f      	ldr	r2, [pc, #124]	; (800b4b8 <prvSampleTimeNow+0xa4>)
 800b43a:	6811      	ldr	r1, [r2, #0]
 800b43c:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800b43e:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800b440:	2301      	movs	r3, #1
}
 800b442:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800b444:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800b446:	f8c8 5000 	str.w	r5, [r8]
}
 800b44a:	b004      	add	sp, #16
 800b44c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b450:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b452:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b454:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b458:	1d21      	adds	r1, r4, #4
 800b45a:	4608      	mov	r0, r1
 800b45c:	9103      	str	r1, [sp, #12]
 800b45e:	f7fe f850 	bl	8009502 <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b462:	6a23      	ldr	r3, [r4, #32]
 800b464:	4620      	mov	r0, r4
 800b466:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b468:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b46c:	9903      	ldr	r1, [sp, #12]
 800b46e:	f013 0f04 	tst.w	r3, #4
 800b472:	d0de      	beq.n	800b432 <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b474:	69a3      	ldr	r3, [r4, #24]
 800b476:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800b478:	459a      	cmp	sl, r3
 800b47a:	d205      	bcs.n	800b488 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b47c:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b47e:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b480:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b482:	f7fe f827 	bl	80094d4 <vListInsert>
 800b486:	e7d4      	b.n	800b432 <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b488:	2300      	movs	r3, #0
 800b48a:	f8cd 9000 	str.w	r9, [sp]
 800b48e:	4652      	mov	r2, sl
 800b490:	4619      	mov	r1, r3
 800b492:	4620      	mov	r0, r4
 800b494:	f7ff ff92 	bl	800b3bc <xTimerGenericCommand>
				configASSERT( xResult );
 800b498:	2800      	cmp	r0, #0
 800b49a:	d1ca      	bne.n	800b432 <prvSampleTimeNow+0x1e>
 800b49c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b4a0:	f383 8811 	msr	BASEPRI, r3
 800b4a4:	f3bf 8f6f 	isb	sy
 800b4a8:	f3bf 8f4f 	dsb	sy
 800b4ac:	e7fe      	b.n	800b4ac <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800b4ae:	2300      	movs	r3, #0
 800b4b0:	e7c7      	b.n	800b442 <prvSampleTimeNow+0x2e>
 800b4b2:	bf00      	nop
 800b4b4:	20013620 	.word	0x20013620
 800b4b8:	20013624 	.word	0x20013624
 800b4bc:	200136f0 	.word	0x200136f0

0800b4c0 <prvTimerTask>:
{
 800b4c0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b4c4:	4d6e      	ldr	r5, [pc, #440]	; (800b680 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b4c6:	4e6f      	ldr	r6, [pc, #444]	; (800b684 <prvTimerTask+0x1c4>)
{
 800b4c8:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b4ca:	682b      	ldr	r3, [r5, #0]
 800b4cc:	f8d3 8000 	ldr.w	r8, [r3]
 800b4d0:	f1b8 0f00 	cmp.w	r8, #0
 800b4d4:	d035      	beq.n	800b542 <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b4d6:	68db      	ldr	r3, [r3, #12]
 800b4d8:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b4dc:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800b4de:	f7ff f90f 	bl	800a700 <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b4e2:	a804      	add	r0, sp, #16
 800b4e4:	f7ff ff96 	bl	800b414 <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800b4e8:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b4ea:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800b4ec:	2b00      	cmp	r3, #0
 800b4ee:	d169      	bne.n	800b5c4 <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b4f0:	2c00      	cmp	r4, #0
 800b4f2:	d14c      	bne.n	800b58e <prvTimerTask+0xce>
 800b4f4:	4540      	cmp	r0, r8
 800b4f6:	d350      	bcc.n	800b59a <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800b4f8:	f7ff f910 	bl	800a71c <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b4fc:	682b      	ldr	r3, [r5, #0]
 800b4fe:	68db      	ldr	r3, [r3, #12]
 800b500:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b502:	1d38      	adds	r0, r7, #4
 800b504:	f7fd fffd 	bl	8009502 <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b508:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b50c:	0758      	lsls	r0, r3, #29
 800b50e:	d51a      	bpl.n	800b546 <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b510:	69b9      	ldr	r1, [r7, #24]
 800b512:	4643      	mov	r3, r8
 800b514:	464a      	mov	r2, r9
 800b516:	4441      	add	r1, r8
 800b518:	4638      	mov	r0, r7
 800b51a:	f7ff feff 	bl	800b31c <prvInsertTimerInActiveList>
 800b51e:	b1b0      	cbz	r0, 800b54e <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b520:	9400      	str	r4, [sp, #0]
 800b522:	4623      	mov	r3, r4
 800b524:	4642      	mov	r2, r8
 800b526:	4621      	mov	r1, r4
 800b528:	4638      	mov	r0, r7
 800b52a:	f7ff ff47 	bl	800b3bc <xTimerGenericCommand>
			configASSERT( xResult );
 800b52e:	b970      	cbnz	r0, 800b54e <prvTimerTask+0x8e>
 800b530:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b534:	f383 8811 	msr	BASEPRI, r3
 800b538:	f3bf 8f6f 	isb	sy
 800b53c:	f3bf 8f4f 	dsb	sy
 800b540:	e7fe      	b.n	800b540 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b542:	2401      	movs	r4, #1
 800b544:	e7cb      	b.n	800b4de <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b546:	f023 0301 	bic.w	r3, r3, #1
 800b54a:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b54e:	6a3b      	ldr	r3, [r7, #32]
 800b550:	4638      	mov	r0, r7
 800b552:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b554:	6830      	ldr	r0, [r6, #0]
 800b556:	2200      	movs	r2, #0
 800b558:	a904      	add	r1, sp, #16
 800b55a:	f7fe fc7a 	bl	8009e52 <xQueueReceive>
 800b55e:	2800      	cmp	r0, #0
 800b560:	d0b3      	beq.n	800b4ca <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b562:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b564:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b566:	2b00      	cmp	r3, #0
 800b568:	db2f      	blt.n	800b5ca <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b56a:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b56c:	6963      	ldr	r3, [r4, #20]
 800b56e:	2b00      	cmp	r3, #0
 800b570:	d132      	bne.n	800b5d8 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b572:	a803      	add	r0, sp, #12
 800b574:	f7ff ff4e 	bl	800b414 <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800b578:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b57a:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800b57c:	2b09      	cmp	r3, #9
 800b57e:	d8e9      	bhi.n	800b554 <prvTimerTask+0x94>
 800b580:	e8df f003 	tbb	[pc, r3]
 800b584:	572e2e2e 	.word	0x572e2e2e
 800b588:	2e2e765e 	.word	0x2e2e765e
 800b58c:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b58e:	4b3e      	ldr	r3, [pc, #248]	; (800b688 <prvTimerTask+0x1c8>)
 800b590:	681b      	ldr	r3, [r3, #0]
 800b592:	681c      	ldr	r4, [r3, #0]
 800b594:	fab4 f484 	clz	r4, r4
 800b598:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b59a:	6830      	ldr	r0, [r6, #0]
 800b59c:	4622      	mov	r2, r4
 800b59e:	eba8 0109 	sub.w	r1, r8, r9
 800b5a2:	f7fe fe44 	bl	800a22e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b5a6:	f7ff f8b9 	bl	800a71c <xTaskResumeAll>
 800b5aa:	2800      	cmp	r0, #0
 800b5ac:	d1d2      	bne.n	800b554 <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800b5ae:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b5b2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b5b6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b5ba:	f3bf 8f4f 	dsb	sy
 800b5be:	f3bf 8f6f 	isb	sy
 800b5c2:	e7c7      	b.n	800b554 <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800b5c4:	f7ff f8aa 	bl	800a71c <xTaskResumeAll>
}
 800b5c8:	e7c4      	b.n	800b554 <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b5ca:	9b05      	ldr	r3, [sp, #20]
 800b5cc:	9907      	ldr	r1, [sp, #28]
 800b5ce:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b5d0:	9b04      	ldr	r3, [sp, #16]
 800b5d2:	2b00      	cmp	r3, #0
 800b5d4:	dbbe      	blt.n	800b554 <prvTimerTask+0x94>
 800b5d6:	e7c8      	b.n	800b56a <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b5d8:	1d20      	adds	r0, r4, #4
 800b5da:	f7fd ff92 	bl	8009502 <uxListRemove>
 800b5de:	e7c8      	b.n	800b572 <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b5e0:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b5e4:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b5e6:	f043 0301 	orr.w	r3, r3, #1
 800b5ea:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b5ee:	9b05      	ldr	r3, [sp, #20]
 800b5f0:	4620      	mov	r0, r4
 800b5f2:	4419      	add	r1, r3
 800b5f4:	f7ff fe92 	bl	800b31c <prvInsertTimerInActiveList>
 800b5f8:	2800      	cmp	r0, #0
 800b5fa:	d0ab      	beq.n	800b554 <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b5fc:	6a23      	ldr	r3, [r4, #32]
 800b5fe:	4620      	mov	r0, r4
 800b600:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b602:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b606:	0759      	lsls	r1, r3, #29
 800b608:	d5a4      	bpl.n	800b554 <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b60a:	69a2      	ldr	r2, [r4, #24]
 800b60c:	9905      	ldr	r1, [sp, #20]
 800b60e:	2300      	movs	r3, #0
 800b610:	440a      	add	r2, r1
 800b612:	9300      	str	r3, [sp, #0]
 800b614:	4619      	mov	r1, r3
 800b616:	4620      	mov	r0, r4
 800b618:	f7ff fed0 	bl	800b3bc <xTimerGenericCommand>
							configASSERT( xResult );
 800b61c:	2800      	cmp	r0, #0
 800b61e:	d199      	bne.n	800b554 <prvTimerTask+0x94>
 800b620:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b624:	f383 8811 	msr	BASEPRI, r3
 800b628:	f3bf 8f6f 	isb	sy
 800b62c:	f3bf 8f4f 	dsb	sy
 800b630:	e7fe      	b.n	800b630 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b632:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b636:	f023 0301 	bic.w	r3, r3, #1
 800b63a:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800b63e:	e789      	b.n	800b554 <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b640:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b644:	f043 0301 	orr.w	r3, r3, #1
 800b648:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b64c:	9905      	ldr	r1, [sp, #20]
 800b64e:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800b650:	b941      	cbnz	r1, 800b664 <prvTimerTask+0x1a4>
 800b652:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b656:	f383 8811 	msr	BASEPRI, r3
 800b65a:	f3bf 8f6f 	isb	sy
 800b65e:	f3bf 8f4f 	dsb	sy
 800b662:	e7fe      	b.n	800b662 <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800b664:	4603      	mov	r3, r0
 800b666:	4401      	add	r1, r0
 800b668:	4620      	mov	r0, r4
 800b66a:	f7ff fe57 	bl	800b31c <prvInsertTimerInActiveList>
					break;
 800b66e:	e771      	b.n	800b554 <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800b670:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b674:	079a      	lsls	r2, r3, #30
 800b676:	d4de      	bmi.n	800b636 <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800b678:	4620      	mov	r0, r4
 800b67a:	f7fd fed3 	bl	8009424 <vPortFree>
 800b67e:	e769      	b.n	800b554 <prvTimerTask+0x94>
 800b680:	20013620 	.word	0x20013620
 800b684:	20013744 	.word	0x20013744
 800b688:	20013624 	.word	0x20013624

0800b68c <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b68c:	8880      	ldrh	r0, [r0, #4]
 800b68e:	4770      	bx	lr

0800b690 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b690:	b570      	push	{r4, r5, r6, lr}
 800b692:	6803      	ldr	r3, [r0, #0]
 800b694:	4605      	mov	r5, r0
 800b696:	460c      	mov	r4, r1
 800b698:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b69a:	2100      	movs	r1, #0
 800b69c:	4798      	blx	r3
 800b69e:	682b      	ldr	r3, [r5, #0]
 800b6a0:	4606      	mov	r6, r0
 800b6a2:	6a1b      	ldr	r3, [r3, #32]
 800b6a4:	4628      	mov	r0, r5
 800b6a6:	4798      	blx	r3
 800b6a8:	1ba4      	subs	r4, r4, r6
 800b6aa:	b2a4      	uxth	r4, r4
 800b6ac:	fbb4 f0f0 	udiv	r0, r4, r0
 800b6b0:	bd70      	pop	{r4, r5, r6, pc}

0800b6b2 <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b6b2:	2300      	movs	r3, #0
 800b6b4:	8083      	strh	r3, [r0, #4]
 800b6b6:	4770      	bx	lr

0800b6b8 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b6b8:	b510      	push	{r4, lr}
 800b6ba:	6803      	ldr	r3, [r0, #0]
 800b6bc:	8881      	ldrh	r1, [r0, #4]
 800b6be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6c0:	4604      	mov	r4, r0
 800b6c2:	4798      	blx	r3
 800b6c4:	88a3      	ldrh	r3, [r4, #4]
 800b6c6:	3301      	adds	r3, #1
 800b6c8:	80a3      	strh	r3, [r4, #4]
 800b6ca:	bd10      	pop	{r4, pc}

0800b6cc <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b6cc:	6803      	ldr	r3, [r0, #0]
 800b6ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b6d0:	4718      	bx	r3

0800b6d2 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b6d2:	4770      	bx	lr

0800b6d4 <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b6d4:	4a02      	ldr	r2, [pc, #8]	; (800b6e0 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b6d6:	6002      	str	r2, [r0, #0]
 800b6d8:	2200      	movs	r2, #0
 800b6da:	8082      	strh	r2, [r0, #4]
 800b6dc:	4770      	bx	lr
 800b6de:	bf00      	nop
 800b6e0:	08029cf0 	.word	0x08029cf0

0800b6e4 <_ZN8touchgfx9Container13getFirstChildEv>:
 800b6e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800b6e6:	4770      	bx	lr

0800b6e8 <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv>:
 800b6e8:	b510      	push	{r4, lr}
 800b6ea:	6803      	ldr	r3, [r0, #0]
 800b6ec:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800b6f0:	4604      	mov	r4, r0
 800b6f2:	4798      	blx	r3
 800b6f4:	b110      	cbz	r0, 800b6fc <_ZNK8touchgfx25AbstractProgressIndicator17invalidateContentEv+0x14>
 800b6f6:	4620      	mov	r0, r4
 800b6f8:	f7f6 fb3e 	bl	8001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800b6fc:	bd10      	pop	{r4, pc}

0800b6fe <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorXEv>:
 800b6fe:	f9b0 005c 	ldrsh.w	r0, [r0, #92]	; 0x5c
 800b702:	4770      	bx	lr

0800b704 <_ZNK8touchgfx25AbstractProgressIndicator21getProgressIndicatorYEv>:
 800b704:	f9b0 005e 	ldrsh.w	r0, [r0, #94]	; 0x5e
 800b708:	4770      	bx	lr

0800b70a <_ZNK8touchgfx25AbstractProgressIndicator25getProgressIndicatorWidthEv>:
 800b70a:	f9b0 0060 	ldrsh.w	r0, [r0, #96]	; 0x60
 800b70e:	4770      	bx	lr

0800b710 <_ZNK8touchgfx25AbstractProgressIndicator26getProgressIndicatorHeightEv>:
 800b710:	f9b0 0062 	ldrsh.w	r0, [r0, #98]	; 0x62
 800b714:	4770      	bx	lr

0800b716 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt>:
 800b716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800b718:	e9c0 1221 	strd	r1, r2, [r0, #132]	; 0x84
 800b71c:	461e      	mov	r6, r3
 800b71e:	6803      	ldr	r3, [r0, #0]
 800b720:	460f      	mov	r7, r1
 800b722:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b726:	f8d0 108c 	ldr.w	r1, [r0, #140]	; 0x8c
 800b72a:	4604      	mov	r4, r0
 800b72c:	4615      	mov	r5, r2
 800b72e:	4798      	blx	r3
 800b730:	b93e      	cbnz	r6, 800b742 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x2c>
 800b732:	1bed      	subs	r5, r5, r7
 800b734:	f8a4 5090 	strh.w	r5, [r4, #144]	; 0x90
 800b738:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800b73c:	f8a4 3092 	strh.w	r3, [r4, #146]	; 0x92
 800b740:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800b742:	f8a4 6090 	strh.w	r6, [r4, #144]	; 0x90
 800b746:	e7f7      	b.n	800b738 <_ZN8touchgfx25AbstractProgressIndicator8setRangeEiitt+0x22>

0800b748 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_RtS2_>:
 800b748:	b510      	push	{r4, lr}
 800b74a:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800b74e:	600c      	str	r4, [r1, #0]
 800b750:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b754:	6011      	str	r1, [r2, #0]
 800b756:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800b75a:	801a      	strh	r2, [r3, #0]
 800b75c:	9b02      	ldr	r3, [sp, #8]
 800b75e:	f8b0 2092 	ldrh.w	r2, [r0, #146]	; 0x92
 800b762:	801a      	strh	r2, [r3, #0]
 800b764:	bd10      	pop	{r4, pc}

0800b766 <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_Rt>:
 800b766:	b510      	push	{r4, lr}
 800b768:	f8d0 4084 	ldr.w	r4, [r0, #132]	; 0x84
 800b76c:	600c      	str	r4, [r1, #0]
 800b76e:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b772:	6011      	str	r1, [r2, #0]
 800b774:	f8b0 2090 	ldrh.w	r2, [r0, #144]	; 0x90
 800b778:	801a      	strh	r2, [r3, #0]
 800b77a:	bd10      	pop	{r4, pc}

0800b77c <_ZNK8touchgfx25AbstractProgressIndicator8getRangeERiS1_>:
 800b77c:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800b780:	600b      	str	r3, [r1, #0]
 800b782:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800b786:	6013      	str	r3, [r2, #0]
 800b788:	4770      	bx	lr

0800b78a <_ZN8touchgfx25AbstractProgressIndicator17setEasingEquationEPFstsstE>:
 800b78a:	f8c0 1094 	str.w	r1, [r0, #148]	; 0x94
 800b78e:	4770      	bx	lr

0800b790 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>:
 800b790:	f8d0 008c 	ldr.w	r0, [r0, #140]	; 0x8c
 800b794:	4770      	bx	lr

0800b796 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>:
 800b796:	f880 1054 	strb.w	r1, [r0, #84]	; 0x54
 800b79a:	4770      	bx	lr

0800b79c <_ZNK8touchgfx25AbstractProgressIndicator8getAlphaEv>:
 800b79c:	f890 0054 	ldrb.w	r0, [r0, #84]	; 0x54
 800b7a0:	4770      	bx	lr

0800b7a2 <_ZN8touchgfx25AbstractProgressIndicatorD1Ev>:
 800b7a2:	4770      	bx	lr

0800b7a4 <_ZN8touchgfx25AbstractProgressIndicatorD0Ev>:
 800b7a4:	b510      	push	{r4, lr}
 800b7a6:	21b4      	movs	r1, #180	; 0xb4
 800b7a8:	4604      	mov	r4, r0
 800b7aa:	f016 fbf6 	bl	8021f9a <_ZdlPvj>
 800b7ae:	4620      	mov	r0, r4
 800b7b0:	bd10      	pop	{r4, pc}

0800b7b2 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit>:
 800b7b2:	b570      	push	{r4, r5, r6, lr}
 800b7b4:	f8d0 5084 	ldr.w	r5, [r0, #132]	; 0x84
 800b7b8:	428d      	cmp	r5, r1
 800b7ba:	bfb8      	it	lt
 800b7bc:	460d      	movlt	r5, r1
 800b7be:	f8d0 1088 	ldr.w	r1, [r0, #136]	; 0x88
 800b7c2:	428d      	cmp	r5, r1
 800b7c4:	4604      	mov	r4, r0
 800b7c6:	bfa8      	it	ge
 800b7c8:	460d      	movge	r5, r1
 800b7ca:	4616      	mov	r6, r2
 800b7cc:	b99a      	cbnz	r2, 800b7f6 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x44>
 800b7ce:	6803      	ldr	r3, [r0, #0]
 800b7d0:	4629      	mov	r1, r5
 800b7d2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b7d6:	4798      	blx	r3
 800b7d8:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800b7dc:	b368      	cbz	r0, 800b83a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800b7de:	6803      	ldr	r3, [r0, #0]
 800b7e0:	68db      	ldr	r3, [r3, #12]
 800b7e2:	4798      	blx	r3
 800b7e4:	b348      	cbz	r0, 800b83a <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x88>
 800b7e6:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800b7ea:	6803      	ldr	r3, [r0, #0]
 800b7ec:	4621      	mov	r1, r4
 800b7ee:	689b      	ldr	r3, [r3, #8]
 800b7f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b7f4:	4718      	bx	r3
 800b7f6:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 800b7fa:	2b00      	cmp	r3, #0
 800b7fc:	dd08      	ble.n	800b810 <_ZN8touchgfx25AbstractProgressIndicator11updateValueEit+0x5e>
 800b7fe:	f006 f883 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800b802:	4621      	mov	r1, r4
 800b804:	3004      	adds	r0, #4
 800b806:	f006 f8cc 	bl	80119a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800b80a:	2300      	movs	r3, #0
 800b80c:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800b810:	6823      	ldr	r3, [r4, #0]
 800b812:	4620      	mov	r0, r4
 800b814:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800b818:	4798      	blx	r3
 800b81a:	2300      	movs	r3, #0
 800b81c:	f8c4 30a8 	str.w	r3, [r4, #168]	; 0xa8
 800b820:	e9c4 0527 	strd	r0, r5, [r4, #156]	; 0x9c
 800b824:	f8c4 60a4 	str.w	r6, [r4, #164]	; 0xa4
 800b828:	f006 f86e 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800b82c:	4621      	mov	r1, r4
 800b82e:	3004      	adds	r0, #4
 800b830:	f006 f960 	bl	8011af4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>
 800b834:	2301      	movs	r3, #1
 800b836:	f884 3098 	strb.w	r3, [r4, #152]	; 0x98
 800b83a:	bd70      	pop	{r4, r5, r6, pc}

0800b83c <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>:
 800b83c:	b510      	push	{r4, lr}
 800b83e:	f8d0 3084 	ldr.w	r3, [r0, #132]	; 0x84
 800b842:	4299      	cmp	r1, r3
 800b844:	bfb8      	it	lt
 800b846:	4619      	movlt	r1, r3
 800b848:	f8d0 3088 	ldr.w	r3, [r0, #136]	; 0x88
 800b84c:	4299      	cmp	r1, r3
 800b84e:	bfa8      	it	ge
 800b850:	4619      	movge	r1, r3
 800b852:	f8d0 308c 	ldr.w	r3, [r0, #140]	; 0x8c
 800b856:	428b      	cmp	r3, r1
 800b858:	4604      	mov	r4, r0
 800b85a:	d010      	beq.n	800b87e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b85c:	f8c0 108c 	str.w	r1, [r0, #140]	; 0x8c
 800b860:	f8d0 00ac 	ldr.w	r0, [r0, #172]	; 0xac
 800b864:	b158      	cbz	r0, 800b87e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b866:	6803      	ldr	r3, [r0, #0]
 800b868:	68db      	ldr	r3, [r3, #12]
 800b86a:	4798      	blx	r3
 800b86c:	b138      	cbz	r0, 800b87e <_ZN8touchgfx25AbstractProgressIndicator8setValueEi+0x42>
 800b86e:	f8d4 00ac 	ldr.w	r0, [r4, #172]	; 0xac
 800b872:	6803      	ldr	r3, [r0, #0]
 800b874:	4621      	mov	r1, r4
 800b876:	689b      	ldr	r3, [r3, #8]
 800b878:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800b87c:	4718      	bx	r3
 800b87e:	bd10      	pop	{r4, pc}

0800b880 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>:
 800b880:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b882:	4604      	mov	r4, r0
 800b884:	460d      	mov	r5, r1
 800b886:	b1a9      	cbz	r1, 800b8b4 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt+0x34>
 800b888:	f8b0 6092 	ldrh.w	r6, [r0, #146]	; 0x92
 800b88c:	f8b4 1090 	ldrh.w	r1, [r4, #144]	; 0x90
 800b890:	f8d4 708c 	ldr.w	r7, [r4, #140]	; 0x8c
 800b894:	e9d0 0221 	ldrd	r0, r2, [r0, #132]	; 0x84
 800b898:	ab01      	add	r3, sp, #4
 800b89a:	1a12      	subs	r2, r2, r0
 800b89c:	1b89      	subs	r1, r1, r6
 800b89e:	1a38      	subs	r0, r7, r0
 800b8a0:	f007 fab3 	bl	8012e0a <_ZN8touchgfx6muldivElllRl>
 800b8a4:	4629      	mov	r1, r5
 800b8a6:	ab01      	add	r3, sp, #4
 800b8a8:	f8b4 2090 	ldrh.w	r2, [r4, #144]	; 0x90
 800b8ac:	4430      	add	r0, r6
 800b8ae:	f007 faac 	bl	8012e0a <_ZN8touchgfx6muldivElllRl>
 800b8b2:	b285      	uxth	r5, r0
 800b8b4:	4628      	mov	r0, r5
 800b8b6:	b003      	add	sp, #12
 800b8b8:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800b8ba <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv>:
 800b8ba:	b570      	push	{r4, r5, r6, lr}
 800b8bc:	f890 3098 	ldrb.w	r3, [r0, #152]	; 0x98
 800b8c0:	4604      	mov	r4, r0
 800b8c2:	2b00      	cmp	r3, #0
 800b8c4:	d035      	beq.n	800b932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800b8c6:	e9d4 3227 	ldrd	r3, r2, [r4, #156]	; 0x9c
 800b8ca:	f8d0 00a8 	ldr.w	r0, [r0, #168]	; 0xa8
 800b8ce:	f8d4 5094 	ldr.w	r5, [r4, #148]	; 0x94
 800b8d2:	3001      	adds	r0, #1
 800b8d4:	1ad2      	subs	r2, r2, r3
 800b8d6:	b212      	sxth	r2, r2
 800b8d8:	f8c4 00a8 	str.w	r0, [r4, #168]	; 0xa8
 800b8dc:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 800b8e0:	2100      	movs	r1, #0
 800b8e2:	b280      	uxth	r0, r0
 800b8e4:	47a8      	blx	r5
 800b8e6:	f8d4 109c 	ldr.w	r1, [r4, #156]	; 0x9c
 800b8ea:	6823      	ldr	r3, [r4, #0]
 800b8ec:	4401      	add	r1, r0
 800b8ee:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800b8f2:	4620      	mov	r0, r4
 800b8f4:	4798      	blx	r3
 800b8f6:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800b8fa:	429a      	cmp	r2, r3
 800b8fc:	db19      	blt.n	800b932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800b8fe:	2500      	movs	r5, #0
 800b900:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800b904:	f006 f800 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800b908:	4621      	mov	r1, r4
 800b90a:	3004      	adds	r0, #4
 800b90c:	f006 f849 	bl	80119a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>
 800b910:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800b914:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800b918:	b158      	cbz	r0, 800b932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800b91a:	6803      	ldr	r3, [r0, #0]
 800b91c:	68db      	ldr	r3, [r3, #12]
 800b91e:	4798      	blx	r3
 800b920:	b138      	cbz	r0, 800b932 <_ZN8touchgfx25AbstractProgressIndicator15handleTickEventEv+0x78>
 800b922:	f8d4 00b0 	ldr.w	r0, [r4, #176]	; 0xb0
 800b926:	6803      	ldr	r3, [r0, #0]
 800b928:	4621      	mov	r1, r4
 800b92a:	689b      	ldr	r3, [r3, #8]
 800b92c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b930:	4718      	bx	r3
 800b932:	bd70      	pop	{r4, r5, r6, pc}

0800b934 <_ZN8touchgfx8DrawableC1Ev>:
 800b934:	4a0a      	ldr	r2, [pc, #40]	; (800b960 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800b936:	6002      	str	r2, [r0, #0]
 800b938:	2200      	movs	r2, #0
 800b93a:	8082      	strh	r2, [r0, #4]
 800b93c:	80c2      	strh	r2, [r0, #6]
 800b93e:	8102      	strh	r2, [r0, #8]
 800b940:	8142      	strh	r2, [r0, #10]
 800b942:	8182      	strh	r2, [r0, #12]
 800b944:	81c2      	strh	r2, [r0, #14]
 800b946:	8202      	strh	r2, [r0, #16]
 800b948:	8242      	strh	r2, [r0, #18]
 800b94a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800b94e:	61c2      	str	r2, [r0, #28]
 800b950:	8402      	strh	r2, [r0, #32]
 800b952:	8442      	strh	r2, [r0, #34]	; 0x22
 800b954:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800b958:	2201      	movs	r2, #1
 800b95a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800b95e:	4770      	bx	lr
 800b960:	0802a518 	.word	0x0802a518

0800b964 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800b964:	b570      	push	{r4, r5, r6, lr}
 800b966:	6803      	ldr	r3, [r0, #0]
 800b968:	4604      	mov	r4, r0
 800b96a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800b96c:	4615      	mov	r5, r2
 800b96e:	4798      	blx	r3
 800b970:	6823      	ldr	r3, [r4, #0]
 800b972:	4629      	mov	r1, r5
 800b974:	4620      	mov	r0, r4
 800b976:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800b978:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800b97c:	4718      	bx	r3

0800b97e <_ZN8touchgfx25AbstractProgressIndicator28setProgressIndicatorPositionEssss>:
 800b97e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b982:	4604      	mov	r4, r0
 800b984:	f9bd 7018 	ldrsh.w	r7, [sp, #24]
 800b988:	f8a4 105c 	strh.w	r1, [r4, #92]	; 0x5c
 800b98c:	460e      	mov	r6, r1
 800b98e:	4615      	mov	r5, r2
 800b990:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 800b994:	4619      	mov	r1, r3
 800b996:	463a      	mov	r2, r7
 800b998:	3058      	adds	r0, #88	; 0x58
 800b99a:	4698      	mov	r8, r3
 800b99c:	f7ff ffe2 	bl	800b964 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800b9a0:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800b9a4:	4446      	add	r6, r8
 800b9a6:	42b3      	cmp	r3, r6
 800b9a8:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800b9ac:	bfb8      	it	lt
 800b9ae:	8126      	strhlt	r6, [r4, #8]
 800b9b0:	443d      	add	r5, r7
 800b9b2:	42ab      	cmp	r3, r5
 800b9b4:	bfb8      	it	lt
 800b9b6:	8165      	strhlt	r5, [r4, #10]
 800b9b8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800b9bc <_ZN8touchgfx25AbstractProgressIndicator13setBackgroundERKNS_6BitmapE>:
 800b9bc:	b510      	push	{r4, lr}
 800b9be:	4604      	mov	r4, r0
 800b9c0:	302c      	adds	r0, #44	; 0x2c
 800b9c2:	f003 fbb4 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800b9c6:	f9b4 2036 	ldrsh.w	r2, [r4, #54]	; 0x36
 800b9ca:	f9b4 1034 	ldrsh.w	r1, [r4, #52]	; 0x34
 800b9ce:	4620      	mov	r0, r4
 800b9d0:	f7ff ffc8 	bl	800b964 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800b9d4:	bd10      	pop	{r4, pc}
	...

0800b9d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>:
 800b9d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800b9da:	4604      	mov	r4, r0
 800b9dc:	4626      	mov	r6, r4
 800b9de:	2500      	movs	r5, #0
 800b9e0:	f7ff ffa8 	bl	800b934 <_ZN8touchgfx8DrawableC1Ev>
 800b9e4:	4b23      	ldr	r3, [pc, #140]	; (800ba74 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0x9c>)
 800b9e6:	62a5      	str	r5, [r4, #40]	; 0x28
 800b9e8:	f846 3b2c 	str.w	r3, [r6], #44
 800b9ec:	2226      	movs	r2, #38	; 0x26
 800b9ee:	4629      	mov	r1, r5
 800b9f0:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800b9f4:	4630      	mov	r0, r6
 800b9f6:	f8ad 7004 	strh.w	r7, [sp, #4]
 800b9fa:	f017 f96d 	bl	8022cd8 <memset>
 800b9fe:	4630      	mov	r0, r6
 800ba00:	f7ff ff98 	bl	800b934 <_ZN8touchgfx8DrawableC1Ev>
 800ba04:	a902      	add	r1, sp, #8
 800ba06:	4b1c      	ldr	r3, [pc, #112]	; (800ba78 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa0>)
 800ba08:	62e3      	str	r3, [r4, #44]	; 0x2c
 800ba0a:	f831 3d04 	ldrh.w	r3, [r1, #-4]!
 800ba0e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800ba12:	f884 7054 	strb.w	r7, [r4, #84]	; 0x54
 800ba16:	4630      	mov	r0, r6
 800ba18:	f104 0758 	add.w	r7, r4, #88	; 0x58
 800ba1c:	f003 fb87 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800ba20:	4638      	mov	r0, r7
 800ba22:	f7ff ff87 	bl	800b934 <_ZN8touchgfx8DrawableC1Ev>
 800ba26:	4b15      	ldr	r3, [pc, #84]	; (800ba7c <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa4>)
 800ba28:	65a3      	str	r3, [r4, #88]	; 0x58
 800ba2a:	2364      	movs	r3, #100	; 0x64
 800ba2c:	e9c4 3522 	strd	r3, r5, [r4, #136]	; 0x88
 800ba30:	f8c4 3090 	str.w	r3, [r4, #144]	; 0x90
 800ba34:	4b12      	ldr	r3, [pc, #72]	; (800ba80 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev+0xa8>)
 800ba36:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800ba3a:	4629      	mov	r1, r5
 800ba3c:	4630      	mov	r0, r6
 800ba3e:	e9c4 5520 	strd	r5, r5, [r4, #128]	; 0x80
 800ba42:	f884 5098 	strb.w	r5, [r4, #152]	; 0x98
 800ba46:	e9c4 5527 	strd	r5, r5, [r4, #156]	; 0x9c
 800ba4a:	e9c4 5529 	strd	r5, r5, [r4, #164]	; 0xa4
 800ba4e:	e9c4 552b 	strd	r5, r5, [r4, #172]	; 0xac
 800ba52:	f7f6 f8eb 	bl	8001c2c <_ZN8touchgfx8Drawable4setXEs>
 800ba56:	4629      	mov	r1, r5
 800ba58:	4630      	mov	r0, r6
 800ba5a:	f7f6 f8e9 	bl	8001c30 <_ZN8touchgfx8Drawable4setYEs>
 800ba5e:	4631      	mov	r1, r6
 800ba60:	4620      	mov	r0, r4
 800ba62:	f000 f819 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba66:	4620      	mov	r0, r4
 800ba68:	4639      	mov	r1, r7
 800ba6a:	f000 f815 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800ba6e:	4620      	mov	r0, r4
 800ba70:	b003      	add	sp, #12
 800ba72:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ba74:	08029d24 	.word	0x08029d24
 800ba78:	0802a450 	.word	0x0802a450
 800ba7c:	08029df8 	.word	0x08029df8
 800ba80:	080134e3 	.word	0x080134e3

0800ba84 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800ba84:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba86:	2000      	movs	r0, #0
 800ba88:	b12b      	cbz	r3, 800ba96 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba8a:	b920      	cbnz	r0, 800ba96 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba8c:	1a5a      	subs	r2, r3, r1
 800ba8e:	4250      	negs	r0, r2
 800ba90:	4150      	adcs	r0, r2
 800ba92:	699b      	ldr	r3, [r3, #24]
 800ba94:	e7f8      	b.n	800ba88 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ba96:	4770      	bx	lr

0800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ba98:	2300      	movs	r3, #0
 800ba9a:	6148      	str	r0, [r1, #20]
 800ba9c:	618b      	str	r3, [r1, #24]
 800ba9e:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800baa0:	b913      	cbnz	r3, 800baa8 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800baa2:	6281      	str	r1, [r0, #40]	; 0x28
 800baa4:	4770      	bx	lr
 800baa6:	4613      	mov	r3, r2
 800baa8:	699a      	ldr	r2, [r3, #24]
 800baaa:	2a00      	cmp	r2, #0
 800baac:	d1fb      	bne.n	800baa6 <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800baae:	6199      	str	r1, [r3, #24]
 800bab0:	4770      	bx	lr

0800bab2 <_ZN8touchgfx9Container9removeAllEv>:
 800bab2:	2200      	movs	r2, #0
 800bab4:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bab6:	b123      	cbz	r3, 800bac2 <_ZN8touchgfx9Container9removeAllEv+0x10>
 800bab8:	6999      	ldr	r1, [r3, #24]
 800baba:	6281      	str	r1, [r0, #40]	; 0x28
 800babc:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800bac0:	e7f8      	b.n	800bab4 <_ZN8touchgfx9Container9removeAllEv+0x2>
 800bac2:	4770      	bx	lr

0800bac4 <_ZN8touchgfx9Container6unlinkEv>:
 800bac4:	2300      	movs	r3, #0
 800bac6:	6283      	str	r3, [r0, #40]	; 0x28
 800bac8:	4770      	bx	lr

0800baca <_ZNK8touchgfx9Container12getSolidRectEv>:
 800baca:	2200      	movs	r2, #0
 800bacc:	8002      	strh	r2, [r0, #0]
 800bace:	8042      	strh	r2, [r0, #2]
 800bad0:	8082      	strh	r2, [r0, #4]
 800bad2:	80c2      	strh	r2, [r0, #6]
 800bad4:	4770      	bx	lr

0800bad6 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800bad6:	b570      	push	{r4, r5, r6, lr}
 800bad8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bada:	460d      	mov	r5, r1
 800badc:	4616      	mov	r6, r2
 800bade:	b13c      	cbz	r4, 800baf0 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800bae0:	6823      	ldr	r3, [r4, #0]
 800bae2:	4620      	mov	r0, r4
 800bae4:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800bae6:	4632      	mov	r2, r6
 800bae8:	4629      	mov	r1, r5
 800baea:	4798      	blx	r3
 800baec:	69a4      	ldr	r4, [r4, #24]
 800baee:	e7f6      	b.n	800bade <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800baf0:	bd70      	pop	{r4, r5, r6, pc}

0800baf2 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800baf2:	b538      	push	{r3, r4, r5, lr}
 800baf4:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800baf6:	460d      	mov	r5, r1
 800baf8:	b134      	cbz	r4, 800bb08 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800bafa:	682b      	ldr	r3, [r5, #0]
 800bafc:	4621      	mov	r1, r4
 800bafe:	689b      	ldr	r3, [r3, #8]
 800bb00:	4628      	mov	r0, r5
 800bb02:	4798      	blx	r3
 800bb04:	69a4      	ldr	r4, [r4, #24]
 800bb06:	e7f7      	b.n	800baf8 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800bb08:	bd38      	pop	{r3, r4, r5, pc}

0800bb0a <_ZN8touchgfx9ContainerD1Ev>:
 800bb0a:	4770      	bx	lr

0800bb0c <_ZN8touchgfx9ContainerD0Ev>:
 800bb0c:	b510      	push	{r4, lr}
 800bb0e:	212c      	movs	r1, #44	; 0x2c
 800bb10:	4604      	mov	r4, r0
 800bb12:	f016 fa42 	bl	8021f9a <_ZdlPvj>
 800bb16:	4620      	mov	r0, r4
 800bb18:	bd10      	pop	{r4, pc}

0800bb1a <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800bb1a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb1c:	b19b      	cbz	r3, 800bb46 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb1e:	428b      	cmp	r3, r1
 800bb20:	d109      	bne.n	800bb36 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800bb22:	699a      	ldr	r2, [r3, #24]
 800bb24:	2100      	movs	r1, #0
 800bb26:	6159      	str	r1, [r3, #20]
 800bb28:	6282      	str	r2, [r0, #40]	; 0x28
 800bb2a:	b902      	cbnz	r2, 800bb2e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800bb2c:	4770      	bx	lr
 800bb2e:	6199      	str	r1, [r3, #24]
 800bb30:	4770      	bx	lr
 800bb32:	4613      	mov	r3, r2
 800bb34:	b13a      	cbz	r2, 800bb46 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800bb36:	699a      	ldr	r2, [r3, #24]
 800bb38:	428a      	cmp	r2, r1
 800bb3a:	d1fa      	bne.n	800bb32 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bb3c:	698a      	ldr	r2, [r1, #24]
 800bb3e:	619a      	str	r2, [r3, #24]
 800bb40:	2300      	movs	r3, #0
 800bb42:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800bb46:	4770      	bx	lr

0800bb48 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bb48:	b410      	push	{r4}
 800bb4a:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bb4c:	4604      	mov	r4, r0
 800bb4e:	b92b      	cbnz	r3, 800bb5c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bb50:	6803      	ldr	r3, [r0, #0]
 800bb52:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bb56:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bb58:	4611      	mov	r1, r2
 800bb5a:	4718      	bx	r3
 800bb5c:	b941      	cbnz	r1, 800bb70 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bb5e:	6193      	str	r3, [r2, #24]
 800bb60:	6282      	str	r2, [r0, #40]	; 0x28
 800bb62:	6154      	str	r4, [r2, #20]
 800bb64:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bb68:	4770      	bx	lr
 800bb6a:	4603      	mov	r3, r0
 800bb6c:	2800      	cmp	r0, #0
 800bb6e:	d0f9      	beq.n	800bb64 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bb70:	4299      	cmp	r1, r3
 800bb72:	6998      	ldr	r0, [r3, #24]
 800bb74:	d1f9      	bne.n	800bb6a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800bb76:	6190      	str	r0, [r2, #24]
 800bb78:	618a      	str	r2, [r1, #24]
 800bb7a:	e7f2      	b.n	800bb62 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800bb7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800bb7c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bb80:	461f      	mov	r7, r3
 800bb82:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bb86:	460d      	mov	r5, r1
 800bb88:	4616      	mov	r6, r2
 800bb8a:	b103      	cbz	r3, 800bb8e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bb8c:	6038      	str	r0, [r7, #0]
 800bb8e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb90:	b314      	cbz	r4, 800bbd8 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bb92:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bb96:	b1eb      	cbz	r3, 800bbd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb98:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bb9c:	428d      	cmp	r5, r1
 800bb9e:	db19      	blt.n	800bbd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bba0:	8923      	ldrh	r3, [r4, #8]
 800bba2:	b289      	uxth	r1, r1
 800bba4:	440b      	add	r3, r1
 800bba6:	b21b      	sxth	r3, r3
 800bba8:	429d      	cmp	r5, r3
 800bbaa:	da13      	bge.n	800bbd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbac:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bbb0:	4296      	cmp	r6, r2
 800bbb2:	db0f      	blt.n	800bbd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbb4:	8963      	ldrh	r3, [r4, #10]
 800bbb6:	b292      	uxth	r2, r2
 800bbb8:	4413      	add	r3, r2
 800bbba:	b21b      	sxth	r3, r3
 800bbbc:	429e      	cmp	r6, r3
 800bbbe:	da09      	bge.n	800bbd4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bbc0:	6823      	ldr	r3, [r4, #0]
 800bbc2:	1ab2      	subs	r2, r6, r2
 800bbc4:	1a69      	subs	r1, r5, r1
 800bbc6:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800bbca:	b212      	sxth	r2, r2
 800bbcc:	463b      	mov	r3, r7
 800bbce:	b209      	sxth	r1, r1
 800bbd0:	4620      	mov	r0, r4
 800bbd2:	47c0      	blx	r8
 800bbd4:	69a4      	ldr	r4, [r4, #24]
 800bbd6:	e7db      	b.n	800bb90 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bbd8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bbdc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bbdc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbe0:	4c6e      	ldr	r4, [pc, #440]	; (800bd9c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bbe2:	b0a1      	sub	sp, #132	; 0x84
 800bbe4:	6824      	ldr	r4, [r4, #0]
 800bbe6:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800bbe8:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800bbec:	9303      	str	r3, [sp, #12]
 800bbee:	2400      	movs	r4, #0
 800bbf0:	802c      	strh	r4, [r5, #0]
 800bbf2:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800bbf4:	802c      	strh	r4, [r5, #0]
 800bbf6:	601c      	str	r4, [r3, #0]
 800bbf8:	4606      	mov	r6, r0
 800bbfa:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800bbfe:	f7ff ffbd 	bl	800bb7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bc02:	f1b9 0f03 	cmp.w	r9, #3
 800bc06:	f340 80c2 	ble.w	800bd8e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800bc0a:	4631      	mov	r1, r6
 800bc0c:	a80c      	add	r0, sp, #48	; 0x30
 800bc0e:	f006 ffcd 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc12:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800bc16:	9306      	str	r3, [sp, #24]
 800bc18:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800bc1c:	9307      	str	r3, [sp, #28]
 800bc1e:	9b03      	ldr	r3, [sp, #12]
 800bc20:	f8d3 a000 	ldr.w	sl, [r3]
 800bc24:	f1ba 0f00 	cmp.w	sl, #0
 800bc28:	f000 80b4 	beq.w	800bd94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800bc2c:	4651      	mov	r1, sl
 800bc2e:	a810      	add	r0, sp, #64	; 0x40
 800bc30:	f006 ffbc 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc34:	9b01      	ldr	r3, [sp, #4]
 800bc36:	9a06      	ldr	r2, [sp, #24]
 800bc38:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800bc3c:	189d      	adds	r5, r3, r2
 800bc3e:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800bc42:	9a07      	ldr	r2, [sp, #28]
 800bc44:	2002      	movs	r0, #2
 800bc46:	fb91 f1f0 	sdiv	r1, r1, r0
 800bc4a:	4419      	add	r1, r3
 800bc4c:	1a6d      	subs	r5, r5, r1
 800bc4e:	9b02      	ldr	r3, [sp, #8]
 800bc50:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bc54:	4413      	add	r3, r2
 800bc56:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800bc5a:	fb92 f2f0 	sdiv	r2, r2, r0
 800bc5e:	440a      	add	r2, r1
 800bc60:	1a9b      	subs	r3, r3, r2
 800bc62:	435b      	muls	r3, r3
 800bc64:	fb05 3505 	mla	r5, r5, r5, r3
 800bc68:	4f4d      	ldr	r7, [pc, #308]	; (800bda0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800bc6a:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bc6c:	ac10      	add	r4, sp, #64	; 0x40
 800bc6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bc70:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bc72:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bc74:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bc76:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bc78:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800bc7c:	f1b9 0f0c 	cmp.w	r9, #12
 800bc80:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bc84:	f04f 0303 	mov.w	r3, #3
 800bc88:	bfc8      	it	gt
 800bc8a:	4698      	movgt	r8, r3
 800bc8c:	f8cd 9000 	str.w	r9, [sp]
 800bc90:	f04f 0400 	mov.w	r4, #0
 800bc94:	bfdc      	itt	le
 800bc96:	f109 32ff 	addle.w	r2, r9, #4294967295
 800bc9a:	fb92 f8f3 	sdivle	r8, r2, r3
 800bc9e:	1c63      	adds	r3, r4, #1
 800bca0:	aa10      	add	r2, sp, #64	; 0x40
 800bca2:	f004 0401 	and.w	r4, r4, #1
 800bca6:	9308      	str	r3, [sp, #32]
 800bca8:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800bcac:	9b00      	ldr	r3, [sp, #0]
 800bcae:	fb93 f3f8 	sdiv	r3, r3, r8
 800bcb2:	b29b      	uxth	r3, r3
 800bcb4:	3404      	adds	r4, #4
 800bcb6:	f04f 0b00 	mov.w	fp, #0
 800bcba:	9304      	str	r3, [sp, #16]
 800bcbc:	9a04      	ldr	r2, [sp, #16]
 800bcbe:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bcc2:	fb13 f302 	smulbb	r3, r3, r2
 800bcc6:	9a01      	ldr	r2, [sp, #4]
 800bcc8:	b29b      	uxth	r3, r3
 800bcca:	1899      	adds	r1, r3, r2
 800bccc:	9305      	str	r3, [sp, #20]
 800bcce:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bcd2:	b209      	sxth	r1, r1
 800bcd4:	4299      	cmp	r1, r3
 800bcd6:	db4d      	blt.n	800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bcd8:	8932      	ldrh	r2, [r6, #8]
 800bcda:	4413      	add	r3, r2
 800bcdc:	b21b      	sxth	r3, r3
 800bcde:	4299      	cmp	r1, r3
 800bce0:	da48      	bge.n	800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bce2:	9b04      	ldr	r3, [sp, #16]
 800bce4:	6827      	ldr	r7, [r4, #0]
 800bce6:	fb17 f703 	smulbb	r7, r7, r3
 800bcea:	9b02      	ldr	r3, [sp, #8]
 800bcec:	b2bf      	uxth	r7, r7
 800bcee:	18fa      	adds	r2, r7, r3
 800bcf0:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bcf4:	b212      	sxth	r2, r2
 800bcf6:	429a      	cmp	r2, r3
 800bcf8:	db3c      	blt.n	800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bcfa:	8970      	ldrh	r0, [r6, #10]
 800bcfc:	4403      	add	r3, r0
 800bcfe:	b21b      	sxth	r3, r3
 800bd00:	429a      	cmp	r2, r3
 800bd02:	da37      	bge.n	800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd04:	2300      	movs	r3, #0
 800bd06:	930b      	str	r3, [sp, #44]	; 0x2c
 800bd08:	4630      	mov	r0, r6
 800bd0a:	ab0b      	add	r3, sp, #44	; 0x2c
 800bd0c:	f7ff ff36 	bl	800bb7c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bd10:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bd12:	b37a      	cbz	r2, 800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd14:	4552      	cmp	r2, sl
 800bd16:	d02d      	beq.n	800bd74 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bd18:	4611      	mov	r1, r2
 800bd1a:	a80e      	add	r0, sp, #56	; 0x38
 800bd1c:	9209      	str	r2, [sp, #36]	; 0x24
 800bd1e:	f006 ff45 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bd22:	9a06      	ldr	r2, [sp, #24]
 800bd24:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800bd28:	9b01      	ldr	r3, [sp, #4]
 800bd2a:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800bd2e:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800bd32:	4413      	add	r3, r2
 800bd34:	f04f 0e02 	mov.w	lr, #2
 800bd38:	fb91 f1fe 	sdiv	r1, r1, lr
 800bd3c:	4401      	add	r1, r0
 800bd3e:	1a58      	subs	r0, r3, r1
 800bd40:	9a07      	ldr	r2, [sp, #28]
 800bd42:	9b02      	ldr	r3, [sp, #8]
 800bd44:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800bd48:	fb9c fcfe 	sdiv	ip, ip, lr
 800bd4c:	4413      	add	r3, r2
 800bd4e:	448c      	add	ip, r1
 800bd50:	eba3 030c 	sub.w	r3, r3, ip
 800bd54:	435b      	muls	r3, r3
 800bd56:	fb00 3300 	mla	r3, r0, r0, r3
 800bd5a:	42ab      	cmp	r3, r5
 800bd5c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bd5e:	d208      	bcs.n	800bd72 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800bd60:	9803      	ldr	r0, [sp, #12]
 800bd62:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bd64:	6001      	str	r1, [r0, #0]
 800bd66:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800bd68:	9805      	ldr	r0, [sp, #20]
 800bd6a:	8008      	strh	r0, [r1, #0]
 800bd6c:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bd6e:	461d      	mov	r5, r3
 800bd70:	800f      	strh	r7, [r1, #0]
 800bd72:	4692      	mov	sl, r2
 800bd74:	f10b 0b01 	add.w	fp, fp, #1
 800bd78:	f1bb 0f04 	cmp.w	fp, #4
 800bd7c:	f104 0408 	add.w	r4, r4, #8
 800bd80:	d19c      	bne.n	800bcbc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800bd82:	9b00      	ldr	r3, [sp, #0]
 800bd84:	9c08      	ldr	r4, [sp, #32]
 800bd86:	444b      	add	r3, r9
 800bd88:	4544      	cmp	r4, r8
 800bd8a:	9300      	str	r3, [sp, #0]
 800bd8c:	d187      	bne.n	800bc9e <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800bd8e:	b021      	add	sp, #132	; 0x84
 800bd90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd94:	f04f 35ff 	mov.w	r5, #4294967295
 800bd98:	e766      	b.n	800bc68 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800bd9a:	bf00      	nop
 800bd9c:	20013758 	.word	0x20013758
 800bda0:	080278d8 	.word	0x080278d8

0800bda4 <_ZN8touchgfx4RectaNERKS0_>:
 800bda4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bda8:	f9b1 7000 	ldrsh.w	r7, [r1]
 800bdac:	888c      	ldrh	r4, [r1, #4]
 800bdae:	f9b0 9000 	ldrsh.w	r9, [r0]
 800bdb2:	443c      	add	r4, r7
 800bdb4:	b2a4      	uxth	r4, r4
 800bdb6:	fa0f f884 	sxth.w	r8, r4
 800bdba:	45c1      	cmp	r9, r8
 800bdbc:	da2f      	bge.n	800be1e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bdbe:	8882      	ldrh	r2, [r0, #4]
 800bdc0:	444a      	add	r2, r9
 800bdc2:	b292      	uxth	r2, r2
 800bdc4:	fa0f fe82 	sxth.w	lr, r2
 800bdc8:	4577      	cmp	r7, lr
 800bdca:	da28      	bge.n	800be1e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bdcc:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800bdd0:	88cb      	ldrh	r3, [r1, #6]
 800bdd2:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800bdd6:	442b      	add	r3, r5
 800bdd8:	b21b      	sxth	r3, r3
 800bdda:	429e      	cmp	r6, r3
 800bddc:	da1f      	bge.n	800be1e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bdde:	88c3      	ldrh	r3, [r0, #6]
 800bde0:	4433      	add	r3, r6
 800bde2:	b29b      	uxth	r3, r3
 800bde4:	fa0f fc83 	sxth.w	ip, r3
 800bde8:	4565      	cmp	r5, ip
 800bdea:	da18      	bge.n	800be1e <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bdec:	454f      	cmp	r7, r9
 800bdee:	bfb8      	it	lt
 800bdf0:	464f      	movlt	r7, r9
 800bdf2:	42b5      	cmp	r5, r6
 800bdf4:	bfb8      	it	lt
 800bdf6:	4635      	movlt	r5, r6
 800bdf8:	45f0      	cmp	r8, lr
 800bdfa:	bfd8      	it	le
 800bdfc:	4622      	movle	r2, r4
 800bdfe:	1bd2      	subs	r2, r2, r7
 800be00:	8082      	strh	r2, [r0, #4]
 800be02:	884a      	ldrh	r2, [r1, #2]
 800be04:	88c9      	ldrh	r1, [r1, #6]
 800be06:	8007      	strh	r7, [r0, #0]
 800be08:	440a      	add	r2, r1
 800be0a:	b292      	uxth	r2, r2
 800be0c:	b211      	sxth	r1, r2
 800be0e:	458c      	cmp	ip, r1
 800be10:	bfa8      	it	ge
 800be12:	4613      	movge	r3, r2
 800be14:	1b5b      	subs	r3, r3, r5
 800be16:	80c3      	strh	r3, [r0, #6]
 800be18:	8045      	strh	r5, [r0, #2]
 800be1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800be1e:	2300      	movs	r3, #0
 800be20:	8003      	strh	r3, [r0, #0]
 800be22:	8043      	strh	r3, [r0, #2]
 800be24:	8083      	strh	r3, [r0, #4]
 800be26:	80c3      	strh	r3, [r0, #6]
 800be28:	e7f7      	b.n	800be1a <_ZN8touchgfx4RectaNERKS0_+0x76>

0800be2a <_ZNK8touchgfx4Rect7isEmptyEv>:
 800be2a:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800be2e:	2b00      	cmp	r3, #0
 800be30:	dd06      	ble.n	800be40 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800be32:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800be36:	2800      	cmp	r0, #0
 800be38:	bfcc      	ite	gt
 800be3a:	2000      	movgt	r0, #0
 800be3c:	2001      	movle	r0, #1
 800be3e:	4770      	bx	lr
 800be40:	2001      	movs	r0, #1
 800be42:	4770      	bx	lr

0800be44 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800be44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800be48:	2300      	movs	r3, #0
 800be4a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800be4c:	8003      	strh	r3, [r0, #0]
 800be4e:	4604      	mov	r4, r0
 800be50:	8043      	strh	r3, [r0, #2]
 800be52:	8083      	strh	r3, [r0, #4]
 800be54:	80c3      	strh	r3, [r0, #6]
 800be56:	2d00      	cmp	r5, #0
 800be58:	d040      	beq.n	800bedc <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800be5a:	1d28      	adds	r0, r5, #4
 800be5c:	f7ff ffe5 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 800be60:	b988      	cbnz	r0, 800be86 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800be62:	4620      	mov	r0, r4
 800be64:	f7ff ffe1 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 800be68:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800be6c:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800be70:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800be74:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800be78:	b138      	cbz	r0, 800be8a <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800be7a:	8022      	strh	r2, [r4, #0]
 800be7c:	8063      	strh	r3, [r4, #2]
 800be7e:	f8a4 e004 	strh.w	lr, [r4, #4]
 800be82:	f8a4 c006 	strh.w	ip, [r4, #6]
 800be86:	69ad      	ldr	r5, [r5, #24]
 800be88:	e7e5      	b.n	800be56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800be8a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800be8e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800be92:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800be96:	4290      	cmp	r0, r2
 800be98:	4607      	mov	r7, r0
 800be9a:	bfa8      	it	ge
 800be9c:	4617      	movge	r7, r2
 800be9e:	4472      	add	r2, lr
 800bea0:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800bea4:	8027      	strh	r7, [r4, #0]
 800bea6:	4299      	cmp	r1, r3
 800bea8:	460e      	mov	r6, r1
 800beaa:	4440      	add	r0, r8
 800beac:	bfa8      	it	ge
 800beae:	461e      	movge	r6, r3
 800beb0:	4471      	add	r1, lr
 800beb2:	4463      	add	r3, ip
 800beb4:	b200      	sxth	r0, r0
 800beb6:	b212      	sxth	r2, r2
 800beb8:	b209      	sxth	r1, r1
 800beba:	b21b      	sxth	r3, r3
 800bebc:	4290      	cmp	r0, r2
 800bebe:	bfac      	ite	ge
 800bec0:	ebc7 0200 	rsbge	r2, r7, r0
 800bec4:	ebc7 0202 	rsblt	r2, r7, r2
 800bec8:	4299      	cmp	r1, r3
 800beca:	bfac      	ite	ge
 800becc:	ebc6 0301 	rsbge	r3, r6, r1
 800bed0:	ebc6 0303 	rsblt	r3, r6, r3
 800bed4:	8066      	strh	r6, [r4, #2]
 800bed6:	80a2      	strh	r2, [r4, #4]
 800bed8:	80e3      	strh	r3, [r4, #6]
 800beda:	e7d4      	b.n	800be86 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bedc:	4620      	mov	r0, r4
 800bede:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bee2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800bee2:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800bee6:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800beea:	b383      	cbz	r3, 800bf4e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800beec:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800beee:	b374      	cbz	r4, 800bf4e <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800bef0:	f9b1 5000 	ldrsh.w	r5, [r1]
 800bef4:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800bef8:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800befc:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800bf00:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bf04:	b303      	cbz	r3, 800bf48 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf06:	4668      	mov	r0, sp
 800bf08:	1d21      	adds	r1, r4, #4
 800bf0a:	f8ad 5000 	strh.w	r5, [sp]
 800bf0e:	f8ad 6002 	strh.w	r6, [sp, #2]
 800bf12:	f8ad 7004 	strh.w	r7, [sp, #4]
 800bf16:	f8ad 8006 	strh.w	r8, [sp, #6]
 800bf1a:	f7ff ff43 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800bf1e:	4668      	mov	r0, sp
 800bf20:	f7ff ff83 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf24:	b980      	cbnz	r0, 800bf48 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800bf26:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf2a:	88a2      	ldrh	r2, [r4, #4]
 800bf2c:	1a9b      	subs	r3, r3, r2
 800bf2e:	f8ad 3000 	strh.w	r3, [sp]
 800bf32:	88e2      	ldrh	r2, [r4, #6]
 800bf34:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf38:	1a9b      	subs	r3, r3, r2
 800bf3a:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf3e:	6823      	ldr	r3, [r4, #0]
 800bf40:	4669      	mov	r1, sp
 800bf42:	689b      	ldr	r3, [r3, #8]
 800bf44:	4620      	mov	r0, r4
 800bf46:	4798      	blx	r3
 800bf48:	69a4      	ldr	r4, [r4, #24]
 800bf4a:	2c00      	cmp	r4, #0
 800bf4c:	d1d8      	bne.n	800bf00 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800bf4e:	b002      	add	sp, #8
 800bf50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bf54 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800bf54:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bf56:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bf5a:	460d      	mov	r5, r1
 800bf5c:	4616      	mov	r6, r2
 800bf5e:	b323      	cbz	r3, 800bfaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bf60:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bf62:	b314      	cbz	r4, 800bfaa <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bf64:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bf68:	b1eb      	cbz	r3, 800bfa6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bf6a:	6828      	ldr	r0, [r5, #0]
 800bf6c:	6869      	ldr	r1, [r5, #4]
 800bf6e:	466b      	mov	r3, sp
 800bf70:	c303      	stmia	r3!, {r0, r1}
 800bf72:	4668      	mov	r0, sp
 800bf74:	1d21      	adds	r1, r4, #4
 800bf76:	f7ff ff15 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800bf7a:	4668      	mov	r0, sp
 800bf7c:	f7ff ff55 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 800bf80:	b988      	cbnz	r0, 800bfa6 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bf82:	f8bd 3000 	ldrh.w	r3, [sp]
 800bf86:	88a2      	ldrh	r2, [r4, #4]
 800bf88:	1a9b      	subs	r3, r3, r2
 800bf8a:	f8ad 3000 	strh.w	r3, [sp]
 800bf8e:	88e2      	ldrh	r2, [r4, #6]
 800bf90:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf94:	1a9b      	subs	r3, r3, r2
 800bf96:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf9a:	6823      	ldr	r3, [r4, #0]
 800bf9c:	4632      	mov	r2, r6
 800bf9e:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bfa0:	4669      	mov	r1, sp
 800bfa2:	4620      	mov	r0, r4
 800bfa4:	4798      	blx	r3
 800bfa6:	69a4      	ldr	r4, [r4, #24]
 800bfa8:	e7db      	b.n	800bf62 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800bfaa:	b002      	add	sp, #8
 800bfac:	bd70      	pop	{r4, r5, r6, pc}

0800bfae <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800bfae:	b513      	push	{r0, r1, r4, lr}
 800bfb0:	6803      	ldr	r3, [r0, #0]
 800bfb2:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800bfb6:	2300      	movs	r3, #0
 800bfb8:	e9cd 3300 	strd	r3, r3, [sp]
 800bfbc:	466b      	mov	r3, sp
 800bfbe:	47a0      	blx	r4
 800bfc0:	b002      	add	sp, #8
 800bfc2:	bd10      	pop	{r4, pc}

0800bfc4 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800bfc4:	2301      	movs	r3, #1
 800bfc6:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bfca:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bfce:	4770      	bx	lr

0800bfd0 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800bfd0:	2301      	movs	r3, #1
 800bfd2:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800bfd6:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800bfda:	4770      	bx	lr

0800bfdc <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800bfdc:	6843      	ldr	r3, [r0, #4]
 800bfde:	2201      	movs	r2, #1
 800bfe0:	725a      	strb	r2, [r3, #9]
 800bfe2:	6840      	ldr	r0, [r0, #4]
 800bfe4:	6803      	ldr	r3, [r0, #0]
 800bfe6:	691b      	ldr	r3, [r3, #16]
 800bfe8:	4718      	bx	r3

0800bfea <_ZN8touchgfx3HAL8flushDMAEv>:
 800bfea:	6840      	ldr	r0, [r0, #4]
 800bfec:	6803      	ldr	r3, [r0, #0]
 800bfee:	689b      	ldr	r3, [r3, #8]
 800bff0:	4718      	bx	r3

0800bff2 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800bff2:	b530      	push	{r4, r5, lr}
 800bff4:	b08b      	sub	sp, #44	; 0x2c
 800bff6:	6804      	ldr	r4, [r0, #0]
 800bff8:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800bffc:	9509      	str	r5, [sp, #36]	; 0x24
 800bffe:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c002:	9508      	str	r5, [sp, #32]
 800c004:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c008:	9507      	str	r5, [sp, #28]
 800c00a:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c00e:	9506      	str	r5, [sp, #24]
 800c010:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c014:	9505      	str	r5, [sp, #20]
 800c016:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c01a:	9504      	str	r5, [sp, #16]
 800c01c:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c020:	9503      	str	r5, [sp, #12]
 800c022:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c026:	9502      	str	r5, [sp, #8]
 800c028:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c02c:	e9cd 3500 	strd	r3, r5, [sp]
 800c030:	4613      	mov	r3, r2
 800c032:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c034:	2200      	movs	r2, #0
 800c036:	47a0      	blx	r4
 800c038:	b00b      	add	sp, #44	; 0x2c
 800c03a:	bd30      	pop	{r4, r5, pc}

0800c03c <_ZN8touchgfx3HAL10beginFrameEv>:
 800c03c:	4b04      	ldr	r3, [pc, #16]	; (800c050 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c03e:	781b      	ldrb	r3, [r3, #0]
 800c040:	b123      	cbz	r3, 800c04c <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c042:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c046:	f080 0001 	eor.w	r0, r0, #1
 800c04a:	4770      	bx	lr
 800c04c:	2001      	movs	r0, #1
 800c04e:	4770      	bx	lr
 800c050:	20013756 	.word	0x20013756

0800c054 <_ZN8touchgfx3HAL8endFrameEv>:
 800c054:	b510      	push	{r4, lr}
 800c056:	4604      	mov	r4, r0
 800c058:	6840      	ldr	r0, [r0, #4]
 800c05a:	6803      	ldr	r3, [r0, #0]
 800c05c:	689b      	ldr	r3, [r3, #8]
 800c05e:	4798      	blx	r3
 800c060:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c064:	b113      	cbz	r3, 800c06c <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c066:	2301      	movs	r3, #1
 800c068:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c06c:	bd10      	pop	{r4, pc}

0800c06e <_ZN8touchgfx3HAL10initializeEv>:
 800c06e:	b510      	push	{r4, lr}
 800c070:	4604      	mov	r4, r0
 800c072:	f7f5 fa25 	bl	80014c0 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c076:	f7f5 f92d 	bl	80012d4 <_ZN8touchgfx4GPIO4initEv>
 800c07a:	6860      	ldr	r0, [r4, #4]
 800c07c:	6803      	ldr	r3, [r0, #0]
 800c07e:	68db      	ldr	r3, [r3, #12]
 800c080:	4798      	blx	r3
 800c082:	68e0      	ldr	r0, [r4, #12]
 800c084:	6803      	ldr	r3, [r0, #0]
 800c086:	689b      	ldr	r3, [r3, #8]
 800c088:	4798      	blx	r3
 800c08a:	6823      	ldr	r3, [r4, #0]
 800c08c:	4620      	mov	r0, r4
 800c08e:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c090:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c094:	4718      	bx	r3
	...

0800c098 <_ZN8touchgfx3HAL4tickEv>:
 800c098:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c09a:	6803      	ldr	r3, [r0, #0]
 800c09c:	4d5b      	ldr	r5, [pc, #364]	; (800c20c <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c09e:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c0a2:	4604      	mov	r4, r0
 800c0a4:	4798      	blx	r3
 800c0a6:	2800      	cmp	r0, #0
 800c0a8:	f000 8095 	beq.w	800c1d6 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c0ac:	2001      	movs	r0, #1
 800c0ae:	f7f5 f88f 	bl	80011d0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c0b2:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c0b6:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c0ba:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c0be:	2600      	movs	r6, #0
 800c0c0:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c0c4:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c0c8:	b133      	cbz	r3, 800c0d8 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c0ca:	6823      	ldr	r3, [r4, #0]
 800c0cc:	4620      	mov	r0, r4
 800c0ce:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800c0d2:	4798      	blx	r3
 800c0d4:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c0d8:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c0dc:	6862      	ldr	r2, [r4, #4]
 800c0de:	f083 0301 	eor.w	r3, r3, #1
 800c0e2:	7253      	strb	r3, [r2, #9]
 800c0e4:	2601      	movs	r6, #1
 800c0e6:	702e      	strb	r6, [r5, #0]
 800c0e8:	f005 fc0e 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800c0ec:	6803      	ldr	r3, [r0, #0]
 800c0ee:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c0f0:	4798      	blx	r3
 800c0f2:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c0f6:	b90b      	cbnz	r3, 800c0fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800c0f8:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c0fc:	f005 fc04 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800c100:	6803      	ldr	r3, [r0, #0]
 800c102:	695b      	ldr	r3, [r3, #20]
 800c104:	4798      	blx	r3
 800c106:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c108:	6803      	ldr	r3, [r0, #0]
 800c10a:	691b      	ldr	r3, [r3, #16]
 800c10c:	4798      	blx	r3
 800c10e:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c112:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c116:	3b01      	subs	r3, #1
 800c118:	b2db      	uxtb	r3, r3
 800c11a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c11e:	b10a      	cbz	r2, 800c124 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c120:	2b00      	cmp	r3, #0
 800c122:	d1eb      	bne.n	800c0fc <_ZN8touchgfx3HAL4tickEv+0x64>
 800c124:	4a3a      	ldr	r2, [pc, #232]	; (800c210 <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c126:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c12a:	7813      	ldrb	r3, [r2, #0]
 800c12c:	3301      	adds	r3, #1
 800c12e:	b25b      	sxtb	r3, r3
 800c130:	4299      	cmp	r1, r3
 800c132:	7013      	strb	r3, [r2, #0]
 800c134:	dc10      	bgt.n	800c158 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c136:	68e0      	ldr	r0, [r4, #12]
 800c138:	2300      	movs	r3, #0
 800c13a:	7013      	strb	r3, [r2, #0]
 800c13c:	6803      	ldr	r3, [r0, #0]
 800c13e:	aa03      	add	r2, sp, #12
 800c140:	68db      	ldr	r3, [r3, #12]
 800c142:	a902      	add	r1, sp, #8
 800c144:	4798      	blx	r3
 800c146:	6823      	ldr	r3, [r4, #0]
 800c148:	2800      	cmp	r0, #0
 800c14a:	d050      	beq.n	800c1ee <_ZN8touchgfx3HAL4tickEv+0x156>
 800c14c:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c150:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c154:	4620      	mov	r0, r4
 800c156:	4798      	blx	r3
 800c158:	6960      	ldr	r0, [r4, #20]
 800c15a:	2300      	movs	r3, #0
 800c15c:	f88d 3007 	strb.w	r3, [sp, #7]
 800c160:	b158      	cbz	r0, 800c17a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c162:	6803      	ldr	r3, [r0, #0]
 800c164:	f10d 0107 	add.w	r1, sp, #7
 800c168:	68db      	ldr	r3, [r3, #12]
 800c16a:	4798      	blx	r3
 800c16c:	b128      	cbz	r0, 800c17a <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c16e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c170:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c174:	6803      	ldr	r3, [r0, #0]
 800c176:	68db      	ldr	r3, [r3, #12]
 800c178:	4798      	blx	r3
 800c17a:	f104 001c 	add.w	r0, r4, #28
 800c17e:	f014 fc4b 	bl	8020a18 <_ZN8touchgfx8Gestures4tickEv>
 800c182:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c186:	b30b      	cbz	r3, 800c1cc <_ZN8touchgfx3HAL4tickEv+0x134>
 800c188:	6920      	ldr	r0, [r4, #16]
 800c18a:	6803      	ldr	r3, [r0, #0]
 800c18c:	691b      	ldr	r3, [r3, #16]
 800c18e:	4798      	blx	r3
 800c190:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c192:	4606      	mov	r6, r0
 800c194:	b903      	cbnz	r3, 800c198 <_ZN8touchgfx3HAL4tickEv+0x100>
 800c196:	6720      	str	r0, [r4, #112]	; 0x70
 800c198:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c19a:	4a1e      	ldr	r2, [pc, #120]	; (800c214 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c19c:	1af3      	subs	r3, r6, r3
 800c19e:	4293      	cmp	r3, r2
 800c1a0:	d914      	bls.n	800c1cc <_ZN8touchgfx3HAL4tickEv+0x134>
 800c1a2:	6920      	ldr	r0, [r4, #16]
 800c1a4:	6803      	ldr	r3, [r0, #0]
 800c1a6:	699b      	ldr	r3, [r3, #24]
 800c1a8:	4798      	blx	r3
 800c1aa:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c1ac:	2264      	movs	r2, #100	; 0x64
 800c1ae:	1af3      	subs	r3, r6, r3
 800c1b0:	fbb3 f3f2 	udiv	r3, r3, r2
 800c1b4:	fbb0 f0f3 	udiv	r0, r0, r3
 800c1b8:	2800      	cmp	r0, #0
 800c1ba:	dc1d      	bgt.n	800c1f8 <_ZN8touchgfx3HAL4tickEv+0x160>
 800c1bc:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c1c0:	6920      	ldr	r0, [r4, #16]
 800c1c2:	6803      	ldr	r3, [r0, #0]
 800c1c4:	2100      	movs	r1, #0
 800c1c6:	69db      	ldr	r3, [r3, #28]
 800c1c8:	4798      	blx	r3
 800c1ca:	6726      	str	r6, [r4, #112]	; 0x70
 800c1cc:	f005 fb9c 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 800c1d0:	6803      	ldr	r3, [r0, #0]
 800c1d2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c1d4:	4798      	blx	r3
 800c1d6:	6823      	ldr	r3, [r4, #0]
 800c1d8:	4620      	mov	r0, r4
 800c1da:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c1de:	4798      	blx	r3
 800c1e0:	2001      	movs	r0, #1
 800c1e2:	f7f5 f81f 	bl	8001224 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c1e6:	2300      	movs	r3, #0
 800c1e8:	702b      	strb	r3, [r5, #0]
 800c1ea:	b004      	add	sp, #16
 800c1ec:	bd70      	pop	{r4, r5, r6, pc}
 800c1ee:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	4798      	blx	r3
 800c1f6:	e7af      	b.n	800c158 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c1f8:	2863      	cmp	r0, #99	; 0x63
 800c1fa:	bfcb      	itete	gt
 800c1fc:	2300      	movgt	r3, #0
 800c1fe:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c202:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c206:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c20a:	e7d9      	b.n	800c1c0 <_ZN8touchgfx3HAL4tickEv+0x128>
 800c20c:	2001375c 	.word	0x2001375c
 800c210:	2001375d 	.word	0x2001375d
 800c214:	05f5e100 	.word	0x05f5e100

0800c218 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c218:	f7f5 b982 	b.w	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c21c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c21c:	6581      	str	r1, [r0, #88]	; 0x58
 800c21e:	301c      	adds	r0, #28
 800c220:	f014 bbf8 	b.w	8020a14 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c224 <_ZN8touchgfx3HAL5touchEll>:
 800c224:	b530      	push	{r4, r5, lr}
 800c226:	b087      	sub	sp, #28
 800c228:	4604      	mov	r4, r0
 800c22a:	a804      	add	r0, sp, #16
 800c22c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c230:	f005 f94e 	bl	80114d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c234:	9b04      	ldr	r3, [sp, #16]
 800c236:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c23a:	a906      	add	r1, sp, #24
 800c23c:	9b05      	ldr	r3, [sp, #20]
 800c23e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c242:	a803      	add	r0, sp, #12
 800c244:	f005 f996 	bl	8011574 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c248:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c24c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c250:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c254:	f104 001c 	add.w	r0, r4, #28
 800c258:	b189      	cbz	r1, 800c27e <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c25a:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c25e:	9300      	str	r3, [sp, #0]
 800c260:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c264:	4613      	mov	r3, r2
 800c266:	462a      	mov	r2, r5
 800c268:	f014 fbe4 	bl	8020a34 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c26c:	b128      	cbz	r0, 800c27a <_ZN8touchgfx3HAL5touchEll+0x56>
 800c26e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c272:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c274:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c278:	6623      	str	r3, [r4, #96]	; 0x60
 800c27a:	b007      	add	sp, #28
 800c27c:	bd30      	pop	{r4, r5, pc}
 800c27e:	f014 fc19 	bl	8020ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c282:	2301      	movs	r3, #1
 800c284:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c288:	e7f1      	b.n	800c26e <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c28a <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c28a:	b510      	push	{r4, lr}
 800c28c:	2b00      	cmp	r3, #0
 800c28e:	d046      	beq.n	800c31e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c290:	ea81 0002 	eor.w	r0, r1, r2
 800c294:	07c4      	lsls	r4, r0, #31
 800c296:	d508      	bpl.n	800c2aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c298:	440b      	add	r3, r1
 800c29a:	3a01      	subs	r2, #1
 800c29c:	428b      	cmp	r3, r1
 800c29e:	d93e      	bls.n	800c31e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c2a0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c2a4:	f801 0b01 	strb.w	r0, [r1], #1
 800c2a8:	e7f8      	b.n	800c29c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c2aa:	07d0      	lsls	r0, r2, #31
 800c2ac:	bf42      	ittt	mi
 800c2ae:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c2b2:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c2b6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c2ba:	2b01      	cmp	r3, #1
 800c2bc:	d911      	bls.n	800c2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c2be:	ea81 0402 	eor.w	r4, r1, r2
 800c2c2:	07a4      	lsls	r4, r4, #30
 800c2c4:	4610      	mov	r0, r2
 800c2c6:	d022      	beq.n	800c30e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c2c8:	f023 0401 	bic.w	r4, r3, #1
 800c2cc:	440c      	add	r4, r1
 800c2ce:	428c      	cmp	r4, r1
 800c2d0:	4602      	mov	r2, r0
 800c2d2:	d904      	bls.n	800c2de <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c2d4:	8812      	ldrh	r2, [r2, #0]
 800c2d6:	f821 2b02 	strh.w	r2, [r1], #2
 800c2da:	3002      	adds	r0, #2
 800c2dc:	e7f7      	b.n	800c2ce <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c2de:	f003 0301 	and.w	r3, r3, #1
 800c2e2:	f023 0003 	bic.w	r0, r3, #3
 800c2e6:	4408      	add	r0, r1
 800c2e8:	4288      	cmp	r0, r1
 800c2ea:	4614      	mov	r4, r2
 800c2ec:	d904      	bls.n	800c2f8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c2ee:	6824      	ldr	r4, [r4, #0]
 800c2f0:	f841 4b04 	str.w	r4, [r1], #4
 800c2f4:	3204      	adds	r2, #4
 800c2f6:	e7f7      	b.n	800c2e8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c2f8:	f003 0303 	and.w	r3, r3, #3
 800c2fc:	440b      	add	r3, r1
 800c2fe:	3a01      	subs	r2, #1
 800c300:	428b      	cmp	r3, r1
 800c302:	d90c      	bls.n	800c31e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c304:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c308:	f801 0b01 	strb.w	r0, [r1], #1
 800c30c:	e7f8      	b.n	800c300 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c30e:	0790      	lsls	r0, r2, #30
 800c310:	d0e7      	beq.n	800c2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c312:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c316:	f821 0b02 	strh.w	r0, [r1], #2
 800c31a:	3b02      	subs	r3, #2
 800c31c:	e7e1      	b.n	800c2e2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c31e:	2001      	movs	r0, #1
 800c320:	bd10      	pop	{r4, pc}

0800c322 <_ZN8touchgfx3HAL7noTouchEv>:
 800c322:	b510      	push	{r4, lr}
 800c324:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c328:	4604      	mov	r4, r0
 800c32a:	b153      	cbz	r3, 800c342 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c32c:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c330:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c334:	2101      	movs	r1, #1
 800c336:	301c      	adds	r0, #28
 800c338:	f014 fbbc 	bl	8020ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c33c:	2300      	movs	r3, #0
 800c33e:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c342:	bd10      	pop	{r4, pc}

0800c344 <_ZN8touchgfx3HAL3lcdEv>:
 800c344:	4b04      	ldr	r3, [pc, #16]	; (800c358 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800c346:	681b      	ldr	r3, [r3, #0]
 800c348:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c34c:	b10a      	cbz	r2, 800c352 <_ZN8touchgfx3HAL3lcdEv+0xe>
 800c34e:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c350:	b900      	cbnz	r0, 800c354 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800c352:	6898      	ldr	r0, [r3, #8]
 800c354:	4770      	bx	lr
 800c356:	bf00      	nop
 800c358:	20013758 	.word	0x20013758

0800c35c <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c35c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c360:	b085      	sub	sp, #20
 800c362:	ad04      	add	r5, sp, #16
 800c364:	4604      	mov	r4, r0
 800c366:	2000      	movs	r0, #0
 800c368:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c36c:	69a0      	ldr	r0, [r4, #24]
 800c36e:	6806      	ldr	r6, [r0, #0]
 800c370:	9501      	str	r5, [sp, #4]
 800c372:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800c376:	9500      	str	r5, [sp, #0]
 800c378:	6835      	ldr	r5, [r6, #0]
 800c37a:	4699      	mov	r9, r3
 800c37c:	460f      	mov	r7, r1
 800c37e:	4690      	mov	r8, r2
 800c380:	47a8      	blx	r5
 800c382:	4d10      	ldr	r5, [pc, #64]	; (800c3c4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800c384:	4606      	mov	r6, r0
 800c386:	f8a5 9000 	strh.w	r9, [r5]
 800c38a:	f7ff ffdb 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c38e:	6803      	ldr	r3, [r0, #0]
 800c390:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c392:	4798      	blx	r3
 800c394:	b128      	cbz	r0, 800c3a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800c396:	2801      	cmp	r0, #1
 800c398:	d00b      	beq.n	800c3b2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800c39a:	4630      	mov	r0, r6
 800c39c:	b005      	add	sp, #20
 800c39e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c3a2:	882b      	ldrh	r3, [r5, #0]
 800c3a4:	fb08 7203 	mla	r2, r8, r3, r7
 800c3a8:	9b03      	ldr	r3, [sp, #12]
 800c3aa:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c3ae:	63e3      	str	r3, [r4, #60]	; 0x3c
 800c3b0:	e7f3      	b.n	800c39a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c3b2:	882a      	ldrh	r2, [r5, #0]
 800c3b4:	9b03      	ldr	r3, [sp, #12]
 800c3b6:	fb08 7202 	mla	r2, r8, r2, r7
 800c3ba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c3be:	1a9a      	subs	r2, r3, r2
 800c3c0:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c3c2:	e7ea      	b.n	800c39a <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c3c4:	20013752 	.word	0x20013752

0800c3c8 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c3c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c3ca:	b08b      	sub	sp, #44	; 0x2c
 800c3cc:	4617      	mov	r7, r2
 800c3ce:	4604      	mov	r4, r0
 800c3d0:	460e      	mov	r6, r1
 800c3d2:	461d      	mov	r5, r3
 800c3d4:	f7ff ffb6 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c3d8:	6803      	ldr	r3, [r0, #0]
 800c3da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c3dc:	4798      	blx	r3
 800c3de:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c3e2:	9007      	str	r0, [sp, #28]
 800c3e4:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c3e8:	4b0d      	ldr	r3, [pc, #52]	; (800c420 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c3ea:	6822      	ldr	r2, [r4, #0]
 800c3ec:	881b      	ldrh	r3, [r3, #0]
 800c3ee:	9306      	str	r3, [sp, #24]
 800c3f0:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c3f4:	9305      	str	r3, [sp, #20]
 800c3f6:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c3fa:	9304      	str	r3, [sp, #16]
 800c3fc:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c400:	9303      	str	r3, [sp, #12]
 800c402:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c406:	9302      	str	r3, [sp, #8]
 800c408:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c40c:	e9cd 5300 	strd	r5, r3, [sp]
 800c410:	4631      	mov	r1, r6
 800c412:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800c414:	463b      	mov	r3, r7
 800c416:	2200      	movs	r2, #0
 800c418:	4620      	mov	r0, r4
 800c41a:	47a8      	blx	r5
 800c41c:	b00b      	add	sp, #44	; 0x2c
 800c41e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c420:	20013752 	.word	0x20013752

0800c424 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c424:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c428:	4698      	mov	r8, r3
 800c42a:	6803      	ldr	r3, [r0, #0]
 800c42c:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800c42e:	4b15      	ldr	r3, [pc, #84]	; (800c484 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c430:	b08b      	sub	sp, #44	; 0x2c
 800c432:	4617      	mov	r7, r2
 800c434:	f8b3 9000 	ldrh.w	r9, [r3]
 800c438:	460e      	mov	r6, r1
 800c43a:	4604      	mov	r4, r0
 800c43c:	f7ff ff82 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c440:	6803      	ldr	r3, [r0, #0]
 800c442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c444:	4798      	blx	r3
 800c446:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c44a:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c44e:	2302      	movs	r3, #2
 800c450:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c454:	2301      	movs	r3, #1
 800c456:	9305      	str	r3, [sp, #20]
 800c458:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c45c:	9304      	str	r3, [sp, #16]
 800c45e:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c462:	9303      	str	r3, [sp, #12]
 800c464:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c468:	9302      	str	r3, [sp, #8]
 800c46a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c46e:	2200      	movs	r2, #0
 800c470:	e9cd 8300 	strd	r8, r3, [sp]
 800c474:	4631      	mov	r1, r6
 800c476:	463b      	mov	r3, r7
 800c478:	4620      	mov	r0, r4
 800c47a:	47a8      	blx	r5
 800c47c:	b00b      	add	sp, #44	; 0x2c
 800c47e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c482:	bf00      	nop
 800c484:	20013752 	.word	0x20013752

0800c488 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c488:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c48c:	4698      	mov	r8, r3
 800c48e:	6803      	ldr	r3, [r0, #0]
 800c490:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800c492:	4b11      	ldr	r3, [pc, #68]	; (800c4d8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c494:	b087      	sub	sp, #28
 800c496:	f8b3 9000 	ldrh.w	r9, [r3]
 800c49a:	460e      	mov	r6, r1
 800c49c:	4617      	mov	r7, r2
 800c49e:	4604      	mov	r4, r0
 800c4a0:	f7ff ff50 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c4a4:	6803      	ldr	r3, [r0, #0]
 800c4a6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c4a8:	4798      	blx	r3
 800c4aa:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c4ae:	f8cd 900c 	str.w	r9, [sp, #12]
 800c4b2:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c4b6:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c4ba:	9302      	str	r3, [sp, #8]
 800c4bc:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c4c0:	9301      	str	r3, [sp, #4]
 800c4c2:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c4c6:	9300      	str	r3, [sp, #0]
 800c4c8:	463a      	mov	r2, r7
 800c4ca:	4643      	mov	r3, r8
 800c4cc:	4631      	mov	r1, r6
 800c4ce:	4620      	mov	r0, r4
 800c4d0:	47a8      	blx	r5
 800c4d2:	b007      	add	sp, #28
 800c4d4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c4d8:	20013752 	.word	0x20013752

0800c4dc <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c4dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c4e0:	4604      	mov	r4, r0
 800c4e2:	b08f      	sub	sp, #60	; 0x3c
 800c4e4:	4610      	mov	r0, r2
 800c4e6:	460d      	mov	r5, r1
 800c4e8:	4691      	mov	r9, r2
 800c4ea:	461e      	mov	r6, r3
 800c4ec:	f008 fcdc 	bl	8014ea8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c4f0:	2800      	cmp	r0, #0
 800c4f2:	f000 809d 	beq.w	800c630 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800c4f6:	6823      	ldr	r3, [r4, #0]
 800c4f8:	f8df b198 	ldr.w	fp, [pc, #408]	; 800c694 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800c4fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c4fe:	f8df a198 	ldr.w	sl, [pc, #408]	; 800c698 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800c502:	4f61      	ldr	r7, [pc, #388]	; (800c688 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c504:	4620      	mov	r0, r4
 800c506:	4798      	blx	r3
 800c508:	6823      	ldr	r3, [r4, #0]
 800c50a:	4620      	mov	r0, r4
 800c50c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c50e:	4798      	blx	r3
 800c510:	f8bb 3000 	ldrh.w	r3, [fp]
 800c514:	9301      	str	r3, [sp, #4]
 800c516:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800c51a:	f8ba 3000 	ldrh.w	r3, [sl]
 800c51e:	9302      	str	r3, [sp, #8]
 800c520:	883b      	ldrh	r3, [r7, #0]
 800c522:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800c526:	9303      	str	r3, [sp, #12]
 800c528:	4b58      	ldr	r3, [pc, #352]	; (800c68c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c52a:	9305      	str	r3, [sp, #20]
 800c52c:	881a      	ldrh	r2, [r3, #0]
 800c52e:	9204      	str	r2, [sp, #16]
 800c530:	4640      	mov	r0, r8
 800c532:	f008 fd4d 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800c536:	8038      	strh	r0, [r7, #0]
 800c538:	4640      	mov	r0, r8
 800c53a:	f008 fd7d 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800c53e:	9b05      	ldr	r3, [sp, #20]
 800c540:	b280      	uxth	r0, r0
 800c542:	8018      	strh	r0, [r3, #0]
 800c544:	4b52      	ldr	r3, [pc, #328]	; (800c690 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800c546:	781b      	ldrb	r3, [r3, #0]
 800c548:	2b00      	cmp	r3, #0
 800c54a:	d174      	bne.n	800c636 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800c54c:	883b      	ldrh	r3, [r7, #0]
 800c54e:	f8ab 3000 	strh.w	r3, [fp]
 800c552:	f8aa 0000 	strh.w	r0, [sl]
 800c556:	4648      	mov	r0, r9
 800c558:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800c55c:	f008 fca4 	bl	8014ea8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c560:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800c564:	2200      	movs	r2, #0
 800c566:	4611      	mov	r1, r2
 800c568:	4628      	mov	r0, r5
 800c56a:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800c56e:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800c572:	f7f7 ffe3 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 800c576:	2301      	movs	r3, #1
 800c578:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800c57c:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800c580:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800c584:	2b00      	cmp	r3, #0
 800c586:	dd5c      	ble.n	800c642 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c588:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800c58c:	2b00      	cmp	r3, #0
 800c58e:	dd58      	ble.n	800c642 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800c590:	462a      	mov	r2, r5
 800c592:	ab0a      	add	r3, sp, #40	; 0x28
 800c594:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c598:	6851      	ldr	r1, [r2, #4]
 800c59a:	c303      	stmia	r3!, {r0, r1}
 800c59c:	4631      	mov	r1, r6
 800c59e:	a80a      	add	r0, sp, #40	; 0x28
 800c5a0:	f7ff fc00 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800c5a4:	4b38      	ldr	r3, [pc, #224]	; (800c688 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c5a6:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c5aa:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800c5ae:	2100      	movs	r1, #0
 800c5b0:	aa0a      	add	r2, sp, #40	; 0x28
 800c5b2:	4b36      	ldr	r3, [pc, #216]	; (800c68c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c5b4:	910c      	str	r1, [sp, #48]	; 0x30
 800c5b6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800c5ba:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c5be:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800c5c2:	ab08      	add	r3, sp, #32
 800c5c4:	e883 0003 	stmia.w	r3, {r0, r1}
 800c5c8:	4618      	mov	r0, r3
 800c5ca:	a90c      	add	r1, sp, #48	; 0x30
 800c5cc:	f7ff fbea 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800c5d0:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800c5d2:	2b00      	cmp	r3, #0
 800c5d4:	d13c      	bne.n	800c650 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800c5d6:	2000      	movs	r0, #0
 800c5d8:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800c5dc:	2600      	movs	r6, #0
 800c5de:	682a      	ldr	r2, [r5, #0]
 800c5e0:	696b      	ldr	r3, [r5, #20]
 800c5e2:	616e      	str	r6, [r5, #20]
 800c5e4:	9305      	str	r3, [sp, #20]
 800c5e6:	6892      	ldr	r2, [r2, #8]
 800c5e8:	a908      	add	r1, sp, #32
 800c5ea:	4628      	mov	r0, r5
 800c5ec:	4790      	blx	r2
 800c5ee:	9b05      	ldr	r3, [sp, #20]
 800c5f0:	616b      	str	r3, [r5, #20]
 800c5f2:	4652      	mov	r2, sl
 800c5f4:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800c5f8:	4649      	mov	r1, r9
 800c5fa:	4628      	mov	r0, r5
 800c5fc:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800c600:	f7f7 ff9c 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 800c604:	4b23      	ldr	r3, [pc, #140]	; (800c694 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800c606:	9a01      	ldr	r2, [sp, #4]
 800c608:	801a      	strh	r2, [r3, #0]
 800c60a:	4b23      	ldr	r3, [pc, #140]	; (800c698 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800c60c:	9a02      	ldr	r2, [sp, #8]
 800c60e:	801a      	strh	r2, [r3, #0]
 800c610:	4b1d      	ldr	r3, [pc, #116]	; (800c688 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800c612:	9a03      	ldr	r2, [sp, #12]
 800c614:	801a      	strh	r2, [r3, #0]
 800c616:	4b1d      	ldr	r3, [pc, #116]	; (800c68c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800c618:	9a04      	ldr	r2, [sp, #16]
 800c61a:	801a      	strh	r2, [r3, #0]
 800c61c:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800c620:	6823      	ldr	r3, [r4, #0]
 800c622:	4620      	mov	r0, r4
 800c624:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800c626:	4798      	blx	r3
 800c628:	6823      	ldr	r3, [r4, #0]
 800c62a:	4620      	mov	r0, r4
 800c62c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c62e:	4798      	blx	r3
 800c630:	b00f      	add	sp, #60	; 0x3c
 800c632:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c636:	883b      	ldrh	r3, [r7, #0]
 800c638:	f8ab 0000 	strh.w	r0, [fp]
 800c63c:	f8aa 3000 	strh.w	r3, [sl]
 800c640:	e789      	b.n	800c556 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800c642:	462a      	mov	r2, r5
 800c644:	ab0a      	add	r3, sp, #40	; 0x28
 800c646:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800c64a:	6851      	ldr	r1, [r2, #4]
 800c64c:	c303      	stmia	r3!, {r0, r1}
 800c64e:	e7a9      	b.n	800c5a4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800c650:	a807      	add	r0, sp, #28
 800c652:	f008 fe2d 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c656:	4606      	mov	r6, r0
 800c658:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800c65a:	6803      	ldr	r3, [r0, #0]
 800c65c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c65e:	4798      	blx	r3
 800c660:	4286      	cmp	r6, r0
 800c662:	d1b8      	bne.n	800c5d6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800c664:	f7ff fe6e 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c668:	6803      	ldr	r3, [r0, #0]
 800c66a:	4606      	mov	r6, r0
 800c66c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c66e:	9305      	str	r3, [sp, #20]
 800c670:	a807      	add	r0, sp, #28
 800c672:	f008 fe1d 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800c676:	9b05      	ldr	r3, [sp, #20]
 800c678:	4601      	mov	r1, r0
 800c67a:	4630      	mov	r0, r6
 800c67c:	4798      	blx	r3
 800c67e:	f080 0001 	eor.w	r0, r0, #1
 800c682:	b2c0      	uxtb	r0, r0
 800c684:	e7a8      	b.n	800c5d8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800c686:	bf00      	nop
 800c688:	2001374c 	.word	0x2001374c
 800c68c:	2001374e 	.word	0x2001374e
 800c690:	20013750 	.word	0x20013750
 800c694:	20013752 	.word	0x20013752
 800c698:	20013754 	.word	0x20013754

0800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800c69c:	b510      	push	{r4, lr}
 800c69e:	4b07      	ldr	r3, [pc, #28]	; (800c6bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800c6a0:	781b      	ldrb	r3, [r3, #0]
 800c6a2:	4604      	mov	r4, r0
 800c6a4:	b13b      	cbz	r3, 800c6b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c6a6:	6803      	ldr	r3, [r0, #0]
 800c6a8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c6aa:	4798      	blx	r3
 800c6ac:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800c6ae:	4283      	cmp	r3, r0
 800c6b0:	d101      	bne.n	800c6b6 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800c6b2:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800c6b4:	bd10      	pop	{r4, pc}
 800c6b6:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800c6b8:	e7fc      	b.n	800c6b4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800c6ba:	bf00      	nop
 800c6bc:	20013756 	.word	0x20013756

0800c6c0 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800c6c0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c6c4:	b08a      	sub	sp, #40	; 0x28
 800c6c6:	461d      	mov	r5, r3
 800c6c8:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c6cc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c6d0:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c6d4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c6d8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c6dc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c6e0:	2400      	movs	r4, #0
 800c6e2:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c6e6:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800c6ea:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c6ee:	4690      	mov	r8, r2
 800c6f0:	4607      	mov	r7, r0
 800c6f2:	9404      	str	r4, [sp, #16]
 800c6f4:	f88d 4020 	strb.w	r4, [sp, #32]
 800c6f8:	f7ff ffd0 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c6fc:	fb06 8505 	mla	r5, r6, r5, r8
 800c700:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c704:	6878      	ldr	r0, [r7, #4]
 800c706:	9505      	str	r5, [sp, #20]
 800c708:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c70c:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c710:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800c714:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c718:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c71c:	6803      	ldr	r3, [r0, #0]
 800c71e:	a901      	add	r1, sp, #4
 800c720:	685b      	ldr	r3, [r3, #4]
 800c722:	4798      	blx	r3
 800c724:	b00a      	add	sp, #40	; 0x28
 800c726:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c72a <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800c72a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c72e:	b08b      	sub	sp, #44	; 0x2c
 800c730:	2400      	movs	r4, #0
 800c732:	461d      	mov	r5, r3
 800c734:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800c738:	4688      	mov	r8, r1
 800c73a:	4691      	mov	r9, r2
 800c73c:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800c740:	9404      	str	r4, [sp, #16]
 800c742:	4607      	mov	r7, r0
 800c744:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c748:	f7ff ffa8 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c74c:	fb06 9505 	mla	r5, r6, r5, r9
 800c750:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c754:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c758:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800c75c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c760:	6878      	ldr	r0, [r7, #4]
 800c762:	9505      	str	r5, [sp, #20]
 800c764:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c768:	f8ad 401c 	strh.w	r4, [sp, #28]
 800c76c:	f8ad 601e 	strh.w	r6, [sp, #30]
 800c770:	f8cd 8010 	str.w	r8, [sp, #16]
 800c774:	f8ad 4020 	strh.w	r4, [sp, #32]
 800c778:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c77c:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800c780:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800c784:	6803      	ldr	r3, [r0, #0]
 800c786:	a901      	add	r1, sp, #4
 800c788:	685b      	ldr	r3, [r3, #4]
 800c78a:	4798      	blx	r3
 800c78c:	b00b      	add	sp, #44	; 0x2c
 800c78e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800c794 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800c794:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c798:	b08a      	sub	sp, #40	; 0x28
 800c79a:	4698      	mov	r8, r3
 800c79c:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800c7a0:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800c7a4:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800c7a8:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800c7ac:	2300      	movs	r3, #0
 800c7ae:	2d0b      	cmp	r5, #11
 800c7b0:	4606      	mov	r6, r0
 800c7b2:	9304      	str	r3, [sp, #16]
 800c7b4:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800c7b8:	d138      	bne.n	800c82c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800c7ba:	2380      	movs	r3, #128	; 0x80
 800c7bc:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c7c0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c7c4:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c7c8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c7cc:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c7d0:	f88d 0020 	strb.w	r0, [sp, #32]
 800c7d4:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c7d8:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c7dc:	4630      	mov	r0, r6
 800c7de:	9203      	str	r2, [sp, #12]
 800c7e0:	f7ff ff5c 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c7e4:	2c0b      	cmp	r4, #11
 800c7e6:	bf98      	it	ls
 800c7e8:	4b1b      	ldrls	r3, [pc, #108]	; (800c858 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800c7ea:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800c7ee:	bf98      	it	ls
 800c7f0:	5d19      	ldrbls	r1, [r3, r4]
 800c7f2:	f8ad 701e 	strh.w	r7, [sp, #30]
 800c7f6:	bf88      	it	hi
 800c7f8:	2100      	movhi	r1, #0
 800c7fa:	fb02 8307 	mla	r3, r2, r7, r8
 800c7fe:	10c9      	asrs	r1, r1, #3
 800c800:	fb01 0003 	mla	r0, r1, r3, r0
 800c804:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800c808:	9005      	str	r0, [sp, #20]
 800c80a:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800c80e:	6870      	ldr	r0, [r6, #4]
 800c810:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800c814:	2300      	movs	r3, #0
 800c816:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800c81a:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c81e:	6803      	ldr	r3, [r0, #0]
 800c820:	a901      	add	r1, sp, #4
 800c822:	685b      	ldr	r3, [r3, #4]
 800c824:	4798      	blx	r3
 800c826:	b00a      	add	sp, #40	; 0x28
 800c828:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c82c:	2d02      	cmp	r5, #2
 800c82e:	d109      	bne.n	800c844 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800c830:	28ff      	cmp	r0, #255	; 0xff
 800c832:	d105      	bne.n	800c840 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800c834:	f1bc 0f00 	cmp.w	ip, #0
 800c838:	bf14      	ite	ne
 800c83a:	2340      	movne	r3, #64	; 0x40
 800c83c:	2320      	moveq	r3, #32
 800c83e:	e7bd      	b.n	800c7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c840:	2340      	movs	r3, #64	; 0x40
 800c842:	e7bb      	b.n	800c7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c844:	28ff      	cmp	r0, #255	; 0xff
 800c846:	d105      	bne.n	800c854 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800c848:	f1bc 0f00 	cmp.w	ip, #0
 800c84c:	bf14      	ite	ne
 800c84e:	2304      	movne	r3, #4
 800c850:	2301      	moveq	r3, #1
 800c852:	e7b3      	b.n	800c7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c854:	2304      	movs	r3, #4
 800c856:	e7b1      	b.n	800c7bc <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800c858:	08029e80 	.word	0x08029e80

0800c85c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800c85c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c860:	b08b      	sub	sp, #44	; 0x2c
 800c862:	461d      	mov	r5, r3
 800c864:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800c868:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800c86c:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800c870:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800c874:	bf14      	ite	ne
 800c876:	2308      	movne	r3, #8
 800c878:	2302      	moveq	r3, #2
 800c87a:	2400      	movs	r4, #0
 800c87c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c880:	4688      	mov	r8, r1
 800c882:	4693      	mov	fp, r2
 800c884:	9404      	str	r4, [sp, #16]
 800c886:	4607      	mov	r7, r0
 800c888:	f7ff ff08 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c88c:	2e0b      	cmp	r6, #11
 800c88e:	bf98      	it	ls
 800c890:	4b15      	ldrls	r3, [pc, #84]	; (800c8e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800c892:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800c896:	bf98      	it	ls
 800c898:	5d9c      	ldrbls	r4, [r3, r6]
 800c89a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c89e:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c8a2:	fb05 b50a 	mla	r5, r5, sl, fp
 800c8a6:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c8aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c8ae:	10e4      	asrs	r4, r4, #3
 800c8b0:	fb04 0405 	mla	r4, r4, r5, r0
 800c8b4:	2300      	movs	r3, #0
 800c8b6:	6878      	ldr	r0, [r7, #4]
 800c8b8:	9405      	str	r4, [sp, #20]
 800c8ba:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c8be:	f8ad a01e 	strh.w	sl, [sp, #30]
 800c8c2:	f8cd 8010 	str.w	r8, [sp, #16]
 800c8c6:	f88d 9020 	strb.w	r9, [sp, #32]
 800c8ca:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800c8ce:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800c8d2:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800c8d6:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800c8da:	6803      	ldr	r3, [r0, #0]
 800c8dc:	a901      	add	r1, sp, #4
 800c8de:	685b      	ldr	r3, [r3, #4]
 800c8e0:	4798      	blx	r3
 800c8e2:	b00b      	add	sp, #44	; 0x2c
 800c8e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c8e8:	08029e80 	.word	0x08029e80

0800c8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800c8ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c8f0:	461e      	mov	r6, r3
 800c8f2:	4b0a      	ldr	r3, [pc, #40]	; (800c91c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800c8f4:	460f      	mov	r7, r1
 800c8f6:	881d      	ldrh	r5, [r3, #0]
 800c8f8:	4690      	mov	r8, r2
 800c8fa:	f7ff fd23 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c8fe:	6803      	ldr	r3, [r0, #0]
 800c900:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c902:	4798      	blx	r3
 800c904:	280b      	cmp	r0, #11
 800c906:	bf9a      	itte	ls
 800c908:	4b05      	ldrls	r3, [pc, #20]	; (800c920 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800c90a:	5c1c      	ldrbls	r4, [r3, r0]
 800c90c:	2400      	movhi	r4, #0
 800c90e:	fb08 7005 	mla	r0, r8, r5, r7
 800c912:	10e4      	asrs	r4, r4, #3
 800c914:	fb04 6000 	mla	r0, r4, r0, r6
 800c918:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c91c:	20013752 	.word	0x20013752
 800c920:	08029e80 	.word	0x08029e80

0800c924 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800c924:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c926:	b08b      	sub	sp, #44	; 0x2c
 800c928:	461f      	mov	r7, r3
 800c92a:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800c92e:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800c932:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c936:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c93a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c93e:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c942:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c946:	f8ad 301c 	strh.w	r3, [sp, #28]
 800c94a:	2500      	movs	r5, #0
 800c94c:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c950:	f88d 3020 	strb.w	r3, [sp, #32]
 800c954:	4604      	mov	r4, r0
 800c956:	4616      	mov	r6, r2
 800c958:	9504      	str	r5, [sp, #16]
 800c95a:	f7ff fe9f 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800c95e:	463a      	mov	r2, r7
 800c960:	4631      	mov	r1, r6
 800c962:	4603      	mov	r3, r0
 800c964:	4620      	mov	r0, r4
 800c966:	f7ff ffc1 	bl	800c8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c96a:	4b0e      	ldr	r3, [pc, #56]	; (800c9a4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800c96c:	9005      	str	r0, [sp, #20]
 800c96e:	881b      	ldrh	r3, [r3, #0]
 800c970:	f8ad 301e 	strh.w	r3, [sp, #30]
 800c974:	f7ff fce6 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c978:	6803      	ldr	r3, [r0, #0]
 800c97a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c97c:	4798      	blx	r3
 800c97e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800c980:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800c984:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800c988:	9304      	str	r3, [sp, #16]
 800c98a:	6860      	ldr	r0, [r4, #4]
 800c98c:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c990:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800c994:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800c998:	6803      	ldr	r3, [r0, #0]
 800c99a:	a901      	add	r1, sp, #4
 800c99c:	685b      	ldr	r3, [r3, #4]
 800c99e:	4798      	blx	r3
 800c9a0:	b00b      	add	sp, #44	; 0x2c
 800c9a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c9a4:	20013752 	.word	0x20013752

0800c9a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800c9a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c9aa:	b08d      	sub	sp, #52	; 0x34
 800c9ac:	466b      	mov	r3, sp
 800c9ae:	e883 0006 	stmia.w	r3, {r1, r2}
 800c9b2:	2300      	movs	r3, #0
 800c9b4:	9306      	str	r3, [sp, #24]
 800c9b6:	6803      	ldr	r3, [r0, #0]
 800c9b8:	f8bd 6000 	ldrh.w	r6, [sp]
 800c9bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800c9be:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800c9c2:	2501      	movs	r5, #1
 800c9c4:	9503      	str	r5, [sp, #12]
 800c9c6:	4604      	mov	r4, r0
 800c9c8:	4798      	blx	r3
 800c9ca:	463a      	mov	r2, r7
 800c9cc:	4631      	mov	r1, r6
 800c9ce:	4603      	mov	r3, r0
 800c9d0:	4620      	mov	r0, r4
 800c9d2:	f7ff ff8b 	bl	800c8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800c9d6:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800c9d8:	9307      	str	r3, [sp, #28]
 800c9da:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800c9de:	f8ad 3020 	strh.w	r3, [sp, #32]
 800c9e2:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800c9e6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800c9ea:	4b0f      	ldr	r3, [pc, #60]	; (800ca28 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800c9ec:	9004      	str	r0, [sp, #16]
 800c9ee:	881b      	ldrh	r3, [r3, #0]
 800c9f0:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800c9f4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800c9f8:	f7ff fca4 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800c9fc:	6803      	ldr	r3, [r0, #0]
 800c9fe:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca00:	4798      	blx	r3
 800ca02:	23ff      	movs	r3, #255	; 0xff
 800ca04:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ca08:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ca0c:	6860      	ldr	r0, [r4, #4]
 800ca0e:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ca12:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ca16:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800ca1a:	6803      	ldr	r3, [r0, #0]
 800ca1c:	a903      	add	r1, sp, #12
 800ca1e:	685b      	ldr	r3, [r3, #4]
 800ca20:	4798      	blx	r3
 800ca22:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800ca24:	b00d      	add	sp, #52	; 0x34
 800ca26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ca28:	20013752 	.word	0x20013752

0800ca2c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800ca2c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ca30:	b08c      	sub	sp, #48	; 0x30
 800ca32:	461e      	mov	r6, r3
 800ca34:	466d      	mov	r5, sp
 800ca36:	2300      	movs	r3, #0
 800ca38:	e885 0006 	stmia.w	r5, {r1, r2}
 800ca3c:	9306      	str	r3, [sp, #24]
 800ca3e:	6803      	ldr	r3, [r0, #0]
 800ca40:	f8bd 7000 	ldrh.w	r7, [sp]
 800ca44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ca46:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800ca4a:	2501      	movs	r5, #1
 800ca4c:	9503      	str	r5, [sp, #12]
 800ca4e:	4604      	mov	r4, r0
 800ca50:	4798      	blx	r3
 800ca52:	4642      	mov	r2, r8
 800ca54:	4639      	mov	r1, r7
 800ca56:	4603      	mov	r3, r0
 800ca58:	4620      	mov	r0, r4
 800ca5a:	f7ff ff47 	bl	800c8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ca5e:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ca62:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ca66:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800ca6a:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ca6e:	4b11      	ldr	r3, [pc, #68]	; (800cab4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800ca70:	9004      	str	r0, [sp, #16]
 800ca72:	881b      	ldrh	r3, [r3, #0]
 800ca74:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ca78:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800ca7a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ca7e:	9607      	str	r6, [sp, #28]
 800ca80:	f7ff fc60 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800ca84:	6803      	ldr	r3, [r0, #0]
 800ca86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca88:	4798      	blx	r3
 800ca8a:	23ff      	movs	r3, #255	; 0xff
 800ca8c:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800ca90:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800ca94:	6860      	ldr	r0, [r4, #4]
 800ca96:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800ca9a:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800ca9e:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800caa2:	6803      	ldr	r3, [r0, #0]
 800caa4:	a903      	add	r1, sp, #12
 800caa6:	685b      	ldr	r3, [r3, #4]
 800caa8:	4798      	blx	r3
 800caaa:	4630      	mov	r0, r6
 800caac:	b00c      	add	sp, #48	; 0x30
 800caae:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cab2:	bf00      	nop
 800cab4:	20013752 	.word	0x20013752

0800cab8 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800cab8:	b5f0      	push	{r4, r5, r6, r7, lr}
 800caba:	b085      	sub	sp, #20
 800cabc:	ac02      	add	r4, sp, #8
 800cabe:	e884 0006 	stmia.w	r4, {r1, r2}
 800cac2:	4605      	mov	r5, r0
 800cac4:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800cac8:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800cacc:	f7ff fde6 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cad0:	463a      	mov	r2, r7
 800cad2:	4603      	mov	r3, r0
 800cad4:	4631      	mov	r1, r6
 800cad6:	4628      	mov	r0, r5
 800cad8:	f7ff ff08 	bl	800c8ec <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cadc:	4a05      	ldr	r2, [pc, #20]	; (800caf4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800cade:	682b      	ldr	r3, [r5, #0]
 800cae0:	8812      	ldrh	r2, [r2, #0]
 800cae2:	9200      	str	r2, [sp, #0]
 800cae4:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800cae6:	e894 0006 	ldmia.w	r4, {r1, r2}
 800caea:	4603      	mov	r3, r0
 800caec:	4628      	mov	r0, r5
 800caee:	47b0      	blx	r6
 800caf0:	b005      	add	sp, #20
 800caf2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800caf4:	20013752 	.word	0x20013752

0800caf8 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800caf8:	b570      	push	{r4, r5, r6, lr}
 800cafa:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800cafe:	4604      	mov	r4, r0
 800cb00:	b19b      	cbz	r3, 800cb2a <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800cb02:	2002      	movs	r0, #2
 800cb04:	f7f4 fbb8 	bl	8001278 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800cb08:	2300      	movs	r3, #0
 800cb0a:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800cb0e:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800cb12:	6823      	ldr	r3, [r4, #0]
 800cb14:	4620      	mov	r0, r4
 800cb16:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800cb1a:	f7ff fdbf 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb1e:	462b      	mov	r3, r5
 800cb20:	4601      	mov	r1, r0
 800cb22:	4620      	mov	r0, r4
 800cb24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb28:	4718      	bx	r3
 800cb2a:	bd70      	pop	{r4, r5, r6, pc}

0800cb2c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800cb2c:	b538      	push	{r3, r4, r5, lr}
 800cb2e:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800cb32:	428b      	cmp	r3, r1
 800cb34:	4604      	mov	r4, r0
 800cb36:	460d      	mov	r5, r1
 800cb38:	d006      	beq.n	800cb48 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800cb3a:	6803      	ldr	r3, [r0, #0]
 800cb3c:	b929      	cbnz	r1, 800cb4a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800cb3e:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800cb42:	4798      	blx	r3
 800cb44:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800cb48:	bd38      	pop	{r3, r4, r5, pc}
 800cb4a:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800cb4e:	e7f8      	b.n	800cb42 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800cb50 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800cb50:	b510      	push	{r4, lr}
 800cb52:	4b0d      	ldr	r3, [pc, #52]	; (800cb88 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800cb54:	781b      	ldrb	r3, [r3, #0]
 800cb56:	4604      	mov	r4, r0
 800cb58:	b95b      	cbnz	r3, 800cb72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cb5a:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800cb5e:	2b02      	cmp	r3, #2
 800cb60:	d007      	beq.n	800cb72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cb62:	6840      	ldr	r0, [r0, #4]
 800cb64:	f000 f92a 	bl	800cdbc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800cb68:	b118      	cbz	r0, 800cb72 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800cb6a:	6862      	ldr	r2, [r4, #4]
 800cb6c:	7a53      	ldrb	r3, [r2, #9]
 800cb6e:	2b00      	cmp	r3, #0
 800cb70:	d0fc      	beq.n	800cb6c <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800cb72:	f7f4 fccd 	bl	8001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cb76:	4620      	mov	r0, r4
 800cb78:	2100      	movs	r1, #0
 800cb7a:	f7ff ffd7 	bl	800cb2c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cb7e:	4620      	mov	r0, r4
 800cb80:	f7ff fd8c 	bl	800c69c <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cb84:	bd10      	pop	{r4, pc}
 800cb86:	bf00      	nop
 800cb88:	20013756 	.word	0x20013756

0800cb8c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>:
 800cb8c:	b570      	push	{r4, r5, r6, lr}
 800cb8e:	4604      	mov	r4, r0
 800cb90:	6803      	ldr	r3, [r0, #0]
 800cb92:	b919      	cbnz	r1, 800cb9c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE+0x10>
 800cb94:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cb9a:	4718      	bx	r3
 800cb9c:	2200      	movs	r2, #0
 800cb9e:	f890 6078 	ldrb.w	r6, [r0, #120]	; 0x78
 800cba2:	f880 2078 	strb.w	r2, [r0, #120]	; 0x78
 800cba6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cba8:	4798      	blx	r3
 800cbaa:	f884 6078 	strb.w	r6, [r4, #120]	; 0x78
 800cbae:	4605      	mov	r5, r0
 800cbb0:	2101      	movs	r1, #1
 800cbb2:	4620      	mov	r0, r4
 800cbb4:	f7ff ffba 	bl	800cb2c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cbb8:	4628      	mov	r0, r5
 800cbba:	bd70      	pop	{r4, r5, r6, pc}

0800cbbc <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800cbbc:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800cbc0:	1a13      	subs	r3, r2, r0
 800cbc2:	4258      	negs	r0, r3
 800cbc4:	4158      	adcs	r0, r3
 800cbc6:	4770      	bx	lr

0800cbc8 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800cbc8:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800cbcc:	1a9b      	subs	r3, r3, r2
 800cbce:	2b00      	cmp	r3, #0
 800cbd0:	bfdc      	itt	le
 800cbd2:	6882      	ldrle	r2, [r0, #8]
 800cbd4:	189b      	addle	r3, r3, r2
 800cbd6:	2b01      	cmp	r3, #1
 800cbd8:	bfcc      	ite	gt
 800cbda:	2000      	movgt	r0, #0
 800cbdc:	2001      	movle	r0, #1
 800cbde:	4770      	bx	lr

0800cbe0 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800cbe0:	6902      	ldr	r2, [r0, #16]
 800cbe2:	6843      	ldr	r3, [r0, #4]
 800cbe4:	2024      	movs	r0, #36	; 0x24
 800cbe6:	fb00 3002 	mla	r0, r0, r2, r3
 800cbea:	4770      	bx	lr

0800cbec <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800cbec:	6803      	ldr	r3, [r0, #0]
 800cbee:	691b      	ldr	r3, [r3, #16]
 800cbf0:	4718      	bx	r3

0800cbf2 <_ZN8touchgfx13DMA_Interface7executeEv>:
 800cbf2:	b570      	push	{r4, r5, r6, lr}
 800cbf4:	2301      	movs	r3, #1
 800cbf6:	7203      	strb	r3, [r0, #8]
 800cbf8:	4604      	mov	r4, r0
 800cbfa:	6840      	ldr	r0, [r0, #4]
 800cbfc:	6803      	ldr	r3, [r0, #0]
 800cbfe:	699b      	ldr	r3, [r3, #24]
 800cc00:	4798      	blx	r3
 800cc02:	6803      	ldr	r3, [r0, #0]
 800cc04:	2b40      	cmp	r3, #64	; 0x40
 800cc06:	4605      	mov	r5, r0
 800cc08:	d00c      	beq.n	800cc24 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc0a:	d810      	bhi.n	800cc2e <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800cc0c:	2b04      	cmp	r3, #4
 800cc0e:	d01d      	beq.n	800cc4c <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800cc10:	d804      	bhi.n	800cc1c <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800cc12:	2b01      	cmp	r3, #1
 800cc14:	d006      	beq.n	800cc24 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc16:	2b02      	cmp	r3, #2
 800cc18:	d02c      	beq.n	800cc74 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800cc1a:	bd70      	pop	{r4, r5, r6, pc}
 800cc1c:	2b08      	cmp	r3, #8
 800cc1e:	d01d      	beq.n	800cc5c <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800cc20:	2b20      	cmp	r3, #32
 800cc22:	d1fa      	bne.n	800cc1a <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800cc24:	6823      	ldr	r3, [r4, #0]
 800cc26:	4620      	mov	r0, r4
 800cc28:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc2a:	4798      	blx	r3
 800cc2c:	e013      	b.n	800cc56 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800cc2e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cc32:	d0f7      	beq.n	800cc24 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc34:	d804      	bhi.n	800cc40 <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800cc36:	2b80      	cmp	r3, #128	; 0x80
 800cc38:	d0f4      	beq.n	800cc24 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc3a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800cc3e:	e7f0      	b.n	800cc22 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800cc40:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800cc44:	d0ee      	beq.n	800cc24 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800cc46:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800cc4a:	e7e5      	b.n	800cc18 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800cc4c:	6823      	ldr	r3, [r4, #0]
 800cc4e:	7f01      	ldrb	r1, [r0, #28]
 800cc50:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc52:	4620      	mov	r0, r4
 800cc54:	4798      	blx	r3
 800cc56:	6823      	ldr	r3, [r4, #0]
 800cc58:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cc5a:	e006      	b.n	800cc6a <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800cc5c:	6823      	ldr	r3, [r4, #0]
 800cc5e:	7f01      	ldrb	r1, [r0, #28]
 800cc60:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800cc62:	4620      	mov	r0, r4
 800cc64:	4798      	blx	r3
 800cc66:	6823      	ldr	r3, [r4, #0]
 800cc68:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cc6a:	4629      	mov	r1, r5
 800cc6c:	4620      	mov	r0, r4
 800cc6e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cc72:	4718      	bx	r3
 800cc74:	6823      	ldr	r3, [r4, #0]
 800cc76:	4620      	mov	r0, r4
 800cc78:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800cc7a:	4798      	blx	r3
 800cc7c:	e7f3      	b.n	800cc66 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800cc7e <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800cc7e:	4770      	bx	lr

0800cc80 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800cc80:	4770      	bx	lr

0800cc82 <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800cc82:	4770      	bx	lr

0800cc84 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800cc84:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800cc88:	1ad2      	subs	r2, r2, r3
 800cc8a:	2a00      	cmp	r2, #0
 800cc8c:	b510      	push	{r4, lr}
 800cc8e:	bfdc      	itt	le
 800cc90:	6884      	ldrle	r4, [r0, #8]
 800cc92:	1912      	addle	r2, r2, r4
 800cc94:	2a01      	cmp	r2, #1
 800cc96:	dd16      	ble.n	800ccc6 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800cc98:	6842      	ldr	r2, [r0, #4]
 800cc9a:	2424      	movs	r4, #36	; 0x24
 800cc9c:	fb04 2303 	mla	r3, r4, r3, r2
 800cca0:	f101 0220 	add.w	r2, r1, #32
 800cca4:	f851 4b04 	ldr.w	r4, [r1], #4
 800cca8:	f843 4b04 	str.w	r4, [r3], #4
 800ccac:	4291      	cmp	r1, r2
 800ccae:	d1f9      	bne.n	800cca4 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800ccb0:	780a      	ldrb	r2, [r1, #0]
 800ccb2:	701a      	strb	r2, [r3, #0]
 800ccb4:	68c3      	ldr	r3, [r0, #12]
 800ccb6:	6882      	ldr	r2, [r0, #8]
 800ccb8:	f3bf 8f5b 	dmb	ish
 800ccbc:	3301      	adds	r3, #1
 800ccbe:	429a      	cmp	r2, r3
 800ccc0:	bfd8      	it	le
 800ccc2:	1a9b      	suble	r3, r3, r2
 800ccc4:	60c3      	str	r3, [r0, #12]
 800ccc6:	bd10      	pop	{r4, pc}

0800ccc8 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800ccc8:	6903      	ldr	r3, [r0, #16]
 800ccca:	6882      	ldr	r2, [r0, #8]
 800cccc:	f3bf 8f5b 	dmb	ish
 800ccd0:	3301      	adds	r3, #1
 800ccd2:	429a      	cmp	r2, r3
 800ccd4:	bfd8      	it	le
 800ccd6:	1a9b      	suble	r3, r3, r2
 800ccd8:	6103      	str	r3, [r0, #16]
 800ccda:	4770      	bx	lr

0800ccdc <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800ccdc:	b570      	push	{r4, r5, r6, lr}
 800ccde:	4604      	mov	r4, r0
 800cce0:	460e      	mov	r6, r1
 800cce2:	6860      	ldr	r0, [r4, #4]
 800cce4:	6803      	ldr	r3, [r0, #0]
 800cce6:	685b      	ldr	r3, [r3, #4]
 800cce8:	4798      	blx	r3
 800ccea:	2800      	cmp	r0, #0
 800ccec:	d1f9      	bne.n	800cce2 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800ccee:	4d0d      	ldr	r5, [pc, #52]	; (800cd24 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800ccf0:	6828      	ldr	r0, [r5, #0]
 800ccf2:	6803      	ldr	r3, [r0, #0]
 800ccf4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ccf6:	4798      	blx	r3
 800ccf8:	f7f4 fc18 	bl	800152c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800ccfc:	6828      	ldr	r0, [r5, #0]
 800ccfe:	2101      	movs	r1, #1
 800cd00:	f7ff ff14 	bl	800cb2c <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800cd04:	6860      	ldr	r0, [r4, #4]
 800cd06:	6803      	ldr	r3, [r0, #0]
 800cd08:	4631      	mov	r1, r6
 800cd0a:	689b      	ldr	r3, [r3, #8]
 800cd0c:	4798      	blx	r3
 800cd0e:	6823      	ldr	r3, [r4, #0]
 800cd10:	4620      	mov	r0, r4
 800cd12:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cd14:	4798      	blx	r3
 800cd16:	6828      	ldr	r0, [r5, #0]
 800cd18:	6803      	ldr	r3, [r0, #0]
 800cd1a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd1e:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800cd20:	4718      	bx	r3
 800cd22:	bf00      	nop
 800cd24:	20013758 	.word	0x20013758

0800cd28 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800cd28:	b508      	push	{r3, lr}
 800cd2a:	f7f4 fbf1 	bl	8001510 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800cd2e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800cd32:	f7f4 bbf5 	b.w	8001520 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800cd36 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800cd36:	b510      	push	{r4, lr}
 800cd38:	2114      	movs	r1, #20
 800cd3a:	4604      	mov	r4, r0
 800cd3c:	f015 f92d 	bl	8021f9a <_ZdlPvj>
 800cd40:	4620      	mov	r0, r4
 800cd42:	bd10      	pop	{r4, pc}

0800cd44 <_ZN8touchgfx13DMA_Interface5startEv>:
 800cd44:	b510      	push	{r4, lr}
 800cd46:	4604      	mov	r4, r0
 800cd48:	6840      	ldr	r0, [r0, #4]
 800cd4a:	6803      	ldr	r3, [r0, #0]
 800cd4c:	681b      	ldr	r3, [r3, #0]
 800cd4e:	4798      	blx	r3
 800cd50:	b948      	cbnz	r0, 800cd66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd52:	7a63      	ldrb	r3, [r4, #9]
 800cd54:	b13b      	cbz	r3, 800cd66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd56:	7a23      	ldrb	r3, [r4, #8]
 800cd58:	b92b      	cbnz	r3, 800cd66 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800cd5a:	6823      	ldr	r3, [r4, #0]
 800cd5c:	4620      	mov	r0, r4
 800cd5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd60:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800cd64:	4718      	bx	r3
 800cd66:	bd10      	pop	{r4, pc}

0800cd68 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800cd68:	b570      	push	{r4, r5, r6, lr}
 800cd6a:	4604      	mov	r4, r0
 800cd6c:	6840      	ldr	r0, [r0, #4]
 800cd6e:	6803      	ldr	r3, [r0, #0]
 800cd70:	681b      	ldr	r3, [r3, #0]
 800cd72:	4798      	blx	r3
 800cd74:	4605      	mov	r5, r0
 800cd76:	b930      	cbnz	r0, 800cd86 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cd78:	7a23      	ldrb	r3, [r4, #8]
 800cd7a:	b123      	cbz	r3, 800cd86 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800cd7c:	6860      	ldr	r0, [r4, #4]
 800cd7e:	6803      	ldr	r3, [r0, #0]
 800cd80:	695b      	ldr	r3, [r3, #20]
 800cd82:	4798      	blx	r3
 800cd84:	7225      	strb	r5, [r4, #8]
 800cd86:	6860      	ldr	r0, [r4, #4]
 800cd88:	6803      	ldr	r3, [r0, #0]
 800cd8a:	681b      	ldr	r3, [r3, #0]
 800cd8c:	4798      	blx	r3
 800cd8e:	b928      	cbnz	r0, 800cd9c <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800cd90:	6823      	ldr	r3, [r4, #0]
 800cd92:	4620      	mov	r0, r4
 800cd94:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd96:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cd9a:	4718      	bx	r3
 800cd9c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800cda0:	f7f4 bbcc 	b.w	800153c <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800cda4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800cda4:	b510      	push	{r4, lr}
 800cda6:	4c04      	ldr	r4, [pc, #16]	; (800cdb8 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800cda8:	6082      	str	r2, [r0, #8]
 800cdaa:	2200      	movs	r2, #0
 800cdac:	e9c0 4100 	strd	r4, r1, [r0]
 800cdb0:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800cdb4:	bd10      	pop	{r4, pc}
 800cdb6:	bf00      	nop
 800cdb8:	08029e94 	.word	0x08029e94

0800cdbc <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800cdbc:	6840      	ldr	r0, [r0, #4]
 800cdbe:	6803      	ldr	r3, [r0, #0]
 800cdc0:	681b      	ldr	r3, [r3, #0]
 800cdc2:	4718      	bx	r3

0800cdc4 <_ZNK8touchgfx19PainterRGB565Bitmap18getRenderingMethodEv>:
 800cdc4:	b508      	push	{r3, lr}
 800cdc6:	4b05      	ldr	r3, [pc, #20]	; (800cddc <_ZNK8touchgfx19PainterRGB565Bitmap18getRenderingMethodEv+0x18>)
 800cdc8:	6818      	ldr	r0, [r3, #0]
 800cdca:	6803      	ldr	r3, [r0, #0]
 800cdcc:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800cdd0:	4798      	blx	r3
 800cdd2:	1e43      	subs	r3, r0, #1
 800cdd4:	4258      	negs	r0, r3
 800cdd6:	4158      	adcs	r0, r3
 800cdd8:	bd08      	pop	{r3, pc}
 800cdda:	bf00      	nop
 800cddc:	20013758 	.word	0x20013758

0800cde0 <_ZN8touchgfx19PainterRGB565BitmapD1Ev>:
 800cde0:	4770      	bx	lr

0800cde2 <_ZThn8_N8touchgfx19PainterRGB565BitmapD1Ev>:
 800cde2:	3808      	subs	r0, #8
 800cde4:	4770      	bx	lr
	...

0800cde8 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE>:
 800cde8:	b538      	push	{r3, r4, r5, lr}
 800cdea:	4b10      	ldr	r3, [pc, #64]	; (800ce2c <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x44>)
 800cdec:	f9b1 5004 	ldrsh.w	r5, [r1, #4]
 800cdf0:	781b      	ldrb	r3, [r3, #0]
 800cdf2:	8085      	strh	r5, [r0, #4]
 800cdf4:	4604      	mov	r4, r0
 800cdf6:	b96b      	cbnz	r3, 800ce14 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x2c>
 800cdf8:	f9b0 201c 	ldrsh.w	r2, [r0, #28]
 800cdfc:	8462      	strh	r2, [r4, #34]	; 0x22
 800cdfe:	b963      	cbnz	r3, 800ce1a <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x32>
 800ce00:	f9b4 001e 	ldrsh.w	r0, [r4, #30]
 800ce04:	84a0      	strh	r0, [r4, #36]	; 0x24
 800ce06:	89a0      	ldrh	r0, [r4, #12]
 800ce08:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ce0c:	1ac0      	subs	r0, r0, r3
 800ce0e:	bf18      	it	ne
 800ce10:	2001      	movne	r0, #1
 800ce12:	bd38      	pop	{r3, r4, r5, pc}
 800ce14:	f9b0 201e 	ldrsh.w	r2, [r0, #30]
 800ce18:	e7f0      	b.n	800cdfc <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x14>
 800ce1a:	f104 000c 	add.w	r0, r4, #12
 800ce1e:	f008 f8d7 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ce22:	1b40      	subs	r0, r0, r5
 800ce24:	8ba5      	ldrh	r5, [r4, #28]
 800ce26:	1b40      	subs	r0, r0, r5
 800ce28:	b200      	sxth	r0, r0
 800ce2a:	e7eb      	b.n	800ce04 <_ZNK8touchgfx19PainterRGB565Bitmap5setupERKNS_4RectE+0x1c>
 800ce2c:	20013750 	.word	0x20013750

0800ce30 <_ZNK8touchgfx19PainterRGB565Bitmap8tearDownEv>:
 800ce30:	f7f4 bd38 	b.w	80018a4 <_ZN8touchgfx5paint8tearDownEv>

0800ce34 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>:
 800ce34:	b510      	push	{r4, lr}
 800ce36:	212c      	movs	r1, #44	; 0x2c
 800ce38:	4604      	mov	r4, r0
 800ce3a:	f015 f8ae 	bl	8021f9a <_ZdlPvj>
 800ce3e:	4620      	mov	r0, r4
 800ce40:	bd10      	pop	{r4, pc}

0800ce42 <_ZThn8_N8touchgfx19PainterRGB565BitmapD0Ev>:
 800ce42:	f1a0 0008 	sub.w	r0, r0, #8
 800ce46:	e7f5      	b.n	800ce34 <_ZN8touchgfx19PainterRGB565BitmapD0Ev>

0800ce48 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh>:
 800ce48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ce4c:	b085      	sub	sp, #20
 800ce4e:	4606      	mov	r6, r0
 800ce50:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 800ce54:	8cb5      	ldrh	r5, [r6, #36]	; 0x24
 800ce56:	9001      	str	r0, [sp, #4]
 800ce58:	8c77      	ldrh	r7, [r6, #34]	; 0x22
 800ce5a:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800ce5e:	f9bd 403c 	ldrsh.w	r4, [sp, #60]	; 0x3c
 800ce62:	441f      	add	r7, r3
 800ce64:	4428      	add	r0, r5
 800ce66:	f896 5020 	ldrb.w	r5, [r6, #32]
 800ce6a:	b2bf      	uxth	r7, r7
 800ce6c:	b23b      	sxth	r3, r7
 800ce6e:	b200      	sxth	r0, r0
 800ce70:	b1a5      	cbz	r5, 800ce9c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x54>
 800ce72:	f9b6 7014 	ldrsh.w	r7, [r6, #20]
 800ce76:	fb93 f5f7 	sdiv	r5, r3, r7
 800ce7a:	fb07 3315 	mls	r3, r7, r5, r3
 800ce7e:	f9b6 5016 	ldrsh.w	r5, [r6, #22]
 800ce82:	fb90 fcf5 	sdiv	ip, r0, r5
 800ce86:	2b00      	cmp	r3, #0
 800ce88:	fb05 001c 	mls	r0, r5, ip, r0
 800ce8c:	bfb8      	it	lt
 800ce8e:	19db      	addlt	r3, r3, r7
 800ce90:	2800      	cmp	r0, #0
 800ce92:	b21b      	sxth	r3, r3
 800ce94:	da00      	bge.n	800ce98 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x50>
 800ce96:	4428      	add	r0, r5
 800ce98:	b200      	sxth	r0, r0
 800ce9a:	e018      	b.n	800cece <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x86>
 800ce9c:	2b00      	cmp	r3, #0
 800ce9e:	da07      	bge.n	800ceb0 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x68>
 800cea0:	4423      	add	r3, r4
 800cea2:	2b00      	cmp	r3, #0
 800cea4:	dd62      	ble.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>
 800cea6:	443c      	add	r4, r7
 800cea8:	1bd7      	subs	r7, r2, r7
 800ceaa:	b224      	sxth	r4, r4
 800ceac:	b23a      	sxth	r2, r7
 800ceae:	462b      	mov	r3, r5
 800ceb0:	f9b6 5014 	ldrsh.w	r5, [r6, #20]
 800ceb4:	429d      	cmp	r5, r3
 800ceb6:	dd59      	ble.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>
 800ceb8:	2800      	cmp	r0, #0
 800ceba:	db57      	blt.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>
 800cebc:	f9b6 7016 	ldrsh.w	r7, [r6, #22]
 800cec0:	4287      	cmp	r7, r0
 800cec2:	dd53      	ble.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>
 800cec4:	191f      	adds	r7, r3, r4
 800cec6:	42af      	cmp	r7, r5
 800cec8:	dd01      	ble.n	800cece <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x86>
 800ceca:	1aec      	subs	r4, r5, r3
 800cecc:	b224      	sxth	r4, r4
 800cece:	eb01 0542 	add.w	r5, r1, r2, lsl #1
 800ced2:	f9b6 1014 	ldrsh.w	r1, [r6, #20]
 800ced6:	69b7      	ldr	r7, [r6, #24]
 800ced8:	1aca      	subs	r2, r1, r3
 800ceda:	4348      	muls	r0, r1
 800cedc:	7bb1      	ldrb	r1, [r6, #14]
 800cede:	eb05 0944 	add.w	r9, r5, r4, lsl #1
 800cee2:	b212      	sxth	r2, r2
 800cee4:	b1a9      	cbz	r1, 800cf12 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xca>
 800cee6:	eb07 0780 	add.w	r7, r7, r0, lsl #2
 800ceea:	eb07 0183 	add.w	r1, r7, r3, lsl #2
 800ceee:	42a2      	cmp	r2, r4
 800cef0:	bfa8      	it	ge
 800cef2:	4622      	movge	r2, r4
 800cef4:	4690      	mov	r8, r2
 800cef6:	4628      	mov	r0, r5
 800cef8:	9b01      	ldr	r3, [sp, #4]
 800cefa:	eb05 0548 	add.w	r5, r5, r8, lsl #1
 800cefe:	1aa4      	subs	r4, r4, r2
 800cf00:	f7f4 fcfe 	bl	8001900 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 800cf04:	45a9      	cmp	r9, r5
 800cf06:	b224      	sxth	r4, r4
 800cf08:	4639      	mov	r1, r7
 800cf0a:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
 800cf0e:	d8ee      	bhi.n	800ceee <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xa6>
 800cf10:	e02c      	b.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>
 800cf12:	eb07 0140 	add.w	r1, r7, r0, lsl #1
 800cf16:	6ab7      	ldr	r7, [r6, #40]	; 0x28
 800cf18:	9100      	str	r1, [sp, #0]
 800cf1a:	eb01 0143 	add.w	r1, r1, r3, lsl #1
 800cf1e:	2f00      	cmp	r7, #0
 800cf20:	d063      	beq.n	800cfea <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x1a2>
 800cf22:	1838      	adds	r0, r7, r0
 800cf24:	9002      	str	r0, [sp, #8]
 800cf26:	4403      	add	r3, r0
 800cf28:	f04f 0aff 	mov.w	sl, #255	; 0xff
 800cf2c:	42a2      	cmp	r2, r4
 800cf2e:	bfa8      	it	ge
 800cf30:	4622      	movge	r2, r4
 800cf32:	eb05 0042 	add.w	r0, r5, r2, lsl #1
 800cf36:	1aa4      	subs	r4, r4, r2
 800cf38:	9003      	str	r0, [sp, #12]
 800cf3a:	b224      	sxth	r4, r4
 800cf3c:	f813 2b01 	ldrb.w	r2, [r3], #1
 800cf40:	9801      	ldr	r0, [sp, #4]
 800cf42:	4342      	muls	r2, r0
 800cf44:	1c57      	adds	r7, r2, #1
 800cf46:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 800cf4a:	123f      	asrs	r7, r7, #8
 800cf4c:	2fff      	cmp	r7, #255	; 0xff
 800cf4e:	d110      	bne.n	800cf72 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x12a>
 800cf50:	880a      	ldrh	r2, [r1, #0]
 800cf52:	802a      	strh	r2, [r5, #0]
 800cf54:	9a03      	ldr	r2, [sp, #12]
 800cf56:	3502      	adds	r5, #2
 800cf58:	42aa      	cmp	r2, r5
 800cf5a:	f101 0102 	add.w	r1, r1, #2
 800cf5e:	d8ed      	bhi.n	800cf3c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xf4>
 800cf60:	45a9      	cmp	r9, r5
 800cf62:	9900      	ldr	r1, [sp, #0]
 800cf64:	9b02      	ldr	r3, [sp, #8]
 800cf66:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
 800cf6a:	d8df      	bhi.n	800cf2c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0xe4>
 800cf6c:	b005      	add	sp, #20
 800cf6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cf72:	fa5f fc87 	uxtb.w	ip, r7
 800cf76:	2f00      	cmp	r7, #0
 800cf78:	d0ec      	beq.n	800cf54 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x10c>
 800cf7a:	f8b5 8000 	ldrh.w	r8, [r5]
 800cf7e:	8808      	ldrh	r0, [r1, #0]
 800cf80:	f428 62ff 	bic.w	r2, r8, #2040	; 0x7f8
 800cf84:	ea6f 0c0c 	mvn.w	ip, ip
 800cf88:	fa5f fc8c 	uxtb.w	ip, ip
 800cf8c:	f420 6eff 	bic.w	lr, r0, #2040	; 0x7f8
 800cf90:	f022 0207 	bic.w	r2, r2, #7
 800cf94:	fb0c f202 	mul.w	r2, ip, r2
 800cf98:	f408 6bfc 	and.w	fp, r8, #2016	; 0x7e0
 800cf9c:	f02e 0e07 	bic.w	lr, lr, #7
 800cfa0:	fb07 2e0e 	mla	lr, r7, lr, r2
 800cfa4:	fb0c fb0b 	mul.w	fp, ip, fp
 800cfa8:	f400 62fc 	and.w	r2, r0, #2016	; 0x7e0
 800cfac:	fb9e fefa 	sdiv	lr, lr, sl
 800cfb0:	f008 081f 	and.w	r8, r8, #31
 800cfb4:	f42e 6eff 	bic.w	lr, lr, #2040	; 0x7f8
 800cfb8:	f02e 0e07 	bic.w	lr, lr, #7
 800cfbc:	fb07 b202 	mla	r2, r7, r2, fp
 800cfc0:	f000 001f 	and.w	r0, r0, #31
 800cfc4:	fb92 f2fa 	sdiv	r2, r2, sl
 800cfc8:	fb0c f808 	mul.w	r8, ip, r8
 800cfcc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 800cfd0:	ea4e 0e02 	orr.w	lr, lr, r2
 800cfd4:	fb07 8000 	mla	r0, r7, r0, r8
 800cfd8:	fb90 f2fa 	sdiv	r2, r0, sl
 800cfdc:	f002 021f 	and.w	r2, r2, #31
 800cfe0:	ea4e 0e02 	orr.w	lr, lr, r2
 800cfe4:	f8a5 e000 	strh.w	lr, [r5]
 800cfe8:	e7b4      	b.n	800cf54 <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x10c>
 800cfea:	42a2      	cmp	r2, r4
 800cfec:	bfa8      	it	ge
 800cfee:	4622      	movge	r2, r4
 800cff0:	4617      	mov	r7, r2
 800cff2:	4628      	mov	r0, r5
 800cff4:	9b01      	ldr	r3, [sp, #4]
 800cff6:	eb05 0547 	add.w	r5, r5, r7, lsl #1
 800cffa:	1aa4      	subs	r4, r4, r2
 800cffc:	f7f4 fc5c 	bl	80018b8 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 800d000:	45a9      	cmp	r9, r5
 800d002:	b224      	sxth	r4, r4
 800d004:	9900      	ldr	r1, [sp, #0]
 800d006:	f9b6 2014 	ldrsh.w	r2, [r6, #20]
 800d00a:	d8ee      	bhi.n	800cfea <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x1a2>
 800d00c:	e7ae      	b.n	800cf6c <_ZNK8touchgfx19PainterRGB565Bitmap5paintEPhssssh+0x124>

0800d00e <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
 800d00e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d010:	880b      	ldrh	r3, [r1, #0]
 800d012:	8183      	strh	r3, [r0, #12]
 800d014:	f100 050c 	add.w	r5, r0, #12
 800d018:	4604      	mov	r4, r0
 800d01a:	4628      	mov	r0, r5
 800d01c:	f008 f948 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800d020:	73a0      	strb	r0, [r4, #14]
 800d022:	4628      	mov	r0, r5
 800d024:	f007 ffd4 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800d028:	4607      	mov	r7, r0
 800d02a:	4628      	mov	r0, r5
 800d02c:	f008 f804 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800d030:	2300      	movs	r3, #0
 800d032:	6123      	str	r3, [r4, #16]
 800d034:	82e0      	strh	r0, [r4, #22]
 800d036:	82a7      	strh	r7, [r4, #20]
 800d038:	f104 0010 	add.w	r0, r4, #16
 800d03c:	f004 fac8 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800d040:	4628      	mov	r0, r5
 800d042:	f008 f8b1 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 800d046:	61a0      	str	r0, [r4, #24]
 800d048:	4628      	mov	r0, r5
 800d04a:	f008 f8dd 	bl	8015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800d04e:	62a0      	str	r0, [r4, #40]	; 0x28
 800d050:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800d052 <_ZThn8_N8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>:
 800d052:	f1a0 0008 	sub.w	r0, r0, #8
 800d056:	f7ff bfda 	b.w	800d00e <_ZN8touchgfx19PainterRGB565Bitmap9setBitmapERKNS_6BitmapE>

0800d05a <_ZN8touchgfx6CircleD1Ev>:
 800d05a:	4770      	bx	lr

0800d05c <_ZN8touchgfx6CircleD0Ev>:
 800d05c:	b510      	push	{r4, lr}
 800d05e:	2148      	movs	r1, #72	; 0x48
 800d060:	4604      	mov	r4, r0
 800d062:	f014 ff9a 	bl	8021f9a <_ZdlPvj>
 800d066:	4620      	mov	r0, r4
 800d068:	bd10      	pop	{r4, pc}

0800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>:
 800d06a:	b507      	push	{r0, r1, r2, lr}
 800d06c:	f44f 4200 	mov.w	r2, #32768	; 0x8000
 800d070:	ab01      	add	r3, sp, #4
 800d072:	6809      	ldr	r1, [r1, #0]
 800d074:	6800      	ldr	r0, [r0, #0]
 800d076:	f005 fec8 	bl	8012e0a <_ZN8touchgfx6muldivElllRl>
 800d07a:	b003      	add	sp, #12
 800d07c:	f85d fb04 	ldr.w	pc, [sp], #4

0800d080 <_ZN8touchgfx7CWRUtil4sineEi>:
 800d080:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800d084:	fb90 f2f3 	sdiv	r2, r0, r3
 800d088:	fb02 0013 	mls	r0, r2, r3, r0
 800d08c:	2800      	cmp	r0, #0
 800d08e:	bfb8      	it	lt
 800d090:	18c0      	addlt	r0, r0, r3
 800d092:	285a      	cmp	r0, #90	; 0x5a
 800d094:	4b09      	ldr	r3, [pc, #36]	; (800d0bc <_ZN8touchgfx7CWRUtil4sineEi+0x3c>)
 800d096:	dc02      	bgt.n	800d09e <_ZN8touchgfx7CWRUtil4sineEi+0x1e>
 800d098:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d09c:	4770      	bx	lr
 800d09e:	28b4      	cmp	r0, #180	; 0xb4
 800d0a0:	dc02      	bgt.n	800d0a8 <_ZN8touchgfx7CWRUtil4sineEi+0x28>
 800d0a2:	f1c0 00b4 	rsb	r0, r0, #180	; 0xb4
 800d0a6:	e7f7      	b.n	800d098 <_ZN8touchgfx7CWRUtil4sineEi+0x18>
 800d0a8:	f5b0 7f87 	cmp.w	r0, #270	; 0x10e
 800d0ac:	bfd4      	ite	le
 800d0ae:	38b4      	suble	r0, #180	; 0xb4
 800d0b0:	f5c0 70b4 	rsbgt	r0, r0, #360	; 0x168
 800d0b4:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 800d0b8:	4240      	negs	r0, r0
 800d0ba:	4770      	bx	lr
 800d0bc:	08029ef0 	.word	0x08029ef0

0800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>:
 800d0c0:	f44f 5334 	mov.w	r3, #11520	; 0x2d00
 800d0c4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800d0c6:	fb90 f2f3 	sdiv	r2, r0, r3
 800d0ca:	fb02 0013 	mls	r0, r2, r3, r0
 800d0ce:	2800      	cmp	r0, #0
 800d0d0:	bfb8      	it	lt
 800d0d2:	18c0      	addlt	r0, r0, r3
 800d0d4:	1144      	asrs	r4, r0, #5
 800d0d6:	f000 061f 	and.w	r6, r0, #31
 800d0da:	4620      	mov	r0, r4
 800d0dc:	f7ff ffd0 	bl	800d080 <_ZN8touchgfx7CWRUtil4sineEi>
 800d0e0:	4605      	mov	r5, r0
 800d0e2:	b90e      	cbnz	r6, 800d0e8 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x28>
 800d0e4:	b002      	add	sp, #8
 800d0e6:	bd70      	pop	{r4, r5, r6, pc}
 800d0e8:	1c60      	adds	r0, r4, #1
 800d0ea:	f7ff ffc9 	bl	800d080 <_ZN8touchgfx7CWRUtil4sineEi>
 800d0ee:	ab01      	add	r3, sp, #4
 800d0f0:	2220      	movs	r2, #32
 800d0f2:	4631      	mov	r1, r6
 800d0f4:	1b40      	subs	r0, r0, r5
 800d0f6:	f005 fe88 	bl	8012e0a <_ZN8touchgfx6muldivElllRl>
 800d0fa:	4428      	add	r0, r5
 800d0fc:	e7f2      	b.n	800d0e4 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E+0x24>

0800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>:
 800d0fe:	b508      	push	{r3, lr}
 800d100:	f5c0 6034 	rsb	r0, r0, #2880	; 0xb40
 800d104:	f7ff ffdc 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d108:	bd08      	pop	{r3, pc}
	...

0800d10c <_ZN8touchgfx6CircleC1Ev>:
 800d10c:	b510      	push	{r4, lr}
 800d10e:	4604      	mov	r4, r0
 800d110:	f000 fd6a 	bl	800dbe8 <_ZN8touchgfx12CanvasWidgetC1Ev>
 800d114:	4b08      	ldr	r3, [pc, #32]	; (800d138 <_ZN8touchgfx6CircleC1Ev+0x2c>)
 800d116:	6023      	str	r3, [r4, #0]
 800d118:	f44f 5234 	mov.w	r2, #11520	; 0x2d00
 800d11c:	2300      	movs	r3, #0
 800d11e:	e9c4 230f 	strd	r2, r3, [r4, #60]	; 0x3c
 800d122:	f24b 4205 	movw	r2, #46085	; 0xb405
 800d126:	e9c4 330b 	strd	r3, r3, [r4, #44]	; 0x2c
 800d12a:	e9c4 330d 	strd	r3, r3, [r4, #52]	; 0x34
 800d12e:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 800d132:	60a3      	str	r3, [r4, #8]
 800d134:	4620      	mov	r0, r4
 800d136:	bd10      	pop	{r4, pc}
 800d138:	08029fb0 	.word	0x08029fb0

0800d13c <_ZN8touchgfx6Circle15setCapPrecisionEi>:
 800d13c:	29b4      	cmp	r1, #180	; 0xb4
 800d13e:	bfa8      	it	ge
 800d140:	21b4      	movge	r1, #180	; 0xb4
 800d142:	2901      	cmp	r1, #1
 800d144:	bfb8      	it	lt
 800d146:	2101      	movlt	r1, #1
 800d148:	f880 1045 	strb.w	r1, [r0, #69]	; 0x45
 800d14c:	4770      	bx	lr

0800d14e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>:
 800d14e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d152:	428a      	cmp	r2, r1
 800d154:	4680      	mov	r8, r0
 800d156:	4610      	mov	r0, r2
 800d158:	4699      	mov	r9, r3
 800d15a:	bfa6      	itte	ge
 800d15c:	460a      	movge	r2, r1
 800d15e:	4603      	movge	r3, r0
 800d160:	460b      	movlt	r3, r1
 800d162:	1a99      	subs	r1, r3, r2
 800d164:	b085      	sub	sp, #20
 800d166:	f5b1 5f34 	cmp.w	r1, #11520	; 0x2d00
 800d16a:	f8d8 4040 	ldr.w	r4, [r8, #64]	; 0x40
 800d16e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 800d170:	bfa4      	itt	ge
 800d172:	f44f 5334 	movge.w	r3, #11520	; 0x2d00
 800d176:	2200      	movge	r2, #0
 800d178:	e9dd 760e 	ldrd	r7, r6, [sp, #56]	; 0x38
 800d17c:	9300      	str	r3, [sp, #0]
 800d17e:	f108 0a34 	add.w	sl, r8, #52	; 0x34
 800d182:	f102 0b01 	add.w	fp, r2, #1
 800d186:	2c00      	cmp	r4, #0
 800d188:	f040 80af 	bne.w	800d2ea <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x19c>
 800d18c:	4610      	mov	r0, r2
 800d18e:	9201      	str	r2, [sp, #4]
 800d190:	f7ff ff96 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d194:	a903      	add	r1, sp, #12
 800d196:	9003      	str	r0, [sp, #12]
 800d198:	4650      	mov	r0, sl
 800d19a:	f7ff ff66 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d19e:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800d1a2:	9a01      	ldr	r2, [sp, #4]
 800d1a4:	4408      	add	r0, r1
 800d1a6:	f8d9 1000 	ldr.w	r1, [r9]
 800d1aa:	4281      	cmp	r1, r0
 800d1ac:	bfc8      	it	gt
 800d1ae:	f8c9 0000 	strgt.w	r0, [r9]
 800d1b2:	6839      	ldr	r1, [r7, #0]
 800d1b4:	4288      	cmp	r0, r1
 800d1b6:	bfc8      	it	gt
 800d1b8:	6038      	strgt	r0, [r7, #0]
 800d1ba:	4610      	mov	r0, r2
 800d1bc:	f7ff ff9f 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d1c0:	a903      	add	r1, sp, #12
 800d1c2:	9003      	str	r0, [sp, #12]
 800d1c4:	4650      	mov	r0, sl
 800d1c6:	f7ff ff50 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d1ca:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800d1ce:	1a10      	subs	r0, r2, r0
 800d1d0:	6832      	ldr	r2, [r6, #0]
 800d1d2:	4282      	cmp	r2, r0
 800d1d4:	bfc8      	it	gt
 800d1d6:	6030      	strgt	r0, [r6, #0]
 800d1d8:	682a      	ldr	r2, [r5, #0]
 800d1da:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800d1de:	4290      	cmp	r0, r2
 800d1e0:	fb9b f2f1 	sdiv	r2, fp, r1
 800d1e4:	fb01 b212 	mls	r2, r1, r2, fp
 800d1e8:	eba1 0202 	sub.w	r2, r1, r2
 800d1ec:	bfc8      	it	gt
 800d1ee:	6028      	strgt	r0, [r5, #0]
 800d1f0:	fb92 f0f1 	sdiv	r0, r2, r1
 800d1f4:	fb01 2210 	mls	r2, r1, r0, r2
 800d1f8:	4493      	add	fp, r2
 800d1fa:	9b00      	ldr	r3, [sp, #0]
 800d1fc:	455b      	cmp	r3, fp
 800d1fe:	db2a      	blt.n	800d256 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x108>
 800d200:	4658      	mov	r0, fp
 800d202:	f7ff ff5d 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d206:	a903      	add	r1, sp, #12
 800d208:	9003      	str	r0, [sp, #12]
 800d20a:	4650      	mov	r0, sl
 800d20c:	f7ff ff2d 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d210:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800d214:	4410      	add	r0, r2
 800d216:	f8d9 2000 	ldr.w	r2, [r9]
 800d21a:	4282      	cmp	r2, r0
 800d21c:	bfc8      	it	gt
 800d21e:	f8c9 0000 	strgt.w	r0, [r9]
 800d222:	683a      	ldr	r2, [r7, #0]
 800d224:	4290      	cmp	r0, r2
 800d226:	bfc8      	it	gt
 800d228:	6038      	strgt	r0, [r7, #0]
 800d22a:	4658      	mov	r0, fp
 800d22c:	f7ff ff67 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d230:	a903      	add	r1, sp, #12
 800d232:	9003      	str	r0, [sp, #12]
 800d234:	4650      	mov	r0, sl
 800d236:	f7ff ff18 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d23a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800d23e:	1a10      	subs	r0, r2, r0
 800d240:	6832      	ldr	r2, [r6, #0]
 800d242:	4282      	cmp	r2, r0
 800d244:	bfc8      	it	gt
 800d246:	6030      	strgt	r0, [r6, #0]
 800d248:	682a      	ldr	r2, [r5, #0]
 800d24a:	4290      	cmp	r0, r2
 800d24c:	bfc8      	it	gt
 800d24e:	6028      	strgt	r0, [r5, #0]
 800d250:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800d254:	e7d1      	b.n	800d1fa <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0xac>
 800d256:	9b00      	ldr	r3, [sp, #0]
 800d258:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800d25c:	455b      	cmp	r3, fp
 800d25e:	dd27      	ble.n	800d2b0 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x162>
 800d260:	4618      	mov	r0, r3
 800d262:	f7ff ff2d 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d266:	a903      	add	r1, sp, #12
 800d268:	9003      	str	r0, [sp, #12]
 800d26a:	4650      	mov	r0, sl
 800d26c:	f7ff fefd 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d270:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800d274:	4410      	add	r0, r2
 800d276:	f8d9 2000 	ldr.w	r2, [r9]
 800d27a:	4282      	cmp	r2, r0
 800d27c:	bfc8      	it	gt
 800d27e:	f8c9 0000 	strgt.w	r0, [r9]
 800d282:	683a      	ldr	r2, [r7, #0]
 800d284:	4290      	cmp	r0, r2
 800d286:	bfc8      	it	gt
 800d288:	6038      	strgt	r0, [r7, #0]
 800d28a:	9800      	ldr	r0, [sp, #0]
 800d28c:	f7ff ff37 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d290:	a903      	add	r1, sp, #12
 800d292:	9003      	str	r0, [sp, #12]
 800d294:	4650      	mov	r0, sl
 800d296:	f7ff fee8 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d29a:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800d29e:	1a10      	subs	r0, r2, r0
 800d2a0:	6832      	ldr	r2, [r6, #0]
 800d2a2:	4282      	cmp	r2, r0
 800d2a4:	bfc8      	it	gt
 800d2a6:	6030      	strgt	r0, [r6, #0]
 800d2a8:	682a      	ldr	r2, [r5, #0]
 800d2aa:	4290      	cmp	r0, r2
 800d2ac:	bfc8      	it	gt
 800d2ae:	6028      	strgt	r0, [r5, #0]
 800d2b0:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800d2b4:	f8d9 1000 	ldr.w	r1, [r9]
 800d2b8:	4291      	cmp	r1, r2
 800d2ba:	bfc8      	it	gt
 800d2bc:	f8c9 2000 	strgt.w	r2, [r9]
 800d2c0:	683a      	ldr	r2, [r7, #0]
 800d2c2:	f8d8 302c 	ldr.w	r3, [r8, #44]	; 0x2c
 800d2c6:	429a      	cmp	r2, r3
 800d2c8:	bfb8      	it	lt
 800d2ca:	603b      	strlt	r3, [r7, #0]
 800d2cc:	6832      	ldr	r2, [r6, #0]
 800d2ce:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800d2d2:	429a      	cmp	r2, r3
 800d2d4:	bfc8      	it	gt
 800d2d6:	6033      	strgt	r3, [r6, #0]
 800d2d8:	682a      	ldr	r2, [r5, #0]
 800d2da:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800d2de:	429a      	cmp	r2, r3
 800d2e0:	da00      	bge.n	800d2e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d2e2:	602b      	str	r3, [r5, #0]
 800d2e4:	b005      	add	sp, #20
 800d2e6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d2ea:	2002      	movs	r0, #2
 800d2ec:	3401      	adds	r4, #1
 800d2ee:	fb94 f4f0 	sdiv	r4, r4, r0
 800d2f2:	4610      	mov	r0, r2
 800d2f4:	9201      	str	r2, [sp, #4]
 800d2f6:	f7ff fee3 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d2fa:	a903      	add	r1, sp, #12
 800d2fc:	9003      	str	r0, [sp, #12]
 800d2fe:	4650      	mov	r0, sl
 800d300:	f7ff feb3 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d304:	f8d8 102c 	ldr.w	r1, [r8, #44]	; 0x2c
 800d308:	9a01      	ldr	r2, [sp, #4]
 800d30a:	4408      	add	r0, r1
 800d30c:	f8d9 1000 	ldr.w	r1, [r9]
 800d310:	1b03      	subs	r3, r0, r4
 800d312:	4299      	cmp	r1, r3
 800d314:	bfc8      	it	gt
 800d316:	f8c9 3000 	strgt.w	r3, [r9]
 800d31a:	6839      	ldr	r1, [r7, #0]
 800d31c:	428b      	cmp	r3, r1
 800d31e:	bfc8      	it	gt
 800d320:	603b      	strgt	r3, [r7, #0]
 800d322:	f8d9 1000 	ldr.w	r1, [r9]
 800d326:	4420      	add	r0, r4
 800d328:	4281      	cmp	r1, r0
 800d32a:	bfc8      	it	gt
 800d32c:	f8c9 0000 	strgt.w	r0, [r9]
 800d330:	6839      	ldr	r1, [r7, #0]
 800d332:	4288      	cmp	r0, r1
 800d334:	bfc8      	it	gt
 800d336:	6038      	strgt	r0, [r7, #0]
 800d338:	4610      	mov	r0, r2
 800d33a:	f7ff fee0 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d33e:	a903      	add	r1, sp, #12
 800d340:	9003      	str	r0, [sp, #12]
 800d342:	4650      	mov	r0, sl
 800d344:	f7ff fe91 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d348:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800d34c:	1a10      	subs	r0, r2, r0
 800d34e:	6832      	ldr	r2, [r6, #0]
 800d350:	1b01      	subs	r1, r0, r4
 800d352:	428a      	cmp	r2, r1
 800d354:	bfc8      	it	gt
 800d356:	6031      	strgt	r1, [r6, #0]
 800d358:	682a      	ldr	r2, [r5, #0]
 800d35a:	4291      	cmp	r1, r2
 800d35c:	bfc8      	it	gt
 800d35e:	6029      	strgt	r1, [r5, #0]
 800d360:	6832      	ldr	r2, [r6, #0]
 800d362:	4420      	add	r0, r4
 800d364:	4282      	cmp	r2, r0
 800d366:	bfc8      	it	gt
 800d368:	6030      	strgt	r0, [r6, #0]
 800d36a:	682a      	ldr	r2, [r5, #0]
 800d36c:	f44f 6134 	mov.w	r1, #2880	; 0xb40
 800d370:	4290      	cmp	r0, r2
 800d372:	fb9b f2f1 	sdiv	r2, fp, r1
 800d376:	fb01 b212 	mls	r2, r1, r2, fp
 800d37a:	eba1 0202 	sub.w	r2, r1, r2
 800d37e:	bfc8      	it	gt
 800d380:	6028      	strgt	r0, [r5, #0]
 800d382:	fb92 f0f1 	sdiv	r0, r2, r1
 800d386:	fb01 2210 	mls	r2, r1, r0, r2
 800d38a:	4493      	add	fp, r2
 800d38c:	9b00      	ldr	r3, [sp, #0]
 800d38e:	455b      	cmp	r3, fp
 800d390:	db40      	blt.n	800d414 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x2c6>
 800d392:	4658      	mov	r0, fp
 800d394:	f7ff fe94 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d398:	a903      	add	r1, sp, #12
 800d39a:	9003      	str	r0, [sp, #12]
 800d39c:	4650      	mov	r0, sl
 800d39e:	f7ff fe64 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3a2:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800d3a6:	4410      	add	r0, r2
 800d3a8:	f8d9 2000 	ldr.w	r2, [r9]
 800d3ac:	1b01      	subs	r1, r0, r4
 800d3ae:	428a      	cmp	r2, r1
 800d3b0:	bfc8      	it	gt
 800d3b2:	f8c9 1000 	strgt.w	r1, [r9]
 800d3b6:	683a      	ldr	r2, [r7, #0]
 800d3b8:	4291      	cmp	r1, r2
 800d3ba:	bfc8      	it	gt
 800d3bc:	6039      	strgt	r1, [r7, #0]
 800d3be:	f8d9 2000 	ldr.w	r2, [r9]
 800d3c2:	4420      	add	r0, r4
 800d3c4:	4282      	cmp	r2, r0
 800d3c6:	bfc8      	it	gt
 800d3c8:	f8c9 0000 	strgt.w	r0, [r9]
 800d3cc:	683a      	ldr	r2, [r7, #0]
 800d3ce:	4290      	cmp	r0, r2
 800d3d0:	bfc8      	it	gt
 800d3d2:	6038      	strgt	r0, [r7, #0]
 800d3d4:	4658      	mov	r0, fp
 800d3d6:	f7ff fe92 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d3da:	a903      	add	r1, sp, #12
 800d3dc:	9003      	str	r0, [sp, #12]
 800d3de:	4650      	mov	r0, sl
 800d3e0:	f7ff fe43 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d3e4:	f8d8 2030 	ldr.w	r2, [r8, #48]	; 0x30
 800d3e8:	1a10      	subs	r0, r2, r0
 800d3ea:	6832      	ldr	r2, [r6, #0]
 800d3ec:	1b01      	subs	r1, r0, r4
 800d3ee:	428a      	cmp	r2, r1
 800d3f0:	bfc8      	it	gt
 800d3f2:	6031      	strgt	r1, [r6, #0]
 800d3f4:	682a      	ldr	r2, [r5, #0]
 800d3f6:	4291      	cmp	r1, r2
 800d3f8:	bfc8      	it	gt
 800d3fa:	6029      	strgt	r1, [r5, #0]
 800d3fc:	6832      	ldr	r2, [r6, #0]
 800d3fe:	4420      	add	r0, r4
 800d400:	4282      	cmp	r2, r0
 800d402:	bfc8      	it	gt
 800d404:	6030      	strgt	r0, [r6, #0]
 800d406:	682a      	ldr	r2, [r5, #0]
 800d408:	4290      	cmp	r0, r2
 800d40a:	bfc8      	it	gt
 800d40c:	6028      	strgt	r0, [r5, #0]
 800d40e:	f50b 6b34 	add.w	fp, fp, #2880	; 0xb40
 800d412:	e7bb      	b.n	800d38c <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x23e>
 800d414:	9b00      	ldr	r3, [sp, #0]
 800d416:	f5ab 6b34 	sub.w	fp, fp, #2880	; 0xb40
 800d41a:	455b      	cmp	r3, fp
 800d41c:	f77f af62 	ble.w	800d2e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>
 800d420:	4618      	mov	r0, r3
 800d422:	f7ff fe4d 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d426:	a903      	add	r1, sp, #12
 800d428:	9003      	str	r0, [sp, #12]
 800d42a:	4650      	mov	r0, sl
 800d42c:	f7ff fe1d 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d430:	f8d8 202c 	ldr.w	r2, [r8, #44]	; 0x2c
 800d434:	4410      	add	r0, r2
 800d436:	f8d9 2000 	ldr.w	r2, [r9]
 800d43a:	1b01      	subs	r1, r0, r4
 800d43c:	428a      	cmp	r2, r1
 800d43e:	bfc8      	it	gt
 800d440:	f8c9 1000 	strgt.w	r1, [r9]
 800d444:	683a      	ldr	r2, [r7, #0]
 800d446:	4291      	cmp	r1, r2
 800d448:	bfc8      	it	gt
 800d44a:	6039      	strgt	r1, [r7, #0]
 800d44c:	f8d9 2000 	ldr.w	r2, [r9]
 800d450:	4420      	add	r0, r4
 800d452:	4282      	cmp	r2, r0
 800d454:	bfc8      	it	gt
 800d456:	f8c9 0000 	strgt.w	r0, [r9]
 800d45a:	683b      	ldr	r3, [r7, #0]
 800d45c:	4298      	cmp	r0, r3
 800d45e:	bfc8      	it	gt
 800d460:	6038      	strgt	r0, [r7, #0]
 800d462:	9800      	ldr	r0, [sp, #0]
 800d464:	f7ff fe4b 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d468:	a903      	add	r1, sp, #12
 800d46a:	9003      	str	r0, [sp, #12]
 800d46c:	4650      	mov	r0, sl
 800d46e:	f7ff fdfc 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d472:	f8d8 3030 	ldr.w	r3, [r8, #48]	; 0x30
 800d476:	6832      	ldr	r2, [r6, #0]
 800d478:	1a18      	subs	r0, r3, r0
 800d47a:	1b03      	subs	r3, r0, r4
 800d47c:	429a      	cmp	r2, r3
 800d47e:	bfc8      	it	gt
 800d480:	6033      	strgt	r3, [r6, #0]
 800d482:	682a      	ldr	r2, [r5, #0]
 800d484:	4293      	cmp	r3, r2
 800d486:	bfc8      	it	gt
 800d488:	602b      	strgt	r3, [r5, #0]
 800d48a:	6833      	ldr	r3, [r6, #0]
 800d48c:	4404      	add	r4, r0
 800d48e:	42a3      	cmp	r3, r4
 800d490:	bfc8      	it	gt
 800d492:	6034      	strgt	r4, [r6, #0]
 800d494:	682b      	ldr	r3, [r5, #0]
 800d496:	429c      	cmp	r4, r3
 800d498:	bfc8      	it	gt
 800d49a:	602c      	strgt	r4, [r5, #0]
 800d49c:	e722      	b.n	800d2e4 <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_+0x196>

0800d49e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>:
 800d49e:	b530      	push	{r4, r5, lr}
 800d4a0:	4604      	mov	r4, r0
 800d4a2:	4608      	mov	r0, r1
 800d4a4:	4611      	mov	r1, r2
 800d4a6:	461a      	mov	r2, r3
 800d4a8:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800d4ac:	b089      	sub	sp, #36	; 0x24
 800d4ae:	015b      	lsls	r3, r3, #5
 800d4b0:	9304      	str	r3, [sp, #16]
 800d4b2:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800d4b6:	2500      	movs	r5, #0
 800d4b8:	015b      	lsls	r3, r3, #5
 800d4ba:	e9cd 3506 	strd	r3, r5, [sp, #24]
 800d4be:	ab07      	add	r3, sp, #28
 800d4c0:	9302      	str	r3, [sp, #8]
 800d4c2:	ab06      	add	r3, sp, #24
 800d4c4:	9301      	str	r3, [sp, #4]
 800d4c6:	ab05      	add	r3, sp, #20
 800d4c8:	9300      	str	r3, [sp, #0]
 800d4ca:	ab04      	add	r3, sp, #16
 800d4cc:	9505      	str	r5, [sp, #20]
 800d4ce:	f7ff fe3e 	bl	800d14e <_ZNK8touchgfx6Circle20calculateMinimalRectENS_7CWRUtil2Q5ES2_RS2_S3_S3_S3_>
 800d4d2:	2520      	movs	r5, #32
 800d4d4:	9a04      	ldr	r2, [sp, #16]
 800d4d6:	9805      	ldr	r0, [sp, #20]
 800d4d8:	fb92 f2f5 	sdiv	r2, r2, r5
 800d4dc:	fb90 f0f5 	sdiv	r0, r0, r5
 800d4e0:	b292      	uxth	r2, r2
 800d4e2:	3002      	adds	r0, #2
 800d4e4:	1a80      	subs	r0, r0, r2
 800d4e6:	9b06      	ldr	r3, [sp, #24]
 800d4e8:	9907      	ldr	r1, [sp, #28]
 800d4ea:	fb93 f3f5 	sdiv	r3, r3, r5
 800d4ee:	fb91 f1f5 	sdiv	r1, r1, r5
 800d4f2:	b29b      	uxth	r3, r3
 800d4f4:	3102      	adds	r1, #2
 800d4f6:	1ac9      	subs	r1, r1, r3
 800d4f8:	3a01      	subs	r2, #1
 800d4fa:	3b01      	subs	r3, #1
 800d4fc:	80a0      	strh	r0, [r4, #4]
 800d4fe:	4620      	mov	r0, r4
 800d500:	8022      	strh	r2, [r4, #0]
 800d502:	8063      	strh	r3, [r4, #2]
 800d504:	80e1      	strh	r1, [r4, #6]
 800d506:	b009      	add	sp, #36	; 0x24
 800d508:	bd30      	pop	{r4, r5, pc}

0800d50a <_ZNK8touchgfx6Circle14getMinimalRectEv>:
 800d50a:	b510      	push	{r4, lr}
 800d50c:	e9d1 230e 	ldrd	r2, r3, [r1, #56]	; 0x38
 800d510:	4604      	mov	r4, r0
 800d512:	f7ff ffc4 	bl	800d49e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d516:	4620      	mov	r0, r4
 800d518:	bd10      	pop	{r4, pc}

0800d51a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>:
 800d51a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800d51c:	e9d1 540e 	ldrd	r5, r4, [r1, #56]	; 0x38
 800d520:	4606      	mov	r6, r0
 800d522:	f891 0044 	ldrb.w	r0, [r1, #68]	; 0x44
 800d526:	6813      	ldr	r3, [r2, #0]
 800d528:	42a5      	cmp	r5, r4
 800d52a:	ea4f 1040 	mov.w	r0, r0, lsl #5
 800d52e:	da2b      	bge.n	800d588 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x6e>
 800d530:	42a3      	cmp	r3, r4
 800d532:	dd14      	ble.n	800d55e <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x44>
 800d534:	b168      	cbz	r0, 800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d536:	4267      	negs	r7, r4
 800d538:	fb97 f2f0 	sdiv	r2, r7, r0
 800d53c:	fb00 7212 	mls	r2, r0, r2, r7
 800d540:	1a82      	subs	r2, r0, r2
 800d542:	fb92 f7f0 	sdiv	r7, r2, r0
 800d546:	fb00 2017 	mls	r0, r0, r7, r2
 800d54a:	1a24      	subs	r4, r4, r0
 800d54c:	42ac      	cmp	r4, r5
 800d54e:	bfb8      	it	lt
 800d550:	462c      	movlt	r4, r5
 800d552:	4630      	mov	r0, r6
 800d554:	4622      	mov	r2, r4
 800d556:	f7ff ffa2 	bl	800d49e <_ZNK8touchgfx6Circle14getMinimalRectENS_7CWRUtil2Q5ES2_>
 800d55a:	4630      	mov	r0, r6
 800d55c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800d55e:	42ab      	cmp	r3, r5
 800d560:	dd0e      	ble.n	800d580 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800d562:	b168      	cbz	r0, 800d580 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x66>
 800d564:	425f      	negs	r7, r3
 800d566:	fb97 f2f0 	sdiv	r2, r7, r0
 800d56a:	fb00 7212 	mls	r2, r0, r2, r7
 800d56e:	1a82      	subs	r2, r0, r2
 800d570:	fb92 f7f0 	sdiv	r7, r2, r0
 800d574:	fb00 2017 	mls	r0, r0, r7, r2
 800d578:	1a1b      	subs	r3, r3, r0
 800d57a:	42ab      	cmp	r3, r5
 800d57c:	bfb8      	it	lt
 800d57e:	462b      	movlt	r3, r5
 800d580:	4622      	mov	r2, r4
 800d582:	461c      	mov	r4, r3
 800d584:	4613      	mov	r3, r2
 800d586:	e7e4      	b.n	800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d588:	42a3      	cmp	r3, r4
 800d58a:	da10      	bge.n	800d5ae <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x94>
 800d58c:	b148      	cbz	r0, 800d5a2 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x88>
 800d58e:	fb94 f2f0 	sdiv	r2, r4, r0
 800d592:	fb00 4212 	mls	r2, r0, r2, r4
 800d596:	1a82      	subs	r2, r0, r2
 800d598:	fb92 f7f0 	sdiv	r7, r2, r0
 800d59c:	fb00 2017 	mls	r0, r0, r7, r2
 800d5a0:	4404      	add	r4, r0
 800d5a2:	42a5      	cmp	r5, r4
 800d5a4:	bfa8      	it	ge
 800d5a6:	4625      	movge	r5, r4
 800d5a8:	461c      	mov	r4, r3
 800d5aa:	462b      	mov	r3, r5
 800d5ac:	e7d1      	b.n	800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d5ae:	42ab      	cmp	r3, r5
 800d5b0:	dacf      	bge.n	800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d5b2:	2800      	cmp	r0, #0
 800d5b4:	d0cd      	beq.n	800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
 800d5b6:	fb93 f2f0 	sdiv	r2, r3, r0
 800d5ba:	fb00 3212 	mls	r2, r0, r2, r3
 800d5be:	1a82      	subs	r2, r0, r2
 800d5c0:	fb92 f7f0 	sdiv	r7, r2, r0
 800d5c4:	fb00 2017 	mls	r0, r0, r7, r2
 800d5c8:	4403      	add	r3, r0
 800d5ca:	42ab      	cmp	r3, r5
 800d5cc:	bfa8      	it	ge
 800d5ce:	462b      	movge	r3, r5
 800d5d0:	e7bf      	b.n	800d552 <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E+0x38>
	...

0800d5d4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE>:
 800d5d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d5d8:	e9d0 560e 	ldrd	r5, r6, [r0, #56]	; 0x38
 800d5dc:	42ae      	cmp	r6, r5
 800d5de:	bfa2      	ittt	ge
 800d5e0:	4633      	movge	r3, r6
 800d5e2:	462e      	movge	r6, r5
 800d5e4:	461d      	movge	r5, r3
 800d5e6:	1bab      	subs	r3, r5, r6
 800d5e8:	468b      	mov	fp, r1
 800d5ea:	6c01      	ldr	r1, [r0, #64]	; 0x40
 800d5ec:	f9b0 902c 	ldrsh.w	r9, [r0, #44]	; 0x2c
 800d5f0:	f9b0 a030 	ldrsh.w	sl, [r0, #48]	; 0x30
 800d5f4:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d5f8:	f04f 0220 	mov.w	r2, #32
 800d5fc:	b0ab      	sub	sp, #172	; 0xac
 800d5fe:	4604      	mov	r4, r0
 800d600:	bfa4      	itt	ge
 800d602:	f44f 5534 	movge.w	r5, #11520	; 0x2d00
 800d606:	2600      	movge	r6, #0
 800d608:	fb99 f9f2 	sdiv	r9, r9, r2
 800d60c:	fb9a faf2 	sdiv	sl, sl, r2
 800d610:	6b43      	ldr	r3, [r0, #52]	; 0x34
 800d612:	2900      	cmp	r1, #0
 800d614:	f000 80f5 	beq.w	800d802 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x22e>
 800d618:	f9bb 0000 	ldrsh.w	r0, [fp]
 800d61c:	f9bb 2002 	ldrsh.w	r2, [fp, #2]
 800d620:	eba9 0700 	sub.w	r7, r9, r0
 800d624:	ea87 7ce7 	eor.w	ip, r7, r7, asr #31
 800d628:	ebac 7ce7 	sub.w	ip, ip, r7, asr #31
 800d62c:	f8bb 7004 	ldrh.w	r7, [fp, #4]
 800d630:	ebaa 0802 	sub.w	r8, sl, r2
 800d634:	4407      	add	r7, r0
 800d636:	ea88 70e8 	eor.w	r0, r8, r8, asr #31
 800d63a:	eba0 70e8 	sub.w	r0, r0, r8, asr #31
 800d63e:	f8bb 8006 	ldrh.w	r8, [fp, #6]
 800d642:	b23f      	sxth	r7, r7
 800d644:	4490      	add	r8, r2
 800d646:	eba9 0707 	sub.w	r7, r9, r7
 800d64a:	fa0f f888 	sxth.w	r8, r8
 800d64e:	ebaa 0808 	sub.w	r8, sl, r8
 800d652:	2f00      	cmp	r7, #0
 800d654:	bfb8      	it	lt
 800d656:	427f      	neglt	r7, r7
 800d658:	f1b8 0f00 	cmp.w	r8, #0
 800d65c:	bfb8      	it	lt
 800d65e:	f1c8 0800 	rsblt	r8, r8, #0
 800d662:	45bc      	cmp	ip, r7
 800d664:	bfcc      	ite	gt
 800d666:	f10c 0701 	addgt.w	r7, ip, #1
 800d66a:	3701      	addle	r7, #1
 800d66c:	4540      	cmp	r0, r8
 800d66e:	bfc8      	it	gt
 800d670:	f100 0801 	addgt.w	r8, r0, #1
 800d674:	f894 0044 	ldrb.w	r0, [r4, #68]	; 0x44
 800d678:	f100 0001 	add.w	r0, r0, #1
 800d67c:	ea4f 0060 	mov.w	r0, r0, asr #1
 800d680:	f04f 0202 	mov.w	r2, #2
 800d684:	f1c0 005a 	rsb	r0, r0, #90	; 0x5a
 800d688:	fb91 f1f2 	sdiv	r1, r1, r2
 800d68c:	eba3 0301 	sub.w	r3, r3, r1
 800d690:	bfd8      	it	le
 800d692:	f108 0801 	addle.w	r8, r8, #1
 800d696:	9201      	str	r2, [sp, #4]
 800d698:	930d      	str	r3, [sp, #52]	; 0x34
 800d69a:	f7ff fcf1 	bl	800d080 <_ZN8touchgfx7CWRUtil4sineEi>
 800d69e:	a92a      	add	r1, sp, #168	; 0xa8
 800d6a0:	fb08 f808 	mul.w	r8, r8, r8
 800d6a4:	f841 0d70 	str.w	r0, [r1, #-112]!
 800d6a8:	a80d      	add	r0, sp, #52	; 0x34
 800d6aa:	f7ff fcde 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d6ae:	fb07 8707 	mla	r7, r7, r7, r8
 800d6b2:	f04f 0c20 	mov.w	ip, #32
 800d6b6:	fb90 f0fc 	sdiv	r0, r0, ip
 800d6ba:	4340      	muls	r0, r0
 800d6bc:	4287      	cmp	r7, r0
 800d6be:	9a01      	ldr	r2, [sp, #4]
 800d6c0:	da04      	bge.n	800d6cc <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf8>
 800d6c2:	2401      	movs	r4, #1
 800d6c4:	4620      	mov	r0, r4
 800d6c6:	b02b      	add	sp, #172	; 0xac
 800d6c8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d6cc:	6b60      	ldr	r0, [r4, #52]	; 0x34
 800d6ce:	6c21      	ldr	r1, [r4, #64]	; 0x40
 800d6d0:	fb91 f3f2 	sdiv	r3, r1, r2
 800d6d4:	4403      	add	r3, r0
 800d6d6:	fb93 f3fc 	sdiv	r3, r3, ip
 800d6da:	f9bb 1000 	ldrsh.w	r1, [fp]
 800d6de:	f8bb 2004 	ldrh.w	r2, [fp, #4]
 800d6e2:	440a      	add	r2, r1
 800d6e4:	b212      	sxth	r2, r2
 800d6e6:	454a      	cmp	r2, r9
 800d6e8:	bfa8      	it	ge
 800d6ea:	464a      	movge	r2, r9
 800d6ec:	428a      	cmp	r2, r1
 800d6ee:	bfac      	ite	ge
 800d6f0:	eba9 0902 	subge.w	r9, r9, r2
 800d6f4:	eba9 0901 	sublt.w	r9, r9, r1
 800d6f8:	f8bb 2006 	ldrh.w	r2, [fp, #6]
 800d6fc:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800d700:	440a      	add	r2, r1
 800d702:	b212      	sxth	r2, r2
 800d704:	4552      	cmp	r2, sl
 800d706:	bfa8      	it	ge
 800d708:	4652      	movge	r2, sl
 800d70a:	428a      	cmp	r2, r1
 800d70c:	bfac      	ite	ge
 800d70e:	ebaa 0a02 	subge.w	sl, sl, r2
 800d712:	ebaa 0a01 	sublt.w	sl, sl, r1
 800d716:	3301      	adds	r3, #1
 800d718:	fb0a fa0a 	mul.w	sl, sl, sl
 800d71c:	fb09 a909 	mla	r9, r9, r9, sl
 800d720:	435b      	muls	r3, r3
 800d722:	4599      	cmp	r9, r3
 800d724:	dccd      	bgt.n	800d6c2 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xee>
 800d726:	465a      	mov	r2, fp
 800d728:	4621      	mov	r1, r4
 800d72a:	a80e      	add	r0, sp, #56	; 0x38
 800d72c:	f013 fb12 	bl	8020d54 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>
 800d730:	6b62      	ldr	r2, [r4, #52]	; 0x34
 800d732:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800d734:	9209      	str	r2, [sp, #36]	; 0x24
 800d736:	ebb3 0f42 	cmp.w	r3, r2, lsl #1
 800d73a:	930a      	str	r3, [sp, #40]	; 0x28
 800d73c:	dd07      	ble.n	800d74e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x17a>
 800d73e:	2102      	movs	r1, #2
 800d740:	fb93 f3f1 	sdiv	r3, r3, r1
 800d744:	4413      	add	r3, r2
 800d746:	930a      	str	r3, [sp, #40]	; 0x28
 800d748:	fb93 f3f1 	sdiv	r3, r3, r1
 800d74c:	9309      	str	r3, [sp, #36]	; 0x24
 800d74e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d752:	4630      	mov	r0, r6
 800d754:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800d758:	930b      	str	r3, [sp, #44]	; 0x2c
 800d75a:	f894 7044 	ldrb.w	r7, [r4, #68]	; 0x44
 800d75e:	f7ff fcaf 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d762:	f10d 09a8 	add.w	r9, sp, #168	; 0xa8
 800d766:	f04f 0a02 	mov.w	sl, #2
 800d76a:	f849 0d74 	str.w	r0, [r9, #-116]!
 800d76e:	a80b      	add	r0, sp, #44	; 0x2c
 800d770:	4649      	mov	r1, r9
 800d772:	f7ff fc7a 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d776:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d778:	fb90 f0fa 	sdiv	r0, r0, sl
 800d77c:	eb00 0b03 	add.w	fp, r0, r3
 800d780:	4630      	mov	r0, r6
 800d782:	f7ff fcbc 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d786:	f10d 08a8 	add.w	r8, sp, #168	; 0xa8
 800d78a:	017f      	lsls	r7, r7, #5
 800d78c:	f848 0d78 	str.w	r0, [r8, #-120]!
 800d790:	a80b      	add	r0, sp, #44	; 0x2c
 800d792:	4641      	mov	r1, r8
 800d794:	f7ff fc69 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d798:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d79a:	fb90 f0fa 	sdiv	r0, r0, sl
 800d79e:	4659      	mov	r1, fp
 800d7a0:	1a12      	subs	r2, r2, r0
 800d7a2:	a80e      	add	r0, sp, #56	; 0x38
 800d7a4:	f013 fc52 	bl	802104c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>
 800d7a8:	f106 0a20 	add.w	sl, r6, #32
 800d7ac:	bb67      	cbnz	r7, 800d808 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x234>
 800d7ae:	46b3      	mov	fp, r6
 800d7b0:	45aa      	cmp	sl, r5
 800d7b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800d7b4:	dc33      	bgt.n	800d81e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x24a>
 800d7b6:	9909      	ldr	r1, [sp, #36]	; 0x24
 800d7b8:	4650      	mov	r0, sl
 800d7ba:	eb02 0241 	add.w	r2, r2, r1, lsl #1
 800d7be:	920b      	str	r2, [sp, #44]	; 0x2c
 800d7c0:	f7ff fc7e 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d7c4:	4641      	mov	r1, r8
 800d7c6:	900c      	str	r0, [sp, #48]	; 0x30
 800d7c8:	a80b      	add	r0, sp, #44	; 0x2c
 800d7ca:	f7ff fc4e 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7ce:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800d7d0:	2302      	movs	r3, #2
 800d7d2:	fb90 f0f3 	sdiv	r0, r0, r3
 800d7d6:	eb00 0b02 	add.w	fp, r0, r2
 800d7da:	4650      	mov	r0, sl
 800d7dc:	f7ff fc8f 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d7e0:	4649      	mov	r1, r9
 800d7e2:	900d      	str	r0, [sp, #52]	; 0x34
 800d7e4:	a80b      	add	r0, sp, #44	; 0x2c
 800d7e6:	f7ff fc40 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d7ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d7ec:	2302      	movs	r3, #2
 800d7ee:	4659      	mov	r1, fp
 800d7f0:	fb90 f0f3 	sdiv	r0, r0, r3
 800d7f4:	1a12      	subs	r2, r2, r0
 800d7f6:	a80e      	add	r0, sp, #56	; 0x38
 800d7f8:	46d3      	mov	fp, sl
 800d7fa:	f013 fc74 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d7fe:	44ba      	add	sl, r7
 800d800:	e7d6      	b.n	800d7b0 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1dc>
 800d802:	fb93 f3f2 	sdiv	r3, r3, r2
 800d806:	e768      	b.n	800d6da <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x106>
 800d808:	fb9a f2f7 	sdiv	r2, sl, r7
 800d80c:	fb07 a212 	mls	r2, r7, r2, sl
 800d810:	1aba      	subs	r2, r7, r2
 800d812:	fb92 f1f7 	sdiv	r1, r2, r7
 800d816:	fb07 2211 	mls	r2, r7, r1, r2
 800d81a:	4492      	add	sl, r2
 800d81c:	e7c7      	b.n	800d7ae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x1da>
 800d81e:	45ab      	cmp	fp, r5
 800d820:	da23      	bge.n	800d86a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x296>
 800d822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800d824:	4628      	mov	r0, r5
 800d826:	eb02 0243 	add.w	r2, r2, r3, lsl #1
 800d82a:	920b      	str	r2, [sp, #44]	; 0x2c
 800d82c:	f7ff fc48 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d830:	4641      	mov	r1, r8
 800d832:	900c      	str	r0, [sp, #48]	; 0x30
 800d834:	a80b      	add	r0, sp, #44	; 0x2c
 800d836:	f7ff fc18 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d83a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d83c:	f04f 0a02 	mov.w	sl, #2
 800d840:	fb90 f0fa 	sdiv	r0, r0, sl
 800d844:	4403      	add	r3, r0
 800d846:	4628      	mov	r0, r5
 800d848:	9301      	str	r3, [sp, #4]
 800d84a:	f7ff fc58 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d84e:	4649      	mov	r1, r9
 800d850:	900d      	str	r0, [sp, #52]	; 0x34
 800d852:	a80b      	add	r0, sp, #44	; 0x2c
 800d854:	f7ff fc09 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d858:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d85a:	9b01      	ldr	r3, [sp, #4]
 800d85c:	fb90 f0fa 	sdiv	r0, r0, sl
 800d860:	4619      	mov	r1, r3
 800d862:	1a12      	subs	r2, r2, r0
 800d864:	a80e      	add	r0, sp, #56	; 0x38
 800d866:	f013 fc3e 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d86a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800d86c:	b99b      	cbnz	r3, 800d896 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2c2>
 800d86e:	1bad      	subs	r5, r5, r6
 800d870:	f5b5 5f34 	cmp.w	r5, #11520	; 0x2d00
 800d874:	da04      	bge.n	800d880 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 800d876:	e9d4 120b 	ldrd	r1, r2, [r4, #44]	; 0x2c
 800d87a:	a80e      	add	r0, sp, #56	; 0x38
 800d87c:	f013 fc33 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d880:	21ff      	movs	r1, #255	; 0xff
 800d882:	a80e      	add	r0, sp, #56	; 0x38
 800d884:	f013 fb22 	bl	8020ecc <_ZN8touchgfx6Canvas6renderEh>
 800d888:	4604      	mov	r4, r0
 800d88a:	4b8a      	ldr	r3, [pc, #552]	; (800dab4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4e0>)
 800d88c:	930e      	str	r3, [sp, #56]	; 0x38
 800d88e:	a816      	add	r0, sp, #88	; 0x58
 800d890:	f001 fcc0 	bl	800f214 <_ZN8touchgfx7OutlineD1Ev>
 800d894:	e716      	b.n	800d6c4 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0xf0>
 800d896:	e9dd 2317 	ldrd	r2, r3, [sp, #92]	; 0x5c
 800d89a:	429a      	cmp	r2, r3
 800d89c:	f0c0 8107 	bcc.w	800daae <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x4da>
 800d8a0:	1bab      	subs	r3, r5, r6
 800d8a2:	f894 a045 	ldrb.w	sl, [r4, #69]	; 0x45
 800d8a6:	9301      	str	r3, [sp, #4]
 800d8a8:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800d8ac:	ea4f 1a4a 	mov.w	sl, sl, lsl #5
 800d8b0:	da43      	bge.n	800d93a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 800d8b2:	4628      	mov	r0, r5
 800d8b4:	f7ff fc04 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d8b8:	4649      	mov	r1, r9
 800d8ba:	900d      	str	r0, [sp, #52]	; 0x34
 800d8bc:	a809      	add	r0, sp, #36	; 0x24
 800d8be:	f7ff fbd4 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d8c2:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d8c4:	18c3      	adds	r3, r0, r3
 800d8c6:	4628      	mov	r0, r5
 800d8c8:	9303      	str	r3, [sp, #12]
 800d8ca:	f7ff fc18 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d8ce:	4649      	mov	r1, r9
 800d8d0:	900d      	str	r0, [sp, #52]	; 0x34
 800d8d2:	a809      	add	r0, sp, #36	; 0x24
 800d8d4:	f7ff fbc9 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d8d8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d8da:	f505 52b4 	add.w	r2, r5, #5760	; 0x1680
 800d8de:	1a1b      	subs	r3, r3, r0
 800d8e0:	9302      	str	r3, [sp, #8]
 800d8e2:	9204      	str	r2, [sp, #16]
 800d8e4:	eb0a 0305 	add.w	r3, sl, r5
 800d8e8:	9a04      	ldr	r2, [sp, #16]
 800d8ea:	4293      	cmp	r3, r2
 800d8ec:	da25      	bge.n	800d93a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x366>
 800d8ee:	4618      	mov	r0, r3
 800d8f0:	9306      	str	r3, [sp, #24]
 800d8f2:	f7ff fbe5 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d8f6:	4649      	mov	r1, r9
 800d8f8:	900d      	str	r0, [sp, #52]	; 0x34
 800d8fa:	a80a      	add	r0, sp, #40	; 0x28
 800d8fc:	f7ff fbb5 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d900:	9b03      	ldr	r3, [sp, #12]
 800d902:	2202      	movs	r2, #2
 800d904:	fb90 f0f2 	sdiv	r0, r0, r2
 800d908:	18c3      	adds	r3, r0, r3
 800d90a:	9305      	str	r3, [sp, #20]
 800d90c:	9b06      	ldr	r3, [sp, #24]
 800d90e:	9207      	str	r2, [sp, #28]
 800d910:	4618      	mov	r0, r3
 800d912:	f7ff fbf4 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d916:	a92a      	add	r1, sp, #168	; 0xa8
 800d918:	f841 0d78 	str.w	r0, [r1, #-120]!
 800d91c:	a80a      	add	r0, sp, #40	; 0x28
 800d91e:	f7ff fba4 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d922:	9b02      	ldr	r3, [sp, #8]
 800d924:	9a07      	ldr	r2, [sp, #28]
 800d926:	9905      	ldr	r1, [sp, #20]
 800d928:	fb90 f2f2 	sdiv	r2, r0, r2
 800d92c:	a80e      	add	r0, sp, #56	; 0x38
 800d92e:	1a9a      	subs	r2, r3, r2
 800d930:	f013 fbd9 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d934:	9b06      	ldr	r3, [sp, #24]
 800d936:	4453      	add	r3, sl
 800d938:	e7d6      	b.n	800d8e8 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x314>
 800d93a:	45ab      	cmp	fp, r5
 800d93c:	da25      	bge.n	800d98a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3b6>
 800d93e:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d942:	4628      	mov	r0, r5
 800d944:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d948:	930b      	str	r3, [sp, #44]	; 0x2c
 800d94a:	f7ff fbb9 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d94e:	4641      	mov	r1, r8
 800d950:	900c      	str	r0, [sp, #48]	; 0x30
 800d952:	a80b      	add	r0, sp, #44	; 0x2c
 800d954:	f7ff fb89 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d958:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d95a:	2202      	movs	r2, #2
 800d95c:	fb90 f0f2 	sdiv	r0, r0, r2
 800d960:	eb00 0903 	add.w	r9, r0, r3
 800d964:	4628      	mov	r0, r5
 800d966:	9202      	str	r2, [sp, #8]
 800d968:	f7ff fbc9 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d96c:	a92a      	add	r1, sp, #168	; 0xa8
 800d96e:	f841 0d74 	str.w	r0, [r1, #-116]!
 800d972:	a80b      	add	r0, sp, #44	; 0x2c
 800d974:	f7ff fb79 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d978:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800d97a:	9a02      	ldr	r2, [sp, #8]
 800d97c:	fb90 f2f2 	sdiv	r2, r0, r2
 800d980:	4649      	mov	r1, r9
 800d982:	1a9a      	subs	r2, r3, r2
 800d984:	a80e      	add	r0, sp, #56	; 0x38
 800d986:	f013 fbae 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d98a:	46d9      	mov	r9, fp
 800d98c:	2502      	movs	r5, #2
 800d98e:	45b1      	cmp	r9, r6
 800d990:	db25      	blt.n	800d9de <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x40a>
 800d992:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d996:	4648      	mov	r0, r9
 800d998:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d99c:	930b      	str	r3, [sp, #44]	; 0x2c
 800d99e:	f7ff fb8f 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d9a2:	4641      	mov	r1, r8
 800d9a4:	900c      	str	r0, [sp, #48]	; 0x30
 800d9a6:	a80b      	add	r0, sp, #44	; 0x2c
 800d9a8:	f7ff fb5f 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800d9ae:	fb90 f0f5 	sdiv	r0, r0, r5
 800d9b2:	eb00 0b03 	add.w	fp, r0, r3
 800d9b6:	4648      	mov	r0, r9
 800d9b8:	f7ff fba1 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800d9bc:	a90d      	add	r1, sp, #52	; 0x34
 800d9be:	900d      	str	r0, [sp, #52]	; 0x34
 800d9c0:	a80b      	add	r0, sp, #44	; 0x2c
 800d9c2:	f7ff fb52 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9c6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800d9c8:	fb90 f0f5 	sdiv	r0, r0, r5
 800d9cc:	4659      	mov	r1, fp
 800d9ce:	1a12      	subs	r2, r2, r0
 800d9d0:	a80e      	add	r0, sp, #56	; 0x38
 800d9d2:	46cb      	mov	fp, r9
 800d9d4:	f013 fb87 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800d9d8:	eba9 0907 	sub.w	r9, r9, r7
 800d9dc:	e7d7      	b.n	800d98e <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x3ba>
 800d9de:	455e      	cmp	r6, fp
 800d9e0:	da22      	bge.n	800da28 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x454>
 800d9e2:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 800d9e6:	4630      	mov	r0, r6
 800d9e8:	ebc3 0342 	rsb	r3, r3, r2, lsl #1
 800d9ec:	930b      	str	r3, [sp, #44]	; 0x2c
 800d9ee:	f7ff fb67 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800d9f2:	4641      	mov	r1, r8
 800d9f4:	900c      	str	r0, [sp, #48]	; 0x30
 800d9f6:	a80b      	add	r0, sp, #44	; 0x2c
 800d9f8:	f7ff fb37 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800d9fc:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800d9fe:	2502      	movs	r5, #2
 800da00:	fb90 f0f5 	sdiv	r0, r0, r5
 800da04:	4407      	add	r7, r0
 800da06:	4630      	mov	r0, r6
 800da08:	f7ff fb79 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800da0c:	a92a      	add	r1, sp, #168	; 0xa8
 800da0e:	f841 0d74 	str.w	r0, [r1, #-116]!
 800da12:	a80b      	add	r0, sp, #44	; 0x2c
 800da14:	f7ff fb29 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da18:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800da1a:	fb90 f0f5 	sdiv	r0, r0, r5
 800da1e:	4639      	mov	r1, r7
 800da20:	1a12      	subs	r2, r2, r0
 800da22:	a80e      	add	r0, sp, #56	; 0x38
 800da24:	f013 fb5f 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800da28:	9b01      	ldr	r3, [sp, #4]
 800da2a:	f5b3 5f34 	cmp.w	r3, #11520	; 0x2d00
 800da2e:	f6bf af27 	bge.w	800d880 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 800da32:	4630      	mov	r0, r6
 800da34:	f7ff fb44 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800da38:	ad2a      	add	r5, sp, #168	; 0xa8
 800da3a:	f04f 0b02 	mov.w	fp, #2
 800da3e:	f845 0d74 	str.w	r0, [r5, #-116]!
 800da42:	a809      	add	r0, sp, #36	; 0x24
 800da44:	4629      	mov	r1, r5
 800da46:	f7ff fb10 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da4a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800da4c:	eb00 0903 	add.w	r9, r0, r3
 800da50:	4630      	mov	r0, r6
 800da52:	f7ff fb54 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800da56:	4629      	mov	r1, r5
 800da58:	900d      	str	r0, [sp, #52]	; 0x34
 800da5a:	a809      	add	r0, sp, #36	; 0x24
 800da5c:	f7ff fb05 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da60:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800da62:	f5a6 54b4 	sub.w	r4, r6, #5760	; 0x1680
 800da66:	eba3 0800 	sub.w	r8, r3, r0
 800da6a:	4454      	add	r4, sl
 800da6c:	42a6      	cmp	r6, r4
 800da6e:	f77f af07 	ble.w	800d880 <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2ac>
 800da72:	4620      	mov	r0, r4
 800da74:	f7ff fb24 	bl	800d0c0 <_ZN8touchgfx7CWRUtil4sineENS0_2Q5E>
 800da78:	4629      	mov	r1, r5
 800da7a:	900d      	str	r0, [sp, #52]	; 0x34
 800da7c:	a80a      	add	r0, sp, #40	; 0x28
 800da7e:	f7ff faf4 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da82:	fb90 f0fb 	sdiv	r0, r0, fp
 800da86:	eb00 0709 	add.w	r7, r0, r9
 800da8a:	4620      	mov	r0, r4
 800da8c:	f7ff fb37 	bl	800d0fe <_ZN8touchgfx7CWRUtil6cosineENS0_2Q5E>
 800da90:	a90c      	add	r1, sp, #48	; 0x30
 800da92:	900c      	str	r0, [sp, #48]	; 0x30
 800da94:	a80a      	add	r0, sp, #40	; 0x28
 800da96:	f7ff fae8 	bl	800d06a <_ZNK8touchgfx7CWRUtil2Q5mlERKNS0_3Q15E>
 800da9a:	4639      	mov	r1, r7
 800da9c:	fb90 f2fb 	sdiv	r2, r0, fp
 800daa0:	a80e      	add	r0, sp, #56	; 0x38
 800daa2:	eba8 0202 	sub.w	r2, r8, r2
 800daa6:	f013 fb1e 	bl	80210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>
 800daaa:	4454      	add	r4, sl
 800daac:	e7de      	b.n	800da6c <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x498>
 800daae:	2400      	movs	r4, #0
 800dab0:	e6eb      	b.n	800d88a <_ZNK8touchgfx6Circle16drawCanvasWidgetERKNS_4RectE+0x2b6>
 800dab2:	bf00      	nop
 800dab4:	0802a8d8 	.word	0x0802a8d8

0800dab8 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800dab8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800daba:	6803      	ldr	r3, [r0, #0]
 800dabc:	460d      	mov	r5, r1
 800dabe:	4604      	mov	r4, r0
 800dac0:	4601      	mov	r1, r0
 800dac2:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800dac4:	a802      	add	r0, sp, #8
 800dac6:	4798      	blx	r3
 800dac8:	6828      	ldr	r0, [r5, #0]
 800daca:	6869      	ldr	r1, [r5, #4]
 800dacc:	466b      	mov	r3, sp
 800dace:	c303      	stmia	r3!, {r0, r1}
 800dad0:	4668      	mov	r0, sp
 800dad2:	4619      	mov	r1, r3
 800dad4:	f7fe f966 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800dad8:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800dada:	b1a8      	cbz	r0, 800db08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800dadc:	6803      	ldr	r3, [r0, #0]
 800dade:	1d21      	adds	r1, r4, #4
 800dae0:	68db      	ldr	r3, [r3, #12]
 800dae2:	4798      	blx	r3
 800dae4:	b180      	cbz	r0, 800db08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800dae6:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800daea:	2b00      	cmp	r3, #0
 800daec:	dd0c      	ble.n	800db08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800daee:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800daf2:	2d00      	cmp	r5, #0
 800daf4:	dd08      	ble.n	800db08 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800daf6:	4a2d      	ldr	r2, [pc, #180]	; (800dbac <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800daf8:	7812      	ldrb	r2, [r2, #0]
 800dafa:	b13a      	cbz	r2, 800db0c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800dafc:	2a01      	cmp	r2, #1
 800dafe:	d02d      	beq.n	800db5c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800db00:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800db02:	6803      	ldr	r3, [r0, #0]
 800db04:	691b      	ldr	r3, [r3, #16]
 800db06:	4798      	blx	r3
 800db08:	b004      	add	sp, #16
 800db0a:	bd70      	pop	{r4, r5, r6, pc}
 800db0c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800db10:	441d      	add	r5, r3
 800db12:	b2ad      	uxth	r5, r5
 800db14:	b22e      	sxth	r6, r5
 800db16:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800db1a:	42b3      	cmp	r3, r6
 800db1c:	daf0      	bge.n	800db00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800db1e:	6823      	ldr	r3, [r4, #0]
 800db20:	4669      	mov	r1, sp
 800db22:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800db24:	4620      	mov	r0, r4
 800db26:	4798      	blx	r3
 800db28:	b940      	cbnz	r0, 800db3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800db2a:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800db2e:	2b01      	cmp	r3, #1
 800db30:	d004      	beq.n	800db3c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800db32:	3301      	adds	r3, #1
 800db34:	105b      	asrs	r3, r3, #1
 800db36:	f8ad 3006 	strh.w	r3, [sp, #6]
 800db3a:	e7f0      	b.n	800db1e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800db3c:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800db40:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800db44:	4413      	add	r3, r2
 800db46:	b29b      	uxth	r3, r3
 800db48:	441a      	add	r2, r3
 800db4a:	b212      	sxth	r2, r2
 800db4c:	4296      	cmp	r6, r2
 800db4e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800db52:	dae0      	bge.n	800db16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800db54:	1aeb      	subs	r3, r5, r3
 800db56:	f8ad 3006 	strh.w	r3, [sp, #6]
 800db5a:	e7dc      	b.n	800db16 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800db5c:	f8bd 5000 	ldrh.w	r5, [sp]
 800db60:	441d      	add	r5, r3
 800db62:	b2ad      	uxth	r5, r5
 800db64:	b22e      	sxth	r6, r5
 800db66:	f9bd 3000 	ldrsh.w	r3, [sp]
 800db6a:	42b3      	cmp	r3, r6
 800db6c:	dac8      	bge.n	800db00 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800db6e:	6823      	ldr	r3, [r4, #0]
 800db70:	4669      	mov	r1, sp
 800db72:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800db74:	4620      	mov	r0, r4
 800db76:	4798      	blx	r3
 800db78:	b940      	cbnz	r0, 800db8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800db7a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800db7e:	2b01      	cmp	r3, #1
 800db80:	d004      	beq.n	800db8c <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800db82:	3301      	adds	r3, #1
 800db84:	105b      	asrs	r3, r3, #1
 800db86:	f8ad 3004 	strh.w	r3, [sp, #4]
 800db8a:	e7f0      	b.n	800db6e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800db8c:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800db90:	f8bd 3000 	ldrh.w	r3, [sp]
 800db94:	4413      	add	r3, r2
 800db96:	b29b      	uxth	r3, r3
 800db98:	441a      	add	r2, r3
 800db9a:	b212      	sxth	r2, r2
 800db9c:	4296      	cmp	r6, r2
 800db9e:	f8ad 3000 	strh.w	r3, [sp]
 800dba2:	dae0      	bge.n	800db66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800dba4:	1aeb      	subs	r3, r5, r3
 800dba6:	f8ad 3004 	strh.w	r3, [sp, #4]
 800dbaa:	e7dc      	b.n	800db66 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800dbac:	20013750 	.word	0x20013750

0800dbb0 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800dbb0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800dbb2:	6803      	ldr	r3, [r0, #0]
 800dbb4:	4604      	mov	r4, r0
 800dbb6:	4601      	mov	r1, r0
 800dbb8:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800dbba:	4668      	mov	r0, sp
 800dbbc:	4798      	blx	r3
 800dbbe:	2100      	movs	r1, #0
 800dbc0:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800dbc4:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dbc8:	9102      	str	r1, [sp, #8]
 800dbca:	4668      	mov	r0, sp
 800dbcc:	a902      	add	r1, sp, #8
 800dbce:	f8ad 200c 	strh.w	r2, [sp, #12]
 800dbd2:	f8ad 300e 	strh.w	r3, [sp, #14]
 800dbd6:	f7fe f8e5 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800dbda:	6823      	ldr	r3, [r4, #0]
 800dbdc:	4669      	mov	r1, sp
 800dbde:	691b      	ldr	r3, [r3, #16]
 800dbe0:	4620      	mov	r0, r4
 800dbe2:	4798      	blx	r3
 800dbe4:	b004      	add	sp, #16
 800dbe6:	bd10      	pop	{r4, pc}

0800dbe8 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800dbe8:	2101      	movs	r1, #1
 800dbea:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800dbee:	490b      	ldr	r1, [pc, #44]	; (800dc1c <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800dbf0:	6001      	str	r1, [r0, #0]
 800dbf2:	2200      	movs	r2, #0
 800dbf4:	21ff      	movs	r1, #255	; 0xff
 800dbf6:	8082      	strh	r2, [r0, #4]
 800dbf8:	80c2      	strh	r2, [r0, #6]
 800dbfa:	8102      	strh	r2, [r0, #8]
 800dbfc:	8142      	strh	r2, [r0, #10]
 800dbfe:	8182      	strh	r2, [r0, #12]
 800dc00:	81c2      	strh	r2, [r0, #14]
 800dc02:	8202      	strh	r2, [r0, #16]
 800dc04:	8242      	strh	r2, [r0, #18]
 800dc06:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800dc0a:	61c2      	str	r2, [r0, #28]
 800dc0c:	8402      	strh	r2, [r0, #32]
 800dc0e:	8442      	strh	r2, [r0, #34]	; 0x22
 800dc10:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800dc14:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800dc18:	6282      	str	r2, [r0, #40]	; 0x28
 800dc1a:	4770      	bx	lr
 800dc1c:	0802a028 	.word	0x0802a028

0800dc20 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 800dc20:	b570      	push	{r4, r5, r6, lr}
 800dc22:	790b      	ldrb	r3, [r1, #4]
 800dc24:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 800dc28:	2b00      	cmp	r3, #0
 800dc2a:	bf0c      	ite	eq
 800dc2c:	2301      	moveq	r3, #1
 800dc2e:	2300      	movne	r3, #0
 800dc30:	4604      	mov	r4, r0
 800dc32:	460e      	mov	r6, r1
 800dc34:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800dc38:	d109      	bne.n	800dc4e <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 800dc3a:	b14d      	cbz	r5, 800dc50 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 800dc3c:	7933      	ldrb	r3, [r6, #4]
 800dc3e:	2b01      	cmp	r3, #1
 800dc40:	d10c      	bne.n	800dc5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dc42:	6823      	ldr	r3, [r4, #0]
 800dc44:	4620      	mov	r0, r4
 800dc46:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800dc48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800dc4c:	4718      	bx	r3
 800dc4e:	b12d      	cbz	r5, 800dc5c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 800dc50:	6823      	ldr	r3, [r4, #0]
 800dc52:	4620      	mov	r0, r4
 800dc54:	695b      	ldr	r3, [r3, #20]
 800dc56:	4798      	blx	r3
 800dc58:	2d00      	cmp	r5, #0
 800dc5a:	d1ef      	bne.n	800dc3c <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 800dc5c:	bd70      	pop	{r4, r5, r6, pc}

0800dc5e <_ZN8touchgfx12ToggleButtonD1Ev>:
 800dc5e:	4770      	bx	lr

0800dc60 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 800dc60:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800dc64:	b133      	cbz	r3, 800dc74 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 800dc66:	790b      	ldrb	r3, [r1, #4]
 800dc68:	2b01      	cmp	r3, #1
 800dc6a:	bf01      	itttt	eq
 800dc6c:	8dc3      	ldrheq	r3, [r0, #46]	; 0x2e
 800dc6e:	8e02      	ldrheq	r2, [r0, #48]	; 0x30
 800dc70:	85c2      	strheq	r2, [r0, #46]	; 0x2e
 800dc72:	8603      	strheq	r3, [r0, #48]	; 0x30
 800dc74:	f7ff bfd4 	b.w	800dc20 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

0800dc78 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 800dc78:	8813      	ldrh	r3, [r2, #0]
 800dc7a:	8683      	strh	r3, [r0, #52]	; 0x34
 800dc7c:	f001 b87c 	b.w	800ed78 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>

0800dc80 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800dc80:	b510      	push	{r4, lr}
 800dc82:	2138      	movs	r1, #56	; 0x38
 800dc84:	4604      	mov	r4, r0
 800dc86:	f014 f988 	bl	8021f9a <_ZdlPvj>
 800dc8a:	4620      	mov	r0, r4
 800dc8c:	bd10      	pop	{r4, pc}

0800dc8e <_ZN8touchgfx12ToggleButton10forceStateEb>:
 800dc8e:	8e83      	ldrh	r3, [r0, #52]	; 0x34
 800dc90:	b129      	cbz	r1, 800dc9e <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 800dc92:	8dc2      	ldrh	r2, [r0, #46]	; 0x2e
 800dc94:	429a      	cmp	r2, r3
 800dc96:	d007      	beq.n	800dca8 <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 800dc98:	8602      	strh	r2, [r0, #48]	; 0x30
 800dc9a:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800dc9c:	4770      	bx	lr
 800dc9e:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800dca0:	429a      	cmp	r2, r3
 800dca2:	bf1c      	itt	ne
 800dca4:	85c2      	strhne	r2, [r0, #46]	; 0x2e
 800dca6:	8603      	strhne	r3, [r0, #48]	; 0x30
 800dca8:	4770      	bx	lr

0800dcaa <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv>:
 800dcaa:	b508      	push	{r3, lr}
 800dcac:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800dcb0:	b10b      	cbz	r3, 800dcb6 <_ZNK8touchgfx14SnapshotWidget17invalidateContentEv+0xc>
 800dcb2:	f7f4 f861 	bl	8001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800dcb6:	bd08      	pop	{r3, pc}

0800dcb8 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEv>:
 800dcb8:	6803      	ldr	r3, [r0, #0]
 800dcba:	f64f 71fe 	movw	r1, #65534	; 0xfffe
 800dcbe:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800dcc0:	4718      	bx	r3

0800dcc2 <_ZN8touchgfx14SnapshotWidgetD1Ev>:
 800dcc2:	4770      	bx	lr

0800dcc4 <_ZN8touchgfx14SnapshotWidgetD0Ev>:
 800dcc4:	b510      	push	{r4, lr}
 800dcc6:	212c      	movs	r1, #44	; 0x2c
 800dcc8:	4604      	mov	r4, r0
 800dcca:	f014 f966 	bl	8021f9a <_ZdlPvj>
 800dcce:	4620      	mov	r0, r4
 800dcd0:	bd10      	pop	{r4, pc}

0800dcd2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv>:
 800dcd2:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800dcd6:	2bff      	cmp	r3, #255	; 0xff
 800dcd8:	b510      	push	{r4, lr}
 800dcda:	d104      	bne.n	800dce6 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x14>
 800dcdc:	8cca      	ldrh	r2, [r1, #38]	; 0x26
 800dcde:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dce2:	429a      	cmp	r2, r3
 800dce4:	d105      	bne.n	800dcf2 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x20>
 800dce6:	2300      	movs	r3, #0
 800dce8:	8003      	strh	r3, [r0, #0]
 800dcea:	8043      	strh	r3, [r0, #2]
 800dcec:	8083      	strh	r3, [r0, #4]
 800dcee:	80c3      	strh	r3, [r0, #6]
 800dcf0:	bd10      	pop	{r4, pc}
 800dcf2:	2300      	movs	r3, #0
 800dcf4:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
 800dcf8:	f9b1 200a 	ldrsh.w	r2, [r1, #10]
 800dcfc:	8003      	strh	r3, [r0, #0]
 800dcfe:	8043      	strh	r3, [r0, #2]
 800dd00:	8084      	strh	r4, [r0, #4]
 800dd02:	80c2      	strh	r2, [r0, #6]
 800dd04:	e7f4      	b.n	800dcf0 <_ZNK8touchgfx14SnapshotWidget12getSolidRectEv+0x1e>

0800dd06 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE>:
 800dd06:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800dd0a:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800dd0e:	b087      	sub	sp, #28
 800dd10:	4604      	mov	r4, r0
 800dd12:	4689      	mov	r9, r1
 800dd14:	b363      	cbz	r3, 800dd70 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800dd16:	8cc2      	ldrh	r2, [r0, #38]	; 0x26
 800dd18:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800dd1c:	429a      	cmp	r2, r3
 800dd1e:	d027      	beq.n	800dd70 <_ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE+0x6a>
 800dd20:	ad06      	add	r5, sp, #24
 800dd22:	2700      	movs	r7, #0
 800dd24:	f825 2d0c 	strh.w	r2, [r5, #-12]!
 800dd28:	4628      	mov	r0, r5
 800dd2a:	f007 f951 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800dd2e:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800dd32:	f8ad 3016 	strh.w	r3, [sp, #22]
 800dd36:	6823      	ldr	r3, [r4, #0]
 800dd38:	f8ad 0014 	strh.w	r0, [sp, #20]
 800dd3c:	a904      	add	r1, sp, #16
 800dd3e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800dd40:	9704      	str	r7, [sp, #16]
 800dd42:	4620      	mov	r0, r4
 800dd44:	4798      	blx	r3
 800dd46:	f7fe fafd 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800dd4a:	6803      	ldr	r3, [r0, #0]
 800dd4c:	4606      	mov	r6, r0
 800dd4e:	f8d3 800c 	ldr.w	r8, [r3, #12]
 800dd52:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 800dd54:	f8ad 300c 	strh.w	r3, [sp, #12]
 800dd58:	4628      	mov	r0, r5
 800dd5a:	f007 fa25 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 800dd5e:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800dd62:	9300      	str	r3, [sp, #0]
 800dd64:	4601      	mov	r1, r0
 800dd66:	9701      	str	r7, [sp, #4]
 800dd68:	464b      	mov	r3, r9
 800dd6a:	aa04      	add	r2, sp, #16
 800dd6c:	4630      	mov	r0, r6
 800dd6e:	47c0      	blx	r8
 800dd70:	b007      	add	sp, #28
 800dd72:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800dd76 <_ZN8touchgfx14SnapshotWidget12makeSnapshotEt>:
 800dd76:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800dd78:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800dd7c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800dd80:	6803      	ldr	r3, [r0, #0]
 800dd82:	f9b0 2008 	ldrsh.w	r2, [r0, #8]
 800dd86:	f8ad 2004 	strh.w	r2, [sp, #4]
 800dd8a:	460d      	mov	r5, r1
 800dd8c:	2100      	movs	r1, #0
 800dd8e:	4604      	mov	r4, r0
 800dd90:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800dd92:	9100      	str	r1, [sp, #0]
 800dd94:	4669      	mov	r1, sp
 800dd96:	4798      	blx	r3
 800dd98:	4621      	mov	r1, r4
 800dd9a:	a802      	add	r0, sp, #8
 800dd9c:	f004 ff06 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800dda0:	f7fe fad0 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 800dda4:	6803      	ldr	r3, [r0, #0]
 800dda6:	aa02      	add	r2, sp, #8
 800dda8:	695e      	ldr	r6, [r3, #20]
 800ddaa:	4669      	mov	r1, sp
 800ddac:	462b      	mov	r3, r5
 800ddae:	47b0      	blx	r6
 800ddb0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ddb4:	2800      	cmp	r0, #0
 800ddb6:	bf08      	it	eq
 800ddb8:	461d      	moveq	r5, r3
 800ddba:	84e5      	strh	r5, [r4, #38]	; 0x26
 800ddbc:	b004      	add	sp, #16
 800ddbe:	bd70      	pop	{r4, r5, r6, pc}

0800ddc0 <_ZN8touchgfx14SnapshotWidgetC1Ev>:
 800ddc0:	2200      	movs	r2, #0
 800ddc2:	8082      	strh	r2, [r0, #4]
 800ddc4:	80c2      	strh	r2, [r0, #6]
 800ddc6:	8102      	strh	r2, [r0, #8]
 800ddc8:	8142      	strh	r2, [r0, #10]
 800ddca:	8182      	strh	r2, [r0, #12]
 800ddcc:	81c2      	strh	r2, [r0, #14]
 800ddce:	8202      	strh	r2, [r0, #16]
 800ddd0:	8242      	strh	r2, [r0, #18]
 800ddd2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800ddd6:	61c2      	str	r2, [r0, #28]
 800ddd8:	8402      	strh	r2, [r0, #32]
 800ddda:	8442      	strh	r2, [r0, #34]	; 0x22
 800dddc:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800dde0:	2201      	movs	r2, #1
 800dde2:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800dde6:	4a04      	ldr	r2, [pc, #16]	; (800ddf8 <_ZN8touchgfx14SnapshotWidgetC1Ev+0x38>)
 800dde8:	6002      	str	r2, [r0, #0]
 800ddea:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800ddee:	84c2      	strh	r2, [r0, #38]	; 0x26
 800ddf0:	f880 2028 	strb.w	r2, [r0, #40]	; 0x28
 800ddf4:	4770      	bx	lr
 800ddf6:	bf00      	nop
 800ddf8:	0802a114 	.word	0x0802a114

0800ddfc <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ddfc:	b508      	push	{r3, lr}
 800ddfe:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800de02:	b10b      	cbz	r3, 800de08 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800de04:	f7f3 ffb8 	bl	8001d78 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800de08:	bd08      	pop	{r3, pc}

0800de0a <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800de0a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800de0e:	4770      	bx	lr

0800de10 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800de10:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800de14:	4770      	bx	lr

0800de16 <_ZN8touchgfx13ScalableImageD1Ev>:
 800de16:	4770      	bx	lr

0800de18 <_ZN8touchgfx13ScalableImageD0Ev>:
 800de18:	b510      	push	{r4, lr}
 800de1a:	212c      	movs	r1, #44	; 0x2c
 800de1c:	4604      	mov	r4, r0
 800de1e:	f014 f8bc 	bl	8021f9a <_ZdlPvj>
 800de22:	4620      	mov	r0, r4
 800de24:	bd10      	pop	{r4, pc}

0800de26 <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800de26:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800de28:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800de2c:	2bff      	cmp	r3, #255	; 0xff
 800de2e:	4605      	mov	r5, r0
 800de30:	d11e      	bne.n	800de70 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800de32:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800de36:	4621      	mov	r1, r4
 800de38:	4668      	mov	r0, sp
 800de3a:	f007 f931 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800de3e:	4620      	mov	r0, r4
 800de40:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800de44:	f007 f8c4 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800de48:	4286      	cmp	r6, r0
 800de4a:	d111      	bne.n	800de70 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800de4c:	4621      	mov	r1, r4
 800de4e:	a802      	add	r0, sp, #8
 800de50:	f007 f926 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800de54:	4620      	mov	r0, r4
 800de56:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800de5a:	f007 f8ed 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800de5e:	4286      	cmp	r6, r0
 800de60:	d106      	bne.n	800de70 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800de62:	4621      	mov	r1, r4
 800de64:	4628      	mov	r0, r5
 800de66:	f007 f91b 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800de6a:	4628      	mov	r0, r5
 800de6c:	b004      	add	sp, #16
 800de6e:	bd70      	pop	{r4, r5, r6, pc}
 800de70:	2300      	movs	r3, #0
 800de72:	802b      	strh	r3, [r5, #0]
 800de74:	806b      	strh	r3, [r5, #2]
 800de76:	80ab      	strh	r3, [r5, #4]
 800de78:	80eb      	strh	r3, [r5, #6]
 800de7a:	e7f6      	b.n	800de6a <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>

0800de7c <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800de7c:	b538      	push	{r3, r4, r5, lr}
 800de7e:	2300      	movs	r3, #0
 800de80:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800de84:	8083      	strh	r3, [r0, #4]
 800de86:	80c3      	strh	r3, [r0, #6]
 800de88:	8103      	strh	r3, [r0, #8]
 800de8a:	8143      	strh	r3, [r0, #10]
 800de8c:	8183      	strh	r3, [r0, #12]
 800de8e:	81c3      	strh	r3, [r0, #14]
 800de90:	8203      	strh	r3, [r0, #16]
 800de92:	8243      	strh	r3, [r0, #18]
 800de94:	61c3      	str	r3, [r0, #28]
 800de96:	8403      	strh	r3, [r0, #32]
 800de98:	8443      	strh	r3, [r0, #34]	; 0x22
 800de9a:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800de9e:	2501      	movs	r5, #1
 800dea0:	4b08      	ldr	r3, [pc, #32]	; (800dec4 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800dea2:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800dea6:	6003      	str	r3, [r0, #0]
 800dea8:	880b      	ldrh	r3, [r1, #0]
 800deaa:	84c3      	strh	r3, [r0, #38]	; 0x26
 800deac:	23ff      	movs	r3, #255	; 0xff
 800deae:	4604      	mov	r4, r0
 800deb0:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800deb4:	f001 f93b 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800deb8:	4b03      	ldr	r3, [pc, #12]	; (800dec8 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800deba:	6023      	str	r3, [r4, #0]
 800debc:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800dec0:	4620      	mov	r0, r4
 800dec2:	bd38      	pop	{r3, r4, r5, pc}
 800dec4:	0802a450 	.word	0x0802a450
 800dec8:	0802a184 	.word	0x0802a184

0800decc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800decc:	4603      	mov	r3, r0
 800dece:	3026      	adds	r0, #38	; 0x26
 800ded0:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800ded4:	b90b      	cbnz	r3, 800deda <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800ded6:	f004 bf0d 	b.w	8012cf4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800deda:	f004 bf1b 	b.w	8012d14 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800dee0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800dee0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dee4:	4604      	mov	r4, r0
 800dee6:	469b      	mov	fp, r3
 800dee8:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800deec:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800def0:	f9b1 6000 	ldrsh.w	r6, [r1]
 800def4:	8888      	ldrh	r0, [r1, #4]
 800def6:	b0b3      	sub	sp, #204	; 0xcc
 800def8:	4430      	add	r0, r6
 800defa:	b280      	uxth	r0, r0
 800defc:	9206      	str	r2, [sp, #24]
 800defe:	fa0f fe80 	sxth.w	lr, r0
 800df02:	2200      	movs	r2, #0
 800df04:	4596      	cmp	lr, r2
 800df06:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800df0a:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800df0e:	9211      	str	r2, [sp, #68]	; 0x44
 800df10:	f340 811a 	ble.w	800e148 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800df14:	45b4      	cmp	ip, r6
 800df16:	f340 8117 	ble.w	800e148 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800df1a:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800df1e:	88ca      	ldrh	r2, [r1, #6]
 800df20:	442a      	add	r2, r5
 800df22:	b292      	uxth	r2, r2
 800df24:	b211      	sxth	r1, r2
 800df26:	2900      	cmp	r1, #0
 800df28:	f340 810e 	ble.w	800e148 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800df2c:	42ab      	cmp	r3, r5
 800df2e:	f340 810b 	ble.w	800e148 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800df32:	45f4      	cmp	ip, lr
 800df34:	bfb8      	it	lt
 800df36:	fa1f f08c 	uxthlt.w	r0, ip
 800df3a:	428b      	cmp	r3, r1
 800df3c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800df40:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800df44:	bfb8      	it	lt
 800df46:	b29a      	uxthlt	r2, r3
 800df48:	1b80      	subs	r0, r0, r6
 800df4a:	1b52      	subs	r2, r2, r5
 800df4c:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800df50:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 800df54:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800df58:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 800df5c:	ab11      	add	r3, sp, #68	; 0x44
 800df5e:	e893 0003 	ldmia.w	r3, {r0, r1}
 800df62:	6822      	ldr	r2, [r4, #0]
 800df64:	9307      	str	r3, [sp, #28]
 800df66:	ad13      	add	r5, sp, #76	; 0x4c
 800df68:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800df6a:	e885 0003 	stmia.w	r5, {r0, r1}
 800df6e:	4629      	mov	r1, r5
 800df70:	4620      	mov	r0, r4
 800df72:	4790      	blx	r2
 800df74:	4621      	mov	r1, r4
 800df76:	a815      	add	r0, sp, #84	; 0x54
 800df78:	f004 fe18 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800df7c:	a815      	add	r0, sp, #84	; 0x54
 800df7e:	f003 fb27 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800df82:	9b07      	ldr	r3, [sp, #28]
 800df84:	1d26      	adds	r6, r4, #4
 800df86:	4618      	mov	r0, r3
 800df88:	4631      	mov	r1, r6
 800df8a:	f003 fb65 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800df8e:	4628      	mov	r0, r5
 800df90:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800df94:	f003 fb1c 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800df98:	4628      	mov	r0, r5
 800df9a:	f007 f905 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 800df9e:	9007      	str	r0, [sp, #28]
 800dfa0:	2800      	cmp	r0, #0
 800dfa2:	f000 80ce 	beq.w	800e142 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 800dfa6:	f8db 2000 	ldr.w	r2, [fp]
 800dfaa:	9209      	str	r2, [sp, #36]	; 0x24
 800dfac:	f8db 2004 	ldr.w	r2, [fp, #4]
 800dfb0:	920a      	str	r2, [sp, #40]	; 0x28
 800dfb2:	f8db 2008 	ldr.w	r2, [fp, #8]
 800dfb6:	920b      	str	r2, [sp, #44]	; 0x2c
 800dfb8:	f8db 200c 	ldr.w	r2, [fp, #12]
 800dfbc:	920c      	str	r2, [sp, #48]	; 0x30
 800dfbe:	f8da 2000 	ldr.w	r2, [sl]
 800dfc2:	920d      	str	r2, [sp, #52]	; 0x34
 800dfc4:	f8da 2004 	ldr.w	r2, [sl, #4]
 800dfc8:	920e      	str	r2, [sp, #56]	; 0x38
 800dfca:	f8da 2008 	ldr.w	r2, [sl, #8]
 800dfce:	920f      	str	r2, [sp, #60]	; 0x3c
 800dfd0:	f8da 200c 	ldr.w	r2, [sl, #12]
 800dfd4:	9210      	str	r2, [sp, #64]	; 0x40
 800dfd6:	a90d      	add	r1, sp, #52	; 0x34
 800dfd8:	4632      	mov	r2, r6
 800dfda:	a809      	add	r0, sp, #36	; 0x24
 800dfdc:	f003 fb20 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800dfe0:	4632      	mov	r2, r6
 800dfe2:	a90e      	add	r1, sp, #56	; 0x38
 800dfe4:	a80a      	add	r0, sp, #40	; 0x28
 800dfe6:	f003 fb1b 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800dfea:	4632      	mov	r2, r6
 800dfec:	a90f      	add	r1, sp, #60	; 0x3c
 800dfee:	a80b      	add	r0, sp, #44	; 0x2c
 800dff0:	f003 fb16 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800dff4:	4632      	mov	r2, r6
 800dff6:	a910      	add	r1, sp, #64	; 0x40
 800dff8:	a80c      	add	r0, sp, #48	; 0x30
 800dffa:	f003 fb11 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800dffe:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800e002:	edd7 3a00 	vldr	s7, [r7]
 800e006:	ed97 5a01 	vldr	s10, [r7, #4]
 800e00a:	edd9 2a00 	vldr	s5, [r9]
 800e00e:	ed98 3a00 	vldr	s6, [r8]
 800e012:	ed99 4a01 	vldr	s8, [r9, #4]
 800e016:	edd8 4a01 	vldr	s9, [r8, #4]
 800e01a:	edd9 5a02 	vldr	s11, [r9, #8]
 800e01e:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800e022:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800e026:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 800e02a:	eef0 6a67 	vmov.f32	s13, s15
 800e02e:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800e032:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 800e036:	eeb0 7a67 	vmov.f32	s14, s15
 800e03a:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800e03e:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 800e042:	eeb0 6a67 	vmov.f32	s12, s15
 800e046:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e04a:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800e04e:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 800e052:	ee16 6a10 	vmov	r6, s12
 800e056:	eeb0 6a67 	vmov.f32	s12, s15
 800e05a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e05e:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800e062:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 800e066:	ee16 0a10 	vmov	r0, s12
 800e06a:	eeb0 6a67 	vmov.f32	s12, s15
 800e06e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e072:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800e076:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 800e07a:	ee16 1a10 	vmov	r1, s12
 800e07e:	eeb0 6a67 	vmov.f32	s12, s15
 800e082:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e086:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800e08a:	ee16 2a10 	vmov	r2, s12
 800e08e:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800e092:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800e096:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800e09a:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800e09e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800e0a2:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800e0a6:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800e0aa:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800e0ae:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800e0b2:	f8d8 b008 	ldr.w	fp, [r8, #8]
 800e0b6:	68ff      	ldr	r7, [r7, #12]
 800e0b8:	9624      	str	r6, [sp, #144]	; 0x90
 800e0ba:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 800e0be:	922d      	str	r2, [sp, #180]	; 0xb4
 800e0c0:	4a23      	ldr	r2, [pc, #140]	; (800e150 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 800e0c2:	9b06      	ldr	r3, [sp, #24]
 800e0c4:	8812      	ldrh	r2, [r2, #0]
 800e0c6:	9317      	str	r3, [sp, #92]	; 0x5c
 800e0c8:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800e0cc:	9b07      	ldr	r3, [sp, #28]
 800e0ce:	9218      	str	r2, [sp, #96]	; 0x60
 800e0d0:	4628      	mov	r0, r5
 800e0d2:	9319      	str	r3, [sp, #100]	; 0x64
 800e0d4:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800e0d8:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800e0dc:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800e0e0:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 800e0e4:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800e0e8:	9731      	str	r7, [sp, #196]	; 0xc4
 800e0ea:	f007 f88d 	bl	8015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800e0ee:	901a      	str	r0, [sp, #104]	; 0x68
 800e0f0:	4628      	mov	r0, r5
 800e0f2:	f006 ff6d 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e0f6:	901b      	str	r0, [sp, #108]	; 0x6c
 800e0f8:	4628      	mov	r0, r5
 800e0fa:	f006 ff9d 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e0fe:	901c      	str	r0, [sp, #112]	; 0x70
 800e100:	4628      	mov	r0, r5
 800e102:	f006 ff65 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e106:	4b13      	ldr	r3, [pc, #76]	; (800e154 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 800e108:	901d      	str	r0, [sp, #116]	; 0x74
 800e10a:	681b      	ldr	r3, [r3, #0]
 800e10c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e110:	b10a      	cbz	r2, 800e116 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 800e112:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800e114:	b905      	cbnz	r5, 800e118 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 800e116:	689d      	ldr	r5, [r3, #8]
 800e118:	682b      	ldr	r3, [r5, #0]
 800e11a:	4620      	mov	r0, r4
 800e11c:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800e11e:	f7ff fed5 	bl	800decc <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800e122:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800e126:	9304      	str	r3, [sp, #16]
 800e128:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800e12c:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800e130:	ab13      	add	r3, sp, #76	; 0x4c
 800e132:	9301      	str	r3, [sp, #4]
 800e134:	ab15      	add	r3, sp, #84	; 0x54
 800e136:	9300      	str	r3, [sp, #0]
 800e138:	aa1e      	add	r2, sp, #120	; 0x78
 800e13a:	ab19      	add	r3, sp, #100	; 0x64
 800e13c:	a917      	add	r1, sp, #92	; 0x5c
 800e13e:	4628      	mov	r0, r5
 800e140:	47b0      	blx	r6
 800e142:	b033      	add	sp, #204	; 0xcc
 800e144:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e148:	2300      	movs	r3, #0
 800e14a:	9312      	str	r3, [sp, #72]	; 0x48
 800e14c:	e706      	b.n	800df5c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800e14e:	bf00      	nop
 800e150:	20013752 	.word	0x20013752
 800e154:	20013758 	.word	0x20013758

0800e158 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800e158:	b570      	push	{r4, r5, r6, lr}
 800e15a:	ed2d 8b04 	vpush	{d8-d9}
 800e15e:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800e162:	b098      	sub	sp, #96	; 0x60
 800e164:	4604      	mov	r4, r0
 800e166:	460e      	mov	r6, r1
 800e168:	2b00      	cmp	r3, #0
 800e16a:	d065      	beq.n	800e238 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800e16c:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e170:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800e254 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800e174:	ee09 3a10 	vmov	s18, r3
 800e178:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e17c:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800e180:	ee08 3a90 	vmov	s17, r3
 800e184:	4628      	mov	r0, r5
 800e186:	4b34      	ldr	r3, [pc, #208]	; (800e258 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800e188:	930c      	str	r3, [sp, #48]	; 0x30
 800e18a:	930d      	str	r3, [sp, #52]	; 0x34
 800e18c:	930e      	str	r3, [sp, #56]	; 0x38
 800e18e:	930f      	str	r3, [sp, #60]	; 0x3c
 800e190:	f006 ff1e 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800e194:	ee07 0a90 	vmov	s15, r0
 800e198:	4628      	mov	r0, r5
 800e19a:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800e19e:	f006 ff4b 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800e1a2:	4b2e      	ldr	r3, [pc, #184]	; (800e25c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800e1a4:	781b      	ldrb	r3, [r3, #0]
 800e1a6:	ee07 0a90 	vmov	s15, r0
 800e1aa:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800e1ae:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800e1b2:	2b01      	cmp	r3, #1
 800e1b4:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800e1b8:	ee39 9a08 	vadd.f32	s18, s18, s16
 800e1bc:	ee78 8a88 	vadd.f32	s17, s17, s16
 800e1c0:	eef0 7a48 	vmov.f32	s15, s16
 800e1c4:	d13c      	bne.n	800e240 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800e1c6:	eef0 6a69 	vmov.f32	s13, s19
 800e1ca:	eeb0 6a47 	vmov.f32	s12, s14
 800e1ce:	eef0 5a47 	vmov.f32	s11, s14
 800e1d2:	ee19 3a90 	vmov	r3, s19
 800e1d6:	eeb0 7a48 	vmov.f32	s14, s16
 800e1da:	eef0 9a48 	vmov.f32	s19, s16
 800e1de:	9314      	str	r3, [sp, #80]	; 0x50
 800e1e0:	ab14      	add	r3, sp, #80	; 0x50
 800e1e2:	9303      	str	r3, [sp, #12]
 800e1e4:	ab10      	add	r3, sp, #64	; 0x40
 800e1e6:	9302      	str	r3, [sp, #8]
 800e1e8:	ab0c      	add	r3, sp, #48	; 0x30
 800e1ea:	9301      	str	r3, [sp, #4]
 800e1ec:	ab08      	add	r3, sp, #32
 800e1ee:	9300      	str	r3, [sp, #0]
 800e1f0:	2200      	movs	r2, #0
 800e1f2:	ab04      	add	r3, sp, #16
 800e1f4:	4631      	mov	r1, r6
 800e1f6:	4620      	mov	r0, r4
 800e1f8:	edcd 7a04 	vstr	s15, [sp, #16]
 800e1fc:	ed8d 9a05 	vstr	s18, [sp, #20]
 800e200:	ed8d 9a06 	vstr	s18, [sp, #24]
 800e204:	edcd 7a07 	vstr	s15, [sp, #28]
 800e208:	edcd 7a08 	vstr	s15, [sp, #32]
 800e20c:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800e210:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800e214:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800e218:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800e21c:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800e220:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800e224:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800e228:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800e22c:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800e230:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800e234:	f7ff fe54 	bl	800dee0 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800e238:	b018      	add	sp, #96	; 0x60
 800e23a:	ecbd 8b04 	vpop	{d8-d9}
 800e23e:	bd70      	pop	{r4, r5, r6, pc}
 800e240:	eef0 6a47 	vmov.f32	s13, s14
 800e244:	eef0 5a69 	vmov.f32	s11, s19
 800e248:	eeb0 6a48 	vmov.f32	s12, s16
 800e24c:	ee18 3a10 	vmov	r3, s16
 800e250:	e7c5      	b.n	800e1de <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800e252:	bf00      	nop
 800e254:	00000000 	.word	0x00000000
 800e258:	42c80000 	.word	0x42c80000
 800e25c:	20013750 	.word	0x20013750

0800e260 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800e260:	2000      	movs	r0, #0
 800e262:	4770      	bx	lr

0800e264 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800e264:	4b07      	ldr	r3, [pc, #28]	; (800e284 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800e266:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e268:	881b      	ldrh	r3, [r3, #0]
 800e26a:	4293      	cmp	r3, r2
 800e26c:	bf81      	itttt	hi
 800e26e:	4b06      	ldrhi	r3, [pc, #24]	; (800e288 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800e270:	681b      	ldrhi	r3, [r3, #0]
 800e272:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800e276:	7858      	ldrbhi	r0, [r3, #1]
 800e278:	bf8c      	ite	hi
 800e27a:	f000 0003 	andhi.w	r0, r0, #3
 800e27e:	2000      	movls	r0, #0
 800e280:	4770      	bx	lr
 800e282:	bf00      	nop
 800e284:	200137b4 	.word	0x200137b4
 800e288:	200137b0 	.word	0x200137b0

0800e28c <_ZN8touchgfx8TextAreaD1Ev>:
 800e28c:	4770      	bx	lr
	...

0800e290 <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800e290:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e294:	4b10      	ldr	r3, [pc, #64]	; (800e2d8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800e296:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e298:	881b      	ldrh	r3, [r3, #0]
 800e29a:	428b      	cmp	r3, r1
 800e29c:	4604      	mov	r4, r0
 800e29e:	d918      	bls.n	800e2d2 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800e2a0:	6803      	ldr	r3, [r0, #0]
 800e2a2:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800e2a4:	4b0d      	ldr	r3, [pc, #52]	; (800e2dc <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800e2a6:	6818      	ldr	r0, [r3, #0]
 800e2a8:	f7f7 f900 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e2ac:	6823      	ldr	r3, [r4, #0]
 800e2ae:	4606      	mov	r6, r0
 800e2b0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e2b2:	4620      	mov	r0, r4
 800e2b4:	4798      	blx	r3
 800e2b6:	6823      	ldr	r3, [r4, #0]
 800e2b8:	4607      	mov	r7, r0
 800e2ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e2be:	4620      	mov	r0, r4
 800e2c0:	4798      	blx	r3
 800e2c2:	463a      	mov	r2, r7
 800e2c4:	4603      	mov	r3, r0
 800e2c6:	4631      	mov	r1, r6
 800e2c8:	4620      	mov	r0, r4
 800e2ca:	46ac      	mov	ip, r5
 800e2cc:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800e2d0:	4760      	bx	ip
 800e2d2:	2000      	movs	r0, #0
 800e2d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e2d8:	200137b4 	.word	0x200137b4
 800e2dc:	200137bc 	.word	0x200137bc

0800e2e0 <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800e2e0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800e2e4:	4b17      	ldr	r3, [pc, #92]	; (800e344 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800e2e6:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e2e8:	881b      	ldrh	r3, [r3, #0]
 800e2ea:	428b      	cmp	r3, r1
 800e2ec:	4604      	mov	r4, r0
 800e2ee:	d926      	bls.n	800e33e <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800e2f0:	4b15      	ldr	r3, [pc, #84]	; (800e348 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800e2f2:	681b      	ldr	r3, [r3, #0]
 800e2f4:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800e2f8:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800e2fc:	4b13      	ldr	r3, [pc, #76]	; (800e34c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800e2fe:	7855      	ldrb	r5, [r2, #1]
 800e300:	681b      	ldr	r3, [r3, #0]
 800e302:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800e306:	6833      	ldr	r3, [r6, #0]
 800e308:	69df      	ldr	r7, [r3, #28]
 800e30a:	4b11      	ldr	r3, [pc, #68]	; (800e350 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800e30c:	6818      	ldr	r0, [r3, #0]
 800e30e:	f7f7 f8cd 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e312:	6823      	ldr	r3, [r4, #0]
 800e314:	4680      	mov	r8, r0
 800e316:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e318:	4620      	mov	r0, r4
 800e31a:	4798      	blx	r3
 800e31c:	6823      	ldr	r3, [r4, #0]
 800e31e:	4681      	mov	r9, r0
 800e320:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e324:	4620      	mov	r0, r4
 800e326:	4798      	blx	r3
 800e328:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800e32c:	9000      	str	r0, [sp, #0]
 800e32e:	464b      	mov	r3, r9
 800e330:	4642      	mov	r2, r8
 800e332:	4629      	mov	r1, r5
 800e334:	4630      	mov	r0, r6
 800e336:	47b8      	blx	r7
 800e338:	b003      	add	sp, #12
 800e33a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e33e:	2000      	movs	r0, #0
 800e340:	e7fa      	b.n	800e338 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800e342:	bf00      	nop
 800e344:	200137b4 	.word	0x200137b4
 800e348:	200137b0 	.word	0x200137b0
 800e34c:	200137b8 	.word	0x200137b8
 800e350:	200137bc 	.word	0x200137bc

0800e354 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800e354:	b40e      	push	{r1, r2, r3}
 800e356:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e35a:	4b2f      	ldr	r3, [pc, #188]	; (800e418 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800e35c:	881a      	ldrh	r2, [r3, #0]
 800e35e:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800e360:	429a      	cmp	r2, r3
 800e362:	b09d      	sub	sp, #116	; 0x74
 800e364:	4604      	mov	r4, r0
 800e366:	d954      	bls.n	800e412 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800e368:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800e41c <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800e36c:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800e420 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800e370:	aa26      	add	r2, sp, #152	; 0x98
 800e372:	9202      	str	r2, [sp, #8]
 800e374:	f8d9 2000 	ldr.w	r2, [r9]
 800e378:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e37c:	f8d8 3000 	ldr.w	r3, [r8]
 800e380:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e384:	682b      	ldr	r3, [r5, #0]
 800e386:	4628      	mov	r0, r5
 800e388:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e38a:	4798      	blx	r3
 800e38c:	b207      	sxth	r7, r0
 800e38e:	4606      	mov	r6, r0
 800e390:	a803      	add	r0, sp, #12
 800e392:	f005 f8d3 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 800e396:	682b      	ldr	r3, [r5, #0]
 800e398:	4628      	mov	r0, r5
 800e39a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e39c:	4798      	blx	r3
 800e39e:	682b      	ldr	r3, [r5, #0]
 800e3a0:	4682      	mov	sl, r0
 800e3a2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e3a4:	4628      	mov	r0, r5
 800e3a6:	4798      	blx	r3
 800e3a8:	4653      	mov	r3, sl
 800e3aa:	9000      	str	r0, [sp, #0]
 800e3ac:	9a02      	ldr	r2, [sp, #8]
 800e3ae:	9925      	ldr	r1, [sp, #148]	; 0x94
 800e3b0:	a803      	add	r0, sp, #12
 800e3b2:	f005 f91e 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800e3b6:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e3b8:	f8d9 3000 	ldr.w	r3, [r9]
 800e3bc:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800e3c0:	8925      	ldrh	r5, [r4, #8]
 800e3c2:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800e3c6:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800e3ca:	eba5 050c 	sub.w	r5, r5, ip
 800e3ce:	784a      	ldrb	r2, [r1, #1]
 800e3d0:	f8d8 3000 	ldr.w	r3, [r8]
 800e3d4:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800e3d8:	b22d      	sxth	r5, r5
 800e3da:	9500      	str	r5, [sp, #0]
 800e3dc:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800e3e0:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800e3e4:	a803      	add	r0, sp, #12
 800e3e6:	f002 fe01 	bl	8010fec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800e3ea:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800e3ee:	18b9      	adds	r1, r7, r2
 800e3f0:	2900      	cmp	r1, #0
 800e3f2:	b203      	sxth	r3, r0
 800e3f4:	dd0b      	ble.n	800e40e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800e3f6:	3b01      	subs	r3, #1
 800e3f8:	fb13 f302 	smulbb	r3, r3, r2
 800e3fc:	fb16 3300 	smlabb	r3, r6, r0, r3
 800e400:	b21f      	sxth	r7, r3
 800e402:	4638      	mov	r0, r7
 800e404:	b01d      	add	sp, #116	; 0x74
 800e406:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e40a:	b003      	add	sp, #12
 800e40c:	4770      	bx	lr
 800e40e:	2b00      	cmp	r3, #0
 800e410:	dcf7      	bgt.n	800e402 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e412:	2700      	movs	r7, #0
 800e414:	e7f5      	b.n	800e402 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800e416:	bf00      	nop
 800e418:	200137b4 	.word	0x200137b4
 800e41c:	200137b0 	.word	0x200137b0
 800e420:	200137b8 	.word	0x200137b8

0800e424 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800e424:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e428:	4bbc      	ldr	r3, [pc, #752]	; (800e71c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800e42a:	460c      	mov	r4, r1
 800e42c:	881b      	ldrh	r3, [r3, #0]
 800e42e:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800e430:	428b      	cmp	r3, r1
 800e432:	b0a9      	sub	sp, #164	; 0xa4
 800e434:	4680      	mov	r8, r0
 800e436:	d809      	bhi.n	800e44c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800e438:	2300      	movs	r3, #0
 800e43a:	f04f 32ff 	mov.w	r2, #4294967295
 800e43e:	e9c0 3200 	strd	r3, r2, [r0]
 800e442:	6083      	str	r3, [r0, #8]
 800e444:	4640      	mov	r0, r8
 800e446:	b029      	add	sp, #164	; 0xa4
 800e448:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e44c:	4eb4      	ldr	r6, [pc, #720]	; (800e720 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800e44e:	6833      	ldr	r3, [r6, #0]
 800e450:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800e454:	4bb3      	ldr	r3, [pc, #716]	; (800e724 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800e456:	681b      	ldr	r3, [r3, #0]
 800e458:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800e45c:	4bb2      	ldr	r3, [pc, #712]	; (800e728 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e45e:	6818      	ldr	r0, [r3, #0]
 800e460:	f7f7 f824 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e464:	682b      	ldr	r3, [r5, #0]
 800e466:	4681      	mov	r9, r0
 800e468:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e46a:	4628      	mov	r0, r5
 800e46c:	4798      	blx	r3
 800e46e:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800e470:	b203      	sxth	r3, r0
 800e472:	4407      	add	r7, r0
 800e474:	9304      	str	r3, [sp, #16]
 800e476:	b2bb      	uxth	r3, r7
 800e478:	9303      	str	r3, [sp, #12]
 800e47a:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800e47e:	4682      	mov	sl, r0
 800e480:	a80f      	add	r0, sp, #60	; 0x3c
 800e482:	2b00      	cmp	r3, #0
 800e484:	f040 80a6 	bne.w	800e5d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800e488:	f005 f858 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 800e48c:	682b      	ldr	r3, [r5, #0]
 800e48e:	4628      	mov	r0, r5
 800e490:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e492:	4798      	blx	r3
 800e494:	682b      	ldr	r3, [r5, #0]
 800e496:	4606      	mov	r6, r0
 800e498:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e49a:	4628      	mov	r0, r5
 800e49c:	4798      	blx	r3
 800e49e:	6823      	ldr	r3, [r4, #0]
 800e4a0:	4607      	mov	r7, r0
 800e4a2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e4a4:	4620      	mov	r0, r4
 800e4a6:	4798      	blx	r3
 800e4a8:	6823      	ldr	r3, [r4, #0]
 800e4aa:	4683      	mov	fp, r0
 800e4ac:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e4b0:	4620      	mov	r0, r4
 800e4b2:	4798      	blx	r3
 800e4b4:	463b      	mov	r3, r7
 800e4b6:	e9cd b000 	strd	fp, r0, [sp]
 800e4ba:	4649      	mov	r1, r9
 800e4bc:	4632      	mov	r2, r6
 800e4be:	a80f      	add	r0, sp, #60	; 0x3c
 800e4c0:	f005 f8ac 	bl	801361c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e4c4:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e4c8:	f8df b254 	ldr.w	fp, [pc, #596]	; 800e720 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800e4cc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e4d0:	f04f 0600 	mov.w	r6, #0
 800e4d4:	bf0c      	ite	eq
 800e4d6:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800e4da:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800e4de:	4637      	mov	r7, r6
 800e4e0:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e4e2:	f8db 3000 	ldr.w	r3, [fp]
 800e4e6:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e4ea:	4629      	mov	r1, r5
 800e4ec:	785b      	ldrb	r3, [r3, #1]
 800e4ee:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800e4f2:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e4f6:	a80f      	add	r0, sp, #60	; 0x3c
 800e4f8:	f002 fa93 	bl	8010a22 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800e4fc:	9b03      	ldr	r3, [sp, #12]
 800e4fe:	4286      	cmp	r6, r0
 800e500:	bfb8      	it	lt
 800e502:	4606      	movlt	r6, r0
 800e504:	3701      	adds	r7, #1
 800e506:	eba9 0903 	sub.w	r9, r9, r3
 800e50a:	a80f      	add	r0, sp, #60	; 0x3c
 800e50c:	b236      	sxth	r6, r6
 800e50e:	b2bf      	uxth	r7, r7
 800e510:	fa0f f989 	sxth.w	r9, r9
 800e514:	f005 f839 	bl	801358a <_ZN8touchgfx12TextProvider11endOfStringEv>
 800e518:	b918      	cbnz	r0, 800e522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e51a:	7a2b      	ldrb	r3, [r5, #8]
 800e51c:	444b      	add	r3, r9
 800e51e:	2b00      	cmp	r3, #0
 800e520:	dcde      	bgt.n	800e4e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800e522:	9b03      	ldr	r3, [sp, #12]
 800e524:	9a04      	ldr	r2, [sp, #16]
 800e526:	f895 9009 	ldrb.w	r9, [r5, #9]
 800e52a:	fb13 f707 	smulbb	r7, r3, r7
 800e52e:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800e530:	1aff      	subs	r7, r7, r3
 800e532:	b2bf      	uxth	r7, r7
 800e534:	b23b      	sxth	r3, r7
 800e536:	429a      	cmp	r2, r3
 800e538:	bfa8      	it	ge
 800e53a:	4657      	movge	r7, sl
 800e53c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e540:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e544:	6823      	ldr	r3, [r4, #0]
 800e546:	bf08      	it	eq
 800e548:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800e54c:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e54e:	bf18      	it	ne
 800e550:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800e554:	4620      	mov	r0, r4
 800e556:	4798      	blx	r3
 800e558:	444f      	add	r7, r9
 800e55a:	fa1f f987 	uxth.w	r9, r7
 800e55e:	2801      	cmp	r0, #1
 800e560:	fa0f f789 	sxth.w	r7, r9
 800e564:	b2b3      	uxth	r3, r6
 800e566:	f000 80e1 	beq.w	800e72c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800e56a:	2802      	cmp	r0, #2
 800e56c:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800e570:	f000 80e2 	beq.w	800e738 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800e574:	7aea      	ldrb	r2, [r5, #11]
 800e576:	7b2d      	ldrb	r5, [r5, #12]
 800e578:	b236      	sxth	r6, r6
 800e57a:	1ab6      	subs	r6, r6, r2
 800e57c:	442a      	add	r2, r5
 800e57e:	4413      	add	r3, r2
 800e580:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e584:	fa1f fa86 	uxth.w	sl, r6
 800e588:	b29b      	uxth	r3, r3
 800e58a:	2a02      	cmp	r2, #2
 800e58c:	fa0f fb8a 	sxth.w	fp, sl
 800e590:	b21e      	sxth	r6, r3
 800e592:	f000 80d5 	beq.w	800e740 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800e596:	2a03      	cmp	r2, #3
 800e598:	f000 80dd 	beq.w	800e756 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800e59c:	2a01      	cmp	r2, #1
 800e59e:	f040 80e5 	bne.w	800e76c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800e5a2:	8925      	ldrh	r5, [r4, #8]
 800e5a4:	4633      	mov	r3, r6
 800e5a6:	eba5 0909 	sub.w	r9, r5, r9
 800e5aa:	463e      	mov	r6, r7
 800e5ac:	465d      	mov	r5, fp
 800e5ae:	461f      	mov	r7, r3
 800e5b0:	fa0f fb89 	sxth.w	fp, r9
 800e5b4:	4b5c      	ldr	r3, [pc, #368]	; (800e728 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800e5b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e5b8:	6818      	ldr	r0, [r3, #0]
 800e5ba:	f7f6 ff77 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e5be:	f8a8 b000 	strh.w	fp, [r8]
 800e5c2:	f8a8 5002 	strh.w	r5, [r8, #2]
 800e5c6:	f8a8 6004 	strh.w	r6, [r8, #4]
 800e5ca:	f8a8 7006 	strh.w	r7, [r8, #6]
 800e5ce:	f8c8 0008 	str.w	r0, [r8, #8]
 800e5d2:	e737      	b.n	800e444 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800e5d4:	f004 ffb2 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 800e5d8:	682b      	ldr	r3, [r5, #0]
 800e5da:	4628      	mov	r0, r5
 800e5dc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800e5de:	4798      	blx	r3
 800e5e0:	682b      	ldr	r3, [r5, #0]
 800e5e2:	4607      	mov	r7, r0
 800e5e4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800e5e6:	4628      	mov	r0, r5
 800e5e8:	4798      	blx	r3
 800e5ea:	6823      	ldr	r3, [r4, #0]
 800e5ec:	4683      	mov	fp, r0
 800e5ee:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e5f0:	4620      	mov	r0, r4
 800e5f2:	4798      	blx	r3
 800e5f4:	6822      	ldr	r2, [r4, #0]
 800e5f6:	9005      	str	r0, [sp, #20]
 800e5f8:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800e5fc:	4620      	mov	r0, r4
 800e5fe:	4790      	blx	r2
 800e600:	9b05      	ldr	r3, [sp, #20]
 800e602:	9001      	str	r0, [sp, #4]
 800e604:	463a      	mov	r2, r7
 800e606:	4649      	mov	r1, r9
 800e608:	9300      	str	r3, [sp, #0]
 800e60a:	a80f      	add	r0, sp, #60	; 0x3c
 800e60c:	465b      	mov	r3, fp
 800e60e:	f005 f805 	bl	801361c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800e612:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e616:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800e61a:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e61c:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800e620:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e624:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e628:	bf0a      	itet	eq
 800e62a:	464a      	moveq	r2, r9
 800e62c:	461a      	movne	r2, r3
 800e62e:	4699      	moveq	r9, r3
 800e630:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800e634:	1ad2      	subs	r2, r2, r3
 800e636:	6833      	ldr	r3, [r6, #0]
 800e638:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800e63c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800e640:	af0f      	add	r7, sp, #60	; 0x3c
 800e642:	7859      	ldrb	r1, [r3, #1]
 800e644:	9707      	str	r7, [sp, #28]
 800e646:	2300      	movs	r3, #0
 800e648:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800e64c:	f8ad 3018 	strh.w	r3, [sp, #24]
 800e650:	f88d 1020 	strb.w	r1, [sp, #32]
 800e654:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800e658:	9509      	str	r5, [sp, #36]	; 0x24
 800e65a:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800e65e:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800e662:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800e666:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800e66a:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800e66e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800e672:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800e676:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800e67a:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e67e:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800e682:	b350      	cbz	r0, 800e6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e684:	682b      	ldr	r3, [r5, #0]
 800e686:	4628      	mov	r0, r5
 800e688:	695b      	ldr	r3, [r3, #20]
 800e68a:	4798      	blx	r3
 800e68c:	4607      	mov	r7, r0
 800e68e:	b320      	cbz	r0, 800e6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e690:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e692:	6803      	ldr	r3, [r0, #0]
 800e694:	4639      	mov	r1, r7
 800e696:	68db      	ldr	r3, [r3, #12]
 800e698:	4798      	blx	r3
 800e69a:	4606      	mov	r6, r0
 800e69c:	b1e8      	cbz	r0, 800e6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e69e:	7b43      	ldrb	r3, [r0, #13]
 800e6a0:	7a82      	ldrb	r2, [r0, #10]
 800e6a2:	005b      	lsls	r3, r3, #1
 800e6a4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800e6a8:	4313      	orrs	r3, r2
 800e6aa:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800e6ae:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800e6b2:	2b06      	cmp	r3, #6
 800e6b4:	d111      	bne.n	800e6da <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800e6b6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800e6b8:	6803      	ldr	r3, [r0, #0]
 800e6ba:	4632      	mov	r2, r6
 800e6bc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800e6be:	4639      	mov	r1, r7
 800e6c0:	4798      	blx	r3
 800e6c2:	7b73      	ldrb	r3, [r6, #13]
 800e6c4:	005b      	lsls	r3, r3, #1
 800e6c6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800e6ca:	7ab3      	ldrb	r3, [r6, #10]
 800e6cc:	4313      	orrs	r3, r2
 800e6ce:	4418      	add	r0, r3
 800e6d0:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800e6d4:	4418      	add	r0, r3
 800e6d6:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800e6da:	2600      	movs	r6, #0
 800e6dc:	4637      	mov	r7, r6
 800e6de:	a806      	add	r0, sp, #24
 800e6e0:	f002 fb80 	bl	8010de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800e6e4:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800e6e8:	9b03      	ldr	r3, [sp, #12]
 800e6ea:	4286      	cmp	r6, r0
 800e6ec:	eba9 0903 	sub.w	r9, r9, r3
 800e6f0:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800e6f4:	bfb8      	it	lt
 800e6f6:	4606      	movlt	r6, r0
 800e6f8:	3701      	adds	r7, #1
 800e6fa:	b236      	sxth	r6, r6
 800e6fc:	b2bf      	uxth	r7, r7
 800e6fe:	fa0f f989 	sxth.w	r9, r9
 800e702:	2b00      	cmp	r3, #0
 800e704:	f43f af0d 	beq.w	800e522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e708:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800e70c:	2b00      	cmp	r3, #0
 800e70e:	f47f af08 	bne.w	800e522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e712:	7a2b      	ldrb	r3, [r5, #8]
 800e714:	444b      	add	r3, r9
 800e716:	2b00      	cmp	r3, #0
 800e718:	dce1      	bgt.n	800e6de <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800e71a:	e702      	b.n	800e522 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800e71c:	200137b4 	.word	0x200137b4
 800e720:	200137b0 	.word	0x200137b0
 800e724:	200137b8 	.word	0x200137b8
 800e728:	200137bc 	.word	0x200137bc
 800e72c:	ebaa 0606 	sub.w	r6, sl, r6
 800e730:	2002      	movs	r0, #2
 800e732:	fb96 f6f0 	sdiv	r6, r6, r0
 800e736:	e71d      	b.n	800e574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e738:	441e      	add	r6, r3
 800e73a:	ebaa 0606 	sub.w	r6, sl, r6
 800e73e:	e719      	b.n	800e574 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800e740:	8925      	ldrh	r5, [r4, #8]
 800e742:	1aed      	subs	r5, r5, r3
 800e744:	eba5 050a 	sub.w	r5, r5, sl
 800e748:	fa0f fb85 	sxth.w	fp, r5
 800e74c:	8965      	ldrh	r5, [r4, #10]
 800e74e:	eba5 0509 	sub.w	r5, r5, r9
 800e752:	b22d      	sxth	r5, r5
 800e754:	e72e      	b.n	800e5b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e756:	8965      	ldrh	r5, [r4, #10]
 800e758:	1aed      	subs	r5, r5, r3
 800e75a:	eba5 050a 	sub.w	r5, r5, sl
 800e75e:	4633      	mov	r3, r6
 800e760:	b22d      	sxth	r5, r5
 800e762:	463e      	mov	r6, r7
 800e764:	f04f 0b00 	mov.w	fp, #0
 800e768:	461f      	mov	r7, r3
 800e76a:	e723      	b.n	800e5b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800e76c:	2500      	movs	r5, #0
 800e76e:	e721      	b.n	800e5b4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800e770 <_ZN8touchgfx8TextAreaD0Ev>:
 800e770:	b510      	push	{r4, lr}
 800e772:	2148      	movs	r1, #72	; 0x48
 800e774:	4604      	mov	r4, r0
 800e776:	f013 fc10 	bl	8021f9a <_ZdlPvj>
 800e77a:	4620      	mov	r0, r4
 800e77c:	bd10      	pop	{r4, pc}
	...

0800e780 <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800e780:	b513      	push	{r0, r1, r4, lr}
 800e782:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800e786:	4604      	mov	r4, r0
 800e788:	b1fb      	cbz	r3, 800e7ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e78a:	4b16      	ldr	r3, [pc, #88]	; (800e7e4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800e78c:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800e78e:	881b      	ldrh	r3, [r3, #0]
 800e790:	428b      	cmp	r3, r1
 800e792:	d91a      	bls.n	800e7ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e794:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e798:	2b00      	cmp	r3, #0
 800e79a:	dd16      	ble.n	800e7ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e79c:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e7a0:	2b00      	cmp	r3, #0
 800e7a2:	dd12      	ble.n	800e7ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7a4:	4b10      	ldr	r3, [pc, #64]	; (800e7e8 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800e7a6:	6818      	ldr	r0, [r3, #0]
 800e7a8:	f7f6 fe80 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e7ac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e7b0:	6822      	ldr	r2, [r4, #0]
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	db06      	blt.n	800e7c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e7b6:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e7ba:	2b00      	cmp	r3, #0
 800e7bc:	db02      	blt.n	800e7c4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800e7be:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e7c0:	4298      	cmp	r0, r3
 800e7c2:	d004      	beq.n	800e7ce <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800e7c4:	6953      	ldr	r3, [r2, #20]
 800e7c6:	4620      	mov	r0, r4
 800e7c8:	4798      	blx	r3
 800e7ca:	b002      	add	sp, #8
 800e7cc:	bd10      	pop	{r4, pc}
 800e7ce:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800e7d2:	c903      	ldmia	r1, {r0, r1}
 800e7d4:	466b      	mov	r3, sp
 800e7d6:	e883 0003 	stmia.w	r3, {r0, r1}
 800e7da:	6912      	ldr	r2, [r2, #16]
 800e7dc:	4619      	mov	r1, r3
 800e7de:	4620      	mov	r0, r4
 800e7e0:	4790      	blx	r2
 800e7e2:	e7f2      	b.n	800e7ca <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800e7e4:	200137b4 	.word	0x200137b4
 800e7e8:	200137bc 	.word	0x200137bc

0800e7ec <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800e7ec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800e7f0:	4b44      	ldr	r3, [pc, #272]	; (800e904 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800e7f2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e7f4:	881b      	ldrh	r3, [r3, #0]
 800e7f6:	4293      	cmp	r3, r2
 800e7f8:	b08e      	sub	sp, #56	; 0x38
 800e7fa:	4604      	mov	r4, r0
 800e7fc:	d97e      	bls.n	800e8fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e7fe:	6808      	ldr	r0, [r1, #0]
 800e800:	4d41      	ldr	r5, [pc, #260]	; (800e908 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800e802:	6849      	ldr	r1, [r1, #4]
 800e804:	ab05      	add	r3, sp, #20
 800e806:	c303      	stmia	r3!, {r0, r1}
 800e808:	4611      	mov	r1, r2
 800e80a:	6828      	ldr	r0, [r5, #0]
 800e80c:	f7f6 fe4e 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e810:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800e814:	2b00      	cmp	r3, #0
 800e816:	db11      	blt.n	800e83c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e818:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800e81c:	2b00      	cmp	r3, #0
 800e81e:	db0d      	blt.n	800e83c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e820:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800e822:	4298      	cmp	r0, r3
 800e824:	d10a      	bne.n	800e83c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800e826:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800e82a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800e82e:	ab09      	add	r3, sp, #36	; 0x24
 800e830:	e883 0003 	stmia.w	r3, {r0, r1}
 800e834:	4619      	mov	r1, r3
 800e836:	a805      	add	r0, sp, #20
 800e838:	f7fd fab4 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800e83c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800e840:	2b00      	cmp	r3, #0
 800e842:	dd5b      	ble.n	800e8fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e844:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800e848:	2b00      	cmp	r3, #0
 800e84a:	dd57      	ble.n	800e8fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e84c:	4f2f      	ldr	r7, [pc, #188]	; (800e90c <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800e84e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e850:	683b      	ldr	r3, [r7, #0]
 800e852:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800e856:	4b2e      	ldr	r3, [pc, #184]	; (800e910 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800e858:	681b      	ldr	r3, [r3, #0]
 800e85a:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800e85e:	2e00      	cmp	r6, #0
 800e860:	d04c      	beq.n	800e8fc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800e862:	6823      	ldr	r3, [r4, #0]
 800e864:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800e868:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800e86a:	4620      	mov	r0, r4
 800e86c:	4798      	blx	r3
 800e86e:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800e870:	683b      	ldr	r3, [r7, #0]
 800e872:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800e876:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800e87a:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800e87e:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800e880:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800e884:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800e888:	785b      	ldrb	r3, [r3, #1]
 800e88a:	9609      	str	r6, [sp, #36]	; 0x24
 800e88c:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800e890:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800e894:	4b1f      	ldr	r3, [pc, #124]	; (800e914 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800e896:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800e89a:	681b      	ldr	r3, [r3, #0]
 800e89c:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800e8a0:	910b      	str	r1, [sp, #44]	; 0x2c
 800e8a2:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800e8a6:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800e8aa:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800e8ae:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800e8b2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e8b6:	b10a      	cbz	r2, 800e8bc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800e8b8:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800e8ba:	b906      	cbnz	r6, 800e8be <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800e8bc:	689e      	ldr	r6, [r3, #8]
 800e8be:	af07      	add	r7, sp, #28
 800e8c0:	4621      	mov	r1, r4
 800e8c2:	4638      	mov	r0, r7
 800e8c4:	f004 f972 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800e8c8:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800e8ca:	6828      	ldr	r0, [r5, #0]
 800e8cc:	f7f6 fdee 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800e8d0:	6823      	ldr	r3, [r4, #0]
 800e8d2:	4605      	mov	r5, r0
 800e8d4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800e8d6:	4620      	mov	r0, r4
 800e8d8:	4798      	blx	r3
 800e8da:	6823      	ldr	r3, [r4, #0]
 800e8dc:	4680      	mov	r8, r0
 800e8de:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e8e2:	4620      	mov	r0, r4
 800e8e4:	4798      	blx	r3
 800e8e6:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800e8ea:	ab09      	add	r3, sp, #36	; 0x24
 800e8ec:	9300      	str	r3, [sp, #0]
 800e8ee:	9501      	str	r5, [sp, #4]
 800e8f0:	ab05      	add	r3, sp, #20
 800e8f2:	e897 0006 	ldmia.w	r7, {r1, r2}
 800e8f6:	4630      	mov	r0, r6
 800e8f8:	f7f6 fd8a 	bl	8005410 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800e8fc:	b00e      	add	sp, #56	; 0x38
 800e8fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800e902:	bf00      	nop
 800e904:	200137b4 	.word	0x200137b4
 800e908:	200137bc 	.word	0x200137bc
 800e90c:	200137b0 	.word	0x200137b0
 800e910:	200137b8 	.word	0x200137b8
 800e914:	20013758 	.word	0x20013758

0800e918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800e918:	b538      	push	{r3, r4, r5, lr}
 800e91a:	4b0e      	ldr	r3, [pc, #56]	; (800e954 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800e91c:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800e91e:	881b      	ldrh	r3, [r3, #0]
 800e920:	429a      	cmp	r2, r3
 800e922:	4604      	mov	r4, r0
 800e924:	d214      	bcs.n	800e950 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800e926:	6803      	ldr	r3, [r0, #0]
 800e928:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800e92a:	4798      	blx	r3
 800e92c:	6823      	ldr	r3, [r4, #0]
 800e92e:	4605      	mov	r5, r0
 800e930:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800e932:	4620      	mov	r0, r4
 800e934:	4798      	blx	r3
 800e936:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e93a:	b22d      	sxth	r5, r5
 800e93c:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e940:	4601      	mov	r1, r0
 800e942:	bf06      	itte	eq
 800e944:	4602      	moveq	r2, r0
 800e946:	4629      	moveq	r1, r5
 800e948:	462a      	movne	r2, r5
 800e94a:	4620      	mov	r0, r4
 800e94c:	f7fd f80a 	bl	800b964 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800e950:	bd38      	pop	{r3, r4, r5, pc}
 800e952:	bf00      	nop
 800e954:	200137b4 	.word	0x200137b4

0800e958 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800e958:	b530      	push	{r4, r5, lr}
 800e95a:	888b      	ldrh	r3, [r1, #4]
 800e95c:	8583      	strh	r3, [r0, #44]	; 0x2c
 800e95e:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800e962:	b085      	sub	sp, #20
 800e964:	4604      	mov	r4, r0
 800e966:	b923      	cbnz	r3, 800e972 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e968:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800e96c:	b90b      	cbnz	r3, 800e972 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800e96e:	f7ff ffd3 	bl	800e918 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800e972:	6823      	ldr	r3, [r4, #0]
 800e974:	466d      	mov	r5, sp
 800e976:	4621      	mov	r1, r4
 800e978:	4628      	mov	r0, r5
 800e97a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e97e:	4798      	blx	r3
 800e980:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800e984:	343c      	adds	r4, #60	; 0x3c
 800e986:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800e98a:	b005      	add	sp, #20
 800e98c:	bd30      	pop	{r4, r5, pc}

0800e98e <_ZNK8touchgfx3Box12getSolidRectEv>:
 800e98e:	2300      	movs	r3, #0
 800e990:	8083      	strh	r3, [r0, #4]
 800e992:	80c3      	strh	r3, [r0, #6]
 800e994:	8003      	strh	r3, [r0, #0]
 800e996:	8043      	strh	r3, [r0, #2]
 800e998:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800e99c:	2bff      	cmp	r3, #255	; 0xff
 800e99e:	bf01      	itttt	eq
 800e9a0:	890b      	ldrheq	r3, [r1, #8]
 800e9a2:	8083      	strheq	r3, [r0, #4]
 800e9a4:	894b      	ldrheq	r3, [r1, #10]
 800e9a6:	80c3      	strheq	r3, [r0, #6]
 800e9a8:	4770      	bx	lr
	...

0800e9ac <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800e9ac:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800e9ae:	4604      	mov	r4, r0
 800e9b0:	6808      	ldr	r0, [r1, #0]
 800e9b2:	6849      	ldr	r1, [r1, #4]
 800e9b4:	466b      	mov	r3, sp
 800e9b6:	c303      	stmia	r3!, {r0, r1}
 800e9b8:	6823      	ldr	r3, [r4, #0]
 800e9ba:	4669      	mov	r1, sp
 800e9bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e9be:	4620      	mov	r0, r4
 800e9c0:	4798      	blx	r3
 800e9c2:	4b08      	ldr	r3, [pc, #32]	; (800e9e4 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800e9c4:	681b      	ldr	r3, [r3, #0]
 800e9c6:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800e9ca:	b10a      	cbz	r2, 800e9d0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800e9cc:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800e9ce:	b900      	cbnz	r0, 800e9d2 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800e9d0:	6898      	ldr	r0, [r3, #8]
 800e9d2:	6803      	ldr	r3, [r0, #0]
 800e9d4:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800e9d6:	6a1d      	ldr	r5, [r3, #32]
 800e9d8:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800e9dc:	4669      	mov	r1, sp
 800e9de:	47a8      	blx	r5
 800e9e0:	b003      	add	sp, #12
 800e9e2:	bd30      	pop	{r4, r5, pc}
 800e9e4:	20013758 	.word	0x20013758

0800e9e8 <_ZN8touchgfx3BoxD1Ev>:
 800e9e8:	4770      	bx	lr

0800e9ea <_ZN8touchgfx3BoxD0Ev>:
 800e9ea:	b510      	push	{r4, lr}
 800e9ec:	212c      	movs	r1, #44	; 0x2c
 800e9ee:	4604      	mov	r4, r0
 800e9f0:	f013 fad3 	bl	8021f9a <_ZdlPvj>
 800e9f4:	4620      	mov	r0, r4
 800e9f6:	bd10      	pop	{r4, pc}

0800e9f8 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800e9f8:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800e9fc:	b12a      	cbz	r2, 800ea0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800e9fe:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800ea02:	b112      	cbz	r2, 800ea0a <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800ea04:	6803      	ldr	r3, [r0, #0]
 800ea06:	695b      	ldr	r3, [r3, #20]
 800ea08:	4718      	bx	r3
 800ea0a:	4770      	bx	lr

0800ea0c <_ZNK8touchgfx5Gauge9getCenterERiS1_>:
 800ea0c:	f9b0 3150 	ldrsh.w	r3, [r0, #336]	; 0x150
 800ea10:	600b      	str	r3, [r1, #0]
 800ea12:	f9b0 3152 	ldrsh.w	r3, [r0, #338]	; 0x152
 800ea16:	6013      	str	r3, [r2, #0]
 800ea18:	4770      	bx	lr

0800ea1a <_ZN8touchgfx5Gauge8setWidthEs>:
 800ea1a:	8101      	strh	r1, [r0, #8]
 800ea1c:	f8a0 10bc 	strh.w	r1, [r0, #188]	; 0xbc
 800ea20:	f8a0 1160 	strh.w	r1, [r0, #352]	; 0x160
 800ea24:	4770      	bx	lr

0800ea26 <_ZN8touchgfx5Gauge9setHeightEs>:
 800ea26:	8141      	strh	r1, [r0, #10]
 800ea28:	f8a0 10be 	strh.w	r1, [r0, #190]	; 0xbe
 800ea2c:	f8a0 1162 	strh.w	r1, [r0, #354]	; 0x162
 800ea30:	4770      	bx	lr

0800ea32 <_ZNK8touchgfx5Gauge13getStartAngleEv>:
 800ea32:	f8d0 0148 	ldr.w	r0, [r0, #328]	; 0x148
 800ea36:	4770      	bx	lr

0800ea38 <_ZNK8touchgfx5Gauge11getEndAngleEv>:
 800ea38:	f8d0 014c 	ldr.w	r0, [r0, #332]	; 0x14c
 800ea3c:	4770      	bx	lr

0800ea3e <_ZN8touchgfx5Gauge28setProgressIndicatorPositionEssss>:
 800ea3e:	4770      	bx	lr

0800ea40 <_ZN8touchgfx5GaugeD1Ev>:
 800ea40:	4770      	bx	lr

0800ea42 <_ZN8touchgfx5Gauge8setAlphaEh>:
 800ea42:	b538      	push	{r3, r4, r5, lr}
 800ea44:	4604      	mov	r4, r0
 800ea46:	460d      	mov	r5, r1
 800ea48:	f7fc fea5 	bl	800b796 <_ZN8touchgfx25AbstractProgressIndicator8setAlphaEh>
 800ea4c:	f884 50dc 	strb.w	r5, [r4, #220]	; 0xdc
 800ea50:	f884 517e 	strb.w	r5, [r4, #382]	; 0x17e
 800ea54:	bd38      	pop	{r3, r4, r5, pc}

0800ea56 <_ZN8touchgfx5GaugeD0Ev>:
 800ea56:	b510      	push	{r4, lr}
 800ea58:	f44f 71d0 	mov.w	r1, #416	; 0x1a0
 800ea5c:	4604      	mov	r4, r0
 800ea5e:	f013 fa9c 	bl	8021f9a <_ZdlPvj>
 800ea62:	4620      	mov	r0, r4
 800ea64:	bd10      	pop	{r4, pc}

0800ea66 <_ZNK8touchgfx5Gauge17invalidateContentEv>:
 800ea66:	b510      	push	{r4, lr}
 800ea68:	6803      	ldr	r3, [r0, #0]
 800ea6a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ea6e:	4604      	mov	r4, r0
 800ea70:	4798      	blx	r3
 800ea72:	b170      	cbz	r0, 800ea92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800ea74:	6823      	ldr	r3, [r4, #0]
 800ea76:	4620      	mov	r0, r4
 800ea78:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800ea7c:	4798      	blx	r3
 800ea7e:	b140      	cbz	r0, 800ea92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800ea80:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800ea84:	b12b      	cbz	r3, 800ea92 <_ZNK8touchgfx5Gauge17invalidateContentEv+0x2c>
 800ea86:	6823      	ldr	r3, [r4, #0]
 800ea88:	4620      	mov	r0, r4
 800ea8a:	695b      	ldr	r3, [r3, #20]
 800ea8c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ea90:	4718      	bx	r3
 800ea92:	bd10      	pop	{r4, pc}

0800ea94 <_ZN8touchgfx5GaugeC1Ev>:
 800ea94:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800ea96:	4604      	mov	r4, r0
 800ea98:	4626      	mov	r6, r4
 800ea9a:	f7fc ff9d 	bl	800b9d8 <_ZN8touchgfx25AbstractProgressIndicatorC1Ev>
 800ea9e:	4b18      	ldr	r3, [pc, #96]	; (800eb00 <_ZN8touchgfx5GaugeC1Ev+0x6c>)
 800eaa0:	f846 3bb4 	str.w	r3, [r6], #180
 800eaa4:	a902      	add	r1, sp, #8
 800eaa6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800eaaa:	f821 3d04 	strh.w	r3, [r1, #-4]!
 800eaae:	4630      	mov	r0, r6
 800eab0:	f012 fc5a 	bl	8021368 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>
 800eab4:	2500      	movs	r5, #0
 800eab6:	2301      	movs	r3, #1
 800eab8:	f504 77ac 	add.w	r7, r4, #344	; 0x158
 800eabc:	f884 3144 	strb.w	r3, [r4, #324]	; 0x144
 800eac0:	f884 3145 	strb.w	r3, [r4, #325]	; 0x145
 800eac4:	f8c4 5148 	str.w	r5, [r4, #328]	; 0x148
 800eac8:	f8c4 514c 	str.w	r5, [r4, #332]	; 0x14c
 800eacc:	f8c4 5150 	str.w	r5, [r4, #336]	; 0x150
 800ead0:	f8c4 5154 	str.w	r5, [r4, #340]	; 0x154
 800ead4:	4638      	mov	r0, r7
 800ead6:	f7fe fb19 	bl	800d10c <_ZN8touchgfx6CircleC1Ev>
 800eada:	f104 0158 	add.w	r1, r4, #88	; 0x58
 800eade:	4620      	mov	r0, r4
 800eae0:	f7fd f81b 	bl	800bb1a <_ZN8touchgfx9Container6removeERNS_8DrawableE>
 800eae4:	4639      	mov	r1, r7
 800eae6:	4620      	mov	r0, r4
 800eae8:	f7fc ffd6 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800eaec:	4620      	mov	r0, r4
 800eaee:	4631      	mov	r1, r6
 800eaf0:	f7fc ffd2 	bl	800ba98 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800eaf4:	4620      	mov	r0, r4
 800eaf6:	f884 517d 	strb.w	r5, [r4, #381]	; 0x17d
 800eafa:	b003      	add	sp, #12
 800eafc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800eafe:	bf00      	nop
 800eb00:	0802a2f0 	.word	0x0802a2f0

0800eb04 <_ZN8touchgfx5Gauge14setArcPositionEssss>:
 800eb04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800eb08:	4604      	mov	r4, r0
 800eb0a:	f500 75ac 	add.w	r5, r0, #344	; 0x158
 800eb0e:	4628      	mov	r0, r5
 800eb10:	460e      	mov	r6, r1
 800eb12:	4617      	mov	r7, r2
 800eb14:	4698      	mov	r8, r3
 800eb16:	f7f5 fd11 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 800eb1a:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800eb1e:	4641      	mov	r1, r8
 800eb20:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800eb22:	4628      	mov	r0, r5
 800eb24:	4790      	blx	r2
 800eb26:	f8d4 3158 	ldr.w	r3, [r4, #344]	; 0x158
 800eb2a:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 800eb2e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800eb30:	4628      	mov	r0, r5
 800eb32:	4798      	blx	r3
 800eb34:	f9b4 2152 	ldrsh.w	r2, [r4, #338]	; 0x152
 800eb38:	f9b4 1150 	ldrsh.w	r1, [r4, #336]	; 0x150
 800eb3c:	1bd2      	subs	r2, r2, r7
 800eb3e:	1b89      	subs	r1, r1, r6
 800eb40:	0152      	lsls	r2, r2, #5
 800eb42:	0149      	lsls	r1, r1, #5
 800eb44:	3210      	adds	r2, #16
 800eb46:	3110      	adds	r1, #16
 800eb48:	f8c4 1184 	str.w	r1, [r4, #388]	; 0x184
 800eb4c:	f8c4 2188 	str.w	r2, [r4, #392]	; 0x188
 800eb50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800eb54 <_ZN8touchgfx5Gauge33setMovingNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800eb54:	f880 1144 	strb.w	r1, [r0, #324]	; 0x144
 800eb58:	4770      	bx	lr

0800eb5a <_ZN8touchgfx5Gauge33setSteadyNeedleRenderingAlgorithmENS_13TextureMapper18RenderingAlgorithmE>:
 800eb5a:	f880 1145 	strb.w	r1, [r0, #325]	; 0x145
 800eb5e:	4770      	bx	lr

0800eb60 <_ZN8touchgfx5Gauge13setArcVisibleEb>:
 800eb60:	f880 117d 	strb.w	r1, [r0, #381]	; 0x17d
 800eb64:	4770      	bx	lr

0800eb66 <_ZN8touchgfx5Gauge6getArcEv>:
 800eb66:	f500 70ac 	add.w	r0, r0, #344	; 0x158
 800eb6a:	4770      	bx	lr

0800eb6c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>:
 800eb6c:	b538      	push	{r3, r4, r5, lr}
 800eb6e:	8902      	ldrh	r2, [r0, #8]
 800eb70:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800eb74:	f8a0 20bc 	strh.w	r2, [r0, #188]	; 0xbc
 800eb78:	4604      	mov	r4, r0
 800eb7a:	f100 05b4 	add.w	r5, r0, #180	; 0xb4
 800eb7e:	2200      	movs	r2, #0
 800eb80:	4611      	mov	r1, r2
 800eb82:	f8a0 30be 	strh.w	r3, [r0, #190]	; 0xbe
 800eb86:	4628      	mov	r0, r5
 800eb88:	f7f5 fcd8 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 800eb8c:	f9b4 2156 	ldrsh.w	r2, [r4, #342]	; 0x156
 800eb90:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800eb94:	1a9b      	subs	r3, r3, r2
 800eb96:	ee07 3a90 	vmov	s15, r3
 800eb9a:	f9b4 2154 	ldrsh.w	r2, [r4, #340]	; 0x154
 800eb9e:	f9b4 3150 	ldrsh.w	r3, [r4, #336]	; 0x150
 800eba2:	1a9b      	subs	r3, r3, r2
 800eba4:	ee07 3a10 	vmov	s14, r3
 800eba8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ebac:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ebb0:	edc4 7a39 	vstr	s15, [r4, #228]	; 0xe4
 800ebb4:	ed84 7a38 	vstr	s14, [r4, #224]	; 0xe0
 800ebb8:	4628      	mov	r0, r5
 800ebba:	f012 fc21 	bl	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ebbe:	4b16      	ldr	r3, [pc, #88]	; (800ec18 <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv+0xac>)
 800ebc0:	f8c4 310c 	str.w	r3, [r4, #268]	; 0x10c
 800ebc4:	4628      	mov	r0, r5
 800ebc6:	f012 fc1b 	bl	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ebca:	f9b4 3152 	ldrsh.w	r3, [r4, #338]	; 0x152
 800ebce:	f9b4 2150 	ldrsh.w	r2, [r4, #336]	; 0x150
 800ebd2:	ee07 3a90 	vmov	s15, r3
 800ebd6:	ee07 2a10 	vmov	s14, r2
 800ebda:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ebde:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800ebe2:	f8d4 310c 	ldr.w	r3, [r4, #268]	; 0x10c
 800ebe6:	ed84 7a3e 	vstr	s14, [r4, #248]	; 0xf8
 800ebea:	edc4 7a3f 	vstr	s15, [r4, #252]	; 0xfc
 800ebee:	f8c4 3100 	str.w	r3, [r4, #256]	; 0x100
 800ebf2:	4628      	mov	r0, r5
 800ebf4:	f012 fc04 	bl	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ebf8:	f8d4 30fc 	ldr.w	r3, [r4, #252]	; 0xfc
 800ebfc:	f8d4 20f8 	ldr.w	r2, [r4, #248]	; 0xf8
 800ec00:	f8c4 3108 	str.w	r3, [r4, #264]	; 0x108
 800ec04:	f8c4 2104 	str.w	r2, [r4, #260]	; 0x104
 800ec08:	4628      	mov	r0, r5
 800ec0a:	f012 fbf9 	bl	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>
 800ec0e:	2301      	movs	r3, #1
 800ec10:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800ec14:	bd38      	pop	{r3, r4, r5, pc}
 800ec16:	bf00      	nop
 800ec18:	43960000 	.word	0x43960000

0800ec1c <_ZN8touchgfx5Gauge9setNeedleEtss>:
 800ec1c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800ec1e:	4604      	mov	r4, r0
 800ec20:	a802      	add	r0, sp, #8
 800ec22:	4616      	mov	r6, r2
 800ec24:	f820 1d04 	strh.w	r1, [r0, #-4]!
 800ec28:	461d      	mov	r5, r3
 800ec2a:	4601      	mov	r1, r0
 800ec2c:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800ec30:	f012 fd3c 	bl	80216ac <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>
 800ec34:	f8a4 6154 	strh.w	r6, [r4, #340]	; 0x154
 800ec38:	f8a4 5156 	strh.w	r5, [r4, #342]	; 0x156
 800ec3c:	4620      	mov	r0, r4
 800ec3e:	f7ff ff95 	bl	800eb6c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800ec42:	b002      	add	sp, #8
 800ec44:	bd70      	pop	{r4, r5, r6, pc}

0800ec46 <_ZN8touchgfx5Gauge9setCenterEii>:
 800ec46:	b570      	push	{r4, r5, r6, lr}
 800ec48:	4606      	mov	r6, r0
 800ec4a:	460d      	mov	r5, r1
 800ec4c:	f8a6 1150 	strh.w	r1, [r6, #336]	; 0x150
 800ec50:	f8a6 2152 	strh.w	r2, [r6, #338]	; 0x152
 800ec54:	4614      	mov	r4, r2
 800ec56:	f7ff ff89 	bl	800eb6c <_ZN8touchgfx5Gauge24setupNeedleTextureMapperEv>
 800ec5a:	f9b6 215e 	ldrsh.w	r2, [r6, #350]	; 0x15e
 800ec5e:	f9b6 115c 	ldrsh.w	r1, [r6, #348]	; 0x15c
 800ec62:	1aa4      	subs	r4, r4, r2
 800ec64:	1a6d      	subs	r5, r5, r1
 800ec66:	0164      	lsls	r4, r4, #5
 800ec68:	016d      	lsls	r5, r5, #5
 800ec6a:	3410      	adds	r4, #16
 800ec6c:	3510      	adds	r5, #16
 800ec6e:	f8c6 5184 	str.w	r5, [r6, #388]	; 0x184
 800ec72:	f8c6 4188 	str.w	r4, [r6, #392]	; 0x188
 800ec76:	bd70      	pop	{r4, r5, r6, pc}

0800ec78 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>:
 800ec78:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800ec7a:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 800ec7c:	0149      	lsls	r1, r1, #5
 800ec7e:	4299      	cmp	r1, r3
 800ec80:	4604      	mov	r4, r0
 800ec82:	9101      	str	r1, [sp, #4]
 800ec84:	d00b      	beq.n	800ec9e <_ZN8touchgfx6Circle12updateArcEndIiEEvT_+0x26>
 800ec86:	4601      	mov	r1, r0
 800ec88:	aa01      	add	r2, sp, #4
 800ec8a:	a802      	add	r0, sp, #8
 800ec8c:	f7fe fc45 	bl	800d51a <_ZNK8touchgfx6Circle32getMinimalRectForUpdatedEndAngleERKNS_7CWRUtil2Q5E>
 800ec90:	9b01      	ldr	r3, [sp, #4]
 800ec92:	63e3      	str	r3, [r4, #60]	; 0x3c
 800ec94:	6823      	ldr	r3, [r4, #0]
 800ec96:	a902      	add	r1, sp, #8
 800ec98:	691b      	ldr	r3, [r3, #16]
 800ec9a:	4620      	mov	r0, r4
 800ec9c:	4798      	blx	r3
 800ec9e:	b004      	add	sp, #16
 800eca0:	bd10      	pop	{r4, pc}
	...

0800eca4 <_ZN8touchgfx5Gauge8setValueEi>:
 800eca4:	b570      	push	{r4, r5, r6, lr}
 800eca6:	4604      	mov	r4, r0
 800eca8:	f7fc fdc8 	bl	800b83c <_ZN8touchgfx25AbstractProgressIndicator8setValueEi>
 800ecac:	e9d4 3229 	ldrd	r3, r2, [r4, #164]	; 0xa4
 800ecb0:	429a      	cmp	r2, r3
 800ecb2:	bfac      	ite	ge
 800ecb4:	f894 3145 	ldrbge.w	r3, [r4, #325]	; 0x145
 800ecb8:	f894 3144 	ldrblt.w	r3, [r4, #324]	; 0x144
 800ecbc:	f884 30dd 	strb.w	r3, [r4, #221]	; 0xdd
 800ecc0:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
 800ecc4:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ecc8:	1ac9      	subs	r1, r1, r3
 800ecca:	2900      	cmp	r1, #0
 800eccc:	bfb8      	it	lt
 800ecce:	4249      	neglt	r1, r1
 800ecd0:	b289      	uxth	r1, r1
 800ecd2:	4620      	mov	r0, r4
 800ecd4:	f7fc fdd4 	bl	800b880 <_ZNK8touchgfx25AbstractProgressIndicator11getProgressEt>
 800ecd8:	f8d4 3148 	ldr.w	r3, [r4, #328]	; 0x148
 800ecdc:	f8d4 214c 	ldr.w	r2, [r4, #332]	; 0x14c
 800ece0:	eddf 6a19 	vldr	s13, [pc, #100]	; 800ed48 <_ZN8touchgfx5Gauge8setValueEi+0xa4>
 800ece4:	ed9f 7a19 	vldr	s14, [pc, #100]	; 800ed4c <_ZN8touchgfx5Gauge8setValueEi+0xa8>
 800ece8:	429a      	cmp	r2, r3
 800ecea:	4605      	mov	r5, r0
 800ecec:	f504 76ac 	add.w	r6, r4, #344	; 0x158
 800ecf0:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 800ecf4:	da15      	bge.n	800ed22 <_ZN8touchgfx5Gauge8setValueEi+0x7e>
 800ecf6:	1b5b      	subs	r3, r3, r5
 800ecf8:	ee07 3a90 	vmov	s15, r3
 800ecfc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed00:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800ed04:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800ed08:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800ed0c:	ee21 1a07 	vmul.f32	s2, s2, s14
 800ed10:	f012 fae4 	bl	80212dc <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800ed14:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800ed18:	1b49      	subs	r1, r1, r5
 800ed1a:	4630      	mov	r0, r6
 800ed1c:	f7ff ffac 	bl	800ec78 <_ZN8touchgfx6Circle12updateArcEndIiEEvT_>
 800ed20:	bd70      	pop	{r4, r5, r6, pc}
 800ed22:	442b      	add	r3, r5
 800ed24:	ee07 3a90 	vmov	s15, r3
 800ed28:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800ed2c:	edd4 0a3b 	vldr	s1, [r4, #236]	; 0xec
 800ed30:	ed94 0a3a 	vldr	s0, [r4, #232]	; 0xe8
 800ed34:	ee87 1aa6 	vdiv.f32	s2, s15, s13
 800ed38:	ee21 1a07 	vmul.f32	s2, s2, s14
 800ed3c:	f012 face 	bl	80212dc <_ZN8touchgfx13TextureMapper12updateAnglesEfff>
 800ed40:	f8d4 1148 	ldr.w	r1, [r4, #328]	; 0x148
 800ed44:	4429      	add	r1, r5
 800ed46:	e7e8      	b.n	800ed1a <_ZN8touchgfx5Gauge8setValueEi+0x76>
 800ed48:	43340000 	.word	0x43340000
 800ed4c:	40490fdb 	.word	0x40490fdb

0800ed50 <_ZN8touchgfx5Gauge16setStartEndAngleEii>:
 800ed50:	b510      	push	{r4, lr}
 800ed52:	f8c0 1148 	str.w	r1, [r0, #328]	; 0x148
 800ed56:	f8c0 214c 	str.w	r2, [r0, #332]	; 0x14c
 800ed5a:	0149      	lsls	r1, r1, #5
 800ed5c:	0152      	lsls	r2, r2, #5
 800ed5e:	f8c0 1190 	str.w	r1, [r0, #400]	; 0x190
 800ed62:	f8c0 2194 	str.w	r2, [r0, #404]	; 0x194
 800ed66:	4604      	mov	r4, r0
 800ed68:	f7fc fd12 	bl	800b790 <_ZNK8touchgfx25AbstractProgressIndicator8getValueEv>
 800ed6c:	4601      	mov	r1, r0
 800ed6e:	4620      	mov	r0, r4
 800ed70:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800ed74:	f7ff bf96 	b.w	800eca4 <_ZN8touchgfx5Gauge8setValueEi>

0800ed78 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800ed78:	b570      	push	{r4, r5, r6, lr}
 800ed7a:	880b      	ldrh	r3, [r1, #0]
 800ed7c:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800ed7e:	4605      	mov	r5, r0
 800ed80:	8813      	ldrh	r3, [r2, #0]
 800ed82:	f825 3f30 	strh.w	r3, [r5, #48]!
 800ed86:	4604      	mov	r4, r0
 800ed88:	4628      	mov	r0, r5
 800ed8a:	f006 f921 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ed8e:	4606      	mov	r6, r0
 800ed90:	4628      	mov	r0, r5
 800ed92:	f006 f951 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ed96:	6823      	ldr	r3, [r4, #0]
 800ed98:	4605      	mov	r5, r0
 800ed9a:	4631      	mov	r1, r6
 800ed9c:	4620      	mov	r0, r4
 800ed9e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800eda0:	4798      	blx	r3
 800eda2:	6823      	ldr	r3, [r4, #0]
 800eda4:	4629      	mov	r1, r5
 800eda6:	4620      	mov	r0, r4
 800eda8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800edaa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800edae:	4718      	bx	r3

0800edb0 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800edb0:	b510      	push	{r4, lr}
 800edb2:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800edb6:	2bff      	cmp	r3, #255	; 0xff
 800edb8:	4604      	mov	r4, r0
 800edba:	d006      	beq.n	800edca <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800edbc:	2300      	movs	r3, #0
 800edbe:	8003      	strh	r3, [r0, #0]
 800edc0:	8043      	strh	r3, [r0, #2]
 800edc2:	8083      	strh	r3, [r0, #4]
 800edc4:	80c3      	strh	r3, [r0, #6]
 800edc6:	4620      	mov	r0, r4
 800edc8:	bd10      	pop	{r4, pc}
 800edca:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800edce:	b11b      	cbz	r3, 800edd8 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800edd0:	3130      	adds	r1, #48	; 0x30
 800edd2:	f006 f965 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800edd6:	e7f6      	b.n	800edc6 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800edd8:	312e      	adds	r1, #46	; 0x2e
 800edda:	e7fa      	b.n	800edd2 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0800eddc <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800eddc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800ede0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800ede4:	b08a      	sub	sp, #40	; 0x28
 800ede6:	4604      	mov	r4, r0
 800ede8:	4688      	mov	r8, r1
 800edea:	2b00      	cmp	r3, #0
 800edec:	d066      	beq.n	800eebc <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800edee:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800edf0:	f8ad 3014 	strh.w	r3, [sp, #20]
 800edf4:	a805      	add	r0, sp, #20
 800edf6:	f006 f8eb 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800edfa:	4607      	mov	r7, r0
 800edfc:	a805      	add	r0, sp, #20
 800edfe:	f006 f91b 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ee02:	f9b8 6000 	ldrsh.w	r6, [r8]
 800ee06:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800ee0a:	4432      	add	r2, r6
 800ee0c:	b292      	uxth	r2, r2
 800ee0e:	2300      	movs	r3, #0
 800ee10:	fa0f fc82 	sxth.w	ip, r2
 800ee14:	459c      	cmp	ip, r3
 800ee16:	9306      	str	r3, [sp, #24]
 800ee18:	dd52      	ble.n	800eec0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ee1a:	42b7      	cmp	r7, r6
 800ee1c:	dd50      	ble.n	800eec0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ee1e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800ee22:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800ee26:	442b      	add	r3, r5
 800ee28:	b29b      	uxth	r3, r3
 800ee2a:	b219      	sxth	r1, r3
 800ee2c:	2900      	cmp	r1, #0
 800ee2e:	dd47      	ble.n	800eec0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ee30:	42a8      	cmp	r0, r5
 800ee32:	dd45      	ble.n	800eec0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800ee34:	4567      	cmp	r7, ip
 800ee36:	bfb8      	it	lt
 800ee38:	b2ba      	uxthlt	r2, r7
 800ee3a:	4288      	cmp	r0, r1
 800ee3c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ee40:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ee44:	bfb8      	it	lt
 800ee46:	b283      	uxthlt	r3, r0
 800ee48:	1b92      	subs	r2, r2, r6
 800ee4a:	1b5b      	subs	r3, r3, r5
 800ee4c:	f8ad 201c 	strh.w	r2, [sp, #28]
 800ee50:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ee54:	f8ad 6018 	strh.w	r6, [sp, #24]
 800ee58:	f8ad 501a 	strh.w	r5, [sp, #26]
 800ee5c:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800ee60:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800ee64:	429a      	cmp	r2, r3
 800ee66:	d026      	beq.n	800eeb6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ee68:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800ee6c:	2b00      	cmp	r3, #0
 800ee6e:	dd22      	ble.n	800eeb6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ee70:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800ee74:	2b00      	cmp	r3, #0
 800ee76:	dd1e      	ble.n	800eeb6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800ee78:	2300      	movs	r3, #0
 800ee7a:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800ee7e:	6823      	ldr	r3, [r4, #0]
 800ee80:	a908      	add	r1, sp, #32
 800ee82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee84:	4620      	mov	r0, r4
 800ee86:	4798      	blx	r3
 800ee88:	4b0f      	ldr	r3, [pc, #60]	; (800eec8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800ee8a:	681b      	ldr	r3, [r3, #0]
 800ee8c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800ee90:	b10a      	cbz	r2, 800ee96 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800ee92:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800ee94:	b900      	cbnz	r0, 800ee98 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800ee96:	6898      	ldr	r0, [r3, #8]
 800ee98:	6801      	ldr	r1, [r0, #0]
 800ee9a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ee9e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800eea2:	2501      	movs	r5, #1
 800eea4:	9502      	str	r5, [sp, #8]
 800eea6:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800eeaa:	9401      	str	r4, [sp, #4]
 800eeac:	ac06      	add	r4, sp, #24
 800eeae:	9400      	str	r4, [sp, #0]
 800eeb0:	688c      	ldr	r4, [r1, #8]
 800eeb2:	a905      	add	r1, sp, #20
 800eeb4:	47a0      	blx	r4
 800eeb6:	b00a      	add	sp, #40	; 0x28
 800eeb8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800eebc:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800eebe:	e797      	b.n	800edf0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800eec0:	2300      	movs	r3, #0
 800eec2:	9307      	str	r3, [sp, #28]
 800eec4:	e7ca      	b.n	800ee5c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800eec6:	bf00      	nop
 800eec8:	20013758 	.word	0x20013758

0800eecc <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 800eecc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800eed0:	4b2f      	ldr	r3, [pc, #188]	; (800ef90 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 800eed2:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800eed4:	881b      	ldrh	r3, [r3, #0]
 800eed6:	4293      	cmp	r3, r2
 800eed8:	b08d      	sub	sp, #52	; 0x34
 800eeda:	4604      	mov	r4, r0
 800eedc:	460f      	mov	r7, r1
 800eede:	d954      	bls.n	800ef8a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800eee0:	4b2c      	ldr	r3, [pc, #176]	; (800ef94 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 800eee2:	6819      	ldr	r1, [r3, #0]
 800eee4:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 800eee8:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 800eeec:	4a2a      	ldr	r2, [pc, #168]	; (800ef98 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 800eeee:	6812      	ldr	r2, [r2, #0]
 800eef0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 800eef4:	2900      	cmp	r1, #0
 800eef6:	d048      	beq.n	800ef8a <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 800eef8:	785a      	ldrb	r2, [r3, #1]
 800eefa:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800eefe:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800ef02:	4b26      	ldr	r3, [pc, #152]	; (800ef9c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 800ef04:	f890 5036 	ldrb.w	r5, [r0, #54]	; 0x36
 800ef08:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	; 0x34
 800ef0c:	f890 e038 	ldrb.w	lr, [r0, #56]	; 0x38
 800ef10:	6b26      	ldr	r6, [r4, #48]	; 0x30
 800ef12:	f890 0037 	ldrb.w	r0, [r0, #55]	; 0x37
 800ef16:	9107      	str	r1, [sp, #28]
 800ef18:	f3c2 0801 	ubfx	r8, r2, #0, #2
 800ef1c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800ef20:	f88d 2021 	strb.w	r2, [sp, #33]	; 0x21
 800ef24:	681a      	ldr	r2, [r3, #0]
 800ef26:	f88d 8020 	strb.w	r8, [sp, #32]
 800ef2a:	f892 3076 	ldrb.w	r3, [r2, #118]	; 0x76
 800ef2e:	f88d e022 	strb.w	lr, [sp, #34]	; 0x22
 800ef32:	9609      	str	r6, [sp, #36]	; 0x24
 800ef34:	f8ad c028 	strh.w	ip, [sp, #40]	; 0x28
 800ef38:	f88d 502a 	strb.w	r5, [sp, #42]	; 0x2a
 800ef3c:	f88d 002b 	strb.w	r0, [sp, #43]	; 0x2b
 800ef40:	b10b      	cbz	r3, 800ef46 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 800ef42:	6cd5      	ldr	r5, [r2, #76]	; 0x4c
 800ef44:	b905      	cbnz	r5, 800ef48 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 800ef46:	6895      	ldr	r5, [r2, #8]
 800ef48:	ae05      	add	r6, sp, #20
 800ef4a:	4621      	mov	r1, r4
 800ef4c:	4630      	mov	r0, r6
 800ef4e:	f003 fe2d 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef52:	4b13      	ldr	r3, [pc, #76]	; (800efa0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 800ef54:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800ef56:	6818      	ldr	r0, [r3, #0]
 800ef58:	f7f6 faa8 	bl	80054ac <_ZNK8touchgfx5Texts7getTextEt>
 800ef5c:	6823      	ldr	r3, [r4, #0]
 800ef5e:	4680      	mov	r8, r0
 800ef60:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800ef62:	4620      	mov	r0, r4
 800ef64:	4798      	blx	r3
 800ef66:	6823      	ldr	r3, [r4, #0]
 800ef68:	4681      	mov	r9, r0
 800ef6a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800ef6e:	4620      	mov	r0, r4
 800ef70:	4798      	blx	r3
 800ef72:	e9cd 9002 	strd	r9, r0, [sp, #8]
 800ef76:	ab07      	add	r3, sp, #28
 800ef78:	9300      	str	r3, [sp, #0]
 800ef7a:	f8cd 8004 	str.w	r8, [sp, #4]
 800ef7e:	463b      	mov	r3, r7
 800ef80:	e896 0006 	ldmia.w	r6, {r1, r2}
 800ef84:	4628      	mov	r0, r5
 800ef86:	f7f6 fa43 	bl	8005410 <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ef8a:	b00d      	add	sp, #52	; 0x34
 800ef8c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ef90:	200137b4 	.word	0x200137b4
 800ef94:	200137b0 	.word	0x200137b0
 800ef98:	200137b8 	.word	0x200137b8
 800ef9c:	20013758 	.word	0x20013758
 800efa0:	200137bc 	.word	0x200137bc

0800efa4 <_ZN8touchgfx14ButtonWithIconD1Ev>:
 800efa4:	4770      	bx	lr

0800efa6 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800efa6:	b510      	push	{r4, lr}
 800efa8:	213c      	movs	r1, #60	; 0x3c
 800efaa:	4604      	mov	r4, r0
 800efac:	f012 fff5 	bl	8021f9a <_ZdlPvj>
 800efb0:	4620      	mov	r0, r4
 800efb2:	bd10      	pop	{r4, pc}

0800efb4 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 800efb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800efb8:	461c      	mov	r4, r3
 800efba:	4606      	mov	r6, r0
 800efbc:	9f06      	ldr	r7, [sp, #24]
 800efbe:	f7ff fedb 	bl	800ed78 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 800efc2:	8823      	ldrh	r3, [r4, #0]
 800efc4:	86b3      	strh	r3, [r6, #52]	; 0x34
 800efc6:	883b      	ldrh	r3, [r7, #0]
 800efc8:	86f3      	strh	r3, [r6, #54]	; 0x36
 800efca:	4638      	mov	r0, r7
 800efcc:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 800efd0:	f005 fffe 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800efd4:	f04f 0802 	mov.w	r8, #2
 800efd8:	fb95 f5f8 	sdiv	r5, r5, r8
 800efdc:	b2ad      	uxth	r5, r5
 800efde:	fb90 f0f8 	sdiv	r0, r0, r8
 800efe2:	1a2d      	subs	r5, r5, r0
 800efe4:	8735      	strh	r5, [r6, #56]	; 0x38
 800efe6:	4638      	mov	r0, r7
 800efe8:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 800efec:	fb94 f4f8 	sdiv	r4, r4, r8
 800eff0:	f006 f822 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800eff4:	b2a4      	uxth	r4, r4
 800eff6:	fb90 f0f8 	sdiv	r0, r0, r8
 800effa:	1a24      	subs	r4, r4, r0
 800effc:	8774      	strh	r4, [r6, #58]	; 0x3a
 800effe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0800f004 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 800f004:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f008:	4604      	mov	r4, r0
 800f00a:	b08c      	sub	sp, #48	; 0x30
 800f00c:	460d      	mov	r5, r1
 800f00e:	f7ff fee5 	bl	800eddc <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800f012:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800f016:	2b00      	cmp	r3, #0
 800f018:	d05d      	beq.n	800f0d6 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 800f01a:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 800f01c:	f8ad 3014 	strh.w	r3, [sp, #20]
 800f020:	a805      	add	r0, sp, #20
 800f022:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	; 0x38
 800f026:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	; 0x3a
 800f02a:	f005 ffd1 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f02e:	4606      	mov	r6, r0
 800f030:	a805      	add	r0, sp, #20
 800f032:	f006 f801 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f036:	6869      	ldr	r1, [r5, #4]
 800f038:	f8ad 001e 	strh.w	r0, [sp, #30]
 800f03c:	6828      	ldr	r0, [r5, #0]
 800f03e:	f8ad 8018 	strh.w	r8, [sp, #24]
 800f042:	ab08      	add	r3, sp, #32
 800f044:	ad08      	add	r5, sp, #32
 800f046:	c303      	stmia	r3!, {r0, r1}
 800f048:	a906      	add	r1, sp, #24
 800f04a:	4628      	mov	r0, r5
 800f04c:	f8ad 701a 	strh.w	r7, [sp, #26]
 800f050:	f8ad 601c 	strh.w	r6, [sp, #28]
 800f054:	f7fc fea6 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800f058:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800f05c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f060:	429a      	cmp	r2, r3
 800f062:	d035      	beq.n	800f0d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800f064:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	; 0x24
 800f068:	2b00      	cmp	r3, #0
 800f06a:	dd31      	ble.n	800f0d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800f06c:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	; 0x26
 800f070:	2b00      	cmp	r3, #0
 800f072:	dd2d      	ble.n	800f0d0 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 800f074:	2300      	movs	r3, #0
 800f076:	e9cd 330a 	strd	r3, r3, [sp, #40]	; 0x28
 800f07a:	6823      	ldr	r3, [r4, #0]
 800f07c:	a90a      	add	r1, sp, #40	; 0x28
 800f07e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f080:	4620      	mov	r0, r4
 800f082:	4798      	blx	r3
 800f084:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800f088:	8f22      	ldrh	r2, [r4, #56]	; 0x38
 800f08a:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800f08e:	1a9b      	subs	r3, r3, r2
 800f090:	f8ad 3020 	strh.w	r3, [sp, #32]
 800f094:	8f63      	ldrh	r3, [r4, #58]	; 0x3a
 800f096:	1ac9      	subs	r1, r1, r3
 800f098:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800f09c:	490f      	ldr	r1, [pc, #60]	; (800f0dc <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 800f09e:	6809      	ldr	r1, [r1, #0]
 800f0a0:	f891 0076 	ldrb.w	r0, [r1, #118]	; 0x76
 800f0a4:	b108      	cbz	r0, 800f0aa <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 800f0a6:	6cc8      	ldr	r0, [r1, #76]	; 0x4c
 800f0a8:	b900      	cbnz	r0, 800f0ac <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 800f0aa:	6888      	ldr	r0, [r1, #8]
 800f0ac:	f8bd 102a 	ldrh.w	r1, [sp, #42]	; 0x2a
 800f0b0:	440b      	add	r3, r1
 800f0b2:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 800f0b6:	2601      	movs	r6, #1
 800f0b8:	440a      	add	r2, r1
 800f0ba:	6801      	ldr	r1, [r0, #0]
 800f0bc:	9602      	str	r6, [sp, #8]
 800f0be:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800f0c2:	e9cd 5400 	strd	r5, r4, [sp]
 800f0c6:	b21b      	sxth	r3, r3
 800f0c8:	688c      	ldr	r4, [r1, #8]
 800f0ca:	b212      	sxth	r2, r2
 800f0cc:	a905      	add	r1, sp, #20
 800f0ce:	47a0      	blx	r4
 800f0d0:	b00c      	add	sp, #48	; 0x30
 800f0d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f0d6:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f0d8:	e7a0      	b.n	800f01c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 800f0da:	bf00      	nop
 800f0dc:	20013758 	.word	0x20013758

0800f0e0 <_ZN8touchgfx14ButtonWithIconC1Ev>:
 800f0e0:	b510      	push	{r4, lr}
 800f0e2:	2101      	movs	r1, #1
 800f0e4:	2200      	movs	r2, #0
 800f0e6:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800f0ea:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800f0ee:	4c0e      	ldr	r4, [pc, #56]	; (800f128 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 800f0f0:	8082      	strh	r2, [r0, #4]
 800f0f2:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800f0f6:	80c2      	strh	r2, [r0, #6]
 800f0f8:	8102      	strh	r2, [r0, #8]
 800f0fa:	8142      	strh	r2, [r0, #10]
 800f0fc:	8182      	strh	r2, [r0, #12]
 800f0fe:	81c2      	strh	r2, [r0, #14]
 800f100:	8202      	strh	r2, [r0, #16]
 800f102:	8242      	strh	r2, [r0, #18]
 800f104:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800f108:	61c2      	str	r2, [r0, #28]
 800f10a:	8402      	strh	r2, [r0, #32]
 800f10c:	8442      	strh	r2, [r0, #34]	; 0x22
 800f10e:	6282      	str	r2, [r0, #40]	; 0x28
 800f110:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800f114:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800f116:	8601      	strh	r1, [r0, #48]	; 0x30
 800f118:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800f11c:	6004      	str	r4, [r0, #0]
 800f11e:	8681      	strh	r1, [r0, #52]	; 0x34
 800f120:	86c1      	strh	r1, [r0, #54]	; 0x36
 800f122:	8702      	strh	r2, [r0, #56]	; 0x38
 800f124:	8742      	strh	r2, [r0, #58]	; 0x3a
 800f126:	bd10      	pop	{r4, pc}
 800f128:	0802a3d8 	.word	0x0802a3d8

0800f12c <_ZN8touchgfx5ImageD1Ev>:
 800f12c:	4770      	bx	lr

0800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800f12e:	b570      	push	{r4, r5, r6, lr}
 800f130:	880b      	ldrh	r3, [r1, #0]
 800f132:	84c3      	strh	r3, [r0, #38]	; 0x26
 800f134:	4604      	mov	r4, r0
 800f136:	4608      	mov	r0, r1
 800f138:	460d      	mov	r5, r1
 800f13a:	f005 ff49 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f13e:	4606      	mov	r6, r0
 800f140:	4628      	mov	r0, r5
 800f142:	f005 ff79 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f146:	6823      	ldr	r3, [r4, #0]
 800f148:	4605      	mov	r5, r0
 800f14a:	4631      	mov	r1, r6
 800f14c:	4620      	mov	r0, r4
 800f14e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f150:	4798      	blx	r3
 800f152:	6823      	ldr	r3, [r4, #0]
 800f154:	4629      	mov	r1, r5
 800f156:	4620      	mov	r0, r4
 800f158:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800f15a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f15e:	4718      	bx	r3

0800f160 <_ZN8touchgfx5ImageD0Ev>:
 800f160:	b510      	push	{r4, lr}
 800f162:	212c      	movs	r1, #44	; 0x2c
 800f164:	4604      	mov	r4, r0
 800f166:	f012 ff18 	bl	8021f9a <_ZdlPvj>
 800f16a:	4620      	mov	r0, r4
 800f16c:	bd10      	pop	{r4, pc}

0800f16e <_ZNK8touchgfx5Image12getSolidRectEv>:
 800f16e:	b510      	push	{r4, lr}
 800f170:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800f174:	2bff      	cmp	r3, #255	; 0xff
 800f176:	4604      	mov	r4, r0
 800f178:	d006      	beq.n	800f188 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800f17a:	2300      	movs	r3, #0
 800f17c:	8003      	strh	r3, [r0, #0]
 800f17e:	8043      	strh	r3, [r0, #2]
 800f180:	8083      	strh	r3, [r0, #4]
 800f182:	80c3      	strh	r3, [r0, #6]
 800f184:	4620      	mov	r0, r4
 800f186:	bd10      	pop	{r4, pc}
 800f188:	3126      	adds	r1, #38	; 0x26
 800f18a:	f005 ff89 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800f18e:	e7f9      	b.n	800f184 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800f190 <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800f190:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f194:	4604      	mov	r4, r0
 800f196:	b088      	sub	sp, #32
 800f198:	f854 3b26 	ldr.w	r3, [r4], #38
 800f19c:	2500      	movs	r5, #0
 800f19e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f1a0:	460f      	mov	r7, r1
 800f1a2:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800f1a6:	a904      	add	r1, sp, #16
 800f1a8:	4606      	mov	r6, r0
 800f1aa:	4798      	blx	r3
 800f1ac:	4620      	mov	r0, r4
 800f1ae:	f005 ff0f 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f1b2:	4680      	mov	r8, r0
 800f1b4:	4620      	mov	r0, r4
 800f1b6:	f005 ff3f 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f1ba:	9506      	str	r5, [sp, #24]
 800f1bc:	ad06      	add	r5, sp, #24
 800f1be:	f8ad 001e 	strh.w	r0, [sp, #30]
 800f1c2:	4639      	mov	r1, r7
 800f1c4:	4628      	mov	r0, r5
 800f1c6:	f8ad 801c 	strh.w	r8, [sp, #28]
 800f1ca:	f7fc fdeb 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 800f1ce:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800f1d2:	2b00      	cmp	r3, #0
 800f1d4:	dd19      	ble.n	800f20a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f1d6:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800f1da:	2b00      	cmp	r3, #0
 800f1dc:	dd15      	ble.n	800f20a <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800f1de:	4b0c      	ldr	r3, [pc, #48]	; (800f210 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800f1e0:	681b      	ldr	r3, [r3, #0]
 800f1e2:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f1e6:	b10a      	cbz	r2, 800f1ec <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800f1e8:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800f1ea:	b900      	cbnz	r0, 800f1ee <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800f1ec:	6898      	ldr	r0, [r3, #8]
 800f1ee:	6801      	ldr	r1, [r0, #0]
 800f1f0:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800f1f4:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800f1f8:	2701      	movs	r7, #1
 800f1fa:	9702      	str	r7, [sp, #8]
 800f1fc:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800f200:	e9cd 5600 	strd	r5, r6, [sp]
 800f204:	688d      	ldr	r5, [r1, #8]
 800f206:	4621      	mov	r1, r4
 800f208:	47a8      	blx	r5
 800f20a:	b008      	add	sp, #32
 800f20c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f210:	20013758 	.word	0x20013758

0800f214 <_ZN8touchgfx7OutlineD1Ev>:
 800f214:	4770      	bx	lr

0800f216 <_ZN8touchgfx7OutlineD0Ev>:
 800f216:	b510      	push	{r4, lr}
 800f218:	2130      	movs	r1, #48	; 0x30
 800f21a:	4604      	mov	r4, r0
 800f21c:	f012 febd 	bl	8021f9a <_ZdlPvj>
 800f220:	4620      	mov	r0, r4
 800f222:	bd10      	pop	{r4, pc}

0800f224 <_ZN8touchgfx7Outline5resetEv>:
 800f224:	b510      	push	{r4, lr}
 800f226:	4604      	mov	r4, r0
 800f228:	f000 fe96 	bl	800ff58 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>
 800f22c:	60e0      	str	r0, [r4, #12]
 800f22e:	f000 fe99 	bl	800ff64 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>
 800f232:	68e3      	ldr	r3, [r4, #12]
 800f234:	6123      	str	r3, [r4, #16]
 800f236:	08c0      	lsrs	r0, r0, #3
 800f238:	2200      	movs	r2, #0
 800f23a:	f647 71ff 	movw	r1, #32767	; 0x7fff
 800f23e:	3801      	subs	r0, #1
 800f240:	6060      	str	r0, [r4, #4]
 800f242:	60a2      	str	r2, [r4, #8]
 800f244:	8019      	strh	r1, [r3, #0]
 800f246:	8059      	strh	r1, [r3, #2]
 800f248:	809a      	strh	r2, [r3, #4]
 800f24a:	80da      	strh	r2, [r3, #6]
 800f24c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800f24e:	f023 0301 	bic.w	r3, r3, #1
 800f252:	f043 0302 	orr.w	r3, r3, #2
 800f256:	6263      	str	r3, [r4, #36]	; 0x24
 800f258:	bd10      	pop	{r4, pc}
	...

0800f25c <_ZN8touchgfx7OutlineC1Ev>:
 800f25c:	b510      	push	{r4, lr}
 800f25e:	4b0a      	ldr	r3, [pc, #40]	; (800f288 <_ZN8touchgfx7OutlineC1Ev+0x2c>)
 800f260:	6003      	str	r3, [r0, #0]
 800f262:	2300      	movs	r3, #0
 800f264:	e9c0 3301 	strd	r3, r3, [r0, #4]
 800f268:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800f26c:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800f270:	e9c0 3307 	strd	r3, r3, [r0, #28]
 800f274:	6243      	str	r3, [r0, #36]	; 0x24
 800f276:	f06f 4300 	mvn.w	r3, #2147483648	; 0x80000000
 800f27a:	4604      	mov	r4, r0
 800f27c:	e9c0 330a 	strd	r3, r3, [r0, #40]	; 0x28
 800f280:	f7ff ffd0 	bl	800f224 <_ZN8touchgfx7Outline5resetEv>
 800f284:	4620      	mov	r0, r4
 800f286:	bd10      	pop	{r4, pc}
 800f288:	0802a4bc 	.word	0x0802a4bc

0800f28c <_ZN8touchgfx7Outline10renderLineEiiii>:
 800f28c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f290:	b093      	sub	sp, #76	; 0x4c
 800f292:	1156      	asrs	r6, r2, #5
 800f294:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 800f296:	9305      	str	r3, [sp, #20]
 800f298:	f004 051f 	and.w	r5, r4, #31
 800f29c:	1153      	asrs	r3, r2, #5
 800f29e:	9504      	str	r5, [sp, #16]
 800f2a0:	1165      	asrs	r5, r4, #5
 800f2a2:	9303      	str	r3, [sp, #12]
 800f2a4:	42ae      	cmp	r6, r5
 800f2a6:	ea4f 1364 	mov.w	r3, r4, asr #5
 800f2aa:	9306      	str	r3, [sp, #24]
 800f2ac:	f002 031f 	and.w	r3, r2, #31
 800f2b0:	f040 80f8 	bne.w	800f4a4 <_ZN8touchgfx7Outline10renderLineEiiii+0x218>
 800f2b4:	9c04      	ldr	r4, [sp, #16]
 800f2b6:	9a05      	ldr	r2, [sp, #20]
 800f2b8:	42a3      	cmp	r3, r4
 800f2ba:	ea4f 1e62 	mov.w	lr, r2, asr #5
 800f2be:	6902      	ldr	r2, [r0, #16]
 800f2c0:	d125      	bne.n	800f30e <_ZN8touchgfx7Outline10renderLineEiiii+0x82>
 800f2c2:	f9b2 3000 	ldrsh.w	r3, [r2]
 800f2c6:	459e      	cmp	lr, r3
 800f2c8:	d103      	bne.n	800f2d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x46>
 800f2ca:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f2ce:	429e      	cmp	r6, r3
 800f2d0:	d035      	beq.n	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f2d2:	88d1      	ldrh	r1, [r2, #6]
 800f2d4:	8893      	ldrh	r3, [r2, #4]
 800f2d6:	430b      	orrs	r3, r1
 800f2d8:	d010      	beq.n	800f2fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f2da:	f9b2 3002 	ldrsh.w	r3, [r2, #2]
 800f2de:	2b00      	cmp	r3, #0
 800f2e0:	db0c      	blt.n	800f2fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f2e2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f2e4:	428b      	cmp	r3, r1
 800f2e6:	da09      	bge.n	800f2fc <_ZN8touchgfx7Outline10renderLineEiiii+0x70>
 800f2e8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f2ec:	428b      	cmp	r3, r1
 800f2ee:	bf38      	it	cc
 800f2f0:	3208      	addcc	r2, #8
 800f2f2:	f103 0301 	add.w	r3, r3, #1
 800f2f6:	bf38      	it	cc
 800f2f8:	6102      	strcc	r2, [r0, #16]
 800f2fa:	6083      	str	r3, [r0, #8]
 800f2fc:	6903      	ldr	r3, [r0, #16]
 800f2fe:	9a03      	ldr	r2, [sp, #12]
 800f300:	f8a3 e000 	strh.w	lr, [r3]
 800f304:	805a      	strh	r2, [r3, #2]
 800f306:	2200      	movs	r2, #0
 800f308:	809a      	strh	r2, [r3, #4]
 800f30a:	80da      	strh	r2, [r3, #6]
 800f30c:	e017      	b.n	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f30e:	9c05      	ldr	r4, [sp, #20]
 800f310:	f8b2 8004 	ldrh.w	r8, [r2, #4]
 800f314:	f8b2 a006 	ldrh.w	sl, [r2, #6]
 800f318:	f004 041f 	and.w	r4, r4, #31
 800f31c:	114e      	asrs	r6, r1, #5
 800f31e:	9402      	str	r4, [sp, #8]
 800f320:	9c04      	ldr	r4, [sp, #16]
 800f322:	4576      	cmp	r6, lr
 800f324:	f001 0c1f 	and.w	ip, r1, #31
 800f328:	eba4 0403 	sub.w	r4, r4, r3
 800f32c:	d10a      	bne.n	800f344 <_ZN8touchgfx7Outline10renderLineEiiii+0xb8>
 800f32e:	9b02      	ldr	r3, [sp, #8]
 800f330:	449c      	add	ip, r3
 800f332:	44a0      	add	r8, r4
 800f334:	fb04 a40c 	mla	r4, r4, ip, sl
 800f338:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f33c:	80d4      	strh	r4, [r2, #6]
 800f33e:	b013      	add	sp, #76	; 0x4c
 800f340:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f344:	9d05      	ldr	r5, [sp, #20]
 800f346:	1a69      	subs	r1, r5, r1
 800f348:	bf5b      	ittet	pl
 800f34a:	f1cc 0520 	rsbpl	r5, ip, #32
 800f34e:	436c      	mulpl	r4, r5
 800f350:	2500      	movmi	r5, #0
 800f352:	2520      	movpl	r5, #32
 800f354:	bf44      	itt	mi
 800f356:	fb04 f40c 	mulmi.w	r4, r4, ip
 800f35a:	4249      	negmi	r1, r1
 800f35c:	9501      	str	r5, [sp, #4]
 800f35e:	9f01      	ldr	r7, [sp, #4]
 800f360:	fb94 f5f1 	sdiv	r5, r4, r1
 800f364:	fb01 4415 	mls	r4, r1, r5, r4
 800f368:	bf54      	ite	pl
 800f36a:	f04f 0901 	movpl.w	r9, #1
 800f36e:	f04f 39ff 	movmi.w	r9, #4294967295
 800f372:	2c00      	cmp	r4, #0
 800f374:	bfb8      	it	lt
 800f376:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800f37a:	44bc      	add	ip, r7
 800f37c:	44a8      	add	r8, r5
 800f37e:	fb05 ac0c 	mla	ip, r5, ip, sl
 800f382:	f8a2 8004 	strh.w	r8, [r2, #4]
 800f386:	f8a2 c006 	strh.w	ip, [r2, #6]
 800f38a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f38e:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800f392:	f8bc 2004 	ldrh.w	r2, [ip, #4]
 800f396:	bfb8      	it	lt
 800f398:	1864      	addlt	r4, r4, r1
 800f39a:	ea58 0202 	orrs.w	r2, r8, r2
 800f39e:	444e      	add	r6, r9
 800f3a0:	d011      	beq.n	800f3c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f3a2:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800f3a6:	f1b8 0f00 	cmp.w	r8, #0
 800f3aa:	db0c      	blt.n	800f3c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f3ac:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f3ae:	4590      	cmp	r8, r2
 800f3b0:	da09      	bge.n	800f3c6 <_ZN8touchgfx7Outline10renderLineEiiii+0x13a>
 800f3b2:	e9d0 2801 	ldrd	r2, r8, [r0, #4]
 800f3b6:	4590      	cmp	r8, r2
 800f3b8:	bf3c      	itt	cc
 800f3ba:	f10c 0208 	addcc.w	r2, ip, #8
 800f3be:	6102      	strcc	r2, [r0, #16]
 800f3c0:	f108 0201 	add.w	r2, r8, #1
 800f3c4:	6082      	str	r2, [r0, #8]
 800f3c6:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f3ca:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800f3ce:	f8ac 6000 	strh.w	r6, [ip]
 800f3d2:	2700      	movs	r7, #0
 800f3d4:	45b6      	cmp	lr, r6
 800f3d6:	f8ac 2002 	strh.w	r2, [ip, #2]
 800f3da:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f3de:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f3e2:	442b      	add	r3, r5
 800f3e4:	d04d      	beq.n	800f482 <_ZN8touchgfx7Outline10renderLineEiiii+0x1f6>
 800f3e6:	9f04      	ldr	r7, [sp, #16]
 800f3e8:	1aff      	subs	r7, r7, r3
 800f3ea:	443d      	add	r5, r7
 800f3ec:	016d      	lsls	r5, r5, #5
 800f3ee:	fb95 f8f1 	sdiv	r8, r5, r1
 800f3f2:	fb01 5518 	mls	r5, r1, r8, r5
 800f3f6:	2d00      	cmp	r5, #0
 800f3f8:	bfb8      	it	lt
 800f3fa:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f3fe:	f108 0701 	add.w	r7, r8, #1
 800f402:	bfb8      	it	lt
 800f404:	186d      	addlt	r5, r5, r1
 800f406:	1a64      	subs	r4, r4, r1
 800f408:	9703      	str	r7, [sp, #12]
 800f40a:	f04f 0a00 	mov.w	sl, #0
 800f40e:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f412:	1964      	adds	r4, r4, r5
 800f414:	bf58      	it	pl
 800f416:	9f03      	ldrpl	r7, [sp, #12]
 800f418:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800f41c:	bf48      	it	mi
 800f41e:	4647      	movmi	r7, r8
 800f420:	44bb      	add	fp, r7
 800f422:	f8ac b004 	strh.w	fp, [ip, #4]
 800f426:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f42a:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f42e:	f8ac b006 	strh.w	fp, [ip, #6]
 800f432:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f436:	443b      	add	r3, r7
 800f438:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f43c:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f440:	bf58      	it	pl
 800f442:	1a64      	subpl	r4, r4, r1
 800f444:	ea5b 0707 	orrs.w	r7, fp, r7
 800f448:	444e      	add	r6, r9
 800f44a:	d011      	beq.n	800f470 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f44c:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800f450:	f1bb 0f00 	cmp.w	fp, #0
 800f454:	db0c      	blt.n	800f470 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f456:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f458:	45bb      	cmp	fp, r7
 800f45a:	da09      	bge.n	800f470 <_ZN8touchgfx7Outline10renderLineEiiii+0x1e4>
 800f45c:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800f460:	45bb      	cmp	fp, r7
 800f462:	bf3c      	itt	cc
 800f464:	f10c 0708 	addcc.w	r7, ip, #8
 800f468:	6107      	strcc	r7, [r0, #16]
 800f46a:	f10b 0701 	add.w	r7, fp, #1
 800f46e:	6087      	str	r7, [r0, #8]
 800f470:	6907      	ldr	r7, [r0, #16]
 800f472:	45b6      	cmp	lr, r6
 800f474:	803e      	strh	r6, [r7, #0]
 800f476:	807a      	strh	r2, [r7, #2]
 800f478:	f8a7 a004 	strh.w	sl, [r7, #4]
 800f47c:	f8a7 a006 	strh.w	sl, [r7, #6]
 800f480:	d1c5      	bne.n	800f40e <_ZN8touchgfx7Outline10renderLineEiiii+0x182>
 800f482:	9a04      	ldr	r2, [sp, #16]
 800f484:	1ad3      	subs	r3, r2, r3
 800f486:	6902      	ldr	r2, [r0, #16]
 800f488:	8891      	ldrh	r1, [r2, #4]
 800f48a:	88d6      	ldrh	r6, [r2, #6]
 800f48c:	4419      	add	r1, r3
 800f48e:	8091      	strh	r1, [r2, #4]
 800f490:	9902      	ldr	r1, [sp, #8]
 800f492:	f101 0c20 	add.w	ip, r1, #32
 800f496:	9901      	ldr	r1, [sp, #4]
 800f498:	ebac 0c01 	sub.w	ip, ip, r1
 800f49c:	fb03 630c 	mla	r3, r3, ip, r6
 800f4a0:	80d3      	strh	r3, [r2, #6]
 800f4a2:	e74c      	b.n	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f4a4:	9d05      	ldr	r5, [sp, #20]
 800f4a6:	1aa2      	subs	r2, r4, r2
 800f4a8:	eba5 0501 	sub.w	r5, r5, r1
 800f4ac:	9508      	str	r5, [sp, #32]
 800f4ae:	9202      	str	r2, [sp, #8]
 800f4b0:	f140 8128 	bpl.w	800f704 <_ZN8touchgfx7Outline10renderLineEiiii+0x478>
 800f4b4:	9a03      	ldr	r2, [sp, #12]
 800f4b6:	2a00      	cmp	r2, #0
 800f4b8:	f6ff af41 	blt.w	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f4bc:	9a02      	ldr	r2, [sp, #8]
 800f4be:	4252      	negs	r2, r2
 800f4c0:	9202      	str	r2, [sp, #8]
 800f4c2:	9a06      	ldr	r2, [sp, #24]
 800f4c4:	ea42 72e2 	orr.w	r2, r2, r2, asr #31
 800f4c8:	f04f 34ff 	mov.w	r4, #4294967295
 800f4cc:	9206      	str	r2, [sp, #24]
 800f4ce:	462a      	mov	r2, r5
 800f4d0:	940b      	str	r4, [sp, #44]	; 0x2c
 800f4d2:	435a      	muls	r2, r3
 800f4d4:	2400      	movs	r4, #0
 800f4d6:	9d02      	ldr	r5, [sp, #8]
 800f4d8:	9401      	str	r4, [sp, #4]
 800f4da:	9c02      	ldr	r4, [sp, #8]
 800f4dc:	fb92 f4f4 	sdiv	r4, r2, r4
 800f4e0:	fb05 2214 	mls	r2, r5, r4, r2
 800f4e4:	2a00      	cmp	r2, #0
 800f4e6:	9207      	str	r2, [sp, #28]
 800f4e8:	bfbc      	itt	lt
 800f4ea:	1952      	addlt	r2, r2, r5
 800f4ec:	9207      	strlt	r2, [sp, #28]
 800f4ee:	9a01      	ldr	r2, [sp, #4]
 800f4f0:	6905      	ldr	r5, [r0, #16]
 800f4f2:	bfb8      	it	lt
 800f4f4:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f4f8:	eb04 0901 	add.w	r9, r4, r1
 800f4fc:	429a      	cmp	r2, r3
 800f4fe:	ea4f 1669 	mov.w	r6, r9, asr #5
 800f502:	f040 8112 	bne.w	800f72a <_ZN8touchgfx7Outline10renderLineEiiii+0x49e>
 800f506:	f9b5 3000 	ldrsh.w	r3, [r5]
 800f50a:	429e      	cmp	r6, r3
 800f50c:	d104      	bne.n	800f518 <_ZN8touchgfx7Outline10renderLineEiiii+0x28c>
 800f50e:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800f512:	9a03      	ldr	r2, [sp, #12]
 800f514:	429a      	cmp	r2, r3
 800f516:	d01b      	beq.n	800f550 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f518:	88ea      	ldrh	r2, [r5, #6]
 800f51a:	88ab      	ldrh	r3, [r5, #4]
 800f51c:	4313      	orrs	r3, r2
 800f51e:	d010      	beq.n	800f542 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f520:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800f524:	2a00      	cmp	r2, #0
 800f526:	db0c      	blt.n	800f542 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f528:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f52a:	429a      	cmp	r2, r3
 800f52c:	da09      	bge.n	800f542 <_ZN8touchgfx7Outline10renderLineEiiii+0x2b6>
 800f52e:	e9d0 3201 	ldrd	r3, r2, [r0, #4]
 800f532:	429a      	cmp	r2, r3
 800f534:	bf38      	it	cc
 800f536:	3508      	addcc	r5, #8
 800f538:	f102 0201 	add.w	r2, r2, #1
 800f53c:	bf38      	it	cc
 800f53e:	6105      	strcc	r5, [r0, #16]
 800f540:	6082      	str	r2, [r0, #8]
 800f542:	6903      	ldr	r3, [r0, #16]
 800f544:	9a03      	ldr	r2, [sp, #12]
 800f546:	805a      	strh	r2, [r3, #2]
 800f548:	2200      	movs	r2, #0
 800f54a:	801e      	strh	r6, [r3, #0]
 800f54c:	809a      	strh	r2, [r3, #4]
 800f54e:	80da      	strh	r2, [r3, #6]
 800f550:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f552:	9a03      	ldr	r2, [sp, #12]
 800f554:	6901      	ldr	r1, [r0, #16]
 800f556:	441a      	add	r2, r3
 800f558:	f9b1 3000 	ldrsh.w	r3, [r1]
 800f55c:	42b3      	cmp	r3, r6
 800f55e:	d103      	bne.n	800f568 <_ZN8touchgfx7Outline10renderLineEiiii+0x2dc>
 800f560:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800f564:	429a      	cmp	r2, r3
 800f566:	d01a      	beq.n	800f59e <_ZN8touchgfx7Outline10renderLineEiiii+0x312>
 800f568:	88cc      	ldrh	r4, [r1, #6]
 800f56a:	888b      	ldrh	r3, [r1, #4]
 800f56c:	4323      	orrs	r3, r4
 800f56e:	d010      	beq.n	800f592 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f570:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f574:	2c00      	cmp	r4, #0
 800f576:	db0c      	blt.n	800f592 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f578:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f57a:	429c      	cmp	r4, r3
 800f57c:	da09      	bge.n	800f592 <_ZN8touchgfx7Outline10renderLineEiiii+0x306>
 800f57e:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f582:	429c      	cmp	r4, r3
 800f584:	bf38      	it	cc
 800f586:	3108      	addcc	r1, #8
 800f588:	f104 0401 	add.w	r4, r4, #1
 800f58c:	bf38      	it	cc
 800f58e:	6101      	strcc	r1, [r0, #16]
 800f590:	6084      	str	r4, [r0, #8]
 800f592:	6903      	ldr	r3, [r0, #16]
 800f594:	2100      	movs	r1, #0
 800f596:	801e      	strh	r6, [r3, #0]
 800f598:	805a      	strh	r2, [r3, #2]
 800f59a:	8099      	strh	r1, [r3, #4]
 800f59c:	80d9      	strh	r1, [r3, #6]
 800f59e:	9b06      	ldr	r3, [sp, #24]
 800f5a0:	4293      	cmp	r3, r2
 800f5a2:	f000 8082 	beq.w	800f6aa <_ZN8touchgfx7Outline10renderLineEiiii+0x41e>
 800f5a6:	9b08      	ldr	r3, [sp, #32]
 800f5a8:	9c02      	ldr	r4, [sp, #8]
 800f5aa:	9902      	ldr	r1, [sp, #8]
 800f5ac:	015b      	lsls	r3, r3, #5
 800f5ae:	fb93 f1f1 	sdiv	r1, r3, r1
 800f5b2:	fb04 3311 	mls	r3, r4, r1, r3
 800f5b6:	2b00      	cmp	r3, #0
 800f5b8:	9103      	str	r1, [sp, #12]
 800f5ba:	9308      	str	r3, [sp, #32]
 800f5bc:	da04      	bge.n	800f5c8 <_ZN8touchgfx7Outline10renderLineEiiii+0x33c>
 800f5be:	1e4b      	subs	r3, r1, #1
 800f5c0:	9303      	str	r3, [sp, #12]
 800f5c2:	9b08      	ldr	r3, [sp, #32]
 800f5c4:	4423      	add	r3, r4
 800f5c6:	9308      	str	r3, [sp, #32]
 800f5c8:	9b07      	ldr	r3, [sp, #28]
 800f5ca:	9902      	ldr	r1, [sp, #8]
 800f5cc:	1a5b      	subs	r3, r3, r1
 800f5ce:	9307      	str	r3, [sp, #28]
 800f5d0:	9b01      	ldr	r3, [sp, #4]
 800f5d2:	f1c3 0320 	rsb	r3, r3, #32
 800f5d6:	930e      	str	r3, [sp, #56]	; 0x38
 800f5d8:	990e      	ldr	r1, [sp, #56]	; 0x38
 800f5da:	9b01      	ldr	r3, [sp, #4]
 800f5dc:	1a5b      	subs	r3, r3, r1
 800f5de:	464f      	mov	r7, r9
 800f5e0:	930a      	str	r3, [sp, #40]	; 0x28
 800f5e2:	2600      	movs	r6, #0
 800f5e4:	e9dd 3107 	ldrd	r3, r1, [sp, #28]
 800f5e8:	185b      	adds	r3, r3, r1
 800f5ea:	bf58      	it	pl
 800f5ec:	9902      	ldrpl	r1, [sp, #8]
 800f5ee:	9307      	str	r3, [sp, #28]
 800f5f0:	bf5d      	ittte	pl
 800f5f2:	1a5b      	subpl	r3, r3, r1
 800f5f4:	9307      	strpl	r3, [sp, #28]
 800f5f6:	9b03      	ldrpl	r3, [sp, #12]
 800f5f8:	9903      	ldrmi	r1, [sp, #12]
 800f5fa:	bf58      	it	pl
 800f5fc:	1c59      	addpl	r1, r3, #1
 800f5fe:	4489      	add	r9, r1
 800f600:	2a00      	cmp	r2, #0
 800f602:	ea4f 1a69 	mov.w	sl, r9, asr #5
 800f606:	db2e      	blt.n	800f666 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f608:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f60a:	4293      	cmp	r3, r2
 800f60c:	dd2b      	ble.n	800f666 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f60e:	9c01      	ldr	r4, [sp, #4]
 800f610:	6905      	ldr	r5, [r0, #16]
 800f612:	46a0      	mov	r8, r4
 800f614:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 800f616:	f9b5 c004 	ldrsh.w	ip, [r5, #4]
 800f61a:	f9b5 e006 	ldrsh.w	lr, [r5, #6]
 800f61e:	45a0      	cmp	r8, r4
 800f620:	f040 814f 	bne.w	800f8c2 <_ZN8touchgfx7Outline10renderLineEiiii+0x636>
 800f624:	f9b5 1000 	ldrsh.w	r1, [r5]
 800f628:	4551      	cmp	r1, sl
 800f62a:	d103      	bne.n	800f634 <_ZN8touchgfx7Outline10renderLineEiiii+0x3a8>
 800f62c:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f630:	4291      	cmp	r1, r2
 800f632:	d018      	beq.n	800f666 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f634:	ea5c 010e 	orrs.w	r1, ip, lr
 800f638:	d00f      	beq.n	800f65a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f63a:	f9b5 1002 	ldrsh.w	r1, [r5, #2]
 800f63e:	2900      	cmp	r1, #0
 800f640:	db0b      	blt.n	800f65a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f642:	428b      	cmp	r3, r1
 800f644:	dd09      	ble.n	800f65a <_ZN8touchgfx7Outline10renderLineEiiii+0x3ce>
 800f646:	e9d0 3101 	ldrd	r3, r1, [r0, #4]
 800f64a:	4299      	cmp	r1, r3
 800f64c:	bf38      	it	cc
 800f64e:	3508      	addcc	r5, #8
 800f650:	f101 0101 	add.w	r1, r1, #1
 800f654:	bf38      	it	cc
 800f656:	6105      	strcc	r5, [r0, #16]
 800f658:	6081      	str	r1, [r0, #8]
 800f65a:	6903      	ldr	r3, [r0, #16]
 800f65c:	f8a3 a000 	strh.w	sl, [r3]
 800f660:	805a      	strh	r2, [r3, #2]
 800f662:	809e      	strh	r6, [r3, #4]
 800f664:	80de      	strh	r6, [r3, #6]
 800f666:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800f668:	6901      	ldr	r1, [r0, #16]
 800f66a:	441a      	add	r2, r3
 800f66c:	88cc      	ldrh	r4, [r1, #6]
 800f66e:	888b      	ldrh	r3, [r1, #4]
 800f670:	4323      	orrs	r3, r4
 800f672:	d010      	beq.n	800f696 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f674:	f9b1 4002 	ldrsh.w	r4, [r1, #2]
 800f678:	2c00      	cmp	r4, #0
 800f67a:	db0c      	blt.n	800f696 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f67c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800f67e:	429c      	cmp	r4, r3
 800f680:	da09      	bge.n	800f696 <_ZN8touchgfx7Outline10renderLineEiiii+0x40a>
 800f682:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 800f686:	429c      	cmp	r4, r3
 800f688:	bf38      	it	cc
 800f68a:	3108      	addcc	r1, #8
 800f68c:	f104 0401 	add.w	r4, r4, #1
 800f690:	bf38      	it	cc
 800f692:	6101      	strcc	r1, [r0, #16]
 800f694:	6084      	str	r4, [r0, #8]
 800f696:	6903      	ldr	r3, [r0, #16]
 800f698:	f8a3 a000 	strh.w	sl, [r3]
 800f69c:	805a      	strh	r2, [r3, #2]
 800f69e:	809e      	strh	r6, [r3, #4]
 800f6a0:	80de      	strh	r6, [r3, #6]
 800f6a2:	9b06      	ldr	r3, [sp, #24]
 800f6a4:	4293      	cmp	r3, r2
 800f6a6:	464f      	mov	r7, r9
 800f6a8:	d19c      	bne.n	800f5e4 <_ZN8touchgfx7Outline10renderLineEiiii+0x358>
 800f6aa:	9b01      	ldr	r3, [sp, #4]
 800f6ac:	6907      	ldr	r7, [r0, #16]
 800f6ae:	f1c3 0620 	rsb	r6, r3, #32
 800f6b2:	9b05      	ldr	r3, [sp, #20]
 800f6b4:	ea4f 1e63 	mov.w	lr, r3, asr #5
 800f6b8:	9b04      	ldr	r3, [sp, #16]
 800f6ba:	429e      	cmp	r6, r3
 800f6bc:	f040 81cc 	bne.w	800fa58 <_ZN8touchgfx7Outline10renderLineEiiii+0x7cc>
 800f6c0:	f9b7 3000 	ldrsh.w	r3, [r7]
 800f6c4:	459e      	cmp	lr, r3
 800f6c6:	d104      	bne.n	800f6d2 <_ZN8touchgfx7Outline10renderLineEiiii+0x446>
 800f6c8:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f6cc:	429a      	cmp	r2, r3
 800f6ce:	f43f ae36 	beq.w	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f6d2:	88f9      	ldrh	r1, [r7, #6]
 800f6d4:	88bb      	ldrh	r3, [r7, #4]
 800f6d6:	430b      	orrs	r3, r1
 800f6d8:	d010      	beq.n	800f6fc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f6da:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800f6de:	2b00      	cmp	r3, #0
 800f6e0:	db0c      	blt.n	800f6fc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f6e2:	6ac1      	ldr	r1, [r0, #44]	; 0x2c
 800f6e4:	428b      	cmp	r3, r1
 800f6e6:	da09      	bge.n	800f6fc <_ZN8touchgfx7Outline10renderLineEiiii+0x470>
 800f6e8:	e9d0 1301 	ldrd	r1, r3, [r0, #4]
 800f6ec:	428b      	cmp	r3, r1
 800f6ee:	bf38      	it	cc
 800f6f0:	3708      	addcc	r7, #8
 800f6f2:	f103 0301 	add.w	r3, r3, #1
 800f6f6:	bf38      	it	cc
 800f6f8:	6107      	strcc	r7, [r0, #16]
 800f6fa:	6083      	str	r3, [r0, #8]
 800f6fc:	6903      	ldr	r3, [r0, #16]
 800f6fe:	f8a3 e000 	strh.w	lr, [r3]
 800f702:	e5ff      	b.n	800f304 <_ZN8touchgfx7Outline10renderLineEiiii+0x78>
 800f704:	6ac2      	ldr	r2, [r0, #44]	; 0x2c
 800f706:	9c03      	ldr	r4, [sp, #12]
 800f708:	42a2      	cmp	r2, r4
 800f70a:	f6ff ae18 	blt.w	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800f70e:	9c06      	ldr	r4, [sp, #24]
 800f710:	42a2      	cmp	r2, r4
 800f712:	bfb8      	it	lt
 800f714:	3201      	addlt	r2, #1
 800f716:	9c08      	ldr	r4, [sp, #32]
 800f718:	bfb8      	it	lt
 800f71a:	9206      	strlt	r2, [sp, #24]
 800f71c:	f1c3 0220 	rsb	r2, r3, #32
 800f720:	4362      	muls	r2, r4
 800f722:	2401      	movs	r4, #1
 800f724:	940b      	str	r4, [sp, #44]	; 0x2c
 800f726:	2420      	movs	r4, #32
 800f728:	e6d5      	b.n	800f4d6 <_ZN8touchgfx7Outline10renderLineEiiii+0x24a>
 800f72a:	f009 021f 	and.w	r2, r9, #31
 800f72e:	ea4f 1861 	mov.w	r8, r1, asr #5
 800f732:	920c      	str	r2, [sp, #48]	; 0x30
 800f734:	9a01      	ldr	r2, [sp, #4]
 800f736:	f8b5 e004 	ldrh.w	lr, [r5, #4]
 800f73a:	f8b5 a006 	ldrh.w	sl, [r5, #6]
 800f73e:	45b0      	cmp	r8, r6
 800f740:	f001 011f 	and.w	r1, r1, #31
 800f744:	eba2 0203 	sub.w	r2, r2, r3
 800f748:	d108      	bne.n	800f75c <_ZN8touchgfx7Outline10renderLineEiiii+0x4d0>
 800f74a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f74c:	4419      	add	r1, r3
 800f74e:	4496      	add	lr, r2
 800f750:	fb02 a101 	mla	r1, r2, r1, sl
 800f754:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f758:	80e9      	strh	r1, [r5, #6]
 800f75a:	e6f9      	b.n	800f550 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f75c:	2c00      	cmp	r4, #0
 800f75e:	f2c0 80a9 	blt.w	800f8b4 <_ZN8touchgfx7Outline10renderLineEiiii+0x628>
 800f762:	2701      	movs	r7, #1
 800f764:	f1c1 0c20 	rsb	ip, r1, #32
 800f768:	970a      	str	r7, [sp, #40]	; 0x28
 800f76a:	fb02 f20c 	mul.w	r2, r2, ip
 800f76e:	2720      	movs	r7, #32
 800f770:	9709      	str	r7, [sp, #36]	; 0x24
 800f772:	fb92 fcf4 	sdiv	ip, r2, r4
 800f776:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800f778:	fb04 221c 	mls	r2, r4, ip, r2
 800f77c:	2a00      	cmp	r2, #0
 800f77e:	bfb8      	it	lt
 800f780:	f10c 3cff 	addlt.w	ip, ip, #4294967295
 800f784:	4439      	add	r1, r7
 800f786:	fb0c a101 	mla	r1, ip, r1, sl
 800f78a:	80e9      	strh	r1, [r5, #6]
 800f78c:	44e6      	add	lr, ip
 800f78e:	990a      	ldr	r1, [sp, #40]	; 0x28
 800f790:	f8a5 e004 	strh.w	lr, [r5, #4]
 800f794:	eb08 0501 	add.w	r5, r8, r1
 800f798:	6901      	ldr	r1, [r0, #16]
 800f79a:	f8b1 8006 	ldrh.w	r8, [r1, #6]
 800f79e:	f8b1 e004 	ldrh.w	lr, [r1, #4]
 800f7a2:	bfb8      	it	lt
 800f7a4:	1912      	addlt	r2, r2, r4
 800f7a6:	ea58 070e 	orrs.w	r7, r8, lr
 800f7aa:	d010      	beq.n	800f7ce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f7ac:	f9b1 e002 	ldrsh.w	lr, [r1, #2]
 800f7b0:	f1be 0f00 	cmp.w	lr, #0
 800f7b4:	db0b      	blt.n	800f7ce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f7b6:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f7b8:	45be      	cmp	lr, r7
 800f7ba:	da08      	bge.n	800f7ce <_ZN8touchgfx7Outline10renderLineEiiii+0x542>
 800f7bc:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f7c0:	45be      	cmp	lr, r7
 800f7c2:	bf3c      	itt	cc
 800f7c4:	3108      	addcc	r1, #8
 800f7c6:	6101      	strcc	r1, [r0, #16]
 800f7c8:	f10e 0101 	add.w	r1, lr, #1
 800f7cc:	6081      	str	r1, [r0, #8]
 800f7ce:	6901      	ldr	r1, [r0, #16]
 800f7d0:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 800f7d4:	800d      	strh	r5, [r1, #0]
 800f7d6:	f04f 0e00 	mov.w	lr, #0
 800f7da:	42ae      	cmp	r6, r5
 800f7dc:	f8a1 8002 	strh.w	r8, [r1, #2]
 800f7e0:	f8a1 e004 	strh.w	lr, [r1, #4]
 800f7e4:	f8a1 e006 	strh.w	lr, [r1, #6]
 800f7e8:	4463      	add	r3, ip
 800f7ea:	d054      	beq.n	800f896 <_ZN8touchgfx7Outline10renderLineEiiii+0x60a>
 800f7ec:	9901      	ldr	r1, [sp, #4]
 800f7ee:	1ac9      	subs	r1, r1, r3
 800f7f0:	4461      	add	r1, ip
 800f7f2:	0149      	lsls	r1, r1, #5
 800f7f4:	fb91 fef4 	sdiv	lr, r1, r4
 800f7f8:	fb04 111e 	mls	r1, r4, lr, r1
 800f7fc:	2900      	cmp	r1, #0
 800f7fe:	bfb8      	it	lt
 800f800:	f10e 3eff 	addlt.w	lr, lr, #4294967295
 800f804:	f10e 0701 	add.w	r7, lr, #1
 800f808:	bfb8      	it	lt
 800f80a:	1909      	addlt	r1, r1, r4
 800f80c:	1b12      	subs	r2, r2, r4
 800f80e:	970d      	str	r7, [sp, #52]	; 0x34
 800f810:	f8d0 a010 	ldr.w	sl, [r0, #16]
 800f814:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 800f816:	f8ba b004 	ldrh.w	fp, [sl, #4]
 800f81a:	1852      	adds	r2, r2, r1
 800f81c:	bf54      	ite	pl
 800f81e:	f8dd c034 	ldrpl.w	ip, [sp, #52]	; 0x34
 800f822:	46f4      	movmi	ip, lr
 800f824:	44e3      	add	fp, ip
 800f826:	f8aa b004 	strh.w	fp, [sl, #4]
 800f82a:	f8ba b006 	ldrh.w	fp, [sl, #6]
 800f82e:	eb0b 1b4c 	add.w	fp, fp, ip, lsl #5
 800f832:	f8aa b006 	strh.w	fp, [sl, #6]
 800f836:	4463      	add	r3, ip
 800f838:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f83c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800f840:	f8bc a004 	ldrh.w	sl, [ip, #4]
 800f844:	bf58      	it	pl
 800f846:	1b12      	subpl	r2, r2, r4
 800f848:	443d      	add	r5, r7
 800f84a:	ea5b 070a 	orrs.w	r7, fp, sl
 800f84e:	d014      	beq.n	800f87a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f850:	f9bc a002 	ldrsh.w	sl, [ip, #2]
 800f854:	f1ba 0f00 	cmp.w	sl, #0
 800f858:	db0f      	blt.n	800f87a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f85a:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f85c:	45ba      	cmp	sl, r7
 800f85e:	da0c      	bge.n	800f87a <_ZN8touchgfx7Outline10renderLineEiiii+0x5ee>
 800f860:	e9d0 7a01 	ldrd	r7, sl, [r0, #4]
 800f864:	45ba      	cmp	sl, r7
 800f866:	bf38      	it	cc
 800f868:	f10c 0c08 	addcc.w	ip, ip, #8
 800f86c:	f10a 0a01 	add.w	sl, sl, #1
 800f870:	bf38      	it	cc
 800f872:	f8c0 c010 	strcc.w	ip, [r0, #16]
 800f876:	f8c0 a008 	str.w	sl, [r0, #8]
 800f87a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f87e:	f04f 0700 	mov.w	r7, #0
 800f882:	42ae      	cmp	r6, r5
 800f884:	f8ac 5000 	strh.w	r5, [ip]
 800f888:	f8ac 8002 	strh.w	r8, [ip, #2]
 800f88c:	f8ac 7004 	strh.w	r7, [ip, #4]
 800f890:	f8ac 7006 	strh.w	r7, [ip, #6]
 800f894:	d1bc      	bne.n	800f810 <_ZN8touchgfx7Outline10renderLineEiiii+0x584>
 800f896:	6904      	ldr	r4, [r0, #16]
 800f898:	9a01      	ldr	r2, [sp, #4]
 800f89a:	990c      	ldr	r1, [sp, #48]	; 0x30
 800f89c:	1ad3      	subs	r3, r2, r3
 800f89e:	88a2      	ldrh	r2, [r4, #4]
 800f8a0:	441a      	add	r2, r3
 800f8a2:	80a2      	strh	r2, [r4, #4]
 800f8a4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800f8a6:	3120      	adds	r1, #32
 800f8a8:	1a89      	subs	r1, r1, r2
 800f8aa:	88e2      	ldrh	r2, [r4, #6]
 800f8ac:	fb03 2301 	mla	r3, r3, r1, r2
 800f8b0:	80e3      	strh	r3, [r4, #6]
 800f8b2:	e64d      	b.n	800f550 <_ZN8touchgfx7Outline10renderLineEiiii+0x2c4>
 800f8b4:	f04f 37ff 	mov.w	r7, #4294967295
 800f8b8:	970a      	str	r7, [sp, #40]	; 0x28
 800f8ba:	434a      	muls	r2, r1
 800f8bc:	4264      	negs	r4, r4
 800f8be:	2700      	movs	r7, #0
 800f8c0:	e756      	b.n	800f770 <_ZN8touchgfx7Outline10renderLineEiiii+0x4e4>
 800f8c2:	ea4f 1867 	mov.w	r8, r7, asr #5
 800f8c6:	f009 031f 	and.w	r3, r9, #31
 800f8ca:	45d0      	cmp	r8, sl
 800f8cc:	f007 071f 	and.w	r7, r7, #31
 800f8d0:	930f      	str	r3, [sp, #60]	; 0x3c
 800f8d2:	fa1f fc8c 	uxth.w	ip, ip
 800f8d6:	fa1f fe8e 	uxth.w	lr, lr
 800f8da:	d10a      	bne.n	800f8f2 <_ZN8touchgfx7Outline10renderLineEiiii+0x666>
 800f8dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f8de:	449c      	add	ip, r3
 800f8e0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800f8e2:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f8e6:	441f      	add	r7, r3
 800f8e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800f8ea:	fb03 e707 	mla	r7, r3, r7, lr
 800f8ee:	80ef      	strh	r7, [r5, #6]
 800f8f0:	e6b9      	b.n	800f666 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800f8f2:	2900      	cmp	r1, #0
 800f8f4:	f2c0 80a8 	blt.w	800fa48 <_ZN8touchgfx7Outline10renderLineEiiii+0x7bc>
 800f8f8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 800f8fa:	f1c7 0320 	rsb	r3, r7, #32
 800f8fe:	4363      	muls	r3, r4
 800f900:	2401      	movs	r4, #1
 800f902:	940d      	str	r4, [sp, #52]	; 0x34
 800f904:	2420      	movs	r4, #32
 800f906:	940c      	str	r4, [sp, #48]	; 0x30
 800f908:	fb93 f4f1 	sdiv	r4, r3, r1
 800f90c:	fb01 3b14 	mls	fp, r1, r4, r3
 800f910:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800f912:	f1bb 0f00 	cmp.w	fp, #0
 800f916:	bfb8      	it	lt
 800f918:	f104 34ff 	addlt.w	r4, r4, #4294967295
 800f91c:	441f      	add	r7, r3
 800f91e:	fb04 e707 	mla	r7, r4, r7, lr
 800f922:	44a4      	add	ip, r4
 800f924:	f8a5 c004 	strh.w	ip, [r5, #4]
 800f928:	80ef      	strh	r7, [r5, #6]
 800f92a:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800f92e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800f930:	f8bc e006 	ldrh.w	lr, [ip, #6]
 800f934:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800f938:	bfb8      	it	lt
 800f93a:	448b      	addlt	fp, r1
 800f93c:	eb08 0503 	add.w	r5, r8, r3
 800f940:	ea5e 0307 	orrs.w	r3, lr, r7
 800f944:	d011      	beq.n	800f96a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f946:	f9bc e002 	ldrsh.w	lr, [ip, #2]
 800f94a:	f1be 0f00 	cmp.w	lr, #0
 800f94e:	db0c      	blt.n	800f96a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f950:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f952:	45be      	cmp	lr, r7
 800f954:	da09      	bge.n	800f96a <_ZN8touchgfx7Outline10renderLineEiiii+0x6de>
 800f956:	e9d0 7e01 	ldrd	r7, lr, [r0, #4]
 800f95a:	45be      	cmp	lr, r7
 800f95c:	bf3c      	itt	cc
 800f95e:	f10c 0708 	addcc.w	r7, ip, #8
 800f962:	6107      	strcc	r7, [r0, #16]
 800f964:	f10e 0701 	add.w	r7, lr, #1
 800f968:	6087      	str	r7, [r0, #8]
 800f96a:	6907      	ldr	r7, [r0, #16]
 800f96c:	b213      	sxth	r3, r2
 800f96e:	9310      	str	r3, [sp, #64]	; 0x40
 800f970:	807b      	strh	r3, [r7, #2]
 800f972:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f974:	803d      	strh	r5, [r7, #0]
 800f976:	4555      	cmp	r5, sl
 800f978:	80be      	strh	r6, [r7, #4]
 800f97a:	80fe      	strh	r6, [r7, #6]
 800f97c:	eb04 0c03 	add.w	ip, r4, r3
 800f980:	d051      	beq.n	800fa26 <_ZN8touchgfx7Outline10renderLineEiiii+0x79a>
 800f982:	9b01      	ldr	r3, [sp, #4]
 800f984:	eba3 070c 	sub.w	r7, r3, ip
 800f988:	443c      	add	r4, r7
 800f98a:	0164      	lsls	r4, r4, #5
 800f98c:	fb94 f8f1 	sdiv	r8, r4, r1
 800f990:	fb01 4418 	mls	r4, r1, r8, r4
 800f994:	2c00      	cmp	r4, #0
 800f996:	bfb8      	it	lt
 800f998:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800f99c:	ebab 0301 	sub.w	r3, fp, r1
 800f9a0:	f108 0701 	add.w	r7, r8, #1
 800f9a4:	bfb8      	it	lt
 800f9a6:	1864      	addlt	r4, r4, r1
 800f9a8:	9309      	str	r3, [sp, #36]	; 0x24
 800f9aa:	9711      	str	r7, [sp, #68]	; 0x44
 800f9ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800f9ae:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f9b2:	191b      	adds	r3, r3, r4
 800f9b4:	bf58      	it	pl
 800f9b6:	9f11      	ldrpl	r7, [sp, #68]	; 0x44
 800f9b8:	f8be b004 	ldrh.w	fp, [lr, #4]
 800f9bc:	9309      	str	r3, [sp, #36]	; 0x24
 800f9be:	bf48      	it	mi
 800f9c0:	4647      	movmi	r7, r8
 800f9c2:	44bb      	add	fp, r7
 800f9c4:	f8ae b004 	strh.w	fp, [lr, #4]
 800f9c8:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f9cc:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800f9d0:	f8ae b006 	strh.w	fp, [lr, #6]
 800f9d4:	f8d0 e010 	ldr.w	lr, [r0, #16]
 800f9d8:	44bc      	add	ip, r7
 800f9da:	9f0d      	ldr	r7, [sp, #52]	; 0x34
 800f9dc:	f8be b006 	ldrh.w	fp, [lr, #6]
 800f9e0:	443d      	add	r5, r7
 800f9e2:	f8be 7004 	ldrh.w	r7, [lr, #4]
 800f9e6:	bf5c      	itt	pl
 800f9e8:	1a5b      	subpl	r3, r3, r1
 800f9ea:	9309      	strpl	r3, [sp, #36]	; 0x24
 800f9ec:	ea5b 0307 	orrs.w	r3, fp, r7
 800f9f0:	d011      	beq.n	800fa16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f9f2:	f9be b002 	ldrsh.w	fp, [lr, #2]
 800f9f6:	f1bb 0f00 	cmp.w	fp, #0
 800f9fa:	db0c      	blt.n	800fa16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800f9fc:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800f9fe:	45bb      	cmp	fp, r7
 800fa00:	da09      	bge.n	800fa16 <_ZN8touchgfx7Outline10renderLineEiiii+0x78a>
 800fa02:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800fa06:	45bb      	cmp	fp, r7
 800fa08:	bf3c      	itt	cc
 800fa0a:	f10e 0708 	addcc.w	r7, lr, #8
 800fa0e:	6107      	strcc	r7, [r0, #16]
 800fa10:	f10b 0701 	add.w	r7, fp, #1
 800fa14:	6087      	str	r7, [r0, #8]
 800fa16:	6907      	ldr	r7, [r0, #16]
 800fa18:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa1a:	803d      	strh	r5, [r7, #0]
 800fa1c:	4555      	cmp	r5, sl
 800fa1e:	807b      	strh	r3, [r7, #2]
 800fa20:	80be      	strh	r6, [r7, #4]
 800fa22:	80fe      	strh	r6, [r7, #6]
 800fa24:	d1c2      	bne.n	800f9ac <_ZN8touchgfx7Outline10renderLineEiiii+0x720>
 800fa26:	9b01      	ldr	r3, [sp, #4]
 800fa28:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 800fa2a:	eba3 0c0c 	sub.w	ip, r3, ip
 800fa2e:	6903      	ldr	r3, [r0, #16]
 800fa30:	8899      	ldrh	r1, [r3, #4]
 800fa32:	4461      	add	r1, ip
 800fa34:	8099      	strh	r1, [r3, #4]
 800fa36:	990c      	ldr	r1, [sp, #48]	; 0x30
 800fa38:	3720      	adds	r7, #32
 800fa3a:	1a7f      	subs	r7, r7, r1
 800fa3c:	88d9      	ldrh	r1, [r3, #6]
 800fa3e:	fb0c 1c07 	mla	ip, ip, r7, r1
 800fa42:	f8a3 c006 	strh.w	ip, [r3, #6]
 800fa46:	e60e      	b.n	800f666 <_ZN8touchgfx7Outline10renderLineEiiii+0x3da>
 800fa48:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800fa4a:	f04f 34ff 	mov.w	r4, #4294967295
 800fa4e:	940d      	str	r4, [sp, #52]	; 0x34
 800fa50:	437b      	muls	r3, r7
 800fa52:	4249      	negs	r1, r1
 800fa54:	2400      	movs	r4, #0
 800fa56:	e756      	b.n	800f906 <_ZN8touchgfx7Outline10renderLineEiiii+0x67a>
 800fa58:	9905      	ldr	r1, [sp, #20]
 800fa5a:	f8b7 8004 	ldrh.w	r8, [r7, #4]
 800fa5e:	f8b7 a006 	ldrh.w	sl, [r7, #6]
 800fa62:	f001 011f 	and.w	r1, r1, #31
 800fa66:	ea4f 1b69 	mov.w	fp, r9, asr #5
 800fa6a:	9102      	str	r1, [sp, #8]
 800fa6c:	9904      	ldr	r1, [sp, #16]
 800fa6e:	45f3      	cmp	fp, lr
 800fa70:	f009 0c1f 	and.w	ip, r9, #31
 800fa74:	eba1 0406 	sub.w	r4, r1, r6
 800fa78:	d108      	bne.n	800fa8c <_ZN8touchgfx7Outline10renderLineEiiii+0x800>
 800fa7a:	9b02      	ldr	r3, [sp, #8]
 800fa7c:	449c      	add	ip, r3
 800fa7e:	44a0      	add	r8, r4
 800fa80:	fb04 a40c 	mla	r4, r4, ip, sl
 800fa84:	f8a7 8004 	strh.w	r8, [r7, #4]
 800fa88:	80fc      	strh	r4, [r7, #6]
 800fa8a:	e458      	b.n	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>
 800fa8c:	9905      	ldr	r1, [sp, #20]
 800fa8e:	ebb1 0109 	subs.w	r1, r1, r9
 800fa92:	bf5b      	ittet	pl
 800fa94:	f1cc 0520 	rsbpl	r5, ip, #32
 800fa98:	436c      	mulpl	r4, r5
 800fa9a:	2500      	movmi	r5, #0
 800fa9c:	2520      	movpl	r5, #32
 800fa9e:	bf44      	itt	mi
 800faa0:	fb04 f40c 	mulmi.w	r4, r4, ip
 800faa4:	4249      	negmi	r1, r1
 800faa6:	9501      	str	r5, [sp, #4]
 800faa8:	9b01      	ldr	r3, [sp, #4]
 800faaa:	fb94 f5f1 	sdiv	r5, r4, r1
 800faae:	fb01 4415 	mls	r4, r1, r5, r4
 800fab2:	bf54      	ite	pl
 800fab4:	f04f 0901 	movpl.w	r9, #1
 800fab8:	f04f 39ff 	movmi.w	r9, #4294967295
 800fabc:	2c00      	cmp	r4, #0
 800fabe:	bfb8      	it	lt
 800fac0:	f105 35ff 	addlt.w	r5, r5, #4294967295
 800fac4:	449c      	add	ip, r3
 800fac6:	44a8      	add	r8, r5
 800fac8:	fb05 ac0c 	mla	ip, r5, ip, sl
 800facc:	f8a7 8004 	strh.w	r8, [r7, #4]
 800fad0:	f8a7 c006 	strh.w	ip, [r7, #6]
 800fad4:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fad8:	f8bc 8006 	ldrh.w	r8, [ip, #6]
 800fadc:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fae0:	bfb8      	it	lt
 800fae2:	1864      	addlt	r4, r4, r1
 800fae4:	ea58 0707 	orrs.w	r7, r8, r7
 800fae8:	eb0b 0309 	add.w	r3, fp, r9
 800faec:	d011      	beq.n	800fb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800faee:	f9bc 8002 	ldrsh.w	r8, [ip, #2]
 800faf2:	f1b8 0f00 	cmp.w	r8, #0
 800faf6:	db0c      	blt.n	800fb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800faf8:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800fafa:	45b8      	cmp	r8, r7
 800fafc:	da09      	bge.n	800fb12 <_ZN8touchgfx7Outline10renderLineEiiii+0x886>
 800fafe:	e9d0 7801 	ldrd	r7, r8, [r0, #4]
 800fb02:	45b8      	cmp	r8, r7
 800fb04:	bf3c      	itt	cc
 800fb06:	f10c 0708 	addcc.w	r7, ip, #8
 800fb0a:	6107      	strcc	r7, [r0, #16]
 800fb0c:	f108 0701 	add.w	r7, r8, #1
 800fb10:	6087      	str	r7, [r0, #8]
 800fb12:	6907      	ldr	r7, [r0, #16]
 800fb14:	f04f 0c00 	mov.w	ip, #0
 800fb18:	b212      	sxth	r2, r2
 800fb1a:	459e      	cmp	lr, r3
 800fb1c:	803b      	strh	r3, [r7, #0]
 800fb1e:	807a      	strh	r2, [r7, #2]
 800fb20:	f8a7 c004 	strh.w	ip, [r7, #4]
 800fb24:	f8a7 c006 	strh.w	ip, [r7, #6]
 800fb28:	442e      	add	r6, r5
 800fb2a:	d04d      	beq.n	800fbc8 <_ZN8touchgfx7Outline10renderLineEiiii+0x93c>
 800fb2c:	9f04      	ldr	r7, [sp, #16]
 800fb2e:	1bbf      	subs	r7, r7, r6
 800fb30:	443d      	add	r5, r7
 800fb32:	016d      	lsls	r5, r5, #5
 800fb34:	fb95 f8f1 	sdiv	r8, r5, r1
 800fb38:	fb01 5518 	mls	r5, r1, r8, r5
 800fb3c:	4565      	cmp	r5, ip
 800fb3e:	bfb8      	it	lt
 800fb40:	f108 38ff 	addlt.w	r8, r8, #4294967295
 800fb44:	f108 0701 	add.w	r7, r8, #1
 800fb48:	bfb8      	it	lt
 800fb4a:	186d      	addlt	r5, r5, r1
 800fb4c:	1a64      	subs	r4, r4, r1
 800fb4e:	9703      	str	r7, [sp, #12]
 800fb50:	f04f 0a00 	mov.w	sl, #0
 800fb54:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fb58:	1964      	adds	r4, r4, r5
 800fb5a:	bf58      	it	pl
 800fb5c:	9f03      	ldrpl	r7, [sp, #12]
 800fb5e:	f8bc b004 	ldrh.w	fp, [ip, #4]
 800fb62:	bf48      	it	mi
 800fb64:	4647      	movmi	r7, r8
 800fb66:	44bb      	add	fp, r7
 800fb68:	f8ac b004 	strh.w	fp, [ip, #4]
 800fb6c:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800fb70:	eb0b 1b47 	add.w	fp, fp, r7, lsl #5
 800fb74:	f8ac b006 	strh.w	fp, [ip, #6]
 800fb78:	f8d0 c010 	ldr.w	ip, [r0, #16]
 800fb7c:	443e      	add	r6, r7
 800fb7e:	f8bc b006 	ldrh.w	fp, [ip, #6]
 800fb82:	f8bc 7004 	ldrh.w	r7, [ip, #4]
 800fb86:	bf58      	it	pl
 800fb88:	1a64      	subpl	r4, r4, r1
 800fb8a:	ea5b 0707 	orrs.w	r7, fp, r7
 800fb8e:	444b      	add	r3, r9
 800fb90:	d011      	beq.n	800fbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fb92:	f9bc b002 	ldrsh.w	fp, [ip, #2]
 800fb96:	f1bb 0f00 	cmp.w	fp, #0
 800fb9a:	db0c      	blt.n	800fbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fb9c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
 800fb9e:	45bb      	cmp	fp, r7
 800fba0:	da09      	bge.n	800fbb6 <_ZN8touchgfx7Outline10renderLineEiiii+0x92a>
 800fba2:	e9d0 7b01 	ldrd	r7, fp, [r0, #4]
 800fba6:	45bb      	cmp	fp, r7
 800fba8:	bf3c      	itt	cc
 800fbaa:	f10c 0708 	addcc.w	r7, ip, #8
 800fbae:	6107      	strcc	r7, [r0, #16]
 800fbb0:	f10b 0701 	add.w	r7, fp, #1
 800fbb4:	6087      	str	r7, [r0, #8]
 800fbb6:	6907      	ldr	r7, [r0, #16]
 800fbb8:	459e      	cmp	lr, r3
 800fbba:	803b      	strh	r3, [r7, #0]
 800fbbc:	807a      	strh	r2, [r7, #2]
 800fbbe:	f8a7 a004 	strh.w	sl, [r7, #4]
 800fbc2:	f8a7 a006 	strh.w	sl, [r7, #6]
 800fbc6:	d1c5      	bne.n	800fb54 <_ZN8touchgfx7Outline10renderLineEiiii+0x8c8>
 800fbc8:	9b04      	ldr	r3, [sp, #16]
 800fbca:	1b9e      	subs	r6, r3, r6
 800fbcc:	6903      	ldr	r3, [r0, #16]
 800fbce:	889a      	ldrh	r2, [r3, #4]
 800fbd0:	4432      	add	r2, r6
 800fbd2:	809a      	strh	r2, [r3, #4]
 800fbd4:	9a02      	ldr	r2, [sp, #8]
 800fbd6:	f102 0c20 	add.w	ip, r2, #32
 800fbda:	9a01      	ldr	r2, [sp, #4]
 800fbdc:	ebac 0c02 	sub.w	ip, ip, r2
 800fbe0:	88da      	ldrh	r2, [r3, #6]
 800fbe2:	fb06 260c 	mla	r6, r6, ip, r2
 800fbe6:	80de      	strh	r6, [r3, #6]
 800fbe8:	f7ff bba9 	b.w	800f33e <_ZN8touchgfx7Outline10renderLineEiiii+0xb2>

0800fbec <_ZN8touchgfx7Outline6lineToEii>:
 800fbec:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fbee:	079b      	lsls	r3, r3, #30
 800fbf0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800fbf2:	460e      	mov	r6, r1
 800fbf4:	4615      	mov	r5, r2
 800fbf6:	d511      	bpl.n	800fc1c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800fbf8:	e9d0 1205 	ldrd	r1, r2, [r0, #20]
 800fbfc:	ea86 0701 	eor.w	r7, r6, r1
 800fc00:	ea85 0302 	eor.w	r3, r5, r2
 800fc04:	433b      	orrs	r3, r7
 800fc06:	d009      	beq.n	800fc1c <_ZN8touchgfx7Outline6lineToEii+0x30>
 800fc08:	4633      	mov	r3, r6
 800fc0a:	9500      	str	r5, [sp, #0]
 800fc0c:	f7ff fb3e 	bl	800f28c <_ZN8touchgfx7Outline10renderLineEiiii>
 800fc10:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fc12:	e9c0 6505 	strd	r6, r5, [r0, #20]
 800fc16:	f043 0301 	orr.w	r3, r3, #1
 800fc1a:	6243      	str	r3, [r0, #36]	; 0x24
 800fc1c:	b003      	add	sp, #12
 800fc1e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800fc20 <_ZN8touchgfx7Outline6moveToEii>:
 800fc20:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800fc22:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800fc24:	4615      	mov	r5, r2
 800fc26:	079a      	lsls	r2, r3, #30
 800fc28:	4604      	mov	r4, r0
 800fc2a:	460e      	mov	r6, r1
 800fc2c:	d401      	bmi.n	800fc32 <_ZN8touchgfx7Outline6moveToEii+0x12>
 800fc2e:	f7ff faf9 	bl	800f224 <_ZN8touchgfx7Outline5resetEv>
 800fc32:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fc34:	07db      	lsls	r3, r3, #31
 800fc36:	d504      	bpl.n	800fc42 <_ZN8touchgfx7Outline6moveToEii+0x22>
 800fc38:	e9d4 1207 	ldrd	r1, r2, [r4, #28]
 800fc3c:	4620      	mov	r0, r4
 800fc3e:	f7ff ffd5 	bl	800fbec <_ZN8touchgfx7Outline6lineToEii>
 800fc42:	6923      	ldr	r3, [r4, #16]
 800fc44:	f9b3 2000 	ldrsh.w	r2, [r3]
 800fc48:	1170      	asrs	r0, r6, #5
 800fc4a:	4290      	cmp	r0, r2
 800fc4c:	ea4f 1165 	mov.w	r1, r5, asr #5
 800fc50:	d103      	bne.n	800fc5a <_ZN8touchgfx7Outline6moveToEii+0x3a>
 800fc52:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fc56:	4291      	cmp	r1, r2
 800fc58:	d01a      	beq.n	800fc90 <_ZN8touchgfx7Outline6moveToEii+0x70>
 800fc5a:	88df      	ldrh	r7, [r3, #6]
 800fc5c:	889a      	ldrh	r2, [r3, #4]
 800fc5e:	433a      	orrs	r2, r7
 800fc60:	d010      	beq.n	800fc84 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fc62:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fc66:	2a00      	cmp	r2, #0
 800fc68:	db0c      	blt.n	800fc84 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fc6a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800fc6c:	42ba      	cmp	r2, r7
 800fc6e:	da09      	bge.n	800fc84 <_ZN8touchgfx7Outline6moveToEii+0x64>
 800fc70:	e9d4 7201 	ldrd	r7, r2, [r4, #4]
 800fc74:	42ba      	cmp	r2, r7
 800fc76:	bf38      	it	cc
 800fc78:	3308      	addcc	r3, #8
 800fc7a:	f102 0201 	add.w	r2, r2, #1
 800fc7e:	bf38      	it	cc
 800fc80:	6123      	strcc	r3, [r4, #16]
 800fc82:	60a2      	str	r2, [r4, #8]
 800fc84:	6923      	ldr	r3, [r4, #16]
 800fc86:	2200      	movs	r2, #0
 800fc88:	8018      	strh	r0, [r3, #0]
 800fc8a:	8059      	strh	r1, [r3, #2]
 800fc8c:	809a      	strh	r2, [r3, #4]
 800fc8e:	80da      	strh	r2, [r3, #6]
 800fc90:	6166      	str	r6, [r4, #20]
 800fc92:	e9c4 5606 	strd	r5, r6, [r4, #24]
 800fc96:	6225      	str	r5, [r4, #32]
 800fc98:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800fc9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>:
 800fc9a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800fc9e:	b0d0      	sub	sp, #320	; 0x140
 800fca0:	466c      	mov	r4, sp
 800fca2:	eb00 01c1 	add.w	r1, r0, r1, lsl #3
 800fca6:	4627      	mov	r7, r4
 800fca8:	1a0d      	subs	r5, r1, r0
 800fcaa:	2d48      	cmp	r5, #72	; 0x48
 800fcac:	f100 0308 	add.w	r3, r0, #8
 800fcb0:	f340 80d5 	ble.w	800fe5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800fcb4:	112d      	asrs	r5, r5, #4
 800fcb6:	eb00 02c5 	add.w	r2, r0, r5, lsl #3
 800fcba:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fcbe:	6816      	ldr	r6, [r2, #0]
 800fcc0:	f9b0 8002 	ldrsh.w	r8, [r0, #2]
 800fcc4:	6006      	str	r6, [r0, #0]
 800fcc6:	6856      	ldr	r6, [r2, #4]
 800fcc8:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800fccc:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800fcd0:	6046      	str	r6, [r0, #4]
 800fcd2:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 800fcd6:	f8a2 8002 	strh.w	r8, [r2, #2]
 800fcda:	f8a2 e004 	strh.w	lr, [r2, #4]
 800fcde:	f8a2 c006 	strh.w	ip, [r2, #6]
 800fce2:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800fce6:	f9b0 c00a 	ldrsh.w	ip, [r0, #10]
 800fcea:	4565      	cmp	r5, ip
 800fcec:	f1a1 0208 	sub.w	r2, r1, #8
 800fcf0:	db06      	blt.n	800fd00 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x66>
 800fcf2:	d119      	bne.n	800fd28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800fcf4:	f9b0 6008 	ldrsh.w	r6, [r0, #8]
 800fcf8:	f931 5c08 	ldrsh.w	r5, [r1, #-8]
 800fcfc:	42ae      	cmp	r6, r5
 800fcfe:	dd13      	ble.n	800fd28 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x8e>
 800fd00:	460e      	mov	r6, r1
 800fd02:	f9b0 9008 	ldrsh.w	r9, [r0, #8]
 800fd06:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800fd0a:	f9b0 800c 	ldrsh.w	r8, [r0, #12]
 800fd0e:	f9b0 e00e 	ldrsh.w	lr, [r0, #14]
 800fd12:	601d      	str	r5, [r3, #0]
 800fd14:	6875      	ldr	r5, [r6, #4]
 800fd16:	605d      	str	r5, [r3, #4]
 800fd18:	f821 9c08 	strh.w	r9, [r1, #-8]
 800fd1c:	f821 cc06 	strh.w	ip, [r1, #-6]
 800fd20:	f821 8c04 	strh.w	r8, [r1, #-4]
 800fd24:	f821 ec02 	strh.w	lr, [r1, #-2]
 800fd28:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800fd2c:	f9b0 500a 	ldrsh.w	r5, [r0, #10]
 800fd30:	42ae      	cmp	r6, r5
 800fd32:	db06      	blt.n	800fd42 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xa8>
 800fd34:	d116      	bne.n	800fd64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800fd36:	f9b0 c000 	ldrsh.w	ip, [r0]
 800fd3a:	f9b0 5008 	ldrsh.w	r5, [r0, #8]
 800fd3e:	45ac      	cmp	ip, r5
 800fd40:	da10      	bge.n	800fd64 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xca>
 800fd42:	681d      	ldr	r5, [r3, #0]
 800fd44:	f9b0 8000 	ldrsh.w	r8, [r0]
 800fd48:	6005      	str	r5, [r0, #0]
 800fd4a:	685d      	ldr	r5, [r3, #4]
 800fd4c:	f9b0 e004 	ldrsh.w	lr, [r0, #4]
 800fd50:	f9b0 c006 	ldrsh.w	ip, [r0, #6]
 800fd54:	f8a0 8008 	strh.w	r8, [r0, #8]
 800fd58:	6045      	str	r5, [r0, #4]
 800fd5a:	8146      	strh	r6, [r0, #10]
 800fd5c:	f8a0 e00c 	strh.w	lr, [r0, #12]
 800fd60:	f8a0 c00e 	strh.w	ip, [r0, #14]
 800fd64:	f931 5c06 	ldrsh.w	r5, [r1, #-6]
 800fd68:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fd6c:	4565      	cmp	r5, ip
 800fd6e:	db06      	blt.n	800fd7e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe4>
 800fd70:	d119      	bne.n	800fda6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd72:	f931 6c08 	ldrsh.w	r6, [r1, #-8]
 800fd76:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fd7a:	42ae      	cmp	r6, r5
 800fd7c:	da13      	bge.n	800fda6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fd7e:	460e      	mov	r6, r1
 800fd80:	f9b0 9000 	ldrsh.w	r9, [r0]
 800fd84:	f856 5d08 	ldr.w	r5, [r6, #-8]!
 800fd88:	6005      	str	r5, [r0, #0]
 800fd8a:	f9b0 8004 	ldrsh.w	r8, [r0, #4]
 800fd8e:	f9b0 e006 	ldrsh.w	lr, [r0, #6]
 800fd92:	6875      	ldr	r5, [r6, #4]
 800fd94:	6045      	str	r5, [r0, #4]
 800fd96:	f821 9c08 	strh.w	r9, [r1, #-8]
 800fd9a:	f821 cc06 	strh.w	ip, [r1, #-6]
 800fd9e:	f821 8c04 	strh.w	r8, [r1, #-4]
 800fda2:	f821 ec02 	strh.w	lr, [r1, #-2]
 800fda6:	3308      	adds	r3, #8
 800fda8:	f9b0 c002 	ldrsh.w	ip, [r0, #2]
 800fdac:	f9b3 e002 	ldrsh.w	lr, [r3, #2]
 800fdb0:	45e6      	cmp	lr, ip
 800fdb2:	dbf8      	blt.n	800fda6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fdb4:	d105      	bne.n	800fdc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fdb6:	f9b3 6000 	ldrsh.w	r6, [r3]
 800fdba:	f9b0 5000 	ldrsh.w	r5, [r0]
 800fdbe:	42ae      	cmp	r6, r5
 800fdc0:	dbf1      	blt.n	800fda6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fdc2:	4615      	mov	r5, r2
 800fdc4:	3a08      	subs	r2, #8
 800fdc6:	f9b2 6002 	ldrsh.w	r6, [r2, #2]
 800fdca:	45b4      	cmp	ip, r6
 800fdcc:	dbf9      	blt.n	800fdc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fdce:	d105      	bne.n	800fddc <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x142>
 800fdd0:	f9b0 8000 	ldrsh.w	r8, [r0]
 800fdd4:	f9b2 6000 	ldrsh.w	r6, [r2]
 800fdd8:	45b0      	cmp	r8, r6
 800fdda:	dbf2      	blt.n	800fdc2 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x128>
 800fddc:	4293      	cmp	r3, r2
 800fdde:	f1a5 0608 	sub.w	r6, r5, #8
 800fde2:	d816      	bhi.n	800fe12 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x178>
 800fde4:	f8d6 c000 	ldr.w	ip, [r6]
 800fde8:	f9b3 a000 	ldrsh.w	sl, [r3]
 800fdec:	f8c3 c000 	str.w	ip, [r3]
 800fdf0:	f9b3 9004 	ldrsh.w	r9, [r3, #4]
 800fdf4:	f9b3 8006 	ldrsh.w	r8, [r3, #6]
 800fdf8:	f8d6 c004 	ldr.w	ip, [r6, #4]
 800fdfc:	f8c3 c004 	str.w	ip, [r3, #4]
 800fe00:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fe04:	f825 ec06 	strh.w	lr, [r5, #-6]
 800fe08:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fe0c:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fe10:	e7c9      	b.n	800fda6 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x10c>
 800fe12:	f8d6 e000 	ldr.w	lr, [r6]
 800fe16:	f9b0 a000 	ldrsh.w	sl, [r0]
 800fe1a:	f8c0 e000 	str.w	lr, [r0]
 800fe1e:	f9b0 9004 	ldrsh.w	r9, [r0, #4]
 800fe22:	f9b0 8006 	ldrsh.w	r8, [r0, #6]
 800fe26:	f8d6 e004 	ldr.w	lr, [r6, #4]
 800fe2a:	f8c0 e004 	str.w	lr, [r0, #4]
 800fe2e:	f825 ac08 	strh.w	sl, [r5, #-8]
 800fe32:	f825 cc06 	strh.w	ip, [r5, #-6]
 800fe36:	f825 9c04 	strh.w	r9, [r5, #-4]
 800fe3a:	f825 8c02 	strh.w	r8, [r5, #-2]
 800fe3e:	1acd      	subs	r5, r1, r3
 800fe40:	1a16      	subs	r6, r2, r0
 800fe42:	10ed      	asrs	r5, r5, #3
 800fe44:	ebb5 0fe6 	cmp.w	r5, r6, asr #3
 800fe48:	bfb5      	itete	lt
 800fe4a:	e9c4 0200 	strdlt	r0, r2, [r4]
 800fe4e:	e9c4 3100 	strdge	r3, r1, [r4]
 800fe52:	460a      	movlt	r2, r1
 800fe54:	4603      	movge	r3, r0
 800fe56:	3408      	adds	r4, #8
 800fe58:	4618      	mov	r0, r3
 800fe5a:	4611      	mov	r1, r2
 800fe5c:	e724      	b.n	800fca8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fe5e:	4299      	cmp	r1, r3
 800fe60:	d928      	bls.n	800feb4 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x21a>
 800fe62:	f1a3 0210 	sub.w	r2, r3, #16
 800fe66:	f9b2 c012 	ldrsh.w	ip, [r2, #18]
 800fe6a:	f9b2 500a 	ldrsh.w	r5, [r2, #10]
 800fe6e:	45ac      	cmp	ip, r5
 800fe70:	db06      	blt.n	800fe80 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1e6>
 800fe72:	d11d      	bne.n	800feb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fe74:	f9b2 6010 	ldrsh.w	r6, [r2, #16]
 800fe78:	f9b2 5008 	ldrsh.w	r5, [r2, #8]
 800fe7c:	42ae      	cmp	r6, r5
 800fe7e:	da17      	bge.n	800feb0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x216>
 800fe80:	4615      	mov	r5, r2
 800fe82:	f9b2 9010 	ldrsh.w	r9, [r2, #16]
 800fe86:	f855 6f08 	ldr.w	r6, [r5, #8]!
 800fe8a:	6116      	str	r6, [r2, #16]
 800fe8c:	686e      	ldr	r6, [r5, #4]
 800fe8e:	f9b2 8014 	ldrsh.w	r8, [r2, #20]
 800fe92:	f9b2 e016 	ldrsh.w	lr, [r2, #22]
 800fe96:	f8a2 9008 	strh.w	r9, [r2, #8]
 800fe9a:	42a8      	cmp	r0, r5
 800fe9c:	6156      	str	r6, [r2, #20]
 800fe9e:	f8a2 c00a 	strh.w	ip, [r2, #10]
 800fea2:	f8a2 800c 	strh.w	r8, [r2, #12]
 800fea6:	f8a2 e00e 	strh.w	lr, [r2, #14]
 800feaa:	f1a2 0208 	sub.w	r2, r2, #8
 800feae:	d1da      	bne.n	800fe66 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1cc>
 800feb0:	3308      	adds	r3, #8
 800feb2:	e7d4      	b.n	800fe5e <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x1c4>
 800feb4:	42bc      	cmp	r4, r7
 800feb6:	d903      	bls.n	800fec0 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0x226>
 800feb8:	e954 0102 	ldrd	r0, r1, [r4, #-8]
 800febc:	3c08      	subs	r4, #8
 800febe:	e6f3      	b.n	800fca8 <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj+0xe>
 800fec0:	b050      	add	sp, #320	; 0x140
 800fec2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0800fec6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>:
 800fec6:	b510      	push	{r4, lr}
 800fec8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800feca:	07da      	lsls	r2, r3, #31
 800fecc:	4604      	mov	r4, r0
 800fece:	d507      	bpl.n	800fee0 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x1a>
 800fed0:	e9d0 1207 	ldrd	r1, r2, [r0, #28]
 800fed4:	f7ff fe8a 	bl	800fbec <_ZN8touchgfx7Outline6lineToEii>
 800fed8:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800feda:	f023 0301 	bic.w	r3, r3, #1
 800fede:	6243      	str	r3, [r0, #36]	; 0x24
 800fee0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800fee2:	079b      	lsls	r3, r3, #30
 800fee4:	d521      	bpl.n	800ff2a <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x64>
 800fee6:	6923      	ldr	r3, [r4, #16]
 800fee8:	88d9      	ldrh	r1, [r3, #6]
 800feea:	889a      	ldrh	r2, [r3, #4]
 800feec:	430a      	orrs	r2, r1
 800feee:	d010      	beq.n	800ff12 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fef0:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 800fef4:	2a00      	cmp	r2, #0
 800fef6:	db0c      	blt.n	800ff12 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fef8:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800fefa:	428a      	cmp	r2, r1
 800fefc:	da09      	bge.n	800ff12 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x4c>
 800fefe:	e9d4 1201 	ldrd	r1, r2, [r4, #4]
 800ff02:	4291      	cmp	r1, r2
 800ff04:	bf88      	it	hi
 800ff06:	3308      	addhi	r3, #8
 800ff08:	f102 0201 	add.w	r2, r2, #1
 800ff0c:	bf88      	it	hi
 800ff0e:	6123      	strhi	r3, [r4, #16]
 800ff10:	60a2      	str	r2, [r4, #8]
 800ff12:	68a1      	ldr	r1, [r4, #8]
 800ff14:	b129      	cbz	r1, 800ff22 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ff16:	6863      	ldr	r3, [r4, #4]
 800ff18:	4299      	cmp	r1, r3
 800ff1a:	d802      	bhi.n	800ff22 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv+0x5c>
 800ff1c:	68e0      	ldr	r0, [r4, #12]
 800ff1e:	f7ff febc 	bl	800fc9a <_ZN8touchgfx7Outline10qsortCellsEPNS_4CellEj>
 800ff22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800ff24:	f023 0302 	bic.w	r3, r3, #2
 800ff28:	6263      	str	r3, [r4, #36]	; 0x24
 800ff2a:	68e0      	ldr	r0, [r4, #12]
 800ff2c:	bd10      	pop	{r4, pc}
	...

0800ff30 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800ff30:	4b02      	ldr	r3, [pc, #8]	; (800ff3c <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800ff32:	6018      	str	r0, [r3, #0]
 800ff34:	4b02      	ldr	r3, [pc, #8]	; (800ff40 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800ff36:	6019      	str	r1, [r3, #0]
 800ff38:	4770      	bx	lr
 800ff3a:	bf00      	nop
 800ff3c:	20013760 	.word	0x20013760
 800ff40:	20013764 	.word	0x20013764

0800ff44 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800ff44:	4a02      	ldr	r2, [pc, #8]	; (800ff50 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800ff46:	2300      	movs	r3, #0
 800ff48:	6013      	str	r3, [r2, #0]
 800ff4a:	4a02      	ldr	r2, [pc, #8]	; (800ff54 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800ff4c:	6013      	str	r3, [r2, #0]
 800ff4e:	4770      	bx	lr
 800ff50:	20013760 	.word	0x20013760
 800ff54:	20013764 	.word	0x20013764

0800ff58 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv>:
 800ff58:	4b01      	ldr	r3, [pc, #4]	; (800ff60 <_ZN8touchgfx20CanvasWidgetRenderer16getOutlineBufferEv+0x8>)
 800ff5a:	6818      	ldr	r0, [r3, #0]
 800ff5c:	4770      	bx	lr
 800ff5e:	bf00      	nop
 800ff60:	20013760 	.word	0x20013760

0800ff64 <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv>:
 800ff64:	4b01      	ldr	r3, [pc, #4]	; (800ff6c <_ZN8touchgfx20CanvasWidgetRenderer20getOutlineBufferSizeEv+0x8>)
 800ff66:	6818      	ldr	r0, [r3, #0]
 800ff68:	4770      	bx	lr
 800ff6a:	bf00      	nop
 800ff6c:	20013764 	.word	0x20013764

0800ff70 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ff70:	b510      	push	{r4, lr}
 800ff72:	6803      	ldr	r3, [r0, #0]
 800ff74:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff76:	460c      	mov	r4, r1
 800ff78:	4798      	blx	r3
 800ff7a:	1b03      	subs	r3, r0, r4
 800ff7c:	4258      	negs	r0, r3
 800ff7e:	4158      	adcs	r0, r3
 800ff80:	bd10      	pop	{r4, pc}
	...

0800ff84 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ff84:	4b01      	ldr	r3, [pc, #4]	; (800ff8c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ff86:	6019      	str	r1, [r3, #0]
 800ff88:	4770      	bx	lr
 800ff8a:	bf00      	nop
 800ff8c:	20013768 	.word	0x20013768

0800ff90 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ff90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff94:	4696      	mov	lr, r2
 800ff96:	4605      	mov	r5, r0
 800ff98:	4614      	mov	r4, r2
 800ff9a:	460e      	mov	r6, r1
 800ff9c:	461f      	mov	r7, r3
 800ff9e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ffa2:	b097      	sub	sp, #92	; 0x5c
 800ffa4:	f10d 0c1c 	add.w	ip, sp, #28
 800ffa8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ffac:	f8de 3000 	ldr.w	r3, [lr]
 800ffb0:	f8cc 3000 	str.w	r3, [ip]
 800ffb4:	f104 0e14 	add.w	lr, r4, #20
 800ffb8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ffbc:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ffc0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ffc4:	f8de 3000 	ldr.w	r3, [lr]
 800ffc8:	f8cc 3000 	str.w	r3, [ip]
 800ffcc:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ffd0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ffd4:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ffd8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ffdc:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800ffe0:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800ffe4:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800ffe8:	f8de 3000 	ldr.w	r3, [lr]
 800ffec:	f8cc 3000 	str.w	r3, [ip]
 800fff0:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800fff2:	682b      	ldr	r3, [r5, #0]
 800fff4:	9201      	str	r2, [sp, #4]
 800fff6:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800fffa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800fffc:	9200      	str	r2, [sp, #0]
 800fffe:	f8cd 8008 	str.w	r8, [sp, #8]
 8010002:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 8010006:	aa07      	add	r2, sp, #28
 8010008:	463b      	mov	r3, r7
 801000a:	4631      	mov	r1, r6
 801000c:	4628      	mov	r0, r5
 801000e:	47d8      	blx	fp
 8010010:	46a6      	mov	lr, r4
 8010012:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8010016:	f10d 0c1c 	add.w	ip, sp, #28
 801001a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801001e:	f8de 3000 	ldr.w	r3, [lr]
 8010022:	f8cc 3000 	str.w	r3, [ip]
 8010026:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 801002a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801002e:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8010032:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010036:	343c      	adds	r4, #60	; 0x3c
 8010038:	f8de 3000 	ldr.w	r3, [lr]
 801003c:	f8cc 3000 	str.w	r3, [ip]
 8010040:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010042:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010046:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801004a:	6823      	ldr	r3, [r4, #0]
 801004c:	f8cc 3000 	str.w	r3, [ip]
 8010050:	682b      	ldr	r3, [r5, #0]
 8010052:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010056:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010058:	9201      	str	r2, [sp, #4]
 801005a:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801005c:	9200      	str	r2, [sp, #0]
 801005e:	f8cd 8008 	str.w	r8, [sp, #8]
 8010062:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8010064:	aa07      	add	r2, sp, #28
 8010066:	463b      	mov	r3, r7
 8010068:	4631      	mov	r1, r6
 801006a:	4628      	mov	r0, r5
 801006c:	47a0      	blx	r4
 801006e:	b017      	add	sp, #92	; 0x5c
 8010070:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010074 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8010074:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010078:	b08d      	sub	sp, #52	; 0x34
 801007a:	4688      	mov	r8, r1
 801007c:	9916      	ldr	r1, [sp, #88]	; 0x58
 801007e:	f8d3 c000 	ldr.w	ip, [r3]
 8010082:	680f      	ldr	r7, [r1, #0]
 8010084:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8010088:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 801008c:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8010090:	edd3 6a07 	vldr	s13, [r3, #28]
 8010094:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010096:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 801009a:	f9b1 9000 	ldrsh.w	r9, [r1]
 801009e:	f9ba 1000 	ldrsh.w	r1, [sl]
 80100a2:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 80100a6:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 80100aa:	eba7 070c 	sub.w	r7, r7, ip
 80100ae:	42bc      	cmp	r4, r7
 80100b0:	bfa8      	it	ge
 80100b2:	463c      	movge	r4, r7
 80100b4:	ee07 4a90 	vmov	s15, r4
 80100b8:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80100bc:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 80100c0:	ee25 4a04 	vmul.f32	s8, s10, s8
 80100c4:	ee65 4a24 	vmul.f32	s9, s10, s9
 80100c8:	ee25 5a27 	vmul.f32	s10, s10, s15
 80100cc:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80100d0:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80100d4:	eb09 0e0c 	add.w	lr, r9, ip
 80100d8:	4571      	cmp	r1, lr
 80100da:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80100de:	ee32 1a05 	vadd.f32	s2, s4, s10
 80100e2:	ee36 0a84 	vadd.f32	s0, s13, s8
 80100e6:	ee61 1a87 	vmul.f32	s3, s3, s14
 80100ea:	ee22 2a07 	vmul.f32	s4, s4, s14
 80100ee:	f340 808d 	ble.w	801020c <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80100f2:	eba1 060e 	sub.w	r6, r1, lr
 80100f6:	fb96 f5f4 	sdiv	r5, r6, r4
 80100fa:	ee07 5a10 	vmov	s14, r5
 80100fe:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8010102:	2d00      	cmp	r5, #0
 8010104:	fb04 6615 	mls	r6, r4, r5, r6
 8010108:	eea7 0a04 	vfma.f32	s0, s14, s8
 801010c:	eee7 0a24 	vfma.f32	s1, s14, s9
 8010110:	eea7 1a05 	vfma.f32	s2, s14, s10
 8010114:	dd13      	ble.n	801013e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8010116:	ee70 6a44 	vsub.f32	s13, s0, s8
 801011a:	ee70 1ae4 	vsub.f32	s3, s1, s9
 801011e:	eef5 6a40 	vcmp.f32	s13, #0.0
 8010122:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010126:	bf18      	it	ne
 8010128:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 801012c:	ee31 2a45 	vsub.f32	s4, s2, s10
 8010130:	bf08      	it	eq
 8010132:	eeb0 7a67 	vmoveq.f32	s14, s15
 8010136:	ee61 1a87 	vmul.f32	s3, s3, s14
 801013a:	ee22 2a07 	vmul.f32	s4, s4, s14
 801013e:	fb05 f204 	mul.w	r2, r5, r4
 8010142:	1abf      	subs	r7, r7, r2
 8010144:	4494      	add	ip, r2
 8010146:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 801014a:	4411      	add	r1, r2
 801014c:	eb09 020c 	add.w	r2, r9, ip
 8010150:	443a      	add	r2, r7
 8010152:	b209      	sxth	r1, r1
 8010154:	428a      	cmp	r2, r1
 8010156:	bfc4      	itt	gt
 8010158:	eba1 0209 	subgt.w	r2, r1, r9
 801015c:	eba2 070c 	subgt.w	r7, r2, ip
 8010160:	2f00      	cmp	r7, #0
 8010162:	dd50      	ble.n	8010206 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8010164:	fb97 f1f4 	sdiv	r1, r7, r4
 8010168:	fb04 7211 	mls	r2, r4, r1, r7
 801016c:	b90a      	cbnz	r2, 8010172 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801016e:	3901      	subs	r1, #1
 8010170:	4622      	mov	r2, r4
 8010172:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8010176:	6840      	ldr	r0, [r0, #4]
 8010178:	900b      	str	r0, [sp, #44]	; 0x2c
 801017a:	f8d0 a000 	ldr.w	sl, [r0]
 801017e:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8010180:	9008      	str	r0, [sp, #32]
 8010182:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8010186:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010188:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 801018c:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8010190:	695b      	ldr	r3, [r3, #20]
 8010192:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010194:	445b      	add	r3, fp
 8010196:	eef0 6a42 	vmov.f32	s13, s4
 801019a:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801019e:	ee21 3a23 	vmul.f32	s6, s2, s7
 80101a2:	ee72 7ae1 	vsub.f32	s15, s5, s3
 80101a6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80101aa:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80101ae:	9307      	str	r3, [sp, #28]
 80101b0:	ee17 7a90 	vmov	r7, s15
 80101b4:	ee73 7a42 	vsub.f32	s15, s6, s4
 80101b8:	eeb0 7a61 	vmov.f32	s14, s3
 80101bc:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 80101c0:	ee16 3a90 	vmov	r3, s13
 80101c4:	fb97 f7f4 	sdiv	r7, r7, r4
 80101c8:	ee17 ca90 	vmov	ip, s15
 80101cc:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 80101d0:	fb9c fcf4 	sdiv	ip, ip, r4
 80101d4:	fb0c 3306 	mla	r3, ip, r6, r3
 80101d8:	9302      	str	r3, [sp, #8]
 80101da:	ee17 3a10 	vmov	r3, s14
 80101de:	44b6      	add	lr, r6
 80101e0:	fb04 e505 	mla	r5, r4, r5, lr
 80101e4:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80101e8:	fb07 3706 	mla	r7, r7, r6, r3
 80101ec:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80101f0:	e9cd 4700 	strd	r4, r7, [sp]
 80101f4:	2900      	cmp	r1, #0
 80101f6:	bfcc      	ite	gt
 80101f8:	46a1      	movgt	r9, r4
 80101fa:	4691      	movle	r9, r2
 80101fc:	eba9 0306 	sub.w	r3, r9, r6
 8010200:	f8da 4008 	ldr.w	r4, [sl, #8]
 8010204:	47a0      	blx	r4
 8010206:	b00d      	add	sp, #52	; 0x34
 8010208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801020c:	2500      	movs	r5, #0
 801020e:	462e      	mov	r6, r5
 8010210:	e799      	b.n	8010146 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08010214 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8010214:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010218:	b0db      	sub	sp, #364	; 0x16c
 801021a:	461d      	mov	r5, r3
 801021c:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 8010220:	930a      	str	r3, [sp, #40]	; 0x28
 8010222:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 8010226:	930b      	str	r3, [sp, #44]	; 0x2c
 8010228:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 801022c:	9310      	str	r3, [sp, #64]	; 0x40
 801022e:	6803      	ldr	r3, [r0, #0]
 8010230:	910f      	str	r1, [sp, #60]	; 0x3c
 8010232:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 8010234:	9009      	str	r0, [sp, #36]	; 0x24
 8010236:	4614      	mov	r4, r2
 8010238:	4629      	mov	r1, r5
 801023a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801023e:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 8010242:	47b8      	blx	r7
 8010244:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010246:	6058      	str	r0, [r3, #4]
 8010248:	2800      	cmp	r0, #0
 801024a:	f000 83a1 	beq.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801024e:	682b      	ldr	r3, [r5, #0]
 8010250:	9314      	str	r3, [sp, #80]	; 0x50
 8010252:	686b      	ldr	r3, [r5, #4]
 8010254:	9315      	str	r3, [sp, #84]	; 0x54
 8010256:	4bc4      	ldr	r3, [pc, #784]	; (8010568 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010258:	ed94 7a02 	vldr	s14, [r4, #8]
 801025c:	7819      	ldrb	r1, [r3, #0]
 801025e:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8010262:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010266:	2900      	cmp	r1, #0
 8010268:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801026c:	bf16      	itet	ne
 801026e:	4619      	movne	r1, r3
 8010270:	4611      	moveq	r1, r2
 8010272:	4613      	movne	r3, r2
 8010274:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010278:	9116      	str	r1, [sp, #88]	; 0x58
 801027a:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801027e:	f240 8387 	bls.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010282:	ed94 7a07 	vldr	s14, [r4, #28]
 8010286:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801028a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801028e:	f240 837f 	bls.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010292:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8010296:	eeb4 7ae7 	vcmpe.f32	s14, s15
 801029a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801029e:	f240 8377 	bls.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102a2:	6822      	ldr	r2, [r4, #0]
 80102a4:	4bb1      	ldr	r3, [pc, #708]	; (801056c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 80102a6:	429a      	cmp	r2, r3
 80102a8:	f2c0 8372 	blt.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102ac:	49b0      	ldr	r1, [pc, #704]	; (8010570 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 80102ae:	6963      	ldr	r3, [r4, #20]
 80102b0:	428a      	cmp	r2, r1
 80102b2:	f300 836d 	bgt.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102b6:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80102ba:	48ae      	ldr	r0, [pc, #696]	; (8010574 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 80102bc:	33ff      	adds	r3, #255	; 0xff
 80102be:	4283      	cmp	r3, r0
 80102c0:	f200 8366 	bhi.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102c4:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 80102c6:	4dac      	ldr	r5, [pc, #688]	; (8010578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 80102c8:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 80102cc:	33ff      	adds	r3, #255	; 0xff
 80102ce:	42ab      	cmp	r3, r5
 80102d0:	f200 835e 	bhi.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102d4:	6862      	ldr	r2, [r4, #4]
 80102d6:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 80102da:	33ff      	adds	r3, #255	; 0xff
 80102dc:	4283      	cmp	r3, r0
 80102de:	f200 8357 	bhi.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102e2:	69a1      	ldr	r1, [r4, #24]
 80102e4:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80102e8:	33ff      	adds	r3, #255	; 0xff
 80102ea:	4283      	cmp	r3, r0
 80102ec:	f200 8350 	bhi.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102f0:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80102f2:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80102f6:	30ff      	adds	r0, #255	; 0xff
 80102f8:	42a8      	cmp	r0, r5
 80102fa:	f200 8349 	bhi.w	8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102fe:	428a      	cmp	r2, r1
 8010300:	f280 8110 	bge.w	8010524 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8010304:	429a      	cmp	r2, r3
 8010306:	f300 8119 	bgt.w	801053c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 801030a:	4299      	cmp	r1, r3
 801030c:	f280 811d 	bge.w	801054a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8010310:	2502      	movs	r5, #2
 8010312:	2701      	movs	r7, #1
 8010314:	46a9      	mov	r9, r5
 8010316:	46b8      	mov	r8, r7
 8010318:	f04f 0a00 	mov.w	sl, #0
 801031c:	4621      	mov	r1, r4
 801031e:	a849      	add	r0, sp, #292	; 0x124
 8010320:	f003 fe54 	bl	8013fcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8010324:	4622      	mov	r2, r4
 8010326:	4653      	mov	r3, sl
 8010328:	a949      	add	r1, sp, #292	; 0x124
 801032a:	f8cd 9000 	str.w	r9, [sp]
 801032e:	a819      	add	r0, sp, #100	; 0x64
 8010330:	f003 ff7c 	bl	801422c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010334:	4622      	mov	r2, r4
 8010336:	4653      	mov	r3, sl
 8010338:	a949      	add	r1, sp, #292	; 0x124
 801033a:	f8cd 8000 	str.w	r8, [sp]
 801033e:	a829      	add	r0, sp, #164	; 0xa4
 8010340:	f003 ff74 	bl	801422c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010344:	4643      	mov	r3, r8
 8010346:	4622      	mov	r2, r4
 8010348:	a949      	add	r1, sp, #292	; 0x124
 801034a:	f8cd 9000 	str.w	r9, [sp]
 801034e:	a839      	add	r0, sp, #228	; 0xe4
 8010350:	f003 ff6c 	bl	801422c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010354:	42af      	cmp	r7, r5
 8010356:	bfb5      	itete	lt
 8010358:	2300      	movlt	r3, #0
 801035a:	2301      	movge	r3, #1
 801035c:	930e      	strlt	r3, [sp, #56]	; 0x38
 801035e:	930e      	strge	r3, [sp, #56]	; 0x38
 8010360:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010362:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010366:	af12      	add	r7, sp, #72	; 0x48
 8010368:	bfb9      	ittee	lt
 801036a:	ad29      	addlt	r5, sp, #164	; 0xa4
 801036c:	ac19      	addlt	r4, sp, #100	; 0x64
 801036e:	ad19      	addge	r5, sp, #100	; 0x64
 8010370:	ac29      	addge	r4, sp, #164	; 0xa4
 8010372:	e887 0003 	stmia.w	r7, {r0, r1}
 8010376:	b928      	cbnz	r0, 8010384 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010378:	4b80      	ldr	r3, [pc, #512]	; (801057c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 801037a:	6818      	ldr	r0, [r3, #0]
 801037c:	6803      	ldr	r3, [r0, #0]
 801037e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010380:	4798      	blx	r3
 8010382:	6038      	str	r0, [r7, #0]
 8010384:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010386:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 801038a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801038e:	930c      	str	r3, [sp, #48]	; 0x30
 8010390:	990c      	ldr	r1, [sp, #48]	; 0x30
 8010392:	6963      	ldr	r3, [r4, #20]
 8010394:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010396:	440b      	add	r3, r1
 8010398:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 801039c:	4408      	add	r0, r1
 801039e:	b200      	sxth	r0, r0
 80103a0:	4283      	cmp	r3, r0
 80103a2:	900d      	str	r0, [sp, #52]	; 0x34
 80103a4:	f280 80dd 	bge.w	8010562 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 80103a8:	428b      	cmp	r3, r1
 80103aa:	da08      	bge.n	80103be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80103ac:	2a00      	cmp	r2, #0
 80103ae:	dd06      	ble.n	80103be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80103b0:	1acb      	subs	r3, r1, r3
 80103b2:	429a      	cmp	r2, r3
 80103b4:	f2c0 80e4 	blt.w	8010580 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 80103b8:	2b00      	cmp	r3, #0
 80103ba:	f300 80e2 	bgt.w	8010582 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 80103be:	6967      	ldr	r7, [r4, #20]
 80103c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80103c2:	443b      	add	r3, r7
 80103c4:	461f      	mov	r7, r3
 80103c6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80103c8:	1bdf      	subs	r7, r3, r7
 80103ca:	4297      	cmp	r7, r2
 80103cc:	bfa8      	it	ge
 80103ce:	4617      	movge	r7, r2
 80103d0:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80103d4:	2f00      	cmp	r7, #0
 80103d6:	f340 8166 	ble.w	80106a6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 80103da:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80103dc:	6829      	ldr	r1, [r5, #0]
 80103de:	f9b3 2000 	ldrsh.w	r2, [r3]
 80103e2:	f9bb 3000 	ldrsh.w	r3, [fp]
 80103e6:	6820      	ldr	r0, [r4, #0]
 80103e8:	4411      	add	r1, r2
 80103ea:	4299      	cmp	r1, r3
 80103ec:	dd1a      	ble.n	8010424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80103ee:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80103f2:	440b      	add	r3, r1
 80103f4:	4402      	add	r2, r0
 80103f6:	b21b      	sxth	r3, r3
 80103f8:	429a      	cmp	r2, r3
 80103fa:	dc13      	bgt.n	8010424 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80103fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010400:	681b      	ldr	r3, [r3, #0]
 8010402:	9206      	str	r2, [sp, #24]
 8010404:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010406:	9205      	str	r2, [sp, #20]
 8010408:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801040a:	9500      	str	r5, [sp, #0]
 801040c:	e9cd b203 	strd	fp, r2, [sp, #12]
 8010410:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010412:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010414:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010418:	a912      	add	r1, sp, #72	; 0x48
 801041a:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801041e:	aa49      	add	r2, sp, #292	; 0x124
 8010420:	4623      	mov	r3, r4
 8010422:	47c8      	blx	r9
 8010424:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010428:	441a      	add	r2, r3
 801042a:	6963      	ldr	r3, [r4, #20]
 801042c:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 8010430:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010434:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010438:	68a1      	ldr	r1, [r4, #8]
 801043a:	ed94 6a08 	vldr	s12, [r4, #32]
 801043e:	6022      	str	r2, [r4, #0]
 8010440:	3301      	adds	r3, #1
 8010442:	6163      	str	r3, [r4, #20]
 8010444:	69a3      	ldr	r3, [r4, #24]
 8010446:	ee37 7a27 	vadd.f32	s14, s14, s15
 801044a:	3b01      	subs	r3, #1
 801044c:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 8010450:	61a3      	str	r3, [r4, #24]
 8010452:	6923      	ldr	r3, [r4, #16]
 8010454:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010458:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801045c:	edd4 6a07 	vldr	s13, [r4, #28]
 8010460:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010464:	440b      	add	r3, r1
 8010466:	68e1      	ldr	r1, [r4, #12]
 8010468:	6123      	str	r3, [r4, #16]
 801046a:	ee76 6a86 	vadd.f32	s13, s13, s12
 801046e:	428b      	cmp	r3, r1
 8010470:	edc4 6a07 	vstr	s13, [r4, #28]
 8010474:	db15      	blt.n	80104a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010476:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 801047a:	ee76 6a26 	vadd.f32	s13, s12, s13
 801047e:	3201      	adds	r2, #1
 8010480:	edc4 6a07 	vstr	s13, [r4, #28]
 8010484:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010488:	6022      	str	r2, [r4, #0]
 801048a:	ee36 7a87 	vadd.f32	s14, s13, s14
 801048e:	1a5b      	subs	r3, r3, r1
 8010490:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010494:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010498:	6123      	str	r3, [r4, #16]
 801049a:	ee77 7a27 	vadd.f32	s15, s14, s15
 801049e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80104a2:	e9d5 2300 	ldrd	r2, r3, [r5]
 80104a6:	441a      	add	r2, r3
 80104a8:	696b      	ldr	r3, [r5, #20]
 80104aa:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80104ae:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80104b2:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80104b6:	68a9      	ldr	r1, [r5, #8]
 80104b8:	ed95 6a08 	vldr	s12, [r5, #32]
 80104bc:	602a      	str	r2, [r5, #0]
 80104be:	3301      	adds	r3, #1
 80104c0:	616b      	str	r3, [r5, #20]
 80104c2:	69ab      	ldr	r3, [r5, #24]
 80104c4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80104c8:	3b01      	subs	r3, #1
 80104ca:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80104ce:	61ab      	str	r3, [r5, #24]
 80104d0:	692b      	ldr	r3, [r5, #16]
 80104d2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80104d6:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80104da:	edd5 6a07 	vldr	s13, [r5, #28]
 80104de:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80104e2:	440b      	add	r3, r1
 80104e4:	68e9      	ldr	r1, [r5, #12]
 80104e6:	612b      	str	r3, [r5, #16]
 80104e8:	ee76 6a86 	vadd.f32	s13, s13, s12
 80104ec:	428b      	cmp	r3, r1
 80104ee:	edc5 6a07 	vstr	s13, [r5, #28]
 80104f2:	db15      	blt.n	8010520 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80104f4:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80104f8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80104fc:	3201      	adds	r2, #1
 80104fe:	edc5 6a07 	vstr	s13, [r5, #28]
 8010502:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010506:	602a      	str	r2, [r5, #0]
 8010508:	ee36 7a87 	vadd.f32	s14, s13, s14
 801050c:	1a5b      	subs	r3, r3, r1
 801050e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010512:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010516:	612b      	str	r3, [r5, #16]
 8010518:	ee77 7a27 	vadd.f32	s15, s14, s15
 801051c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010520:	3f01      	subs	r7, #1
 8010522:	e757      	b.n	80103d4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8010524:	4299      	cmp	r1, r3
 8010526:	dc13      	bgt.n	8010550 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8010528:	429a      	cmp	r2, r3
 801052a:	da14      	bge.n	8010556 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 801052c:	2502      	movs	r5, #2
 801052e:	2703      	movs	r7, #3
 8010530:	46a9      	mov	r9, r5
 8010532:	f04f 0800 	mov.w	r8, #0
 8010536:	f04f 0a01 	mov.w	sl, #1
 801053a:	e6ef      	b.n	801031c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801053c:	2501      	movs	r5, #1
 801053e:	2700      	movs	r7, #0
 8010540:	46a9      	mov	r9, r5
 8010542:	46b8      	mov	r8, r7
 8010544:	f04f 0a02 	mov.w	sl, #2
 8010548:	e6e8      	b.n	801031c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 801054a:	2501      	movs	r5, #1
 801054c:	2702      	movs	r7, #2
 801054e:	e6e1      	b.n	8010314 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8010550:	2500      	movs	r5, #0
 8010552:	2701      	movs	r7, #1
 8010554:	e7f4      	b.n	8010540 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8010556:	2702      	movs	r7, #2
 8010558:	2503      	movs	r5, #3
 801055a:	f04f 0900 	mov.w	r9, #0
 801055e:	46b8      	mov	r8, r7
 8010560:	e7e9      	b.n	8010536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8010562:	4613      	mov	r3, r2
 8010564:	e728      	b.n	80103b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010566:	bf00      	nop
 8010568:	20013750 	.word	0x20013750
 801056c:	fffd8f01 	.word	0xfffd8f01
 8010570:	00027100 	.word	0x00027100
 8010574:	0004e1ff 	.word	0x0004e1ff
 8010578:	0004e1fe 	.word	0x0004e1fe
 801057c:	20013758 	.word	0x20013758
 8010580:	4613      	mov	r3, r2
 8010582:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010584:	9111      	str	r1, [sp, #68]	; 0x44
 8010586:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 801058a:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801058e:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 8010590:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010594:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8010598:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 801059c:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 80105a0:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 80105a4:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 80105a8:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 80105ac:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 80105b0:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 80105b4:	469e      	mov	lr, r3
 80105b6:	469c      	mov	ip, r3
 80105b8:	f04f 0900 	mov.w	r9, #0
 80105bc:	f1bc 0f00 	cmp.w	ip, #0
 80105c0:	d147      	bne.n	8010652 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 80105c2:	eb03 0c07 	add.w	ip, r3, r7
 80105c6:	1ad7      	subs	r7, r2, r3
 80105c8:	f1b9 0f00 	cmp.w	r9, #0
 80105cc:	d009      	beq.n	80105e2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 80105ce:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 80105d2:	9029      	str	r0, [sp, #164]	; 0xa4
 80105d4:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 80105d8:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 80105dc:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 80105e0:	912d      	str	r1, [sp, #180]	; 0xb4
 80105e2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80105e4:	9111      	str	r1, [sp, #68]	; 0x44
 80105e6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80105ea:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80105ee:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80105f2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80105f6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80105fa:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80105fe:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 8010602:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 8010606:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 801060a:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 801060e:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 8010612:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 8010616:	f04f 0800 	mov.w	r8, #0
 801061a:	f1be 0f00 	cmp.w	lr, #0
 801061e:	d031      	beq.n	8010684 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8010620:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010622:	4431      	add	r1, r6
 8010624:	4549      	cmp	r1, r9
 8010626:	4450      	add	r0, sl
 8010628:	ee76 6aa4 	vadd.f32	s13, s13, s9
 801062c:	ee37 7a04 	vadd.f32	s14, s14, s8
 8010630:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010634:	db08      	blt.n	8010648 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8010636:	ee77 7a85 	vadd.f32	s15, s15, s10
 801063a:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801063e:	ee37 7a06 	vadd.f32	s14, s14, s12
 8010642:	3001      	adds	r0, #1
 8010644:	eba1 0109 	sub.w	r1, r1, r9
 8010648:	f10e 3eff 	add.w	lr, lr, #4294967295
 801064c:	f04f 0801 	mov.w	r8, #1
 8010650:	e7e3      	b.n	801061a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8010652:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010654:	4431      	add	r1, r6
 8010656:	4541      	cmp	r1, r8
 8010658:	4450      	add	r0, sl
 801065a:	ee37 7a24 	vadd.f32	s14, s14, s9
 801065e:	ee77 7a84 	vadd.f32	s15, s15, s8
 8010662:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010666:	db08      	blt.n	801067a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010668:	ee76 6a85 	vadd.f32	s13, s13, s10
 801066c:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010670:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010674:	3001      	adds	r0, #1
 8010676:	eba1 0108 	sub.w	r1, r1, r8
 801067a:	f10c 3cff 	add.w	ip, ip, #4294967295
 801067e:	f04f 0901 	mov.w	r9, #1
 8010682:	e79b      	b.n	80105bc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010684:	449c      	add	ip, r3
 8010686:	1aff      	subs	r7, r7, r3
 8010688:	f1b8 0f00 	cmp.w	r8, #0
 801068c:	d009      	beq.n	80106a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801068e:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010692:	9019      	str	r0, [sp, #100]	; 0x64
 8010694:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010698:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 801069c:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 80106a0:	911d      	str	r1, [sp, #116]	; 0x74
 80106a2:	1ad2      	subs	r2, r2, r3
 80106a4:	e68b      	b.n	80103be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 80106a6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80106a8:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 80106aa:	2b00      	cmp	r3, #0
 80106ac:	f000 80d1 	beq.w	8010852 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 80106b0:	ad19      	add	r5, sp, #100	; 0x64
 80106b2:	ac39      	add	r4, sp, #228	; 0xe4
 80106b4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80106b6:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 80106ba:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80106be:	930c      	str	r3, [sp, #48]	; 0x30
 80106c0:	990c      	ldr	r1, [sp, #48]	; 0x30
 80106c2:	6963      	ldr	r3, [r4, #20]
 80106c4:	440b      	add	r3, r1
 80106c6:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 80106ca:	4408      	add	r0, r1
 80106cc:	b200      	sxth	r0, r0
 80106ce:	4283      	cmp	r3, r0
 80106d0:	900d      	str	r0, [sp, #52]	; 0x34
 80106d2:	f280 80c1 	bge.w	8010858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 80106d6:	428b      	cmp	r3, r1
 80106d8:	da08      	bge.n	80106ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80106da:	2a00      	cmp	r2, #0
 80106dc:	dd06      	ble.n	80106ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 80106de:	1acb      	subs	r3, r1, r3
 80106e0:	429a      	cmp	r2, r3
 80106e2:	f2c0 80bb 	blt.w	801085c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80106e6:	2b00      	cmp	r3, #0
 80106e8:	f300 80b9 	bgt.w	801085e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80106ec:	6967      	ldr	r7, [r4, #20]
 80106ee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80106f0:	443b      	add	r3, r7
 80106f2:	461f      	mov	r7, r3
 80106f4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80106f6:	1bdf      	subs	r7, r3, r7
 80106f8:	4297      	cmp	r7, r2
 80106fa:	bfa8      	it	ge
 80106fc:	4617      	movge	r7, r2
 80106fe:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010702:	2f00      	cmp	r7, #0
 8010704:	f340 813c 	ble.w	8010980 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8010708:	9b64      	ldr	r3, [sp, #400]	; 0x190
 801070a:	6829      	ldr	r1, [r5, #0]
 801070c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8010710:	f9bb 3000 	ldrsh.w	r3, [fp]
 8010714:	6820      	ldr	r0, [r4, #0]
 8010716:	4411      	add	r1, r2
 8010718:	4299      	cmp	r1, r3
 801071a:	dd1a      	ble.n	8010752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801071c:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8010720:	440b      	add	r3, r1
 8010722:	4402      	add	r2, r0
 8010724:	b21b      	sxth	r3, r3
 8010726:	429a      	cmp	r2, r3
 8010728:	dc13      	bgt.n	8010752 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 801072a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801072c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801072e:	681b      	ldr	r3, [r3, #0]
 8010730:	9206      	str	r2, [sp, #24]
 8010732:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8010734:	9205      	str	r2, [sp, #20]
 8010736:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8010738:	9500      	str	r5, [sp, #0]
 801073a:	e9cd b203 	strd	fp, r2, [sp, #12]
 801073e:	9a64      	ldr	r2, [sp, #400]	; 0x190
 8010740:	9809      	ldr	r0, [sp, #36]	; 0x24
 8010742:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010746:	a912      	add	r1, sp, #72	; 0x48
 8010748:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 801074c:	aa49      	add	r2, sp, #292	; 0x124
 801074e:	4623      	mov	r3, r4
 8010750:	47c8      	blx	r9
 8010752:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010756:	441a      	add	r2, r3
 8010758:	6963      	ldr	r3, [r4, #20]
 801075a:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801075e:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 8010762:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010766:	68a1      	ldr	r1, [r4, #8]
 8010768:	ed94 6a08 	vldr	s12, [r4, #32]
 801076c:	6022      	str	r2, [r4, #0]
 801076e:	3301      	adds	r3, #1
 8010770:	6163      	str	r3, [r4, #20]
 8010772:	69a3      	ldr	r3, [r4, #24]
 8010774:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010778:	3b01      	subs	r3, #1
 801077a:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801077e:	61a3      	str	r3, [r4, #24]
 8010780:	6923      	ldr	r3, [r4, #16]
 8010782:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010786:	ee77 7aa6 	vadd.f32	s15, s15, s13
 801078a:	edd4 6a07 	vldr	s13, [r4, #28]
 801078e:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010792:	440b      	add	r3, r1
 8010794:	68e1      	ldr	r1, [r4, #12]
 8010796:	6123      	str	r3, [r4, #16]
 8010798:	ee76 6a86 	vadd.f32	s13, s13, s12
 801079c:	428b      	cmp	r3, r1
 801079e:	edc4 6a07 	vstr	s13, [r4, #28]
 80107a2:	db15      	blt.n	80107d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80107a4:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 80107a8:	ee76 6a26 	vadd.f32	s13, s12, s13
 80107ac:	3201      	adds	r2, #1
 80107ae:	edc4 6a07 	vstr	s13, [r4, #28]
 80107b2:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 80107b6:	6022      	str	r2, [r4, #0]
 80107b8:	ee36 7a87 	vadd.f32	s14, s13, s14
 80107bc:	1a5b      	subs	r3, r3, r1
 80107be:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 80107c2:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 80107c6:	6123      	str	r3, [r4, #16]
 80107c8:	ee77 7a27 	vadd.f32	s15, s14, s15
 80107cc:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 80107d0:	e9d5 2300 	ldrd	r2, r3, [r5]
 80107d4:	441a      	add	r2, r3
 80107d6:	696b      	ldr	r3, [r5, #20]
 80107d8:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 80107dc:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 80107e0:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80107e4:	68a9      	ldr	r1, [r5, #8]
 80107e6:	ed95 6a08 	vldr	s12, [r5, #32]
 80107ea:	602a      	str	r2, [r5, #0]
 80107ec:	3301      	adds	r3, #1
 80107ee:	616b      	str	r3, [r5, #20]
 80107f0:	69ab      	ldr	r3, [r5, #24]
 80107f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80107f6:	3b01      	subs	r3, #1
 80107f8:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80107fc:	61ab      	str	r3, [r5, #24]
 80107fe:	692b      	ldr	r3, [r5, #16]
 8010800:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010804:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010808:	edd5 6a07 	vldr	s13, [r5, #28]
 801080c:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 8010810:	440b      	add	r3, r1
 8010812:	68e9      	ldr	r1, [r5, #12]
 8010814:	612b      	str	r3, [r5, #16]
 8010816:	ee76 6a86 	vadd.f32	s13, s13, s12
 801081a:	428b      	cmp	r3, r1
 801081c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010820:	db15      	blt.n	801084e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 8010822:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 8010826:	ee76 6a26 	vadd.f32	s13, s12, s13
 801082a:	3201      	adds	r2, #1
 801082c:	edc5 6a07 	vstr	s13, [r5, #28]
 8010830:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 8010834:	602a      	str	r2, [r5, #0]
 8010836:	ee36 7a87 	vadd.f32	s14, s13, s14
 801083a:	1a5b      	subs	r3, r3, r1
 801083c:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010840:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010844:	612b      	str	r3, [r5, #16]
 8010846:	ee77 7a27 	vadd.f32	s15, s14, s15
 801084a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801084e:	3f01      	subs	r7, #1
 8010850:	e757      	b.n	8010702 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 8010852:	ad39      	add	r5, sp, #228	; 0xe4
 8010854:	ac19      	add	r4, sp, #100	; 0x64
 8010856:	e72d      	b.n	80106b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010858:	4613      	mov	r3, r2
 801085a:	e744      	b.n	80106e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 801085c:	4613      	mov	r3, r2
 801085e:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 8010862:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010864:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010868:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 801086c:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 8010870:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010874:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010878:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 801087c:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 8010880:	993d      	ldr	r1, [sp, #244]	; 0xf4
 8010882:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010886:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 801088a:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801088e:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 8010892:	960e      	str	r6, [sp, #56]	; 0x38
 8010894:	469e      	mov	lr, r3
 8010896:	461f      	mov	r7, r3
 8010898:	f04f 0900 	mov.w	r9, #0
 801089c:	2f00      	cmp	r7, #0
 801089e:	d146      	bne.n	801092e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80108a0:	449c      	add	ip, r3
 80108a2:	1ad7      	subs	r7, r2, r3
 80108a4:	f1b9 0f00 	cmp.w	r9, #0
 80108a8:	d009      	beq.n	80108be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80108aa:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 80108ae:	9039      	str	r0, [sp, #228]	; 0xe4
 80108b0:	913d      	str	r1, [sp, #244]	; 0xf4
 80108b2:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 80108b6:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 80108ba:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 80108be:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80108c0:	910e      	str	r1, [sp, #56]	; 0x38
 80108c2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80108c6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80108ca:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80108ce:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80108d2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80108d6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80108da:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80108de:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80108e2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80108e6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80108ea:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80108ee:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80108f2:	f04f 0800 	mov.w	r8, #0
 80108f6:	f1be 0f00 	cmp.w	lr, #0
 80108fa:	d030      	beq.n	801095e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80108fc:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80108fe:	4431      	add	r1, r6
 8010900:	4549      	cmp	r1, r9
 8010902:	4450      	add	r0, sl
 8010904:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8010908:	ee37 7a04 	vadd.f32	s14, s14, s8
 801090c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8010910:	db08      	blt.n	8010924 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 8010912:	ee77 7a85 	vadd.f32	s15, s15, s10
 8010916:	ee76 6aa5 	vadd.f32	s13, s13, s11
 801091a:	ee37 7a06 	vadd.f32	s14, s14, s12
 801091e:	3001      	adds	r0, #1
 8010920:	eba1 0109 	sub.w	r1, r1, r9
 8010924:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010928:	f04f 0801 	mov.w	r8, #1
 801092c:	e7e3      	b.n	80108f6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801092e:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 8010930:	4431      	add	r1, r6
 8010932:	4541      	cmp	r1, r8
 8010934:	4450      	add	r0, sl
 8010936:	ee37 7a24 	vadd.f32	s14, s14, s9
 801093a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801093e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010942:	db08      	blt.n	8010956 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010944:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010948:	ee37 7a25 	vadd.f32	s14, s14, s11
 801094c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010950:	3001      	adds	r0, #1
 8010952:	eba1 0108 	sub.w	r1, r1, r8
 8010956:	3f01      	subs	r7, #1
 8010958:	f04f 0901 	mov.w	r9, #1
 801095c:	e79e      	b.n	801089c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801095e:	449c      	add	ip, r3
 8010960:	1aff      	subs	r7, r7, r3
 8010962:	f1b8 0f00 	cmp.w	r8, #0
 8010966:	d009      	beq.n	801097c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010968:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801096c:	9019      	str	r0, [sp, #100]	; 0x64
 801096e:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010972:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010976:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801097a:	911d      	str	r1, [sp, #116]	; 0x74
 801097c:	1ad2      	subs	r2, r2, r3
 801097e:	e6b5      	b.n	80106ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010980:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010982:	681b      	ldr	r3, [r3, #0]
 8010984:	b923      	cbnz	r3, 8010990 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010986:	4b04      	ldr	r3, [pc, #16]	; (8010998 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010988:	6818      	ldr	r0, [r3, #0]
 801098a:	6803      	ldr	r3, [r0, #0]
 801098c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801098e:	4798      	blx	r3
 8010990:	b05b      	add	sp, #364	; 0x16c
 8010992:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010996:	bf00      	nop
 8010998:	20013758 	.word	0x20013758

0801099c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 801099c:	b570      	push	{r4, r5, r6, lr}
 801099e:	4604      	mov	r4, r0
 80109a0:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80109a4:	9805      	ldr	r0, [sp, #20]
 80109a6:	6061      	str	r1, [r4, #4]
 80109a8:	2500      	movs	r5, #0
 80109aa:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80109ae:	8263      	strh	r3, [r4, #18]
 80109b0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80109b4:	8025      	strh	r5, [r4, #0]
 80109b6:	7221      	strb	r1, [r4, #8]
 80109b8:	7266      	strb	r6, [r4, #9]
 80109ba:	60e0      	str	r0, [r4, #12]
 80109bc:	8222      	strh	r2, [r4, #16]
 80109be:	82a3      	strh	r3, [r4, #20]
 80109c0:	82e5      	strh	r5, [r4, #22]
 80109c2:	8325      	strh	r5, [r4, #24]
 80109c4:	8365      	strh	r5, [r4, #26]
 80109c6:	83a5      	strh	r5, [r4, #28]
 80109c8:	83e5      	strh	r5, [r4, #30]
 80109ca:	8425      	strh	r5, [r4, #32]
 80109cc:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 80109d0:	b32e      	cbz	r6, 8010a1e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109d2:	6803      	ldr	r3, [r0, #0]
 80109d4:	695b      	ldr	r3, [r3, #20]
 80109d6:	4798      	blx	r3
 80109d8:	4606      	mov	r6, r0
 80109da:	b300      	cbz	r0, 8010a1e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109dc:	68e0      	ldr	r0, [r4, #12]
 80109de:	6803      	ldr	r3, [r0, #0]
 80109e0:	4631      	mov	r1, r6
 80109e2:	68db      	ldr	r3, [r3, #12]
 80109e4:	4798      	blx	r3
 80109e6:	4605      	mov	r5, r0
 80109e8:	b1c8      	cbz	r0, 8010a1e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109ea:	7b43      	ldrb	r3, [r0, #13]
 80109ec:	7a82      	ldrb	r2, [r0, #10]
 80109ee:	005b      	lsls	r3, r3, #1
 80109f0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80109f4:	4313      	orrs	r3, r2
 80109f6:	8423      	strh	r3, [r4, #32]
 80109f8:	7a63      	ldrb	r3, [r4, #9]
 80109fa:	2b06      	cmp	r3, #6
 80109fc:	d10f      	bne.n	8010a1e <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109fe:	68e0      	ldr	r0, [r4, #12]
 8010a00:	6803      	ldr	r3, [r0, #0]
 8010a02:	462a      	mov	r2, r5
 8010a04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a06:	4631      	mov	r1, r6
 8010a08:	4798      	blx	r3
 8010a0a:	7b6b      	ldrb	r3, [r5, #13]
 8010a0c:	005b      	lsls	r3, r3, #1
 8010a0e:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010a12:	7aab      	ldrb	r3, [r5, #10]
 8010a14:	4313      	orrs	r3, r2
 8010a16:	4418      	add	r0, r3
 8010a18:	8c23      	ldrh	r3, [r4, #32]
 8010a1a:	4418      	add	r0, r3
 8010a1c:	8420      	strh	r0, [r4, #32]
 8010a1e:	4620      	mov	r0, r4
 8010a20:	bd70      	pop	{r4, r5, r6, pc}

08010a22 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 8010a22:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010a26:	2400      	movs	r4, #0
 8010a28:	b085      	sub	sp, #20
 8010a2a:	4681      	mov	r9, r0
 8010a2c:	4688      	mov	r8, r1
 8010a2e:	4692      	mov	sl, r2
 8010a30:	469b      	mov	fp, r3
 8010a32:	4627      	mov	r7, r4
 8010a34:	4625      	mov	r5, r4
 8010a36:	4626      	mov	r6, r4
 8010a38:	4554      	cmp	r4, sl
 8010a3a:	da2a      	bge.n	8010a92 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010a3c:	2300      	movs	r3, #0
 8010a3e:	9303      	str	r3, [sp, #12]
 8010a40:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010a44:	429d      	cmp	r5, r3
 8010a46:	d004      	beq.n	8010a52 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010a48:	f242 030b 	movw	r3, #8203	; 0x200b
 8010a4c:	429d      	cmp	r5, r3
 8010a4e:	bf18      	it	ne
 8010a50:	462f      	movne	r7, r5
 8010a52:	ab03      	add	r3, sp, #12
 8010a54:	4642      	mov	r2, r8
 8010a56:	4659      	mov	r1, fp
 8010a58:	4648      	mov	r0, r9
 8010a5a:	f003 f8cd 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010a5e:	4605      	mov	r5, r0
 8010a60:	b1b8      	cbz	r0, 8010a92 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010a62:	280a      	cmp	r0, #10
 8010a64:	d015      	beq.n	8010a92 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010a66:	9a03      	ldr	r2, [sp, #12]
 8010a68:	b18a      	cbz	r2, 8010a8e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010a6a:	7b50      	ldrb	r0, [r2, #13]
 8010a6c:	7a93      	ldrb	r3, [r2, #10]
 8010a6e:	8895      	ldrh	r5, [r2, #4]
 8010a70:	0040      	lsls	r0, r0, #1
 8010a72:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010a76:	4303      	orrs	r3, r0
 8010a78:	9301      	str	r3, [sp, #4]
 8010a7a:	f8d8 3000 	ldr.w	r3, [r8]
 8010a7e:	4639      	mov	r1, r7
 8010a80:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a82:	4640      	mov	r0, r8
 8010a84:	4798      	blx	r3
 8010a86:	9b01      	ldr	r3, [sp, #4]
 8010a88:	4418      	add	r0, r3
 8010a8a:	4406      	add	r6, r0
 8010a8c:	b2b6      	uxth	r6, r6
 8010a8e:	3401      	adds	r4, #1
 8010a90:	e7d2      	b.n	8010a38 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010a92:	4630      	mov	r0, r6
 8010a94:	b005      	add	sp, #20
 8010a96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010a9a:	2a02      	cmp	r2, #2
 8010a9c:	b530      	push	{r4, r5, lr}
 8010a9e:	d011      	beq.n	8010ac4 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010aa0:	2a03      	cmp	r2, #3
 8010aa2:	d01c      	beq.n	8010ade <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010aa4:	2a01      	cmp	r2, #1
 8010aa6:	d10c      	bne.n	8010ac2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010aa8:	888b      	ldrh	r3, [r1, #4]
 8010aaa:	8801      	ldrh	r1, [r0, #0]
 8010aac:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010ab0:	8844      	ldrh	r4, [r0, #2]
 8010ab2:	8004      	strh	r4, [r0, #0]
 8010ab4:	1a5b      	subs	r3, r3, r1
 8010ab6:	1a9b      	subs	r3, r3, r2
 8010ab8:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010abc:	8043      	strh	r3, [r0, #2]
 8010abe:	8081      	strh	r1, [r0, #4]
 8010ac0:	80c2      	strh	r2, [r0, #6]
 8010ac2:	bd30      	pop	{r4, r5, pc}
 8010ac4:	88cb      	ldrh	r3, [r1, #6]
 8010ac6:	8842      	ldrh	r2, [r0, #2]
 8010ac8:	1a9b      	subs	r3, r3, r2
 8010aca:	88c2      	ldrh	r2, [r0, #6]
 8010acc:	1a9b      	subs	r3, r3, r2
 8010ace:	888a      	ldrh	r2, [r1, #4]
 8010ad0:	8801      	ldrh	r1, [r0, #0]
 8010ad2:	8043      	strh	r3, [r0, #2]
 8010ad4:	1a52      	subs	r2, r2, r1
 8010ad6:	8881      	ldrh	r1, [r0, #4]
 8010ad8:	1a52      	subs	r2, r2, r1
 8010ada:	8002      	strh	r2, [r0, #0]
 8010adc:	e7f1      	b.n	8010ac2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010ade:	88cb      	ldrh	r3, [r1, #6]
 8010ae0:	8841      	ldrh	r1, [r0, #2]
 8010ae2:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010ae6:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010aea:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010aee:	8045      	strh	r5, [r0, #2]
 8010af0:	1a5b      	subs	r3, r3, r1
 8010af2:	1a9b      	subs	r3, r3, r2
 8010af4:	8003      	strh	r3, [r0, #0]
 8010af6:	8082      	strh	r2, [r0, #4]
 8010af8:	80c4      	strh	r4, [r0, #6]
 8010afa:	e7e2      	b.n	8010ac2 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010afc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010afc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010b00:	b09f      	sub	sp, #124	; 0x7c
 8010b02:	9116      	str	r1, [sp, #88]	; 0x58
 8010b04:	9317      	str	r3, [sp, #92]	; 0x5c
 8010b06:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010b08:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010b0a:	8809      	ldrh	r1, [r1, #0]
 8010b0c:	889b      	ldrh	r3, [r3, #4]
 8010b0e:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8010b12:	9212      	str	r2, [sp, #72]	; 0x48
 8010b14:	440b      	add	r3, r1
 8010b16:	b21b      	sxth	r3, r3
 8010b18:	9310      	str	r3, [sp, #64]	; 0x40
 8010b1a:	f8d8 3000 	ldr.w	r3, [r8]
 8010b1e:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010b22:	7b19      	ldrb	r1, [r3, #12]
 8010b24:	7adb      	ldrb	r3, [r3, #11]
 8010b26:	9011      	str	r0, [sp, #68]	; 0x44
 8010b28:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010b2c:	9114      	str	r1, [sp, #80]	; 0x50
 8010b2e:	9315      	str	r3, [sp, #84]	; 0x54
 8010b30:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8010b34:	2a00      	cmp	r2, #0
 8010b36:	d06a      	beq.n	8010c0e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010b38:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010b3c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8010b3e:	2b06      	cmp	r3, #6
 8010b40:	bf14      	ite	ne
 8010b42:	2301      	movne	r3, #1
 8010b44:	2302      	moveq	r3, #2
 8010b46:	4413      	add	r3, r2
 8010b48:	f04f 0900 	mov.w	r9, #0
 8010b4c:	930f      	str	r3, [sp, #60]	; 0x3c
 8010b4e:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010b52:	464c      	mov	r4, r9
 8010b54:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010b58:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010b5c:	4293      	cmp	r3, r2
 8010b5e:	f280 808f 	bge.w	8010c80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010b62:	2300      	movs	r3, #0
 8010b64:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010b68:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8010b6c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b70:	429c      	cmp	r4, r3
 8010b72:	d006      	beq.n	8010b82 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010b74:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010b76:	f242 020b 	movw	r2, #8203	; 0x200b
 8010b7a:	4294      	cmp	r4, r2
 8010b7c:	bf18      	it	ne
 8010b7e:	4623      	movne	r3, r4
 8010b80:	930d      	str	r3, [sp, #52]	; 0x34
 8010b82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b84:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010b86:	f8d8 2000 	ldr.w	r2, [r8]
 8010b8a:	428b      	cmp	r3, r1
 8010b8c:	db41      	blt.n	8010c12 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010b8e:	6813      	ldr	r3, [r2, #0]
 8010b90:	4610      	mov	r0, r2
 8010b92:	695b      	ldr	r3, [r3, #20]
 8010b94:	4798      	blx	r3
 8010b96:	4604      	mov	r4, r0
 8010b98:	f8d8 0000 	ldr.w	r0, [r8]
 8010b9c:	6803      	ldr	r3, [r0, #0]
 8010b9e:	aa1d      	add	r2, sp, #116	; 0x74
 8010ba0:	689d      	ldr	r5, [r3, #8]
 8010ba2:	4621      	mov	r1, r4
 8010ba4:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010ba8:	47a8      	blx	r5
 8010baa:	901c      	str	r0, [sp, #112]	; 0x70
 8010bac:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010bb0:	429c      	cmp	r4, r3
 8010bb2:	f000 80eb 	beq.w	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010bb6:	f242 030b 	movw	r3, #8203	; 0x200b
 8010bba:	429c      	cmp	r4, r3
 8010bbc:	f000 80e6 	beq.w	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010bc0:	2c00      	cmp	r4, #0
 8010bc2:	f000 80f8 	beq.w	8010db6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010bc6:	2c0a      	cmp	r4, #10
 8010bc8:	d060      	beq.n	8010c8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010bca:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010bcc:	b36a      	cbz	r2, 8010c2a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010bce:	8894      	ldrh	r4, [r2, #4]
 8010bd0:	f1bb 0f00 	cmp.w	fp, #0
 8010bd4:	d03b      	beq.n	8010c4e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010bd6:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010bda:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010bde:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010be2:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010be6:	f1bb 0f01 	cmp.w	fp, #1
 8010bea:	ea49 0903 	orr.w	r9, r9, r3
 8010bee:	d134      	bne.n	8010c5a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8010bf0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010bf2:	eba6 0609 	sub.w	r6, r6, r9
 8010bf6:	2b00      	cmp	r3, #0
 8010bf8:	d14f      	bne.n	8010c9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010bfa:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010bfc:	eb09 0306 	add.w	r3, r9, r6
 8010c00:	4413      	add	r3, r2
 8010c02:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010c04:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010c08:	4293      	cmp	r3, r2
 8010c0a:	da51      	bge.n	8010cb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010c0c:	e038      	b.n	8010c80 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010c0e:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010c10:	e79a      	b.n	8010b48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010c12:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010c16:	9301      	str	r3, [sp, #4]
 8010c18:	ab1d      	add	r3, sp, #116	; 0x74
 8010c1a:	9300      	str	r3, [sp, #0]
 8010c1c:	4659      	mov	r1, fp
 8010c1e:	ab1c      	add	r3, sp, #112	; 0x70
 8010c20:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010c22:	f003 f832 	bl	8013c8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010c26:	4604      	mov	r4, r0
 8010c28:	e7c0      	b.n	8010bac <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010c2a:	f8d8 0000 	ldr.w	r0, [r8]
 8010c2e:	6803      	ldr	r3, [r0, #0]
 8010c30:	691b      	ldr	r3, [r3, #16]
 8010c32:	4798      	blx	r3
 8010c34:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010c38:	4298      	cmp	r0, r3
 8010c3a:	f000 80a7 	beq.w	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c3e:	f242 030b 	movw	r3, #8203	; 0x200b
 8010c42:	4298      	cmp	r0, r3
 8010c44:	f000 80a2 	beq.w	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c48:	f1bb 0f00 	cmp.w	fp, #0
 8010c4c:	d100      	bne.n	8010c50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8010c4e:	444e      	add	r6, r9
 8010c50:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010c52:	2a00      	cmp	r2, #0
 8010c54:	d1bf      	bne.n	8010bd6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010c56:	4691      	mov	r9, r2
 8010c58:	e098      	b.n	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c5a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c5c:	2b00      	cmp	r3, #0
 8010c5e:	f000 80ac 	beq.w	8010dba <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8010c62:	f1bb 0f00 	cmp.w	fp, #0
 8010c66:	d118      	bne.n	8010c9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010c68:	f8d8 0000 	ldr.w	r0, [r8]
 8010c6c:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010c6e:	6803      	ldr	r3, [r0, #0]
 8010c70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c72:	4798      	blx	r3
 8010c74:	4406      	add	r6, r0
 8010c76:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010c78:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010c7a:	1af3      	subs	r3, r6, r3
 8010c7c:	4293      	cmp	r3, r2
 8010c7e:	dd17      	ble.n	8010cb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010c80:	2c00      	cmp	r4, #0
 8010c82:	f000 8098 	beq.w	8010db6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010c86:	2c0a      	cmp	r4, #10
 8010c88:	f040 8086 	bne.w	8010d98 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8010c8c:	240a      	movs	r4, #10
 8010c8e:	fab4 f084 	clz	r0, r4
 8010c92:	0940      	lsrs	r0, r0, #5
 8010c94:	b01f      	add	sp, #124	; 0x7c
 8010c96:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c9a:	f8d8 0000 	ldr.w	r0, [r8]
 8010c9e:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010ca0:	6803      	ldr	r3, [r0, #0]
 8010ca2:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010ca4:	4798      	blx	r3
 8010ca6:	f1bb 0f01 	cmp.w	fp, #1
 8010caa:	eba6 0600 	sub.w	r6, r6, r0
 8010cae:	d0a4      	beq.n	8010bfa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8010cb0:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010cb2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010cb4:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010cb8:	f9b3 7000 	ldrsh.w	r7, [r3]
 8010cbc:	7b43      	ldrb	r3, [r0, #13]
 8010cbe:	015b      	lsls	r3, r3, #5
 8010cc0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010cc4:	7983      	ldrb	r3, [r0, #6]
 8010cc6:	4431      	add	r1, r6
 8010cc8:	4313      	orrs	r3, r2
 8010cca:	440b      	add	r3, r1
 8010ccc:	42bb      	cmp	r3, r7
 8010cce:	db5d      	blt.n	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010cd0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010cd2:	4299      	cmp	r1, r3
 8010cd4:	da5a      	bge.n	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010cd6:	f8d8 0000 	ldr.w	r0, [r8]
 8010cda:	6803      	ldr	r3, [r0, #0]
 8010cdc:	42b7      	cmp	r7, r6
 8010cde:	bfc8      	it	gt
 8010ce0:	1bbf      	subgt	r7, r7, r6
 8010ce2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ce4:	bfcc      	ite	gt
 8010ce6:	b2bf      	uxthgt	r7, r7
 8010ce8:	2700      	movle	r7, #0
 8010cea:	4798      	blx	r3
 8010cec:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010cee:	7b5a      	ldrb	r2, [r3, #13]
 8010cf0:	00d1      	lsls	r1, r2, #3
 8010cf2:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8010cf6:	7a19      	ldrb	r1, [r3, #8]
 8010cf8:	4329      	orrs	r1, r5
 8010cfa:	0655      	lsls	r5, r2, #25
 8010cfc:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8010cfe:	bf44      	itt	mi
 8010d00:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010d04:	b209      	sxthmi	r1, r1
 8010d06:	1945      	adds	r5, r0, r5
 8010d08:	1a6d      	subs	r5, r5, r1
 8010d0a:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010d0c:	b2ad      	uxth	r5, r5
 8010d0e:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010d12:	fa0f fa85 	sxth.w	sl, r5
 8010d16:	4551      	cmp	r1, sl
 8010d18:	dd3c      	ble.n	8010d94 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8010d1a:	0112      	lsls	r2, r2, #4
 8010d1c:	79d8      	ldrb	r0, [r3, #7]
 8010d1e:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010d22:	4302      	orrs	r2, r0
 8010d24:	4492      	add	sl, r2
 8010d26:	4551      	cmp	r1, sl
 8010d28:	dc30      	bgt.n	8010d8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010d2a:	1b4d      	subs	r5, r1, r5
 8010d2c:	b22d      	sxth	r5, r5
 8010d2e:	468a      	mov	sl, r1
 8010d30:	9319      	str	r3, [sp, #100]	; 0x64
 8010d32:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010d34:	f8d8 0000 	ldr.w	r0, [r8]
 8010d38:	681a      	ldr	r2, [r3, #0]
 8010d3a:	6801      	ldr	r1, [r0, #0]
 8010d3c:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010d3e:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010d40:	9313      	str	r3, [sp, #76]	; 0x4c
 8010d42:	9218      	str	r2, [sp, #96]	; 0x60
 8010d44:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8010d46:	4788      	blx	r1
 8010d48:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010d4c:	910b      	str	r1, [sp, #44]	; 0x2c
 8010d4e:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010d52:	910a      	str	r1, [sp, #40]	; 0x28
 8010d54:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010d58:	9109      	str	r1, [sp, #36]	; 0x24
 8010d5a:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010d5e:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010d60:	9305      	str	r3, [sp, #20]
 8010d62:	b2ad      	uxth	r5, r5
 8010d64:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010d68:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8010d6c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010d6e:	9304      	str	r3, [sp, #16]
 8010d70:	4437      	add	r7, r6
 8010d72:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010d74:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010d76:	9206      	str	r2, [sp, #24]
 8010d78:	b23f      	sxth	r7, r7
 8010d7a:	f8cd a004 	str.w	sl, [sp, #4]
 8010d7e:	9700      	str	r7, [sp, #0]
 8010d80:	681a      	ldr	r2, [r3, #0]
 8010d82:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010d84:	685b      	ldr	r3, [r3, #4]
 8010d86:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010d88:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d8a:	47a8      	blx	r5
 8010d8c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010d8e:	3301      	adds	r3, #1
 8010d90:	930e      	str	r3, [sp, #56]	; 0x38
 8010d92:	e6e1      	b.n	8010b58 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010d94:	2500      	movs	r5, #0
 8010d96:	e7cb      	b.n	8010d30 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010d98:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010d9a:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010d9c:	3501      	adds	r5, #1
 8010d9e:	429d      	cmp	r5, r3
 8010da0:	f6bf af75 	bge.w	8010c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010da4:	4659      	mov	r1, fp
 8010da6:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010da8:	f7f4 faee 	bl	8005388 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010dac:	4604      	mov	r4, r0
 8010dae:	b110      	cbz	r0, 8010db6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010db0:	280a      	cmp	r0, #10
 8010db2:	d1f2      	bne.n	8010d9a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8010db4:	e76a      	b.n	8010c8c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010db6:	2400      	movs	r4, #0
 8010db8:	e769      	b.n	8010c8e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010dba:	f1bb 0f00 	cmp.w	fp, #0
 8010dbe:	f43f af5a 	beq.w	8010c76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010dc2:	e775      	b.n	8010cb0 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08010dc4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010dc4:	b530      	push	{r4, r5, lr}
 8010dc6:	8ac4      	ldrh	r4, [r0, #22]
 8010dc8:	8b45      	ldrh	r5, [r0, #26]
 8010dca:	8343      	strh	r3, [r0, #26]
 8010dcc:	442c      	add	r4, r5
 8010dce:	1ae4      	subs	r4, r4, r3
 8010dd0:	82c4      	strh	r4, [r0, #22]
 8010dd2:	8b83      	ldrh	r3, [r0, #28]
 8010dd4:	8b04      	ldrh	r4, [r0, #24]
 8010dd6:	4422      	add	r2, r4
 8010dd8:	440c      	add	r4, r1
 8010dda:	1a59      	subs	r1, r3, r1
 8010ddc:	83c2      	strh	r2, [r0, #30]
 8010dde:	8304      	strh	r4, [r0, #24]
 8010de0:	8381      	strh	r1, [r0, #28]
 8010de2:	bd30      	pop	{r4, r5, pc}

08010de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8010de4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010de8:	4604      	mov	r4, r0
 8010dea:	8a47      	ldrh	r7, [r0, #18]
 8010dec:	68c0      	ldr	r0, [r0, #12]
 8010dee:	6803      	ldr	r3, [r0, #0]
 8010df0:	b085      	sub	sp, #20
 8010df2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010df4:	4798      	blx	r3
 8010df6:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8010dfa:	7a63      	ldrb	r3, [r4, #9]
 8010dfc:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8010e00:	42b7      	cmp	r7, r6
 8010e02:	f103 33ff 	add.w	r3, r3, #4294967295
 8010e06:	bfac      	ite	ge
 8010e08:	f04f 0900 	movge.w	r9, #0
 8010e0c:	f04f 0901 	movlt.w	r9, #1
 8010e10:	2b05      	cmp	r3, #5
 8010e12:	d804      	bhi.n	8010e1e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8010e14:	e8df f003 	tbb	[pc, r3]
 8010e18:	470e0854 	.word	0x470e0854
 8010e1c:	4c4c      	.short	0x4c4c
 8010e1e:	2500      	movs	r5, #0
 8010e20:	46a9      	mov	r9, r5
 8010e22:	462e      	mov	r6, r5
 8010e24:	462f      	mov	r7, r5
 8010e26:	e00d      	b.n	8010e44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010e28:	42b7      	cmp	r7, r6
 8010e2a:	bfb4      	ite	lt
 8010e2c:	2600      	movlt	r6, #0
 8010e2e:	2601      	movge	r6, #1
 8010e30:	2500      	movs	r5, #0
 8010e32:	e7f7      	b.n	8010e24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010e34:	42b7      	cmp	r7, r6
 8010e36:	464d      	mov	r5, r9
 8010e38:	f04f 0900 	mov.w	r9, #0
 8010e3c:	bfb4      	ite	lt
 8010e3e:	2600      	movlt	r6, #0
 8010e40:	2601      	movge	r6, #1
 8010e42:	464f      	mov	r7, r9
 8010e44:	f04f 0800 	mov.w	r8, #0
 8010e48:	f8a4 8016 	strh.w	r8, [r4, #22]
 8010e4c:	f8a4 8018 	strh.w	r8, [r4, #24]
 8010e50:	f8cd 8004 	str.w	r8, [sp, #4]
 8010e54:	2300      	movs	r3, #0
 8010e56:	9303      	str	r3, [sp, #12]
 8010e58:	8823      	ldrh	r3, [r4, #0]
 8010e5a:	2b20      	cmp	r3, #32
 8010e5c:	d034      	beq.n	8010ec8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8010e5e:	f242 010b 	movw	r1, #8203	; 0x200b
 8010e62:	1a5a      	subs	r2, r3, r1
 8010e64:	f1d2 0a00 	rsbs	sl, r2, #0
 8010e68:	eb4a 0a02 	adc.w	sl, sl, r2
 8010e6c:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010e70:	4293      	cmp	r3, r2
 8010e72:	d009      	beq.n	8010e88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010e74:	428b      	cmp	r3, r1
 8010e76:	9a01      	ldr	r2, [sp, #4]
 8010e78:	bf18      	it	ne
 8010e7a:	461a      	movne	r2, r3
 8010e7c:	9201      	str	r2, [sp, #4]
 8010e7e:	bf0c      	ite	eq
 8010e80:	f04f 0a01 	moveq.w	sl, #1
 8010e84:	f04f 0a00 	movne.w	sl, #0
 8010e88:	ab03      	add	r3, sp, #12
 8010e8a:	68e2      	ldr	r2, [r4, #12]
 8010e8c:	7a21      	ldrb	r1, [r4, #8]
 8010e8e:	6860      	ldr	r0, [r4, #4]
 8010e90:	f002 feb2 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010e94:	8020      	strh	r0, [r4, #0]
 8010e96:	b9d8      	cbnz	r0, 8010ed0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8010e98:	8ba2      	ldrh	r2, [r4, #28]
 8010e9a:	2300      	movs	r3, #0
 8010e9c:	4611      	mov	r1, r2
 8010e9e:	4620      	mov	r0, r4
 8010ea0:	f7ff ff90 	bl	8010dc4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010ea4:	e06e      	b.n	8010f84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010ea6:	2500      	movs	r5, #0
 8010ea8:	46a9      	mov	r9, r5
 8010eaa:	462e      	mov	r6, r5
 8010eac:	2701      	movs	r7, #1
 8010eae:	e7c9      	b.n	8010e44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010eb0:	42b7      	cmp	r7, r6
 8010eb2:	f04f 0500 	mov.w	r5, #0
 8010eb6:	bfb4      	ite	lt
 8010eb8:	2700      	movlt	r7, #0
 8010eba:	2701      	movge	r7, #1
 8010ebc:	462e      	mov	r6, r5
 8010ebe:	e7c1      	b.n	8010e44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010ec0:	2500      	movs	r5, #0
 8010ec2:	46a9      	mov	r9, r5
 8010ec4:	2601      	movs	r6, #1
 8010ec6:	e7ad      	b.n	8010e24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010ec8:	9301      	str	r3, [sp, #4]
 8010eca:	f04f 0a01 	mov.w	sl, #1
 8010ece:	e7db      	b.n	8010e88 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010ed0:	8b63      	ldrh	r3, [r4, #26]
 8010ed2:	280a      	cmp	r0, #10
 8010ed4:	f103 0301 	add.w	r3, r3, #1
 8010ed8:	8363      	strh	r3, [r4, #26]
 8010eda:	d0dd      	beq.n	8010e98 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010edc:	9a03      	ldr	r2, [sp, #12]
 8010ede:	bb62      	cbnz	r2, 8010f3a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8010ee0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010ee4:	4298      	cmp	r0, r3
 8010ee6:	d003      	beq.n	8010ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010ee8:	f242 030b 	movw	r3, #8203	; 0x200b
 8010eec:	4298      	cmp	r0, r3
 8010eee:	d1b1      	bne.n	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010ef0:	8823      	ldrh	r3, [r4, #0]
 8010ef2:	8ba1      	ldrh	r1, [r4, #28]
 8010ef4:	2b20      	cmp	r3, #32
 8010ef6:	d003      	beq.n	8010f00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8010ef8:	f242 000b 	movw	r0, #8203	; 0x200b
 8010efc:	4283      	cmp	r3, r0
 8010efe:	d131      	bne.n	8010f64 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8010f00:	f1ba 0f00 	cmp.w	sl, #0
 8010f04:	bf0a      	itet	eq
 8010f06:	4688      	moveq	r8, r1
 8010f08:	4650      	movne	r0, sl
 8010f0a:	2001      	moveq	r0, #1
 8010f0c:	440a      	add	r2, r1
 8010f0e:	8b23      	ldrh	r3, [r4, #24]
 8010f10:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010f14:	b292      	uxth	r2, r2
 8010f16:	83a2      	strh	r2, [r4, #28]
 8010f18:	4413      	add	r3, r2
 8010f1a:	f1b9 0f00 	cmp.w	r9, #0
 8010f1e:	d102      	bne.n	8010f26 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8010f20:	2d00      	cmp	r5, #0
 8010f22:	d042      	beq.n	8010faa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8010f24:	b300      	cbz	r0, 8010f68 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8010f26:	8c21      	ldrh	r1, [r4, #32]
 8010f28:	4419      	add	r1, r3
 8010f2a:	458c      	cmp	ip, r1
 8010f2c:	da37      	bge.n	8010f9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010f2e:	8ae1      	ldrh	r1, [r4, #22]
 8010f30:	2900      	cmp	r1, #0
 8010f32:	d034      	beq.n	8010f9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010f34:	4563      	cmp	r3, ip
 8010f36:	dd8d      	ble.n	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f38:	e01d      	b.n	8010f76 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8010f3a:	8893      	ldrh	r3, [r2, #4]
 8010f3c:	8023      	strh	r3, [r4, #0]
 8010f3e:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8010f42:	9901      	ldr	r1, [sp, #4]
 8010f44:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010f48:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8010f4c:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8010f50:	ea4b 0b00 	orr.w	fp, fp, r0
 8010f54:	68e0      	ldr	r0, [r4, #12]
 8010f56:	6803      	ldr	r3, [r0, #0]
 8010f58:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010f5a:	4798      	blx	r3
 8010f5c:	eb0b 0200 	add.w	r2, fp, r0
 8010f60:	b292      	uxth	r2, r2
 8010f62:	e7c5      	b.n	8010ef0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010f64:	2000      	movs	r0, #0
 8010f66:	e7d1      	b.n	8010f0c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8010f68:	4563      	cmp	r3, ip
 8010f6a:	f77f af73 	ble.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f6e:	8ae3      	ldrh	r3, [r4, #22]
 8010f70:	2b00      	cmp	r3, #0
 8010f72:	f43f af6f 	beq.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f76:	2301      	movs	r3, #1
 8010f78:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8010f7c:	8c22      	ldrh	r2, [r4, #32]
 8010f7e:	8be3      	ldrh	r3, [r4, #30]
 8010f80:	4413      	add	r3, r2
 8010f82:	83e3      	strh	r3, [r4, #30]
 8010f84:	68e0      	ldr	r0, [r4, #12]
 8010f86:	6803      	ldr	r3, [r0, #0]
 8010f88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f8a:	4798      	blx	r3
 8010f8c:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010f90:	4418      	add	r0, r3
 8010f92:	8a63      	ldrh	r3, [r4, #18]
 8010f94:	1a18      	subs	r0, r3, r0
 8010f96:	8260      	strh	r0, [r4, #18]
 8010f98:	b005      	add	sp, #20
 8010f9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f9e:	2300      	movs	r3, #0
 8010fa0:	4611      	mov	r1, r2
 8010fa2:	4620      	mov	r0, r4
 8010fa4:	f7ff ff0e 	bl	8010dc4 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010fa8:	e754      	b.n	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010faa:	4563      	cmp	r3, ip
 8010fac:	dd14      	ble.n	8010fd8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8010fae:	b117      	cbz	r7, 8010fb6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8010fb0:	2301      	movs	r3, #1
 8010fb2:	460a      	mov	r2, r1
 8010fb4:	e772      	b.n	8010e9c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8010fb6:	2e00      	cmp	r6, #0
 8010fb8:	f43f af4c 	beq.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fbc:	2800      	cmp	r0, #0
 8010fbe:	f47f af49 	bne.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fc2:	f1ba 0f00 	cmp.w	sl, #0
 8010fc6:	d002      	beq.n	8010fce <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8010fc8:	2301      	movs	r3, #1
 8010fca:	4642      	mov	r2, r8
 8010fcc:	e767      	b.n	8010e9e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8010fce:	8ae3      	ldrh	r3, [r4, #22]
 8010fd0:	2b00      	cmp	r3, #0
 8010fd2:	f43f af3f 	beq.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fd6:	e7d5      	b.n	8010f84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010fd8:	2800      	cmp	r0, #0
 8010fda:	f47f af3b 	bne.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fde:	f1ba 0f00 	cmp.w	sl, #0
 8010fe2:	f43f af37 	beq.w	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fe6:	2301      	movs	r3, #1
 8010fe8:	4642      	mov	r2, r8
 8010fea:	e7da      	b.n	8010fa2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010fec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010fec:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010fee:	4605      	mov	r5, r0
 8010ff0:	b08f      	sub	sp, #60	; 0x3c
 8010ff2:	4617      	mov	r7, r2
 8010ff4:	461c      	mov	r4, r3
 8010ff6:	460e      	mov	r6, r1
 8010ff8:	b1d1      	cbz	r1, 8011030 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010ffa:	681b      	ldr	r3, [r3, #0]
 8010ffc:	4620      	mov	r0, r4
 8010ffe:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8011000:	4798      	blx	r3
 8011002:	4240      	negs	r0, r0
 8011004:	b200      	sxth	r0, r0
 8011006:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801100a:	9603      	str	r6, [sp, #12]
 801100c:	9700      	str	r7, [sp, #0]
 801100e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8011012:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8011016:	4629      	mov	r1, r5
 8011018:	a805      	add	r0, sp, #20
 801101a:	f7ff fcbf 	bl	801099c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 801101e:	2401      	movs	r4, #1
 8011020:	a805      	add	r0, sp, #20
 8011022:	f7ff fedf 	bl	8010de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011026:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801102a:	b163      	cbz	r3, 8011046 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 801102c:	3401      	adds	r4, #1
 801102e:	e7f7      	b.n	8011020 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8011030:	f002 feb0 	bl	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011034:	2401      	movs	r4, #1
 8011036:	280a      	cmp	r0, #10
 8011038:	4628      	mov	r0, r5
 801103a:	bf08      	it	eq
 801103c:	3401      	addeq	r4, #1
 801103e:	f002 fea9 	bl	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011042:	2800      	cmp	r0, #0
 8011044:	d1f7      	bne.n	8011036 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8011046:	b2a0      	uxth	r0, r4
 8011048:	b00f      	add	sp, #60	; 0x3c
 801104a:	bdf0      	pop	{r4, r5, r6, r7, pc}

0801104c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 801104c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011050:	b0e3      	sub	sp, #396	; 0x18c
 8011052:	461c      	mov	r4, r3
 8011054:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8011056:	4683      	mov	fp, r0
 8011058:	4688      	mov	r8, r1
 801105a:	2b00      	cmp	r3, #0
 801105c:	f000 810f 	beq.w	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011060:	6823      	ldr	r3, [r4, #0]
 8011062:	2b00      	cmp	r3, #0
 8011064:	f000 810b 	beq.w	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011068:	7ba3      	ldrb	r3, [r4, #14]
 801106a:	2b00      	cmp	r3, #0
 801106c:	f000 8107 	beq.w	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011070:	6810      	ldr	r0, [r2, #0]
 8011072:	6851      	ldr	r1, [r2, #4]
 8011074:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8011078:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801107c:	ad0a      	add	r5, sp, #40	; 0x28
 801107e:	462b      	mov	r3, r5
 8011080:	c303      	stmia	r3!, {r0, r1}
 8011082:	2100      	movs	r1, #0
 8011084:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011088:	910c      	str	r1, [sp, #48]	; 0x30
 801108a:	79a2      	ldrb	r2, [r4, #6]
 801108c:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011090:	a90c      	add	r1, sp, #48	; 0x30
 8011092:	4628      	mov	r0, r5
 8011094:	f7ff fd01 	bl	8010a9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011098:	a90c      	add	r1, sp, #48	; 0x30
 801109a:	4608      	mov	r0, r1
 801109c:	79a2      	ldrb	r2, [r4, #6]
 801109e:	f7ff fcfc 	bl	8010a9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80110a2:	a817      	add	r0, sp, #92	; 0x5c
 80110a4:	f002 fa4a 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 80110a8:	6820      	ldr	r0, [r4, #0]
 80110aa:	6803      	ldr	r3, [r0, #0]
 80110ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110ae:	4798      	blx	r3
 80110b0:	4606      	mov	r6, r0
 80110b2:	6820      	ldr	r0, [r4, #0]
 80110b4:	6803      	ldr	r3, [r0, #0]
 80110b6:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80110b8:	4798      	blx	r3
 80110ba:	4633      	mov	r3, r6
 80110bc:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80110be:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80110c0:	9000      	str	r0, [sp, #0]
 80110c2:	a817      	add	r0, sp, #92	; 0x5c
 80110c4:	f002 fa95 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80110c8:	6820      	ldr	r0, [r4, #0]
 80110ca:	f894 a004 	ldrb.w	sl, [r4, #4]
 80110ce:	6803      	ldr	r3, [r0, #0]
 80110d0:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80110d2:	4798      	blx	r3
 80110d4:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 80110d8:	6823      	ldr	r3, [r4, #0]
 80110da:	4607      	mov	r7, r0
 80110dc:	4406      	add	r6, r0
 80110de:	a830      	add	r0, sp, #192	; 0xc0
 80110e0:	f893 9009 	ldrb.w	r9, [r3, #9]
 80110e4:	f002 fa2a 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 80110e8:	7c23      	ldrb	r3, [r4, #16]
 80110ea:	b17b      	cbz	r3, 801110c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80110ec:	6820      	ldr	r0, [r4, #0]
 80110ee:	6803      	ldr	r3, [r0, #0]
 80110f0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110f2:	4798      	blx	r3
 80110f4:	9009      	str	r0, [sp, #36]	; 0x24
 80110f6:	6820      	ldr	r0, [r4, #0]
 80110f8:	6802      	ldr	r2, [r0, #0]
 80110fa:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80110fc:	4790      	blx	r2
 80110fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011100:	9000      	str	r0, [sp, #0]
 8011102:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 8011104:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 8011106:	a830      	add	r0, sp, #192	; 0xc0
 8011108:	f002 fa73 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801110c:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8011110:	7be2      	ldrb	r2, [r4, #15]
 8011112:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8011116:	1a8a      	subs	r2, r1, r2
 8011118:	7c21      	ldrb	r1, [r4, #16]
 801111a:	9103      	str	r1, [sp, #12]
 801111c:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8011120:	9102      	str	r1, [sp, #8]
 8011122:	6821      	ldr	r1, [r4, #0]
 8011124:	9101      	str	r1, [sp, #4]
 8011126:	7961      	ldrb	r1, [r4, #5]
 8011128:	9100      	str	r1, [sp, #0]
 801112a:	b292      	uxth	r2, r2
 801112c:	a930      	add	r1, sp, #192	; 0xc0
 801112e:	a80e      	add	r0, sp, #56	; 0x38
 8011130:	f7ff fc34 	bl	801099c <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8011134:	2e00      	cmp	r6, #0
 8011136:	dc5b      	bgt.n	80111f0 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8011138:	af17      	add	r7, sp, #92	; 0x5c
 801113a:	f04f 0900 	mov.w	r9, #0
 801113e:	7c23      	ldrb	r3, [r4, #16]
 8011140:	2b00      	cmp	r3, #0
 8011142:	f000 80ae 	beq.w	80112a2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011146:	a80e      	add	r0, sp, #56	; 0x38
 8011148:	f7ff fe4c 	bl	8010de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801114c:	f1ba 0f00 	cmp.w	sl, #0
 8011150:	f000 80a2 	beq.w	8011298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 8011154:	7c23      	ldrb	r3, [r4, #16]
 8011156:	9309      	str	r3, [sp, #36]	; 0x24
 8011158:	2264      	movs	r2, #100	; 0x64
 801115a:	4639      	mov	r1, r7
 801115c:	a849      	add	r0, sp, #292	; 0x124
 801115e:	f011 fdad 	bl	8022cbc <memcpy>
 8011162:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011164:	2b00      	cmp	r3, #0
 8011166:	f000 80a4 	beq.w	80112b2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 801116a:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801116e:	7922      	ldrb	r2, [r4, #4]
 8011170:	2a01      	cmp	r2, #1
 8011172:	f040 8087 	bne.w	8011284 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011176:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 801117a:	1ac0      	subs	r0, r0, r3
 801117c:	2302      	movs	r3, #2
 801117e:	fb90 f0f3 	sdiv	r0, r0, r3
 8011182:	b200      	sxth	r0, r0
 8011184:	7c23      	ldrb	r3, [r4, #16]
 8011186:	2b00      	cmp	r3, #0
 8011188:	f000 8088 	beq.w	801129c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
 801118c:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 8011190:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8011194:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011198:	e9cd 2105 	strd	r2, r1, [sp, #20]
 801119c:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 80111a0:	4410      	add	r0, r2
 80111a2:	b200      	sxth	r0, r0
 80111a4:	9000      	str	r0, [sp, #0]
 80111a6:	e9cd 9703 	strd	r9, r7, [sp, #12]
 80111aa:	e9cd 5401 	strd	r5, r4, [sp, #4]
 80111ae:	4642      	mov	r2, r8
 80111b0:	2100      	movs	r1, #0
 80111b2:	4658      	mov	r0, fp
 80111b4:	f7ff fca2 	bl	8010afc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 80111b8:	2800      	cmp	r0, #0
 80111ba:	d160      	bne.n	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 80111bc:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 80111c0:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80111c4:	b2b2      	uxth	r2, r6
 80111c6:	4413      	add	r3, r2
 80111c8:	1a8a      	subs	r2, r1, r2
 80111ca:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 80111ce:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 80111d2:	b21b      	sxth	r3, r3
 80111d4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80111d8:	2a00      	cmp	r2, #0
 80111da:	d150      	bne.n	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 80111dc:	6822      	ldr	r2, [r4, #0]
 80111de:	8869      	ldrh	r1, [r5, #2]
 80111e0:	7a12      	ldrb	r2, [r2, #8]
 80111e2:	1a9b      	subs	r3, r3, r2
 80111e4:	88ea      	ldrh	r2, [r5, #6]
 80111e6:	440a      	add	r2, r1
 80111e8:	b212      	sxth	r2, r2
 80111ea:	4293      	cmp	r3, r2
 80111ec:	dda7      	ble.n	801113e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80111ee:	e046      	b.n	801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 80111f0:	7c23      	ldrb	r3, [r4, #16]
 80111f2:	444f      	add	r7, r9
 80111f4:	b1c3      	cbz	r3, 8011228 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80111f6:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80111fa:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80111fe:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011202:	443b      	add	r3, r7
 8011204:	4293      	cmp	r3, r2
 8011206:	da97      	bge.n	8011138 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8011208:	a80e      	add	r0, sp, #56	; 0x38
 801120a:	f7ff fdeb 	bl	8010de4 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801120e:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 8011212:	3b01      	subs	r3, #1
 8011214:	b29b      	uxth	r3, r3
 8011216:	454b      	cmp	r3, r9
 8011218:	9309      	str	r3, [sp, #36]	; 0x24
 801121a:	d021      	beq.n	8011260 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 801121c:	7961      	ldrb	r1, [r4, #5]
 801121e:	a817      	add	r0, sp, #92	; 0x5c
 8011220:	f7f4 f8b2 	bl	8005388 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8011224:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011226:	e7f4      	b.n	8011212 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8011228:	fa1f f986 	uxth.w	r9, r6
 801122c:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011230:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8011234:	443b      	add	r3, r7
 8011236:	4293      	cmp	r3, r2
 8011238:	f6bf af7e 	bge.w	8011138 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 801123c:	a817      	add	r0, sp, #92	; 0x5c
 801123e:	f002 fda9 	bl	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8011242:	b1e0      	cbz	r0, 801127e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011244:	280a      	cmp	r0, #10
 8011246:	d1f1      	bne.n	801122c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011248:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801124c:	444b      	add	r3, r9
 801124e:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011252:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8011256:	eba3 0309 	sub.w	r3, r3, r9
 801125a:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801125e:	e7e5      	b.n	801122c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011260:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011264:	b2b3      	uxth	r3, r6
 8011266:	441a      	add	r2, r3
 8011268:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 801126c:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 8011270:	1ad3      	subs	r3, r2, r3
 8011272:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011276:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 801127a:	2b00      	cmp	r3, #0
 801127c:	d1bd      	bne.n	80111fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801127e:	b063      	add	sp, #396	; 0x18c
 8011280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011284:	2a02      	cmp	r2, #2
 8011286:	d105      	bne.n	8011294 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 8011288:	7be2      	ldrb	r2, [r4, #15]
 801128a:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801128e:	1a80      	subs	r0, r0, r2
 8011290:	1ac0      	subs	r0, r0, r3
 8011292:	e776      	b.n	8011182 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011294:	2000      	movs	r0, #0
 8011296:	e775      	b.n	8011184 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011298:	7be0      	ldrb	r0, [r4, #15]
 801129a:	e773      	b.n	8011184 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 801129c:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80112a0:	e776      	b.n	8011190 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 80112a2:	f1ba 0f00 	cmp.w	sl, #0
 80112a6:	d0f7      	beq.n	8011298 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 80112a8:	2264      	movs	r2, #100	; 0x64
 80112aa:	4639      	mov	r1, r7
 80112ac:	a849      	add	r0, sp, #292	; 0x124
 80112ae:	f011 fd05 	bl	8022cbc <memcpy>
 80112b2:	2300      	movs	r3, #0
 80112b4:	f647 72ff 	movw	r2, #32767	; 0x7fff
 80112b8:	6821      	ldr	r1, [r4, #0]
 80112ba:	a849      	add	r0, sp, #292	; 0x124
 80112bc:	f7ff fbb1 	bl	8010a22 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 80112c0:	b203      	sxth	r3, r0
 80112c2:	e754      	b.n	801116e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

080112c4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 80112c4:	2b03      	cmp	r3, #3
 80112c6:	d818      	bhi.n	80112fa <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 80112c8:	e8df f003 	tbb	[pc, r3]
 80112cc:	130d0602 	.word	0x130d0602
 80112d0:	f9b0 2000 	ldrsh.w	r2, [r0]
 80112d4:	1850      	adds	r0, r2, r1
 80112d6:	4770      	bx	lr
 80112d8:	8803      	ldrh	r3, [r0, #0]
 80112da:	8880      	ldrh	r0, [r0, #4]
 80112dc:	4418      	add	r0, r3
 80112de:	b200      	sxth	r0, r0
 80112e0:	1a80      	subs	r0, r0, r2
 80112e2:	3801      	subs	r0, #1
 80112e4:	4770      	bx	lr
 80112e6:	8803      	ldrh	r3, [r0, #0]
 80112e8:	8880      	ldrh	r0, [r0, #4]
 80112ea:	4418      	add	r0, r3
 80112ec:	b200      	sxth	r0, r0
 80112ee:	1a40      	subs	r0, r0, r1
 80112f0:	e7f7      	b.n	80112e2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80112f2:	f9b0 0000 	ldrsh.w	r0, [r0]
 80112f6:	4410      	add	r0, r2
 80112f8:	4770      	bx	lr
 80112fa:	2000      	movs	r0, #0
 80112fc:	4770      	bx	lr

080112fe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80112fe:	2b03      	cmp	r3, #3
 8011300:	d817      	bhi.n	8011332 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8011302:	e8df f003 	tbb	[pc, r3]
 8011306:	0602      	.short	0x0602
 8011308:	1009      	.short	0x1009
 801130a:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 801130e:	1850      	adds	r0, r2, r1
 8011310:	4770      	bx	lr
 8011312:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011316:	e7fa      	b.n	801130e <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8011318:	8843      	ldrh	r3, [r0, #2]
 801131a:	88c0      	ldrh	r0, [r0, #6]
 801131c:	4418      	add	r0, r3
 801131e:	b200      	sxth	r0, r0
 8011320:	1a80      	subs	r0, r0, r2
 8011322:	3801      	subs	r0, #1
 8011324:	4770      	bx	lr
 8011326:	8843      	ldrh	r3, [r0, #2]
 8011328:	88c0      	ldrh	r0, [r0, #6]
 801132a:	4418      	add	r0, r3
 801132c:	b200      	sxth	r0, r0
 801132e:	1a40      	subs	r0, r0, r1
 8011330:	e7f7      	b.n	8011322 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8011332:	2000      	movs	r0, #0
 8011334:	4770      	bx	lr
	...

08011338 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8011338:	4b01      	ldr	r3, [pc, #4]	; (8011340 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 801133a:	2200      	movs	r2, #0
 801133c:	601a      	str	r2, [r3, #0]
 801133e:	4770      	bx	lr
 8011340:	20013768 	.word	0x20013768

08011344 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011344:	4603      	mov	r3, r0
 8011346:	b1c8      	cbz	r0, 801137c <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8011348:	0c02      	lsrs	r2, r0, #16
 801134a:	0412      	lsls	r2, r2, #16
 801134c:	b9a2      	cbnz	r2, 8011378 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801134e:	0403      	lsls	r3, r0, #16
 8011350:	2010      	movs	r0, #16
 8011352:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011356:	bf04      	itt	eq
 8011358:	021b      	lsleq	r3, r3, #8
 801135a:	3008      	addeq	r0, #8
 801135c:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011360:	bf04      	itt	eq
 8011362:	011b      	lsleq	r3, r3, #4
 8011364:	3004      	addeq	r0, #4
 8011366:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 801136a:	bf04      	itt	eq
 801136c:	009b      	lsleq	r3, r3, #2
 801136e:	3002      	addeq	r0, #2
 8011370:	2b00      	cmp	r3, #0
 8011372:	db04      	blt.n	801137e <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011374:	3001      	adds	r0, #1
 8011376:	4770      	bx	lr
 8011378:	2000      	movs	r0, #0
 801137a:	e7ea      	b.n	8011352 <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 801137c:	2020      	movs	r0, #32
 801137e:	4770      	bx	lr

08011380 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8011380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011384:	b087      	sub	sp, #28
 8011386:	4681      	mov	r9, r0
 8011388:	4698      	mov	r8, r3
 801138a:	4610      	mov	r0, r2
 801138c:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 8011390:	460d      	mov	r5, r1
 8011392:	b981      	cbnz	r1, 80113b6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8011394:	b14b      	cbz	r3, 80113aa <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8011396:	460b      	mov	r3, r1
 8011398:	e9cd 4700 	strd	r4, r7, [sp]
 801139c:	464a      	mov	r2, r9
 801139e:	4641      	mov	r1, r8
 80113a0:	f7ff ffee 	bl	8011380 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113a4:	b007      	add	sp, #28
 80113a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80113aa:	f04f 33ff 	mov.w	r3, #4294967295
 80113ae:	603b      	str	r3, [r7, #0]
 80113b0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 80113b4:	e7f6      	b.n	80113a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80113b6:	fa32 fa01 	lsrs.w	sl, r2, r1
 80113ba:	d107      	bne.n	80113cc <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 80113bc:	fb09 f602 	mul.w	r6, r9, r2
 80113c0:	fbb6 f0f4 	udiv	r0, r6, r4
 80113c4:	fb04 6610 	mls	r6, r4, r0, r6
 80113c8:	603e      	str	r6, [r7, #0]
 80113ca:	e7eb      	b.n	80113a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 80113cc:	2601      	movs	r6, #1
 80113ce:	408e      	lsls	r6, r1
 80113d0:	3e01      	subs	r6, #1
 80113d2:	4016      	ands	r6, r2
 80113d4:	fa09 fb01 	lsl.w	fp, r9, r1
 80113d8:	4630      	mov	r0, r6
 80113da:	fbbb f3f4 	udiv	r3, fp, r4
 80113de:	9302      	str	r3, [sp, #8]
 80113e0:	fb0a f303 	mul.w	r3, sl, r3
 80113e4:	9303      	str	r3, [sp, #12]
 80113e6:	f7ff ffad 	bl	8011344 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80113ea:	464a      	mov	r2, r9
 80113ec:	460b      	mov	r3, r1
 80113ee:	e9cd 4700 	strd	r4, r7, [sp]
 80113f2:	4601      	mov	r1, r0
 80113f4:	4630      	mov	r0, r6
 80113f6:	f7ff ffc3 	bl	8011380 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113fa:	9b02      	ldr	r3, [sp, #8]
 80113fc:	fb04 bb13 	mls	fp, r4, r3, fp
 8011400:	4606      	mov	r6, r0
 8011402:	4658      	mov	r0, fp
 8011404:	eb05 0108 	add.w	r1, r5, r8
 8011408:	f7ff ff9c 	bl	8011344 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801140c:	ab05      	add	r3, sp, #20
 801140e:	e9cd 4300 	strd	r4, r3, [sp]
 8011412:	465a      	mov	r2, fp
 8011414:	4603      	mov	r3, r0
 8011416:	4650      	mov	r0, sl
 8011418:	f7ff ffb2 	bl	8011380 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801141c:	6839      	ldr	r1, [r7, #0]
 801141e:	9a05      	ldr	r2, [sp, #20]
 8011420:	9b03      	ldr	r3, [sp, #12]
 8011422:	4411      	add	r1, r2
 8011424:	fbb1 f2f4 	udiv	r2, r1, r4
 8011428:	18d3      	adds	r3, r2, r3
 801142a:	441e      	add	r6, r3
 801142c:	fb04 1412 	mls	r4, r4, r2, r1
 8011430:	4430      	add	r0, r6
 8011432:	603c      	str	r4, [r7, #0]
 8011434:	e7b6      	b.n	80113a4 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

08011436 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8011436:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801143a:	b085      	sub	sp, #20
 801143c:	f1b0 0900 	subs.w	r9, r0, #0
 8011440:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8011442:	461d      	mov	r5, r3
 8011444:	bfbf      	itttt	lt
 8011446:	6823      	ldrlt	r3, [r4, #0]
 8011448:	425b      	neglt	r3, r3
 801144a:	f1c9 0900 	rsblt	r9, r9, #0
 801144e:	6023      	strlt	r3, [r4, #0]
 8011450:	bfb4      	ite	lt
 8011452:	f04f 36ff 	movlt.w	r6, #4294967295
 8011456:	2601      	movge	r6, #1
 8011458:	2a00      	cmp	r2, #0
 801145a:	4617      	mov	r7, r2
 801145c:	da04      	bge.n	8011468 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801145e:	6823      	ldr	r3, [r4, #0]
 8011460:	425b      	negs	r3, r3
 8011462:	4257      	negs	r7, r2
 8011464:	4276      	negs	r6, r6
 8011466:	6023      	str	r3, [r4, #0]
 8011468:	2d00      	cmp	r5, #0
 801146a:	4638      	mov	r0, r7
 801146c:	bfba      	itte	lt
 801146e:	426d      	neglt	r5, r5
 8011470:	f04f 38ff 	movlt.w	r8, #4294967295
 8011474:	f04f 0801 	movge.w	r8, #1
 8011478:	f7ff ff64 	bl	8011344 <_ZN8touchgfx16TouchCalibration4clzuEm>
 801147c:	ab03      	add	r3, sp, #12
 801147e:	e9cd 5300 	strd	r5, r3, [sp]
 8011482:	463a      	mov	r2, r7
 8011484:	4603      	mov	r3, r0
 8011486:	4648      	mov	r0, r9
 8011488:	f7ff ff7a 	bl	8011380 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 801148c:	6823      	ldr	r3, [r4, #0]
 801148e:	9a03      	ldr	r2, [sp, #12]
 8011490:	4546      	cmp	r6, r8
 8011492:	441a      	add	r2, r3
 8011494:	fb92 f3f5 	sdiv	r3, r2, r5
 8011498:	4418      	add	r0, r3
 801149a:	bf18      	it	ne
 801149c:	4240      	negne	r0, r0
 801149e:	fb05 2313 	mls	r3, r5, r3, r2
 80114a2:	1c72      	adds	r2, r6, #1
 80114a4:	6023      	str	r3, [r4, #0]
 80114a6:	d105      	bne.n	80114b4 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 80114a8:	2b00      	cmp	r3, #0
 80114aa:	f1c3 0200 	rsb	r2, r3, #0
 80114ae:	db0b      	blt.n	80114c8 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 80114b0:	6022      	str	r2, [r4, #0]
 80114b2:	e006      	b.n	80114c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114b4:	2e01      	cmp	r6, #1
 80114b6:	d104      	bne.n	80114c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114b8:	2b00      	cmp	r3, #0
 80114ba:	da02      	bge.n	80114c2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 80114bc:	442b      	add	r3, r5
 80114be:	3801      	subs	r0, #1
 80114c0:	6023      	str	r3, [r4, #0]
 80114c2:	b005      	add	sp, #20
 80114c4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80114c8:	3801      	subs	r0, #1
 80114ca:	1b52      	subs	r2, r2, r5
 80114cc:	e7f0      	b.n	80114b0 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

080114d0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 80114d0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80114d4:	4c1c      	ldr	r4, [pc, #112]	; (8011548 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 80114d6:	6807      	ldr	r7, [r0, #0]
 80114d8:	69a3      	ldr	r3, [r4, #24]
 80114da:	4605      	mov	r5, r0
 80114dc:	b92b      	cbnz	r3, 80114ea <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 80114de:	6840      	ldr	r0, [r0, #4]
 80114e0:	e9c5 7000 	strd	r7, r0, [r5]
 80114e4:	b004      	add	sp, #16
 80114e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114ea:	68a2      	ldr	r2, [r4, #8]
 80114ec:	6820      	ldr	r0, [r4, #0]
 80114ee:	ae04      	add	r6, sp, #16
 80114f0:	f04f 0802 	mov.w	r8, #2
 80114f4:	fb93 f1f8 	sdiv	r1, r3, r8
 80114f8:	440a      	add	r2, r1
 80114fa:	f846 2d04 	str.w	r2, [r6, #-4]!
 80114fe:	69e1      	ldr	r1, [r4, #28]
 8011500:	9600      	str	r6, [sp, #0]
 8011502:	463a      	mov	r2, r7
 8011504:	f7ff ff97 	bl	8011436 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011508:	69a3      	ldr	r3, [r4, #24]
 801150a:	686a      	ldr	r2, [r5, #4]
 801150c:	6a21      	ldr	r1, [r4, #32]
 801150e:	9600      	str	r6, [sp, #0]
 8011510:	4607      	mov	r7, r0
 8011512:	6860      	ldr	r0, [r4, #4]
 8011514:	f7ff ff8f 	bl	8011436 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011518:	6962      	ldr	r2, [r4, #20]
 801151a:	69a3      	ldr	r3, [r4, #24]
 801151c:	fb93 f8f8 	sdiv	r8, r3, r8
 8011520:	4442      	add	r2, r8
 8011522:	9203      	str	r2, [sp, #12]
 8011524:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8011526:	682a      	ldr	r2, [r5, #0]
 8011528:	9600      	str	r6, [sp, #0]
 801152a:	4407      	add	r7, r0
 801152c:	68e0      	ldr	r0, [r4, #12]
 801152e:	f7ff ff82 	bl	8011436 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011532:	9600      	str	r6, [sp, #0]
 8011534:	4680      	mov	r8, r0
 8011536:	69a3      	ldr	r3, [r4, #24]
 8011538:	686a      	ldr	r2, [r5, #4]
 801153a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 801153c:	6920      	ldr	r0, [r4, #16]
 801153e:	f7ff ff7a 	bl	8011436 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8011542:	4440      	add	r0, r8
 8011544:	e7cc      	b.n	80114e0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8011546:	bf00      	nop
 8011548:	2001376c 	.word	0x2001376c

0801154c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 801154c:	4b07      	ldr	r3, [pc, #28]	; (801156c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801154e:	781b      	ldrb	r3, [r3, #0]
 8011550:	2b01      	cmp	r3, #1
 8011552:	d109      	bne.n	8011568 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011554:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011558:	f9b0 2000 	ldrsh.w	r2, [r0]
 801155c:	8003      	strh	r3, [r0, #0]
 801155e:	4b04      	ldr	r3, [pc, #16]	; (8011570 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8011560:	881b      	ldrh	r3, [r3, #0]
 8011562:	3b01      	subs	r3, #1
 8011564:	1a9b      	subs	r3, r3, r2
 8011566:	800b      	strh	r3, [r1, #0]
 8011568:	4770      	bx	lr
 801156a:	bf00      	nop
 801156c:	20013750 	.word	0x20013750
 8011570:	2001374c 	.word	0x2001374c

08011574 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011574:	b510      	push	{r4, lr}
 8011576:	4b07      	ldr	r3, [pc, #28]	; (8011594 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011578:	781b      	ldrb	r3, [r3, #0]
 801157a:	2b01      	cmp	r3, #1
 801157c:	d108      	bne.n	8011590 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801157e:	4b06      	ldr	r3, [pc, #24]	; (8011598 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8011580:	880c      	ldrh	r4, [r1, #0]
 8011582:	881b      	ldrh	r3, [r3, #0]
 8011584:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011588:	3b01      	subs	r3, #1
 801158a:	1b1b      	subs	r3, r3, r4
 801158c:	8003      	strh	r3, [r0, #0]
 801158e:	800a      	strh	r2, [r1, #0]
 8011590:	bd10      	pop	{r4, pc}
 8011592:	bf00      	nop
 8011594:	20013750 	.word	0x20013750
 8011598:	2001374c 	.word	0x2001374c

0801159c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 801159c:	b510      	push	{r4, lr}
 801159e:	4b0a      	ldr	r3, [pc, #40]	; (80115c8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 80115a0:	781b      	ldrb	r3, [r3, #0]
 80115a2:	2b01      	cmp	r3, #1
 80115a4:	d10e      	bne.n	80115c4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 80115a6:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80115aa:	8843      	ldrh	r3, [r0, #2]
 80115ac:	f9b0 4000 	ldrsh.w	r4, [r0]
 80115b0:	8044      	strh	r4, [r0, #2]
 80115b2:	18ca      	adds	r2, r1, r3
 80115b4:	4b05      	ldr	r3, [pc, #20]	; (80115cc <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 80115b6:	881b      	ldrh	r3, [r3, #0]
 80115b8:	1a9b      	subs	r3, r3, r2
 80115ba:	8003      	strh	r3, [r0, #0]
 80115bc:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80115c0:	80c3      	strh	r3, [r0, #6]
 80115c2:	8081      	strh	r1, [r0, #4]
 80115c4:	bd10      	pop	{r4, pc}
 80115c6:	bf00      	nop
 80115c8:	20013750 	.word	0x20013750
 80115cc:	2001374c 	.word	0x2001374c

080115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 80115d0:	4b08      	ldr	r3, [pc, #32]	; (80115f4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 80115d2:	781b      	ldrb	r3, [r3, #0]
 80115d4:	2b01      	cmp	r3, #1
 80115d6:	d10c      	bne.n	80115f2 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 80115d8:	8803      	ldrh	r3, [r0, #0]
 80115da:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 80115de:	8842      	ldrh	r2, [r0, #2]
 80115e0:	8002      	strh	r2, [r0, #0]
 80115e2:	185a      	adds	r2, r3, r1
 80115e4:	4b04      	ldr	r3, [pc, #16]	; (80115f8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80115e6:	881b      	ldrh	r3, [r3, #0]
 80115e8:	1a9b      	subs	r3, r3, r2
 80115ea:	8043      	strh	r3, [r0, #2]
 80115ec:	88c3      	ldrh	r3, [r0, #6]
 80115ee:	8083      	strh	r3, [r0, #4]
 80115f0:	80c1      	strh	r1, [r0, #6]
 80115f2:	4770      	bx	lr
 80115f4:	20013750 	.word	0x20013750
 80115f8:	2001374c 	.word	0x2001374c

080115fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80115fc:	b510      	push	{r4, lr}
 80115fe:	4b07      	ldr	r3, [pc, #28]	; (801161c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8011600:	781b      	ldrb	r3, [r3, #0]
 8011602:	2b01      	cmp	r3, #1
 8011604:	d108      	bne.n	8011618 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8011606:	f9b1 3000 	ldrsh.w	r3, [r1]
 801160a:	f9b0 4000 	ldrsh.w	r4, [r0]
 801160e:	8003      	strh	r3, [r0, #0]
 8011610:	8893      	ldrh	r3, [r2, #4]
 8011612:	3b01      	subs	r3, #1
 8011614:	1b1b      	subs	r3, r3, r4
 8011616:	800b      	strh	r3, [r1, #0]
 8011618:	bd10      	pop	{r4, pc}
 801161a:	bf00      	nop
 801161c:	20013750 	.word	0x20013750

08011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 8011620:	4b0b      	ldr	r3, [pc, #44]	; (8011650 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 8011622:	781b      	ldrb	r3, [r3, #0]
 8011624:	2b01      	cmp	r3, #1
 8011626:	d111      	bne.n	801164c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 8011628:	680b      	ldr	r3, [r1, #0]
 801162a:	ed90 7a00 	vldr	s14, [r0]
 801162e:	6003      	str	r3, [r0, #0]
 8011630:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 8011634:	eddf 6a07 	vldr	s13, [pc, #28]	; 8011654 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 8011638:	ee07 3a90 	vmov	s15, r3
 801163c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8011640:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011644:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8011648:	edc1 7a00 	vstr	s15, [r1]
 801164c:	4770      	bx	lr
 801164e:	bf00      	nop
 8011650:	20013750 	.word	0x20013750
 8011654:	38d1b717 	.word	0x38d1b717

08011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011658:	b510      	push	{r4, lr}
 801165a:	4b0a      	ldr	r3, [pc, #40]	; (8011684 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 801165c:	781b      	ldrb	r3, [r3, #0]
 801165e:	2b01      	cmp	r3, #1
 8011660:	460a      	mov	r2, r1
 8011662:	d10d      	bne.n	8011680 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011664:	8881      	ldrh	r1, [r0, #4]
 8011666:	8803      	ldrh	r3, [r0, #0]
 8011668:	440b      	add	r3, r1
 801166a:	4601      	mov	r1, r0
 801166c:	3b01      	subs	r3, #1
 801166e:	f821 3b02 	strh.w	r3, [r1], #2
 8011672:	f7ff ffc3 	bl	80115fc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011676:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801167a:	88c2      	ldrh	r2, [r0, #6]
 801167c:	8082      	strh	r2, [r0, #4]
 801167e:	80c3      	strh	r3, [r0, #6]
 8011680:	bd10      	pop	{r4, pc}
 8011682:	bf00      	nop
 8011684:	20013750 	.word	0x20013750

08011688 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011688:	4b06      	ldr	r3, [pc, #24]	; (80116a4 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 801168a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801168e:	4b06      	ldr	r3, [pc, #24]	; (80116a8 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8011690:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8011694:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011698:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 801169c:	2100      	movs	r1, #0
 801169e:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 80116a2:	4770      	bx	lr
 80116a4:	2001374c 	.word	0x2001374c
 80116a8:	2001374e 	.word	0x2001374e

080116ac <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 80116ac:	4b03      	ldr	r3, [pc, #12]	; (80116bc <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 80116ae:	6818      	ldr	r0, [r3, #0]
 80116b0:	b110      	cbz	r0, 80116b8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 80116b2:	6803      	ldr	r3, [r0, #0]
 80116b4:	699b      	ldr	r3, [r3, #24]
 80116b6:	4718      	bx	r3
 80116b8:	4770      	bx	lr
 80116ba:	bf00      	nop
 80116bc:	2001379c 	.word	0x2001379c

080116c0 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 80116c0:	4770      	bx	lr
	...

080116c4 <_ZN8touchgfx11Application4drawEv>:
 80116c4:	b507      	push	{r0, r1, r2, lr}
 80116c6:	4b09      	ldr	r3, [pc, #36]	; (80116ec <_ZN8touchgfx11Application4drawEv+0x28>)
 80116c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80116cc:	4b08      	ldr	r3, [pc, #32]	; (80116f0 <_ZN8touchgfx11Application4drawEv+0x2c>)
 80116ce:	f8ad 2004 	strh.w	r2, [sp, #4]
 80116d2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80116d6:	f8ad 3006 	strh.w	r3, [sp, #6]
 80116da:	6803      	ldr	r3, [r0, #0]
 80116dc:	2100      	movs	r1, #0
 80116de:	9100      	str	r1, [sp, #0]
 80116e0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80116e2:	4669      	mov	r1, sp
 80116e4:	4798      	blx	r3
 80116e6:	b003      	add	sp, #12
 80116e8:	f85d fb04 	ldr.w	pc, [sp], #4
 80116ec:	2001374c 	.word	0x2001374c
 80116f0:	2001374e 	.word	0x2001374e

080116f4 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80116f4:	4b03      	ldr	r3, [pc, #12]	; (8011704 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80116f6:	6818      	ldr	r0, [r3, #0]
 80116f8:	b110      	cbz	r0, 8011700 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80116fa:	6803      	ldr	r3, [r0, #0]
 80116fc:	69db      	ldr	r3, [r3, #28]
 80116fe:	4718      	bx	r3
 8011700:	4770      	bx	lr
 8011702:	bf00      	nop
 8011704:	2001379c 	.word	0x2001379c

08011708 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8011708:	4b03      	ldr	r3, [pc, #12]	; (8011718 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 801170a:	6818      	ldr	r0, [r3, #0]
 801170c:	b110      	cbz	r0, 8011714 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801170e:	6803      	ldr	r3, [r0, #0]
 8011710:	6a1b      	ldr	r3, [r3, #32]
 8011712:	4718      	bx	r3
 8011714:	4770      	bx	lr
 8011716:	bf00      	nop
 8011718:	2001379c 	.word	0x2001379c

0801171c <_ZN8touchgfx11Application16clearCachedAreasEv>:
 801171c:	2300      	movs	r3, #0
 801171e:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 8011722:	4770      	bx	lr

08011724 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8011724:	4b03      	ldr	r3, [pc, #12]	; (8011734 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8011726:	6818      	ldr	r0, [r3, #0]
 8011728:	b110      	cbz	r0, 8011730 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 801172a:	6803      	ldr	r3, [r0, #0]
 801172c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801172e:	4718      	bx	r3
 8011730:	4770      	bx	lr
 8011732:	bf00      	nop
 8011734:	2001379c 	.word	0x2001379c

08011738 <_ZN8touchgfx11ApplicationD1Ev>:
 8011738:	4770      	bx	lr

0801173a <_ZN8touchgfx11ApplicationD0Ev>:
 801173a:	b510      	push	{r4, lr}
 801173c:	f44f 719e 	mov.w	r1, #316	; 0x13c
 8011740:	4604      	mov	r4, r0
 8011742:	f010 fc2a 	bl	8021f9a <_ZdlPvj>
 8011746:	4620      	mov	r0, r4
 8011748:	bd10      	pop	{r4, pc}

0801174a <_ZNK8touchgfx4Rect9intersectERKS0_>:
 801174a:	b510      	push	{r4, lr}
 801174c:	f9b1 4000 	ldrsh.w	r4, [r1]
 8011750:	888a      	ldrh	r2, [r1, #4]
 8011752:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011756:	4422      	add	r2, r4
 8011758:	b212      	sxth	r2, r2
 801175a:	4293      	cmp	r3, r2
 801175c:	da15      	bge.n	801178a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801175e:	8882      	ldrh	r2, [r0, #4]
 8011760:	4413      	add	r3, r2
 8011762:	b21b      	sxth	r3, r3
 8011764:	429c      	cmp	r4, r3
 8011766:	da10      	bge.n	801178a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011768:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 801176c:	88c9      	ldrh	r1, [r1, #6]
 801176e:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8011772:	4419      	add	r1, r3
 8011774:	b209      	sxth	r1, r1
 8011776:	428a      	cmp	r2, r1
 8011778:	da07      	bge.n	801178a <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801177a:	88c0      	ldrh	r0, [r0, #6]
 801177c:	4410      	add	r0, r2
 801177e:	b200      	sxth	r0, r0
 8011780:	4283      	cmp	r3, r0
 8011782:	bfac      	ite	ge
 8011784:	2000      	movge	r0, #0
 8011786:	2001      	movlt	r0, #1
 8011788:	bd10      	pop	{r4, pc}
 801178a:	2000      	movs	r0, #0
 801178c:	e7fc      	b.n	8011788 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801178e <_ZN8touchgfx4Rect10restrictToEss>:
 801178e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011792:	2b00      	cmp	r3, #0
 8011794:	b510      	push	{r4, lr}
 8011796:	da04      	bge.n	80117a2 <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011798:	8884      	ldrh	r4, [r0, #4]
 801179a:	4423      	add	r3, r4
 801179c:	8083      	strh	r3, [r0, #4]
 801179e:	2300      	movs	r3, #0
 80117a0:	8003      	strh	r3, [r0, #0]
 80117a2:	f9b0 4000 	ldrsh.w	r4, [r0]
 80117a6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80117aa:	1b09      	subs	r1, r1, r4
 80117ac:	428b      	cmp	r3, r1
 80117ae:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80117b2:	bfc8      	it	gt
 80117b4:	8081      	strhgt	r1, [r0, #4]
 80117b6:	2b00      	cmp	r3, #0
 80117b8:	da04      	bge.n	80117c4 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80117ba:	88c1      	ldrh	r1, [r0, #6]
 80117bc:	440b      	add	r3, r1
 80117be:	80c3      	strh	r3, [r0, #6]
 80117c0:	2300      	movs	r3, #0
 80117c2:	8043      	strh	r3, [r0, #2]
 80117c4:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80117c8:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 80117cc:	1a52      	subs	r2, r2, r1
 80117ce:	4293      	cmp	r3, r2
 80117d0:	bfc8      	it	gt
 80117d2:	80c2      	strhgt	r2, [r0, #6]
 80117d4:	bd10      	pop	{r4, pc}
	...

080117d8 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 80117d8:	b510      	push	{r4, lr}
 80117da:	4b10      	ldr	r3, [pc, #64]	; (801181c <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 80117dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 80117e0:	4b0f      	ldr	r3, [pc, #60]	; (8011820 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 80117e2:	460c      	mov	r4, r1
 80117e4:	4620      	mov	r0, r4
 80117e6:	f9b3 1000 	ldrsh.w	r1, [r3]
 80117ea:	f7ff ffd0 	bl	801178e <_ZN8touchgfx4Rect10restrictToEss>
 80117ee:	4b0d      	ldr	r3, [pc, #52]	; (8011824 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80117f0:	6818      	ldr	r0, [r3, #0]
 80117f2:	b190      	cbz	r0, 801181a <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80117f4:	6803      	ldr	r3, [r0, #0]
 80117f6:	4621      	mov	r1, r4
 80117f8:	689b      	ldr	r3, [r3, #8]
 80117fa:	4798      	blx	r3
 80117fc:	4b0a      	ldr	r3, [pc, #40]	; (8011828 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80117fe:	6818      	ldr	r0, [r3, #0]
 8011800:	b118      	cbz	r0, 801180a <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 8011802:	6803      	ldr	r3, [r0, #0]
 8011804:	4621      	mov	r1, r4
 8011806:	689b      	ldr	r3, [r3, #8]
 8011808:	4798      	blx	r3
 801180a:	4b08      	ldr	r3, [pc, #32]	; (801182c <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 801180c:	6818      	ldr	r0, [r3, #0]
 801180e:	6803      	ldr	r3, [r0, #0]
 8011810:	4621      	mov	r1, r4
 8011812:	69db      	ldr	r3, [r3, #28]
 8011814:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011818:	4718      	bx	r3
 801181a:	bd10      	pop	{r4, pc}
 801181c:	2001374e 	.word	0x2001374e
 8011820:	2001374c 	.word	0x2001374c
 8011824:	2001379c 	.word	0x2001379c
 8011828:	20013798 	.word	0x20013798
 801182c:	20013758 	.word	0x20013758

08011830 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8011830:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011832:	4606      	mov	r6, r0
 8011834:	4608      	mov	r0, r1
 8011836:	460f      	mov	r7, r1
 8011838:	f7fa faf7 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 801183c:	b9e8      	cbnz	r0, 801187a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801183e:	f9b7 5000 	ldrsh.w	r5, [r7]
 8011842:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011846:	42a5      	cmp	r5, r4
 8011848:	db17      	blt.n	801187a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801184a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801184e:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 8011852:	429a      	cmp	r2, r3
 8011854:	db11      	blt.n	801187a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011856:	88b9      	ldrh	r1, [r7, #4]
 8011858:	440d      	add	r5, r1
 801185a:	88b1      	ldrh	r1, [r6, #4]
 801185c:	440c      	add	r4, r1
 801185e:	b22d      	sxth	r5, r5
 8011860:	b224      	sxth	r4, r4
 8011862:	42a5      	cmp	r5, r4
 8011864:	dc09      	bgt.n	801187a <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011866:	88f8      	ldrh	r0, [r7, #6]
 8011868:	4410      	add	r0, r2
 801186a:	88f2      	ldrh	r2, [r6, #6]
 801186c:	4413      	add	r3, r2
 801186e:	b200      	sxth	r0, r0
 8011870:	b21b      	sxth	r3, r3
 8011872:	4298      	cmp	r0, r3
 8011874:	bfcc      	ite	gt
 8011876:	2000      	movgt	r0, #0
 8011878:	2001      	movle	r0, #1
 801187a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0801187c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 801187c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801187e:	4604      	mov	r4, r0
 8011880:	4608      	mov	r0, r1
 8011882:	460d      	mov	r5, r1
 8011884:	f7fa fad1 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011888:	b978      	cbnz	r0, 80118aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 801188a:	4620      	mov	r0, r4
 801188c:	f7fa facd 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011890:	f9b5 6000 	ldrsh.w	r6, [r5]
 8011894:	b150      	cbz	r0, 80118ac <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 8011896:	8026      	strh	r6, [r4, #0]
 8011898:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801189c:	8063      	strh	r3, [r4, #2]
 801189e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80118a2:	80a3      	strh	r3, [r4, #4]
 80118a4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80118a8:	80e3      	strh	r3, [r4, #6]
 80118aa:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80118ac:	f9b4 1000 	ldrsh.w	r1, [r4]
 80118b0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80118b4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80118b8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80118bc:	88ed      	ldrh	r5, [r5, #6]
 80118be:	42b1      	cmp	r1, r6
 80118c0:	460f      	mov	r7, r1
 80118c2:	bfa8      	it	ge
 80118c4:	4637      	movge	r7, r6
 80118c6:	4293      	cmp	r3, r2
 80118c8:	4618      	mov	r0, r3
 80118ca:	4466      	add	r6, ip
 80118cc:	bfa8      	it	ge
 80118ce:	4610      	movge	r0, r2
 80118d0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 80118d4:	8027      	strh	r7, [r4, #0]
 80118d6:	442a      	add	r2, r5
 80118d8:	88e5      	ldrh	r5, [r4, #6]
 80118da:	8060      	strh	r0, [r4, #2]
 80118dc:	4461      	add	r1, ip
 80118de:	442b      	add	r3, r5
 80118e0:	b236      	sxth	r6, r6
 80118e2:	b209      	sxth	r1, r1
 80118e4:	b212      	sxth	r2, r2
 80118e6:	b21b      	sxth	r3, r3
 80118e8:	428e      	cmp	r6, r1
 80118ea:	bfac      	ite	ge
 80118ec:	ebc7 0106 	rsbge	r1, r7, r6
 80118f0:	ebc7 0101 	rsblt	r1, r7, r1
 80118f4:	429a      	cmp	r2, r3
 80118f6:	bfac      	ite	ge
 80118f8:	ebc0 0202 	rsbge	r2, r0, r2
 80118fc:	ebc0 0203 	rsblt	r2, r0, r3
 8011900:	80a1      	strh	r1, [r4, #4]
 8011902:	80e2      	strh	r2, [r4, #6]
 8011904:	e7d1      	b.n	80118aa <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08011908 <_ZN8touchgfx11Application11getInstanceEv>:
 8011908:	4b01      	ldr	r3, [pc, #4]	; (8011910 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801190a:	6818      	ldr	r0, [r3, #0]
 801190c:	4770      	bx	lr
 801190e:	bf00      	nop
 8011910:	200137ac 	.word	0x200137ac

08011914 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8011914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011916:	4b10      	ldr	r3, [pc, #64]	; (8011958 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8011918:	781b      	ldrb	r3, [r3, #0]
 801191a:	4605      	mov	r5, r0
 801191c:	b1d3      	cbz	r3, 8011954 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801191e:	4b0f      	ldr	r3, [pc, #60]	; (801195c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8011920:	4f0f      	ldr	r7, [pc, #60]	; (8011960 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8011922:	881c      	ldrh	r4, [r3, #0]
 8011924:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8011928:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 801192c:	42a3      	cmp	r3, r4
 801192e:	d90e      	bls.n	801194e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8011930:	683b      	ldr	r3, [r7, #0]
 8011932:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011936:	b10a      	cbz	r2, 801193c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8011938:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801193a:	b900      	cbnz	r0, 801193e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 801193c:	6898      	ldr	r0, [r3, #8]
 801193e:	6803      	ldr	r3, [r0, #0]
 8011940:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8011944:	69db      	ldr	r3, [r3, #28]
 8011946:	3401      	adds	r4, #1
 8011948:	4798      	blx	r3
 801194a:	b2a4      	uxth	r4, r4
 801194c:	e7ec      	b.n	8011928 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801194e:	2300      	movs	r3, #0
 8011950:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8011954:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011956:	bf00      	nop
 8011958:	20013756 	.word	0x20013756
 801195c:	20000084 	.word	0x20000084
 8011960:	20013758 	.word	0x20013758

08011964 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011964:	b510      	push	{r4, lr}
 8011966:	2300      	movs	r3, #0
 8011968:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801196c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8011970:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011974:	4604      	mov	r4, r0
 8011976:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 801197a:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 801197e:	429a      	cmp	r2, r3
 8011980:	d90e      	bls.n	80119a0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 8011982:	18e2      	adds	r2, r4, r3
 8011984:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 8011988:	b122      	cbz	r2, 8011994 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 801198a:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 801198e:	6803      	ldr	r3, [r0, #0]
 8011990:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011992:	4798      	blx	r3
 8011994:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 8011998:	3301      	adds	r3, #1
 801199a:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 801199e:	e7ea      	b.n	8011976 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80119a0:	bd10      	pop	{r4, pc}

080119a2 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE>:
 80119a2:	b530      	push	{r4, r5, lr}
 80119a4:	f8b0 5080 	ldrh.w	r5, [r0, #128]	; 0x80
 80119a8:	2200      	movs	r2, #0
 80119aa:	b293      	uxth	r3, r2
 80119ac:	429d      	cmp	r5, r3
 80119ae:	d90e      	bls.n	80119ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80119b0:	f850 3022 	ldr.w	r3, [r0, r2, lsl #2]
 80119b4:	428b      	cmp	r3, r1
 80119b6:	d10b      	bne.n	80119d0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80119b8:	1884      	adds	r4, r0, r2
 80119ba:	f894 3084 	ldrb.w	r3, [r4, #132]	; 0x84
 80119be:	b13b      	cbz	r3, 80119d0 <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2e>
 80119c0:	3b01      	subs	r3, #1
 80119c2:	b2db      	uxtb	r3, r3
 80119c4:	f884 3084 	strb.w	r3, [r4, #132]	; 0x84
 80119c8:	b90b      	cbnz	r3, 80119ce <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x2c>
 80119ca:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 80119ce:	bd30      	pop	{r4, r5, pc}
 80119d0:	3201      	adds	r2, #1
 80119d2:	e7ea      	b.n	80119aa <_ZN8touchgfx11Application12TimerWidgets6removeEPKNS_8DrawableE+0x8>

080119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80119d4:	2300      	movs	r3, #0
 80119d6:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80119da:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80119de:	30a4      	adds	r0, #164	; 0xa4
 80119e0:	f802 3b01 	strb.w	r3, [r2], #1
 80119e4:	4282      	cmp	r2, r0
 80119e6:	d1fb      	bne.n	80119e0 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80119e8:	4770      	bx	lr
	...

080119ec <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80119ec:	b570      	push	{r4, r5, r6, lr}
 80119ee:	4c0b      	ldr	r4, [pc, #44]	; (8011a1c <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80119f0:	4605      	mov	r5, r0
 80119f2:	6820      	ldr	r0, [r4, #0]
 80119f4:	460e      	mov	r6, r1
 80119f6:	b110      	cbz	r0, 80119fe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80119f8:	6803      	ldr	r3, [r0, #0]
 80119fa:	695b      	ldr	r3, [r3, #20]
 80119fc:	4798      	blx	r3
 80119fe:	1d28      	adds	r0, r5, #4
 8011a00:	f7ff ffe8 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011a04:	6026      	str	r6, [r4, #0]
 8011a06:	6833      	ldr	r3, [r6, #0]
 8011a08:	4630      	mov	r0, r6
 8011a0a:	68db      	ldr	r3, [r3, #12]
 8011a0c:	4798      	blx	r3
 8011a0e:	682b      	ldr	r3, [r5, #0]
 8011a10:	4628      	mov	r0, r5
 8011a12:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011a14:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a18:	4718      	bx	r3
 8011a1a:	bf00      	nop
 8011a1c:	2001379c 	.word	0x2001379c

08011a20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 8011a20:	2300      	movs	r3, #0
 8011a22:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8011a26:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8011a2a:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011a2c:	461a      	mov	r2, r3
 8011a2e:	461c      	mov	r4, r3
 8011a30:	461d      	mov	r5, r3
 8011a32:	459c      	cmp	ip, r3
 8011a34:	dd1a      	ble.n	8011a6c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011a36:	18c6      	adds	r6, r0, r3
 8011a38:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8011a3c:	b16e      	cbz	r6, 8011a5a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 8011a3e:	429a      	cmp	r2, r3
 8011a40:	d008      	beq.n	8011a54 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 8011a42:	fa1f fe82 	uxth.w	lr, r2
 8011a46:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011a4a:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8011a4e:	1887      	adds	r7, r0, r2
 8011a50:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8011a54:	3201      	adds	r2, #1
 8011a56:	3301      	adds	r3, #1
 8011a58:	e7eb      	b.n	8011a32 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011a5a:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 8011a5e:	4299      	cmp	r1, r3
 8011a60:	bfa8      	it	ge
 8011a62:	3501      	addge	r5, #1
 8011a64:	429e      	cmp	r6, r3
 8011a66:	bfc8      	it	gt
 8011a68:	3401      	addgt	r4, #1
 8011a6a:	e7f4      	b.n	8011a56 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011a6c:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 8011a70:	1b49      	subs	r1, r1, r5
 8011a72:	1b1b      	subs	r3, r3, r4
 8011a74:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8011a78:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011a7c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 8011a80:	4293      	cmp	r3, r2
 8011a82:	dd03      	ble.n	8011a8c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011a84:	3b01      	subs	r3, #1
 8011a86:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8011a8a:	e7f7      	b.n	8011a7c <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011a8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08011a90 <_ZN8touchgfx11Application15handleTickEventEv>:
 8011a90:	b570      	push	{r4, r5, r6, lr}
 8011a92:	4d16      	ldr	r5, [pc, #88]	; (8011aec <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011a94:	4604      	mov	r4, r0
 8011a96:	6828      	ldr	r0, [r5, #0]
 8011a98:	b140      	cbz	r0, 8011aac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011a9a:	7a03      	ldrb	r3, [r0, #8]
 8011a9c:	b933      	cbnz	r3, 8011aac <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011a9e:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8011aa2:	6803      	ldr	r3, [r0, #0]
 8011aa4:	689b      	ldr	r3, [r3, #8]
 8011aa6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011aaa:	4718      	bx	r3
 8011aac:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 8011ab0:	4e0f      	ldr	r6, [pc, #60]	; (8011af0 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8011ab2:	b973      	cbnz	r3, 8011ad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011ab4:	b168      	cbz	r0, 8011ad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011ab6:	7a03      	ldrb	r3, [r0, #8]
 8011ab8:	b15b      	cbz	r3, 8011ad2 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8011aba:	6830      	ldr	r0, [r6, #0]
 8011abc:	b110      	cbz	r0, 8011ac4 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8011abe:	6803      	ldr	r3, [r0, #0]
 8011ac0:	691b      	ldr	r3, [r3, #16]
 8011ac2:	4798      	blx	r3
 8011ac4:	6828      	ldr	r0, [r5, #0]
 8011ac6:	6803      	ldr	r3, [r0, #0]
 8011ac8:	68db      	ldr	r3, [r3, #12]
 8011aca:	4798      	blx	r3
 8011acc:	2301      	movs	r3, #1
 8011ace:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 8011ad2:	3404      	adds	r4, #4
 8011ad4:	4620      	mov	r0, r4
 8011ad6:	f7ff ff45 	bl	8011964 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 8011ada:	4620      	mov	r0, r4
 8011adc:	f7ff ffa0 	bl	8011a20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8011ae0:	6830      	ldr	r0, [r6, #0]
 8011ae2:	b110      	cbz	r0, 8011aea <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8011ae4:	6803      	ldr	r3, [r0, #0]
 8011ae6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011ae8:	e7dd      	b.n	8011aa6 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 8011aea:	bd70      	pop	{r4, r5, r6, pc}
 8011aec:	200137a0 	.word	0x200137a0
 8011af0:	2001379c 	.word	0x2001379c

08011af4 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE>:
 8011af4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011af6:	2300      	movs	r3, #0
 8011af8:	4604      	mov	r4, r0
 8011afa:	460d      	mov	r5, r1
 8011afc:	f8b0 1080 	ldrh.w	r1, [r0, #128]	; 0x80
 8011b00:	4618      	mov	r0, r3
 8011b02:	b29a      	uxth	r2, r3
 8011b04:	4291      	cmp	r1, r2
 8011b06:	d911      	bls.n	8011b2c <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x38>
 8011b08:	f854 7023 	ldr.w	r7, [r4, r3, lsl #2]
 8011b0c:	18e6      	adds	r6, r4, r3
 8011b0e:	42af      	cmp	r7, r5
 8011b10:	f896 2084 	ldrb.w	r2, [r6, #132]	; 0x84
 8011b14:	d105      	bne.n	8011b22 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2e>
 8011b16:	2aff      	cmp	r2, #255	; 0xff
 8011b18:	d002      	beq.n	8011b20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8011b1a:	3201      	adds	r2, #1
 8011b1c:	f886 2084 	strb.w	r2, [r6, #132]	; 0x84
 8011b20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011b22:	2a00      	cmp	r2, #0
 8011b24:	bf08      	it	eq
 8011b26:	2001      	moveq	r0, #1
 8011b28:	3301      	adds	r3, #1
 8011b2a:	e7ea      	b.n	8011b02 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0xe>
 8011b2c:	b120      	cbz	r0, 8011b38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8011b2e:	2920      	cmp	r1, #32
 8011b30:	d102      	bne.n	8011b38 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x44>
 8011b32:	4620      	mov	r0, r4
 8011b34:	f7ff ff74 	bl	8011a20 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8011b38:	f8b4 3080 	ldrh.w	r3, [r4, #128]	; 0x80
 8011b3c:	2b1f      	cmp	r3, #31
 8011b3e:	d8ef      	bhi.n	8011b20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>
 8011b40:	18e2      	adds	r2, r4, r3
 8011b42:	2101      	movs	r1, #1
 8011b44:	f882 1084 	strb.w	r1, [r2, #132]	; 0x84
 8011b48:	185a      	adds	r2, r3, r1
 8011b4a:	f8a4 2080 	strh.w	r2, [r4, #128]	; 0x80
 8011b4e:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8011b52:	e7e5      	b.n	8011b20 <_ZN8touchgfx11Application12TimerWidgets3addEPNS_8DrawableE+0x2c>

08011b54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 8011b54:	4603      	mov	r3, r0
 8011b56:	f100 0140 	add.w	r1, r0, #64	; 0x40
 8011b5a:	2200      	movs	r2, #0
 8011b5c:	801a      	strh	r2, [r3, #0]
 8011b5e:	805a      	strh	r2, [r3, #2]
 8011b60:	809a      	strh	r2, [r3, #4]
 8011b62:	80da      	strh	r2, [r3, #6]
 8011b64:	3308      	adds	r3, #8
 8011b66:	428b      	cmp	r3, r1
 8011b68:	d1f8      	bne.n	8011b5c <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011b6a:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011b6e:	4770      	bx	lr

08011b70 <_ZN8touchgfx11ApplicationC1Ev>:
 8011b70:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011b72:	4606      	mov	r6, r0
 8011b74:	4b1c      	ldr	r3, [pc, #112]	; (8011be8 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011b76:	f846 3b04 	str.w	r3, [r6], #4
 8011b7a:	4604      	mov	r4, r0
 8011b7c:	2500      	movs	r5, #0
 8011b7e:	22a8      	movs	r2, #168	; 0xa8
 8011b80:	2100      	movs	r1, #0
 8011b82:	4630      	mov	r0, r6
 8011b84:	f011 f8a8 	bl	8022cd8 <memset>
 8011b88:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8011b8c:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8011b90:	f7ff ffe0 	bl	8011b54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011b94:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8011b98:	f7ff ffdc 	bl	8011b54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011b9c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011ba0:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8011ba4:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8011ba8:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8011bac:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8011bb0:	490e      	ldr	r1, [pc, #56]	; (8011bec <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011bb2:	480f      	ldr	r0, [pc, #60]	; (8011bf0 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011bb4:	4f0f      	ldr	r7, [pc, #60]	; (8011bf4 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8011bb6:	f00e fedb 	bl	8020970 <CRC_Lock>
 8011bba:	4b0f      	ldr	r3, [pc, #60]	; (8011bf8 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8011bbc:	b158      	cbz	r0, 8011bd6 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8011bbe:	801d      	strh	r5, [r3, #0]
 8011bc0:	4a0e      	ldr	r2, [pc, #56]	; (8011bfc <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8011bc2:	2300      	movs	r3, #0
 8011bc4:	6013      	str	r3, [r2, #0]
 8011bc6:	4a0e      	ldr	r2, [pc, #56]	; (8011c00 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8011bc8:	603b      	str	r3, [r7, #0]
 8011bca:	4630      	mov	r0, r6
 8011bcc:	6013      	str	r3, [r2, #0]
 8011bce:	f7ff ff01 	bl	80119d4 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011bd2:	4620      	mov	r0, r4
 8011bd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011bd6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011bda:	2002      	movs	r0, #2
 8011bdc:	801a      	strh	r2, [r3, #0]
 8011bde:	6038      	str	r0, [r7, #0]
 8011be0:	f001 fad2 	bl	8013188 <_ZN8touchgfx6Screen4drawEv>
 8011be4:	e7ec      	b.n	8011bc0 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8011be6:	bf00      	nop
 8011be8:	0802a4cc 	.word	0x0802a4cc
 8011bec:	b5e8b5cd 	.word	0xb5e8b5cd
 8011bf0:	f407a5c2 	.word	0xf407a5c2
 8011bf4:	2001379c 	.word	0x2001379c
 8011bf8:	20000084 	.word	0x20000084
 8011bfc:	200137ac 	.word	0x200137ac
 8011c00:	200137a0 	.word	0x200137a0

08011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011c04:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011c08:	3b01      	subs	r3, #1
 8011c0a:	b29b      	uxth	r3, r3
 8011c0c:	428b      	cmp	r3, r1
 8011c0e:	b510      	push	{r4, lr}
 8011c10:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011c14:	d908      	bls.n	8011c28 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011c16:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011c1a:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011c1e:	681a      	ldr	r2, [r3, #0]
 8011c20:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011c24:	685a      	ldr	r2, [r3, #4]
 8011c26:	6062      	str	r2, [r4, #4]
 8011c28:	bd10      	pop	{r4, pc}
	...

08011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011c2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011c30:	4b8f      	ldr	r3, [pc, #572]	; (8011e70 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8011c32:	b08f      	sub	sp, #60	; 0x3c
 8011c34:	ac0a      	add	r4, sp, #40	; 0x28
 8011c36:	e884 0006 	stmia.w	r4, {r1, r2}
 8011c3a:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011c3e:	4b8d      	ldr	r3, [pc, #564]	; (8011e74 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8011c40:	4683      	mov	fp, r0
 8011c42:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011c46:	4620      	mov	r0, r4
 8011c48:	f7ff fda1 	bl	801178e <_ZN8touchgfx4Rect10restrictToEss>
 8011c4c:	4620      	mov	r0, r4
 8011c4e:	f7fa f8ec 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8011c52:	2800      	cmp	r0, #0
 8011c54:	d16a      	bne.n	8011d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011c56:	9403      	str	r4, [sp, #12]
 8011c58:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8011c5c:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8011c60:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8011c64:	35a4      	adds	r5, #164	; 0xa4
 8011c66:	9301      	str	r3, [sp, #4]
 8011c68:	b15c      	cbz	r4, 8011c82 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8011c6a:	4629      	mov	r1, r5
 8011c6c:	9803      	ldr	r0, [sp, #12]
 8011c6e:	f7ff fddf 	bl	8011830 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011c72:	3c01      	subs	r4, #1
 8011c74:	b118      	cbz	r0, 8011c7e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8011c76:	b2a1      	uxth	r1, r4
 8011c78:	9801      	ldr	r0, [sp, #4]
 8011c7a:	f7ff ffc3 	bl	8011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011c7e:	3d08      	subs	r5, #8
 8011c80:	e7f2      	b.n	8011c68 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8011c82:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
 8011c86:	f8cd 8010 	str.w	r8, [sp, #16]
 8011c8a:	f108 33ff 	add.w	r3, r8, #4294967295
 8011c8e:	9302      	str	r3, [sp, #8]
 8011c90:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8011c94:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8011c98:	9306      	str	r3, [sp, #24]
 8011c9a:	445c      	add	r4, fp
 8011c9c:	2500      	movs	r5, #0
 8011c9e:	4626      	mov	r6, r4
 8011ca0:	f8cd 8014 	str.w	r8, [sp, #20]
 8011ca4:	462f      	mov	r7, r5
 8011ca6:	9b05      	ldr	r3, [sp, #20]
 8011ca8:	2b00      	cmp	r3, #0
 8011caa:	d073      	beq.n	8011d94 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011cac:	9903      	ldr	r1, [sp, #12]
 8011cae:	4630      	mov	r0, r6
 8011cb0:	f7ff fd4b 	bl	801174a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011cb4:	b350      	cbz	r0, 8011d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011cb6:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011cba:	f9b6 c000 	ldrsh.w	ip, [r6]
 8011cbe:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8011cc2:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8011cc6:	45e6      	cmp	lr, ip
 8011cc8:	db33      	blt.n	8011d32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011cca:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011cce:	88b3      	ldrh	r3, [r6, #4]
 8011cd0:	4472      	add	r2, lr
 8011cd2:	4463      	add	r3, ip
 8011cd4:	b212      	sxth	r2, r2
 8011cd6:	b21b      	sxth	r3, r3
 8011cd8:	429a      	cmp	r2, r3
 8011cda:	dc2a      	bgt.n	8011d32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011cdc:	88f3      	ldrh	r3, [r6, #6]
 8011cde:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011ce2:	fa1f f289 	uxth.w	r2, r9
 8011ce6:	4413      	add	r3, r2
 8011ce8:	b29b      	uxth	r3, r3
 8011cea:	45ca      	cmp	sl, r9
 8011cec:	fa0f fe83 	sxth.w	lr, r3
 8011cf0:	fa1f fc8a 	uxth.w	ip, sl
 8011cf4:	db0f      	blt.n	8011d16 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011cf6:	eba3 030c 	sub.w	r3, r3, ip
 8011cfa:	1ac9      	subs	r1, r1, r3
 8011cfc:	b209      	sxth	r1, r1
 8011cfe:	2900      	cmp	r1, #0
 8011d00:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011d04:	dd12      	ble.n	8011d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011d06:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011d0a:	4605      	mov	r5, r0
 8011d0c:	9b05      	ldr	r3, [sp, #20]
 8011d0e:	3b01      	subs	r3, #1
 8011d10:	9305      	str	r3, [sp, #20]
 8011d12:	3e08      	subs	r6, #8
 8011d14:	e7c7      	b.n	8011ca6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8011d16:	4461      	add	r1, ip
 8011d18:	b209      	sxth	r1, r1
 8011d1a:	4571      	cmp	r1, lr
 8011d1c:	dc38      	bgt.n	8011d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011d1e:	eba2 020c 	sub.w	r2, r2, ip
 8011d22:	b212      	sxth	r2, r2
 8011d24:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011d28:	2a00      	cmp	r2, #0
 8011d2a:	dcee      	bgt.n	8011d0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011d2c:	b00f      	add	sp, #60	; 0x3c
 8011d2e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011d32:	45ca      	cmp	sl, r9
 8011d34:	db2c      	blt.n	8011d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011d36:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011d3a:	449a      	add	sl, r3
 8011d3c:	88f3      	ldrh	r3, [r6, #6]
 8011d3e:	4499      	add	r9, r3
 8011d40:	fa0f fa8a 	sxth.w	sl, sl
 8011d44:	fa0f f989 	sxth.w	r9, r9
 8011d48:	45ca      	cmp	sl, r9
 8011d4a:	dc21      	bgt.n	8011d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011d4c:	88b3      	ldrh	r3, [r6, #4]
 8011d4e:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011d52:	fa1f f28c 	uxth.w	r2, ip
 8011d56:	4413      	add	r3, r2
 8011d58:	b29b      	uxth	r3, r3
 8011d5a:	45e6      	cmp	lr, ip
 8011d5c:	fa1f f98e 	uxth.w	r9, lr
 8011d60:	fa0f fa83 	sxth.w	sl, r3
 8011d64:	db0a      	blt.n	8011d7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8011d66:	eba3 0309 	sub.w	r3, r3, r9
 8011d6a:	1ac9      	subs	r1, r1, r3
 8011d6c:	b209      	sxth	r1, r1
 8011d6e:	2900      	cmp	r1, #0
 8011d70:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011d74:	ddda      	ble.n	8011d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011d76:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011d7a:	e7c6      	b.n	8011d0a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011d7c:	4449      	add	r1, r9
 8011d7e:	b209      	sxth	r1, r1
 8011d80:	4551      	cmp	r1, sl
 8011d82:	dc05      	bgt.n	8011d90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011d84:	eba2 0209 	sub.w	r2, r2, r9
 8011d88:	b212      	sxth	r2, r2
 8011d8a:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011d8e:	e7cb      	b.n	8011d28 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011d90:	4607      	mov	r7, r0
 8011d92:	e7bb      	b.n	8011d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011d94:	2d00      	cmp	r5, #0
 8011d96:	d181      	bne.n	8011c9c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8011d98:	2f00      	cmp	r7, #0
 8011d9a:	f000 81dd 	beq.w	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011d9e:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8011da2:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011da6:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011daa:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8011dae:	b2b9      	uxth	r1, r7
 8011db0:	b2b3      	uxth	r3, r6
 8011db2:	441a      	add	r2, r3
 8011db4:	448a      	add	sl, r1
 8011db6:	b292      	uxth	r2, r2
 8011db8:	fa1f fa8a 	uxth.w	sl, sl
 8011dbc:	fa0f f882 	sxth.w	r8, r2
 8011dc0:	9105      	str	r1, [sp, #20]
 8011dc2:	fa0f f98a 	sxth.w	r9, sl
 8011dc6:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011dca:	9b04      	ldr	r3, [sp, #16]
 8011dcc:	2b00      	cmp	r3, #0
 8011dce:	d053      	beq.n	8011e78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8011dd0:	9903      	ldr	r1, [sp, #12]
 8011dd2:	4620      	mov	r0, r4
 8011dd4:	f7ff fcb9 	bl	801174a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011dd8:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011ddc:	b1c0      	cbz	r0, 8011e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011dde:	f9b4 e000 	ldrsh.w	lr, [r4]
 8011de2:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011de6:	4576      	cmp	r6, lr
 8011de8:	dc23      	bgt.n	8011e32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011dea:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011dee:	44f4      	add	ip, lr
 8011df0:	fa0f fc8c 	sxth.w	ip, ip
 8011df4:	45e0      	cmp	r8, ip
 8011df6:	db1c      	blt.n	8011e32 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011df8:	428f      	cmp	r7, r1
 8011dfa:	fa1f fc81 	uxth.w	ip, r1
 8011dfe:	88e1      	ldrh	r1, [r4, #6]
 8011e00:	dc0d      	bgt.n	8011e1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011e02:	ebaa 0c0c 	sub.w	ip, sl, ip
 8011e06:	eba1 010c 	sub.w	r1, r1, ip
 8011e0a:	f8a4 9002 	strh.w	r9, [r4, #2]
 8011e0e:	80e1      	strh	r1, [r4, #6]
 8011e10:	4628      	mov	r0, r5
 8011e12:	9904      	ldr	r1, [sp, #16]
 8011e14:	3901      	subs	r1, #1
 8011e16:	9104      	str	r1, [sp, #16]
 8011e18:	3c08      	subs	r4, #8
 8011e1a:	4605      	mov	r5, r0
 8011e1c:	e7d3      	b.n	8011dc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
 8011e1e:	4461      	add	r1, ip
 8011e20:	b209      	sxth	r1, r1
 8011e22:	4549      	cmp	r1, r9
 8011e24:	dcf5      	bgt.n	8011e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011e26:	9905      	ldr	r1, [sp, #20]
 8011e28:	eba1 0c0c 	sub.w	ip, r1, ip
 8011e2c:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011e30:	e7ee      	b.n	8011e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011e32:	428f      	cmp	r7, r1
 8011e34:	dced      	bgt.n	8011e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011e36:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8011e3a:	4461      	add	r1, ip
 8011e3c:	b209      	sxth	r1, r1
 8011e3e:	4589      	cmp	r9, r1
 8011e40:	dbe7      	blt.n	8011e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011e42:	4576      	cmp	r6, lr
 8011e44:	fa1f fc8e 	uxth.w	ip, lr
 8011e48:	88a1      	ldrh	r1, [r4, #4]
 8011e4a:	dc07      	bgt.n	8011e5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8011e4c:	eba2 0c0c 	sub.w	ip, r2, ip
 8011e50:	eba1 010c 	sub.w	r1, r1, ip
 8011e54:	f8a4 8000 	strh.w	r8, [r4]
 8011e58:	80a1      	strh	r1, [r4, #4]
 8011e5a:	e7d9      	b.n	8011e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011e5c:	4461      	add	r1, ip
 8011e5e:	b209      	sxth	r1, r1
 8011e60:	4588      	cmp	r8, r1
 8011e62:	dbd6      	blt.n	8011e12 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011e64:	eba3 0c0c 	sub.w	ip, r3, ip
 8011e68:	f8a4 c004 	strh.w	ip, [r4, #4]
 8011e6c:	e7d0      	b.n	8011e10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011e6e:	bf00      	nop
 8011e70:	2001374e 	.word	0x2001374e
 8011e74:	2001374c 	.word	0x2001374c
 8011e78:	2d00      	cmp	r5, #0
 8011e7a:	f000 816d 	beq.w	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011e7e:	9b06      	ldr	r3, [sp, #24]
 8011e80:	445b      	add	r3, fp
 8011e82:	461c      	mov	r4, r3
 8011e84:	9b02      	ldr	r3, [sp, #8]
 8011e86:	3301      	adds	r3, #1
 8011e88:	f000 8166 	beq.w	8012158 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011e8c:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8011e90:	4629      	mov	r1, r5
 8011e92:	9803      	ldr	r0, [sp, #12]
 8011e94:	f7ff fccc 	bl	8011830 <_ZNK8touchgfx4Rect8includesERKS0_>
 8011e98:	b120      	cbz	r0, 8011ea4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8011e9a:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011e9e:	9801      	ldr	r0, [sp, #4]
 8011ea0:	f7ff feb0 	bl	8011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011ea4:	9903      	ldr	r1, [sp, #12]
 8011ea6:	4628      	mov	r0, r5
 8011ea8:	f7ff fc4f 	bl	801174a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011eac:	2800      	cmp	r0, #0
 8011eae:	f000 809c 	beq.w	8011fea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011eb2:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8011eb6:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011eba:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011ebe:	9309      	str	r3, [sp, #36]	; 0x24
 8011ec0:	fa1f f189 	uxth.w	r1, r9
 8011ec4:	eb01 0c03 	add.w	ip, r1, r3
 8011ec8:	fa1f fa8c 	uxth.w	sl, ip
 8011ecc:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8011ed0:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011ed4:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8011ed8:	b283      	uxth	r3, r0
 8011eda:	eb03 050c 	add.w	r5, r3, ip
 8011ede:	b2ad      	uxth	r5, r5
 8011ee0:	9505      	str	r5, [sp, #20]
 8011ee2:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011ee6:	9504      	str	r5, [sp, #16]
 8011ee8:	4548      	cmp	r0, r9
 8011eea:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8011eee:	f340 8099 	ble.w	8012024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8011ef2:	1a5b      	subs	r3, r3, r1
 8011ef4:	b29b      	uxth	r3, r3
 8011ef6:	4596      	cmp	lr, r2
 8011ef8:	fa0f f08a 	sxth.w	r0, sl
 8011efc:	b21e      	sxth	r6, r3
 8011efe:	dd2e      	ble.n	8011f5e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8011f00:	9f02      	ldr	r7, [sp, #8]
 8011f02:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011f06:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011f0a:	9f04      	ldr	r7, [sp, #16]
 8011f0c:	1a3f      	subs	r7, r7, r0
 8011f0e:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8011f12:	fa1f fe8e 	uxth.w	lr, lr
 8011f16:	b292      	uxth	r2, r2
 8011f18:	ebae 0102 	sub.w	r1, lr, r2
 8011f1c:	44a6      	add	lr, r4
 8011f1e:	4402      	add	r2, r0
 8011f20:	b289      	uxth	r1, r1
 8011f22:	fa0f fe8e 	sxth.w	lr, lr
 8011f26:	b212      	sxth	r2, r2
 8011f28:	b20d      	sxth	r5, r1
 8011f2a:	ebae 0202 	sub.w	r2, lr, r2
 8011f2e:	436f      	muls	r7, r5
 8011f30:	4372      	muls	r2, r6
 8011f32:	4297      	cmp	r7, r2
 8011f34:	db09      	blt.n	8011f4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011f36:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8011f3a:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8011f3e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011f42:	449c      	add	ip, r3
 8011f44:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011f48:	e686      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011f4a:	4421      	add	r1, r4
 8011f4c:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8011f50:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8011f54:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011f58:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011f5c:	e67c      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011f5e:	9f04      	ldr	r7, [sp, #16]
 8011f60:	42b8      	cmp	r0, r7
 8011f62:	da27      	bge.n	8011fb4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011f64:	9902      	ldr	r1, [sp, #8]
 8011f66:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8011f6a:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8011f6e:	eb05 010e 	add.w	r1, r5, lr
 8011f72:	fa1f f881 	uxth.w	r8, r1
 8011f76:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8011f7a:	4411      	add	r1, r2
 8011f7c:	eba1 0108 	sub.w	r1, r1, r8
 8011f80:	b289      	uxth	r1, r1
 8011f82:	fa0f f988 	sxth.w	r9, r8
 8011f86:	eba2 020e 	sub.w	r2, r2, lr
 8011f8a:	fa0f f881 	sxth.w	r8, r1
 8011f8e:	1a3f      	subs	r7, r7, r0
 8011f90:	4372      	muls	r2, r6
 8011f92:	fb08 f707 	mul.w	r7, r8, r7
 8011f96:	42ba      	cmp	r2, r7
 8011f98:	dc06      	bgt.n	8011fa8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8011f9a:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8011f9e:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8011fa2:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8011fa6:	e7ca      	b.n	8011f3e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8011fa8:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8011fac:	4429      	add	r1, r5
 8011fae:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011fb2:	e651      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011fb4:	9805      	ldr	r0, [sp, #20]
 8011fb6:	ebaa 0000 	sub.w	r0, sl, r0
 8011fba:	b280      	uxth	r0, r0
 8011fbc:	2d06      	cmp	r5, #6
 8011fbe:	fa0f fe80 	sxth.w	lr, r0
 8011fc2:	d817      	bhi.n	8011ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8011fc4:	9b04      	ldr	r3, [sp, #16]
 8011fc6:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8011fca:	1c6b      	adds	r3, r5, #1
 8011fcc:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8011fd0:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8011fd4:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011fd8:	9b01      	ldr	r3, [sp, #4]
 8011fda:	9801      	ldr	r0, [sp, #4]
 8011fdc:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011fe0:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011fe4:	805a      	strh	r2, [r3, #2]
 8011fe6:	809e      	strh	r6, [r3, #4]
 8011fe8:	80d9      	strh	r1, [r3, #6]
 8011fea:	9b02      	ldr	r3, [sp, #8]
 8011fec:	3b01      	subs	r3, #1
 8011fee:	9302      	str	r3, [sp, #8]
 8011ff0:	3c08      	subs	r4, #8
 8011ff2:	e747      	b.n	8011e84 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8011ff4:	9a02      	ldr	r2, [sp, #8]
 8011ff6:	45b6      	cmp	lr, r6
 8011ff8:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011ffc:	db0d      	blt.n	801201a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8011ffe:	449c      	add	ip, r3
 8012000:	fa1f fc8c 	uxth.w	ip, ip
 8012004:	445a      	add	r2, fp
 8012006:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 801200a:	448c      	add	ip, r1
 801200c:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8012010:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8012014:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8012018:	e61e      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801201a:	445a      	add	r2, fp
 801201c:	4484      	add	ip, r0
 801201e:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8012022:	e78f      	b.n	8011f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012024:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8012028:	fa1f f18e 	uxth.w	r1, lr
 801202c:	eb01 0806 	add.w	r8, r1, r6
 8012030:	b293      	uxth	r3, r2
 8012032:	fa1f f888 	uxth.w	r8, r8
 8012036:	9306      	str	r3, [sp, #24]
 8012038:	fa0f f388 	sxth.w	r3, r8
 801203c:	9307      	str	r3, [sp, #28]
 801203e:	9f06      	ldr	r7, [sp, #24]
 8012040:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8012044:	443b      	add	r3, r7
 8012046:	b29b      	uxth	r3, r3
 8012048:	4596      	cmp	lr, r2
 801204a:	9308      	str	r3, [sp, #32]
 801204c:	da24      	bge.n	8012098 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 801204e:	9905      	ldr	r1, [sp, #20]
 8012050:	eba3 0308 	sub.w	r3, r3, r8
 8012054:	ebaa 0401 	sub.w	r4, sl, r1
 8012058:	b2a4      	uxth	r4, r4
 801205a:	b29b      	uxth	r3, r3
 801205c:	b225      	sxth	r5, r4
 801205e:	b219      	sxth	r1, r3
 8012060:	eba2 020e 	sub.w	r2, r2, lr
 8012064:	eba9 0000 	sub.w	r0, r9, r0
 8012068:	436a      	muls	r2, r5
 801206a:	4348      	muls	r0, r1
 801206c:	4282      	cmp	r2, r0
 801206e:	9a02      	ldr	r2, [sp, #8]
 8012070:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8012074:	445a      	add	r2, fp
 8012076:	dc06      	bgt.n	8012086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8012078:	9b07      	ldr	r3, [sp, #28]
 801207a:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 801207e:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8012082:	44a4      	add	ip, r4
 8012084:	e75e      	b.n	8011f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8012086:	9904      	ldr	r1, [sp, #16]
 8012088:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 801208c:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8012090:	4433      	add	r3, r6
 8012092:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8012096:	e5df      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012098:	9f06      	ldr	r7, [sp, #24]
 801209a:	9b04      	ldr	r3, [sp, #16]
 801209c:	1bc9      	subs	r1, r1, r7
 801209e:	fa0f f78a 	sxth.w	r7, sl
 80120a2:	b289      	uxth	r1, r1
 80120a4:	429f      	cmp	r7, r3
 80120a6:	fa0f fe81 	sxth.w	lr, r1
 80120aa:	dd23      	ble.n	80120f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 80120ac:	9a05      	ldr	r2, [sp, #20]
 80120ae:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80120b2:	9d07      	ldr	r5, [sp, #28]
 80120b4:	ebaa 0202 	sub.w	r2, sl, r2
 80120b8:	b292      	uxth	r2, r2
 80120ba:	eba5 0a03 	sub.w	sl, r5, r3
 80120be:	b214      	sxth	r4, r2
 80120c0:	eba9 0000 	sub.w	r0, r9, r0
 80120c4:	9b02      	ldr	r3, [sp, #8]
 80120c6:	fb0e f000 	mul.w	r0, lr, r0
 80120ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80120ce:	00db      	lsls	r3, r3, #3
 80120d0:	4550      	cmp	r0, sl
 80120d2:	445b      	add	r3, fp
 80120d4:	db03      	blt.n	80120de <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 80120d6:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 80120da:	4494      	add	ip, r2
 80120dc:	e732      	b.n	8011f44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80120de:	9a04      	ldr	r2, [sp, #16]
 80120e0:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 80120e4:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 80120e8:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 80120ec:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80120f0:	4431      	add	r1, r6
 80120f2:	e75c      	b.n	8011fae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 80120f4:	9b08      	ldr	r3, [sp, #32]
 80120f6:	eba3 0308 	sub.w	r3, r3, r8
 80120fa:	b29b      	uxth	r3, r3
 80120fc:	2d06      	cmp	r5, #6
 80120fe:	b218      	sxth	r0, r3
 8012100:	d813      	bhi.n	801212a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8012102:	9b07      	ldr	r3, [sp, #28]
 8012104:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8012108:	1c6b      	adds	r3, r5, #1
 801210a:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 801210e:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8012112:	9b01      	ldr	r3, [sp, #4]
 8012114:	9901      	ldr	r1, [sp, #4]
 8012116:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801211a:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 801211e:	805a      	strh	r2, [r3, #2]
 8012120:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8012122:	809a      	strh	r2, [r3, #4]
 8012124:	f8a3 e006 	strh.w	lr, [r3, #6]
 8012128:	e75f      	b.n	8011fea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801212a:	9c02      	ldr	r4, [sp, #8]
 801212c:	4570      	cmp	r0, lr
 801212e:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8012132:	db0d      	blt.n	8012150 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8012134:	4431      	add	r1, r6
 8012136:	9b06      	ldr	r3, [sp, #24]
 8012138:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 801213c:	b289      	uxth	r1, r1
 801213e:	445c      	add	r4, fp
 8012140:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8012144:	4419      	add	r1, r3
 8012146:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 801214a:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 801214e:	e583      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8012150:	445c      	add	r4, fp
 8012152:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8012156:	e79b      	b.n	8012090 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8012158:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 801215c:	2e07      	cmp	r6, #7
 801215e:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8012162:	d812      	bhi.n	801218a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
 8012164:	1c75      	adds	r5, r6, #1
 8012166:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 801216a:	9d01      	ldr	r5, [sp, #4]
 801216c:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8012170:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012174:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012178:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 801217c:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8012180:	442c      	add	r4, r5
 8012182:	8061      	strh	r1, [r4, #2]
 8012184:	80a2      	strh	r2, [r4, #4]
 8012186:	80e3      	strh	r3, [r4, #6]
 8012188:	e5d0      	b.n	8011d2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801218a:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801218e:	3e01      	subs	r6, #1
 8012190:	445c      	add	r4, fp
 8012192:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8012196:	f04f 37ff 	mov.w	r7, #4294967295
 801219a:	2500      	movs	r5, #0
 801219c:	9305      	str	r3, [sp, #20]
 801219e:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 80121a2:	9302      	str	r3, [sp, #8]
 80121a4:	1e72      	subs	r2, r6, #1
 80121a6:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 80121aa:	9304      	str	r3, [sp, #16]
 80121ac:	4691      	mov	r9, r2
 80121ae:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 80121b2:	f1b9 3fff 	cmp.w	r9, #4294967295
 80121b6:	bf14      	ite	ne
 80121b8:	9905      	ldrne	r1, [sp, #20]
 80121ba:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 80121be:	6818      	ldr	r0, [r3, #0]
 80121c0:	9207      	str	r2, [sp, #28]
 80121c2:	bf18      	it	ne
 80121c4:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 80121c8:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 80121cc:	f8be 1006 	ldrh.w	r1, [lr, #6]
 80121d0:	f8be 8004 	ldrh.w	r8, [lr, #4]
 80121d4:	9306      	str	r3, [sp, #24]
 80121d6:	fb18 f801 	smulbb	r8, r8, r1
 80121da:	6859      	ldr	r1, [r3, #4]
 80121dc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 80121e0:	4671      	mov	r1, lr
 80121e2:	a80c      	add	r0, sp, #48	; 0x30
 80121e4:	f7ff fb4a 	bl	801187c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80121e8:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 80121ec:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 80121f0:	9b04      	ldr	r3, [sp, #16]
 80121f2:	9a02      	ldr	r2, [sp, #8]
 80121f4:	fb10 f001 	smulbb	r0, r0, r1
 80121f8:	fb02 8803 	mla	r8, r2, r3, r8
 80121fc:	eba0 0108 	sub.w	r1, r0, r8
 8012200:	f04f 0c08 	mov.w	ip, #8
 8012204:	fb90 f0fc 	sdiv	r0, r0, ip
 8012208:	4288      	cmp	r0, r1
 801220a:	dc20      	bgt.n	801224e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 801220c:	4551      	cmp	r1, sl
 801220e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8012212:	da03      	bge.n	801221c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
 8012214:	b1d9      	cbz	r1, 801224e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 8012216:	468a      	mov	sl, r1
 8012218:	464f      	mov	r7, r9
 801221a:	4635      	mov	r5, r6
 801221c:	f109 39ff 	add.w	r9, r9, #4294967295
 8012220:	f119 0f02 	cmn.w	r9, #2
 8012224:	d1c5      	bne.n	80121b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 8012226:	4616      	mov	r6, r2
 8012228:	3201      	adds	r2, #1
 801222a:	f1a4 0408 	sub.w	r4, r4, #8
 801222e:	d1b6      	bne.n	801219e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
 8012230:	9b01      	ldr	r3, [sp, #4]
 8012232:	b2ac      	uxth	r4, r5
 8012234:	00ed      	lsls	r5, r5, #3
 8012236:	1958      	adds	r0, r3, r5
 8012238:	1c7b      	adds	r3, r7, #1
 801223a:	d10b      	bne.n	8012254 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x628>
 801223c:	4601      	mov	r1, r0
 801223e:	9803      	ldr	r0, [sp, #12]
 8012240:	f7ff fb1c 	bl	801187c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012244:	4621      	mov	r1, r4
 8012246:	9801      	ldr	r0, [sp, #4]
 8012248:	f7ff fcdc 	bl	8011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801224c:	e504      	b.n	8011c58 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801224e:	464f      	mov	r7, r9
 8012250:	4635      	mov	r5, r6
 8012252:	e7ed      	b.n	8012230 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 8012254:	9b01      	ldr	r3, [sp, #4]
 8012256:	00ff      	lsls	r7, r7, #3
 8012258:	19d9      	adds	r1, r3, r7
 801225a:	f7ff fb0f 	bl	801187c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 801225e:	9b03      	ldr	r3, [sp, #12]
 8012260:	cb03      	ldmia	r3!, {r0, r1}
 8012262:	445f      	add	r7, fp
 8012264:	445d      	add	r5, fp
 8012266:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 801226a:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801226e:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8012272:	9b03      	ldr	r3, [sp, #12]
 8012274:	6869      	ldr	r1, [r5, #4]
 8012276:	c303      	stmia	r3!, {r0, r1}
 8012278:	e7e4      	b.n	8012244 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 801227a:	bf00      	nop

0801227c <_ZN8touchgfx11Application10invalidateEv>:
 801227c:	4b09      	ldr	r3, [pc, #36]	; (80122a4 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801227e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012282:	4b09      	ldr	r3, [pc, #36]	; (80122a8 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012284:	b082      	sub	sp, #8
 8012286:	f9b3 3000 	ldrsh.w	r3, [r3]
 801228a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801228e:	2100      	movs	r1, #0
 8012290:	9100      	str	r1, [sp, #0]
 8012292:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012296:	ab02      	add	r3, sp, #8
 8012298:	e913 0006 	ldmdb	r3, {r1, r2}
 801229c:	b002      	add	sp, #8
 801229e:	f7ff bcc5 	b.w	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80122a2:	bf00      	nop
 80122a4:	2001374c 	.word	0x2001374c
 80122a8:	2001374e 	.word	0x2001374e

080122ac <_ZN8touchgfx11Application15drawCachedAreasEv>:
 80122ac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80122b0:	f500 7698 	add.w	r6, r0, #304	; 0x130
 80122b4:	b09b      	sub	sp, #108	; 0x6c
 80122b6:	4604      	mov	r4, r0
 80122b8:	4630      	mov	r0, r6
 80122ba:	f7f9 fdb6 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 80122be:	4605      	mov	r5, r0
 80122c0:	b940      	cbnz	r0, 80122d4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 80122c2:	e896 0006 	ldmia.w	r6, {r1, r2}
 80122c6:	4620      	mov	r0, r4
 80122c8:	f7ff fcb0 	bl	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80122cc:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 80122d0:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 80122d4:	4bc9      	ldr	r3, [pc, #804]	; (80125fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 80122d6:	681b      	ldr	r3, [r3, #0]
 80122d8:	2b00      	cmp	r3, #0
 80122da:	d03e      	beq.n	801235a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80122dc:	4dc8      	ldr	r5, [pc, #800]	; (8012600 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 80122de:	4628      	mov	r0, r5
 80122e0:	f7f9 fda3 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 80122e4:	4606      	mov	r6, r0
 80122e6:	2800      	cmp	r0, #0
 80122e8:	d137      	bne.n	801235a <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 80122ea:	4628      	mov	r0, r5
 80122ec:	f7ff f956 	bl	801159c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 80122f0:	6829      	ldr	r1, [r5, #0]
 80122f2:	686a      	ldr	r2, [r5, #4]
 80122f4:	4620      	mov	r0, r4
 80122f6:	f7ff fc99 	bl	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 80122fa:	802e      	strh	r6, [r5, #0]
 80122fc:	806e      	strh	r6, [r5, #2]
 80122fe:	80ae      	strh	r6, [r5, #4]
 8012300:	80ee      	strh	r6, [r5, #6]
 8012302:	ae09      	add	r6, sp, #36	; 0x24
 8012304:	4630      	mov	r0, r6
 8012306:	f7ff fc25 	bl	8011b54 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 801230a:	4abe      	ldr	r2, [pc, #760]	; (8012604 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 801230c:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 8012310:	8815      	ldrh	r5, [r2, #0]
 8012312:	9202      	str	r2, [sp, #8]
 8012314:	462b      	mov	r3, r5
 8012316:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 801231a:	429f      	cmp	r7, r3
 801231c:	d924      	bls.n	8012368 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 801231e:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 8012322:	2907      	cmp	r1, #7
 8012324:	d816      	bhi.n	8012354 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 8012326:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 801232a:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 801232e:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 8012332:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8012336:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 801233a:	1c4a      	adds	r2, r1, #1
 801233c:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 8012340:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 8012344:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 8012348:	f8a2 9002 	strh.w	r9, [r2, #2]
 801234c:	f8a2 e004 	strh.w	lr, [r2, #4]
 8012350:	f8a2 c006 	strh.w	ip, [r2, #6]
 8012354:	3301      	adds	r3, #1
 8012356:	b29b      	uxth	r3, r3
 8012358:	e7df      	b.n	801231a <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 801235a:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 801235e:	2b00      	cmp	r3, #0
 8012360:	d1cf      	bne.n	8012302 <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 8012362:	b01b      	add	sp, #108	; 0x6c
 8012364:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012368:	462f      	mov	r7, r5
 801236a:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 801236e:	42bb      	cmp	r3, r7
 8012370:	d90b      	bls.n	801238a <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 8012372:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8012376:	4620      	mov	r0, r4
 8012378:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 801237c:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 8012380:	3701      	adds	r7, #1
 8012382:	f7ff fc53 	bl	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012386:	b2bf      	uxth	r7, r7
 8012388:	e7ef      	b.n	801236a <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 801238a:	4a9f      	ldr	r2, [pc, #636]	; (8012608 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 801238c:	6813      	ldr	r3, [r2, #0]
 801238e:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 8012392:	2b01      	cmp	r3, #1
 8012394:	4690      	mov	r8, r2
 8012396:	f040 80e6 	bne.w	8012566 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 801239a:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801239e:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80123a2:	4629      	mov	r1, r5
 80123a4:	33ae      	adds	r3, #174	; 0xae
 80123a6:	2500      	movs	r5, #0
 80123a8:	428f      	cmp	r7, r1
 80123aa:	f103 0308 	add.w	r3, r3, #8
 80123ae:	dd0a      	ble.n	80123c6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 80123b0:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 80123b4:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 80123b8:	4402      	add	r2, r0
 80123ba:	b212      	sxth	r2, r2
 80123bc:	4295      	cmp	r5, r2
 80123be:	bfb8      	it	lt
 80123c0:	4615      	movlt	r5, r2
 80123c2:	3101      	adds	r1, #1
 80123c4:	e7f0      	b.n	80123a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 80123c6:	4b91      	ldr	r3, [pc, #580]	; (801260c <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 80123c8:	f8df b23c 	ldr.w	fp, [pc, #572]	; 8012608 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 80123cc:	881b      	ldrh	r3, [r3, #0]
 80123ce:	2b0f      	cmp	r3, #15
 80123d0:	bf88      	it	hi
 80123d2:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 80123d6:	f04f 0300 	mov.w	r3, #0
 80123da:	e9cd 3305 	strd	r3, r3, [sp, #20]
 80123de:	bf98      	it	ls
 80123e0:	f04f 0a01 	movls.w	sl, #1
 80123e4:	46d8      	mov	r8, fp
 80123e6:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 80123ea:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 80123ee:	4438      	add	r0, r7
 80123f0:	b207      	sxth	r7, r0
 80123f2:	f8db 0000 	ldr.w	r0, [fp]
 80123f6:	42bd      	cmp	r5, r7
 80123f8:	6803      	ldr	r3, [r0, #0]
 80123fa:	f340 8084 	ble.w	8012506 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 80123fe:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8012402:	4798      	blx	r3
 8012404:	eb07 030a 	add.w	r3, r7, sl
 8012408:	4298      	cmp	r0, r3
 801240a:	da07      	bge.n	801241c <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 801240c:	4285      	cmp	r5, r0
 801240e:	dd05      	ble.n	801241c <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 8012410:	4287      	cmp	r7, r0
 8012412:	dd6d      	ble.n	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012414:	2f00      	cmp	r7, #0
 8012416:	dd6b      	ble.n	80124f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8012418:	4628      	mov	r0, r5
 801241a:	e004      	b.n	8012426 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 801241c:	4287      	cmp	r7, r0
 801241e:	dcfb      	bgt.n	8012418 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 8012420:	42a8      	cmp	r0, r5
 8012422:	bfa8      	it	ge
 8012424:	4628      	movge	r0, r5
 8012426:	4b7a      	ldr	r3, [pc, #488]	; (8012610 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 8012428:	f8ad 7016 	strh.w	r7, [sp, #22]
 801242c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012430:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012434:	9b02      	ldr	r3, [sp, #8]
 8012436:	1bc0      	subs	r0, r0, r7
 8012438:	2200      	movs	r2, #0
 801243a:	881f      	ldrh	r7, [r3, #0]
 801243c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012440:	f8ad 001a 	strh.w	r0, [sp, #26]
 8012444:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8012448:	42bb      	cmp	r3, r7
 801244a:	d9cc      	bls.n	80123e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801244c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8012450:	ab07      	add	r3, sp, #28
 8012452:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012456:	6851      	ldr	r1, [r2, #4]
 8012458:	c303      	stmia	r3!, {r0, r1}
 801245a:	a905      	add	r1, sp, #20
 801245c:	a807      	add	r0, sp, #28
 801245e:	f7ff f974 	bl	801174a <_ZNK8touchgfx4Rect9intersectERKS0_>
 8012462:	2800      	cmp	r0, #0
 8012464:	d04c      	beq.n	8012500 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8012466:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 801246a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801246e:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 8012472:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8012476:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 801247a:	9303      	str	r3, [sp, #12]
 801247c:	4686      	mov	lr, r0
 801247e:	4290      	cmp	r0, r2
 8012480:	4448      	add	r0, r9
 8012482:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8012486:	bfb8      	it	lt
 8012488:	4696      	movlt	lr, r2
 801248a:	444a      	add	r2, r9
 801248c:	4299      	cmp	r1, r3
 801248e:	b280      	uxth	r0, r0
 8012490:	b292      	uxth	r2, r2
 8012492:	468c      	mov	ip, r1
 8012494:	fa0f f982 	sxth.w	r9, r2
 8012498:	bfb8      	it	lt
 801249a:	469c      	movlt	ip, r3
 801249c:	b203      	sxth	r3, r0
 801249e:	454b      	cmp	r3, r9
 80124a0:	bfb8      	it	lt
 80124a2:	4602      	movlt	r2, r0
 80124a4:	eba2 020e 	sub.w	r2, r2, lr
 80124a8:	f8ad 2020 	strh.w	r2, [sp, #32]
 80124ac:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 80124b0:	9b03      	ldr	r3, [sp, #12]
 80124b2:	f8ad e01c 	strh.w	lr, [sp, #28]
 80124b6:	4411      	add	r1, r2
 80124b8:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 80124bc:	f8ad c01e 	strh.w	ip, [sp, #30]
 80124c0:	4413      	add	r3, r2
 80124c2:	b289      	uxth	r1, r1
 80124c4:	b29b      	uxth	r3, r3
 80124c6:	b208      	sxth	r0, r1
 80124c8:	b21a      	sxth	r2, r3
 80124ca:	4290      	cmp	r0, r2
 80124cc:	bfb8      	it	lt
 80124ce:	460b      	movlt	r3, r1
 80124d0:	eba3 030c 	sub.w	r3, r3, ip
 80124d4:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 80124d8:	a807      	add	r0, sp, #28
 80124da:	f7f9 fca6 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 80124de:	b920      	cbnz	r0, 80124ea <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 80124e0:	6823      	ldr	r3, [r4, #0]
 80124e2:	a907      	add	r1, sp, #28
 80124e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80124e6:	4620      	mov	r0, r4
 80124e8:	4798      	blx	r3
 80124ea:	3701      	adds	r7, #1
 80124ec:	b2bf      	uxth	r7, r7
 80124ee:	e7a9      	b.n	8012444 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 80124f0:	f8d8 0000 	ldr.w	r0, [r8]
 80124f4:	6803      	ldr	r3, [r0, #0]
 80124f6:	2101      	movs	r1, #1
 80124f8:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80124fc:	4798      	blx	r3
 80124fe:	e772      	b.n	80123e6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 8012500:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8012504:	e7e8      	b.n	80124d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8012506:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8012508:	4798      	blx	r3
 801250a:	4b42      	ldr	r3, [pc, #264]	; (8012614 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 801250c:	781b      	ldrb	r3, [r3, #0]
 801250e:	2b00      	cmp	r3, #0
 8012510:	f43f af27 	beq.w	8012362 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 8012514:	2300      	movs	r3, #0
 8012516:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 801251a:	9b02      	ldr	r3, [sp, #8]
 801251c:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 8012520:	881b      	ldrh	r3, [r3, #0]
 8012522:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8012526:	429d      	cmp	r5, r3
 8012528:	f67f af1b 	bls.w	8012362 <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 801252c:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 8012530:	2907      	cmp	r1, #7
 8012532:	d815      	bhi.n	8012560 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 8012534:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 8012538:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 801253c:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 8012540:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 8012544:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 8012548:	1c4a      	adds	r2, r1, #1
 801254a:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 801254e:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8012552:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 8012556:	f8a2 e002 	strh.w	lr, [r2, #2]
 801255a:	f8a2 c004 	strh.w	ip, [r2, #4]
 801255e:	80d7      	strh	r7, [r2, #6]
 8012560:	3301      	adds	r3, #1
 8012562:	b29b      	uxth	r3, r3
 8012564:	e7df      	b.n	8012526 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8012566:	2b02      	cmp	r3, #2
 8012568:	f040 8136 	bne.w	80127d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 801256c:	4b2a      	ldr	r3, [pc, #168]	; (8012618 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801256e:	781b      	ldrb	r3, [r3, #0]
 8012570:	2b01      	cmp	r3, #1
 8012572:	f104 09ac 	add.w	r9, r4, #172	; 0xac
 8012576:	f000 809c 	beq.w	80126b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 801257a:	9b02      	ldr	r3, [sp, #8]
 801257c:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
 8012580:	f8b3 b000 	ldrh.w	fp, [r3]
 8012584:	f10b 0b01 	add.w	fp, fp, #1
 8012588:	fa1f fb8b 	uxth.w	fp, fp
 801258c:	2a00      	cmp	r2, #0
 801258e:	d0bc      	beq.n	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8012590:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
 8012594:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8012598:	441d      	add	r5, r3
 801259a:	b22d      	sxth	r5, r5
 801259c:	4659      	mov	r1, fp
 801259e:	f04f 0800 	mov.w	r8, #0
 80125a2:	b28b      	uxth	r3, r1
 80125a4:	429a      	cmp	r2, r3
 80125a6:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 80125aa:	f240 80c1 	bls.w	8012730 <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 80125ae:	4427      	add	r7, r4
 80125b0:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 80125b4:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 80125b8:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
 80125bc:	4563      	cmp	r3, ip
 80125be:	4608      	mov	r0, r1
 80125c0:	f340 80a3 	ble.w	801270a <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 80125c4:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
 80125c8:	4465      	add	r5, ip
 80125ca:	b22d      	sxth	r5, r5
 80125cc:	429d      	cmp	r5, r3
 80125ce:	bfa8      	it	ge
 80125d0:	461d      	movge	r5, r3
 80125d2:	3101      	adds	r1, #1
 80125d4:	4680      	mov	r8, r0
 80125d6:	e7e4      	b.n	80125a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 80125d8:	d10b      	bne.n	80125f2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 80125da:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
 80125de:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
 80125e2:	458c      	cmp	ip, r1
 80125e4:	bfb4      	ite	lt
 80125e6:	469c      	movlt	ip, r3
 80125e8:	46bc      	movge	ip, r7
 80125ea:	4572      	cmp	r2, lr
 80125ec:	bfb8      	it	lt
 80125ee:	4672      	movlt	r2, lr
 80125f0:	e088      	b.n	8012704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80125f2:	428a      	cmp	r2, r1
 80125f4:	bfb8      	it	lt
 80125f6:	460a      	movlt	r2, r1
 80125f8:	46bc      	mov	ip, r7
 80125fa:	e083      	b.n	8012704 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 80125fc:	20013798 	.word	0x20013798
 8012600:	200137a4 	.word	0x200137a4
 8012604:	20000084 	.word	0x20000084
 8012608:	20013758 	.word	0x20013758
 801260c:	2001374e 	.word	0x2001374e
 8012610:	2001374c 	.word	0x2001374c
 8012614:	20013756 	.word	0x20013756
 8012618:	20013750 	.word	0x20013750
 801261c:	1961      	adds	r1, r4, r5
 801261e:	ab07      	add	r3, sp, #28
 8012620:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8012624:	6849      	ldr	r1, [r1, #4]
 8012626:	c303      	stmia	r3!, {r0, r1}
 8012628:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 801262c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012630:	2b13      	cmp	r3, #19
 8012632:	bfd8      	it	le
 8012634:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8012638:	f8ad 201c 	strh.w	r2, [sp, #28]
 801263c:	440b      	add	r3, r1
 801263e:	1a9b      	subs	r3, r3, r2
 8012640:	a807      	add	r0, sp, #28
 8012642:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012646:	f7fe ffc3 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801264a:	a807      	add	r0, sp, #28
 801264c:	f7f9 fbed 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8012650:	bb78      	cbnz	r0, 80126b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8012652:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8012656:	f8d8 0000 	ldr.w	r0, [r8]
 801265a:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 801265e:	f8d0 e000 	ldr.w	lr, [r0]
 8012662:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8012666:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 801266a:	f1bc 0f14 	cmp.w	ip, #20
 801266e:	bfa8      	it	ge
 8012670:	f04f 0c14 	movge.w	ip, #20
 8012674:	fa1f fc8c 	uxth.w	ip, ip
 8012678:	f8cd c000 	str.w	ip, [sp]
 801267c:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 8012680:	47d0      	blx	sl
 8012682:	4682      	mov	sl, r0
 8012684:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012688:	a807      	add	r0, sp, #28
 801268a:	f7fe ff87 	bl	801159c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801268e:	6823      	ldr	r3, [r4, #0]
 8012690:	4425      	add	r5, r4
 8012692:	4620      	mov	r0, r4
 8012694:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012696:	a907      	add	r1, sp, #28
 8012698:	4798      	blx	r3
 801269a:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
 801269e:	eba0 000a 	sub.w	r0, r0, sl
 80126a2:	b200      	sxth	r0, r0
 80126a4:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
 80126a8:	b918      	cbnz	r0, 80126b2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80126aa:	b2b9      	uxth	r1, r7
 80126ac:	4648      	mov	r0, r9
 80126ae:	f7ff faa9 	bl	8011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80126b2:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 80126b6:	f1bb 0f00 	cmp.w	fp, #0
 80126ba:	f43f af26 	beq.w	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80126be:	9b02      	ldr	r3, [sp, #8]
 80126c0:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 80126c4:	881b      	ldrh	r3, [r3, #0]
 80126c6:	3301      	adds	r3, #1
 80126c8:	b29b      	uxth	r3, r3
 80126ca:	2700      	movs	r7, #0
 80126cc:	b299      	uxth	r1, r3
 80126ce:	458b      	cmp	fp, r1
 80126d0:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 80126d4:	d9a2      	bls.n	801261c <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 80126d6:	4425      	add	r5, r4
 80126d8:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 80126dc:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
 80126e0:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 80126e4:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
 80126e8:	4408      	add	r0, r1
 80126ea:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
 80126ee:	4471      	add	r1, lr
 80126f0:	b200      	sxth	r0, r0
 80126f2:	b209      	sxth	r1, r1
 80126f4:	4288      	cmp	r0, r1
 80126f6:	469c      	mov	ip, r3
 80126f8:	f6bf af6e 	bge.w	80125d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 80126fc:	4586      	cmp	lr, r0
 80126fe:	4672      	mov	r2, lr
 8012700:	bfb8      	it	lt
 8012702:	4602      	movlt	r2, r0
 8012704:	3301      	adds	r3, #1
 8012706:	4667      	mov	r7, ip
 8012708:	e7e0      	b.n	80126cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 801270a:	d10c      	bne.n	8012726 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 801270c:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 8012710:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 8012714:	4287      	cmp	r7, r0
 8012716:	bfb4      	ite	lt
 8012718:	4608      	movlt	r0, r1
 801271a:	4640      	movge	r0, r8
 801271c:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
 8012720:	443b      	add	r3, r7
 8012722:	b21b      	sxth	r3, r3
 8012724:	e752      	b.n	80125cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 8012726:	4565      	cmp	r5, ip
 8012728:	bfa8      	it	ge
 801272a:	4665      	movge	r5, ip
 801272c:	4640      	mov	r0, r8
 801272e:	e750      	b.n	80125d2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 8012730:	eb09 0007 	add.w	r0, r9, r7
 8012734:	4427      	add	r7, r4
 8012736:	9203      	str	r2, [sp, #12]
 8012738:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
 801273c:	f1ba 0f13 	cmp.w	sl, #19
 8012740:	bfde      	ittt	le
 8012742:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
 8012746:	4455      	addle	r5, sl
 8012748:	b22d      	sxthle	r5, r5
 801274a:	f7f9 fb6e 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 801274e:	9a03      	ldr	r2, [sp, #12]
 8012750:	2800      	cmp	r0, #0
 8012752:	f47f af1b 	bne.w	801258c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 8012756:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 801275a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 801275e:	482a      	ldr	r0, [pc, #168]	; (8012808 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 8012760:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8012764:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8012768:	6800      	ldr	r0, [r0, #0]
 801276a:	f8ad 101c 	strh.w	r1, [sp, #28]
 801276e:	1aad      	subs	r5, r5, r2
 8012770:	2d14      	cmp	r5, #20
 8012772:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012776:	f8ad 3020 	strh.w	r3, [sp, #32]
 801277a:	bfa8      	it	ge
 801277c:	2514      	movge	r5, #20
 801277e:	f8d0 c000 	ldr.w	ip, [r0]
 8012782:	b2ad      	uxth	r5, r5
 8012784:	fa1f fa8a 	uxth.w	sl, sl
 8012788:	4555      	cmp	r5, sl
 801278a:	bf94      	ite	ls
 801278c:	9500      	strls	r5, [sp, #0]
 801278e:	f8cd a000 	strhi.w	sl, [sp]
 8012792:	b292      	uxth	r2, r2
 8012794:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8012798:	b29b      	uxth	r3, r3
 801279a:	b289      	uxth	r1, r1
 801279c:	47a8      	blx	r5
 801279e:	6823      	ldr	r3, [r4, #0]
 80127a0:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80127a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80127a6:	a907      	add	r1, sp, #28
 80127a8:	4620      	mov	r0, r4
 80127aa:	4798      	blx	r3
 80127ac:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 80127b0:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 80127b4:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 80127b8:	1a5b      	subs	r3, r3, r1
 80127ba:	440a      	add	r2, r1
 80127bc:	b21b      	sxth	r3, r3
 80127be:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 80127c2:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 80127c6:	2b00      	cmp	r3, #0
 80127c8:	f47f aed7 	bne.w	801257a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80127cc:	fa1f f188 	uxth.w	r1, r8
 80127d0:	4648      	mov	r0, r9
 80127d2:	f7ff fa17 	bl	8011c04 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80127d6:	e6d0      	b.n	801257a <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 80127d8:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80127dc:	42ab      	cmp	r3, r5
 80127de:	f67f ae94 	bls.w	801250a <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 80127e2:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 80127e6:	ab07      	add	r3, sp, #28
 80127e8:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80127ec:	6851      	ldr	r1, [r2, #4]
 80127ee:	c303      	stmia	r3!, {r0, r1}
 80127f0:	a807      	add	r0, sp, #28
 80127f2:	f7f9 fb1a 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 80127f6:	b920      	cbnz	r0, 8012802 <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 80127f8:	6823      	ldr	r3, [r4, #0]
 80127fa:	a907      	add	r1, sp, #28
 80127fc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80127fe:	4620      	mov	r0, r4
 8012800:	4798      	blx	r3
 8012802:	3501      	adds	r5, #1
 8012804:	b2ad      	uxth	r5, r5
 8012806:	e7e7      	b.n	80127d8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8012808:	20013758 	.word	0x20013758

0801280c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 801280c:	4b03      	ldr	r3, [pc, #12]	; (801281c <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 801280e:	2200      	movs	r2, #0
 8012810:	801a      	strh	r2, [r3, #0]
 8012812:	805a      	strh	r2, [r3, #2]
 8012814:	809a      	strh	r2, [r3, #4]
 8012816:	80da      	strh	r2, [r3, #6]
 8012818:	4770      	bx	lr
 801281a:	bf00      	nop
 801281c:	200137a4 	.word	0x200137a4

08012820 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 8012820:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012824:	4606      	mov	r6, r0
 8012826:	b09d      	sub	sp, #116	; 0x74
 8012828:	a803      	add	r0, sp, #12
 801282a:	4614      	mov	r4, r2
 801282c:	468a      	mov	sl, r1
 801282e:	461d      	mov	r5, r3
 8012830:	f000 fe84 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 8012834:	6833      	ldr	r3, [r6, #0]
 8012836:	4630      	mov	r0, r6
 8012838:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801283a:	4798      	blx	r3
 801283c:	6833      	ldr	r3, [r6, #0]
 801283e:	4607      	mov	r7, r0
 8012840:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012842:	4630      	mov	r0, r6
 8012844:	4798      	blx	r3
 8012846:	462a      	mov	r2, r5
 8012848:	9000      	str	r0, [sp, #0]
 801284a:	4621      	mov	r1, r4
 801284c:	463b      	mov	r3, r7
 801284e:	a803      	add	r0, sp, #12
 8012850:	f000 fecf 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012854:	2500      	movs	r5, #0
 8012856:	462c      	mov	r4, r5
 8012858:	46a9      	mov	r9, r5
 801285a:	46a8      	mov	r8, r5
 801285c:	f242 0b0b 	movw	fp, #8203	; 0x200b
 8012860:	2300      	movs	r3, #0
 8012862:	9302      	str	r3, [sp, #8]
 8012864:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012868:	429c      	cmp	r4, r3
 801286a:	d002      	beq.n	8012872 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 801286c:	455c      	cmp	r4, fp
 801286e:	bf18      	it	ne
 8012870:	4625      	movne	r5, r4
 8012872:	ab02      	add	r3, sp, #8
 8012874:	4632      	mov	r2, r6
 8012876:	4651      	mov	r1, sl
 8012878:	a803      	add	r0, sp, #12
 801287a:	f001 f9bd 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801287e:	4604      	mov	r4, r0
 8012880:	b108      	cbz	r0, 8012886 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 8012882:	280a      	cmp	r0, #10
 8012884:	d10a      	bne.n	801289c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8012886:	45c1      	cmp	r9, r8
 8012888:	bf38      	it	cc
 801288a:	46c1      	movcc	r9, r8
 801288c:	f04f 0800 	mov.w	r8, #0
 8012890:	2c00      	cmp	r4, #0
 8012892:	d1e5      	bne.n	8012860 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012894:	4648      	mov	r0, r9
 8012896:	b01d      	add	sp, #116	; 0x74
 8012898:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801289c:	9a02      	ldr	r2, [sp, #8]
 801289e:	2a00      	cmp	r2, #0
 80128a0:	d0de      	beq.n	8012860 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 80128a2:	7b57      	ldrb	r7, [r2, #13]
 80128a4:	6833      	ldr	r3, [r6, #0]
 80128a6:	8894      	ldrh	r4, [r2, #4]
 80128a8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80128aa:	007f      	lsls	r7, r7, #1
 80128ac:	f407 7080 	and.w	r0, r7, #256	; 0x100
 80128b0:	7a97      	ldrb	r7, [r2, #10]
 80128b2:	4629      	mov	r1, r5
 80128b4:	4307      	orrs	r7, r0
 80128b6:	4630      	mov	r0, r6
 80128b8:	4798      	blx	r3
 80128ba:	4438      	add	r0, r7
 80128bc:	4480      	add	r8, r0
 80128be:	fa1f f888 	uxth.w	r8, r8
 80128c2:	e7e5      	b.n	8012890 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

080128c4 <_ZNK8touchgfx4Font12getCharWidthEt>:
 80128c4:	b508      	push	{r3, lr}
 80128c6:	6803      	ldr	r3, [r0, #0]
 80128c8:	68db      	ldr	r3, [r3, #12]
 80128ca:	4798      	blx	r3
 80128cc:	b128      	cbz	r0, 80128da <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 80128ce:	7b43      	ldrb	r3, [r0, #13]
 80128d0:	7a80      	ldrb	r0, [r0, #10]
 80128d2:	005b      	lsls	r3, r3, #1
 80128d4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80128d8:	4318      	orrs	r0, r3
 80128da:	bd08      	pop	{r3, pc}

080128dc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 80128dc:	b40e      	push	{r1, r2, r3}
 80128de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80128e0:	b09e      	sub	sp, #120	; 0x78
 80128e2:	ab23      	add	r3, sp, #140	; 0x8c
 80128e4:	4605      	mov	r5, r0
 80128e6:	f853 4b04 	ldr.w	r4, [r3], #4
 80128ea:	9303      	str	r3, [sp, #12]
 80128ec:	a805      	add	r0, sp, #20
 80128ee:	f000 fe25 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 80128f2:	682b      	ldr	r3, [r5, #0]
 80128f4:	4628      	mov	r0, r5
 80128f6:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80128f8:	4798      	blx	r3
 80128fa:	682b      	ldr	r3, [r5, #0]
 80128fc:	4606      	mov	r6, r0
 80128fe:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012900:	4628      	mov	r0, r5
 8012902:	4798      	blx	r3
 8012904:	4633      	mov	r3, r6
 8012906:	ae1e      	add	r6, sp, #120	; 0x78
 8012908:	4621      	mov	r1, r4
 801290a:	9000      	str	r0, [sp, #0]
 801290c:	9a03      	ldr	r2, [sp, #12]
 801290e:	2400      	movs	r4, #0
 8012910:	a805      	add	r0, sp, #20
 8012912:	f000 fe6e 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012916:	f846 4d68 	str.w	r4, [r6, #-104]!
 801291a:	462a      	mov	r2, r5
 801291c:	4633      	mov	r3, r6
 801291e:	4621      	mov	r1, r4
 8012920:	a805      	add	r0, sp, #20
 8012922:	f001 f969 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012926:	b1f0      	cbz	r0, 8012966 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 8012928:	280a      	cmp	r0, #10
 801292a:	d018      	beq.n	801295e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 801292c:	9f04      	ldr	r7, [sp, #16]
 801292e:	b1b7      	cbz	r7, 801295e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 8012930:	7b78      	ldrb	r0, [r7, #13]
 8012932:	7a3b      	ldrb	r3, [r7, #8]
 8012934:	88ea      	ldrh	r2, [r5, #6]
 8012936:	00c1      	lsls	r1, r0, #3
 8012938:	f401 7180 	and.w	r1, r1, #256	; 0x100
 801293c:	4319      	orrs	r1, r3
 801293e:	0643      	lsls	r3, r0, #25
 8012940:	bf44      	itt	mi
 8012942:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 8012946:	b219      	sxthmi	r1, r3
 8012948:	0100      	lsls	r0, r0, #4
 801294a:	79fb      	ldrb	r3, [r7, #7]
 801294c:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8012950:	4303      	orrs	r3, r0
 8012952:	4413      	add	r3, r2
 8012954:	1a5b      	subs	r3, r3, r1
 8012956:	b21b      	sxth	r3, r3
 8012958:	429c      	cmp	r4, r3
 801295a:	bfb8      	it	lt
 801295c:	461c      	movlt	r4, r3
 801295e:	4633      	mov	r3, r6
 8012960:	462a      	mov	r2, r5
 8012962:	2100      	movs	r1, #0
 8012964:	e7dc      	b.n	8012920 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012966:	b2a0      	uxth	r0, r4
 8012968:	b01e      	add	sp, #120	; 0x78
 801296a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801296e:	b003      	add	sp, #12
 8012970:	4770      	bx	lr

08012972 <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 8012972:	7a43      	ldrb	r3, [r0, #9]
 8012974:	8880      	ldrh	r0, [r0, #4]
 8012976:	4418      	add	r0, r3
 8012978:	b280      	uxth	r0, r0
 801297a:	4770      	bx	lr

0801297c <_ZNK8touchgfx4Font13getFontHeightEv>:
 801297c:	6803      	ldr	r3, [r0, #0]
 801297e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8012980:	4718      	bx	r3

08012982 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 8012982:	b40e      	push	{r1, r2, r3}
 8012984:	b570      	push	{r4, r5, r6, lr}
 8012986:	b09d      	sub	sp, #116	; 0x74
 8012988:	ab21      	add	r3, sp, #132	; 0x84
 801298a:	4604      	mov	r4, r0
 801298c:	f853 5b04 	ldr.w	r5, [r3], #4
 8012990:	9302      	str	r3, [sp, #8]
 8012992:	a803      	add	r0, sp, #12
 8012994:	f000 fdd2 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 8012998:	6823      	ldr	r3, [r4, #0]
 801299a:	4620      	mov	r0, r4
 801299c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801299e:	4798      	blx	r3
 80129a0:	6823      	ldr	r3, [r4, #0]
 80129a2:	4606      	mov	r6, r0
 80129a4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80129a6:	4620      	mov	r0, r4
 80129a8:	4798      	blx	r3
 80129aa:	4633      	mov	r3, r6
 80129ac:	9000      	str	r0, [sp, #0]
 80129ae:	9a02      	ldr	r2, [sp, #8]
 80129b0:	4629      	mov	r1, r5
 80129b2:	a803      	add	r0, sp, #12
 80129b4:	f000 fe1d 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80129b8:	a803      	add	r0, sp, #12
 80129ba:	f001 f9eb 	bl	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80129be:	2401      	movs	r4, #1
 80129c0:	b2a3      	uxth	r3, r4
 80129c2:	b140      	cbz	r0, 80129d6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 80129c4:	280a      	cmp	r0, #10
 80129c6:	bf08      	it	eq
 80129c8:	3301      	addeq	r3, #1
 80129ca:	a803      	add	r0, sp, #12
 80129cc:	bf08      	it	eq
 80129ce:	b21c      	sxtheq	r4, r3
 80129d0:	f001 f9e0 	bl	8013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80129d4:	e7f4      	b.n	80129c0 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 80129d6:	4618      	mov	r0, r3
 80129d8:	b01d      	add	sp, #116	; 0x74
 80129da:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129de:	b003      	add	sp, #12
 80129e0:	4770      	bx	lr

080129e2 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 80129e2:	b40e      	push	{r1, r2, r3}
 80129e4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80129e6:	b09e      	sub	sp, #120	; 0x78
 80129e8:	ab23      	add	r3, sp, #140	; 0x8c
 80129ea:	4604      	mov	r4, r0
 80129ec:	f853 5b04 	ldr.w	r5, [r3], #4
 80129f0:	9303      	str	r3, [sp, #12]
 80129f2:	a805      	add	r0, sp, #20
 80129f4:	f000 fda2 	bl	801353c <_ZN8touchgfx12TextProviderC1Ev>
 80129f8:	6823      	ldr	r3, [r4, #0]
 80129fa:	4620      	mov	r0, r4
 80129fc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80129fe:	4798      	blx	r3
 8012a00:	6823      	ldr	r3, [r4, #0]
 8012a02:	4606      	mov	r6, r0
 8012a04:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012a06:	4620      	mov	r0, r4
 8012a08:	4798      	blx	r3
 8012a0a:	4633      	mov	r3, r6
 8012a0c:	4629      	mov	r1, r5
 8012a0e:	9000      	str	r0, [sp, #0]
 8012a10:	9a03      	ldr	r2, [sp, #12]
 8012a12:	a805      	add	r0, sp, #20
 8012a14:	ad1e      	add	r5, sp, #120	; 0x78
 8012a16:	f000 fdec 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012a1a:	2100      	movs	r1, #0
 8012a1c:	f845 1d68 	str.w	r1, [r5, #-104]!
 8012a20:	4622      	mov	r2, r4
 8012a22:	462b      	mov	r3, r5
 8012a24:	a805      	add	r0, sp, #20
 8012a26:	f001 f8e7 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012a2a:	f647 76ff 	movw	r6, #32767	; 0x7fff
 8012a2e:	b1d8      	cbz	r0, 8012a68 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 8012a30:	280a      	cmp	r0, #10
 8012a32:	d012      	beq.n	8012a5a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012a34:	9804      	ldr	r0, [sp, #16]
 8012a36:	b180      	cbz	r0, 8012a5a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 8012a38:	7b47      	ldrb	r7, [r0, #13]
 8012a3a:	88e2      	ldrh	r2, [r4, #6]
 8012a3c:	00fb      	lsls	r3, r7, #3
 8012a3e:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8012a42:	7a03      	ldrb	r3, [r0, #8]
 8012a44:	430b      	orrs	r3, r1
 8012a46:	0679      	lsls	r1, r7, #25
 8012a48:	bf44      	itt	mi
 8012a4a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8012a4e:	b21b      	sxthmi	r3, r3
 8012a50:	1ad3      	subs	r3, r2, r3
 8012a52:	b21b      	sxth	r3, r3
 8012a54:	429e      	cmp	r6, r3
 8012a56:	bfa8      	it	ge
 8012a58:	461e      	movge	r6, r3
 8012a5a:	462b      	mov	r3, r5
 8012a5c:	4622      	mov	r2, r4
 8012a5e:	2100      	movs	r1, #0
 8012a60:	a805      	add	r0, sp, #20
 8012a62:	f001 f8c9 	bl	8013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012a66:	e7e2      	b.n	8012a2e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8012a68:	4630      	mov	r0, r6
 8012a6a:	b01e      	add	sp, #120	; 0x78
 8012a6c:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8012a70:	b003      	add	sp, #12
 8012a72:	4770      	bx	lr

08012a74 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8012a74:	b513      	push	{r0, r1, r4, lr}
 8012a76:	6803      	ldr	r3, [r0, #0]
 8012a78:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012a7c:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012a80:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012a84:	2400      	movs	r4, #0
 8012a86:	9400      	str	r4, [sp, #0]
 8012a88:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012a8c:	691b      	ldr	r3, [r3, #16]
 8012a8e:	4669      	mov	r1, sp
 8012a90:	4798      	blx	r3
 8012a92:	b002      	add	sp, #8
 8012a94:	bd10      	pop	{r4, pc}

08012a96 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012a96:	b538      	push	{r3, r4, r5, lr}
 8012a98:	680b      	ldr	r3, [r1, #0]
 8012a9a:	460c      	mov	r4, r1
 8012a9c:	68db      	ldr	r3, [r3, #12]
 8012a9e:	4605      	mov	r5, r0
 8012aa0:	4798      	blx	r3
 8012aa2:	6823      	ldr	r3, [r4, #0]
 8012aa4:	4620      	mov	r0, r4
 8012aa6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012aa8:	4629      	mov	r1, r5
 8012aaa:	4798      	blx	r3
 8012aac:	4628      	mov	r0, r5
 8012aae:	bd38      	pop	{r3, r4, r5, pc}

08012ab0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8012ab0:	b410      	push	{r4}
 8012ab2:	880a      	ldrh	r2, [r1, #0]
 8012ab4:	8884      	ldrh	r4, [r0, #4]
 8012ab6:	4422      	add	r2, r4
 8012ab8:	800a      	strh	r2, [r1, #0]
 8012aba:	88c4      	ldrh	r4, [r0, #6]
 8012abc:	884a      	ldrh	r2, [r1, #2]
 8012abe:	4422      	add	r2, r4
 8012ac0:	804a      	strh	r2, [r1, #2]
 8012ac2:	6940      	ldr	r0, [r0, #20]
 8012ac4:	b120      	cbz	r0, 8012ad0 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012ac6:	6803      	ldr	r3, [r0, #0]
 8012ac8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012acc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012ace:	4718      	bx	r3
 8012ad0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012ad4:	4770      	bx	lr

08012ad6 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012ad6:	b570      	push	{r4, r5, r6, lr}
 8012ad8:	8882      	ldrh	r2, [r0, #4]
 8012ada:	880b      	ldrh	r3, [r1, #0]
 8012adc:	4413      	add	r3, r2
 8012ade:	800b      	strh	r3, [r1, #0]
 8012ae0:	88c2      	ldrh	r2, [r0, #6]
 8012ae2:	884b      	ldrh	r3, [r1, #2]
 8012ae4:	460c      	mov	r4, r1
 8012ae6:	4413      	add	r3, r2
 8012ae8:	804b      	strh	r3, [r1, #2]
 8012aea:	4605      	mov	r5, r0
 8012aec:	1d01      	adds	r1, r0, #4
 8012aee:	4620      	mov	r0, r4
 8012af0:	f7f9 f958 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8012af4:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012af8:	2b00      	cmp	r3, #0
 8012afa:	dd0b      	ble.n	8012b14 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012afc:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012b00:	2b00      	cmp	r3, #0
 8012b02:	dd07      	ble.n	8012b14 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012b04:	6968      	ldr	r0, [r5, #20]
 8012b06:	b128      	cbz	r0, 8012b14 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012b08:	6803      	ldr	r3, [r0, #0]
 8012b0a:	4621      	mov	r1, r4
 8012b0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012b0e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b12:	4718      	bx	r3
 8012b14:	bd70      	pop	{r4, r5, r6, pc}
	...

08012b18 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 8012b18:	b570      	push	{r4, r5, r6, lr}
 8012b1a:	8882      	ldrh	r2, [r0, #4]
 8012b1c:	880b      	ldrh	r3, [r1, #0]
 8012b1e:	4413      	add	r3, r2
 8012b20:	800b      	strh	r3, [r1, #0]
 8012b22:	88c2      	ldrh	r2, [r0, #6]
 8012b24:	884b      	ldrh	r3, [r1, #2]
 8012b26:	460c      	mov	r4, r1
 8012b28:	4413      	add	r3, r2
 8012b2a:	804b      	strh	r3, [r1, #2]
 8012b2c:	4605      	mov	r5, r0
 8012b2e:	1d01      	adds	r1, r0, #4
 8012b30:	4620      	mov	r0, r4
 8012b32:	f7f9 f937 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8012b36:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012b3a:	2b00      	cmp	r3, #0
 8012b3c:	dd18      	ble.n	8012b70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b3e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8012b42:	2b00      	cmp	r3, #0
 8012b44:	dd14      	ble.n	8012b70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b46:	6968      	ldr	r0, [r5, #20]
 8012b48:	b128      	cbz	r0, 8012b56 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8012b4a:	6803      	ldr	r3, [r0, #0]
 8012b4c:	4621      	mov	r1, r4
 8012b4e:	691b      	ldr	r3, [r3, #16]
 8012b50:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b54:	4718      	bx	r3
 8012b56:	4b07      	ldr	r3, [pc, #28]	; (8012b74 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8012b58:	681b      	ldr	r3, [r3, #0]
 8012b5a:	3304      	adds	r3, #4
 8012b5c:	429d      	cmp	r5, r3
 8012b5e:	d107      	bne.n	8012b70 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 8012b60:	f7fe fed2 	bl	8011908 <_ZN8touchgfx11Application11getInstanceEv>
 8012b64:	6821      	ldr	r1, [r4, #0]
 8012b66:	6862      	ldr	r2, [r4, #4]
 8012b68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012b6c:	f7ff b85e 	b.w	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012b70:	bd70      	pop	{r4, r5, r6, pc}
 8012b72:	bf00      	nop
 8012b74:	2001379c 	.word	0x2001379c

08012b78 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012b78:	b570      	push	{r4, r5, r6, lr}
 8012b7a:	4604      	mov	r4, r0
 8012b7c:	4616      	mov	r6, r2
 8012b7e:	460d      	mov	r5, r1
 8012b80:	b901      	cbnz	r1, 8012b84 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8012b82:	b192      	cbz	r2, 8012baa <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8012b84:	6823      	ldr	r3, [r4, #0]
 8012b86:	4620      	mov	r0, r4
 8012b88:	699b      	ldr	r3, [r3, #24]
 8012b8a:	4798      	blx	r3
 8012b8c:	88e2      	ldrh	r2, [r4, #6]
 8012b8e:	88a1      	ldrh	r1, [r4, #4]
 8012b90:	4432      	add	r2, r6
 8012b92:	4429      	add	r1, r5
 8012b94:	4620      	mov	r0, r4
 8012b96:	b212      	sxth	r2, r2
 8012b98:	b209      	sxth	r1, r1
 8012b9a:	f7f1 fccf 	bl	800453c <_ZN8touchgfx8Drawable5setXYEss>
 8012b9e:	6823      	ldr	r3, [r4, #0]
 8012ba0:	4620      	mov	r0, r4
 8012ba2:	699b      	ldr	r3, [r3, #24]
 8012ba4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012ba8:	4718      	bx	r3
 8012baa:	bd70      	pop	{r4, r5, r6, pc}

08012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012bac:	b510      	push	{r4, lr}
 8012bae:	4604      	mov	r4, r0
 8012bb0:	4608      	mov	r0, r1
 8012bb2:	2300      	movs	r3, #0
 8012bb4:	8023      	strh	r3, [r4, #0]
 8012bb6:	8063      	strh	r3, [r4, #2]
 8012bb8:	6803      	ldr	r3, [r0, #0]
 8012bba:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012bbe:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8012bc2:	80a1      	strh	r1, [r4, #4]
 8012bc4:	80e2      	strh	r2, [r4, #6]
 8012bc6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012bc8:	4621      	mov	r1, r4
 8012bca:	4798      	blx	r3
 8012bcc:	4620      	mov	r0, r4
 8012bce:	bd10      	pop	{r4, pc}

08012bd0 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8012bd0:	b530      	push	{r4, r5, lr}
 8012bd2:	8083      	strh	r3, [r0, #4]
 8012bd4:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8012bd8:	80c3      	strh	r3, [r0, #6]
 8012bda:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012bde:	7203      	strb	r3, [r0, #8]
 8012be0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012be4:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8012be8:	7243      	strb	r3, [r0, #9]
 8012bea:	7a83      	ldrb	r3, [r0, #10]
 8012bec:	6141      	str	r1, [r0, #20]
 8012bee:	f365 0306 	bfi	r3, r5, #0, #7
 8012bf2:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8012bf6:	8302      	strh	r2, [r0, #24]
 8012bf8:	f365 13c7 	bfi	r3, r5, #7, #1
 8012bfc:	7283      	strb	r3, [r0, #10]
 8012bfe:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8012c02:	72c3      	strb	r3, [r0, #11]
 8012c04:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8012c08:	7303      	strb	r3, [r0, #12]
 8012c0a:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012c0e:	81c3      	strh	r3, [r0, #14]
 8012c10:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8012c14:	8203      	strh	r3, [r0, #16]
 8012c16:	4b01      	ldr	r3, [pc, #4]	; (8012c1c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8012c18:	6003      	str	r3, [r0, #0]
 8012c1a:	bd30      	pop	{r4, r5, pc}
 8012c1c:	0802a580 	.word	0x0802a580

08012c20 <_ZNK8touchgfx9ConstFont4findEt>:
 8012c20:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012c22:	6944      	ldr	r4, [r0, #20]
 8012c24:	b3bc      	cbz	r4, 8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c26:	88a3      	ldrh	r3, [r4, #4]
 8012c28:	8b02      	ldrh	r2, [r0, #24]
 8012c2a:	1acb      	subs	r3, r1, r3
 8012c2c:	f102 32ff 	add.w	r2, r2, #4294967295
 8012c30:	d431      	bmi.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c32:	4293      	cmp	r3, r2
 8012c34:	dd0c      	ble.n	8012c50 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012c36:	230e      	movs	r3, #14
 8012c38:	fb03 4302 	mla	r3, r3, r2, r4
 8012c3c:	889b      	ldrh	r3, [r3, #4]
 8012c3e:	1a5b      	subs	r3, r3, r1
 8012c40:	1ad3      	subs	r3, r2, r3
 8012c42:	429a      	cmp	r2, r3
 8012c44:	db27      	blt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c46:	2b00      	cmp	r3, #0
 8012c48:	bfbc      	itt	lt
 8012c4a:	2302      	movlt	r3, #2
 8012c4c:	fb92 f3f3 	sdivlt	r3, r2, r3
 8012c50:	2500      	movs	r5, #0
 8012c52:	260e      	movs	r6, #14
 8012c54:	4295      	cmp	r5, r2
 8012c56:	dc1e      	bgt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c58:	fb06 4003 	mla	r0, r6, r3, r4
 8012c5c:	8887      	ldrh	r7, [r0, #4]
 8012c5e:	42b9      	cmp	r1, r7
 8012c60:	d01a      	beq.n	8012c98 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8012c62:	d20d      	bcs.n	8012c80 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012c64:	1e5a      	subs	r2, r3, #1
 8012c66:	4295      	cmp	r5, r2
 8012c68:	dc15      	bgt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c6a:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8012c6e:	1a5b      	subs	r3, r3, r1
 8012c70:	1ad3      	subs	r3, r2, r3
 8012c72:	429a      	cmp	r2, r3
 8012c74:	db0f      	blt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c76:	429d      	cmp	r5, r3
 8012c78:	ddec      	ble.n	8012c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c7a:	1953      	adds	r3, r2, r5
 8012c7c:	105b      	asrs	r3, r3, #1
 8012c7e:	e7e9      	b.n	8012c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c80:	1c5d      	adds	r5, r3, #1
 8012c82:	42aa      	cmp	r2, r5
 8012c84:	db07      	blt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c86:	8a43      	ldrh	r3, [r0, #18]
 8012c88:	1acb      	subs	r3, r1, r3
 8012c8a:	442b      	add	r3, r5
 8012c8c:	429d      	cmp	r5, r3
 8012c8e:	dc02      	bgt.n	8012c96 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012c90:	429a      	cmp	r2, r3
 8012c92:	dadf      	bge.n	8012c54 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012c94:	e7f1      	b.n	8012c7a <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012c96:	2000      	movs	r0, #0
 8012c98:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012c9a <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012c9a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012c9c:	4604      	mov	r4, r0
 8012c9e:	4617      	mov	r7, r2
 8012ca0:	461e      	mov	r6, r3
 8012ca2:	b911      	cbnz	r1, 8012caa <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012ca4:	2500      	movs	r5, #0
 8012ca6:	4628      	mov	r0, r5
 8012ca8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012caa:	290a      	cmp	r1, #10
 8012cac:	d0fa      	beq.n	8012ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012cae:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012cb2:	4291      	cmp	r1, r2
 8012cb4:	d0f6      	beq.n	8012ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012cb6:	f242 020b 	movw	r2, #8203	; 0x200b
 8012cba:	4291      	cmp	r1, r2
 8012cbc:	d0f2      	beq.n	8012ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012cbe:	f7ff ffaf 	bl	8012c20 <_ZNK8touchgfx9ConstFont4findEt>
 8012cc2:	4605      	mov	r5, r0
 8012cc4:	b950      	cbnz	r0, 8012cdc <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012cc6:	6823      	ldr	r3, [r4, #0]
 8012cc8:	4620      	mov	r0, r4
 8012cca:	691b      	ldr	r3, [r3, #16]
 8012ccc:	4798      	blx	r3
 8012cce:	4601      	mov	r1, r0
 8012cd0:	4620      	mov	r0, r4
 8012cd2:	f7ff ffa5 	bl	8012c20 <_ZNK8touchgfx9ConstFont4findEt>
 8012cd6:	4605      	mov	r5, r0
 8012cd8:	2800      	cmp	r0, #0
 8012cda:	d0e3      	beq.n	8012ca4 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012cdc:	6823      	ldr	r3, [r4, #0]
 8012cde:	4629      	mov	r1, r5
 8012ce0:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8012ce2:	4620      	mov	r0, r4
 8012ce4:	4798      	blx	r3
 8012ce6:	6038      	str	r0, [r7, #0]
 8012ce8:	6823      	ldr	r3, [r4, #0]
 8012cea:	4620      	mov	r0, r4
 8012cec:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012cee:	4798      	blx	r3
 8012cf0:	7030      	strb	r0, [r6, #0]
 8012cf2:	e7d8      	b.n	8012ca6 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012cf4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8012cf4:	b538      	push	{r3, r4, r5, lr}
 8012cf6:	4605      	mov	r5, r0
 8012cf8:	f002 fada 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012cfc:	4604      	mov	r4, r0
 8012cfe:	4628      	mov	r0, r5
 8012d00:	f002 fa1a 	bl	8015138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012d04:	2800      	cmp	r0, #0
 8012d06:	bf14      	ite	ne
 8012d08:	2002      	movne	r0, #2
 8012d0a:	2000      	moveq	r0, #0
 8012d0c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012d10:	b280      	uxth	r0, r0
 8012d12:	bd38      	pop	{r3, r4, r5, pc}

08012d14 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8012d14:	b538      	push	{r3, r4, r5, lr}
 8012d16:	4605      	mov	r5, r0
 8012d18:	f002 faca 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012d1c:	4604      	mov	r4, r0
 8012d1e:	4628      	mov	r0, r5
 8012d20:	f002 fa0a 	bl	8015138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012d24:	2800      	cmp	r0, #0
 8012d26:	bf14      	ite	ne
 8012d28:	2002      	movne	r0, #2
 8012d2a:	2000      	moveq	r0, #0
 8012d2c:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012d30:	f040 0001 	orr.w	r0, r0, #1
 8012d34:	b280      	uxth	r0, r0
 8012d36:	bd38      	pop	{r3, r4, r5, pc}

08012d38 <_ZN8touchgfx4clzuEm>:
 8012d38:	4603      	mov	r3, r0
 8012d3a:	b1c8      	cbz	r0, 8012d70 <_ZN8touchgfx4clzuEm+0x38>
 8012d3c:	0c02      	lsrs	r2, r0, #16
 8012d3e:	0412      	lsls	r2, r2, #16
 8012d40:	b9a2      	cbnz	r2, 8012d6c <_ZN8touchgfx4clzuEm+0x34>
 8012d42:	0403      	lsls	r3, r0, #16
 8012d44:	2010      	movs	r0, #16
 8012d46:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012d4a:	bf04      	itt	eq
 8012d4c:	021b      	lsleq	r3, r3, #8
 8012d4e:	3008      	addeq	r0, #8
 8012d50:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012d54:	bf04      	itt	eq
 8012d56:	011b      	lsleq	r3, r3, #4
 8012d58:	3004      	addeq	r0, #4
 8012d5a:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012d5e:	bf04      	itt	eq
 8012d60:	009b      	lsleq	r3, r3, #2
 8012d62:	3002      	addeq	r0, #2
 8012d64:	2b00      	cmp	r3, #0
 8012d66:	db04      	blt.n	8012d72 <_ZN8touchgfx4clzuEm+0x3a>
 8012d68:	3001      	adds	r0, #1
 8012d6a:	4770      	bx	lr
 8012d6c:	2000      	movs	r0, #0
 8012d6e:	e7ea      	b.n	8012d46 <_ZN8touchgfx4clzuEm+0xe>
 8012d70:	2020      	movs	r0, #32
 8012d72:	4770      	bx	lr

08012d74 <_ZN8touchgfx7muldivuEmmmRm>:
 8012d74:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d78:	4680      	mov	r8, r0
 8012d7a:	460f      	mov	r7, r1
 8012d7c:	4615      	mov	r5, r2
 8012d7e:	461e      	mov	r6, r3
 8012d80:	f7ff ffda 	bl	8012d38 <_ZN8touchgfx4clzuEm>
 8012d84:	b998      	cbnz	r0, 8012dae <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8012d86:	4608      	mov	r0, r1
 8012d88:	f7ff ffd6 	bl	8012d38 <_ZN8touchgfx4clzuEm>
 8012d8c:	2800      	cmp	r0, #0
 8012d8e:	dd08      	ble.n	8012da2 <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012d90:	4633      	mov	r3, r6
 8012d92:	462a      	mov	r2, r5
 8012d94:	4641      	mov	r1, r8
 8012d96:	4638      	mov	r0, r7
 8012d98:	f7ff ffec 	bl	8012d74 <_ZN8touchgfx7muldivuEmmmRm>
 8012d9c:	b003      	add	sp, #12
 8012d9e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012da2:	f04f 33ff 	mov.w	r3, #4294967295
 8012da6:	6033      	str	r3, [r6, #0]
 8012da8:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012dac:	e7f6      	b.n	8012d9c <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012dae:	fa31 f900 	lsrs.w	r9, r1, r0
 8012db2:	fb01 f308 	mul.w	r3, r1, r8
 8012db6:	d105      	bne.n	8012dc4 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012db8:	fbb3 f0f5 	udiv	r0, r3, r5
 8012dbc:	fb05 3510 	mls	r5, r5, r0, r3
 8012dc0:	6035      	str	r5, [r6, #0]
 8012dc2:	e7eb      	b.n	8012d9c <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012dc4:	2301      	movs	r3, #1
 8012dc6:	fa08 fb00 	lsl.w	fp, r8, r0
 8012dca:	fa03 f000 	lsl.w	r0, r3, r0
 8012dce:	3801      	subs	r0, #1
 8012dd0:	462a      	mov	r2, r5
 8012dd2:	4633      	mov	r3, r6
 8012dd4:	4641      	mov	r1, r8
 8012dd6:	4038      	ands	r0, r7
 8012dd8:	f7ff ffcc 	bl	8012d74 <_ZN8touchgfx7muldivuEmmmRm>
 8012ddc:	fbbb faf5 	udiv	sl, fp, r5
 8012de0:	462a      	mov	r2, r5
 8012de2:	4607      	mov	r7, r0
 8012de4:	ab01      	add	r3, sp, #4
 8012de6:	fb05 b11a 	mls	r1, r5, sl, fp
 8012dea:	4648      	mov	r0, r9
 8012dec:	f7ff ffc2 	bl	8012d74 <_ZN8touchgfx7muldivuEmmmRm>
 8012df0:	9b01      	ldr	r3, [sp, #4]
 8012df2:	6832      	ldr	r2, [r6, #0]
 8012df4:	fb09 f40a 	mul.w	r4, r9, sl
 8012df8:	441a      	add	r2, r3
 8012dfa:	fbb2 f3f5 	udiv	r3, r2, r5
 8012dfe:	441c      	add	r4, r3
 8012e00:	443c      	add	r4, r7
 8012e02:	4420      	add	r0, r4
 8012e04:	fb05 2513 	mls	r5, r5, r3, r2
 8012e08:	e7da      	b.n	8012dc0 <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012e0a <_ZN8touchgfx6muldivElllRl>:
 8012e0a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012e0c:	2800      	cmp	r0, #0
 8012e0e:	bfba      	itte	lt
 8012e10:	4240      	neglt	r0, r0
 8012e12:	f04f 34ff 	movlt.w	r4, #4294967295
 8012e16:	2401      	movge	r4, #1
 8012e18:	2900      	cmp	r1, #0
 8012e1a:	bfbc      	itt	lt
 8012e1c:	4249      	neglt	r1, r1
 8012e1e:	4264      	neglt	r4, r4
 8012e20:	2a00      	cmp	r2, #0
 8012e22:	bfb6      	itet	lt
 8012e24:	4265      	neglt	r5, r4
 8012e26:	4625      	movge	r5, r4
 8012e28:	4252      	neglt	r2, r2
 8012e2a:	4288      	cmp	r0, r1
 8012e2c:	461e      	mov	r6, r3
 8012e2e:	bfc2      	ittt	gt
 8012e30:	4603      	movgt	r3, r0
 8012e32:	4608      	movgt	r0, r1
 8012e34:	4619      	movgt	r1, r3
 8012e36:	ab01      	add	r3, sp, #4
 8012e38:	f7ff ff9c 	bl	8012d74 <_ZN8touchgfx7muldivuEmmmRm>
 8012e3c:	9b01      	ldr	r3, [sp, #4]
 8012e3e:	4368      	muls	r0, r5
 8012e40:	435c      	muls	r4, r3
 8012e42:	6034      	str	r4, [r6, #0]
 8012e44:	b002      	add	sp, #8
 8012e46:	bd70      	pop	{r4, r5, r6, pc}

08012e48 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012e48:	2000      	movs	r0, #0
 8012e4a:	4770      	bx	lr

08012e4c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012e4c:	2001      	movs	r0, #1
 8012e4e:	4770      	bx	lr

08012e50 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012e50:	2002      	movs	r0, #2
 8012e52:	4770      	bx	lr

08012e54 <_ZN8touchgfx6ScreenD1Ev>:
 8012e54:	4770      	bx	lr

08012e56 <_ZN8touchgfx12GestureEventD1Ev>:
 8012e56:	4770      	bx	lr

08012e58 <_ZN8touchgfx9DragEventD1Ev>:
 8012e58:	4770      	bx	lr

08012e5a <_ZN8touchgfx10ClickEventD1Ev>:
 8012e5a:	4770      	bx	lr

08012e5c <_ZN8touchgfx10ClickEventD0Ev>:
 8012e5c:	b510      	push	{r4, lr}
 8012e5e:	210c      	movs	r1, #12
 8012e60:	4604      	mov	r4, r0
 8012e62:	f00f f89a 	bl	8021f9a <_ZdlPvj>
 8012e66:	4620      	mov	r0, r4
 8012e68:	bd10      	pop	{r4, pc}

08012e6a <_ZN8touchgfx9DragEventD0Ev>:
 8012e6a:	b510      	push	{r4, lr}
 8012e6c:	2110      	movs	r1, #16
 8012e6e:	4604      	mov	r4, r0
 8012e70:	f00f f893 	bl	8021f9a <_ZdlPvj>
 8012e74:	4620      	mov	r0, r4
 8012e76:	bd10      	pop	{r4, pc}

08012e78 <_ZN8touchgfx12GestureEventD0Ev>:
 8012e78:	b510      	push	{r4, lr}
 8012e7a:	210c      	movs	r1, #12
 8012e7c:	4604      	mov	r4, r0
 8012e7e:	f00f f88c 	bl	8021f9a <_ZdlPvj>
 8012e82:	4620      	mov	r0, r4
 8012e84:	bd10      	pop	{r4, pc}

08012e86 <_ZN8touchgfx6ScreenD0Ev>:
 8012e86:	b510      	push	{r4, lr}
 8012e88:	213c      	movs	r1, #60	; 0x3c
 8012e8a:	4604      	mov	r4, r0
 8012e8c:	f00f f885 	bl	8021f9a <_ZdlPvj>
 8012e90:	4620      	mov	r0, r4
 8012e92:	bd10      	pop	{r4, pc}

08012e94 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012e94:	b530      	push	{r4, r5, lr}
 8012e96:	460d      	mov	r5, r1
 8012e98:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012e9a:	b087      	sub	sp, #28
 8012e9c:	4604      	mov	r4, r0
 8012e9e:	b301      	cbz	r1, 8012ee2 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012ea0:	a801      	add	r0, sp, #4
 8012ea2:	f7ff fe83 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ea6:	892a      	ldrh	r2, [r5, #8]
 8012ea8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012eac:	7928      	ldrb	r0, [r5, #4]
 8012eae:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012eb2:	f88d 0010 	strb.w	r0, [sp, #16]
 8012eb6:	1ad2      	subs	r2, r2, r3
 8012eb8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012eba:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012ebc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012ec0:	441a      	add	r2, r3
 8012ec2:	896b      	ldrh	r3, [r5, #10]
 8012ec4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012ec8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012ecc:	1b5b      	subs	r3, r3, r5
 8012ece:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012ed0:	442b      	add	r3, r5
 8012ed2:	4d05      	ldr	r5, [pc, #20]	; (8012ee8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012ed4:	9503      	str	r5, [sp, #12]
 8012ed6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012eda:	6803      	ldr	r3, [r0, #0]
 8012edc:	a903      	add	r1, sp, #12
 8012ede:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012ee0:	4798      	blx	r3
 8012ee2:	b007      	add	sp, #28
 8012ee4:	bd30      	pop	{r4, r5, pc}
 8012ee6:	bf00      	nop
 8012ee8:	0802a608 	.word	0x0802a608

08012eec <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012ef0:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012ef2:	b08a      	sub	sp, #40	; 0x28
 8012ef4:	4604      	mov	r4, r0
 8012ef6:	460d      	mov	r5, r1
 8012ef8:	b113      	cbz	r3, 8012f00 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012efa:	790b      	ldrb	r3, [r1, #4]
 8012efc:	2b00      	cmp	r3, #0
 8012efe:	d044      	beq.n	8012f8a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f00:	f104 0804 	add.w	r8, r4, #4
 8012f04:	4641      	mov	r1, r8
 8012f06:	a803      	add	r0, sp, #12
 8012f08:	f7ff fe50 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f0c:	792b      	ldrb	r3, [r5, #4]
 8012f0e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012f12:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012f16:	b983      	cbnz	r3, 8012f3a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012f18:	892a      	ldrh	r2, [r5, #8]
 8012f1a:	88e9      	ldrh	r1, [r5, #6]
 8012f1c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012f20:	1b92      	subs	r2, r2, r6
 8012f22:	1bc9      	subs	r1, r1, r7
 8012f24:	9301      	str	r3, [sp, #4]
 8012f26:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012f2a:	9300      	str	r3, [sp, #0]
 8012f2c:	b212      	sxth	r2, r2
 8012f2e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8012f32:	b209      	sxth	r1, r1
 8012f34:	4640      	mov	r0, r8
 8012f36:	f7f8 fe51 	bl	800bbdc <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012f3a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012f3c:	b329      	cbz	r1, 8012f8a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f3e:	a805      	add	r0, sp, #20
 8012f40:	f7ff fe34 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f44:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012f48:	792b      	ldrb	r3, [r5, #4]
 8012f4a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012f4c:	f88d 3020 	strb.w	r3, [sp, #32]
 8012f50:	1abf      	subs	r7, r7, r2
 8012f52:	88ea      	ldrh	r2, [r5, #6]
 8012f54:	4417      	add	r7, r2
 8012f56:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012f58:	4417      	add	r7, r2
 8012f5a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012f5e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012f62:	1ab6      	subs	r6, r6, r2
 8012f64:	892a      	ldrh	r2, [r5, #8]
 8012f66:	4416      	add	r6, r2
 8012f68:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012f6a:	4416      	add	r6, r2
 8012f6c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012f70:	4a07      	ldr	r2, [pc, #28]	; (8012f90 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012f72:	9207      	str	r2, [sp, #28]
 8012f74:	2600      	movs	r6, #0
 8012f76:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012f7a:	6803      	ldr	r3, [r0, #0]
 8012f7c:	a907      	add	r1, sp, #28
 8012f7e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012f80:	4798      	blx	r3
 8012f82:	792b      	ldrb	r3, [r5, #4]
 8012f84:	b10b      	cbz	r3, 8012f8a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012f86:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012f8a:	b00a      	add	sp, #40	; 0x28
 8012f8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012f90:	0802a5e0 	.word	0x0802a5e0

08012f94 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012f94:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012f98:	460c      	mov	r4, r1
 8012f9a:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012f9c:	b088      	sub	sp, #32
 8012f9e:	4605      	mov	r5, r0
 8012fa0:	2900      	cmp	r1, #0
 8012fa2:	d06d      	beq.n	8013080 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012fa4:	4668      	mov	r0, sp
 8012fa6:	f7ff fe01 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012faa:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012fac:	88e3      	ldrh	r3, [r4, #6]
 8012fae:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012fb2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012fb6:	440b      	add	r3, r1
 8012fb8:	b21b      	sxth	r3, r3
 8012fba:	4543      	cmp	r3, r8
 8012fbc:	db31      	blt.n	8013022 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fbe:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012fc2:	44c4      	add	ip, r8
 8012fc4:	fa0f fc8c 	sxth.w	ip, ip
 8012fc8:	4563      	cmp	r3, ip
 8012fca:	da2a      	bge.n	8013022 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fcc:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012fce:	8926      	ldrh	r6, [r4, #8]
 8012fd0:	4416      	add	r6, r2
 8012fd2:	b236      	sxth	r6, r6
 8012fd4:	42be      	cmp	r6, r7
 8012fd6:	db24      	blt.n	8013022 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fd8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012fdc:	4438      	add	r0, r7
 8012fde:	b200      	sxth	r0, r0
 8012fe0:	4286      	cmp	r6, r0
 8012fe2:	da1e      	bge.n	8013022 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012fe4:	8963      	ldrh	r3, [r4, #10]
 8012fe6:	4419      	add	r1, r3
 8012fe8:	b209      	sxth	r1, r1
 8012fea:	4541      	cmp	r1, r8
 8012fec:	db08      	blt.n	8013000 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012fee:	4561      	cmp	r1, ip
 8012ff0:	da06      	bge.n	8013000 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012ff2:	89a3      	ldrh	r3, [r4, #12]
 8012ff4:	441a      	add	r2, r3
 8012ff6:	b212      	sxth	r2, r2
 8012ff8:	42ba      	cmp	r2, r7
 8012ffa:	db01      	blt.n	8013000 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012ffc:	4282      	cmp	r2, r0
 8012ffe:	db10      	blt.n	8013022 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8013000:	4b21      	ldr	r3, [pc, #132]	; (8013088 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8013002:	9304      	str	r3, [sp, #16]
 8013004:	2302      	movs	r3, #2
 8013006:	f88d 3014 	strb.w	r3, [sp, #20]
 801300a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801300c:	2300      	movs	r3, #0
 801300e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013012:	f8ad 3018 	strh.w	r3, [sp, #24]
 8013016:	f8ad 301a 	strh.w	r3, [sp, #26]
 801301a:	6803      	ldr	r3, [r0, #0]
 801301c:	a904      	add	r1, sp, #16
 801301e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8013020:	4798      	blx	r3
 8013022:	1d29      	adds	r1, r5, #4
 8013024:	a802      	add	r0, sp, #8
 8013026:	f7ff fdc1 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801302a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801302e:	88e0      	ldrh	r0, [r4, #6]
 8013030:	7921      	ldrb	r1, [r4, #4]
 8013032:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8013036:	8922      	ldrh	r2, [r4, #8]
 8013038:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 801303a:	f88d 1014 	strb.w	r1, [sp, #20]
 801303e:	eba3 0808 	sub.w	r8, r3, r8
 8013042:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013046:	1bdf      	subs	r7, r3, r7
 8013048:	b2bb      	uxth	r3, r7
 801304a:	fa1f f888 	uxth.w	r8, r8
 801304e:	8967      	ldrh	r7, [r4, #10]
 8013050:	89a4      	ldrh	r4, [r4, #12]
 8013052:	4440      	add	r0, r8
 8013054:	4460      	add	r0, ip
 8013056:	441a      	add	r2, r3
 8013058:	44b8      	add	r8, r7
 801305a:	4423      	add	r3, r4
 801305c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8013060:	4433      	add	r3, r6
 8013062:	4432      	add	r2, r6
 8013064:	44e0      	add	r8, ip
 8013066:	4c09      	ldr	r4, [pc, #36]	; (801308c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8013068:	6b28      	ldr	r0, [r5, #48]	; 0x30
 801306a:	9404      	str	r4, [sp, #16]
 801306c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8013070:	f8ad 801a 	strh.w	r8, [sp, #26]
 8013074:	f8ad 301c 	strh.w	r3, [sp, #28]
 8013078:	6803      	ldr	r3, [r0, #0]
 801307a:	a904      	add	r1, sp, #16
 801307c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801307e:	4798      	blx	r3
 8013080:	b008      	add	sp, #32
 8013082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013086:	bf00      	nop
 8013088:	0802a5e0 	.word	0x0802a5e0
 801308c:	0802a5f4 	.word	0x0802a5f4

08013090 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8013090:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8013092:	4604      	mov	r4, r0
 8013094:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8013098:	3201      	adds	r2, #1
 801309a:	d112      	bne.n	80130c2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 801309c:	6803      	ldr	r3, [r0, #0]
 801309e:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80130a2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80130a6:	f8ad 1004 	strh.w	r1, [sp, #4]
 80130aa:	2500      	movs	r5, #0
 80130ac:	9500      	str	r5, [sp, #0]
 80130ae:	466d      	mov	r5, sp
 80130b0:	4629      	mov	r1, r5
 80130b2:	f8ad 2006 	strh.w	r2, [sp, #6]
 80130b6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80130b8:	4798      	blx	r3
 80130ba:	e895 0003 	ldmia.w	r5, {r0, r1}
 80130be:	e884 0003 	stmia.w	r4, {r0, r1}
 80130c2:	4620      	mov	r0, r4
 80130c4:	b003      	add	sp, #12
 80130c6:	bd30      	pop	{r4, r5, pc}

080130c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 80130c8:	b513      	push	{r0, r1, r4, lr}
 80130ca:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 80130ce:	3301      	adds	r3, #1
 80130d0:	4604      	mov	r4, r0
 80130d2:	d109      	bne.n	80130e8 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 80130d4:	4601      	mov	r1, r0
 80130d6:	4668      	mov	r0, sp
 80130d8:	f7ff fd68 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80130dc:	f8bd 3000 	ldrh.w	r3, [sp]
 80130e0:	8423      	strh	r3, [r4, #32]
 80130e2:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 80130e6:	8463      	strh	r3, [r4, #34]	; 0x22
 80130e8:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 80130ec:	b002      	add	sp, #8
 80130ee:	bd10      	pop	{r4, pc}

080130f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 80130f0:	b513      	push	{r0, r1, r4, lr}
 80130f2:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 80130f6:	3301      	adds	r3, #1
 80130f8:	4604      	mov	r4, r0
 80130fa:	d109      	bne.n	8013110 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 80130fc:	4601      	mov	r1, r0
 80130fe:	4668      	mov	r0, sp
 8013100:	f7ff fd54 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013104:	f8bd 3000 	ldrh.w	r3, [sp]
 8013108:	8423      	strh	r3, [r4, #32]
 801310a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801310e:	8463      	strh	r3, [r4, #34]	; 0x22
 8013110:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8013114:	b002      	add	sp, #8
 8013116:	bd10      	pop	{r4, pc}

08013118 <_ZN8touchgfx6ScreenC1Ev>:
 8013118:	b570      	push	{r4, r5, r6, lr}
 801311a:	4605      	mov	r5, r0
 801311c:	4b16      	ldr	r3, [pc, #88]	; (8013178 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801311e:	f845 3b04 	str.w	r3, [r5], #4
 8013122:	2300      	movs	r3, #0
 8013124:	8103      	strh	r3, [r0, #8]
 8013126:	8143      	strh	r3, [r0, #10]
 8013128:	8183      	strh	r3, [r0, #12]
 801312a:	81c3      	strh	r3, [r0, #14]
 801312c:	8203      	strh	r3, [r0, #16]
 801312e:	8243      	strh	r3, [r0, #18]
 8013130:	8283      	strh	r3, [r0, #20]
 8013132:	82c3      	strh	r3, [r0, #22]
 8013134:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013138:	6203      	str	r3, [r0, #32]
 801313a:	8483      	strh	r3, [r0, #36]	; 0x24
 801313c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801313e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013142:	4a0e      	ldr	r2, [pc, #56]	; (801317c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8013144:	6343      	str	r3, [r0, #52]	; 0x34
 8013146:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801314a:	4b0d      	ldr	r3, [pc, #52]	; (8013180 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801314c:	6042      	str	r2, [r0, #4]
 801314e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013152:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8013154:	4a0b      	ldr	r2, [pc, #44]	; (8013184 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013156:	4604      	mov	r4, r0
 8013158:	2101      	movs	r1, #1
 801315a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801315e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8013162:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013166:	4628      	mov	r0, r5
 8013168:	4798      	blx	r3
 801316a:	6863      	ldr	r3, [r4, #4]
 801316c:	4628      	mov	r0, r5
 801316e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013170:	4631      	mov	r1, r6
 8013172:	4798      	blx	r3
 8013174:	4620      	mov	r0, r4
 8013176:	bd70      	pop	{r4, r5, r6, pc}
 8013178:	0802a61c 	.word	0x0802a61c
 801317c:	08029df8 	.word	0x08029df8
 8013180:	2001374e 	.word	0x2001374e
 8013184:	2001374c 	.word	0x2001374c

08013188 <_ZN8touchgfx6Screen4drawEv>:
 8013188:	b507      	push	{r0, r1, r2, lr}
 801318a:	4b09      	ldr	r3, [pc, #36]	; (80131b0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 801318c:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013190:	4b08      	ldr	r3, [pc, #32]	; (80131b4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 8013192:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013196:	f9b3 3000 	ldrsh.w	r3, [r3]
 801319a:	f8ad 3006 	strh.w	r3, [sp, #6]
 801319e:	6803      	ldr	r3, [r0, #0]
 80131a0:	2100      	movs	r1, #0
 80131a2:	9100      	str	r1, [sp, #0]
 80131a4:	689b      	ldr	r3, [r3, #8]
 80131a6:	4669      	mov	r1, sp
 80131a8:	4798      	blx	r3
 80131aa:	b003      	add	sp, #12
 80131ac:	f85d fb04 	ldr.w	pc, [sp], #4
 80131b0:	2001374c 	.word	0x2001374c
 80131b4:	2001374e 	.word	0x2001374e

080131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80131b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80131bc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80131c0:	2b00      	cmp	r3, #0
 80131c2:	b089      	sub	sp, #36	; 0x24
 80131c4:	4680      	mov	r8, r0
 80131c6:	460c      	mov	r4, r1
 80131c8:	4615      	mov	r5, r2
 80131ca:	dd0e      	ble.n	80131ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80131cc:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80131d0:	2b00      	cmp	r3, #0
 80131d2:	dd0a      	ble.n	80131ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80131d4:	4628      	mov	r0, r5
 80131d6:	f7ff ff5b 	bl	8013090 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80131da:	4621      	mov	r1, r4
 80131dc:	f7fe fab5 	bl	801174a <_ZNK8touchgfx4Rect9intersectERKS0_>
 80131e0:	69eb      	ldr	r3, [r5, #28]
 80131e2:	b928      	cbnz	r0, 80131f0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 80131e4:	461d      	mov	r5, r3
 80131e6:	2b00      	cmp	r3, #0
 80131e8:	d1f4      	bne.n	80131d4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 80131ea:	b009      	add	sp, #36	; 0x24
 80131ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80131f0:	ae04      	add	r6, sp, #16
 80131f2:	2b00      	cmp	r3, #0
 80131f4:	f000 80b5 	beq.w	8013362 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80131f8:	682b      	ldr	r3, [r5, #0]
 80131fa:	4629      	mov	r1, r5
 80131fc:	68db      	ldr	r3, [r3, #12]
 80131fe:	a802      	add	r0, sp, #8
 8013200:	4798      	blx	r3
 8013202:	4628      	mov	r0, r5
 8013204:	f7ff ff60 	bl	80130c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013208:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801320c:	4407      	add	r7, r0
 801320e:	4628      	mov	r0, r5
 8013210:	f7ff ff6e 	bl	80130f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013214:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013218:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801321c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013220:	4418      	add	r0, r3
 8013222:	4621      	mov	r1, r4
 8013224:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013228:	f8ad 0012 	strh.w	r0, [sp, #18]
 801322c:	b23f      	sxth	r7, r7
 801322e:	4630      	mov	r0, r6
 8013230:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013234:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013238:	f7f8 fdb4 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 801323c:	4628      	mov	r0, r5
 801323e:	f7ff ff27 	bl	8013090 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013242:	4602      	mov	r2, r0
 8013244:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013248:	ab06      	add	r3, sp, #24
 801324a:	e883 0003 	stmia.w	r3, {r0, r1}
 801324e:	4611      	mov	r1, r2
 8013250:	4618      	mov	r0, r3
 8013252:	f7f8 fda7 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8013256:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801325a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801325e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8013262:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013266:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801326a:	4299      	cmp	r1, r3
 801326c:	d10b      	bne.n	8013286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801326e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013272:	4552      	cmp	r2, sl
 8013274:	d107      	bne.n	8013286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013276:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801327a:	455a      	cmp	r2, fp
 801327c:	d103      	bne.n	8013286 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801327e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8013282:	454a      	cmp	r2, r9
 8013284:	d06d      	beq.n	8013362 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013286:	f1bb 0f00 	cmp.w	fp, #0
 801328a:	dd65      	ble.n	8013358 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 801328c:	f1b9 0f00 	cmp.w	r9, #0
 8013290:	dd62      	ble.n	8013358 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 8013292:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013296:	fa1f f08a 	uxth.w	r0, sl
 801329a:	4552      	cmp	r2, sl
 801329c:	9000      	str	r0, [sp, #0]
 801329e:	da12      	bge.n	80132c6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80132a0:	9301      	str	r3, [sp, #4]
 80132a2:	9b00      	ldr	r3, [sp, #0]
 80132a4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80132a8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80132ac:	1a9a      	subs	r2, r3, r2
 80132ae:	f8ad 1010 	strh.w	r1, [sp, #16]
 80132b2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80132b6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80132ba:	69ea      	ldr	r2, [r5, #28]
 80132bc:	4631      	mov	r1, r6
 80132be:	4640      	mov	r0, r8
 80132c0:	f7ff ff7a 	bl	80131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80132c4:	9b01      	ldr	r3, [sp, #4]
 80132c6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80132ca:	429a      	cmp	r2, r3
 80132cc:	b29f      	uxth	r7, r3
 80132ce:	da0d      	bge.n	80132ec <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80132d0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80132d4:	1aba      	subs	r2, r7, r2
 80132d6:	f8ad a012 	strh.w	sl, [sp, #18]
 80132da:	f8ad 2014 	strh.w	r2, [sp, #20]
 80132de:	f8ad 9016 	strh.w	r9, [sp, #22]
 80132e2:	69ea      	ldr	r2, [r5, #28]
 80132e4:	4631      	mov	r1, r6
 80132e6:	4640      	mov	r0, r8
 80132e8:	f7ff ff66 	bl	80131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80132ec:	8822      	ldrh	r2, [r4, #0]
 80132ee:	88a3      	ldrh	r3, [r4, #4]
 80132f0:	445f      	add	r7, fp
 80132f2:	4413      	add	r3, r2
 80132f4:	b29b      	uxth	r3, r3
 80132f6:	b2bf      	uxth	r7, r7
 80132f8:	b23a      	sxth	r2, r7
 80132fa:	b219      	sxth	r1, r3
 80132fc:	4291      	cmp	r1, r2
 80132fe:	dd0d      	ble.n	801331c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013300:	1bdb      	subs	r3, r3, r7
 8013302:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013306:	f8ad a012 	strh.w	sl, [sp, #18]
 801330a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801330e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013312:	69ea      	ldr	r2, [r5, #28]
 8013314:	4631      	mov	r1, r6
 8013316:	4640      	mov	r0, r8
 8013318:	f7ff ff4e 	bl	80131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801331c:	88e2      	ldrh	r2, [r4, #6]
 801331e:	8863      	ldrh	r3, [r4, #2]
 8013320:	4413      	add	r3, r2
 8013322:	9a00      	ldr	r2, [sp, #0]
 8013324:	444a      	add	r2, r9
 8013326:	b29b      	uxth	r3, r3
 8013328:	fa1f f982 	uxth.w	r9, r2
 801332c:	fa0f f289 	sxth.w	r2, r9
 8013330:	b219      	sxth	r1, r3
 8013332:	428a      	cmp	r2, r1
 8013334:	da15      	bge.n	8013362 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013336:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801333a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801333e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013342:	eba3 0309 	sub.w	r3, r3, r9
 8013346:	f8ad 0010 	strh.w	r0, [sp, #16]
 801334a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801334e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013352:	69ea      	ldr	r2, [r5, #28]
 8013354:	4631      	mov	r1, r6
 8013356:	e001      	b.n	801335c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013358:	69ea      	ldr	r2, [r5, #28]
 801335a:	4621      	mov	r1, r4
 801335c:	4640      	mov	r0, r8
 801335e:	f7ff ff2b 	bl	80131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013362:	4628      	mov	r0, r5
 8013364:	f7ff fe94 	bl	8013090 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013368:	6861      	ldr	r1, [r4, #4]
 801336a:	4602      	mov	r2, r0
 801336c:	6820      	ldr	r0, [r4, #0]
 801336e:	4633      	mov	r3, r6
 8013370:	c303      	stmia	r3!, {r0, r1}
 8013372:	4611      	mov	r1, r2
 8013374:	4630      	mov	r0, r6
 8013376:	f7f8 fd15 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 801337a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801337e:	2b00      	cmp	r3, #0
 8013380:	f77f af33 	ble.w	80131ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8013384:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8013388:	2b00      	cmp	r3, #0
 801338a:	f77f af2e 	ble.w	80131ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 801338e:	4628      	mov	r0, r5
 8013390:	f7ff fe9a 	bl	80130c8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013394:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8013398:	1a18      	subs	r0, r3, r0
 801339a:	f8ad 0010 	strh.w	r0, [sp, #16]
 801339e:	4628      	mov	r0, r5
 80133a0:	f7ff fea6 	bl	80130f0 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80133a4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80133a8:	1a18      	subs	r0, r3, r0
 80133aa:	f8ad 0012 	strh.w	r0, [sp, #18]
 80133ae:	682b      	ldr	r3, [r5, #0]
 80133b0:	4631      	mov	r1, r6
 80133b2:	689b      	ldr	r3, [r3, #8]
 80133b4:	4628      	mov	r0, r5
 80133b6:	4798      	blx	r3
 80133b8:	e717      	b.n	80131ea <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080133ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80133ba:	b570      	push	{r4, r5, r6, lr}
 80133bc:	460c      	mov	r4, r1
 80133be:	b086      	sub	sp, #24
 80133c0:	1d06      	adds	r6, r0, #4
 80133c2:	2300      	movs	r3, #0
 80133c4:	4631      	mov	r1, r6
 80133c6:	4605      	mov	r5, r0
 80133c8:	a802      	add	r0, sp, #8
 80133ca:	9301      	str	r3, [sp, #4]
 80133cc:	f7ff fbee 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80133d0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80133d4:	8822      	ldrh	r2, [r4, #0]
 80133d6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80133da:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80133de:	f8ad 0014 	strh.w	r0, [sp, #20]
 80133e2:	1ad2      	subs	r2, r2, r3
 80133e4:	8863      	ldrh	r3, [r4, #2]
 80133e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80133ea:	1a5b      	subs	r3, r3, r1
 80133ec:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 80133f0:	f8ad 1016 	strh.w	r1, [sp, #22]
 80133f4:	aa01      	add	r2, sp, #4
 80133f6:	a904      	add	r1, sp, #16
 80133f8:	4630      	mov	r0, r6
 80133fa:	f8ad 3012 	strh.w	r3, [sp, #18]
 80133fe:	f7f8 fda9 	bl	800bf54 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013402:	9a01      	ldr	r2, [sp, #4]
 8013404:	b11a      	cbz	r2, 801340e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013406:	4621      	mov	r1, r4
 8013408:	4628      	mov	r0, r5
 801340a:	f7ff fed5 	bl	80131b8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801340e:	b006      	add	sp, #24
 8013410:	bd70      	pop	{r4, r5, r6, pc}

08013412 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013412:	b530      	push	{r4, r5, lr}
 8013414:	4602      	mov	r2, r0
 8013416:	4604      	mov	r4, r0
 8013418:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801341c:	b085      	sub	sp, #20
 801341e:	460d      	mov	r5, r1
 8013420:	6851      	ldr	r1, [r2, #4]
 8013422:	466b      	mov	r3, sp
 8013424:	c303      	stmia	r3!, {r0, r1}
 8013426:	4629      	mov	r1, r5
 8013428:	4668      	mov	r0, sp
 801342a:	f7f8 fcbb 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 801342e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013432:	b12b      	cbz	r3, 8013440 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013434:	4669      	mov	r1, sp
 8013436:	4620      	mov	r0, r4
 8013438:	f7ff ffbf 	bl	80133ba <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801343c:	b005      	add	sp, #20
 801343e:	bd30      	pop	{r4, r5, pc}
 8013440:	3404      	adds	r4, #4
 8013442:	4621      	mov	r1, r4
 8013444:	a802      	add	r0, sp, #8
 8013446:	f7ff fbb1 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801344a:	f8bd 3000 	ldrh.w	r3, [sp]
 801344e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013452:	1a9b      	subs	r3, r3, r2
 8013454:	f8ad 3000 	strh.w	r3, [sp]
 8013458:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801345c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013460:	4669      	mov	r1, sp
 8013462:	1a9b      	subs	r3, r3, r2
 8013464:	4620      	mov	r0, r4
 8013466:	f8ad 3002 	strh.w	r3, [sp, #2]
 801346a:	f7f8 fd3a 	bl	800bee2 <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801346e:	e7e5      	b.n	801343c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013470 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013470:	680a      	ldr	r2, [r1, #0]
 8013472:	460b      	mov	r3, r1
 8013474:	6992      	ldr	r2, [r2, #24]
 8013476:	1d01      	adds	r1, r0, #4
 8013478:	4618      	mov	r0, r3
 801347a:	4710      	bx	r2

0801347c <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst>:
 801347c:	4298      	cmp	r0, r3
 801347e:	d200      	bcs.n	8013482 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0x6>
 8013480:	b913      	cbnz	r3, 8013488 <_ZN8touchgfx15EasingEquations12cubicEaseOutEtsst+0xc>
 8013482:	440a      	add	r2, r1
 8013484:	b210      	sxth	r0, r2
 8013486:	4770      	bx	lr
 8013488:	ee07 0a90 	vmov	s15, r0
 801348c:	eef8 6a67 	vcvt.f32.u32	s13, s15
 8013490:	ee07 3a90 	vmov	s15, r3
 8013494:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013498:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 801349c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80134a0:	ee37 7a66 	vsub.f32	s14, s14, s13
 80134a4:	ee07 2a90 	vmov	s15, r2
 80134a8:	ee67 5a07 	vmul.f32	s11, s14, s14
 80134ac:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 80134b0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80134b4:	ee07 1a90 	vmov	s15, r1
 80134b8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80134bc:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 80134c0:	eee6 7a26 	vfma.f32	s15, s12, s13
 80134c4:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80134c8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80134cc:	bfcc      	ite	gt
 80134ce:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 80134d2:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 80134d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80134da:	ee17 3a90 	vmov	r3, s15
 80134de:	b218      	sxth	r0, r3
 80134e0:	4770      	bx	lr

080134e2 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst>:
 80134e2:	4298      	cmp	r0, r3
 80134e4:	d200      	bcs.n	80134e8 <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0x6>
 80134e6:	b913      	cbnz	r3, 80134ee <_ZN8touchgfx15EasingEquations14linearEaseNoneEtsst+0xc>
 80134e8:	440a      	add	r2, r1
 80134ea:	b210      	sxth	r0, r2
 80134ec:	4770      	bx	lr
 80134ee:	ee07 2a90 	vmov	s15, r2
 80134f2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80134f6:	ee07 0a90 	vmov	s15, r0
 80134fa:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80134fe:	ee67 7a27 	vmul.f32	s15, s14, s15
 8013502:	ee07 3a10 	vmov	s14, r3
 8013506:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 801350a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 801350e:	ee07 1a90 	vmov	s15, r1
 8013512:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013516:	ee77 7a27 	vadd.f32	s15, s14, s15
 801351a:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 801351e:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8013522:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8013526:	bfcc      	ite	gt
 8013528:	ee77 7a87 	vaddgt.f32	s15, s15, s14
 801352c:	ee77 7ac7 	vsuble.f32	s15, s15, s14
 8013530:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8013534:	ee17 3a90 	vmov	r3, s15
 8013538:	b218      	sxth	r0, r3
 801353a:	4770      	bx	lr

0801353c <_ZN8touchgfx12TextProviderC1Ev>:
 801353c:	b538      	push	{r3, r4, r5, lr}
 801353e:	2500      	movs	r5, #0
 8013540:	2302      	movs	r3, #2
 8013542:	4604      	mov	r4, r0
 8013544:	e9c0 5500 	strd	r5, r5, [r0]
 8013548:	7403      	strb	r3, [r0, #16]
 801354a:	6145      	str	r5, [r0, #20]
 801354c:	7605      	strb	r5, [r0, #24]
 801354e:	83c5      	strh	r5, [r0, #30]
 8013550:	8405      	strh	r5, [r0, #32]
 8013552:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013554:	8705      	strh	r5, [r0, #56]	; 0x38
 8013556:	87c5      	strh	r5, [r0, #62]	; 0x3e
 8013558:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 801355c:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 8013560:	220e      	movs	r2, #14
 8013562:	4629      	mov	r1, r5
 8013564:	304c      	adds	r0, #76	; 0x4c
 8013566:	f00f fbb7 	bl	8022cd8 <memset>
 801356a:	2301      	movs	r3, #1
 801356c:	4620      	mov	r0, r4
 801356e:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 8013572:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013576:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 801357a:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 801357e:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 8013582:	f7f1 ff43 	bl	800540c <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8013586:	4620      	mov	r0, r4
 8013588:	bd38      	pop	{r3, r4, r5, pc}

0801358a <_ZN8touchgfx12TextProvider11endOfStringEv>:
 801358a:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 801358c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8013590:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 8013592:	fab0 f080 	clz	r0, r0
 8013596:	0940      	lsrs	r0, r0, #5
 8013598:	4770      	bx	lr

0801359a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 801359a:	b530      	push	{r4, r5, lr}
 801359c:	2500      	movs	r5, #0
 801359e:	2401      	movs	r4, #1
 80135a0:	6843      	ldr	r3, [r0, #4]
 80135a2:	b913      	cbnz	r3, 80135aa <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 80135a4:	6803      	ldr	r3, [r0, #0]
 80135a6:	b313      	cbz	r3, 80135ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80135a8:	6043      	str	r3, [r0, #4]
 80135aa:	7e03      	ldrb	r3, [r0, #24]
 80135ac:	b143      	cbz	r3, 80135c0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 80135ae:	6943      	ldr	r3, [r0, #20]
 80135b0:	b12b      	cbz	r3, 80135be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80135b2:	881a      	ldrh	r2, [r3, #0]
 80135b4:	b11a      	cbz	r2, 80135be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 80135b6:	1c9a      	adds	r2, r3, #2
 80135b8:	6142      	str	r2, [r0, #20]
 80135ba:	8818      	ldrh	r0, [r3, #0]
 80135bc:	bd30      	pop	{r4, r5, pc}
 80135be:	7605      	strb	r5, [r0, #24]
 80135c0:	6843      	ldr	r3, [r0, #4]
 80135c2:	8819      	ldrh	r1, [r3, #0]
 80135c4:	b199      	cbz	r1, 80135ee <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 80135c6:	1c9a      	adds	r2, r3, #2
 80135c8:	2902      	cmp	r1, #2
 80135ca:	6042      	str	r2, [r0, #4]
 80135cc:	d1f5      	bne.n	80135ba <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 80135ce:	7c03      	ldrb	r3, [r0, #16]
 80135d0:	2b01      	cmp	r3, #1
 80135d2:	d8e5      	bhi.n	80135a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135d4:	1c5a      	adds	r2, r3, #1
 80135d6:	3302      	adds	r3, #2
 80135d8:	7402      	strb	r2, [r0, #16]
 80135da:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 80135de:	6143      	str	r3, [r0, #20]
 80135e0:	2b00      	cmp	r3, #0
 80135e2:	d0dd      	beq.n	80135a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135e4:	881b      	ldrh	r3, [r3, #0]
 80135e6:	2b00      	cmp	r3, #0
 80135e8:	d0da      	beq.n	80135a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135ea:	7604      	strb	r4, [r0, #24]
 80135ec:	e7d8      	b.n	80135a0 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 80135ee:	2000      	movs	r0, #0
 80135f0:	e7e4      	b.n	80135bc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

080135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 80135f2:	b430      	push	{r4, r5}
 80135f4:	6001      	str	r1, [r0, #0]
 80135f6:	2100      	movs	r1, #0
 80135f8:	6041      	str	r1, [r0, #4]
 80135fa:	6815      	ldr	r5, [r2, #0]
 80135fc:	6085      	str	r5, [r0, #8]
 80135fe:	6852      	ldr	r2, [r2, #4]
 8013600:	6443      	str	r3, [r0, #68]	; 0x44
 8013602:	9b02      	ldr	r3, [sp, #8]
 8013604:	60c2      	str	r2, [r0, #12]
 8013606:	7401      	strb	r1, [r0, #16]
 8013608:	6141      	str	r1, [r0, #20]
 801360a:	7601      	strb	r1, [r0, #24]
 801360c:	8701      	strh	r1, [r0, #56]	; 0x38
 801360e:	8401      	strh	r1, [r0, #32]
 8013610:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013614:	6483      	str	r3, [r0, #72]	; 0x48
 8013616:	bc30      	pop	{r4, r5}
 8013618:	f7f1 bef8 	b.w	800540c <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801361c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801361c:	b408      	push	{r3}
 801361e:	b510      	push	{r4, lr}
 8013620:	b085      	sub	sp, #20
 8013622:	ac07      	add	r4, sp, #28
 8013624:	f854 3b04 	ldr.w	r3, [r4], #4
 8013628:	9300      	str	r3, [sp, #0]
 801362a:	4613      	mov	r3, r2
 801362c:	4622      	mov	r2, r4
 801362e:	9403      	str	r4, [sp, #12]
 8013630:	f7ff ffdf 	bl	80135f2 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013634:	b005      	add	sp, #20
 8013636:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801363a:	b001      	add	sp, #4
 801363c:	4770      	bx	lr

0801363e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801363e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013640:	4605      	mov	r5, r0
 8013642:	4608      	mov	r0, r1
 8013644:	b1e9      	cbz	r1, 8013682 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8013646:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 801364a:	460b      	mov	r3, r1
 801364c:	f101 0708 	add.w	r7, r1, #8
 8013650:	4622      	mov	r2, r4
 8013652:	6818      	ldr	r0, [r3, #0]
 8013654:	6859      	ldr	r1, [r3, #4]
 8013656:	4626      	mov	r6, r4
 8013658:	c603      	stmia	r6!, {r0, r1}
 801365a:	3308      	adds	r3, #8
 801365c:	42bb      	cmp	r3, r7
 801365e:	4634      	mov	r4, r6
 8013660:	d1f7      	bne.n	8013652 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8013662:	6818      	ldr	r0, [r3, #0]
 8013664:	6030      	str	r0, [r6, #0]
 8013666:	889b      	ldrh	r3, [r3, #4]
 8013668:	80b3      	strh	r3, [r6, #4]
 801366a:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 801366e:	015b      	lsls	r3, r3, #5
 8013670:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013674:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 8013678:	430b      	orrs	r3, r1
 801367a:	425b      	negs	r3, r3
 801367c:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 8013680:	4610      	mov	r0, r2
 8013682:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013684 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8013684:	b538      	push	{r3, r4, r5, lr}
 8013686:	460c      	mov	r4, r1
 8013688:	6811      	ldr	r1, [r2, #0]
 801368a:	4610      	mov	r0, r2
 801368c:	68cd      	ldr	r5, [r1, #12]
 801368e:	4619      	mov	r1, r3
 8013690:	47a8      	blx	r5
 8013692:	2800      	cmp	r0, #0
 8013694:	bf08      	it	eq
 8013696:	4620      	moveq	r0, r4
 8013698:	bd38      	pop	{r3, r4, r5, pc}
	...

0801369c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 801369c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801369e:	4604      	mov	r4, r0
 80136a0:	4615      	mov	r5, r2
 80136a2:	4608      	mov	r0, r1
 80136a4:	b93a      	cbnz	r2, 80136b6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 80136a6:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80136aa:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 80136ae:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 80136b2:	4628      	mov	r0, r5
 80136b4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80136b6:	f892 c00d 	ldrb.w	ip, [r2, #13]
 80136ba:	8893      	ldrh	r3, [r2, #4]
 80136bc:	ea4f 160c 	mov.w	r6, ip, lsl #4
 80136c0:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80136c4:	79ee      	ldrb	r6, [r5, #7]
 80136c6:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 80136ca:	4316      	orrs	r6, r2
 80136cc:	19da      	adds	r2, r3, r7
 80136ce:	b291      	uxth	r1, r2
 80136d0:	291d      	cmp	r1, #29
 80136d2:	b2b7      	uxth	r7, r6
 80136d4:	d87a      	bhi.n	80137cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80136d6:	2201      	movs	r2, #1
 80136d8:	408a      	lsls	r2, r1
 80136da:	4975      	ldr	r1, [pc, #468]	; (80138b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 80136dc:	420a      	tst	r2, r1
 80136de:	ea4f 06e6 	mov.w	r6, r6, asr #3
 80136e2:	d12d      	bne.n	8013740 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 80136e4:	f412 7f60 	tst.w	r2, #896	; 0x380
 80136e8:	d070      	beq.n	80137cc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 80136ea:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 80136ee:	462b      	mov	r3, r5
 80136f0:	f105 0e08 	add.w	lr, r5, #8
 80136f4:	4615      	mov	r5, r2
 80136f6:	6818      	ldr	r0, [r3, #0]
 80136f8:	6859      	ldr	r1, [r3, #4]
 80136fa:	4694      	mov	ip, r2
 80136fc:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013700:	3308      	adds	r3, #8
 8013702:	4573      	cmp	r3, lr
 8013704:	4662      	mov	r2, ip
 8013706:	d1f6      	bne.n	80136f6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013708:	6818      	ldr	r0, [r3, #0]
 801370a:	f8cc 0000 	str.w	r0, [ip]
 801370e:	889b      	ldrh	r3, [r3, #4]
 8013710:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013714:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013718:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801371c:	b2b3      	uxth	r3, r6
 801371e:	1aca      	subs	r2, r1, r3
 8013720:	b292      	uxth	r2, r2
 8013722:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013726:	10d2      	asrs	r2, r2, #3
 8013728:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801372c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013730:	4302      	orrs	r2, r0
 8013732:	1bcf      	subs	r7, r1, r7
 8013734:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013738:	1afb      	subs	r3, r7, r3
 801373a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801373e:	e7b8      	b.n	80136b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 8013740:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013742:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013746:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 8013748:	f640 6333 	movw	r3, #3635	; 0xe33
 801374c:	4299      	cmp	r1, r3
 801374e:	d110      	bne.n	8013772 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 8013750:	6803      	ldr	r3, [r0, #0]
 8013752:	68db      	ldr	r3, [r3, #12]
 8013754:	4798      	blx	r3
 8013756:	7b41      	ldrb	r1, [r0, #13]
 8013758:	00cb      	lsls	r3, r1, #3
 801375a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 801375e:	7a03      	ldrb	r3, [r0, #8]
 8013760:	0648      	lsls	r0, r1, #25
 8013762:	ea43 0302 	orr.w	r3, r3, r2
 8013766:	bf44      	itt	mi
 8013768:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 801376c:	b21b      	sxthmi	r3, r3
 801376e:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013772:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 8013776:	443b      	add	r3, r7
 8013778:	4433      	add	r3, r6
 801377a:	b29b      	uxth	r3, r3
 801377c:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 8013780:	462a      	mov	r2, r5
 8013782:	f105 0c08 	add.w	ip, r5, #8
 8013786:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801378a:	4635      	mov	r5, r6
 801378c:	6810      	ldr	r0, [r2, #0]
 801378e:	6851      	ldr	r1, [r2, #4]
 8013790:	4637      	mov	r7, r6
 8013792:	c703      	stmia	r7!, {r0, r1}
 8013794:	3208      	adds	r2, #8
 8013796:	4562      	cmp	r2, ip
 8013798:	463e      	mov	r6, r7
 801379a:	d1f7      	bne.n	801378c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 801379c:	6810      	ldr	r0, [r2, #0]
 801379e:	6038      	str	r0, [r7, #0]
 80137a0:	8892      	ldrh	r2, [r2, #4]
 80137a2:	80ba      	strh	r2, [r7, #4]
 80137a4:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 80137a8:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 80137ac:	10db      	asrs	r3, r3, #3
 80137ae:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 80137b2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 80137b6:	4313      	orrs	r3, r2
 80137b8:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80137bc:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 80137c0:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 80137c4:	1a9b      	subs	r3, r3, r2
 80137c6:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 80137ca:	e772      	b.n	80136b2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80137cc:	f023 0204 	bic.w	r2, r3, #4
 80137d0:	f640 611b 	movw	r1, #3611	; 0xe1b
 80137d4:	428a      	cmp	r2, r1
 80137d6:	d003      	beq.n	80137e0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 80137d8:	f640 621d 	movw	r2, #3613	; 0xe1d
 80137dc:	4293      	cmp	r3, r2
 80137de:	d120      	bne.n	8013822 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 80137e0:	3b01      	subs	r3, #1
 80137e2:	4602      	mov	r2, r0
 80137e4:	b29b      	uxth	r3, r3
 80137e6:	4629      	mov	r1, r5
 80137e8:	4620      	mov	r0, r4
 80137ea:	f7ff ff4b 	bl	8013684 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80137ee:	7b41      	ldrb	r1, [r0, #13]
 80137f0:	00cb      	lsls	r3, r1, #3
 80137f2:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80137f6:	7a03      	ldrb	r3, [r0, #8]
 80137f8:	0649      	lsls	r1, r1, #25
 80137fa:	ea43 0302 	orr.w	r3, r3, r2
 80137fe:	bf44      	itt	mi
 8013800:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013804:	b21b      	sxthmi	r3, r3
 8013806:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801380a:	7b6b      	ldrb	r3, [r5, #13]
 801380c:	7aaa      	ldrb	r2, [r5, #10]
 801380e:	005b      	lsls	r3, r3, #1
 8013810:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013814:	4313      	orrs	r3, r2
 8013816:	115a      	asrs	r2, r3, #5
 8013818:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801381c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013820:	e036      	b.n	8013890 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8013822:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8013826:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801382a:	7a2a      	ldrb	r2, [r5, #8]
 801382c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013830:	ea42 0201 	orr.w	r2, r2, r1
 8013834:	bf1c      	itt	ne
 8013836:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801383a:	b212      	sxthne	r2, r2
 801383c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 8013840:	f640 6109 	movw	r1, #3593	; 0xe09
 8013844:	f023 0210 	bic.w	r2, r3, #16
 8013848:	428a      	cmp	r2, r1
 801384a:	d003      	beq.n	8013854 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 801384c:	f640 6213 	movw	r2, #3603	; 0xe13
 8013850:	4293      	cmp	r3, r2
 8013852:	d12a      	bne.n	80138aa <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 8013854:	7b6e      	ldrb	r6, [r5, #13]
 8013856:	0076      	lsls	r6, r6, #1
 8013858:	f406 7280 	and.w	r2, r6, #256	; 0x100
 801385c:	7aae      	ldrb	r6, [r5, #10]
 801385e:	4316      	orrs	r6, r2
 8013860:	f640 6213 	movw	r2, #3603	; 0xe13
 8013864:	4293      	cmp	r3, r2
 8013866:	bf18      	it	ne
 8013868:	f103 33ff 	addne.w	r3, r3, #4294967295
 801386c:	4602      	mov	r2, r0
 801386e:	bf14      	ite	ne
 8013870:	b29b      	uxthne	r3, r3
 8013872:	f640 630c 	movweq	r3, #3596	; 0xe0c
 8013876:	4629      	mov	r1, r5
 8013878:	4620      	mov	r0, r4
 801387a:	f7ff ff03 	bl	8013684 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801387e:	7b43      	ldrb	r3, [r0, #13]
 8013880:	7a82      	ldrb	r2, [r0, #10]
 8013882:	005b      	lsls	r3, r3, #1
 8013884:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013888:	4313      	orrs	r3, r2
 801388a:	1af6      	subs	r6, r6, r3
 801388c:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 8013890:	7b69      	ldrb	r1, [r5, #13]
 8013892:	00cb      	lsls	r3, r1, #3
 8013894:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013898:	7a2b      	ldrb	r3, [r5, #8]
 801389a:	4313      	orrs	r3, r2
 801389c:	064a      	lsls	r2, r1, #25
 801389e:	bf44      	itt	mi
 80138a0:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80138a4:	b21b      	sxthmi	r3, r3
 80138a6:	1bdb      	subs	r3, r3, r7
 80138a8:	e747      	b.n	801373a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 80138aa:	2300      	movs	r3, #0
 80138ac:	e7b6      	b.n	801381c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 80138ae:	bf00      	nop
 80138b0:	3fc00079 	.word	0x3fc00079

080138b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 80138b4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80138b8:	4604      	mov	r4, r0
 80138ba:	b942      	cbnz	r2, 80138ce <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 80138bc:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80138c0:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 80138c4:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 80138c8:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 80138cc:	e047      	b.n	801395e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80138ce:	7b51      	ldrb	r1, [r2, #13]
 80138d0:	8893      	ldrh	r3, [r2, #4]
 80138d2:	010d      	lsls	r5, r1, #4
 80138d4:	f405 7080 	and.w	r0, r5, #256	; 0x100
 80138d8:	79d5      	ldrb	r5, [r2, #7]
 80138da:	4305      	orrs	r5, r0
 80138dc:	2d04      	cmp	r5, #4
 80138de:	bfcc      	ite	gt
 80138e0:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 80138e4:	f04f 0e01 	movle.w	lr, #1
 80138e8:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 80138ec:	f200 80ab 	bhi.w	8013a46 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 80138f0:	f240 60e7 	movw	r0, #1767	; 0x6e7
 80138f4:	4283      	cmp	r3, r0
 80138f6:	d216      	bcs.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80138f8:	f240 605b 	movw	r0, #1627	; 0x65b
 80138fc:	4283      	cmp	r3, r0
 80138fe:	d859      	bhi.n	80139b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013900:	f240 6057 	movw	r0, #1623	; 0x657
 8013904:	4283      	cmp	r3, r0
 8013906:	d20e      	bcs.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013908:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801390c:	d24a      	bcs.n	80139a4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801390e:	f240 604e 	movw	r0, #1614	; 0x64e
 8013912:	4283      	cmp	r3, r0
 8013914:	d207      	bcs.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013916:	f240 601a 	movw	r0, #1562	; 0x61a
 801391a:	4283      	cmp	r3, r0
 801391c:	d02a      	beq.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801391e:	d821      	bhi.n	8013964 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013920:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013924:	d35b      	bcc.n	80139de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013926:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801392a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801392e:	f040 80d0 	bne.w	8013ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013932:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013936:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801393a:	f040 80ca 	bne.w	8013ad2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801393e:	00cb      	lsls	r3, r1, #3
 8013940:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013944:	7a13      	ldrb	r3, [r2, #8]
 8013946:	0649      	lsls	r1, r1, #25
 8013948:	ea43 0300 	orr.w	r3, r3, r0
 801394c:	bf44      	itt	mi
 801394e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013952:	b21b      	sxthmi	r3, r3
 8013954:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013958:	1b5d      	subs	r5, r3, r5
 801395a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801395e:	4610      	mov	r0, r2
 8013960:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013964:	f240 604b 	movw	r0, #1611	; 0x64b
 8013968:	4283      	cmp	r3, r0
 801396a:	d338      	bcc.n	80139de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801396c:	f240 604c 	movw	r0, #1612	; 0x64c
 8013970:	4283      	cmp	r3, r0
 8013972:	d9d8      	bls.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013974:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 8013978:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 801397c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013980:	f040 80f2 	bne.w	8013b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8013984:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013988:	f040 80ee 	bne.w	8013b68 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801398c:	00cb      	lsls	r3, r1, #3
 801398e:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013992:	7a13      	ldrb	r3, [r2, #8]
 8013994:	064e      	lsls	r6, r1, #25
 8013996:	ea43 0300 	orr.w	r3, r3, r0
 801399a:	bf44      	itt	mi
 801399c:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80139a0:	b21b      	sxthmi	r3, r3
 80139a2:	e7d9      	b.n	8013958 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 80139a4:	f240 6054 	movw	r0, #1620	; 0x654
 80139a8:	4283      	cmp	r3, r0
 80139aa:	d8e3      	bhi.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139ac:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 80139b0:	d9e0      	bls.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139b2:	e7b8      	b.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139b4:	f240 6074 	movw	r0, #1652	; 0x674
 80139b8:	4283      	cmp	r3, r0
 80139ba:	d0b4      	beq.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139bc:	d82d      	bhi.n	8013a1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80139be:	f240 605e 	movw	r0, #1630	; 0x65e
 80139c2:	4283      	cmp	r3, r0
 80139c4:	d804      	bhi.n	80139d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80139c6:	f240 605d 	movw	r0, #1629	; 0x65d
 80139ca:	4283      	cmp	r3, r0
 80139cc:	d3d2      	bcc.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139ce:	e7aa      	b.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139d0:	f240 605f 	movw	r0, #1631	; 0x65f
 80139d4:	4283      	cmp	r3, r0
 80139d6:	d0cd      	beq.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80139d8:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 80139dc:	d0a3      	beq.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80139de:	00cb      	lsls	r3, r1, #3
 80139e0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80139e4:	7a13      	ldrb	r3, [r2, #8]
 80139e6:	0649      	lsls	r1, r1, #25
 80139e8:	ea43 0300 	orr.w	r3, r3, r0
 80139ec:	bf44      	itt	mi
 80139ee:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80139f2:	b21b      	sxthmi	r3, r3
 80139f4:	1b5d      	subs	r5, r3, r5
 80139f6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80139fa:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80139fe:	7b53      	ldrb	r3, [r2, #13]
 8013a00:	015b      	lsls	r3, r3, #5
 8013a02:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013a06:	7993      	ldrb	r3, [r2, #6]
 8013a08:	430b      	orrs	r3, r1
 8013a0a:	005b      	lsls	r3, r3, #1
 8013a0c:	2105      	movs	r1, #5
 8013a0e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013a12:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013a16:	440b      	add	r3, r1
 8013a18:	e756      	b.n	80138c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8013a1a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 8013a1e:	4283      	cmp	r3, r0
 8013a20:	d809      	bhi.n	8013a36 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013a22:	f240 60df 	movw	r0, #1759	; 0x6df
 8013a26:	4283      	cmp	r3, r0
 8013a28:	f4bf af7d 	bcs.w	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a2c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013a30:	2b05      	cmp	r3, #5
 8013a32:	d8d4      	bhi.n	80139de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013a34:	e777      	b.n	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a36:	f240 60e3 	movw	r0, #1763	; 0x6e3
 8013a3a:	4283      	cmp	r3, r0
 8013a3c:	d09a      	beq.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a3e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 8013a42:	4283      	cmp	r3, r0
 8013a44:	e7ca      	b.n	80139dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 8013a46:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 8013a4a:	d22b      	bcs.n	8013aa4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8013a4c:	f640 00ed 	movw	r0, #2285	; 0x8ed
 8013a50:	4283      	cmp	r3, r0
 8013a52:	d28f      	bcs.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a54:	f640 00e5 	movw	r0, #2277	; 0x8e5
 8013a58:	4283      	cmp	r3, r0
 8013a5a:	d816      	bhi.n	8013a8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8013a5c:	f640 00e4 	movw	r0, #2276	; 0x8e4
 8013a60:	4283      	cmp	r3, r0
 8013a62:	f4bf af60 	bcs.w	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a66:	f240 60ec 	movw	r0, #1772	; 0x6ec
 8013a6a:	4283      	cmp	r3, r0
 8013a6c:	d80a      	bhi.n	8013a84 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8013a6e:	f240 60eb 	movw	r0, #1771	; 0x6eb
 8013a72:	4283      	cmp	r3, r0
 8013a74:	f4bf af57 	bcs.w	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013a78:	f240 60ea 	movw	r0, #1770	; 0x6ea
 8013a7c:	4283      	cmp	r3, r0
 8013a7e:	f43f af79 	beq.w	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013a82:	e7ac      	b.n	80139de <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013a84:	f240 60ed 	movw	r0, #1773	; 0x6ed
 8013a88:	e7f8      	b.n	8013a7c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8013a8a:	f640 00e8 	movw	r0, #2280	; 0x8e8
 8013a8e:	4283      	cmp	r3, r0
 8013a90:	d802      	bhi.n	8013a98 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 8013a92:	f640 00e7 	movw	r0, #2279	; 0x8e7
 8013a96:	e798      	b.n	80139ca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8013a98:	f640 00e9 	movw	r0, #2281	; 0x8e9
 8013a9c:	4283      	cmp	r3, r0
 8013a9e:	f47f af42 	bne.w	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013aa2:	e767      	b.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013aa4:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8013aa8:	4283      	cmp	r3, r0
 8013aaa:	f43f af63 	beq.w	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013aae:	d802      	bhi.n	8013ab6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8013ab0:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8013ab4:	e7f2      	b.n	8013a9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013ab6:	f640 00fa 	movw	r0, #2298	; 0x8fa
 8013aba:	4283      	cmp	r3, r0
 8013abc:	d805      	bhi.n	8013aca <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 8013abe:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013ac2:	4283      	cmp	r3, r0
 8013ac4:	f4ff af2f 	bcc.w	8013926 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013ac8:	e754      	b.n	8013974 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013aca:	f640 00fe 	movw	r0, #2302	; 0x8fe
 8013ace:	4283      	cmp	r3, r0
 8013ad0:	e7af      	b.n	8013a32 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013ad2:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013ad6:	4617      	mov	r7, r2
 8013ad8:	f102 0808 	add.w	r8, r2, #8
 8013adc:	4666      	mov	r6, ip
 8013ade:	6838      	ldr	r0, [r7, #0]
 8013ae0:	6879      	ldr	r1, [r7, #4]
 8013ae2:	46e6      	mov	lr, ip
 8013ae4:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013ae8:	3708      	adds	r7, #8
 8013aea:	4547      	cmp	r7, r8
 8013aec:	46f4      	mov	ip, lr
 8013aee:	d1f6      	bne.n	8013ade <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013af0:	6838      	ldr	r0, [r7, #0]
 8013af2:	f8ce 0000 	str.w	r0, [lr]
 8013af6:	88b9      	ldrh	r1, [r7, #4]
 8013af8:	f8ae 1004 	strh.w	r1, [lr, #4]
 8013afc:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013b00:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013b04:	d009      	beq.n	8013b1a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013b06:	7b51      	ldrb	r1, [r2, #13]
 8013b08:	7992      	ldrb	r2, [r2, #6]
 8013b0a:	0149      	lsls	r1, r1, #5
 8013b0c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013b10:	4311      	orrs	r1, r2
 8013b12:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013b16:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013b1a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013b1e:	b2ad      	uxth	r5, r5
 8013b20:	d00d      	beq.n	8013b3e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013b22:	442b      	add	r3, r5
 8013b24:	b29b      	uxth	r3, r3
 8013b26:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013b2a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013b2e:	10db      	asrs	r3, r3, #3
 8013b30:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013b34:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013b38:	4313      	orrs	r3, r2
 8013b3a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013b3e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013b42:	00cb      	lsls	r3, r1, #3
 8013b44:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013b48:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013b4c:	064f      	lsls	r7, r1, #25
 8013b4e:	ea43 0302 	orr.w	r3, r3, r2
 8013b52:	bf44      	itt	mi
 8013b54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013b58:	b21b      	sxthmi	r3, r3
 8013b5a:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 8013b5e:	1b5b      	subs	r3, r3, r5
 8013b60:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 8013b64:	4632      	mov	r2, r6
 8013b66:	e6fa      	b.n	801395e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8013b68:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013b6c:	4617      	mov	r7, r2
 8013b6e:	f102 0908 	add.w	r9, r2, #8
 8013b72:	4666      	mov	r6, ip
 8013b74:	6838      	ldr	r0, [r7, #0]
 8013b76:	6879      	ldr	r1, [r7, #4]
 8013b78:	46e0      	mov	r8, ip
 8013b7a:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8013b7e:	3708      	adds	r7, #8
 8013b80:	454f      	cmp	r7, r9
 8013b82:	46c4      	mov	ip, r8
 8013b84:	d1f6      	bne.n	8013b74 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 8013b86:	6838      	ldr	r0, [r7, #0]
 8013b88:	f8c8 0000 	str.w	r0, [r8]
 8013b8c:	88b9      	ldrh	r1, [r7, #4]
 8013b8e:	f8a8 1004 	strh.w	r1, [r8, #4]
 8013b92:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013b96:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013b9a:	d009      	beq.n	8013bb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8013b9c:	7b51      	ldrb	r1, [r2, #13]
 8013b9e:	7992      	ldrb	r2, [r2, #6]
 8013ba0:	0149      	lsls	r1, r1, #5
 8013ba2:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013ba6:	4311      	orrs	r1, r2
 8013ba8:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013bac:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013bb0:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013bb4:	d00e      	beq.n	8013bd4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8013bb6:	eba3 030e 	sub.w	r3, r3, lr
 8013bba:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013bbe:	b29b      	uxth	r3, r3
 8013bc0:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013bc4:	10db      	asrs	r3, r3, #3
 8013bc6:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013bca:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013bce:	4313      	orrs	r3, r2
 8013bd0:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013bd4:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013bd8:	00cb      	lsls	r3, r1, #3
 8013bda:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013bde:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013be2:	0648      	lsls	r0, r1, #25
 8013be4:	ea43 0302 	orr.w	r3, r3, r2
 8013be8:	bf44      	itt	mi
 8013bea:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013bee:	b21b      	sxthmi	r3, r3
 8013bf0:	1b5d      	subs	r5, r3, r5
 8013bf2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013bf6:	e7b5      	b.n	8013b64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013bf8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013bf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013bfc:	461e      	mov	r6, r3
 8013bfe:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013c00:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013c04:	4604      	mov	r4, r0
 8013c06:	4617      	mov	r7, r2
 8013c08:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013c0c:	f7f1 fbbc 	bl	8005388 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013c10:	4605      	mov	r5, r0
 8013c12:	b918      	cbnz	r0, 8013c1c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013c14:	6030      	str	r0, [r6, #0]
 8013c16:	4628      	mov	r0, r5
 8013c18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013c1c:	683b      	ldr	r3, [r7, #0]
 8013c1e:	4601      	mov	r1, r0
 8013c20:	68db      	ldr	r3, [r3, #12]
 8013c22:	4638      	mov	r0, r7
 8013c24:	4798      	blx	r3
 8013c26:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013c2a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013c2e:	4602      	mov	r2, r0
 8013c30:	6030      	str	r0, [r6, #0]
 8013c32:	d213      	bcs.n	8013c5c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013c34:	4643      	mov	r3, r8
 8013c36:	4639      	mov	r1, r7
 8013c38:	4620      	mov	r0, r4
 8013c3a:	f7ff fe3b 	bl	80138b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013c3e:	6030      	str	r0, [r6, #0]
 8013c40:	6833      	ldr	r3, [r6, #0]
 8013c42:	b143      	cbz	r3, 8013c56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013c44:	7b5a      	ldrb	r2, [r3, #13]
 8013c46:	7a9b      	ldrb	r3, [r3, #10]
 8013c48:	0052      	lsls	r2, r2, #1
 8013c4a:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013c4e:	4313      	orrs	r3, r2
 8013c50:	bf0c      	ite	eq
 8013c52:	2301      	moveq	r3, #1
 8013c54:	2300      	movne	r3, #0
 8013c56:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013c5a:	e7dc      	b.n	8013c16 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8013c5c:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013c60:	b29b      	uxth	r3, r3
 8013c62:	2b7f      	cmp	r3, #127	; 0x7f
 8013c64:	d804      	bhi.n	8013c70 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013c66:	4639      	mov	r1, r7
 8013c68:	4620      	mov	r0, r4
 8013c6a:	f7ff fd17 	bl	801369c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013c6e:	e7e6      	b.n	8013c3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013c70:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013c74:	2b00      	cmp	r3, #0
 8013c76:	d0e3      	beq.n	8013c40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013c78:	f640 1302 	movw	r3, #2306	; 0x902
 8013c7c:	429d      	cmp	r5, r3
 8013c7e:	d1df      	bne.n	8013c40 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013c80:	4601      	mov	r1, r0
 8013c82:	4620      	mov	r0, r4
 8013c84:	f7ff fcdb 	bl	801363e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013c88:	e7d9      	b.n	8013c3e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08013c8a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013c8a:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013c8e:	461e      	mov	r6, r3
 8013c90:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013c92:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013c96:	4604      	mov	r4, r0
 8013c98:	4617      	mov	r7, r2
 8013c9a:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013c9e:	f7f1 fb73 	bl	8005388 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013ca2:	4605      	mov	r5, r0
 8013ca4:	b918      	cbnz	r0, 8013cae <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013ca6:	6030      	str	r0, [r6, #0]
 8013ca8:	4628      	mov	r0, r5
 8013caa:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013cae:	683b      	ldr	r3, [r7, #0]
 8013cb0:	4601      	mov	r1, r0
 8013cb2:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013cb6:	4638      	mov	r0, r7
 8013cb8:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013cbc:	47c8      	blx	r9
 8013cbe:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013cc2:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013cc6:	4602      	mov	r2, r0
 8013cc8:	6030      	str	r0, [r6, #0]
 8013cca:	d213      	bcs.n	8013cf4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013ccc:	4643      	mov	r3, r8
 8013cce:	4639      	mov	r1, r7
 8013cd0:	4620      	mov	r0, r4
 8013cd2:	f7ff fdef 	bl	80138b4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013cd6:	6030      	str	r0, [r6, #0]
 8013cd8:	6833      	ldr	r3, [r6, #0]
 8013cda:	b143      	cbz	r3, 8013cee <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8013cdc:	7b5a      	ldrb	r2, [r3, #13]
 8013cde:	7a9b      	ldrb	r3, [r3, #10]
 8013ce0:	0052      	lsls	r2, r2, #1
 8013ce2:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013ce6:	4313      	orrs	r3, r2
 8013ce8:	bf0c      	ite	eq
 8013cea:	2301      	moveq	r3, #1
 8013cec:	2300      	movne	r3, #0
 8013cee:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013cf2:	e7d9      	b.n	8013ca8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013cf4:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013cf8:	b29b      	uxth	r3, r3
 8013cfa:	2b7f      	cmp	r3, #127	; 0x7f
 8013cfc:	d804      	bhi.n	8013d08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8013cfe:	4639      	mov	r1, r7
 8013d00:	4620      	mov	r0, r4
 8013d02:	f7ff fccb 	bl	801369c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013d06:	e7e6      	b.n	8013cd6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013d08:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013d0c:	2b00      	cmp	r3, #0
 8013d0e:	d0e3      	beq.n	8013cd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013d10:	f640 1302 	movw	r3, #2306	; 0x902
 8013d14:	429d      	cmp	r5, r3
 8013d16:	d1df      	bne.n	8013cd8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013d18:	4601      	mov	r1, r0
 8013d1a:	4620      	mov	r0, r4
 8013d1c:	f7ff fc8f 	bl	801363e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013d20:	e7d9      	b.n	8013cd6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013d22 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013d22:	b510      	push	{r4, lr}
 8013d24:	4604      	mov	r4, r0
 8013d26:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013d2a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d2c:	b1f1      	cbz	r1, 8013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013d2e:	2b0a      	cmp	r3, #10
 8013d30:	d02f      	beq.n	8013d92 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013d32:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013d34:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013d38:	3901      	subs	r1, #1
 8013d3a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013d3c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013d40:	1c51      	adds	r1, r2, #1
 8013d42:	b289      	uxth	r1, r1
 8013d44:	2901      	cmp	r1, #1
 8013d46:	bf84      	itt	hi
 8013d48:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013d4c:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8013d4e:	f103 0201 	add.w	r2, r3, #1
 8013d52:	8722      	strh	r2, [r4, #56]	; 0x38
 8013d54:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013d56:	bf98      	it	ls
 8013d58:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013d5a:	4413      	add	r3, r2
 8013d5c:	b29b      	uxth	r3, r3
 8013d5e:	2b09      	cmp	r3, #9
 8013d60:	bf88      	it	hi
 8013d62:	3b0a      	subhi	r3, #10
 8013d64:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013d68:	8458      	strh	r0, [r3, #34]	; 0x22
 8013d6a:	e7dc      	b.n	8013d26 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013d6c:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d6e:	2b0a      	cmp	r3, #10
 8013d70:	d00f      	beq.n	8013d92 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013d72:	4620      	mov	r0, r4
 8013d74:	f7ff fc11 	bl	801359a <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013d78:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013d7a:	1c5a      	adds	r2, r3, #1
 8013d7c:	8722      	strh	r2, [r4, #56]	; 0x38
 8013d7e:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013d80:	4413      	add	r3, r2
 8013d82:	b29b      	uxth	r3, r3
 8013d84:	2b09      	cmp	r3, #9
 8013d86:	bf88      	it	hi
 8013d88:	3b0a      	subhi	r3, #10
 8013d8a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013d8e:	8458      	strh	r0, [r3, #34]	; 0x22
 8013d90:	e7ec      	b.n	8013d6c <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013d92:	bd10      	pop	{r4, pc}

08013d94 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013d94:	b538      	push	{r3, r4, r5, lr}
 8013d96:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013d98:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8013d9c:	4604      	mov	r4, r0
 8013d9e:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8013da0:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013da2:	3a01      	subs	r2, #1
 8013da4:	8702      	strh	r2, [r0, #56]	; 0x38
 8013da6:	1c5a      	adds	r2, r3, #1
 8013da8:	b292      	uxth	r2, r2
 8013daa:	2a09      	cmp	r2, #9
 8013dac:	bf86      	itte	hi
 8013dae:	3b09      	subhi	r3, #9
 8013db0:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013db2:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013db4:	f7ff ffb5 	bl	8013d22 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013db8:	8c23      	ldrh	r3, [r4, #32]
 8013dba:	2b01      	cmp	r3, #1
 8013dbc:	bf9c      	itt	ls
 8013dbe:	3301      	addls	r3, #1
 8013dc0:	8423      	strhls	r3, [r4, #32]
 8013dc2:	8be3      	ldrh	r3, [r4, #30]
 8013dc4:	b90b      	cbnz	r3, 8013dca <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013dc6:	2302      	movs	r3, #2
 8013dc8:	83e3      	strh	r3, [r4, #30]
 8013dca:	8be3      	ldrh	r3, [r4, #30]
 8013dcc:	3b01      	subs	r3, #1
 8013dce:	b29b      	uxth	r3, r3
 8013dd0:	83e3      	strh	r3, [r4, #30]
 8013dd2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013dd6:	4628      	mov	r0, r5
 8013dd8:	8365      	strh	r5, [r4, #26]
 8013dda:	bd38      	pop	{r3, r4, r5, pc}

08013ddc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013ddc:	428a      	cmp	r2, r1
 8013dde:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013de2:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013de4:	d931      	bls.n	8013e4a <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013de6:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013de8:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8013dec:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013df0:	19ee      	adds	r6, r5, r7
 8013df2:	1a54      	subs	r4, r2, r1
 8013df4:	3e01      	subs	r6, #1
 8013df6:	fa1f fe84 	uxth.w	lr, r4
 8013dfa:	b2b4      	uxth	r4, r6
 8013dfc:	eba4 090e 	sub.w	r9, r4, lr
 8013e00:	fa1f f989 	uxth.w	r9, r9
 8013e04:	2c09      	cmp	r4, #9
 8013e06:	4626      	mov	r6, r4
 8013e08:	bf88      	it	hi
 8013e0a:	f1a4 060a 	subhi.w	r6, r4, #10
 8013e0e:	f1bc 0f00 	cmp.w	ip, #0
 8013e12:	bf08      	it	eq
 8013e14:	f04f 0c02 	moveq.w	ip, #2
 8013e18:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013e1c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013e20:	fa1f fc8c 	uxth.w	ip, ip
 8013e24:	3c01      	subs	r4, #1
 8013e26:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8013e2a:	b2a4      	uxth	r4, r4
 8013e2c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013e30:	454c      	cmp	r4, r9
 8013e32:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013e36:	d1e5      	bne.n	8013e04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013e38:	eba5 050e 	sub.w	r5, r5, lr
 8013e3c:	eb0e 0408 	add.w	r4, lr, r8
 8013e40:	8705      	strh	r5, [r0, #56]	; 0x38
 8013e42:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013e46:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013e4a:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013e4c:	1a64      	subs	r4, r4, r1
 8013e4e:	4439      	add	r1, r7
 8013e50:	b289      	uxth	r1, r1
 8013e52:	2909      	cmp	r1, #9
 8013e54:	bf88      	it	hi
 8013e56:	390a      	subhi	r1, #10
 8013e58:	8704      	strh	r4, [r0, #56]	; 0x38
 8013e5a:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013e5c:	250a      	movs	r5, #10
 8013e5e:	b18a      	cbz	r2, 8013e84 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013e60:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013e62:	3a01      	subs	r2, #1
 8013e64:	b292      	uxth	r2, r2
 8013e66:	3101      	adds	r1, #1
 8013e68:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013e6c:	8701      	strh	r1, [r0, #56]	; 0x38
 8013e6e:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013e70:	b901      	cbnz	r1, 8013e74 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013e72:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013e74:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013e76:	3901      	subs	r1, #1
 8013e78:	b289      	uxth	r1, r1
 8013e7a:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013e7c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013e80:	844c      	strh	r4, [r1, #34]	; 0x22
 8013e82:	e7ec      	b.n	8013e5e <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013e84:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013e88:	f7ff bf4b 	b.w	8013d22 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013e8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013e8c:	b570      	push	{r4, r5, r6, lr}
 8013e8e:	2500      	movs	r5, #0
 8013e90:	4295      	cmp	r5, r2
 8013e92:	d011      	beq.n	8013eb8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013e94:	8bc4      	ldrh	r4, [r0, #30]
 8013e96:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013e9a:	4414      	add	r4, r2
 8013e9c:	3c01      	subs	r4, #1
 8013e9e:	1b64      	subs	r4, r4, r5
 8013ea0:	b2a4      	uxth	r4, r4
 8013ea2:	2c01      	cmp	r4, #1
 8013ea4:	bf88      	it	hi
 8013ea6:	3c02      	subhi	r4, #2
 8013ea8:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013eac:	8b64      	ldrh	r4, [r4, #26]
 8013eae:	42b4      	cmp	r4, r6
 8013eb0:	d117      	bne.n	8013ee2 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8013eb2:	3501      	adds	r5, #1
 8013eb4:	b2ad      	uxth	r5, r5
 8013eb6:	e7eb      	b.n	8013e90 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013eb8:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013ebc:	2400      	movs	r4, #0
 8013ebe:	4413      	add	r3, r2
 8013ec0:	b2a2      	uxth	r2, r4
 8013ec2:	429a      	cmp	r2, r3
 8013ec4:	da0f      	bge.n	8013ee6 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013ec6:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013ec8:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013ecc:	4432      	add	r2, r6
 8013ece:	b292      	uxth	r2, r2
 8013ed0:	2a09      	cmp	r2, #9
 8013ed2:	bf88      	it	hi
 8013ed4:	3a0a      	subhi	r2, #10
 8013ed6:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013eda:	3401      	adds	r4, #1
 8013edc:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013ede:	42aa      	cmp	r2, r5
 8013ee0:	d0ee      	beq.n	8013ec0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013ee2:	2000      	movs	r0, #0
 8013ee4:	bd70      	pop	{r4, r5, r6, pc}
 8013ee6:	2001      	movs	r0, #1
 8013ee8:	e7fc      	b.n	8013ee4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013eea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013eea:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013eee:	4605      	mov	r5, r0
 8013ef0:	4616      	mov	r6, r2
 8013ef2:	1c8c      	adds	r4, r1, #2
 8013ef4:	8809      	ldrh	r1, [r1, #0]
 8013ef6:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013efa:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013efe:	42b3      	cmp	r3, r6
 8013f00:	d124      	bne.n	8013f4c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013f02:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013f06:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013f0a:	f001 070f 	and.w	r7, r1, #15
 8013f0e:	f8cd 8000 	str.w	r8, [sp]
 8013f12:	464b      	mov	r3, r9
 8013f14:	4652      	mov	r2, sl
 8013f16:	4621      	mov	r1, r4
 8013f18:	4628      	mov	r0, r5
 8013f1a:	f7ff ffb7 	bl	8013e8c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013f1e:	4683      	mov	fp, r0
 8013f20:	b168      	cbz	r0, 8013f3e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013f22:	eb0a 0109 	add.w	r1, sl, r9
 8013f26:	4441      	add	r1, r8
 8013f28:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013f2c:	463a      	mov	r2, r7
 8013f2e:	4649      	mov	r1, r9
 8013f30:	4628      	mov	r0, r5
 8013f32:	f7ff ff53 	bl	8013ddc <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013f36:	4658      	mov	r0, fp
 8013f38:	b003      	add	sp, #12
 8013f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013f3e:	eb07 010a 	add.w	r1, r7, sl
 8013f42:	4449      	add	r1, r9
 8013f44:	4441      	add	r1, r8
 8013f46:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013f4a:	e7d2      	b.n	8013ef2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013f4c:	f04f 0b00 	mov.w	fp, #0
 8013f50:	e7f1      	b.n	8013f36 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013f52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013f52:	b570      	push	{r4, r5, r6, lr}
 8013f54:	8810      	ldrh	r0, [r2, #0]
 8013f56:	4298      	cmp	r0, r3
 8013f58:	d817      	bhi.n	8013f8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f5a:	1e48      	subs	r0, r1, #1
 8013f5c:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013f60:	4298      	cmp	r0, r3
 8013f62:	d312      	bcc.n	8013f8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f64:	2400      	movs	r4, #0
 8013f66:	428c      	cmp	r4, r1
 8013f68:	d20f      	bcs.n	8013f8a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013f6a:	1860      	adds	r0, r4, r1
 8013f6c:	1040      	asrs	r0, r0, #1
 8013f6e:	0085      	lsls	r5, r0, #2
 8013f70:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013f74:	42b3      	cmp	r3, r6
 8013f76:	d902      	bls.n	8013f7e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013f78:	3001      	adds	r0, #1
 8013f7a:	b284      	uxth	r4, r0
 8013f7c:	e7f3      	b.n	8013f66 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013f7e:	d201      	bcs.n	8013f84 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013f80:	b281      	uxth	r1, r0
 8013f82:	e7f0      	b.n	8013f66 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013f84:	442a      	add	r2, r5
 8013f86:	8850      	ldrh	r0, [r2, #2]
 8013f88:	bd70      	pop	{r4, r5, r6, pc}
 8013f8a:	2000      	movs	r0, #0
 8013f8c:	e7fc      	b.n	8013f88 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013f8e <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013f8e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013f92:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013f94:	886f      	ldrh	r7, [r5, #2]
 8013f96:	4604      	mov	r4, r0
 8013f98:	087f      	lsrs	r7, r7, #1
 8013f9a:	260b      	movs	r6, #11
 8013f9c:	3e01      	subs	r6, #1
 8013f9e:	d013      	beq.n	8013fc8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013fa0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013fa2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013fa6:	462a      	mov	r2, r5
 8013fa8:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013fac:	4639      	mov	r1, r7
 8013fae:	4643      	mov	r3, r8
 8013fb0:	4620      	mov	r0, r4
 8013fb2:	f7ff ffce 	bl	8013f52 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013fb6:	b138      	cbz	r0, 8013fc8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013fb8:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013fbc:	4642      	mov	r2, r8
 8013fbe:	4620      	mov	r0, r4
 8013fc0:	f7ff ff93 	bl	8013eea <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013fc4:	2800      	cmp	r0, #0
 8013fc6:	d1e9      	bne.n	8013f9c <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013fc8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013fcc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013fcc:	b570      	push	{r4, r5, r6, lr}
 8013fce:	694a      	ldr	r2, [r1, #20]
 8013fd0:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013fd2:	684b      	ldr	r3, [r1, #4]
 8013fd4:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013fd6:	1b54      	subs	r4, r2, r5
 8013fd8:	f000 8106 	beq.w	80141e8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013fdc:	1b9b      	subs	r3, r3, r6
 8013fde:	d003      	beq.n	8013fe8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013fe0:	4363      	muls	r3, r4
 8013fe2:	2210      	movs	r2, #16
 8013fe4:	fb93 f3f2 	sdiv	r3, r3, r2
 8013fe8:	680c      	ldr	r4, [r1, #0]
 8013fea:	698a      	ldr	r2, [r1, #24]
 8013fec:	1b65      	subs	r5, r4, r5
 8013fee:	f000 80fd 	beq.w	80141ec <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013ff2:	1b92      	subs	r2, r2, r6
 8013ff4:	d003      	beq.n	8013ffe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013ff6:	436a      	muls	r2, r5
 8013ff8:	2410      	movs	r4, #16
 8013ffa:	fb92 f2f4 	sdiv	r2, r2, r4
 8013ffe:	1a9b      	subs	r3, r3, r2
 8014000:	ee07 3a90 	vmov	s15, r3
 8014004:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8014228 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8014008:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801400c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014010:	ee67 7a84 	vmul.f32	s15, s15, s8
 8014014:	460a      	mov	r2, r1
 8014016:	ee87 3a27 	vdiv.f32	s6, s14, s15
 801401a:	4603      	mov	r3, r0
 801401c:	f100 040c 	add.w	r4, r0, #12
 8014020:	eeb1 6a43 	vneg.f32	s12, s6
 8014024:	edd2 7a02 	vldr	s15, [r2, #8]
 8014028:	eec7 6a27 	vdiv.f32	s13, s14, s15
 801402c:	3214      	adds	r2, #20
 801402e:	ece3 6a01 	vstmia	r3!, {s13}
 8014032:	ed52 7a02 	vldr	s15, [r2, #-8]
 8014036:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801403a:	429c      	cmp	r4, r3
 801403c:	edc3 7a02 	vstr	s15, [r3, #8]
 8014040:	ed52 7a01 	vldr	s15, [r2, #-4]
 8014044:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014048:	edc3 7a05 	vstr	s15, [r3, #20]
 801404c:	d1ea      	bne.n	8014024 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 801404e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014050:	698b      	ldr	r3, [r1, #24]
 8014052:	edd0 4a02 	vldr	s9, [r0, #8]
 8014056:	edd0 3a00 	vldr	s7, [r0]
 801405a:	edd0 6a01 	vldr	s13, [r0, #4]
 801405e:	ed90 5a05 	vldr	s10, [r0, #20]
 8014062:	ed90 2a03 	vldr	s4, [r0, #12]
 8014066:	edd0 5a04 	vldr	s11, [r0, #16]
 801406a:	ed90 1a07 	vldr	s2, [r0, #28]
 801406e:	edd0 2a06 	vldr	s5, [r0, #24]
 8014072:	1a9b      	subs	r3, r3, r2
 8014074:	ee07 3a90 	vmov	s15, r3
 8014078:	684b      	ldr	r3, [r1, #4]
 801407a:	1a9b      	subs	r3, r3, r2
 801407c:	ee07 3a10 	vmov	s14, r3
 8014080:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8014084:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8014088:	ee67 7a84 	vmul.f32	s15, s15, s8
 801408c:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8014090:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014094:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8014098:	ee27 7a04 	vmul.f32	s14, s14, s8
 801409c:	ee75 5ac5 	vsub.f32	s11, s11, s10
 80140a0:	eee6 7a87 	vfma.f32	s15, s13, s14
 80140a4:	ee32 5a45 	vsub.f32	s10, s4, s10
 80140a8:	ee67 7a83 	vmul.f32	s15, s15, s6
 80140ac:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 80140b0:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 80140b2:	694a      	ldr	r2, [r1, #20]
 80140b4:	1b13      	subs	r3, r2, r4
 80140b6:	ee07 3a10 	vmov	s14, r3
 80140ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140be:	680b      	ldr	r3, [r1, #0]
 80140c0:	ee27 7a04 	vmul.f32	s14, s14, s8
 80140c4:	1b1b      	subs	r3, r3, r4
 80140c6:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80140ca:	ee07 3a10 	vmov	s14, r3
 80140ce:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140d2:	ee27 7a04 	vmul.f32	s14, s14, s8
 80140d6:	eee6 4a87 	vfma.f32	s9, s13, s14
 80140da:	ee64 4a86 	vmul.f32	s9, s9, s12
 80140de:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 80140e2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80140e4:	698b      	ldr	r3, [r1, #24]
 80140e6:	1a9b      	subs	r3, r3, r2
 80140e8:	ee06 3a90 	vmov	s13, r3
 80140ec:	684b      	ldr	r3, [r1, #4]
 80140ee:	1a9b      	subs	r3, r3, r2
 80140f0:	ee07 3a10 	vmov	s14, r3
 80140f4:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80140f8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80140fc:	ee66 6a84 	vmul.f32	s13, s13, s8
 8014100:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014104:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8014108:	eee5 6a87 	vfma.f32	s13, s11, s14
 801410c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8014110:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8014114:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014116:	694a      	ldr	r2, [r1, #20]
 8014118:	1b13      	subs	r3, r2, r4
 801411a:	ee07 3a10 	vmov	s14, r3
 801411e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014122:	680b      	ldr	r3, [r1, #0]
 8014124:	ee27 7a04 	vmul.f32	s14, s14, s8
 8014128:	1b1b      	subs	r3, r3, r4
 801412a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 801412e:	ee07 3a10 	vmov	s14, r3
 8014132:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014136:	ee27 7a04 	vmul.f32	s14, s14, s8
 801413a:	eea5 5a87 	vfma.f32	s10, s11, s14
 801413e:	edd0 5a08 	vldr	s11, [r0, #32]
 8014142:	ee25 5a06 	vmul.f32	s10, s10, s12
 8014146:	ee31 1a65 	vsub.f32	s2, s2, s11
 801414a:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 801414e:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014150:	698b      	ldr	r3, [r1, #24]
 8014152:	1a9b      	subs	r3, r3, r2
 8014154:	ee07 3a10 	vmov	s14, r3
 8014158:	684b      	ldr	r3, [r1, #4]
 801415a:	1a9b      	subs	r3, r3, r2
 801415c:	ee01 3a90 	vmov	s3, r3
 8014160:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014164:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8014168:	ee27 7a04 	vmul.f32	s14, s14, s8
 801416c:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8014170:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8014174:	ee61 1a84 	vmul.f32	s3, s3, s8
 8014178:	eea1 7a21 	vfma.f32	s14, s2, s3
 801417c:	ee27 7a03 	vmul.f32	s14, s14, s6
 8014180:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014184:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8014186:	694a      	ldr	r2, [r1, #20]
 8014188:	1b13      	subs	r3, r2, r4
 801418a:	ee03 3a10 	vmov	s6, r3
 801418e:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014192:	680b      	ldr	r3, [r1, #0]
 8014194:	ee23 3a04 	vmul.f32	s6, s6, s8
 8014198:	1b1b      	subs	r3, r3, r4
 801419a:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 801419e:	ee03 3a10 	vmov	s6, r3
 80141a2:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 80141a6:	ee23 4a04 	vmul.f32	s8, s6, s8
 80141aa:	eee1 5a04 	vfma.f32	s11, s2, s8
 80141ae:	ee25 6a86 	vmul.f32	s12, s11, s12
 80141b2:	ee62 5a67 	vnmul.f32	s11, s4, s15
 80141b6:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 80141ba:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80141be:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80141c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141c6:	dd13      	ble.n	80141f0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80141c8:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80141cc:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80141d0:	63c3      	str	r3, [r0, #60]	; 0x3c
 80141d2:	eee3 7a87 	vfma.f32	s15, s7, s14
 80141d6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80141da:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80141de:	dd15      	ble.n	801420c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80141e0:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 80141e4:	6403      	str	r3, [r0, #64]	; 0x40
 80141e6:	bd70      	pop	{r4, r5, r6, pc}
 80141e8:	4623      	mov	r3, r4
 80141ea:	e6fd      	b.n	8013fe8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80141ec:	462a      	mov	r2, r5
 80141ee:	e706      	b.n	8013ffe <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80141f0:	d502      	bpl.n	80141f8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80141f2:	f647 73ff 	movw	r3, #32767	; 0x7fff
 80141f6:	e7e9      	b.n	80141cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80141f8:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80141fc:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014200:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014204:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014208:	dade      	bge.n	80141c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801420a:	e7f2      	b.n	80141f2 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801420c:	d502      	bpl.n	8014214 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801420e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014212:	e7e7      	b.n	80141e4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014214:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014218:	eee3 4a86 	vfma.f32	s9, s7, s12
 801421c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014220:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014224:	dadc      	bge.n	80141e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014226:	e7f2      	b.n	801420e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014228:	3d800000 	.word	0x3d800000

0801422c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801422c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014230:	2714      	movs	r7, #20
 8014232:	435f      	muls	r7, r3
 8014234:	eb02 0c07 	add.w	ip, r2, r7
 8014238:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801423c:	f115 0e0f 	adds.w	lr, r5, #15
 8014240:	f100 80a2 	bmi.w	8014388 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 8014244:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8014248:	9c08      	ldr	r4, [sp, #32]
 801424a:	f8c0 e014 	str.w	lr, [r0, #20]
 801424e:	2614      	movs	r6, #20
 8014250:	4366      	muls	r6, r4
 8014252:	eb02 0806 	add.w	r8, r2, r6
 8014256:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801425a:	f115 040f 	adds.w	r4, r5, #15
 801425e:	f100 809f 	bmi.w	80143a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 8014262:	1124      	asrs	r4, r4, #4
 8014264:	eba4 040e 	sub.w	r4, r4, lr
 8014268:	6184      	str	r4, [r0, #24]
 801426a:	2c00      	cmp	r4, #0
 801426c:	f000 808a 	beq.w	8014384 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8014270:	f8dc 9004 	ldr.w	r9, [ip, #4]
 8014274:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8014278:	5995      	ldr	r5, [r2, r6]
 801427a:	eba4 0809 	sub.w	r8, r4, r9
 801427e:	59d4      	ldr	r4, [r2, r7]
 8014280:	eba5 0a04 	sub.w	sl, r5, r4
 8014284:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8014288:	fb0e fe05 	mul.w	lr, lr, r5
 801428c:	fb0a ee19 	mls	lr, sl, r9, lr
 8014290:	fb08 e404 	mla	r4, r8, r4, lr
 8014294:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8014298:	3c01      	subs	r4, #1
 801429a:	19a4      	adds	r4, r4, r6
 801429c:	f100 808c 	bmi.w	80143b8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 80142a0:	fb94 fef6 	sdiv	lr, r4, r6
 80142a4:	f8c0 e000 	str.w	lr, [r0]
 80142a8:	fb06 441e 	mls	r4, r6, lr, r4
 80142ac:	6104      	str	r4, [r0, #16]
 80142ae:	2d00      	cmp	r5, #0
 80142b0:	f2c0 8095 	blt.w	80143de <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 80142b4:	fb95 f4f6 	sdiv	r4, r5, r6
 80142b8:	6044      	str	r4, [r0, #4]
 80142ba:	fb06 5514 	mls	r5, r6, r4, r5
 80142be:	6085      	str	r5, [r0, #8]
 80142c0:	60c6      	str	r6, [r0, #12]
 80142c2:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80142c6:	6945      	ldr	r5, [r0, #20]
 80142c8:	59d2      	ldr	r2, [r2, r7]
 80142ca:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8014400 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80142ce:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 80142d2:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80142d6:	ee07 4a10 	vmov	s14, r4
 80142da:	6804      	ldr	r4, [r0, #0]
 80142dc:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80142e0:	ee07 2a90 	vmov	s15, r2
 80142e4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80142e8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80142ec:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80142f0:	ee27 7a26 	vmul.f32	s14, s14, s13
 80142f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80142f8:	edd3 6a00 	vldr	s13, [r3]
 80142fc:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014300:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014304:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014308:	edc0 6a07 	vstr	s13, [r0, #28]
 801430c:	edd0 6a01 	vldr	s13, [r0, #4]
 8014310:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014314:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014318:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801431c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014320:	ed80 6a08 	vstr	s12, [r0, #32]
 8014324:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014326:	6242      	str	r2, [r0, #36]	; 0x24
 8014328:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801432c:	ed93 6a03 	vldr	s12, [r3, #12]
 8014330:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014334:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014338:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801433c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 8014340:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014344:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 8014348:	eea6 6aa5 	vfma.f32	s12, s13, s11
 801434c:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 8014350:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8014352:	6302      	str	r2, [r0, #48]	; 0x30
 8014354:	ed93 6a06 	vldr	s12, [r3, #24]
 8014358:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 801435c:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014360:	eeb0 7a46 	vmov.f32	s14, s12
 8014364:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 8014368:	eea6 7a27 	vfma.f32	s14, s12, s15
 801436c:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8014370:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 8014374:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 8014378:	eee6 7a87 	vfma.f32	s15, s13, s14
 801437c:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 8014380:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 8014382:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014384:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8014388:	f1c5 0501 	rsb	r5, r5, #1
 801438c:	f015 050f 	ands.w	r5, r5, #15
 8014390:	bf18      	it	ne
 8014392:	2501      	movne	r5, #1
 8014394:	2410      	movs	r4, #16
 8014396:	fb9e fef4 	sdiv	lr, lr, r4
 801439a:	ebae 0e05 	sub.w	lr, lr, r5
 801439e:	e753      	b.n	8014248 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 80143a0:	f1c5 0501 	rsb	r5, r5, #1
 80143a4:	f015 050f 	ands.w	r5, r5, #15
 80143a8:	bf18      	it	ne
 80143aa:	2501      	movne	r5, #1
 80143ac:	f04f 0910 	mov.w	r9, #16
 80143b0:	fb94 f4f9 	sdiv	r4, r4, r9
 80143b4:	1b64      	subs	r4, r4, r5
 80143b6:	e755      	b.n	8014264 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 80143b8:	4264      	negs	r4, r4
 80143ba:	fb94 fef6 	sdiv	lr, r4, r6
 80143be:	f1ce 0800 	rsb	r8, lr, #0
 80143c2:	fb06 441e 	mls	r4, r6, lr, r4
 80143c6:	f8c0 8000 	str.w	r8, [r0]
 80143ca:	6104      	str	r4, [r0, #16]
 80143cc:	2c00      	cmp	r4, #0
 80143ce:	f43f af6e 	beq.w	80142ae <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 80143d2:	ea6f 0e0e 	mvn.w	lr, lr
 80143d6:	f8c0 e000 	str.w	lr, [r0]
 80143da:	1b34      	subs	r4, r6, r4
 80143dc:	e766      	b.n	80142ac <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 80143de:	426d      	negs	r5, r5
 80143e0:	fb95 f4f6 	sdiv	r4, r5, r6
 80143e4:	f1c4 0e00 	rsb	lr, r4, #0
 80143e8:	fb06 5514 	mls	r5, r6, r4, r5
 80143ec:	f8c0 e004 	str.w	lr, [r0, #4]
 80143f0:	6085      	str	r5, [r0, #8]
 80143f2:	2d00      	cmp	r5, #0
 80143f4:	f43f af64 	beq.w	80142c0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 80143f8:	43e4      	mvns	r4, r4
 80143fa:	6044      	str	r4, [r0, #4]
 80143fc:	1b75      	subs	r5, r6, r5
 80143fe:	e75e      	b.n	80142be <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014400:	3d800000 	.word	0x3d800000

08014404 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014404:	4602      	mov	r2, r0
 8014406:	b148      	cbz	r0, 801441c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014408:	2300      	movs	r3, #0
 801440a:	b298      	uxth	r0, r3
 801440c:	3301      	adds	r3, #1
 801440e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014412:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014416:	2900      	cmp	r1, #0
 8014418:	d1f7      	bne.n	801440a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801441a:	4770      	bx	lr
 801441c:	4770      	bx	lr

0801441e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801441e:	b530      	push	{r4, r5, lr}
 8014420:	4604      	mov	r4, r0
 8014422:	b159      	cbz	r1, 801443c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014424:	b148      	cbz	r0, 801443a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014426:	2300      	movs	r3, #0
 8014428:	b298      	uxth	r0, r3
 801442a:	4282      	cmp	r2, r0
 801442c:	d905      	bls.n	801443a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801442e:	5ccd      	ldrb	r5, [r1, r3]
 8014430:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014434:	3301      	adds	r3, #1
 8014436:	2d00      	cmp	r5, #0
 8014438:	d1f6      	bne.n	8014428 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801443a:	bd30      	pop	{r4, r5, pc}
 801443c:	4608      	mov	r0, r1
 801443e:	e7fc      	b.n	801443a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08014440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 8014440:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014442:	b08b      	sub	sp, #44	; 0x2c
 8014444:	468c      	mov	ip, r1
 8014446:	2100      	movs	r1, #0
 8014448:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 801444c:	ae01      	add	r6, sp, #4
 801444e:	211f      	movs	r1, #31
 8014450:	fbb0 f7f3 	udiv	r7, r0, r3
 8014454:	fb03 0517 	mls	r5, r3, r7, r0
 8014458:	b2ec      	uxtb	r4, r5
 801445a:	2d09      	cmp	r5, #9
 801445c:	bfd4      	ite	le
 801445e:	3430      	addle	r4, #48	; 0x30
 8014460:	3457      	addgt	r4, #87	; 0x57
 8014462:	b2e4      	uxtb	r4, r4
 8014464:	558c      	strb	r4, [r1, r6]
 8014466:	4638      	mov	r0, r7
 8014468:	1e4c      	subs	r4, r1, #1
 801446a:	b92f      	cbnz	r7, 8014478 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 801446c:	4431      	add	r1, r6
 801446e:	4660      	mov	r0, ip
 8014470:	f7ff ffd5 	bl	801441e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014474:	b00b      	add	sp, #44	; 0x2c
 8014476:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014478:	4621      	mov	r1, r4
 801447a:	e7e9      	b.n	8014450 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

0801447c <_ZN8touchgfx7Unicode4itoaElPtti>:
 801447c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801447e:	4607      	mov	r7, r0
 8014480:	b08b      	sub	sp, #44	; 0x2c
 8014482:	4608      	mov	r0, r1
 8014484:	b341      	cbz	r1, 80144d8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 8014486:	1e99      	subs	r1, r3, #2
 8014488:	2922      	cmp	r1, #34	; 0x22
 801448a:	d825      	bhi.n	80144d8 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 801448c:	2100      	movs	r1, #0
 801448e:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 8014492:	463c      	mov	r4, r7
 8014494:	261f      	movs	r6, #31
 8014496:	f10d 0c04 	add.w	ip, sp, #4
 801449a:	fb94 fef3 	sdiv	lr, r4, r3
 801449e:	fb03 441e 	mls	r4, r3, lr, r4
 80144a2:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 80144a6:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 80144aa:	b2ec      	uxtb	r4, r5
 80144ac:	2d09      	cmp	r5, #9
 80144ae:	bfd4      	ite	le
 80144b0:	3430      	addle	r4, #48	; 0x30
 80144b2:	3457      	addgt	r4, #87	; 0x57
 80144b4:	b2e4      	uxtb	r4, r4
 80144b6:	f80c 4006 	strb.w	r4, [ip, r6]
 80144ba:	4674      	mov	r4, lr
 80144bc:	1e71      	subs	r1, r6, #1
 80144be:	b96c      	cbnz	r4, 80144dc <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 80144c0:	2f00      	cmp	r7, #0
 80144c2:	da05      	bge.n	80144d0 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 80144c4:	ab0a      	add	r3, sp, #40	; 0x28
 80144c6:	4419      	add	r1, r3
 80144c8:	232d      	movs	r3, #45	; 0x2d
 80144ca:	f801 3c24 	strb.w	r3, [r1, #-36]
 80144ce:	1eb1      	subs	r1, r6, #2
 80144d0:	3101      	adds	r1, #1
 80144d2:	4461      	add	r1, ip
 80144d4:	f7ff ffa3 	bl	801441e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80144d8:	b00b      	add	sp, #44	; 0x2c
 80144da:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80144dc:	460e      	mov	r6, r1
 80144de:	e7dc      	b.n	801449a <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

080144e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 80144e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80144e4:	4691      	mov	r9, r2
 80144e6:	b085      	sub	sp, #20
 80144e8:	6802      	ldr	r2, [r0, #0]
 80144ea:	9201      	str	r2, [sp, #4]
 80144ec:	4688      	mov	r8, r1
 80144ee:	4683      	mov	fp, r0
 80144f0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 80144f4:	9103      	str	r1, [sp, #12]
 80144f6:	4610      	mov	r0, r2
 80144f8:	461c      	mov	r4, r3
 80144fa:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 80144fe:	9302      	str	r3, [sp, #8]
 8014500:	f7ff ff80 	bl	8014404 <_ZN8touchgfx7Unicode6strlenEPKt>
 8014504:	f1b8 0f00 	cmp.w	r8, #0
 8014508:	bf0c      	ite	eq
 801450a:	4684      	moveq	ip, r0
 801450c:	f100 0c01 	addne.w	ip, r0, #1
 8014510:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8014514:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014518:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801451a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801451c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014520:	9903      	ldr	r1, [sp, #12]
 8014522:	fa1f fc8c 	uxth.w	ip, ip
 8014526:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801452a:	d041      	beq.n	80145b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801452c:	d834      	bhi.n	8014598 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801452e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8014532:	d059      	beq.n	80145e8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014534:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8014538:	d03a      	beq.n	80145b0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801453a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801453e:	d034      	beq.n	80145aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014540:	2400      	movs	r4, #0
 8014542:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8014546:	3a01      	subs	r2, #1
 8014548:	b169      	cbz	r1, 8014566 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801454a:	9911      	ldr	r1, [sp, #68]	; 0x44
 801454c:	458c      	cmp	ip, r1
 801454e:	da09      	bge.n	8014564 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014550:	eba1 010c 	sub.w	r1, r1, ip
 8014554:	b289      	uxth	r1, r1
 8014556:	b933      	cbnz	r3, 8014566 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014558:	2e00      	cmp	r6, #0
 801455a:	d051      	beq.n	8014600 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 801455c:	2800      	cmp	r0, #0
 801455e:	d04f      	beq.n	8014600 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8014560:	440c      	add	r4, r1
 8014562:	b2a4      	uxth	r4, r4
 8014564:	2100      	movs	r1, #0
 8014566:	682b      	ldr	r3, [r5, #0]
 8014568:	4293      	cmp	r3, r2
 801456a:	da07      	bge.n	801457c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 801456c:	f1b8 0f00 	cmp.w	r8, #0
 8014570:	d004      	beq.n	801457c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8014572:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8014576:	682b      	ldr	r3, [r5, #0]
 8014578:	3301      	adds	r3, #1
 801457a:	602b      	str	r3, [r5, #0]
 801457c:	2730      	movs	r7, #48	; 0x30
 801457e:	2c00      	cmp	r4, #0
 8014580:	d04e      	beq.n	8014620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014582:	682e      	ldr	r6, [r5, #0]
 8014584:	3c01      	subs	r4, #1
 8014586:	42b2      	cmp	r2, r6
 8014588:	b2a4      	uxth	r4, r4
 801458a:	dd49      	ble.n	8014620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 801458c:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014590:	682b      	ldr	r3, [r5, #0]
 8014592:	3301      	adds	r3, #1
 8014594:	602b      	str	r3, [r5, #0]
 8014596:	e7f2      	b.n	801457e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8014598:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 801459c:	d01d      	beq.n	80145da <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 801459e:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 80145a2:	d002      	beq.n	80145aa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80145a4:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 80145a8:	e7c9      	b.n	801453e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 80145aa:	4684      	mov	ip, r0
 80145ac:	f04f 0800 	mov.w	r8, #0
 80145b0:	2c00      	cmp	r4, #0
 80145b2:	d0c6      	beq.n	8014542 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80145b4:	b947      	cbnz	r7, 80145c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80145b6:	2801      	cmp	r0, #1
 80145b8:	d106      	bne.n	80145c8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 80145ba:	8814      	ldrh	r4, [r2, #0]
 80145bc:	2c30      	cmp	r4, #48	; 0x30
 80145be:	bf02      	ittt	eq
 80145c0:	3202      	addeq	r2, #2
 80145c2:	f8cb 2000 	streq.w	r2, [fp]
 80145c6:	4638      	moveq	r0, r7
 80145c8:	45bc      	cmp	ip, r7
 80145ca:	da14      	bge.n	80145f6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 80145cc:	b2bf      	uxth	r7, r7
 80145ce:	eba7 040c 	sub.w	r4, r7, ip
 80145d2:	b2a4      	uxth	r4, r4
 80145d4:	46bc      	mov	ip, r7
 80145d6:	2600      	movs	r6, #0
 80145d8:	e7b3      	b.n	8014542 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80145da:	4684      	mov	ip, r0
 80145dc:	b16c      	cbz	r4, 80145fa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 80145de:	42b8      	cmp	r0, r7
 80145e0:	dd00      	ble.n	80145e4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 80145e2:	b2b8      	uxth	r0, r7
 80145e4:	2400      	movs	r4, #0
 80145e6:	e003      	b.n	80145f0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 80145e8:	f04f 0c01 	mov.w	ip, #1
 80145ec:	2400      	movs	r4, #0
 80145ee:	4660      	mov	r0, ip
 80145f0:	4626      	mov	r6, r4
 80145f2:	46a0      	mov	r8, r4
 80145f4:	e7a5      	b.n	8014542 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 80145f6:	2400      	movs	r4, #0
 80145f8:	e7ed      	b.n	80145d6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 80145fa:	4626      	mov	r6, r4
 80145fc:	46a0      	mov	r8, r4
 80145fe:	e7a0      	b.n	8014542 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014600:	2900      	cmp	r1, #0
 8014602:	d0b0      	beq.n	8014566 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014604:	2720      	movs	r7, #32
 8014606:	682e      	ldr	r6, [r5, #0]
 8014608:	2900      	cmp	r1, #0
 801460a:	d0ac      	beq.n	8014566 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801460c:	3901      	subs	r1, #1
 801460e:	4296      	cmp	r6, r2
 8014610:	b289      	uxth	r1, r1
 8014612:	daa7      	bge.n	8014564 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014614:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014618:	682b      	ldr	r3, [r5, #0]
 801461a:	3301      	adds	r3, #1
 801461c:	602b      	str	r3, [r5, #0]
 801461e:	e7f2      	b.n	8014606 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014620:	b188      	cbz	r0, 8014646 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014622:	682b      	ldr	r3, [r5, #0]
 8014624:	3801      	subs	r0, #1
 8014626:	429a      	cmp	r2, r3
 8014628:	b280      	uxth	r0, r0
 801462a:	dd0c      	ble.n	8014646 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801462c:	f8db 3000 	ldr.w	r3, [fp]
 8014630:	1c9c      	adds	r4, r3, #2
 8014632:	f8cb 4000 	str.w	r4, [fp]
 8014636:	881c      	ldrh	r4, [r3, #0]
 8014638:	682b      	ldr	r3, [r5, #0]
 801463a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801463e:	682b      	ldr	r3, [r5, #0]
 8014640:	3301      	adds	r3, #1
 8014642:	602b      	str	r3, [r5, #0]
 8014644:	e7ec      	b.n	8014620 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8014646:	2620      	movs	r6, #32
 8014648:	b151      	cbz	r1, 8014660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 801464a:	6828      	ldr	r0, [r5, #0]
 801464c:	3901      	subs	r1, #1
 801464e:	4282      	cmp	r2, r0
 8014650:	b289      	uxth	r1, r1
 8014652:	dd05      	ble.n	8014660 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8014654:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8014658:	682b      	ldr	r3, [r5, #0]
 801465a:	3301      	adds	r3, #1
 801465c:	602b      	str	r3, [r5, #0]
 801465e:	e7f3      	b.n	8014648 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8014660:	b005      	add	sp, #20
 8014662:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014666 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8014666:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801466a:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 801466e:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 8014672:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 8014676:	2400      	movs	r4, #0
 8014678:	8014      	strh	r4, [r2, #0]
 801467a:	701c      	strb	r4, [r3, #0]
 801467c:	f888 4000 	strb.w	r4, [r8]
 8014680:	f88c 4000 	strb.w	r4, [ip]
 8014684:	f88e 4000 	strb.w	r4, [lr]
 8014688:	703c      	strb	r4, [r7, #0]
 801468a:	6804      	ldr	r4, [r0, #0]
 801468c:	b1a4      	cbz	r4, 80146b8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 801468e:	8824      	ldrh	r4, [r4, #0]
 8014690:	f04f 0901 	mov.w	r9, #1
 8014694:	b314      	cbz	r4, 80146dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014696:	2c2b      	cmp	r4, #43	; 0x2b
 8014698:	d001      	beq.n	801469e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 801469a:	2c20      	cmp	r4, #32
 801469c:	d110      	bne.n	80146c0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 801469e:	8014      	strh	r4, [r2, #0]
 80146a0:	6804      	ldr	r4, [r0, #0]
 80146a2:	b10c      	cbz	r4, 80146a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 80146a4:	3402      	adds	r4, #2
 80146a6:	6004      	str	r4, [r0, #0]
 80146a8:	680c      	ldr	r4, [r1, #0]
 80146aa:	b10c      	cbz	r4, 80146b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 80146ac:	3401      	adds	r4, #1
 80146ae:	600c      	str	r4, [r1, #0]
 80146b0:	6804      	ldr	r4, [r0, #0]
 80146b2:	b17c      	cbz	r4, 80146d4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 80146b4:	8824      	ldrh	r4, [r4, #0]
 80146b6:	e7ed      	b.n	8014694 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80146b8:	680c      	ldr	r4, [r1, #0]
 80146ba:	b17c      	cbz	r4, 80146dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80146bc:	7824      	ldrb	r4, [r4, #0]
 80146be:	e7e7      	b.n	8014690 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 80146c0:	2c2d      	cmp	r4, #45	; 0x2d
 80146c2:	d102      	bne.n	80146ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 80146c4:	f883 9000 	strb.w	r9, [r3]
 80146c8:	e7ea      	b.n	80146a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80146ca:	2c23      	cmp	r4, #35	; 0x23
 80146cc:	d107      	bne.n	80146de <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 80146ce:	f888 9000 	strb.w	r9, [r8]
 80146d2:	e7e5      	b.n	80146a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 80146d4:	680c      	ldr	r4, [r1, #0]
 80146d6:	b10c      	cbz	r4, 80146dc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80146d8:	7824      	ldrb	r4, [r4, #0]
 80146da:	e7db      	b.n	8014694 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 80146dc:	2400      	movs	r4, #0
 80146de:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 80146e2:	2b09      	cmp	r3, #9
 80146e4:	d901      	bls.n	80146ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 80146e6:	2c2a      	cmp	r4, #42	; 0x2a
 80146e8:	d122      	bne.n	8014730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80146ea:	2301      	movs	r3, #1
 80146ec:	2c30      	cmp	r4, #48	; 0x30
 80146ee:	f88e 3000 	strb.w	r3, [lr]
 80146f2:	d10d      	bne.n	8014710 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80146f4:	f88c 3000 	strb.w	r3, [ip]
 80146f8:	6803      	ldr	r3, [r0, #0]
 80146fa:	b10b      	cbz	r3, 8014700 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 80146fc:	3302      	adds	r3, #2
 80146fe:	6003      	str	r3, [r0, #0]
 8014700:	680b      	ldr	r3, [r1, #0]
 8014702:	b10b      	cbz	r3, 8014708 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014704:	3301      	adds	r3, #1
 8014706:	600b      	str	r3, [r1, #0]
 8014708:	6803      	ldr	r3, [r0, #0]
 801470a:	2b00      	cmp	r3, #0
 801470c:	d02f      	beq.n	801476e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801470e:	881c      	ldrh	r4, [r3, #0]
 8014710:	2c2a      	cmp	r4, #42	; 0x2a
 8014712:	d135      	bne.n	8014780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014714:	f04f 33ff 	mov.w	r3, #4294967295
 8014718:	6033      	str	r3, [r6, #0]
 801471a:	6803      	ldr	r3, [r0, #0]
 801471c:	b10b      	cbz	r3, 8014722 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801471e:	3302      	adds	r3, #2
 8014720:	6003      	str	r3, [r0, #0]
 8014722:	680b      	ldr	r3, [r1, #0]
 8014724:	b10b      	cbz	r3, 801472a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014726:	3301      	adds	r3, #1
 8014728:	600b      	str	r3, [r1, #0]
 801472a:	6803      	ldr	r3, [r0, #0]
 801472c:	b31b      	cbz	r3, 8014776 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801472e:	881c      	ldrh	r4, [r3, #0]
 8014730:	2c2e      	cmp	r4, #46	; 0x2e
 8014732:	d11a      	bne.n	801476a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014734:	2301      	movs	r3, #1
 8014736:	703b      	strb	r3, [r7, #0]
 8014738:	6803      	ldr	r3, [r0, #0]
 801473a:	b10b      	cbz	r3, 8014740 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801473c:	3302      	adds	r3, #2
 801473e:	6003      	str	r3, [r0, #0]
 8014740:	680b      	ldr	r3, [r1, #0]
 8014742:	b10b      	cbz	r3, 8014748 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8014744:	3301      	adds	r3, #1
 8014746:	600b      	str	r3, [r1, #0]
 8014748:	6803      	ldr	r3, [r0, #0]
 801474a:	2b00      	cmp	r3, #0
 801474c:	d036      	beq.n	80147bc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 801474e:	881b      	ldrh	r3, [r3, #0]
 8014750:	2b2a      	cmp	r3, #42	; 0x2a
 8014752:	d137      	bne.n	80147c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014754:	f04f 33ff 	mov.w	r3, #4294967295
 8014758:	602b      	str	r3, [r5, #0]
 801475a:	6803      	ldr	r3, [r0, #0]
 801475c:	b10b      	cbz	r3, 8014762 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 801475e:	3302      	adds	r3, #2
 8014760:	6003      	str	r3, [r0, #0]
 8014762:	680b      	ldr	r3, [r1, #0]
 8014764:	b10b      	cbz	r3, 801476a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014766:	3301      	adds	r3, #1
 8014768:	600b      	str	r3, [r1, #0]
 801476a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801476e:	680c      	ldr	r4, [r1, #0]
 8014770:	b134      	cbz	r4, 8014780 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014772:	7824      	ldrb	r4, [r4, #0]
 8014774:	e7cc      	b.n	8014710 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014776:	680b      	ldr	r3, [r1, #0]
 8014778:	2b00      	cmp	r3, #0
 801477a:	d0f6      	beq.n	801476a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 801477c:	781c      	ldrb	r4, [r3, #0]
 801477e:	e7d7      	b.n	8014730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014780:	2300      	movs	r3, #0
 8014782:	6033      	str	r3, [r6, #0]
 8014784:	220a      	movs	r2, #10
 8014786:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 801478a:	fa1f f38c 	uxth.w	r3, ip
 801478e:	2b09      	cmp	r3, #9
 8014790:	d8ce      	bhi.n	8014730 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8014792:	6833      	ldr	r3, [r6, #0]
 8014794:	fb02 c303 	mla	r3, r2, r3, ip
 8014798:	6033      	str	r3, [r6, #0]
 801479a:	6803      	ldr	r3, [r0, #0]
 801479c:	b10b      	cbz	r3, 80147a2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 801479e:	3302      	adds	r3, #2
 80147a0:	6003      	str	r3, [r0, #0]
 80147a2:	680b      	ldr	r3, [r1, #0]
 80147a4:	b10b      	cbz	r3, 80147aa <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 80147a6:	3301      	adds	r3, #1
 80147a8:	600b      	str	r3, [r1, #0]
 80147aa:	6803      	ldr	r3, [r0, #0]
 80147ac:	b10b      	cbz	r3, 80147b2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 80147ae:	881c      	ldrh	r4, [r3, #0]
 80147b0:	e7e9      	b.n	8014786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80147b2:	680c      	ldr	r4, [r1, #0]
 80147b4:	2c00      	cmp	r4, #0
 80147b6:	d0e6      	beq.n	8014786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80147b8:	7824      	ldrb	r4, [r4, #0]
 80147ba:	e7e4      	b.n	8014786 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 80147bc:	680b      	ldr	r3, [r1, #0]
 80147be:	b10b      	cbz	r3, 80147c4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80147c0:	781b      	ldrb	r3, [r3, #0]
 80147c2:	e7c5      	b.n	8014750 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 80147c4:	2200      	movs	r2, #0
 80147c6:	602a      	str	r2, [r5, #0]
 80147c8:	240a      	movs	r4, #10
 80147ca:	3b30      	subs	r3, #48	; 0x30
 80147cc:	b29e      	uxth	r6, r3
 80147ce:	2e09      	cmp	r6, #9
 80147d0:	682a      	ldr	r2, [r5, #0]
 80147d2:	d813      	bhi.n	80147fc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 80147d4:	fb04 3302 	mla	r3, r4, r2, r3
 80147d8:	602b      	str	r3, [r5, #0]
 80147da:	6803      	ldr	r3, [r0, #0]
 80147dc:	b10b      	cbz	r3, 80147e2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 80147de:	3302      	adds	r3, #2
 80147e0:	6003      	str	r3, [r0, #0]
 80147e2:	680b      	ldr	r3, [r1, #0]
 80147e4:	b10b      	cbz	r3, 80147ea <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 80147e6:	3301      	adds	r3, #1
 80147e8:	600b      	str	r3, [r1, #0]
 80147ea:	6803      	ldr	r3, [r0, #0]
 80147ec:	b10b      	cbz	r3, 80147f2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 80147ee:	881b      	ldrh	r3, [r3, #0]
 80147f0:	e7eb      	b.n	80147ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80147f2:	680b      	ldr	r3, [r1, #0]
 80147f4:	2b00      	cmp	r3, #0
 80147f6:	d0e8      	beq.n	80147ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80147f8:	781b      	ldrb	r3, [r3, #0]
 80147fa:	e7e6      	b.n	80147ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 80147fc:	2a06      	cmp	r2, #6
 80147fe:	bfa8      	it	ge
 8014800:	2206      	movge	r2, #6
 8014802:	602a      	str	r2, [r5, #0]
 8014804:	e7b1      	b.n	801476a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014806 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014806:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801480a:	b0a3      	sub	sp, #140	; 0x8c
 801480c:	2600      	movs	r6, #0
 801480e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8014812:	4607      	mov	r7, r0
 8014814:	4688      	mov	r8, r1
 8014816:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801481a:	4631      	mov	r1, r6
 801481c:	2242      	movs	r2, #66	; 0x42
 801481e:	4648      	mov	r0, r9
 8014820:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8014822:	960d      	str	r6, [sp, #52]	; 0x34
 8014824:	f00e fa58 	bl	8022cd8 <memset>
 8014828:	b15f      	cbz	r7, 8014842 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801482a:	f108 3aff 	add.w	sl, r8, #4294967295
 801482e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014830:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014832:	b152      	cbz	r2, 801484a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014834:	8812      	ldrh	r2, [r2, #0]
 8014836:	b10a      	cbz	r2, 801483c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014838:	459a      	cmp	sl, r3
 801483a:	dc2e      	bgt.n	801489a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801483c:	2200      	movs	r2, #0
 801483e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014842:	4638      	mov	r0, r7
 8014844:	b023      	add	sp, #140	; 0x8c
 8014846:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801484a:	9a08      	ldr	r2, [sp, #32]
 801484c:	2a00      	cmp	r2, #0
 801484e:	d0f5      	beq.n	801483c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014850:	7812      	ldrb	r2, [r2, #0]
 8014852:	e7f0      	b.n	8014836 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8014854:	2d00      	cmp	r5, #0
 8014856:	d0ea      	beq.n	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014858:	782a      	ldrb	r2, [r5, #0]
 801485a:	b142      	cbz	r2, 801486e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 801485c:	2a25      	cmp	r2, #37	; 0x25
 801485e:	d001      	beq.n	8014864 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8014860:	459a      	cmp	sl, r3
 8014862:	dc08      	bgt.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8014864:	f1bb 0f00 	cmp.w	fp, #0
 8014868:	d121      	bne.n	80148ae <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 801486a:	2d00      	cmp	r5, #0
 801486c:	d0df      	beq.n	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801486e:	782a      	ldrb	r2, [r5, #0]
 8014870:	f04f 0b00 	mov.w	fp, #0
 8014874:	e01d      	b.n	80148b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8014876:	f1bb 0f00 	cmp.w	fp, #0
 801487a:	d078      	beq.n	801496e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 801487c:	f8bb 2000 	ldrh.w	r2, [fp]
 8014880:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014884:	f1bb 0f00 	cmp.w	fp, #0
 8014888:	d002      	beq.n	8014890 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 801488a:	f10b 0202 	add.w	r2, fp, #2
 801488e:	9209      	str	r2, [sp, #36]	; 0x24
 8014890:	b10d      	cbz	r5, 8014896 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8014892:	3501      	adds	r5, #1
 8014894:	9508      	str	r5, [sp, #32]
 8014896:	3301      	adds	r3, #1
 8014898:	930d      	str	r3, [sp, #52]	; 0x34
 801489a:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 801489e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80148a0:	f1bb 0f00 	cmp.w	fp, #0
 80148a4:	d0d6      	beq.n	8014854 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 80148a6:	f8bb 2000 	ldrh.w	r2, [fp]
 80148aa:	2a00      	cmp	r2, #0
 80148ac:	d1d6      	bne.n	801485c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 80148ae:	f8bb 2000 	ldrh.w	r2, [fp]
 80148b2:	2a00      	cmp	r2, #0
 80148b4:	d0bb      	beq.n	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80148b6:	459a      	cmp	sl, r3
 80148b8:	ddb9      	ble.n	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80148ba:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 80148be:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 80148c2:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 80148c6:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 80148ca:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 80148ce:	960e      	str	r6, [sp, #56]	; 0x38
 80148d0:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 80148d4:	960f      	str	r6, [sp, #60]	; 0x3c
 80148d6:	f1bb 0f00 	cmp.w	fp, #0
 80148da:	d002      	beq.n	80148e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 80148dc:	f10b 0302 	add.w	r3, fp, #2
 80148e0:	9309      	str	r3, [sp, #36]	; 0x24
 80148e2:	b10d      	cbz	r5, 80148e8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 80148e4:	1c6b      	adds	r3, r5, #1
 80148e6:	9308      	str	r3, [sp, #32]
 80148e8:	ab0f      	add	r3, sp, #60	; 0x3c
 80148ea:	9305      	str	r3, [sp, #20]
 80148ec:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 80148f0:	9304      	str	r3, [sp, #16]
 80148f2:	ab0e      	add	r3, sp, #56	; 0x38
 80148f4:	9303      	str	r3, [sp, #12]
 80148f6:	ab0c      	add	r3, sp, #48	; 0x30
 80148f8:	9302      	str	r3, [sp, #8]
 80148fa:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 80148fe:	9301      	str	r3, [sp, #4]
 8014900:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8014904:	9300      	str	r3, [sp, #0]
 8014906:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801490a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801490e:	a908      	add	r1, sp, #32
 8014910:	a809      	add	r0, sp, #36	; 0x24
 8014912:	f7ff fea8 	bl	8014666 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014916:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014918:	2b00      	cmp	r3, #0
 801491a:	bfbe      	ittt	lt
 801491c:	6823      	ldrlt	r3, [r4, #0]
 801491e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014922:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014924:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014926:	bfb8      	it	lt
 8014928:	3404      	addlt	r4, #4
 801492a:	2b00      	cmp	r3, #0
 801492c:	bfb8      	it	lt
 801492e:	6823      	ldrlt	r3, [r4, #0]
 8014930:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014934:	bfbe      	ittt	lt
 8014936:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801493a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801493c:	3404      	addlt	r4, #4
 801493e:	b1d9      	cbz	r1, 8014978 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8014940:	880b      	ldrh	r3, [r1, #0]
 8014942:	2b69      	cmp	r3, #105	; 0x69
 8014944:	d01f      	beq.n	8014986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014946:	d82f      	bhi.n	80149a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 8014948:	2b58      	cmp	r3, #88	; 0x58
 801494a:	d01c      	beq.n	8014986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801494c:	d818      	bhi.n	8014980 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 801494e:	2b25      	cmp	r3, #37	; 0x25
 8014950:	d034      	beq.n	80149bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8014952:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 8014956:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014958:	f1bb 0f00 	cmp.w	fp, #0
 801495c:	f000 80b8 	beq.w	8014ad0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8014960:	f8bb 5000 	ldrh.w	r5, [fp]
 8014964:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 8014968:	3301      	adds	r3, #1
 801496a:	930d      	str	r3, [sp, #52]	; 0x34
 801496c:	e029      	b.n	80149c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 801496e:	b10d      	cbz	r5, 8014974 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8014970:	782a      	ldrb	r2, [r5, #0]
 8014972:	e785      	b.n	8014880 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014974:	462a      	mov	r2, r5
 8014976:	e783      	b.n	8014880 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8014978:	2a00      	cmp	r2, #0
 801497a:	d0ea      	beq.n	8014952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801497c:	7813      	ldrb	r3, [r2, #0]
 801497e:	e7e0      	b.n	8014942 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8014980:	3b63      	subs	r3, #99	; 0x63
 8014982:	2b01      	cmp	r3, #1
 8014984:	d8e5      	bhi.n	8014952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014986:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 801498a:	b329      	cbz	r1, 80149d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 801498c:	880b      	ldrh	r3, [r1, #0]
 801498e:	2b69      	cmp	r3, #105	; 0x69
 8014990:	d063      	beq.n	8014a5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8014992:	d825      	bhi.n	80149e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8014994:	2b63      	cmp	r3, #99	; 0x63
 8014996:	d038      	beq.n	8014a0a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 8014998:	2b64      	cmp	r3, #100	; 0x64
 801499a:	d05e      	beq.n	8014a5a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 801499c:	2b58      	cmp	r3, #88	; 0x58
 801499e:	d07b      	beq.n	8014a98 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 80149a0:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 80149a4:	4625      	mov	r5, r4
 80149a6:	e036      	b.n	8014a16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80149a8:	2b73      	cmp	r3, #115	; 0x73
 80149aa:	d0ec      	beq.n	8014986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80149ac:	d802      	bhi.n	80149b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80149ae:	2b6f      	cmp	r3, #111	; 0x6f
 80149b0:	d1cf      	bne.n	8014952 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80149b2:	e7e8      	b.n	8014986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80149b4:	2b75      	cmp	r3, #117	; 0x75
 80149b6:	d0e6      	beq.n	8014986 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80149b8:	2b78      	cmp	r3, #120	; 0x78
 80149ba:	e7f9      	b.n	80149b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80149bc:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80149be:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80149c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80149c4:	b10b      	cbz	r3, 80149ca <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80149c6:	3302      	adds	r3, #2
 80149c8:	9309      	str	r3, [sp, #36]	; 0x24
 80149ca:	9b08      	ldr	r3, [sp, #32]
 80149cc:	2b00      	cmp	r3, #0
 80149ce:	f43f af2e 	beq.w	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80149d2:	3301      	adds	r3, #1
 80149d4:	9308      	str	r3, [sp, #32]
 80149d6:	e72a      	b.n	801482e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80149d8:	2a00      	cmp	r2, #0
 80149da:	d0e1      	beq.n	80149a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80149dc:	7813      	ldrb	r3, [r2, #0]
 80149de:	e7d6      	b.n	801498e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80149e0:	2b73      	cmp	r3, #115	; 0x73
 80149e2:	d036      	beq.n	8014a52 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80149e4:	d807      	bhi.n	80149f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80149e6:	2b6f      	cmp	r3, #111	; 0x6f
 80149e8:	d1da      	bne.n	80149a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80149ea:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80149ec:	1d25      	adds	r5, r4, #4
 80149ee:	eba8 0202 	sub.w	r2, r8, r2
 80149f2:	2308      	movs	r3, #8
 80149f4:	e04a      	b.n	8014a8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80149f6:	2b75      	cmp	r3, #117	; 0x75
 80149f8:	d043      	beq.n	8014a82 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80149fa:	2b78      	cmp	r3, #120	; 0x78
 80149fc:	d1d0      	bne.n	80149a0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80149fe:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014a00:	1d25      	adds	r5, r4, #4
 8014a02:	eba8 0202 	sub.w	r2, r8, r2
 8014a06:	2310      	movs	r3, #16
 8014a08:	e040      	b.n	8014a8c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8014a0a:	6823      	ldr	r3, [r4, #0]
 8014a0c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014a10:	1d25      	adds	r5, r4, #4
 8014a12:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014a16:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a18:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 8014a1c:	2b00      	cmp	r3, #0
 8014a1e:	d052      	beq.n	8014ac6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014a20:	881a      	ldrh	r2, [r3, #0]
 8014a22:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014a26:	a80d      	add	r0, sp, #52	; 0x34
 8014a28:	9005      	str	r0, [sp, #20]
 8014a2a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 8014a2e:	9004      	str	r0, [sp, #16]
 8014a30:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014a32:	9003      	str	r0, [sp, #12]
 8014a34:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014a38:	9002      	str	r0, [sp, #8]
 8014a3a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8014a3c:	9001      	str	r0, [sp, #4]
 8014a3e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 8014a42:	9000      	str	r0, [sp, #0]
 8014a44:	e9cd 8706 	strd	r8, r7, [sp, #24]
 8014a48:	a810      	add	r0, sp, #64	; 0x40
 8014a4a:	f7ff fd49 	bl	80144e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014a4e:	462c      	mov	r4, r5
 8014a50:	e7b7      	b.n	80149c2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8014a52:	6823      	ldr	r3, [r4, #0]
 8014a54:	1d25      	adds	r5, r4, #4
 8014a56:	9310      	str	r3, [sp, #64]	; 0x40
 8014a58:	e7dd      	b.n	8014a16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014a5a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014a5c:	6820      	ldr	r0, [r4, #0]
 8014a5e:	eba8 0202 	sub.w	r2, r8, r2
 8014a62:	230a      	movs	r3, #10
 8014a64:	b292      	uxth	r2, r2
 8014a66:	4649      	mov	r1, r9
 8014a68:	f7ff fd08 	bl	801447c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014a6c:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8014a70:	2b2d      	cmp	r3, #45	; 0x2d
 8014a72:	f104 0504 	add.w	r5, r4, #4
 8014a76:	d1ce      	bne.n	8014a16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014a78:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8014a7c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8014a7e:	3302      	adds	r3, #2
 8014a80:	e7e9      	b.n	8014a56 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8014a82:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014a84:	1d25      	adds	r5, r4, #4
 8014a86:	eba8 0202 	sub.w	r2, r8, r2
 8014a8a:	230a      	movs	r3, #10
 8014a8c:	b292      	uxth	r2, r2
 8014a8e:	4649      	mov	r1, r9
 8014a90:	6820      	ldr	r0, [r4, #0]
 8014a92:	f7ff fcd5 	bl	8014440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014a96:	e7be      	b.n	8014a16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014a98:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014a9a:	6820      	ldr	r0, [r4, #0]
 8014a9c:	eba8 0202 	sub.w	r2, r8, r2
 8014aa0:	b292      	uxth	r2, r2
 8014aa2:	2310      	movs	r3, #16
 8014aa4:	4649      	mov	r1, r9
 8014aa6:	f7ff fccb 	bl	8014440 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 8014aaa:	1d25      	adds	r5, r4, #4
 8014aac:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8014ab0:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8014ab4:	2b00      	cmp	r3, #0
 8014ab6:	d0ae      	beq.n	8014a16 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014ab8:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 8014abc:	2919      	cmp	r1, #25
 8014abe:	d8f7      	bhi.n	8014ab0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014ac0:	3b20      	subs	r3, #32
 8014ac2:	8013      	strh	r3, [r2, #0]
 8014ac4:	e7f4      	b.n	8014ab0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014ac6:	9a08      	ldr	r2, [sp, #32]
 8014ac8:	2a00      	cmp	r2, #0
 8014aca:	d0aa      	beq.n	8014a22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014acc:	7812      	ldrb	r2, [r2, #0]
 8014ace:	e7a8      	b.n	8014a22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014ad0:	2d00      	cmp	r5, #0
 8014ad2:	f43f af47 	beq.w	8014964 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014ad6:	782d      	ldrb	r5, [r5, #0]
 8014ad8:	e744      	b.n	8014964 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

08014ada <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 8014ada:	b507      	push	{r0, r1, r2, lr}
 8014adc:	9300      	str	r3, [sp, #0]
 8014ade:	4613      	mov	r3, r2
 8014ae0:	2200      	movs	r2, #0
 8014ae2:	f7ff fe90 	bl	8014806 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014ae6:	b003      	add	sp, #12
 8014ae8:	f85d fb04 	ldr.w	pc, [sp], #4

08014aec <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 8014aec:	b40c      	push	{r2, r3}
 8014aee:	b507      	push	{r0, r1, r2, lr}
 8014af0:	ab04      	add	r3, sp, #16
 8014af2:	f853 2b04 	ldr.w	r2, [r3], #4
 8014af6:	9301      	str	r3, [sp, #4]
 8014af8:	f7ff ffef 	bl	8014ada <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 8014afc:	b003      	add	sp, #12
 8014afe:	f85d eb04 	ldr.w	lr, [sp], #4
 8014b02:	b002      	add	sp, #8
 8014b04:	4770      	bx	lr
	...

08014b08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 8014b08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b0c:	b0c3      	sub	sp, #268	; 0x10c
 8014b0e:	2600      	movs	r6, #0
 8014b10:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 8014b14:	4607      	mov	r7, r0
 8014b16:	4689      	mov	r9, r1
 8014b18:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8014b1c:	4631      	mov	r1, r6
 8014b1e:	22c8      	movs	r2, #200	; 0xc8
 8014b20:	4640      	mov	r0, r8
 8014b22:	f8dd a130 	ldr.w	sl, [sp, #304]	; 0x130
 8014b26:	960c      	str	r6, [sp, #48]	; 0x30
 8014b28:	f00e f8d6 	bl	8022cd8 <memset>
 8014b2c:	b17f      	cbz	r7, 8014b4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x46>
 8014b2e:	eddf 5aa4 	vldr	s11, [pc, #656]	; 8014dc0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b8>
 8014b32:	f8df b298 	ldr.w	fp, [pc, #664]	; 8014dcc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c4>
 8014b36:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014b38:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b3a:	b162      	cbz	r2, 8014b56 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x4e>
 8014b3c:	8812      	ldrh	r2, [r2, #0]
 8014b3e:	b11a      	cbz	r2, 8014b48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014b40:	f109 31ff 	add.w	r1, r9, #4294967295
 8014b44:	4299      	cmp	r1, r3
 8014b46:	dc26      	bgt.n	8014b96 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8014b48:	2200      	movs	r2, #0
 8014b4a:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014b4e:	4638      	mov	r0, r7
 8014b50:	b043      	add	sp, #268	; 0x10c
 8014b52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014b56:	9a08      	ldr	r2, [sp, #32]
 8014b58:	2a00      	cmp	r2, #0
 8014b5a:	d0f5      	beq.n	8014b48 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8014b5c:	7812      	ldrb	r2, [r2, #0]
 8014b5e:	e7ee      	b.n	8014b3e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x36>
 8014b60:	2c00      	cmp	r4, #0
 8014b62:	d0e8      	beq.n	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014b64:	7822      	ldrb	r2, [r4, #0]
 8014b66:	b132      	cbz	r2, 8014b76 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6e>
 8014b68:	2a25      	cmp	r2, #37	; 0x25
 8014b6a:	d001      	beq.n	8014b70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x68>
 8014b6c:	4299      	cmp	r1, r3
 8014b6e:	dc05      	bgt.n	8014b7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 8014b70:	b9cd      	cbnz	r5, 8014ba6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x9e>
 8014b72:	2c00      	cmp	r4, #0
 8014b74:	d0df      	beq.n	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014b76:	7822      	ldrb	r2, [r4, #0]
 8014b78:	2500      	movs	r5, #0
 8014b7a:	e015      	b.n	8014ba8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xa0>
 8014b7c:	2d00      	cmp	r5, #0
 8014b7e:	d073      	beq.n	8014c68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8014b80:	882a      	ldrh	r2, [r5, #0]
 8014b82:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014b86:	b10d      	cbz	r5, 8014b8c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x84>
 8014b88:	3502      	adds	r5, #2
 8014b8a:	9509      	str	r5, [sp, #36]	; 0x24
 8014b8c:	b10c      	cbz	r4, 8014b92 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8a>
 8014b8e:	3401      	adds	r4, #1
 8014b90:	9408      	str	r4, [sp, #32]
 8014b92:	3301      	adds	r3, #1
 8014b94:	930c      	str	r3, [sp, #48]	; 0x30
 8014b96:	e9dd 4508 	ldrd	r4, r5, [sp, #32]
 8014b9a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014b9c:	2d00      	cmp	r5, #0
 8014b9e:	d0df      	beq.n	8014b60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x58>
 8014ba0:	882a      	ldrh	r2, [r5, #0]
 8014ba2:	2a00      	cmp	r2, #0
 8014ba4:	d1e0      	bne.n	8014b68 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x60>
 8014ba6:	882a      	ldrh	r2, [r5, #0]
 8014ba8:	2a00      	cmp	r2, #0
 8014baa:	d0c4      	beq.n	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014bac:	4299      	cmp	r1, r3
 8014bae:	ddc2      	ble.n	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014bb0:	2300      	movs	r3, #0
 8014bb2:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8014bb6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8014bba:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8014bbe:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 8014bc2:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 8014bc6:	930d      	str	r3, [sp, #52]	; 0x34
 8014bc8:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014bcc:	930e      	str	r3, [sp, #56]	; 0x38
 8014bce:	b10d      	cbz	r5, 8014bd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xcc>
 8014bd0:	1cab      	adds	r3, r5, #2
 8014bd2:	9309      	str	r3, [sp, #36]	; 0x24
 8014bd4:	b10c      	cbz	r4, 8014bda <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xd2>
 8014bd6:	1c63      	adds	r3, r4, #1
 8014bd8:	9308      	str	r3, [sp, #32]
 8014bda:	ab0e      	add	r3, sp, #56	; 0x38
 8014bdc:	9305      	str	r3, [sp, #20]
 8014bde:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 8014be2:	9304      	str	r3, [sp, #16]
 8014be4:	ab0d      	add	r3, sp, #52	; 0x34
 8014be6:	9303      	str	r3, [sp, #12]
 8014be8:	ab0b      	add	r3, sp, #44	; 0x2c
 8014bea:	9302      	str	r3, [sp, #8]
 8014bec:	f10d 032b 	add.w	r3, sp, #43	; 0x2b
 8014bf0:	9301      	str	r3, [sp, #4]
 8014bf2:	f10d 032a 	add.w	r3, sp, #42	; 0x2a
 8014bf6:	9300      	str	r3, [sp, #0]
 8014bf8:	f10d 022e 	add.w	r2, sp, #46	; 0x2e
 8014bfc:	f10d 0329 	add.w	r3, sp, #41	; 0x29
 8014c00:	a908      	add	r1, sp, #32
 8014c02:	a809      	add	r0, sp, #36	; 0x24
 8014c04:	f7ff fd2f 	bl	8014666 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014c08:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014c0a:	2b00      	cmp	r3, #0
 8014c0c:	da0b      	bge.n	8014c26 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x11e>
 8014c0e:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014c12:	edd3 7a00 	vldr	s15, [r3]
 8014c16:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014c1a:	3601      	adds	r6, #1
 8014c1c:	ee17 3a90 	vmov	r3, s15
 8014c20:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c24:	930d      	str	r3, [sp, #52]	; 0x34
 8014c26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014c28:	2b00      	cmp	r3, #0
 8014c2a:	da0b      	bge.n	8014c44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x13c>
 8014c2c:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014c30:	edd3 7a00 	vldr	s15, [r3]
 8014c34:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8014c38:	3601      	adds	r6, #1
 8014c3a:	ee17 3a90 	vmov	r3, s15
 8014c3e:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8014c42:	930e      	str	r3, [sp, #56]	; 0x38
 8014c44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014c46:	b1a3      	cbz	r3, 8014c72 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x16a>
 8014c48:	881a      	ldrh	r2, [r3, #0]
 8014c4a:	2a25      	cmp	r2, #37	; 0x25
 8014c4c:	d016      	beq.n	8014c7c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x174>
 8014c4e:	2a66      	cmp	r2, #102	; 0x66
 8014c50:	d01a      	beq.n	8014c88 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8014c52:	e9cd 4508 	strd	r4, r5, [sp, #32]
 8014c56:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c58:	2d00      	cmp	r5, #0
 8014c5a:	f000 80fe 	beq.w	8014e5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x352>
 8014c5e:	882c      	ldrh	r4, [r5, #0]
 8014c60:	f827 4013 	strh.w	r4, [r7, r3, lsl #1]
 8014c64:	3301      	adds	r3, #1
 8014c66:	e00d      	b.n	8014c84 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17c>
 8014c68:	b10c      	cbz	r4, 8014c6e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x166>
 8014c6a:	7822      	ldrb	r2, [r4, #0]
 8014c6c:	e789      	b.n	8014b82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014c6e:	4622      	mov	r2, r4
 8014c70:	e787      	b.n	8014b82 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7a>
 8014c72:	9b08      	ldr	r3, [sp, #32]
 8014c74:	2b00      	cmp	r3, #0
 8014c76:	d0ec      	beq.n	8014c52 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x14a>
 8014c78:	781a      	ldrb	r2, [r3, #0]
 8014c7a:	e7e6      	b.n	8014c4a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x142>
 8014c7c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014c7e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8014c82:	3302      	adds	r3, #2
 8014c84:	930c      	str	r3, [sp, #48]	; 0x30
 8014c86:	e042      	b.n	8014d0e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x206>
 8014c88:	eb0a 0386 	add.w	r3, sl, r6, lsl #2
 8014c8c:	edd3 7a00 	vldr	s15, [r3]
 8014c90:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014c94:	f8cd 803c 	str.w	r8, [sp, #60]	; 0x3c
 8014c98:	3601      	adds	r6, #1
 8014c9a:	b923      	cbnz	r3, 8014ca6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19e>
 8014c9c:	2301      	movs	r3, #1
 8014c9e:	f88d 302d 	strb.w	r3, [sp, #45]	; 0x2d
 8014ca2:	2306      	movs	r3, #6
 8014ca4:	930e      	str	r3, [sp, #56]	; 0x38
 8014ca6:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8014caa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014cae:	bf48      	it	mi
 8014cb0:	eef1 7a67 	vnegmi.f32	s15, s15
 8014cb4:	eeb0 7ae7 	vabs.f32	s14, s15
 8014cb8:	bf48      	it	mi
 8014cba:	232d      	movmi	r3, #45	; 0x2d
 8014cbc:	eeb4 7a65 	vcmp.f32	s14, s11
 8014cc0:	bf48      	it	mi
 8014cc2:	f8ad 302e 	strhmi.w	r3, [sp, #46]	; 0x2e
 8014cc6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014cca:	dd2b      	ble.n	8014d24 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21c>
 8014ccc:	f8cd b040 	str.w	fp, [sp, #64]	; 0x40
 8014cd0:	2366      	movs	r3, #102	; 0x66
 8014cd2:	9311      	str	r3, [sp, #68]	; 0x44
 8014cd4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014cd6:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8014cda:	2b00      	cmp	r3, #0
 8014cdc:	f000 80b7 	beq.w	8014e4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x346>
 8014ce0:	881a      	ldrh	r2, [r3, #0]
 8014ce2:	f89d 302d 	ldrb.w	r3, [sp, #45]	; 0x2d
 8014ce6:	a80c      	add	r0, sp, #48	; 0x30
 8014ce8:	9005      	str	r0, [sp, #20]
 8014cea:	f89d 0029 	ldrb.w	r0, [sp, #41]	; 0x29
 8014cee:	9004      	str	r0, [sp, #16]
 8014cf0:	980d      	ldr	r0, [sp, #52]	; 0x34
 8014cf2:	9003      	str	r0, [sp, #12]
 8014cf4:	f89d 002c 	ldrb.w	r0, [sp, #44]	; 0x2c
 8014cf8:	9002      	str	r0, [sp, #8]
 8014cfa:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014cfc:	9001      	str	r0, [sp, #4]
 8014cfe:	f89d 002b 	ldrb.w	r0, [sp, #43]	; 0x2b
 8014d02:	9000      	str	r0, [sp, #0]
 8014d04:	e9cd 9706 	strd	r9, r7, [sp, #24]
 8014d08:	a80f      	add	r0, sp, #60	; 0x3c
 8014d0a:	f7ff fbe9 	bl	80144e0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8014d0e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d10:	b10b      	cbz	r3, 8014d16 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x20e>
 8014d12:	3302      	adds	r3, #2
 8014d14:	9309      	str	r3, [sp, #36]	; 0x24
 8014d16:	9b08      	ldr	r3, [sp, #32]
 8014d18:	2b00      	cmp	r3, #0
 8014d1a:	f43f af0c 	beq.w	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014d1e:	3301      	adds	r3, #1
 8014d20:	9308      	str	r3, [sp, #32]
 8014d22:	e708      	b.n	8014b36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e>
 8014d24:	eef4 7a67 	vcmp.f32	s15, s15
 8014d28:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d2c:	d60b      	bvs.n	8014d46 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x23e>
 8014d2e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014d30:	ed9f 7a24 	vldr	s14, [pc, #144]	; 8014dc4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 8014d34:	2300      	movs	r3, #0
 8014d36:	eeb2 6a04 	vmov.f32	s12, #36	; 0x41200000  10.0
 8014d3a:	4283      	cmp	r3, r0
 8014d3c:	da07      	bge.n	8014d4e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x246>
 8014d3e:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014d42:	3301      	adds	r3, #1
 8014d44:	e7f9      	b.n	8014d3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x232>
 8014d46:	4b20      	ldr	r3, [pc, #128]	; (8014dc8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c0>)
 8014d48:	9310      	str	r3, [sp, #64]	; 0x40
 8014d4a:	236e      	movs	r3, #110	; 0x6e
 8014d4c:	e7c1      	b.n	8014cd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1ca>
 8014d4e:	ee77 7a87 	vadd.f32	s15, s15, s14
 8014d52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8014d56:	eeb0 7a67 	vmov.f32	s14, s15
 8014d5a:	eeb4 7ac6 	vcmpe.f32	s14, s12
 8014d5e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d62:	da27      	bge.n	8014db4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ac>
 8014d64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d66:	2100      	movs	r1, #0
 8014d68:	eeb6 5a00 	vmov.f32	s10, #96	; 0x3f000000  0.5
 8014d6c:	eba9 0202 	sub.w	r2, r9, r2
 8014d70:	eef4 6ac5 	vcmpe.f32	s13, s10
 8014d74:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014d78:	b28c      	uxth	r4, r1
 8014d7a:	db2a      	blt.n	8014dd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014d7c:	1a53      	subs	r3, r2, r1
 8014d7e:	2b00      	cmp	r3, #0
 8014d80:	dd27      	ble.n	8014dd2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2ca>
 8014d82:	2963      	cmp	r1, #99	; 0x63
 8014d84:	d024      	beq.n	8014dd0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8014d86:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8014d8a:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 8014d8e:	ee17 3a10 	vmov	r3, s14
 8014d92:	2b09      	cmp	r3, #9
 8014d94:	bfa8      	it	ge
 8014d96:	2309      	movge	r3, #9
 8014d98:	ee07 3a10 	vmov	s14, r3
 8014d9c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014da0:	f103 0430 	add.w	r4, r3, #48	; 0x30
 8014da4:	f828 4011 	strh.w	r4, [r8, r1, lsl #1]
 8014da8:	eee7 7a66 	vfms.f32	s15, s14, s13
 8014dac:	3101      	adds	r1, #1
 8014dae:	eec6 6a86 	vdiv.f32	s13, s13, s12
 8014db2:	e7dd      	b.n	8014d70 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x268>
 8014db4:	ee66 6a86 	vmul.f32	s13, s13, s12
 8014db8:	ee87 7a06 	vdiv.f32	s14, s14, s12
 8014dbc:	e7cd      	b.n	8014d5a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x252>
 8014dbe:	bf00      	nop
 8014dc0:	7f7fffff 	.word	0x7f7fffff
 8014dc4:	3f000002 	.word	0x3f000002
 8014dc8:	0061006e 	.word	0x0061006e
 8014dcc:	006e0069 	.word	0x006e0069
 8014dd0:	460c      	mov	r4, r1
 8014dd2:	2a63      	cmp	r2, #99	; 0x63
 8014dd4:	bfd4      	ite	le
 8014dd6:	ebc4 0202 	rsble	r2, r4, r2
 8014dda:	f1c4 0263 	rsbgt	r2, r4, #99	; 0x63
 8014dde:	2a00      	cmp	r2, #0
 8014de0:	dd30      	ble.n	8014e44 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33c>
 8014de2:	4603      	mov	r3, r0
 8014de4:	2501      	movs	r5, #1
 8014de6:	210a      	movs	r1, #10
 8014de8:	2b00      	cmp	r3, #0
 8014dea:	dd0d      	ble.n	8014e08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x300>
 8014dec:	ee67 7a86 	vmul.f32	s15, s15, s12
 8014df0:	3b01      	subs	r3, #1
 8014df2:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014df6:	ee17 ca10 	vmov	ip, s14
 8014dfa:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014dfe:	fb01 c505 	mla	r5, r1, r5, ip
 8014e02:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014e06:	e7ef      	b.n	8014de8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2e0>
 8014e08:	2800      	cmp	r0, #0
 8014e0a:	f100 33ff 	add.w	r3, r0, #4294967295
 8014e0e:	bfac      	ite	ge
 8014e10:	1a18      	subge	r0, r3, r0
 8014e12:	4618      	movlt	r0, r3
 8014e14:	0064      	lsls	r4, r4, #1
 8014e16:	900e      	str	r0, [sp, #56]	; 0x38
 8014e18:	230a      	movs	r3, #10
 8014e1a:	b292      	uxth	r2, r2
 8014e1c:	eb08 0104 	add.w	r1, r8, r4
 8014e20:	4628      	mov	r0, r5
 8014e22:	f7ff fb2b 	bl	801447c <_ZN8touchgfx7Unicode4itoaElPtti>
 8014e26:	2d01      	cmp	r5, #1
 8014e28:	dc0a      	bgt.n	8014e40 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8014e2a:	f89d 302a 	ldrb.w	r3, [sp, #42]	; 0x2a
 8014e2e:	2b00      	cmp	r3, #0
 8014e30:	bf0c      	ite	eq
 8014e32:	2300      	moveq	r3, #0
 8014e34:	232e      	movne	r3, #46	; 0x2e
 8014e36:	aa42      	add	r2, sp, #264	; 0x108
 8014e38:	4414      	add	r4, r2
 8014e3a:	f824 3cc8 	strh.w	r3, [r4, #-200]
 8014e3e:	e749      	b.n	8014cd4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1cc>
 8014e40:	232e      	movs	r3, #46	; 0x2e
 8014e42:	e7f8      	b.n	8014e36 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x32e>
 8014e44:	ab42      	add	r3, sp, #264	; 0x108
 8014e46:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 8014e4a:	2300      	movs	r3, #0
 8014e4c:	e7f5      	b.n	8014e3a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x332>
 8014e4e:	9a08      	ldr	r2, [sp, #32]
 8014e50:	2a00      	cmp	r2, #0
 8014e52:	f43f af46 	beq.w	8014ce2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014e56:	7812      	ldrb	r2, [r2, #0]
 8014e58:	e743      	b.n	8014ce2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1da>
 8014e5a:	2c00      	cmp	r4, #0
 8014e5c:	f43f af00 	beq.w	8014c60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 8014e60:	7824      	ldrb	r4, [r4, #0]
 8014e62:	e6fd      	b.n	8014c60 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>

08014e64 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 8014e64:	b507      	push	{r0, r1, r2, lr}
 8014e66:	9300      	str	r3, [sp, #0]
 8014e68:	4613      	mov	r3, r2
 8014e6a:	2200      	movs	r2, #0
 8014e6c:	f7ff fe4c 	bl	8014b08 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 8014e70:	b003      	add	sp, #12
 8014e72:	f85d fb04 	ldr.w	pc, [sp], #4
	...

08014e78 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014e78:	4b01      	ldr	r3, [pc, #4]	; (8014e80 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 8014e7a:	6018      	str	r0, [r3, #0]
 8014e7c:	4770      	bx	lr
 8014e7e:	bf00      	nop
 8014e80:	200137c0 	.word	0x200137c0

08014e84 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014e84:	4b06      	ldr	r3, [pc, #24]	; (8014ea0 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014e86:	881a      	ldrh	r2, [r3, #0]
 8014e88:	4282      	cmp	r2, r0
 8014e8a:	d807      	bhi.n	8014e9c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8014e8c:	4b05      	ldr	r3, [pc, #20]	; (8014ea4 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 8014e8e:	881b      	ldrh	r3, [r3, #0]
 8014e90:	4413      	add	r3, r2
 8014e92:	4298      	cmp	r0, r3
 8014e94:	bfac      	ite	ge
 8014e96:	2000      	movge	r0, #0
 8014e98:	2001      	movlt	r0, #1
 8014e9a:	4770      	bx	lr
 8014e9c:	2000      	movs	r0, #0
 8014e9e:	4770      	bx	lr
 8014ea0:	200137e0 	.word	0x200137e0
 8014ea4:	200137e4 	.word	0x200137e4

08014ea8 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014ea8:	b508      	push	{r3, lr}
 8014eaa:	4601      	mov	r1, r0
 8014eac:	f7ff ffea 	bl	8014e84 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 8014eb0:	b118      	cbz	r0, 8014eba <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 8014eb2:	4b02      	ldr	r3, [pc, #8]	; (8014ebc <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8014eb4:	681b      	ldr	r3, [r3, #0]
 8014eb6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8014eba:	bd08      	pop	{r3, pc}
 8014ebc:	200137c4 	.word	0x200137c4

08014ec0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 8014ec0:	b5f0      	push	{r4, r5, r6, r7, lr}
 8014ec2:	4c24      	ldr	r4, [pc, #144]	; (8014f54 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8014ec4:	6823      	ldr	r3, [r4, #0]
 8014ec6:	2b00      	cmp	r3, #0
 8014ec8:	d042      	beq.n	8014f50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014eca:	4a23      	ldr	r2, [pc, #140]	; (8014f58 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8014ecc:	4d23      	ldr	r5, [pc, #140]	; (8014f5c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 8014ece:	8811      	ldrh	r1, [r2, #0]
 8014ed0:	f8b5 c000 	ldrh.w	ip, [r5]
 8014ed4:	4822      	ldr	r0, [pc, #136]	; (8014f60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8014ed6:	4461      	add	r1, ip
 8014ed8:	1c4a      	adds	r2, r1, #1
 8014eda:	f022 0201 	bic.w	r2, r2, #1
 8014ede:	008f      	lsls	r7, r1, #2
 8014ee0:	0412      	lsls	r2, r2, #16
 8014ee2:	19de      	adds	r6, r3, r7
 8014ee4:	0c12      	lsrs	r2, r2, #16
 8014ee6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8014eea:	6006      	str	r6, [r0, #0]
 8014eec:	4e1d      	ldr	r6, [pc, #116]	; (8014f64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 8014eee:	19da      	adds	r2, r3, r7
 8014ef0:	6032      	str	r2, [r6, #0]
 8014ef2:	220e      	movs	r2, #14
 8014ef4:	fb02 f20c 	mul.w	r2, r2, ip
 8014ef8:	3203      	adds	r2, #3
 8014efa:	f022 0203 	bic.w	r2, r2, #3
 8014efe:	443a      	add	r2, r7
 8014f00:	4f19      	ldr	r7, [pc, #100]	; (8014f68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 8014f02:	4413      	add	r3, r2
 8014f04:	603b      	str	r3, [r7, #0]
 8014f06:	4f19      	ldr	r7, [pc, #100]	; (8014f6c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8014f08:	2300      	movs	r3, #0
 8014f0a:	803b      	strh	r3, [r7, #0]
 8014f0c:	4f18      	ldr	r7, [pc, #96]	; (8014f70 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 8014f0e:	683f      	ldr	r7, [r7, #0]
 8014f10:	1aba      	subs	r2, r7, r2
 8014f12:	4f18      	ldr	r7, [pc, #96]	; (8014f74 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014f14:	603a      	str	r2, [r7, #0]
 8014f16:	4a18      	ldr	r2, [pc, #96]	; (8014f78 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014f18:	469c      	mov	ip, r3
 8014f1a:	8013      	strh	r3, [r2, #0]
 8014f1c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014f20:	428b      	cmp	r3, r1
 8014f22:	d10d      	bne.n	8014f40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014f24:	882d      	ldrh	r5, [r5, #0]
 8014f26:	6830      	ldr	r0, [r6, #0]
 8014f28:	2300      	movs	r3, #0
 8014f2a:	240e      	movs	r4, #14
 8014f2c:	429d      	cmp	r5, r3
 8014f2e:	d90f      	bls.n	8014f50 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014f30:	fb04 0203 	mla	r2, r4, r3, r0
 8014f34:	3301      	adds	r3, #1
 8014f36:	7b11      	ldrb	r1, [r2, #12]
 8014f38:	f36f 1145 	bfc	r1, #5, #1
 8014f3c:	7311      	strb	r1, [r2, #12]
 8014f3e:	e7f5      	b.n	8014f2c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014f40:	6822      	ldr	r2, [r4, #0]
 8014f42:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014f46:	6802      	ldr	r2, [r0, #0]
 8014f48:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014f4c:	3301      	adds	r3, #1
 8014f4e:	e7e7      	b.n	8014f20 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014f52:	bf00      	nop
 8014f54:	200137c4 	.word	0x200137c4
 8014f58:	200137e0 	.word	0x200137e0
 8014f5c:	200137e4 	.word	0x200137e4
 8014f60:	200137d8 	.word	0x200137d8
 8014f64:	200137c8 	.word	0x200137c8
 8014f68:	200137d0 	.word	0x200137d0
 8014f6c:	200137e2 	.word	0x200137e2
 8014f70:	200137cc 	.word	0x200137cc
 8014f74:	200137dc 	.word	0x200137dc
 8014f78:	200137d4 	.word	0x200137d4

08014f7c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014f7c:	4b06      	ldr	r3, [pc, #24]	; (8014f98 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8014f7e:	681b      	ldr	r3, [r3, #0]
 8014f80:	b943      	cbnz	r3, 8014f94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014f82:	b139      	cbz	r1, 8014f94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014f84:	4b05      	ldr	r3, [pc, #20]	; (8014f9c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014f86:	801a      	strh	r2, [r3, #0]
 8014f88:	4b05      	ldr	r3, [pc, #20]	; (8014fa0 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014f8a:	6019      	str	r1, [r3, #0]
 8014f8c:	4b05      	ldr	r3, [pc, #20]	; (8014fa4 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8014f8e:	6018      	str	r0, [r3, #0]
 8014f90:	f7ff bf96 	b.w	8014ec0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014f94:	4770      	bx	lr
 8014f96:	bf00      	nop
 8014f98:	200137d0 	.word	0x200137d0
 8014f9c:	200137e4 	.word	0x200137e4
 8014fa0:	200137cc 	.word	0x200137cc
 8014fa4:	200137c4 	.word	0x200137c4

08014fa8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014fa8:	b470      	push	{r4, r5, r6}
 8014faa:	4c07      	ldr	r4, [pc, #28]	; (8014fc8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014fac:	6826      	ldr	r6, [r4, #0]
 8014fae:	4605      	mov	r5, r0
 8014fb0:	4610      	mov	r0, r2
 8014fb2:	9a03      	ldr	r2, [sp, #12]
 8014fb4:	b936      	cbnz	r6, 8014fc4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014fb6:	6025      	str	r5, [r4, #0]
 8014fb8:	4c04      	ldr	r4, [pc, #16]	; (8014fcc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014fba:	8021      	strh	r1, [r4, #0]
 8014fbc:	bc70      	pop	{r4, r5, r6}
 8014fbe:	4619      	mov	r1, r3
 8014fc0:	f7ff bfdc 	b.w	8014f7c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014fc4:	bc70      	pop	{r4, r5, r6}
 8014fc6:	4770      	bx	lr
 8014fc8:	200137e8 	.word	0x200137e8
 8014fcc:	200137e0 	.word	0x200137e0

08014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014fd0:	4a12      	ldr	r2, [pc, #72]	; (801501c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014fd2:	8803      	ldrh	r3, [r0, #0]
 8014fd4:	8812      	ldrh	r2, [r2, #0]
 8014fd6:	4293      	cmp	r3, r2
 8014fd8:	d207      	bcs.n	8014fea <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014fda:	4a11      	ldr	r2, [pc, #68]	; (8015020 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014fdc:	6812      	ldr	r2, [r2, #0]
 8014fde:	2114      	movs	r1, #20
 8014fe0:	fb01 2303 	mla	r3, r1, r3, r2
 8014fe4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014fe8:	4770      	bx	lr
 8014fea:	490e      	ldr	r1, [pc, #56]	; (8015024 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8014fec:	8809      	ldrh	r1, [r1, #0]
 8014fee:	4411      	add	r1, r2
 8014ff0:	428b      	cmp	r3, r1
 8014ff2:	da04      	bge.n	8014ffe <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014ff4:	1a9b      	subs	r3, r3, r2
 8014ff6:	4a0c      	ldr	r2, [pc, #48]	; (8015028 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014ff8:	210e      	movs	r1, #14
 8014ffa:	6812      	ldr	r2, [r2, #0]
 8014ffc:	e7f0      	b.n	8014fe0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8014ffe:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8015002:	4293      	cmp	r3, r2
 8015004:	d108      	bne.n	8015018 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8015006:	4b09      	ldr	r3, [pc, #36]	; (801502c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8015008:	781b      	ldrb	r3, [r3, #0]
 801500a:	b91b      	cbnz	r3, 8015014 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 801500c:	4b08      	ldr	r3, [pc, #32]	; (8015030 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801500e:	f9b3 0000 	ldrsh.w	r0, [r3]
 8015012:	4770      	bx	lr
 8015014:	4b07      	ldr	r3, [pc, #28]	; (8015034 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8015016:	e7fa      	b.n	801500e <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8015018:	2000      	movs	r0, #0
 801501a:	4770      	bx	lr
 801501c:	200137e0 	.word	0x200137e0
 8015020:	200137e8 	.word	0x200137e8
 8015024:	200137e4 	.word	0x200137e4
 8015028:	200137c8 	.word	0x200137c8
 801502c:	20013750 	.word	0x20013750
 8015030:	20013752 	.word	0x20013752
 8015034:	20013754 	.word	0x20013754

08015038 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8015038:	4a12      	ldr	r2, [pc, #72]	; (8015084 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 801503a:	8803      	ldrh	r3, [r0, #0]
 801503c:	8812      	ldrh	r2, [r2, #0]
 801503e:	4293      	cmp	r3, r2
 8015040:	d207      	bcs.n	8015052 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8015042:	4a11      	ldr	r2, [pc, #68]	; (8015088 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8015044:	6812      	ldr	r2, [r2, #0]
 8015046:	2114      	movs	r1, #20
 8015048:	fb01 2303 	mla	r3, r1, r3, r2
 801504c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8015050:	4770      	bx	lr
 8015052:	490e      	ldr	r1, [pc, #56]	; (801508c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8015054:	8809      	ldrh	r1, [r1, #0]
 8015056:	4411      	add	r1, r2
 8015058:	428b      	cmp	r3, r1
 801505a:	da04      	bge.n	8015066 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 801505c:	1a9b      	subs	r3, r3, r2
 801505e:	4a0c      	ldr	r2, [pc, #48]	; (8015090 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8015060:	210e      	movs	r1, #14
 8015062:	6812      	ldr	r2, [r2, #0]
 8015064:	e7f0      	b.n	8015048 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8015066:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 801506a:	4293      	cmp	r3, r2
 801506c:	d108      	bne.n	8015080 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 801506e:	4b09      	ldr	r3, [pc, #36]	; (8015094 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8015070:	781b      	ldrb	r3, [r3, #0]
 8015072:	b91b      	cbnz	r3, 801507c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8015074:	4b08      	ldr	r3, [pc, #32]	; (8015098 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8015076:	f9b3 0000 	ldrsh.w	r0, [r3]
 801507a:	4770      	bx	lr
 801507c:	4b07      	ldr	r3, [pc, #28]	; (801509c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 801507e:	e7fa      	b.n	8015076 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8015080:	2000      	movs	r0, #0
 8015082:	4770      	bx	lr
 8015084:	200137e0 	.word	0x200137e0
 8015088:	200137e8 	.word	0x200137e8
 801508c:	200137e4 	.word	0x200137e4
 8015090:	200137c8 	.word	0x200137c8
 8015094:	20013750 	.word	0x20013750
 8015098:	20013754 	.word	0x20013754
 801509c:	20013752 	.word	0x20013752

080150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 80150a0:	b510      	push	{r4, lr}
 80150a2:	4a1f      	ldr	r2, [pc, #124]	; (8015120 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 80150a4:	880b      	ldrh	r3, [r1, #0]
 80150a6:	8812      	ldrh	r2, [r2, #0]
 80150a8:	4293      	cmp	r3, r2
 80150aa:	d213      	bcs.n	80150d4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 80150ac:	4a1d      	ldr	r2, [pc, #116]	; (8015124 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 80150ae:	6812      	ldr	r2, [r2, #0]
 80150b0:	2114      	movs	r1, #20
 80150b2:	fb01 2303 	mla	r3, r1, r3, r2
 80150b6:	8a1a      	ldrh	r2, [r3, #16]
 80150b8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 80150bc:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 80150c0:	8a5b      	ldrh	r3, [r3, #18]
 80150c2:	8004      	strh	r4, [r0, #0]
 80150c4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80150c8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 80150cc:	8041      	strh	r1, [r0, #2]
 80150ce:	8082      	strh	r2, [r0, #4]
 80150d0:	80c3      	strh	r3, [r0, #6]
 80150d2:	e00e      	b.n	80150f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 80150d4:	4914      	ldr	r1, [pc, #80]	; (8015128 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 80150d6:	8809      	ldrh	r1, [r1, #0]
 80150d8:	4411      	add	r1, r2
 80150da:	428b      	cmp	r3, r1
 80150dc:	da0a      	bge.n	80150f4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 80150de:	1a9b      	subs	r3, r3, r2
 80150e0:	4a12      	ldr	r2, [pc, #72]	; (801512c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 80150e2:	6812      	ldr	r2, [r2, #0]
 80150e4:	210e      	movs	r1, #14
 80150e6:	fb01 2303 	mla	r3, r1, r3, r2
 80150ea:	681a      	ldr	r2, [r3, #0]
 80150ec:	6002      	str	r2, [r0, #0]
 80150ee:	685a      	ldr	r2, [r3, #4]
 80150f0:	6042      	str	r2, [r0, #4]
 80150f2:	bd10      	pop	{r4, pc}
 80150f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80150f8:	4293      	cmp	r3, r2
 80150fa:	d10b      	bne.n	8015114 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 80150fc:	4b0c      	ldr	r3, [pc, #48]	; (8015130 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 80150fe:	f9b3 1000 	ldrsh.w	r1, [r3]
 8015102:	4b0c      	ldr	r3, [pc, #48]	; (8015134 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8015104:	8081      	strh	r1, [r0, #4]
 8015106:	f9b3 2000 	ldrsh.w	r2, [r3]
 801510a:	80c2      	strh	r2, [r0, #6]
 801510c:	2300      	movs	r3, #0
 801510e:	8003      	strh	r3, [r0, #0]
 8015110:	8043      	strh	r3, [r0, #2]
 8015112:	e7ee      	b.n	80150f2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8015114:	2300      	movs	r3, #0
 8015116:	8003      	strh	r3, [r0, #0]
 8015118:	8043      	strh	r3, [r0, #2]
 801511a:	8083      	strh	r3, [r0, #4]
 801511c:	e7d8      	b.n	80150d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801511e:	bf00      	nop
 8015120:	200137e0 	.word	0x200137e0
 8015124:	200137e8 	.word	0x200137e8
 8015128:	200137e4 	.word	0x200137e4
 801512c:	200137c8 	.word	0x200137c8
 8015130:	2001374c 	.word	0x2001374c
 8015134:	2001374e 	.word	0x2001374e

08015138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8015138:	4a17      	ldr	r2, [pc, #92]	; (8015198 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 801513a:	8803      	ldrh	r3, [r0, #0]
 801513c:	8812      	ldrh	r2, [r2, #0]
 801513e:	4293      	cmp	r3, r2
 8015140:	d213      	bcs.n	801516a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8015142:	4a16      	ldr	r2, [pc, #88]	; (801519c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8015144:	6812      	ldr	r2, [r2, #0]
 8015146:	2114      	movs	r1, #20
 8015148:	fb01 2303 	mla	r3, r1, r3, r2
 801514c:	8a1a      	ldrh	r2, [r3, #16]
 801514e:	8919      	ldrh	r1, [r3, #8]
 8015150:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8015154:	428a      	cmp	r2, r1
 8015156:	db1d      	blt.n	8015194 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8015158:	8a58      	ldrh	r0, [r3, #18]
 801515a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 801515e:	895b      	ldrh	r3, [r3, #10]
 8015160:	4298      	cmp	r0, r3
 8015162:	bfac      	ite	ge
 8015164:	2000      	movge	r0, #0
 8015166:	2001      	movlt	r0, #1
 8015168:	4770      	bx	lr
 801516a:	490d      	ldr	r1, [pc, #52]	; (80151a0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 801516c:	8809      	ldrh	r1, [r1, #0]
 801516e:	4411      	add	r1, r2
 8015170:	428b      	cmp	r3, r1
 8015172:	da0d      	bge.n	8015190 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8015174:	1a9b      	subs	r3, r3, r2
 8015176:	4a0b      	ldr	r2, [pc, #44]	; (80151a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8015178:	6812      	ldr	r2, [r2, #0]
 801517a:	210e      	movs	r1, #14
 801517c:	fb01 2303 	mla	r3, r1, r3, r2
 8015180:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8015184:	891a      	ldrh	r2, [r3, #8]
 8015186:	4291      	cmp	r1, r2
 8015188:	db04      	blt.n	8015194 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 801518a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 801518e:	e7e6      	b.n	801515e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8015190:	2000      	movs	r0, #0
 8015192:	4770      	bx	lr
 8015194:	2001      	movs	r0, #1
 8015196:	4770      	bx	lr
 8015198:	200137e0 	.word	0x200137e0
 801519c:	200137e8 	.word	0x200137e8
 80151a0:	200137e4 	.word	0x200137e4
 80151a4:	200137c8 	.word	0x200137c8

080151a8 <_ZNK8touchgfx6Bitmap7getDataEv>:
 80151a8:	4a12      	ldr	r2, [pc, #72]	; (80151f4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 80151aa:	8803      	ldrh	r3, [r0, #0]
 80151ac:	8811      	ldrh	r1, [r2, #0]
 80151ae:	428b      	cmp	r3, r1
 80151b0:	d20b      	bcs.n	80151ca <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 80151b2:	4a11      	ldr	r2, [pc, #68]	; (80151f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80151b4:	6812      	ldr	r2, [r2, #0]
 80151b6:	b112      	cbz	r2, 80151be <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 80151b8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80151bc:	b9c0      	cbnz	r0, 80151f0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 80151be:	4a0f      	ldr	r2, [pc, #60]	; (80151fc <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 80151c0:	6811      	ldr	r1, [r2, #0]
 80151c2:	2214      	movs	r2, #20
 80151c4:	4353      	muls	r3, r2
 80151c6:	58c8      	ldr	r0, [r1, r3]
 80151c8:	4770      	bx	lr
 80151ca:	4a0d      	ldr	r2, [pc, #52]	; (8015200 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 80151cc:	8812      	ldrh	r2, [r2, #0]
 80151ce:	440a      	add	r2, r1
 80151d0:	4293      	cmp	r3, r2
 80151d2:	da04      	bge.n	80151de <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 80151d4:	4a08      	ldr	r2, [pc, #32]	; (80151f8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 80151d6:	6812      	ldr	r2, [r2, #0]
 80151d8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 80151dc:	4770      	bx	lr
 80151de:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80151e2:	4293      	cmp	r3, r2
 80151e4:	d103      	bne.n	80151ee <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 80151e6:	4b07      	ldr	r3, [pc, #28]	; (8015204 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 80151e8:	681b      	ldr	r3, [r3, #0]
 80151ea:	6c58      	ldr	r0, [r3, #68]	; 0x44
 80151ec:	4770      	bx	lr
 80151ee:	2000      	movs	r0, #0
 80151f0:	4770      	bx	lr
 80151f2:	bf00      	nop
 80151f4:	200137e0 	.word	0x200137e0
 80151f8:	200137c4 	.word	0x200137c4
 80151fc:	200137e8 	.word	0x200137e8
 8015200:	200137e4 	.word	0x200137e4
 8015204:	20013758 	.word	0x20013758

08015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8015208:	4b24      	ldr	r3, [pc, #144]	; (801529c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 801520a:	8802      	ldrh	r2, [r0, #0]
 801520c:	8818      	ldrh	r0, [r3, #0]
 801520e:	4282      	cmp	r2, r0
 8015210:	d221      	bcs.n	8015256 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8015212:	4b23      	ldr	r3, [pc, #140]	; (80152a0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8015214:	6819      	ldr	r1, [r3, #0]
 8015216:	2314      	movs	r3, #20
 8015218:	fb03 1302 	mla	r3, r3, r2, r1
 801521c:	6858      	ldr	r0, [r3, #4]
 801521e:	2800      	cmp	r0, #0
 8015220:	d03a      	beq.n	8015298 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015222:	4920      	ldr	r1, [pc, #128]	; (80152a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8015224:	6809      	ldr	r1, [r1, #0]
 8015226:	2900      	cmp	r1, #0
 8015228:	d036      	beq.n	8015298 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 801522a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 801522e:	2900      	cmp	r1, #0
 8015230:	d032      	beq.n	8015298 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8015232:	891a      	ldrh	r2, [r3, #8]
 8015234:	8958      	ldrh	r0, [r3, #10]
 8015236:	4350      	muls	r0, r2
 8015238:	7c5a      	ldrb	r2, [r3, #17]
 801523a:	7cdb      	ldrb	r3, [r3, #19]
 801523c:	0952      	lsrs	r2, r2, #5
 801523e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8015242:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8015246:	2b0b      	cmp	r3, #11
 8015248:	bf18      	it	ne
 801524a:	0040      	lslne	r0, r0, #1
 801524c:	3003      	adds	r0, #3
 801524e:	f020 0003 	bic.w	r0, r0, #3
 8015252:	4408      	add	r0, r1
 8015254:	4770      	bx	lr
 8015256:	4b14      	ldr	r3, [pc, #80]	; (80152a8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8015258:	881b      	ldrh	r3, [r3, #0]
 801525a:	4403      	add	r3, r0
 801525c:	429a      	cmp	r2, r3
 801525e:	da1a      	bge.n	8015296 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015260:	4b12      	ldr	r3, [pc, #72]	; (80152ac <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8015262:	681b      	ldr	r3, [r3, #0]
 8015264:	1a10      	subs	r0, r2, r0
 8015266:	210e      	movs	r1, #14
 8015268:	fb01 3000 	mla	r0, r1, r0, r3
 801526c:	7b03      	ldrb	r3, [r0, #12]
 801526e:	f003 031f 	and.w	r3, r3, #31
 8015272:	2b0b      	cmp	r3, #11
 8015274:	d10b      	bne.n	801528e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8015276:	8903      	ldrh	r3, [r0, #8]
 8015278:	8940      	ldrh	r0, [r0, #10]
 801527a:	4358      	muls	r0, r3
 801527c:	4b09      	ldr	r3, [pc, #36]	; (80152a4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 801527e:	6819      	ldr	r1, [r3, #0]
 8015280:	3003      	adds	r0, #3
 8015282:	f020 0303 	bic.w	r3, r0, #3
 8015286:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 801528a:	4418      	add	r0, r3
 801528c:	4770      	bx	lr
 801528e:	2b0d      	cmp	r3, #13
 8015290:	d101      	bne.n	8015296 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8015292:	300d      	adds	r0, #13
 8015294:	4770      	bx	lr
 8015296:	2000      	movs	r0, #0
 8015298:	4770      	bx	lr
 801529a:	bf00      	nop
 801529c:	200137e0 	.word	0x200137e0
 80152a0:	200137e8 	.word	0x200137e8
 80152a4:	200137c4 	.word	0x200137c4
 80152a8:	200137e4 	.word	0x200137e4
 80152ac:	200137c8 	.word	0x200137c8

080152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 80152b0:	b510      	push	{r4, lr}
 80152b2:	4a17      	ldr	r2, [pc, #92]	; (8015310 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 80152b4:	8803      	ldrh	r3, [r0, #0]
 80152b6:	8812      	ldrh	r2, [r2, #0]
 80152b8:	4293      	cmp	r3, r2
 80152ba:	d20c      	bcs.n	80152d6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 80152bc:	4a15      	ldr	r2, [pc, #84]	; (8015314 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 80152be:	6812      	ldr	r2, [r2, #0]
 80152c0:	2114      	movs	r1, #20
 80152c2:	fb01 2303 	mla	r3, r1, r3, r2
 80152c6:	7c58      	ldrb	r0, [r3, #17]
 80152c8:	0942      	lsrs	r2, r0, #5
 80152ca:	7cd8      	ldrb	r0, [r3, #19]
 80152cc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 80152d0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 80152d4:	bd10      	pop	{r4, pc}
 80152d6:	4910      	ldr	r1, [pc, #64]	; (8015318 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 80152d8:	8809      	ldrh	r1, [r1, #0]
 80152da:	4411      	add	r1, r2
 80152dc:	428b      	cmp	r3, r1
 80152de:	da09      	bge.n	80152f4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 80152e0:	1a9b      	subs	r3, r3, r2
 80152e2:	4a0e      	ldr	r2, [pc, #56]	; (801531c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 80152e4:	6812      	ldr	r2, [r2, #0]
 80152e6:	210e      	movs	r1, #14
 80152e8:	fb01 2303 	mla	r3, r1, r3, r2
 80152ec:	7b18      	ldrb	r0, [r3, #12]
 80152ee:	f000 001f 	and.w	r0, r0, #31
 80152f2:	e7ef      	b.n	80152d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 80152f4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 80152f8:	4293      	cmp	r3, r2
 80152fa:	d106      	bne.n	801530a <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 80152fc:	f7f7 f822 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 8015300:	6803      	ldr	r3, [r0, #0]
 8015302:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015306:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8015308:	4718      	bx	r3
 801530a:	2000      	movs	r0, #0
 801530c:	e7e2      	b.n	80152d4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 801530e:	bf00      	nop
 8015310:	200137e0 	.word	0x200137e0
 8015314:	200137e8 	.word	0x200137e8
 8015318:	200137e4 	.word	0x200137e4
 801531c:	200137c8 	.word	0x200137c8

08015320 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8015320:	2010      	movs	r0, #16
 8015322:	4770      	bx	lr

08015324 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8015324:	2000      	movs	r0, #0
 8015326:	4770      	bx	lr

08015328 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8015328:	4b02      	ldr	r3, [pc, #8]	; (8015334 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 801532a:	8818      	ldrh	r0, [r3, #0]
 801532c:	0040      	lsls	r0, r0, #1
 801532e:	b280      	uxth	r0, r0
 8015330:	4770      	bx	lr
 8015332:	bf00      	nop
 8015334:	20013752 	.word	0x20013752

08015338 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8015338:	2bff      	cmp	r3, #255	; 0xff
 801533a:	d050      	beq.n	80153de <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 801533c:	2a0b      	cmp	r2, #11
 801533e:	d04a      	beq.n	80153d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015340:	d80e      	bhi.n	8015360 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8015342:	2a03      	cmp	r2, #3
 8015344:	d03f      	beq.n	80153c6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8015346:	d804      	bhi.n	8015352 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8015348:	2a01      	cmp	r2, #1
 801534a:	d03e      	beq.n	80153ca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 801534c:	d93f      	bls.n	80153ce <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 801534e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8015350:	4770      	bx	lr
 8015352:	2a09      	cmp	r2, #9
 8015354:	d03f      	beq.n	80153d6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8015356:	d83c      	bhi.n	80153d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8015358:	2a08      	cmp	r2, #8
 801535a:	d03a      	beq.n	80153d2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 801535c:	2000      	movs	r0, #0
 801535e:	4770      	bx	lr
 8015360:	2a2f      	cmp	r2, #47	; 0x2f
 8015362:	d024      	beq.n	80153ae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8015364:	d80d      	bhi.n	8015382 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8015366:	2a2d      	cmp	r2, #45	; 0x2d
 8015368:	d014      	beq.n	8015394 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 801536a:	d826      	bhi.n	80153ba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 801536c:	2a2c      	cmp	r2, #44	; 0x2c
 801536e:	d1f5      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015370:	684b      	ldr	r3, [r1, #4]
 8015372:	781b      	ldrb	r3, [r3, #0]
 8015374:	2b01      	cmp	r3, #1
 8015376:	d018      	beq.n	80153aa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8015378:	d323      	bcc.n	80153c2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 801537a:	2b02      	cmp	r3, #2
 801537c:	d1ee      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 801537e:	6880      	ldr	r0, [r0, #8]
 8015380:	4770      	bx	lr
 8015382:	2a31      	cmp	r2, #49	; 0x31
 8015384:	d004      	beq.n	8015390 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8015386:	d328      	bcc.n	80153da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8015388:	2a32      	cmp	r2, #50	; 0x32
 801538a:	d026      	beq.n	80153da <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 801538c:	2a33      	cmp	r2, #51	; 0x33
 801538e:	d1e5      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015390:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8015392:	4770      	bx	lr
 8015394:	684b      	ldr	r3, [r1, #4]
 8015396:	781b      	ldrb	r3, [r3, #0]
 8015398:	2b01      	cmp	r3, #1
 801539a:	d004      	beq.n	80153a6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 801539c:	d30b      	bcc.n	80153b6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 801539e:	2b02      	cmp	r3, #2
 80153a0:	d1dc      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153a2:	6900      	ldr	r0, [r0, #16]
 80153a4:	4770      	bx	lr
 80153a6:	6a00      	ldr	r0, [r0, #32]
 80153a8:	4770      	bx	lr
 80153aa:	6980      	ldr	r0, [r0, #24]
 80153ac:	4770      	bx	lr
 80153ae:	684b      	ldr	r3, [r1, #4]
 80153b0:	781b      	ldrb	r3, [r3, #0]
 80153b2:	2b00      	cmp	r3, #0
 80153b4:	d1d2      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153b6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 80153b8:	4770      	bx	lr
 80153ba:	684b      	ldr	r3, [r1, #4]
 80153bc:	781b      	ldrb	r3, [r3, #0]
 80153be:	2b00      	cmp	r3, #0
 80153c0:	d1cc      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153c2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80153c4:	4770      	bx	lr
 80153c6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 80153c8:	4770      	bx	lr
 80153ca:	6d00      	ldr	r0, [r0, #80]	; 0x50
 80153cc:	4770      	bx	lr
 80153ce:	6c00      	ldr	r0, [r0, #64]	; 0x40
 80153d0:	4770      	bx	lr
 80153d2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 80153d4:	4770      	bx	lr
 80153d6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 80153d8:	4770      	bx	lr
 80153da:	6e80      	ldr	r0, [r0, #104]	; 0x68
 80153dc:	4770      	bx	lr
 80153de:	2a0b      	cmp	r2, #11
 80153e0:	d049      	beq.n	8015476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80153e2:	d80e      	bhi.n	8015402 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 80153e4:	2a03      	cmp	r2, #3
 80153e6:	d040      	beq.n	801546a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 80153e8:	d804      	bhi.n	80153f4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 80153ea:	2a01      	cmp	r2, #1
 80153ec:	d03f      	beq.n	801546e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 80153ee:	d940      	bls.n	8015472 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 80153f0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80153f2:	4770      	bx	lr
 80153f4:	2a09      	cmp	r2, #9
 80153f6:	d03e      	beq.n	8015476 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 80153f8:	d801      	bhi.n	80153fe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 80153fa:	2a08      	cmp	r2, #8
 80153fc:	d1ae      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 80153fe:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8015400:	4770      	bx	lr
 8015402:	2a2f      	cmp	r2, #47	; 0x2f
 8015404:	d024      	beq.n	8015450 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8015406:	d80d      	bhi.n	8015424 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8015408:	2a2d      	cmp	r2, #45	; 0x2d
 801540a:	d014      	beq.n	8015436 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 801540c:	d826      	bhi.n	801545c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 801540e:	2a2c      	cmp	r2, #44	; 0x2c
 8015410:	d1a4      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015412:	684b      	ldr	r3, [r1, #4]
 8015414:	781b      	ldrb	r3, [r3, #0]
 8015416:	2b01      	cmp	r3, #1
 8015418:	d018      	beq.n	801544c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 801541a:	d324      	bcc.n	8015466 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 801541c:	2b02      	cmp	r3, #2
 801541e:	d19d      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015420:	68c0      	ldr	r0, [r0, #12]
 8015422:	4770      	bx	lr
 8015424:	2a31      	cmp	r2, #49	; 0x31
 8015426:	d004      	beq.n	8015432 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8015428:	d327      	bcc.n	801547a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801542a:	2a32      	cmp	r2, #50	; 0x32
 801542c:	d025      	beq.n	801547a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 801542e:	2a33      	cmp	r2, #51	; 0x33
 8015430:	d194      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015432:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8015434:	4770      	bx	lr
 8015436:	684b      	ldr	r3, [r1, #4]
 8015438:	781b      	ldrb	r3, [r3, #0]
 801543a:	2b01      	cmp	r3, #1
 801543c:	d004      	beq.n	8015448 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 801543e:	d30b      	bcc.n	8015458 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8015440:	2b02      	cmp	r3, #2
 8015442:	d18b      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015444:	6940      	ldr	r0, [r0, #20]
 8015446:	4770      	bx	lr
 8015448:	6a40      	ldr	r0, [r0, #36]	; 0x24
 801544a:	4770      	bx	lr
 801544c:	69c0      	ldr	r0, [r0, #28]
 801544e:	4770      	bx	lr
 8015450:	684b      	ldr	r3, [r1, #4]
 8015452:	781b      	ldrb	r3, [r3, #0]
 8015454:	2b00      	cmp	r3, #0
 8015456:	d181      	bne.n	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015458:	6b40      	ldr	r0, [r0, #52]	; 0x34
 801545a:	4770      	bx	lr
 801545c:	684b      	ldr	r3, [r1, #4]
 801545e:	781b      	ldrb	r3, [r3, #0]
 8015460:	2b00      	cmp	r3, #0
 8015462:	f47f af7b 	bne.w	801535c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8015466:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8015468:	4770      	bx	lr
 801546a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 801546c:	4770      	bx	lr
 801546e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8015470:	4770      	bx	lr
 8015472:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8015474:	4770      	bx	lr
 8015476:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8015478:	4770      	bx	lr
 801547a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 801547c:	4770      	bx	lr

0801547e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801547e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015482:	b087      	sub	sp, #28
 8015484:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015486:	9205      	str	r2, [sp, #20]
 8015488:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801548c:	9202      	str	r2, [sp, #8]
 801548e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015492:	9101      	str	r1, [sp, #4]
 8015494:	6841      	ldr	r1, [r0, #4]
 8015496:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 801549a:	fb01 2404 	mla	r4, r1, r4, r2
 801549e:	6802      	ldr	r2, [r0, #0]
 80154a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80154a4:	f8de 2000 	ldr.w	r2, [lr]
 80154a8:	9203      	str	r2, [sp, #12]
 80154aa:	f8de 2004 	ldr.w	r2, [lr, #4]
 80154ae:	3204      	adds	r2, #4
 80154b0:	9204      	str	r2, [sp, #16]
 80154b2:	9a02      	ldr	r2, [sp, #8]
 80154b4:	43d6      	mvns	r6, r2
 80154b6:	b2f6      	uxtb	r6, r6
 80154b8:	9a01      	ldr	r2, [sp, #4]
 80154ba:	2a00      	cmp	r2, #0
 80154bc:	dc03      	bgt.n	80154c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80154be:	9a05      	ldr	r2, [sp, #20]
 80154c0:	2a00      	cmp	r2, #0
 80154c2:	f340 8129 	ble.w	8015718 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80154c6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80154c8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80154cc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80154d0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80154d4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80154d6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80154da:	2b00      	cmp	r3, #0
 80154dc:	dd0e      	ble.n	80154fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80154de:	1408      	asrs	r0, r1, #16
 80154e0:	d405      	bmi.n	80154ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154e2:	4560      	cmp	r0, ip
 80154e4:	da03      	bge.n	80154ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154e6:	1410      	asrs	r0, r2, #16
 80154e8:	d401      	bmi.n	80154ee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80154ea:	42b8      	cmp	r0, r7
 80154ec:	db07      	blt.n	80154fe <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80154ee:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80154f0:	4401      	add	r1, r0
 80154f2:	9814      	ldr	r0, [sp, #80]	; 0x50
 80154f4:	3b01      	subs	r3, #1
 80154f6:	4402      	add	r2, r0
 80154f8:	3402      	adds	r4, #2
 80154fa:	e7ee      	b.n	80154da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80154fc:	d071      	beq.n	80155e2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80154fe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015500:	1e58      	subs	r0, r3, #1
 8015502:	fb05 1500 	mla	r5, r5, r0, r1
 8015506:	142d      	asrs	r5, r5, #16
 8015508:	d45f      	bmi.n	80155ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801550a:	4565      	cmp	r5, ip
 801550c:	da5d      	bge.n	80155ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801550e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015510:	fb05 2000 	mla	r0, r5, r0, r2
 8015514:	1400      	asrs	r0, r0, #16
 8015516:	d458      	bmi.n	80155ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015518:	42b8      	cmp	r0, r7
 801551a:	da56      	bge.n	80155ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801551c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015520:	4699      	mov	r9, r3
 8015522:	46a2      	mov	sl, r4
 8015524:	f1b9 0f00 	cmp.w	r9, #0
 8015528:	dd57      	ble.n	80155da <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801552a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801552e:	9803      	ldr	r0, [sp, #12]
 8015530:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8015534:	140d      	asrs	r5, r1, #16
 8015536:	fb07 000c 	mla	r0, r7, ip, r0
 801553a:	f109 39ff 	add.w	r9, r9, #4294967295
 801553e:	5d40      	ldrb	r0, [r0, r5]
 8015540:	9d04      	ldr	r5, [sp, #16]
 8015542:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015546:	f8ba 5000 	ldrh.w	r5, [sl]
 801554a:	122f      	asrs	r7, r5, #8
 801554c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015550:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015554:	fb17 f706 	smulbb	r7, r7, r6
 8015558:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801555c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015560:	00ed      	lsls	r5, r5, #3
 8015562:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015566:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801556a:	10c7      	asrs	r7, r0, #3
 801556c:	b2ed      	uxtb	r5, r5
 801556e:	00c0      	lsls	r0, r0, #3
 8015570:	fb18 f806 	smulbb	r8, r8, r6
 8015574:	fb15 f506 	smulbb	r5, r5, r6
 8015578:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801557c:	b2c0      	uxtb	r0, r0
 801557e:	fa1f fc8c 	uxth.w	ip, ip
 8015582:	fb07 870b 	mla	r7, r7, fp, r8
 8015586:	fb00 500b 	mla	r0, r0, fp, r5
 801558a:	b280      	uxth	r0, r0
 801558c:	b2bf      	uxth	r7, r7
 801558e:	f10c 0501 	add.w	r5, ip, #1
 8015592:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015596:	f107 0801 	add.w	r8, r7, #1
 801559a:	1c45      	adds	r5, r0, #1
 801559c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80155a0:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 80155a4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80155a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80155aa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80155ae:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80155b2:	ea45 0c0c 	orr.w	ip, r5, ip
 80155b6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80155ba:	4401      	add	r1, r0
 80155bc:	9814      	ldr	r0, [sp, #80]	; 0x50
 80155be:	ea4c 0c08 	orr.w	ip, ip, r8
 80155c2:	f82a cb02 	strh.w	ip, [sl], #2
 80155c6:	4402      	add	r2, r0
 80155c8:	e7ac      	b.n	8015524 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80155ca:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80155ce:	f04f 0800 	mov.w	r8, #0
 80155d2:	eb03 0008 	add.w	r0, r3, r8
 80155d6:	2800      	cmp	r0, #0
 80155d8:	dc41      	bgt.n	801565e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80155da:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80155de:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80155e2:	9b01      	ldr	r3, [sp, #4]
 80155e4:	2b00      	cmp	r3, #0
 80155e6:	f340 8097 	ble.w	8015718 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80155ea:	ee30 0a04 	vadd.f32	s0, s0, s8
 80155ee:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80155f2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80155f6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80155f8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80155fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015600:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015604:	eef0 6a62 	vmov.f32	s13, s5
 8015608:	ee61 7a27 	vmul.f32	s15, s2, s15
 801560c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015610:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015614:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015618:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801561c:	eef0 6a43 	vmov.f32	s13, s6
 8015620:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015624:	ee12 2a90 	vmov	r2, s5
 8015628:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801562c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015630:	ee13 2a10 	vmov	r2, s6
 8015634:	9313      	str	r3, [sp, #76]	; 0x4c
 8015636:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015638:	fb92 f3f3 	sdiv	r3, r2, r3
 801563c:	9314      	str	r3, [sp, #80]	; 0x50
 801563e:	9b01      	ldr	r3, [sp, #4]
 8015640:	9a05      	ldr	r2, [sp, #20]
 8015642:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015646:	3b01      	subs	r3, #1
 8015648:	9301      	str	r3, [sp, #4]
 801564a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801564e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015650:	eeb0 3a67 	vmov.f32	s6, s15
 8015654:	bf08      	it	eq
 8015656:	4613      	moveq	r3, r2
 8015658:	eef0 2a47 	vmov.f32	s5, s14
 801565c:	e72c      	b.n	80154b8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801565e:	140f      	asrs	r7, r1, #16
 8015660:	d453      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015662:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015666:	42bd      	cmp	r5, r7
 8015668:	dd4f      	ble.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801566a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801566e:	d44c      	bmi.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015670:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015674:	4560      	cmp	r0, ip
 8015676:	dd48      	ble.n	801570a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015678:	9803      	ldr	r0, [sp, #12]
 801567a:	b22d      	sxth	r5, r5
 801567c:	fb0c 0505 	mla	r5, ip, r5, r0
 8015680:	5de8      	ldrb	r0, [r5, r7]
 8015682:	9d04      	ldr	r5, [sp, #16]
 8015684:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015688:	f06f 0501 	mvn.w	r5, #1
 801568c:	fb05 fb08 	mul.w	fp, r5, r8
 8015690:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015694:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015698:	122f      	asrs	r7, r5, #8
 801569a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801569e:	fb17 f706 	smulbb	r7, r7, r6
 80156a2:	ea4f 09e5 	mov.w	r9, r5, asr #3
 80156a6:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80156aa:	00ed      	lsls	r5, r5, #3
 80156ac:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80156b0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80156b4:	10c7      	asrs	r7, r0, #3
 80156b6:	b2ed      	uxtb	r5, r5
 80156b8:	00c0      	lsls	r0, r0, #3
 80156ba:	fb19 f906 	smulbb	r9, r9, r6
 80156be:	fb15 f506 	smulbb	r5, r5, r6
 80156c2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80156c6:	b2c0      	uxtb	r0, r0
 80156c8:	fa1f fc8c 	uxth.w	ip, ip
 80156cc:	fb07 970a 	mla	r7, r7, sl, r9
 80156d0:	fb00 500a 	mla	r0, r0, sl, r5
 80156d4:	b2bf      	uxth	r7, r7
 80156d6:	b280      	uxth	r0, r0
 80156d8:	f10c 0501 	add.w	r5, ip, #1
 80156dc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80156e0:	f107 0901 	add.w	r9, r7, #1
 80156e4:	1c45      	adds	r5, r0, #1
 80156e6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80156ea:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80156ee:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80156f2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80156f6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80156fa:	ea45 0c0c 	orr.w	ip, r5, ip
 80156fe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015702:	ea4c 0c09 	orr.w	ip, ip, r9
 8015706:	f824 c00b 	strh.w	ip, [r4, fp]
 801570a:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801570c:	4401      	add	r1, r0
 801570e:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015710:	f108 38ff 	add.w	r8, r8, #4294967295
 8015714:	4402      	add	r2, r0
 8015716:	e75c      	b.n	80155d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015718:	b007      	add	sp, #28
 801571a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801571e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801571e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015722:	b085      	sub	sp, #20
 8015724:	4693      	mov	fp, r2
 8015726:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015728:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801572a:	6870      	ldr	r0, [r6, #4]
 801572c:	9100      	str	r1, [sp, #0]
 801572e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015732:	fb00 2404 	mla	r4, r0, r4, r2
 8015736:	6832      	ldr	r2, [r6, #0]
 8015738:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801573c:	682a      	ldr	r2, [r5, #0]
 801573e:	9201      	str	r2, [sp, #4]
 8015740:	686a      	ldr	r2, [r5, #4]
 8015742:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015746:	3204      	adds	r2, #4
 8015748:	9202      	str	r2, [sp, #8]
 801574a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801574e:	9a00      	ldr	r2, [sp, #0]
 8015750:	2a00      	cmp	r2, #0
 8015752:	dc03      	bgt.n	801575c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015754:	f1bb 0f00 	cmp.w	fp, #0
 8015758:	f340 80a0 	ble.w	801589c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801575c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801575e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015762:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015766:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801576a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801576c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015770:	2b00      	cmp	r3, #0
 8015772:	dd0c      	ble.n	801578e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015774:	1406      	asrs	r6, r0, #16
 8015776:	d405      	bmi.n	8015784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015778:	454e      	cmp	r6, r9
 801577a:	da03      	bge.n	8015784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801577c:	1416      	asrs	r6, r2, #16
 801577e:	d401      	bmi.n	8015784 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015780:	4546      	cmp	r6, r8
 8015782:	db05      	blt.n	8015790 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015784:	4470      	add	r0, lr
 8015786:	4462      	add	r2, ip
 8015788:	3b01      	subs	r3, #1
 801578a:	3402      	adds	r4, #2
 801578c:	e7f0      	b.n	8015770 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801578e:	d00f      	beq.n	80157b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015790:	1e5e      	subs	r6, r3, #1
 8015792:	fb0e 0706 	mla	r7, lr, r6, r0
 8015796:	143f      	asrs	r7, r7, #16
 8015798:	d541      	bpl.n	801581e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801579a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801579e:	4698      	mov	r8, r3
 80157a0:	9603      	str	r6, [sp, #12]
 80157a2:	f1b8 0f00 	cmp.w	r8, #0
 80157a6:	dc59      	bgt.n	801585c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80157a8:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80157ac:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80157b0:	9b00      	ldr	r3, [sp, #0]
 80157b2:	2b00      	cmp	r3, #0
 80157b4:	dd72      	ble.n	801589c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80157b6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80157ba:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80157be:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80157c2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80157c4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80157c8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80157cc:	eeb0 6a62 	vmov.f32	s12, s5
 80157d0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80157d4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80157d8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80157dc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80157e0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80157e4:	eeb0 6a43 	vmov.f32	s12, s6
 80157e8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80157ec:	ee12 2a90 	vmov	r2, s5
 80157f0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80157f4:	fb92 fef3 	sdiv	lr, r2, r3
 80157f8:	ee13 2a10 	vmov	r2, s6
 80157fc:	fb92 fcf3 	sdiv	ip, r2, r3
 8015800:	9b00      	ldr	r3, [sp, #0]
 8015802:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015806:	3b01      	subs	r3, #1
 8015808:	9300      	str	r3, [sp, #0]
 801580a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 801580e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015810:	eeb0 3a67 	vmov.f32	s6, s15
 8015814:	bf08      	it	eq
 8015816:	465b      	moveq	r3, fp
 8015818:	eef0 2a47 	vmov.f32	s5, s14
 801581c:	e797      	b.n	801574e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801581e:	454f      	cmp	r7, r9
 8015820:	dabb      	bge.n	801579a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015822:	fb0c 2606 	mla	r6, ip, r6, r2
 8015826:	1436      	asrs	r6, r6, #16
 8015828:	d4b7      	bmi.n	801579a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801582a:	4546      	cmp	r6, r8
 801582c:	dab5      	bge.n	801579a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801582e:	461e      	mov	r6, r3
 8015830:	46a0      	mov	r8, r4
 8015832:	2e00      	cmp	r6, #0
 8015834:	ddb8      	ble.n	80157a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015836:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801583a:	9901      	ldr	r1, [sp, #4]
 801583c:	1417      	asrs	r7, r2, #16
 801583e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015842:	fb0a 1707 	mla	r7, sl, r7, r1
 8015846:	9902      	ldr	r1, [sp, #8]
 8015848:	f817 7009 	ldrb.w	r7, [r7, r9]
 801584c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015850:	f828 7b02 	strh.w	r7, [r8], #2
 8015854:	4470      	add	r0, lr
 8015856:	4462      	add	r2, ip
 8015858:	3e01      	subs	r6, #1
 801585a:	e7ea      	b.n	8015832 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801585c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015860:	d417      	bmi.n	8015892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015862:	68ae      	ldr	r6, [r5, #8]
 8015864:	454e      	cmp	r6, r9
 8015866:	dd14      	ble.n	8015892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015868:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801586c:	d411      	bmi.n	8015892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801586e:	68ef      	ldr	r7, [r5, #12]
 8015870:	4557      	cmp	r7, sl
 8015872:	dd0e      	ble.n	8015892 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015874:	9f01      	ldr	r7, [sp, #4]
 8015876:	b236      	sxth	r6, r6
 8015878:	fb0a 7606 	mla	r6, sl, r6, r7
 801587c:	9f02      	ldr	r7, [sp, #8]
 801587e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015882:	f06f 0101 	mvn.w	r1, #1
 8015886:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801588a:	fb01 f608 	mul.w	r6, r1, r8
 801588e:	9903      	ldr	r1, [sp, #12]
 8015890:	538f      	strh	r7, [r1, r6]
 8015892:	4470      	add	r0, lr
 8015894:	4462      	add	r2, ip
 8015896:	f108 38ff 	add.w	r8, r8, #4294967295
 801589a:	e782      	b.n	80157a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801589c:	b005      	add	sp, #20
 801589e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080158a2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80158a2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80158a6:	b087      	sub	sp, #28
 80158a8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80158aa:	9205      	str	r2, [sp, #20]
 80158ac:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80158b0:	9203      	str	r2, [sp, #12]
 80158b2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80158b6:	9102      	str	r1, [sp, #8]
 80158b8:	6861      	ldr	r1, [r4, #4]
 80158ba:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80158be:	fb01 2000 	mla	r0, r1, r0, r2
 80158c2:	6822      	ldr	r2, [r4, #0]
 80158c4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80158c8:	9200      	str	r2, [sp, #0]
 80158ca:	f8dc 2000 	ldr.w	r2, [ip]
 80158ce:	9204      	str	r2, [sp, #16]
 80158d0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80158d4:	3204      	adds	r2, #4
 80158d6:	9201      	str	r2, [sp, #4]
 80158d8:	9a03      	ldr	r2, [sp, #12]
 80158da:	43d5      	mvns	r5, r2
 80158dc:	b2ed      	uxtb	r5, r5
 80158de:	9a02      	ldr	r2, [sp, #8]
 80158e0:	2a00      	cmp	r2, #0
 80158e2:	dc03      	bgt.n	80158ec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80158e4:	9a05      	ldr	r2, [sp, #20]
 80158e6:	2a00      	cmp	r2, #0
 80158e8:	f340 812c 	ble.w	8015b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80158ec:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80158ee:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80158f2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80158f6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80158fa:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80158fc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015900:	2b00      	cmp	r3, #0
 8015902:	dd10      	ble.n	8015926 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015904:	140c      	asrs	r4, r1, #16
 8015906:	d405      	bmi.n	8015914 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015908:	4574      	cmp	r4, lr
 801590a:	da03      	bge.n	8015914 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801590c:	1414      	asrs	r4, r2, #16
 801590e:	d401      	bmi.n	8015914 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015910:	42bc      	cmp	r4, r7
 8015912:	db09      	blt.n	8015928 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015914:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015916:	9800      	ldr	r0, [sp, #0]
 8015918:	4421      	add	r1, r4
 801591a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801591c:	3002      	adds	r0, #2
 801591e:	4422      	add	r2, r4
 8015920:	3b01      	subs	r3, #1
 8015922:	9000      	str	r0, [sp, #0]
 8015924:	e7ec      	b.n	8015900 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015926:	d071      	beq.n	8015a0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015928:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801592a:	1e5c      	subs	r4, r3, #1
 801592c:	fb06 1604 	mla	r6, r6, r4, r1
 8015930:	1436      	asrs	r6, r6, #16
 8015932:	d45d      	bmi.n	80159f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015934:	4576      	cmp	r6, lr
 8015936:	da5b      	bge.n	80159f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015938:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801593a:	fb06 2404 	mla	r4, r6, r4, r2
 801593e:	1424      	asrs	r4, r4, #16
 8015940:	d456      	bmi.n	80159f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015942:	42bc      	cmp	r4, r7
 8015944:	da54      	bge.n	80159f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015946:	f8dd 9000 	ldr.w	r9, [sp]
 801594a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801594e:	4698      	mov	r8, r3
 8015950:	f1b8 0f00 	cmp.w	r8, #0
 8015954:	dd54      	ble.n	8015a00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015956:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801595a:	9804      	ldr	r0, [sp, #16]
 801595c:	1414      	asrs	r4, r2, #16
 801595e:	fb07 0404 	mla	r4, r7, r4, r0
 8015962:	140e      	asrs	r6, r1, #16
 8015964:	9801      	ldr	r0, [sp, #4]
 8015966:	f814 e006 	ldrb.w	lr, [r4, r6]
 801596a:	f8b9 4000 	ldrh.w	r4, [r9]
 801596e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015972:	eb00 0b0e 	add.w	fp, r0, lr
 8015976:	1227      	asrs	r7, r4, #8
 8015978:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801597c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015980:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015984:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015986:	fb16 f60a 	smulbb	r6, r6, sl
 801598a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801598e:	fb07 6705 	mla	r7, r7, r5, r6
 8015992:	10e6      	asrs	r6, r4, #3
 8015994:	00e4      	lsls	r4, r4, #3
 8015996:	b2e4      	uxtb	r4, r4
 8015998:	fb1b fb0a 	smulbb	fp, fp, sl
 801599c:	fb14 f405 	smulbb	r4, r4, r5
 80159a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159a4:	b2bf      	uxth	r7, r7
 80159a6:	fb06 b605 	mla	r6, r6, r5, fp
 80159aa:	fb0e 4e0a 	mla	lr, lr, sl, r4
 80159ae:	b2b6      	uxth	r6, r6
 80159b0:	fa1f fe8e 	uxth.w	lr, lr
 80159b4:	1c7c      	adds	r4, r7, #1
 80159b6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80159ba:	f106 0b01 	add.w	fp, r6, #1
 80159be:	f10e 0401 	add.w	r4, lr, #1
 80159c2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80159c6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80159ca:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80159ce:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80159d2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80159d6:	4327      	orrs	r7, r4
 80159d8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80159dc:	4401      	add	r1, r0
 80159de:	9814      	ldr	r0, [sp, #80]	; 0x50
 80159e0:	ea47 070b 	orr.w	r7, r7, fp
 80159e4:	f829 7b02 	strh.w	r7, [r9], #2
 80159e8:	4402      	add	r2, r0
 80159ea:	f108 38ff 	add.w	r8, r8, #4294967295
 80159ee:	e7af      	b.n	8015950 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80159f0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80159f4:	f04f 0e00 	mov.w	lr, #0
 80159f8:	eb03 040e 	add.w	r4, r3, lr
 80159fc:	2c00      	cmp	r4, #0
 80159fe:	dc43      	bgt.n	8015a88 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8015a00:	9a00      	ldr	r2, [sp, #0]
 8015a02:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015a06:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015a0a:	9300      	str	r3, [sp, #0]
 8015a0c:	9b02      	ldr	r3, [sp, #8]
 8015a0e:	2b00      	cmp	r3, #0
 8015a10:	f340 8098 	ble.w	8015b44 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015a14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015a18:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8015a1c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015a20:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a22:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015a26:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015a2a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015a2e:	eef0 6a62 	vmov.f32	s13, s5
 8015a32:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015a36:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a3a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015a3e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015a42:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015a46:	eef0 6a43 	vmov.f32	s13, s6
 8015a4a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015a4e:	ee12 2a90 	vmov	r2, s5
 8015a52:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015a56:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a5a:	ee13 2a10 	vmov	r2, s6
 8015a5e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015a60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a62:	fb92 f3f3 	sdiv	r3, r2, r3
 8015a66:	9314      	str	r3, [sp, #80]	; 0x50
 8015a68:	9b02      	ldr	r3, [sp, #8]
 8015a6a:	9a05      	ldr	r2, [sp, #20]
 8015a6c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015a70:	3b01      	subs	r3, #1
 8015a72:	9302      	str	r3, [sp, #8]
 8015a74:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015a78:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015a7a:	eeb0 3a67 	vmov.f32	s6, s15
 8015a7e:	bf08      	it	eq
 8015a80:	4613      	moveq	r3, r2
 8015a82:	eef0 2a47 	vmov.f32	s5, s14
 8015a86:	e72a      	b.n	80158de <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015a88:	140f      	asrs	r7, r1, #16
 8015a8a:	d454      	bmi.n	8015b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a8c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015a90:	42be      	cmp	r6, r7
 8015a92:	dd50      	ble.n	8015b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a94:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015a98:	d44d      	bmi.n	8015b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015a9a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8015a9e:	4544      	cmp	r4, r8
 8015aa0:	dd49      	ble.n	8015b36 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015aa2:	9c04      	ldr	r4, [sp, #16]
 8015aa4:	b236      	sxth	r6, r6
 8015aa6:	fb08 4606 	mla	r6, r8, r6, r4
 8015aaa:	f06f 0001 	mvn.w	r0, #1
 8015aae:	f816 8007 	ldrb.w	r8, [r6, r7]
 8015ab2:	9c01      	ldr	r4, [sp, #4]
 8015ab4:	fb00 fa0e 	mul.w	sl, r0, lr
 8015ab8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8015abc:	9800      	ldr	r0, [sp, #0]
 8015abe:	eb04 0b08 	add.w	fp, r4, r8
 8015ac2:	f830 400a 	ldrh.w	r4, [r0, sl]
 8015ac6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8015aca:	9801      	ldr	r0, [sp, #4]
 8015acc:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015ad0:	f810 8008 	ldrb.w	r8, [r0, r8]
 8015ad4:	9800      	ldr	r0, [sp, #0]
 8015ad6:	1227      	asrs	r7, r4, #8
 8015ad8:	fb16 f609 	smulbb	r6, r6, r9
 8015adc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015ae0:	fb07 6705 	mla	r7, r7, r5, r6
 8015ae4:	10e6      	asrs	r6, r4, #3
 8015ae6:	00e4      	lsls	r4, r4, #3
 8015ae8:	b2e4      	uxtb	r4, r4
 8015aea:	fb1b fb09 	smulbb	fp, fp, r9
 8015aee:	fb14 f405 	smulbb	r4, r4, r5
 8015af2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015af6:	b2bf      	uxth	r7, r7
 8015af8:	fb06 b605 	mla	r6, r6, r5, fp
 8015afc:	fb08 4809 	mla	r8, r8, r9, r4
 8015b00:	b2b6      	uxth	r6, r6
 8015b02:	fa1f f888 	uxth.w	r8, r8
 8015b06:	1c7c      	adds	r4, r7, #1
 8015b08:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 8015b0c:	f106 0b01 	add.w	fp, r6, #1
 8015b10:	f108 0401 	add.w	r4, r8, #1
 8015b14:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015b18:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8015b1c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015b20:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015b24:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015b28:	4327      	orrs	r7, r4
 8015b2a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015b2e:	ea47 070b 	orr.w	r7, r7, fp
 8015b32:	f820 700a 	strh.w	r7, [r0, sl]
 8015b36:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015b38:	4401      	add	r1, r0
 8015b3a:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015b3c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015b40:	4402      	add	r2, r0
 8015b42:	e759      	b.n	80159f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015b44:	b007      	add	sp, #28
 8015b46:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08015b4c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015b4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015b50:	b085      	sub	sp, #20
 8015b52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b56:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015b58:	9203      	str	r2, [sp, #12]
 8015b5a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015b5e:	6870      	ldr	r0, [r6, #4]
 8015b60:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015b62:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015b66:	686f      	ldr	r7, [r5, #4]
 8015b68:	9101      	str	r1, [sp, #4]
 8015b6a:	fb00 2404 	mla	r4, r0, r4, r2
 8015b6e:	6832      	ldr	r2, [r6, #0]
 8015b70:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015b74:	682a      	ldr	r2, [r5, #0]
 8015b76:	9202      	str	r2, [sp, #8]
 8015b78:	3704      	adds	r7, #4
 8015b7a:	9a01      	ldr	r2, [sp, #4]
 8015b7c:	2a00      	cmp	r2, #0
 8015b7e:	dc03      	bgt.n	8015b88 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015b80:	9a03      	ldr	r2, [sp, #12]
 8015b82:	2a00      	cmp	r2, #0
 8015b84:	f340 80cc 	ble.w	8015d20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015b88:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b8a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015b8e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015b92:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015b96:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b98:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b9c:	2b00      	cmp	r3, #0
 8015b9e:	dd0d      	ble.n	8015bbc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015ba0:	1406      	asrs	r6, r0, #16
 8015ba2:	d405      	bmi.n	8015bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015ba4:	454e      	cmp	r6, r9
 8015ba6:	da03      	bge.n	8015bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015ba8:	1416      	asrs	r6, r2, #16
 8015baa:	d401      	bmi.n	8015bb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015bac:	4546      	cmp	r6, r8
 8015bae:	db06      	blt.n	8015bbe <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015bb0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 8015bb2:	4460      	add	r0, ip
 8015bb4:	4432      	add	r2, r6
 8015bb6:	3b01      	subs	r3, #1
 8015bb8:	3402      	adds	r4, #2
 8015bba:	e7ef      	b.n	8015b9c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8015bbc:	d00f      	beq.n	8015bde <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015bbe:	1e5e      	subs	r6, r3, #1
 8015bc0:	fb0c 0e06 	mla	lr, ip, r6, r0
 8015bc4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 8015bc8:	d543      	bpl.n	8015c52 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 8015bca:	4698      	mov	r8, r3
 8015bcc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 8015bd0:	f1b8 0f00 	cmp.w	r8, #0
 8015bd4:	dc71      	bgt.n	8015cba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8015bd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015bda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015bde:	9b01      	ldr	r3, [sp, #4]
 8015be0:	2b00      	cmp	r3, #0
 8015be2:	f340 809d 	ble.w	8015d20 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015be6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015bea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015bee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015bf2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bf4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015bf8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015bfc:	eeb0 6a62 	vmov.f32	s12, s5
 8015c00:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015c04:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c08:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015c0c:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015c10:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015c14:	eeb0 6a43 	vmov.f32	s12, s6
 8015c18:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015c1c:	ee12 2a90 	vmov	r2, s5
 8015c20:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015c24:	fb92 fcf3 	sdiv	ip, r2, r3
 8015c28:	ee13 2a10 	vmov	r2, s6
 8015c2c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015c30:	9312      	str	r3, [sp, #72]	; 0x48
 8015c32:	9b01      	ldr	r3, [sp, #4]
 8015c34:	9a03      	ldr	r2, [sp, #12]
 8015c36:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015c3a:	3b01      	subs	r3, #1
 8015c3c:	9301      	str	r3, [sp, #4]
 8015c3e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015c42:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015c44:	eeb0 3a67 	vmov.f32	s6, s15
 8015c48:	bf08      	it	eq
 8015c4a:	4613      	moveq	r3, r2
 8015c4c:	eef0 2a47 	vmov.f32	s5, s14
 8015c50:	e793      	b.n	8015b7a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015c52:	45ce      	cmp	lr, r9
 8015c54:	dab9      	bge.n	8015bca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c56:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015c58:	fb01 2606 	mla	r6, r1, r6, r2
 8015c5c:	1436      	asrs	r6, r6, #16
 8015c5e:	d4b4      	bmi.n	8015bca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c60:	4546      	cmp	r6, r8
 8015c62:	dab2      	bge.n	8015bca <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015c64:	4698      	mov	r8, r3
 8015c66:	46a2      	mov	sl, r4
 8015c68:	f1b8 0f00 	cmp.w	r8, #0
 8015c6c:	ddb3      	ble.n	8015bd6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015c6e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015c72:	9902      	ldr	r1, [sp, #8]
 8015c74:	1416      	asrs	r6, r2, #16
 8015c76:	fb09 1606 	mla	r6, r9, r6, r1
 8015c7a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8015c7e:	492a      	ldr	r1, [pc, #168]	; (8015d28 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015c80:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015c84:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015c88:	eb07 0b0e 	add.w	fp, r7, lr
 8015c8c:	4460      	add	r0, ip
 8015c8e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015c92:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015c96:	00f6      	lsls	r6, r6, #3
 8015c98:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8015c9c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015ca0:	ea49 0606 	orr.w	r6, r9, r6
 8015ca4:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015ca8:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015caa:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8015cae:	f82a 6b02 	strh.w	r6, [sl], #2
 8015cb2:	440a      	add	r2, r1
 8015cb4:	f108 38ff 	add.w	r8, r8, #4294967295
 8015cb8:	e7d6      	b.n	8015c68 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8015cba:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015cbe:	d429      	bmi.n	8015d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015cc0:	68ae      	ldr	r6, [r5, #8]
 8015cc2:	454e      	cmp	r6, r9
 8015cc4:	dd26      	ble.n	8015d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015cc6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 8015cca:	d423      	bmi.n	8015d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015ccc:	68e9      	ldr	r1, [r5, #12]
 8015cce:	4559      	cmp	r1, fp
 8015cd0:	dd20      	ble.n	8015d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8015cd2:	9902      	ldr	r1, [sp, #8]
 8015cd4:	fa0f fe86 	sxth.w	lr, r6
 8015cd8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 8015cdc:	f06f 0101 	mvn.w	r1, #1
 8015ce0:	f81e e009 	ldrb.w	lr, [lr, r9]
 8015ce4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015ce8:	eb07 060e 	add.w	r6, r7, lr
 8015cec:	fb01 f908 	mul.w	r9, r1, r8
 8015cf0:	f896 b002 	ldrb.w	fp, [r6, #2]
 8015cf4:	7876      	ldrb	r6, [r6, #1]
 8015cf6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 8015cfa:	00f6      	lsls	r6, r6, #3
 8015cfc:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 8015d00:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015d04:	ea4b 0606 	orr.w	r6, fp, r6
 8015d08:	f817 b00e 	ldrb.w	fp, [r7, lr]
 8015d0c:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015d10:	f82a 6009 	strh.w	r6, [sl, r9]
 8015d14:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015d16:	4460      	add	r0, ip
 8015d18:	440a      	add	r2, r1
 8015d1a:	f108 38ff 	add.w	r8, r8, #4294967295
 8015d1e:	e757      	b.n	8015bd0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015d20:	b005      	add	sp, #20
 8015d22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015d26:	bf00      	nop
 8015d28:	fffff800 	.word	0xfffff800

08015d2c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d30:	b087      	sub	sp, #28
 8015d32:	468b      	mov	fp, r1
 8015d34:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015d36:	9204      	str	r2, [sp, #16]
 8015d38:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015d3c:	9205      	str	r2, [sp, #20]
 8015d3e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015d42:	6841      	ldr	r1, [r0, #4]
 8015d44:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015d48:	fb01 2404 	mla	r4, r1, r4, r2
 8015d4c:	6802      	ldr	r2, [r0, #0]
 8015d4e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015d52:	f8dc 2000 	ldr.w	r2, [ip]
 8015d56:	9201      	str	r2, [sp, #4]
 8015d58:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8015d5c:	3204      	adds	r2, #4
 8015d5e:	9202      	str	r2, [sp, #8]
 8015d60:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015d64:	f1bb 0f00 	cmp.w	fp, #0
 8015d68:	dc03      	bgt.n	8015d72 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8015d6a:	9a04      	ldr	r2, [sp, #16]
 8015d6c:	2a00      	cmp	r2, #0
 8015d6e:	f340 8138 	ble.w	8015fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015d72:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015d74:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015d78:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8015d7c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015d80:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015d82:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015d86:	2b00      	cmp	r3, #0
 8015d88:	dd0e      	ble.n	8015da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015d8a:	1402      	asrs	r2, r0, #16
 8015d8c:	d405      	bmi.n	8015d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d8e:	42ba      	cmp	r2, r7
 8015d90:	da03      	bge.n	8015d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d92:	140a      	asrs	r2, r1, #16
 8015d94:	d401      	bmi.n	8015d9a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015d96:	42b2      	cmp	r2, r6
 8015d98:	db07      	blt.n	8015daa <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015d9a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015d9c:	4410      	add	r0, r2
 8015d9e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015da0:	3b01      	subs	r3, #1
 8015da2:	4411      	add	r1, r2
 8015da4:	3402      	adds	r4, #2
 8015da6:	e7ee      	b.n	8015d86 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015da8:	d019      	beq.n	8015dde <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8015daa:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015dac:	1e5a      	subs	r2, r3, #1
 8015dae:	fb05 0502 	mla	r5, r5, r2, r0
 8015db2:	142d      	asrs	r5, r5, #16
 8015db4:	d409      	bmi.n	8015dca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015db6:	42bd      	cmp	r5, r7
 8015db8:	da07      	bge.n	8015dca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015dba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015dbc:	fb05 1202 	mla	r2, r5, r2, r1
 8015dc0:	1412      	asrs	r2, r2, #16
 8015dc2:	d402      	bmi.n	8015dca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8015dc4:	42b2      	cmp	r2, r6
 8015dc6:	f2c0 80ac 	blt.w	8015f22 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015dca:	f04f 0e00 	mov.w	lr, #0
 8015dce:	eb03 020e 	add.w	r2, r3, lr
 8015dd2:	2a00      	cmp	r2, #0
 8015dd4:	dc3e      	bgt.n	8015e54 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8015dd6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015dda:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015dde:	f1bb 0f00 	cmp.w	fp, #0
 8015de2:	f340 80fe 	ble.w	8015fe2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015de6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015dea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015dee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015df2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015df4:	f1bb 0b01 	subs.w	fp, fp, #1
 8015df8:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015dfc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e00:	eeb0 6a62 	vmov.f32	s12, s5
 8015e04:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015e08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e0c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015e10:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015e14:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015e18:	eeb0 6a43 	vmov.f32	s12, s6
 8015e1c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015e20:	ee12 2a90 	vmov	r2, s5
 8015e24:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015e28:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e2c:	ee13 2a10 	vmov	r2, s6
 8015e30:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015e34:	9313      	str	r3, [sp, #76]	; 0x4c
 8015e36:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e38:	fb92 f3f3 	sdiv	r3, r2, r3
 8015e3c:	9a04      	ldr	r2, [sp, #16]
 8015e3e:	9314      	str	r3, [sp, #80]	; 0x50
 8015e40:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015e44:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e46:	eeb0 3a67 	vmov.f32	s6, s15
 8015e4a:	bf08      	it	eq
 8015e4c:	4613      	moveq	r3, r2
 8015e4e:	eef0 2a47 	vmov.f32	s5, s14
 8015e52:	e787      	b.n	8015d64 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015e54:	1406      	asrs	r6, r0, #16
 8015e56:	d45d      	bmi.n	8015f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e58:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8015e5c:	42b5      	cmp	r5, r6
 8015e5e:	dd59      	ble.n	8015f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e60:	140f      	asrs	r7, r1, #16
 8015e62:	d457      	bmi.n	8015f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e64:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015e68:	42ba      	cmp	r2, r7
 8015e6a:	dd53      	ble.n	8015f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e6c:	9a01      	ldr	r2, [sp, #4]
 8015e6e:	b22d      	sxth	r5, r5
 8015e70:	fb07 2505 	mla	r5, r7, r5, r2
 8015e74:	5daa      	ldrb	r2, [r5, r6]
 8015e76:	9d02      	ldr	r5, [sp, #8]
 8015e78:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015e7c:	0e2e      	lsrs	r6, r5, #24
 8015e7e:	d049      	beq.n	8015f14 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015e80:	f06f 0201 	mvn.w	r2, #1
 8015e84:	fb02 f20e 	mul.w	r2, r2, lr
 8015e88:	9203      	str	r2, [sp, #12]
 8015e8a:	f834 8002 	ldrh.w	r8, [r4, r2]
 8015e8e:	9a05      	ldr	r2, [sp, #20]
 8015e90:	4356      	muls	r6, r2
 8015e92:	1c72      	adds	r2, r6, #1
 8015e94:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015e98:	1212      	asrs	r2, r2, #8
 8015e9a:	fa1f f982 	uxth.w	r9, r2
 8015e9e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015ea2:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015ea6:	43d2      	mvns	r2, r2
 8015ea8:	b2d2      	uxtb	r2, r2
 8015eaa:	fb16 f609 	smulbb	r6, r6, r9
 8015eae:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015eb2:	fb07 6702 	mla	r7, r7, r2, r6
 8015eb6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015eba:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8015ebe:	b2ed      	uxtb	r5, r5
 8015ec0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015ec4:	fa5f f888 	uxtb.w	r8, r8
 8015ec8:	fb15 f509 	smulbb	r5, r5, r9
 8015ecc:	fb08 5502 	mla	r5, r8, r2, r5
 8015ed0:	b2bf      	uxth	r7, r7
 8015ed2:	fb1a fa09 	smulbb	sl, sl, r9
 8015ed6:	b2ad      	uxth	r5, r5
 8015ed8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015edc:	fb06 a602 	mla	r6, r6, r2, sl
 8015ee0:	1c7a      	adds	r2, r7, #1
 8015ee2:	f105 0a01 	add.w	sl, r5, #1
 8015ee6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015eea:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015eee:	b2b6      	uxth	r6, r6
 8015ef0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015ef4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015ef8:	ea4a 0707 	orr.w	r7, sl, r7
 8015efc:	f106 0a01 	add.w	sl, r6, #1
 8015f00:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015f04:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015f08:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015f0c:	9a03      	ldr	r2, [sp, #12]
 8015f0e:	ea47 070a 	orr.w	r7, r7, sl
 8015f12:	52a7      	strh	r7, [r4, r2]
 8015f14:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015f16:	4410      	add	r0, r2
 8015f18:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015f1a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015f1e:	4411      	add	r1, r2
 8015f20:	e755      	b.n	8015dce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015f22:	f04f 0800 	mov.w	r8, #0
 8015f26:	eba3 0208 	sub.w	r2, r3, r8
 8015f2a:	2a00      	cmp	r2, #0
 8015f2c:	f77f af53 	ble.w	8015dd6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015f30:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015f34:	9f01      	ldr	r7, [sp, #4]
 8015f36:	140a      	asrs	r2, r1, #16
 8015f38:	1405      	asrs	r5, r0, #16
 8015f3a:	fb06 7202 	mla	r2, r6, r2, r7
 8015f3e:	5d52      	ldrb	r2, [r2, r5]
 8015f40:	9d02      	ldr	r5, [sp, #8]
 8015f42:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015f46:	0e2e      	lsrs	r6, r5, #24
 8015f48:	d044      	beq.n	8015fd4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015f4a:	9a05      	ldr	r2, [sp, #20]
 8015f4c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015f50:	4356      	muls	r6, r2
 8015f52:	1c72      	adds	r2, r6, #1
 8015f54:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015f58:	1212      	asrs	r2, r2, #8
 8015f5a:	fa1f f982 	uxth.w	r9, r2
 8015f5e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015f62:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015f66:	43d2      	mvns	r2, r2
 8015f68:	b2d2      	uxtb	r2, r2
 8015f6a:	fb16 f609 	smulbb	r6, r6, r9
 8015f6e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015f72:	fb07 6702 	mla	r7, r7, r2, r6
 8015f76:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015f7a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015f7e:	b2ed      	uxtb	r5, r5
 8015f80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015f84:	fa5f fe8e 	uxtb.w	lr, lr
 8015f88:	fb15 f509 	smulbb	r5, r5, r9
 8015f8c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015f90:	b2bf      	uxth	r7, r7
 8015f92:	fb1a fa09 	smulbb	sl, sl, r9
 8015f96:	b2ad      	uxth	r5, r5
 8015f98:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015f9c:	fb06 a602 	mla	r6, r6, r2, sl
 8015fa0:	1c7a      	adds	r2, r7, #1
 8015fa2:	f105 0a01 	add.w	sl, r5, #1
 8015fa6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015faa:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015fae:	b2b6      	uxth	r6, r6
 8015fb0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015fb4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015fb8:	ea4a 0707 	orr.w	r7, sl, r7
 8015fbc:	f106 0a01 	add.w	sl, r6, #1
 8015fc0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015fc4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015fc8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015fcc:	ea47 070a 	orr.w	r7, r7, sl
 8015fd0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015fd4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015fd6:	4410      	add	r0, r2
 8015fd8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015fda:	f108 0801 	add.w	r8, r8, #1
 8015fde:	4411      	add	r1, r2
 8015fe0:	e7a1      	b.n	8015f26 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015fe2:	b007      	add	sp, #28
 8015fe4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015fe8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015fe8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015fec:	b085      	sub	sp, #20
 8015fee:	468b      	mov	fp, r1
 8015ff0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015ff2:	9203      	str	r2, [sp, #12]
 8015ff4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015ff8:	6841      	ldr	r1, [r0, #4]
 8015ffa:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015ffe:	fb01 2404 	mla	r4, r1, r4, r2
 8016002:	6802      	ldr	r2, [r0, #0]
 8016004:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016008:	f8de 2000 	ldr.w	r2, [lr]
 801600c:	9200      	str	r2, [sp, #0]
 801600e:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016012:	3204      	adds	r2, #4
 8016014:	9201      	str	r2, [sp, #4]
 8016016:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801601a:	f1bb 0f00 	cmp.w	fp, #0
 801601e:	dc03      	bgt.n	8016028 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8016020:	9a03      	ldr	r2, [sp, #12]
 8016022:	2a00      	cmp	r2, #0
 8016024:	f340 8153 	ble.w	80162ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016028:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801602a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801602e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016032:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016036:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016038:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801603c:	2b00      	cmp	r3, #0
 801603e:	dd0e      	ble.n	801605e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016040:	1408      	asrs	r0, r1, #16
 8016042:	d405      	bmi.n	8016050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016044:	42b8      	cmp	r0, r7
 8016046:	da03      	bge.n	8016050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8016048:	1410      	asrs	r0, r2, #16
 801604a:	d401      	bmi.n	8016050 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801604c:	42b0      	cmp	r0, r6
 801604e:	db07      	blt.n	8016060 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8016050:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016052:	4401      	add	r1, r0
 8016054:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016056:	3b01      	subs	r3, #1
 8016058:	4402      	add	r2, r0
 801605a:	3402      	adds	r4, #2
 801605c:	e7ee      	b.n	801603c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801605e:	d017      	beq.n	8016090 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8016060:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016062:	1e58      	subs	r0, r3, #1
 8016064:	fb05 1500 	mla	r5, r5, r0, r1
 8016068:	142d      	asrs	r5, r5, #16
 801606a:	d409      	bmi.n	8016080 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801606c:	42bd      	cmp	r5, r7
 801606e:	da07      	bge.n	8016080 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016070:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016072:	fb05 2000 	mla	r0, r5, r0, r2
 8016076:	1400      	asrs	r0, r0, #16
 8016078:	d402      	bmi.n	8016080 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801607a:	42b0      	cmp	r0, r6
 801607c:	f2c0 80bc 	blt.w	80161f8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8016080:	2600      	movs	r6, #0
 8016082:	1998      	adds	r0, r3, r6
 8016084:	2800      	cmp	r0, #0
 8016086:	dc3e      	bgt.n	8016106 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8016088:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801608c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016090:	f1bb 0f00 	cmp.w	fp, #0
 8016094:	f340 811b 	ble.w	80162ce <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8016098:	ee30 0a04 	vadd.f32	s0, s0, s8
 801609c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80160a0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80160a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160a6:	f1bb 0b01 	subs.w	fp, fp, #1
 80160aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 80160ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80160b2:	eeb0 6a62 	vmov.f32	s12, s5
 80160b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80160ba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160be:	ee77 2a62 	vsub.f32	s5, s14, s5
 80160c2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80160c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80160ca:	eeb0 6a43 	vmov.f32	s12, s6
 80160ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80160d2:	ee12 2a90 	vmov	r2, s5
 80160d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80160da:	fb92 f3f3 	sdiv	r3, r2, r3
 80160de:	ee13 2a10 	vmov	r2, s6
 80160e2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80160e6:	9311      	str	r3, [sp, #68]	; 0x44
 80160e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80160ee:	9a03      	ldr	r2, [sp, #12]
 80160f0:	9312      	str	r3, [sp, #72]	; 0x48
 80160f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80160f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80160f8:	eeb0 3a67 	vmov.f32	s6, s15
 80160fc:	bf08      	it	eq
 80160fe:	4613      	moveq	r3, r2
 8016100:	eef0 2a47 	vmov.f32	s5, s14
 8016104:	e789      	b.n	801601a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016106:	140f      	asrs	r7, r1, #16
 8016108:	d426      	bmi.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801610a:	f8de 5008 	ldr.w	r5, [lr, #8]
 801610e:	42bd      	cmp	r5, r7
 8016110:	dd22      	ble.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016112:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016116:	d41f      	bmi.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016118:	f8de 000c 	ldr.w	r0, [lr, #12]
 801611c:	4560      	cmp	r0, ip
 801611e:	dd1b      	ble.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016120:	9800      	ldr	r0, [sp, #0]
 8016122:	b22d      	sxth	r5, r5
 8016124:	fb0c 0505 	mla	r5, ip, r5, r0
 8016128:	5de8      	ldrb	r0, [r5, r7]
 801612a:	9d01      	ldr	r5, [sp, #4]
 801612c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8016130:	0e07      	lsrs	r7, r0, #24
 8016132:	2fff      	cmp	r7, #255	; 0xff
 8016134:	d116      	bne.n	8016164 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016136:	f06f 0501 	mvn.w	r5, #1
 801613a:	fb05 f706 	mul.w	r7, r5, r6
 801613e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016142:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016146:	0945      	lsrs	r5, r0, #5
 8016148:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801614c:	ea4c 0505 	orr.w	r5, ip, r5
 8016150:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016154:	4305      	orrs	r5, r0
 8016156:	53e5      	strh	r5, [r4, r7]
 8016158:	9811      	ldr	r0, [sp, #68]	; 0x44
 801615a:	4401      	add	r1, r0
 801615c:	9812      	ldr	r0, [sp, #72]	; 0x48
 801615e:	3e01      	subs	r6, #1
 8016160:	4402      	add	r2, r0
 8016162:	e78e      	b.n	8016082 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016164:	b2fd      	uxtb	r5, r7
 8016166:	2f00      	cmp	r7, #0
 8016168:	d0f6      	beq.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 801616a:	f06f 0701 	mvn.w	r7, #1
 801616e:	4377      	muls	r7, r6
 8016170:	fa1f f985 	uxth.w	r9, r5
 8016174:	f834 8007 	ldrh.w	r8, [r4, r7]
 8016178:	9702      	str	r7, [sp, #8]
 801617a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801617e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016182:	43ed      	mvns	r5, r5
 8016184:	b2ed      	uxtb	r5, r5
 8016186:	fb17 f709 	smulbb	r7, r7, r9
 801618a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801618e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016192:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016196:	ea4f 07e8 	mov.w	r7, r8, asr #3
 801619a:	b2c0      	uxtb	r0, r0
 801619c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80161a0:	fa5f f888 	uxtb.w	r8, r8
 80161a4:	fb10 f009 	smulbb	r0, r0, r9
 80161a8:	fb08 0005 	mla	r0, r8, r5, r0
 80161ac:	b280      	uxth	r0, r0
 80161ae:	fa1f fc8c 	uxth.w	ip, ip
 80161b2:	fb1a fa09 	smulbb	sl, sl, r9
 80161b6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80161ba:	fb07 a705 	mla	r7, r7, r5, sl
 80161be:	f100 0a01 	add.w	sl, r0, #1
 80161c2:	f10c 0501 	add.w	r5, ip, #1
 80161c6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80161ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80161ce:	b2bf      	uxth	r7, r7
 80161d0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80161d4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80161d8:	ea4a 0c0c 	orr.w	ip, sl, ip
 80161dc:	f107 0a01 	add.w	sl, r7, #1
 80161e0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80161e4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80161e8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80161ec:	9802      	ldr	r0, [sp, #8]
 80161ee:	ea4c 0c0a 	orr.w	ip, ip, sl
 80161f2:	f824 c000 	strh.w	ip, [r4, r0]
 80161f6:	e7af      	b.n	8016158 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80161f8:	f04f 0800 	mov.w	r8, #0
 80161fc:	eba3 0008 	sub.w	r0, r3, r8
 8016200:	2800      	cmp	r0, #0
 8016202:	f77f af41 	ble.w	8016088 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016206:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 801620a:	9f00      	ldr	r7, [sp, #0]
 801620c:	1410      	asrs	r0, r2, #16
 801620e:	140d      	asrs	r5, r1, #16
 8016210:	fb06 7000 	mla	r0, r6, r0, r7
 8016214:	5d40      	ldrb	r0, [r0, r5]
 8016216:	9d01      	ldr	r5, [sp, #4]
 8016218:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 801621c:	0e2e      	lsrs	r6, r5, #24
 801621e:	2eff      	cmp	r6, #255	; 0xff
 8016220:	d112      	bne.n	8016248 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8016222:	482c      	ldr	r0, [pc, #176]	; (80162d4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8016224:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016228:	0968      	lsrs	r0, r5, #5
 801622a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801622e:	4330      	orrs	r0, r6
 8016230:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016234:	4328      	orrs	r0, r5
 8016236:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 801623a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801623c:	4401      	add	r1, r0
 801623e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016240:	f108 0801 	add.w	r8, r8, #1
 8016244:	4402      	add	r2, r0
 8016246:	e7d9      	b.n	80161fc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016248:	b2f0      	uxtb	r0, r6
 801624a:	2e00      	cmp	r6, #0
 801624c:	d0f5      	beq.n	801623a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801624e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8016252:	fa1f f980 	uxth.w	r9, r0
 8016256:	ea4f 272c 	mov.w	r7, ip, asr #8
 801625a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801625e:	43c0      	mvns	r0, r0
 8016260:	b2c0      	uxtb	r0, r0
 8016262:	fb16 f609 	smulbb	r6, r6, r9
 8016266:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801626a:	fb07 6700 	mla	r7, r7, r0, r6
 801626e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016272:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016276:	b2ed      	uxtb	r5, r5
 8016278:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801627c:	fa5f fc8c 	uxtb.w	ip, ip
 8016280:	fb15 f509 	smulbb	r5, r5, r9
 8016284:	fb0c 5500 	mla	r5, ip, r0, r5
 8016288:	b2bf      	uxth	r7, r7
 801628a:	fb1a fa09 	smulbb	sl, sl, r9
 801628e:	b2ad      	uxth	r5, r5
 8016290:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016294:	fb06 a600 	mla	r6, r6, r0, sl
 8016298:	1c78      	adds	r0, r7, #1
 801629a:	f105 0a01 	add.w	sl, r5, #1
 801629e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80162a2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80162a6:	b2b6      	uxth	r6, r6
 80162a8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80162ac:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80162b0:	ea4a 0707 	orr.w	r7, sl, r7
 80162b4:	f106 0a01 	add.w	sl, r6, #1
 80162b8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80162bc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80162c0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80162c4:	ea47 070a 	orr.w	r7, r7, sl
 80162c8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80162cc:	e7b5      	b.n	801623a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 80162ce:	b005      	add	sp, #20
 80162d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80162d4:	fffff800 	.word	0xfffff800

080162d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80162d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80162dc:	b087      	sub	sp, #28
 80162de:	468b      	mov	fp, r1
 80162e0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 80162e2:	9204      	str	r2, [sp, #16]
 80162e4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80162e8:	9205      	str	r2, [sp, #20]
 80162ea:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80162ee:	6861      	ldr	r1, [r4, #4]
 80162f0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 80162f4:	fb01 2000 	mla	r0, r1, r0, r2
 80162f8:	6822      	ldr	r2, [r4, #0]
 80162fa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80162fe:	f8de 2000 	ldr.w	r2, [lr]
 8016302:	9201      	str	r2, [sp, #4]
 8016304:	f8de 2004 	ldr.w	r2, [lr, #4]
 8016308:	9202      	str	r2, [sp, #8]
 801630a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801630e:	f1bb 0f00 	cmp.w	fp, #0
 8016312:	dc03      	bgt.n	801631c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8016314:	9a04      	ldr	r2, [sp, #16]
 8016316:	2a00      	cmp	r2, #0
 8016318:	f340 8142 	ble.w	80165a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 801631c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801631e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8016322:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8016326:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 801632a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801632c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016330:	2b00      	cmp	r3, #0
 8016332:	dd0e      	ble.n	8016352 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8016334:	140c      	asrs	r4, r1, #16
 8016336:	d405      	bmi.n	8016344 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016338:	42bc      	cmp	r4, r7
 801633a:	da03      	bge.n	8016344 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801633c:	1414      	asrs	r4, r2, #16
 801633e:	d401      	bmi.n	8016344 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016340:	42b4      	cmp	r4, r6
 8016342:	db07      	blt.n	8016354 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8016344:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016346:	4421      	add	r1, r4
 8016348:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801634a:	3b01      	subs	r3, #1
 801634c:	4422      	add	r2, r4
 801634e:	3002      	adds	r0, #2
 8016350:	e7ee      	b.n	8016330 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8016352:	d019      	beq.n	8016388 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8016354:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016356:	1e5c      	subs	r4, r3, #1
 8016358:	fb05 1504 	mla	r5, r5, r4, r1
 801635c:	142d      	asrs	r5, r5, #16
 801635e:	d409      	bmi.n	8016374 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016360:	42bd      	cmp	r5, r7
 8016362:	da07      	bge.n	8016374 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8016364:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016366:	fb05 2404 	mla	r4, r5, r4, r2
 801636a:	1424      	asrs	r4, r4, #16
 801636c:	d402      	bmi.n	8016374 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801636e:	42b4      	cmp	r4, r6
 8016370:	f2c0 80b1 	blt.w	80164d6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8016374:	f04f 0800 	mov.w	r8, #0
 8016378:	eb03 0408 	add.w	r4, r3, r8
 801637c:	2c00      	cmp	r4, #0
 801637e:	dc3e      	bgt.n	80163fe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8016380:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016384:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8016388:	f1bb 0f00 	cmp.w	fp, #0
 801638c:	f340 8108 	ble.w	80165a0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8016390:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016394:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016398:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801639c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801639e:	f1bb 0b01 	subs.w	fp, fp, #1
 80163a2:	ee31 1a05 	vadd.f32	s2, s2, s10
 80163a6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80163aa:	eeb0 6a62 	vmov.f32	s12, s5
 80163ae:	ee61 7a27 	vmul.f32	s15, s2, s15
 80163b2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80163b6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80163ba:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 80163be:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80163c2:	eeb0 6a43 	vmov.f32	s12, s6
 80163c6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80163ca:	ee12 2a90 	vmov	r2, s5
 80163ce:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80163d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80163d6:	ee13 2a10 	vmov	r2, s6
 80163da:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80163de:	9313      	str	r3, [sp, #76]	; 0x4c
 80163e0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163e2:	fb92 f3f3 	sdiv	r3, r2, r3
 80163e6:	9a04      	ldr	r2, [sp, #16]
 80163e8:	9314      	str	r3, [sp, #80]	; 0x50
 80163ea:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 80163ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80163f0:	eeb0 3a67 	vmov.f32	s6, s15
 80163f4:	bf08      	it	eq
 80163f6:	4613      	moveq	r3, r2
 80163f8:	eef0 2a47 	vmov.f32	s5, s14
 80163fc:	e787      	b.n	801630e <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 80163fe:	140e      	asrs	r6, r1, #16
 8016400:	d462      	bmi.n	80164c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016402:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016406:	42b5      	cmp	r5, r6
 8016408:	dd5e      	ble.n	80164c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801640a:	1417      	asrs	r7, r2, #16
 801640c:	d45c      	bmi.n	80164c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801640e:	f8de 400c 	ldr.w	r4, [lr, #12]
 8016412:	42bc      	cmp	r4, r7
 8016414:	dd58      	ble.n	80164c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016416:	b22d      	sxth	r5, r5
 8016418:	fb07 6505 	mla	r5, r7, r5, r6
 801641c:	9c02      	ldr	r4, [sp, #8]
 801641e:	5d66      	ldrb	r6, [r4, r5]
 8016420:	2e00      	cmp	r6, #0
 8016422:	d051      	beq.n	80164c8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8016424:	9c01      	ldr	r4, [sp, #4]
 8016426:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 801642a:	f06f 0401 	mvn.w	r4, #1
 801642e:	fb04 f408 	mul.w	r4, r4, r8
 8016432:	9403      	str	r4, [sp, #12]
 8016434:	5b05      	ldrh	r5, [r0, r4]
 8016436:	9c05      	ldr	r4, [sp, #20]
 8016438:	4366      	muls	r6, r4
 801643a:	1c74      	adds	r4, r6, #1
 801643c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8016440:	1224      	asrs	r4, r4, #8
 8016442:	b2a7      	uxth	r7, r4
 8016444:	122e      	asrs	r6, r5, #8
 8016446:	43e4      	mvns	r4, r4
 8016448:	b2e4      	uxtb	r4, r4
 801644a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 801644e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8016452:	fb16 f604 	smulbb	r6, r6, r4
 8016456:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801645a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801645e:	00ed      	lsls	r5, r5, #3
 8016460:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016464:	b2ed      	uxtb	r5, r5
 8016466:	ea4f 06e9 	mov.w	r6, r9, asr #3
 801646a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 801646e:	fb15 f504 	smulbb	r5, r5, r4
 8016472:	fa5f f989 	uxtb.w	r9, r9
 8016476:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 801647a:	fb09 5507 	mla	r5, r9, r7, r5
 801647e:	fb1a fa04 	smulbb	sl, sl, r4
 8016482:	fa1f fc8c 	uxth.w	ip, ip
 8016486:	b2ad      	uxth	r5, r5
 8016488:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801648c:	fb06 a607 	mla	r6, r6, r7, sl
 8016490:	f10c 0401 	add.w	r4, ip, #1
 8016494:	f105 0a01 	add.w	sl, r5, #1
 8016498:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801649c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80164a0:	b2b6      	uxth	r6, r6
 80164a2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80164a6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80164aa:	ea4a 0c0c 	orr.w	ip, sl, ip
 80164ae:	f106 0a01 	add.w	sl, r6, #1
 80164b2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80164b6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80164ba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80164be:	9c03      	ldr	r4, [sp, #12]
 80164c0:	ea4c 0c0a 	orr.w	ip, ip, sl
 80164c4:	f820 c004 	strh.w	ip, [r0, r4]
 80164c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80164ca:	4421      	add	r1, r4
 80164cc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80164ce:	f108 38ff 	add.w	r8, r8, #4294967295
 80164d2:	4422      	add	r2, r4
 80164d4:	e750      	b.n	8016378 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80164d6:	f04f 0900 	mov.w	r9, #0
 80164da:	eba3 0409 	sub.w	r4, r3, r9
 80164de:	2c00      	cmp	r4, #0
 80164e0:	f77f af4e 	ble.w	8016380 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80164e4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80164e8:	140d      	asrs	r5, r1, #16
 80164ea:	1414      	asrs	r4, r2, #16
 80164ec:	fb06 5404 	mla	r4, r6, r4, r5
 80164f0:	9d02      	ldr	r5, [sp, #8]
 80164f2:	5d2e      	ldrb	r6, [r5, r4]
 80164f4:	2e00      	cmp	r6, #0
 80164f6:	d04c      	beq.n	8016592 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 80164f8:	9d01      	ldr	r5, [sp, #4]
 80164fa:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 80164fe:	9c05      	ldr	r4, [sp, #20]
 8016500:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8016504:	4366      	muls	r6, r4
 8016506:	1c74      	adds	r4, r6, #1
 8016508:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 801650c:	1224      	asrs	r4, r4, #8
 801650e:	b2a7      	uxth	r7, r4
 8016510:	122e      	asrs	r6, r5, #8
 8016512:	43e4      	mvns	r4, r4
 8016514:	b2e4      	uxtb	r4, r4
 8016516:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801651a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801651e:	fb16 f604 	smulbb	r6, r6, r4
 8016522:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016526:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801652a:	00ed      	lsls	r5, r5, #3
 801652c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016530:	b2ed      	uxtb	r5, r5
 8016532:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016536:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801653a:	fb15 f504 	smulbb	r5, r5, r4
 801653e:	fa5f f888 	uxtb.w	r8, r8
 8016542:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016546:	fb08 5507 	mla	r5, r8, r7, r5
 801654a:	fb1a fa04 	smulbb	sl, sl, r4
 801654e:	fa1f fc8c 	uxth.w	ip, ip
 8016552:	b2ad      	uxth	r5, r5
 8016554:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016558:	fb06 a607 	mla	r6, r6, r7, sl
 801655c:	f10c 0401 	add.w	r4, ip, #1
 8016560:	f105 0a01 	add.w	sl, r5, #1
 8016564:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016568:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801656c:	b2b6      	uxth	r6, r6
 801656e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016572:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016576:	ea4a 0c0c 	orr.w	ip, sl, ip
 801657a:	f106 0a01 	add.w	sl, r6, #1
 801657e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016582:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016586:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801658a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801658e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016592:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016594:	4421      	add	r1, r4
 8016596:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016598:	f109 0901 	add.w	r9, r9, #1
 801659c:	4422      	add	r2, r4
 801659e:	e79c      	b.n	80164da <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 80165a0:	b007      	add	sp, #28
 80165a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165aa:	b085      	sub	sp, #20
 80165ac:	468b      	mov	fp, r1
 80165ae:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80165b0:	9203      	str	r2, [sp, #12]
 80165b2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80165b6:	6861      	ldr	r1, [r4, #4]
 80165b8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80165bc:	fb01 2000 	mla	r0, r1, r0, r2
 80165c0:	6822      	ldr	r2, [r4, #0]
 80165c2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80165c6:	f8d8 2000 	ldr.w	r2, [r8]
 80165ca:	9200      	str	r2, [sp, #0]
 80165cc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80165d0:	9201      	str	r2, [sp, #4]
 80165d2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80165d6:	f1bb 0f00 	cmp.w	fp, #0
 80165da:	dc03      	bgt.n	80165e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80165dc:	9a03      	ldr	r2, [sp, #12]
 80165de:	2a00      	cmp	r2, #0
 80165e0:	f340 8146 	ble.w	8016870 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80165e4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80165e6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80165ea:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80165ee:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80165f2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80165f4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80165f8:	2b00      	cmp	r3, #0
 80165fa:	dd0e      	ble.n	801661a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80165fc:	140c      	asrs	r4, r1, #16
 80165fe:	d405      	bmi.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016600:	42bc      	cmp	r4, r7
 8016602:	da03      	bge.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016604:	1414      	asrs	r4, r2, #16
 8016606:	d401      	bmi.n	801660c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016608:	42b4      	cmp	r4, r6
 801660a:	db07      	blt.n	801661c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801660c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801660e:	4421      	add	r1, r4
 8016610:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016612:	3b01      	subs	r3, #1
 8016614:	4422      	add	r2, r4
 8016616:	3002      	adds	r0, #2
 8016618:	e7ee      	b.n	80165f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801661a:	d017      	beq.n	801664c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801661c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801661e:	1e5c      	subs	r4, r3, #1
 8016620:	fb05 1504 	mla	r5, r5, r4, r1
 8016624:	142d      	asrs	r5, r5, #16
 8016626:	d409      	bmi.n	801663c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016628:	42bd      	cmp	r5, r7
 801662a:	da07      	bge.n	801663c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801662c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801662e:	fb05 2404 	mla	r4, r5, r4, r2
 8016632:	1424      	asrs	r4, r4, #16
 8016634:	d402      	bmi.n	801663c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016636:	42b4      	cmp	r4, r6
 8016638:	f2c0 80b3 	blt.w	80167a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801663c:	2600      	movs	r6, #0
 801663e:	199c      	adds	r4, r3, r6
 8016640:	2c00      	cmp	r4, #0
 8016642:	dc3e      	bgt.n	80166c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016644:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016648:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801664c:	f1bb 0f00 	cmp.w	fp, #0
 8016650:	f340 810e 	ble.w	8016870 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016654:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016658:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801665c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016660:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016662:	f1bb 0b01 	subs.w	fp, fp, #1
 8016666:	ee31 1a05 	vadd.f32	s2, s2, s10
 801666a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801666e:	eeb0 6a62 	vmov.f32	s12, s5
 8016672:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016676:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801667a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801667e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016682:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016686:	eeb0 6a43 	vmov.f32	s12, s6
 801668a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801668e:	ee12 2a90 	vmov	r2, s5
 8016692:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016696:	fb92 f3f3 	sdiv	r3, r2, r3
 801669a:	ee13 2a10 	vmov	r2, s6
 801669e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166a2:	9311      	str	r3, [sp, #68]	; 0x44
 80166a4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166a6:	fb92 f3f3 	sdiv	r3, r2, r3
 80166aa:	9a03      	ldr	r2, [sp, #12]
 80166ac:	9312      	str	r3, [sp, #72]	; 0x48
 80166ae:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80166b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166b4:	eeb0 3a67 	vmov.f32	s6, s15
 80166b8:	bf08      	it	eq
 80166ba:	4613      	moveq	r3, r2
 80166bc:	eef0 2a47 	vmov.f32	s5, s14
 80166c0:	e789      	b.n	80165d6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80166c2:	140f      	asrs	r7, r1, #16
 80166c4:	d418      	bmi.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80166c6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80166ca:	42bd      	cmp	r5, r7
 80166cc:	dd14      	ble.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80166ce:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80166d2:	d411      	bmi.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80166d4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80166d8:	4564      	cmp	r4, ip
 80166da:	dd0d      	ble.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80166dc:	b22d      	sxth	r5, r5
 80166de:	fb0c 7505 	mla	r5, ip, r5, r7
 80166e2:	9c01      	ldr	r4, [sp, #4]
 80166e4:	5d64      	ldrb	r4, [r4, r5]
 80166e6:	2cff      	cmp	r4, #255	; 0xff
 80166e8:	d10c      	bne.n	8016704 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80166ea:	9c00      	ldr	r4, [sp, #0]
 80166ec:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80166f0:	f06f 0401 	mvn.w	r4, #1
 80166f4:	4374      	muls	r4, r6
 80166f6:	5305      	strh	r5, [r0, r4]
 80166f8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80166fa:	4421      	add	r1, r4
 80166fc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80166fe:	3e01      	subs	r6, #1
 8016700:	4422      	add	r2, r4
 8016702:	e79c      	b.n	801663e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016704:	2c00      	cmp	r4, #0
 8016706:	d0f7      	beq.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016708:	9f00      	ldr	r7, [sp, #0]
 801670a:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 801670e:	f06f 0501 	mvn.w	r5, #1
 8016712:	4375      	muls	r5, r6
 8016714:	9502      	str	r5, [sp, #8]
 8016716:	5b45      	ldrh	r5, [r0, r5]
 8016718:	fa1f fc84 	uxth.w	ip, r4
 801671c:	122f      	asrs	r7, r5, #8
 801671e:	43e4      	mvns	r4, r4
 8016720:	b2e4      	uxtb	r4, r4
 8016722:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016726:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801672a:	fb17 f704 	smulbb	r7, r7, r4
 801672e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016732:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016736:	00ed      	lsls	r5, r5, #3
 8016738:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801673c:	b2ed      	uxtb	r5, r5
 801673e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8016742:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016746:	fb15 f504 	smulbb	r5, r5, r4
 801674a:	fa5f f989 	uxtb.w	r9, r9
 801674e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016752:	fb09 550c 	mla	r5, r9, ip, r5
 8016756:	fb1a fa04 	smulbb	sl, sl, r4
 801675a:	fa1f fe8e 	uxth.w	lr, lr
 801675e:	b2ad      	uxth	r5, r5
 8016760:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016764:	fb07 a70c 	mla	r7, r7, ip, sl
 8016768:	f10e 0401 	add.w	r4, lr, #1
 801676c:	f105 0a01 	add.w	sl, r5, #1
 8016770:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8016774:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016778:	b2bf      	uxth	r7, r7
 801677a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801677e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016782:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016786:	f107 0a01 	add.w	sl, r7, #1
 801678a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801678e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016792:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016796:	9c02      	ldr	r4, [sp, #8]
 8016798:	ea4e 0e0a 	orr.w	lr, lr, sl
 801679c:	f820 e004 	strh.w	lr, [r0, r4]
 80167a0:	e7aa      	b.n	80166f8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80167a2:	f04f 0900 	mov.w	r9, #0
 80167a6:	eba3 0409 	sub.w	r4, r3, r9
 80167aa:	2c00      	cmp	r4, #0
 80167ac:	f77f af4a 	ble.w	8016644 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80167b0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80167b4:	1414      	asrs	r4, r2, #16
 80167b6:	140d      	asrs	r5, r1, #16
 80167b8:	fb06 5504 	mla	r5, r6, r4, r5
 80167bc:	9c01      	ldr	r4, [sp, #4]
 80167be:	5d64      	ldrb	r4, [r4, r5]
 80167c0:	2cff      	cmp	r4, #255	; 0xff
 80167c2:	d10b      	bne.n	80167dc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80167c4:	9c00      	ldr	r4, [sp, #0]
 80167c6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80167ca:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80167ce:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80167d0:	4421      	add	r1, r4
 80167d2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80167d4:	f109 0901 	add.w	r9, r9, #1
 80167d8:	4422      	add	r2, r4
 80167da:	e7e4      	b.n	80167a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80167dc:	2c00      	cmp	r4, #0
 80167de:	d0f6      	beq.n	80167ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80167e0:	9e00      	ldr	r6, [sp, #0]
 80167e2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80167e6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80167ea:	b2a7      	uxth	r7, r4
 80167ec:	122e      	asrs	r6, r5, #8
 80167ee:	43e4      	mvns	r4, r4
 80167f0:	b2e4      	uxtb	r4, r4
 80167f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80167f6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80167fa:	fb16 f604 	smulbb	r6, r6, r4
 80167fe:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016802:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016806:	00ed      	lsls	r5, r5, #3
 8016808:	fb0c 6c07 	mla	ip, ip, r7, r6
 801680c:	b2ed      	uxtb	r5, r5
 801680e:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016812:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016816:	fb15 f504 	smulbb	r5, r5, r4
 801681a:	fa5f fe8e 	uxtb.w	lr, lr
 801681e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016822:	fb0e 5507 	mla	r5, lr, r7, r5
 8016826:	fb1a fa04 	smulbb	sl, sl, r4
 801682a:	fa1f fc8c 	uxth.w	ip, ip
 801682e:	b2ad      	uxth	r5, r5
 8016830:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016834:	fb06 a607 	mla	r6, r6, r7, sl
 8016838:	f10c 0401 	add.w	r4, ip, #1
 801683c:	f105 0a01 	add.w	sl, r5, #1
 8016840:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016844:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016848:	b2b6      	uxth	r6, r6
 801684a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801684e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016852:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016856:	f106 0a01 	add.w	sl, r6, #1
 801685a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801685e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016862:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016866:	ea4c 0c0a 	orr.w	ip, ip, sl
 801686a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801686e:	e7ae      	b.n	80167ce <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016870:	b005      	add	sp, #20
 8016872:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016876 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016876:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801687a:	b085      	sub	sp, #20
 801687c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801687e:	9203      	str	r2, [sp, #12]
 8016880:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016884:	9201      	str	r2, [sp, #4]
 8016886:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801688a:	9100      	str	r1, [sp, #0]
 801688c:	6841      	ldr	r1, [r0, #4]
 801688e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016892:	fb01 2404 	mla	r4, r1, r4, r2
 8016896:	6802      	ldr	r2, [r0, #0]
 8016898:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801689c:	f8de 2000 	ldr.w	r2, [lr]
 80168a0:	9202      	str	r2, [sp, #8]
 80168a2:	9a01      	ldr	r2, [sp, #4]
 80168a4:	43d6      	mvns	r6, r2
 80168a6:	b2f6      	uxtb	r6, r6
 80168a8:	9a00      	ldr	r2, [sp, #0]
 80168aa:	2a00      	cmp	r2, #0
 80168ac:	dc03      	bgt.n	80168b6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 80168ae:	9a03      	ldr	r2, [sp, #12]
 80168b0:	2a00      	cmp	r2, #0
 80168b2:	f340 8124 	ble.w	8016afe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80168b6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80168b8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80168bc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80168c0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80168c4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80168c6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80168ca:	2b00      	cmp	r3, #0
 80168cc:	dd0e      	ble.n	80168ec <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80168ce:	1408      	asrs	r0, r1, #16
 80168d0:	d405      	bmi.n	80168de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80168d2:	4560      	cmp	r0, ip
 80168d4:	da03      	bge.n	80168de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80168d6:	1410      	asrs	r0, r2, #16
 80168d8:	d401      	bmi.n	80168de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80168da:	42b8      	cmp	r0, r7
 80168dc:	db07      	blt.n	80168ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80168de:	9811      	ldr	r0, [sp, #68]	; 0x44
 80168e0:	4401      	add	r1, r0
 80168e2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80168e4:	3b01      	subs	r3, #1
 80168e6:	4402      	add	r2, r0
 80168e8:	3402      	adds	r4, #2
 80168ea:	e7ee      	b.n	80168ca <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80168ec:	d06e      	beq.n	80169cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80168ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80168f0:	1e58      	subs	r0, r3, #1
 80168f2:	fb05 1500 	mla	r5, r5, r0, r1
 80168f6:	142d      	asrs	r5, r5, #16
 80168f8:	d45c      	bmi.n	80169b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168fa:	4565      	cmp	r5, ip
 80168fc:	da5a      	bge.n	80169b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80168fe:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016900:	fb05 2000 	mla	r0, r5, r0, r2
 8016904:	1400      	asrs	r0, r0, #16
 8016906:	d455      	bmi.n	80169b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8016908:	42b8      	cmp	r0, r7
 801690a:	da53      	bge.n	80169b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801690c:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016910:	4699      	mov	r9, r3
 8016912:	46a2      	mov	sl, r4
 8016914:	f1b9 0f00 	cmp.w	r9, #0
 8016918:	dd54      	ble.n	80169c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801691a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801691e:	140d      	asrs	r5, r1, #16
 8016920:	1410      	asrs	r0, r2, #16
 8016922:	fb07 5000 	mla	r0, r7, r0, r5
 8016926:	9d02      	ldr	r5, [sp, #8]
 8016928:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801692c:	f8ba 5000 	ldrh.w	r5, [sl]
 8016930:	122f      	asrs	r7, r5, #8
 8016932:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016936:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801693a:	fb17 f706 	smulbb	r7, r7, r6
 801693e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016942:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016946:	00ed      	lsls	r5, r5, #3
 8016948:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801694c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016950:	10c7      	asrs	r7, r0, #3
 8016952:	b2ed      	uxtb	r5, r5
 8016954:	00c0      	lsls	r0, r0, #3
 8016956:	fb18 f806 	smulbb	r8, r8, r6
 801695a:	fb15 f506 	smulbb	r5, r5, r6
 801695e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016962:	b2c0      	uxtb	r0, r0
 8016964:	fa1f fc8c 	uxth.w	ip, ip
 8016968:	fb07 870b 	mla	r7, r7, fp, r8
 801696c:	fb00 500b 	mla	r0, r0, fp, r5
 8016970:	b280      	uxth	r0, r0
 8016972:	b2bf      	uxth	r7, r7
 8016974:	f10c 0501 	add.w	r5, ip, #1
 8016978:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801697c:	f107 0801 	add.w	r8, r7, #1
 8016980:	1c45      	adds	r5, r0, #1
 8016982:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016986:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801698a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801698c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016990:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016994:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016998:	ea45 0c0c 	orr.w	ip, r5, ip
 801699c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80169a0:	4401      	add	r1, r0
 80169a2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80169a4:	ea4c 0c08 	orr.w	ip, ip, r8
 80169a8:	f82a cb02 	strh.w	ip, [sl], #2
 80169ac:	4402      	add	r2, r0
 80169ae:	f109 39ff 	add.w	r9, r9, #4294967295
 80169b2:	e7af      	b.n	8016914 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80169b4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80169b8:	f04f 0800 	mov.w	r8, #0
 80169bc:	eb03 0008 	add.w	r0, r3, r8
 80169c0:	2800      	cmp	r0, #0
 80169c2:	dc41      	bgt.n	8016a48 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80169c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80169c8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80169cc:	9b00      	ldr	r3, [sp, #0]
 80169ce:	2b00      	cmp	r3, #0
 80169d0:	f340 8095 	ble.w	8016afe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80169d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80169d8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80169dc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80169e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80169e2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80169e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80169ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80169ee:	eef0 6a62 	vmov.f32	s13, s5
 80169f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80169f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80169fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 80169fe:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 8016a02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016a06:	eef0 6a43 	vmov.f32	s13, s6
 8016a0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016a0e:	ee12 2a90 	vmov	r2, s5
 8016a12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016a16:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a1a:	ee13 2a10 	vmov	r2, s6
 8016a1e:	9311      	str	r3, [sp, #68]	; 0x44
 8016a20:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a22:	fb92 f3f3 	sdiv	r3, r2, r3
 8016a26:	9312      	str	r3, [sp, #72]	; 0x48
 8016a28:	9b00      	ldr	r3, [sp, #0]
 8016a2a:	9a03      	ldr	r2, [sp, #12]
 8016a2c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016a30:	3b01      	subs	r3, #1
 8016a32:	9300      	str	r3, [sp, #0]
 8016a34:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016a38:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016a3a:	eeb0 3a67 	vmov.f32	s6, s15
 8016a3e:	bf08      	it	eq
 8016a40:	4613      	moveq	r3, r2
 8016a42:	eef0 2a47 	vmov.f32	s5, s14
 8016a46:	e72f      	b.n	80168a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016a48:	140f      	asrs	r7, r1, #16
 8016a4a:	d451      	bmi.n	8016af0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a4c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016a50:	42bd      	cmp	r5, r7
 8016a52:	dd4d      	ble.n	8016af0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a54:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016a58:	d44a      	bmi.n	8016af0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a5a:	f8de 000c 	ldr.w	r0, [lr, #12]
 8016a5e:	4560      	cmp	r0, ip
 8016a60:	dd46      	ble.n	8016af0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016a62:	b22d      	sxth	r5, r5
 8016a64:	fb0c 7505 	mla	r5, ip, r5, r7
 8016a68:	9802      	ldr	r0, [sp, #8]
 8016a6a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8016a6e:	f06f 0501 	mvn.w	r5, #1
 8016a72:	fb05 fb08 	mul.w	fp, r5, r8
 8016a76:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016a7a:	f834 500b 	ldrh.w	r5, [r4, fp]
 8016a7e:	122f      	asrs	r7, r5, #8
 8016a80:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016a84:	fb17 f706 	smulbb	r7, r7, r6
 8016a88:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8016a8c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016a90:	00ed      	lsls	r5, r5, #3
 8016a92:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016a96:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8016a9a:	10c7      	asrs	r7, r0, #3
 8016a9c:	b2ed      	uxtb	r5, r5
 8016a9e:	00c0      	lsls	r0, r0, #3
 8016aa0:	fb19 f906 	smulbb	r9, r9, r6
 8016aa4:	fb15 f506 	smulbb	r5, r5, r6
 8016aa8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016aac:	b2c0      	uxtb	r0, r0
 8016aae:	fa1f fc8c 	uxth.w	ip, ip
 8016ab2:	fb07 970a 	mla	r7, r7, sl, r9
 8016ab6:	fb00 500a 	mla	r0, r0, sl, r5
 8016aba:	b2bf      	uxth	r7, r7
 8016abc:	b280      	uxth	r0, r0
 8016abe:	f10c 0501 	add.w	r5, ip, #1
 8016ac2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016ac6:	f107 0901 	add.w	r9, r7, #1
 8016aca:	1c45      	adds	r5, r0, #1
 8016acc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016ad0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8016ad4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016ad8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016adc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8016ae0:	ea45 0c0c 	orr.w	ip, r5, ip
 8016ae4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8016ae8:	ea4c 0c09 	orr.w	ip, ip, r9
 8016aec:	f824 c00b 	strh.w	ip, [r4, fp]
 8016af0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016af2:	4401      	add	r1, r0
 8016af4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016af6:	f108 38ff 	add.w	r8, r8, #4294967295
 8016afa:	4402      	add	r2, r0
 8016afc:	e75e      	b.n	80169bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 8016afe:	b005      	add	sp, #20
 8016b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016b04 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016b04:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016b08:	b085      	sub	sp, #20
 8016b0a:	4693      	mov	fp, r2
 8016b0c:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8016b0e:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016b10:	6870      	ldr	r0, [r6, #4]
 8016b12:	9101      	str	r1, [sp, #4]
 8016b14:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016b18:	fb00 2404 	mla	r4, r0, r4, r2
 8016b1c:	6832      	ldr	r2, [r6, #0]
 8016b1e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016b22:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016b26:	682a      	ldr	r2, [r5, #0]
 8016b28:	9202      	str	r2, [sp, #8]
 8016b2a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016b2e:	9a01      	ldr	r2, [sp, #4]
 8016b30:	2a00      	cmp	r2, #0
 8016b32:	dc03      	bgt.n	8016b3c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016b34:	f1bb 0f00 	cmp.w	fp, #0
 8016b38:	f340 809a 	ble.w	8016c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016b3c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016b3e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016b42:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016b46:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016b4a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016b4c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016b50:	2b00      	cmp	r3, #0
 8016b52:	dd0c      	ble.n	8016b6e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016b54:	1406      	asrs	r6, r0, #16
 8016b56:	d405      	bmi.n	8016b64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b58:	454e      	cmp	r6, r9
 8016b5a:	da03      	bge.n	8016b64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b5c:	1416      	asrs	r6, r2, #16
 8016b5e:	d401      	bmi.n	8016b64 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016b60:	4546      	cmp	r6, r8
 8016b62:	db05      	blt.n	8016b70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016b64:	4470      	add	r0, lr
 8016b66:	4462      	add	r2, ip
 8016b68:	3b01      	subs	r3, #1
 8016b6a:	3402      	adds	r4, #2
 8016b6c:	e7f0      	b.n	8016b50 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016b6e:	d00f      	beq.n	8016b90 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016b70:	1e5e      	subs	r6, r3, #1
 8016b72:	fb0e 0706 	mla	r7, lr, r6, r0
 8016b76:	143f      	asrs	r7, r7, #16
 8016b78:	d541      	bpl.n	8016bfe <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8016b7a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8016b7e:	4698      	mov	r8, r3
 8016b80:	9603      	str	r6, [sp, #12]
 8016b82:	f1b8 0f00 	cmp.w	r8, #0
 8016b86:	dc56      	bgt.n	8016c36 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016b88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016b8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016b90:	9b01      	ldr	r3, [sp, #4]
 8016b92:	2b00      	cmp	r3, #0
 8016b94:	dd6c      	ble.n	8016c70 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016b96:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b9a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b9e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016ba2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016ba4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016ba8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016bac:	eeb0 6a62 	vmov.f32	s12, s5
 8016bb0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016bb4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016bb8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016bbc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016bc0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016bc4:	eeb0 6a43 	vmov.f32	s12, s6
 8016bc8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016bcc:	ee12 2a90 	vmov	r2, s5
 8016bd0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016bd4:	fb92 fef3 	sdiv	lr, r2, r3
 8016bd8:	ee13 2a10 	vmov	r2, s6
 8016bdc:	fb92 fcf3 	sdiv	ip, r2, r3
 8016be0:	9b01      	ldr	r3, [sp, #4]
 8016be2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016be6:	3b01      	subs	r3, #1
 8016be8:	9301      	str	r3, [sp, #4]
 8016bea:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016bee:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016bf0:	eeb0 3a67 	vmov.f32	s6, s15
 8016bf4:	bf08      	it	eq
 8016bf6:	465b      	moveq	r3, fp
 8016bf8:	eef0 2a47 	vmov.f32	s5, s14
 8016bfc:	e797      	b.n	8016b2e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016bfe:	454f      	cmp	r7, r9
 8016c00:	dabb      	bge.n	8016b7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016c02:	fb0c 2606 	mla	r6, ip, r6, r2
 8016c06:	1436      	asrs	r6, r6, #16
 8016c08:	d4b7      	bmi.n	8016b7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016c0a:	4546      	cmp	r6, r8
 8016c0c:	dab5      	bge.n	8016b7a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016c0e:	461e      	mov	r6, r3
 8016c10:	46a0      	mov	r8, r4
 8016c12:	2e00      	cmp	r6, #0
 8016c14:	ddb8      	ble.n	8016b88 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016c16:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8016c1a:	9902      	ldr	r1, [sp, #8]
 8016c1c:	1417      	asrs	r7, r2, #16
 8016c1e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016c22:	fb0a 9707 	mla	r7, sl, r7, r9
 8016c26:	4470      	add	r0, lr
 8016c28:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8016c2c:	f828 7b02 	strh.w	r7, [r8], #2
 8016c30:	4462      	add	r2, ip
 8016c32:	3e01      	subs	r6, #1
 8016c34:	e7ed      	b.n	8016c12 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016c36:	ea5f 4920 	movs.w	r9, r0, asr #16
 8016c3a:	d414      	bmi.n	8016c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c3c:	68ae      	ldr	r6, [r5, #8]
 8016c3e:	454e      	cmp	r6, r9
 8016c40:	dd11      	ble.n	8016c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c42:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016c46:	d40e      	bmi.n	8016c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c48:	68ef      	ldr	r7, [r5, #12]
 8016c4a:	4557      	cmp	r7, sl
 8016c4c:	dd0b      	ble.n	8016c66 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016c4e:	b236      	sxth	r6, r6
 8016c50:	fb0a 9606 	mla	r6, sl, r6, r9
 8016c54:	9f02      	ldr	r7, [sp, #8]
 8016c56:	f06f 0101 	mvn.w	r1, #1
 8016c5a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8016c5e:	fb01 f608 	mul.w	r6, r1, r8
 8016c62:	9903      	ldr	r1, [sp, #12]
 8016c64:	538f      	strh	r7, [r1, r6]
 8016c66:	4470      	add	r0, lr
 8016c68:	4462      	add	r2, ip
 8016c6a:	f108 38ff 	add.w	r8, r8, #4294967295
 8016c6e:	e788      	b.n	8016b82 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016c70:	b005      	add	sp, #20
 8016c72:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016c76 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c76:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c7a:	b087      	sub	sp, #28
 8016c7c:	468b      	mov	fp, r1
 8016c7e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016c80:	9203      	str	r2, [sp, #12]
 8016c82:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016c86:	9204      	str	r2, [sp, #16]
 8016c88:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 8016c8c:	6841      	ldr	r1, [r0, #4]
 8016c8e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016c92:	fb01 2505 	mla	r5, r1, r5, r2
 8016c96:	6802      	ldr	r2, [r0, #0]
 8016c98:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8016c9c:	f8d9 2000 	ldr.w	r2, [r9]
 8016ca0:	9201      	str	r2, [sp, #4]
 8016ca2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016ca6:	f1bb 0f00 	cmp.w	fp, #0
 8016caa:	dc03      	bgt.n	8016cb4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8016cac:	9a03      	ldr	r2, [sp, #12]
 8016cae:	2a00      	cmp	r2, #0
 8016cb0:	f340 8159 	ble.w	8016f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016cb4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016cb6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016cba:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016cbe:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016cc2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016cc4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016cc8:	2b00      	cmp	r3, #0
 8016cca:	dd0e      	ble.n	8016cea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8016ccc:	1402      	asrs	r2, r0, #16
 8016cce:	d405      	bmi.n	8016cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016cd0:	42ba      	cmp	r2, r7
 8016cd2:	da03      	bge.n	8016cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016cd4:	140a      	asrs	r2, r1, #16
 8016cd6:	d401      	bmi.n	8016cdc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8016cd8:	42b2      	cmp	r2, r6
 8016cda:	db07      	blt.n	8016cec <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8016cdc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016cde:	4410      	add	r0, r2
 8016ce0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ce2:	3b01      	subs	r3, #1
 8016ce4:	4411      	add	r1, r2
 8016ce6:	3502      	adds	r5, #2
 8016ce8:	e7ee      	b.n	8016cc8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016cea:	d017      	beq.n	8016d1c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8016cec:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016cee:	1e5a      	subs	r2, r3, #1
 8016cf0:	fb04 0402 	mla	r4, r4, r2, r0
 8016cf4:	1424      	asrs	r4, r4, #16
 8016cf6:	d409      	bmi.n	8016d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016cf8:	42bc      	cmp	r4, r7
 8016cfa:	da07      	bge.n	8016d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016cfc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016cfe:	fb04 1202 	mla	r2, r4, r2, r1
 8016d02:	1412      	asrs	r2, r2, #16
 8016d04:	d402      	bmi.n	8016d0c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016d06:	42b2      	cmp	r2, r6
 8016d08:	f2c0 80bf 	blt.w	8016e8a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8016d0c:	2700      	movs	r7, #0
 8016d0e:	19da      	adds	r2, r3, r7
 8016d10:	2a00      	cmp	r2, #0
 8016d12:	dc3e      	bgt.n	8016d92 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016d14:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016d18:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8016d1c:	f1bb 0f00 	cmp.w	fp, #0
 8016d20:	f340 8121 	ble.w	8016f66 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016d24:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016d28:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016d2c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016d30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d32:	f1bb 0b01 	subs.w	fp, fp, #1
 8016d36:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016d3a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016d3e:	eeb0 6a62 	vmov.f32	s12, s5
 8016d42:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016d46:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d4a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016d4e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016d52:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016d56:	eeb0 6a43 	vmov.f32	s12, s6
 8016d5a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016d5e:	ee12 2a90 	vmov	r2, s5
 8016d62:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016d66:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d6a:	ee13 2a10 	vmov	r2, s6
 8016d6e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016d72:	9313      	str	r3, [sp, #76]	; 0x4c
 8016d74:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d76:	fb92 f3f3 	sdiv	r3, r2, r3
 8016d7a:	9a03      	ldr	r2, [sp, #12]
 8016d7c:	9314      	str	r3, [sp, #80]	; 0x50
 8016d7e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016d82:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016d84:	eeb0 3a67 	vmov.f32	s6, s15
 8016d88:	bf08      	it	eq
 8016d8a:	4613      	moveq	r3, r2
 8016d8c:	eef0 2a47 	vmov.f32	s5, s14
 8016d90:	e789      	b.n	8016ca6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016d92:	1406      	asrs	r6, r0, #16
 8016d94:	d42d      	bmi.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d96:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8016d9a:	42b4      	cmp	r4, r6
 8016d9c:	dd29      	ble.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016d9e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016da2:	d426      	bmi.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016da4:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016da8:	4562      	cmp	r2, ip
 8016daa:	dd22      	ble.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016dac:	b224      	sxth	r4, r4
 8016dae:	9a01      	ldr	r2, [sp, #4]
 8016db0:	fb0c 6404 	mla	r4, ip, r4, r6
 8016db4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 8016db8:	0e22      	lsrs	r2, r4, #24
 8016dba:	d01a      	beq.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016dbc:	9e04      	ldr	r6, [sp, #16]
 8016dbe:	4372      	muls	r2, r6
 8016dc0:	1c56      	adds	r6, r2, #1
 8016dc2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016dc6:	1212      	asrs	r2, r2, #8
 8016dc8:	0a26      	lsrs	r6, r4, #8
 8016dca:	2aff      	cmp	r2, #255	; 0xff
 8016dcc:	9605      	str	r6, [sp, #20]
 8016dce:	d116      	bne.n	8016dfe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016dd0:	f06f 0201 	mvn.w	r2, #1
 8016dd4:	fb02 fc07 	mul.w	ip, r2, r7
 8016dd8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016ddc:	0962      	lsrs	r2, r4, #5
 8016dde:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016de2:	f026 0607 	bic.w	r6, r6, #7
 8016de6:	4316      	orrs	r6, r2
 8016de8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016dec:	4326      	orrs	r6, r4
 8016dee:	f825 600c 	strh.w	r6, [r5, ip]
 8016df2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016df4:	4410      	add	r0, r2
 8016df6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016df8:	3f01      	subs	r7, #1
 8016dfa:	4411      	add	r1, r2
 8016dfc:	e787      	b.n	8016d0e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016dfe:	f06f 0601 	mvn.w	r6, #1
 8016e02:	437e      	muls	r6, r7
 8016e04:	fa1f fa82 	uxth.w	sl, r2
 8016e08:	f835 8006 	ldrh.w	r8, [r5, r6]
 8016e0c:	9602      	str	r6, [sp, #8]
 8016e0e:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016e12:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016e16:	43d2      	mvns	r2, r2
 8016e18:	b2d2      	uxtb	r2, r2
 8016e1a:	fb1c fc0a 	smulbb	ip, ip, sl
 8016e1e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016e22:	fb0e ce02 	mla	lr, lr, r2, ip
 8016e26:	b2e4      	uxtb	r4, r4
 8016e28:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016e2c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016e30:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016e34:	fa5f f888 	uxtb.w	r8, r8
 8016e38:	fb14 f40a 	smulbb	r4, r4, sl
 8016e3c:	fb08 4402 	mla	r4, r8, r2, r4
 8016e40:	fa1f fe8e 	uxth.w	lr, lr
 8016e44:	fb16 f60a 	smulbb	r6, r6, sl
 8016e48:	b2a4      	uxth	r4, r4
 8016e4a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016e4e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016e52:	f10e 0201 	add.w	r2, lr, #1
 8016e56:	1c66      	adds	r6, r4, #1
 8016e58:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016e5c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016e60:	fa1f fc8c 	uxth.w	ip, ip
 8016e64:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016e68:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016e6c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016e70:	f10c 0601 	add.w	r6, ip, #1
 8016e74:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016e78:	0976      	lsrs	r6, r6, #5
 8016e7a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016e7e:	9a02      	ldr	r2, [sp, #8]
 8016e80:	ea4e 0e06 	orr.w	lr, lr, r6
 8016e84:	f825 e002 	strh.w	lr, [r5, r2]
 8016e88:	e7b3      	b.n	8016df2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016e8a:	f04f 0800 	mov.w	r8, #0
 8016e8e:	eba3 0208 	sub.w	r2, r3, r8
 8016e92:	2a00      	cmp	r2, #0
 8016e94:	f77f af3e 	ble.w	8016d14 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016e98:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8016e9c:	1404      	asrs	r4, r0, #16
 8016e9e:	140a      	asrs	r2, r1, #16
 8016ea0:	fb06 4202 	mla	r2, r6, r2, r4
 8016ea4:	9c01      	ldr	r4, [sp, #4]
 8016ea6:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8016eaa:	0e22      	lsrs	r2, r4, #24
 8016eac:	d016      	beq.n	8016edc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016eae:	9e04      	ldr	r6, [sp, #16]
 8016eb0:	4372      	muls	r2, r6
 8016eb2:	1c56      	adds	r6, r2, #1
 8016eb4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 8016eb8:	1212      	asrs	r2, r2, #8
 8016eba:	2aff      	cmp	r2, #255	; 0xff
 8016ebc:	ea4f 2614 	mov.w	r6, r4, lsr #8
 8016ec0:	d113      	bne.n	8016eea <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 8016ec2:	0962      	lsrs	r2, r4, #5
 8016ec4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016ec8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ecc:	f026 0607 	bic.w	r6, r6, #7
 8016ed0:	4316      	orrs	r6, r2
 8016ed2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8016ed6:	4326      	orrs	r6, r4
 8016ed8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 8016edc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ede:	4410      	add	r0, r2
 8016ee0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016ee2:	f108 0801 	add.w	r8, r8, #1
 8016ee6:	4411      	add	r1, r2
 8016ee8:	e7d1      	b.n	8016e8e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 8016eea:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 8016eee:	fa1f fa82 	uxth.w	sl, r2
 8016ef2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016ef6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 8016efa:	43d2      	mvns	r2, r2
 8016efc:	b2d2      	uxtb	r2, r2
 8016efe:	fb17 f70a 	smulbb	r7, r7, sl
 8016f02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016f06:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016f0a:	b2e4      	uxtb	r4, r4
 8016f0c:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016f10:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016f14:	fa5f fe8e 	uxtb.w	lr, lr
 8016f18:	fb14 f40a 	smulbb	r4, r4, sl
 8016f1c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016f20:	b2f6      	uxtb	r6, r6
 8016f22:	fa1f fc8c 	uxth.w	ip, ip
 8016f26:	fb16 f60a 	smulbb	r6, r6, sl
 8016f2a:	b2a4      	uxth	r4, r4
 8016f2c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016f30:	fb07 6702 	mla	r7, r7, r2, r6
 8016f34:	f10c 0201 	add.w	r2, ip, #1
 8016f38:	1c66      	adds	r6, r4, #1
 8016f3a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016f3e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016f42:	b2bf      	uxth	r7, r7
 8016f44:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016f48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016f4c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016f50:	1c7e      	adds	r6, r7, #1
 8016f52:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016f56:	0976      	lsrs	r6, r6, #5
 8016f58:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016f5c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016f60:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016f64:	e7ba      	b.n	8016edc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016f66:	b007      	add	sp, #28
 8016f68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f6c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016f6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f70:	b085      	sub	sp, #20
 8016f72:	468b      	mov	fp, r1
 8016f74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016f76:	9203      	str	r2, [sp, #12]
 8016f78:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016f7c:	6841      	ldr	r1, [r0, #4]
 8016f7e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016f82:	fb01 2404 	mla	r4, r1, r4, r2
 8016f86:	6802      	ldr	r2, [r0, #0]
 8016f88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016f8c:	f8d8 2000 	ldr.w	r2, [r8]
 8016f90:	9201      	str	r2, [sp, #4]
 8016f92:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016f96:	f1bb 0f00 	cmp.w	fp, #0
 8016f9a:	dc03      	bgt.n	8016fa4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016f9c:	9a03      	ldr	r2, [sp, #12]
 8016f9e:	2a00      	cmp	r2, #0
 8016fa0:	f340 814f 	ble.w	8017242 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016fa4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016fa6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016faa:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016fae:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016fb2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016fb4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016fb8:	2b00      	cmp	r3, #0
 8016fba:	dd0e      	ble.n	8016fda <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016fbc:	1408      	asrs	r0, r1, #16
 8016fbe:	d405      	bmi.n	8016fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016fc0:	42b8      	cmp	r0, r7
 8016fc2:	da03      	bge.n	8016fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016fc4:	1410      	asrs	r0, r2, #16
 8016fc6:	d401      	bmi.n	8016fcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016fc8:	42b0      	cmp	r0, r6
 8016fca:	db07      	blt.n	8016fdc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016fcc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016fce:	4401      	add	r1, r0
 8016fd0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016fd2:	3b01      	subs	r3, #1
 8016fd4:	4402      	add	r2, r0
 8016fd6:	3402      	adds	r4, #2
 8016fd8:	e7ee      	b.n	8016fb8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016fda:	d017      	beq.n	801700c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016fdc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016fde:	1e58      	subs	r0, r3, #1
 8016fe0:	fb05 1500 	mla	r5, r5, r0, r1
 8016fe4:	142d      	asrs	r5, r5, #16
 8016fe6:	d409      	bmi.n	8016ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016fe8:	42bd      	cmp	r5, r7
 8016fea:	da07      	bge.n	8016ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016fec:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016fee:	fb05 2000 	mla	r0, r5, r0, r2
 8016ff2:	1400      	asrs	r0, r0, #16
 8016ff4:	d402      	bmi.n	8016ffc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016ff6:	42b0      	cmp	r0, r6
 8016ff8:	f2c0 80ba 	blt.w	8017170 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016ffc:	2600      	movs	r6, #0
 8016ffe:	1998      	adds	r0, r3, r6
 8017000:	2800      	cmp	r0, #0
 8017002:	dc3e      	bgt.n	8017082 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8017004:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017008:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801700c:	f1bb 0f00 	cmp.w	fp, #0
 8017010:	f340 8117 	ble.w	8017242 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8017014:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017018:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801701c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017020:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017022:	f1bb 0b01 	subs.w	fp, fp, #1
 8017026:	ee31 1a05 	vadd.f32	s2, s2, s10
 801702a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801702e:	eeb0 6a62 	vmov.f32	s12, s5
 8017032:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017036:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801703a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801703e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8017042:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017046:	eeb0 6a43 	vmov.f32	s12, s6
 801704a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801704e:	ee12 2a90 	vmov	r2, s5
 8017052:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017056:	fb92 f3f3 	sdiv	r3, r2, r3
 801705a:	ee13 2a10 	vmov	r2, s6
 801705e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017062:	9311      	str	r3, [sp, #68]	; 0x44
 8017064:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017066:	fb92 f3f3 	sdiv	r3, r2, r3
 801706a:	9a03      	ldr	r2, [sp, #12]
 801706c:	9312      	str	r3, [sp, #72]	; 0x48
 801706e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8017072:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8017074:	eeb0 3a67 	vmov.f32	s6, s15
 8017078:	bf08      	it	eq
 801707a:	4613      	moveq	r3, r2
 801707c:	eef0 2a47 	vmov.f32	s5, s14
 8017080:	e789      	b.n	8016f96 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8017082:	140f      	asrs	r7, r1, #16
 8017084:	d424      	bmi.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017086:	f8d8 5008 	ldr.w	r5, [r8, #8]
 801708a:	42bd      	cmp	r5, r7
 801708c:	dd20      	ble.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801708e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017092:	d41d      	bmi.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017094:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8017098:	4560      	cmp	r0, ip
 801709a:	dd19      	ble.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801709c:	b22d      	sxth	r5, r5
 801709e:	fb0c 7505 	mla	r5, ip, r5, r7
 80170a2:	9801      	ldr	r0, [sp, #4]
 80170a4:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 80170a8:	0e07      	lsrs	r7, r0, #24
 80170aa:	2fff      	cmp	r7, #255	; 0xff
 80170ac:	d116      	bne.n	80170dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80170ae:	f06f 0501 	mvn.w	r5, #1
 80170b2:	fb05 f706 	mul.w	r7, r5, r6
 80170b6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 80170ba:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80170be:	0945      	lsrs	r5, r0, #5
 80170c0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80170c4:	ea4c 0505 	orr.w	r5, ip, r5
 80170c8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80170cc:	4305      	orrs	r5, r0
 80170ce:	53e5      	strh	r5, [r4, r7]
 80170d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80170d2:	4401      	add	r1, r0
 80170d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80170d6:	3e01      	subs	r6, #1
 80170d8:	4402      	add	r2, r0
 80170da:	e790      	b.n	8016ffe <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80170dc:	b2fd      	uxtb	r5, r7
 80170de:	2f00      	cmp	r7, #0
 80170e0:	d0f6      	beq.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80170e2:	f06f 0701 	mvn.w	r7, #1
 80170e6:	4377      	muls	r7, r6
 80170e8:	fa1f f985 	uxth.w	r9, r5
 80170ec:	f834 e007 	ldrh.w	lr, [r4, r7]
 80170f0:	9702      	str	r7, [sp, #8]
 80170f2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80170f6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80170fa:	43ed      	mvns	r5, r5
 80170fc:	b2ed      	uxtb	r5, r5
 80170fe:	fb17 f709 	smulbb	r7, r7, r9
 8017102:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017106:	fb0c 7c05 	mla	ip, ip, r5, r7
 801710a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801710e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017112:	b2c0      	uxtb	r0, r0
 8017114:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017118:	fa5f fe8e 	uxtb.w	lr, lr
 801711c:	fb10 f009 	smulbb	r0, r0, r9
 8017120:	fb0e 0005 	mla	r0, lr, r5, r0
 8017124:	b280      	uxth	r0, r0
 8017126:	fa1f fc8c 	uxth.w	ip, ip
 801712a:	fb1a fa09 	smulbb	sl, sl, r9
 801712e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017132:	fb07 a705 	mla	r7, r7, r5, sl
 8017136:	f100 0a01 	add.w	sl, r0, #1
 801713a:	f10c 0501 	add.w	r5, ip, #1
 801713e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8017142:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017146:	b2bf      	uxth	r7, r7
 8017148:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801714c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8017150:	ea4a 0c0c 	orr.w	ip, sl, ip
 8017154:	f107 0a01 	add.w	sl, r7, #1
 8017158:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801715c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017160:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017164:	9802      	ldr	r0, [sp, #8]
 8017166:	ea4c 0c0a 	orr.w	ip, ip, sl
 801716a:	f824 c000 	strh.w	ip, [r4, r0]
 801716e:	e7af      	b.n	80170d0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017170:	f04f 0e00 	mov.w	lr, #0
 8017174:	eba3 000e 	sub.w	r0, r3, lr
 8017178:	2800      	cmp	r0, #0
 801717a:	f77f af43 	ble.w	8017004 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 801717e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8017182:	140d      	asrs	r5, r1, #16
 8017184:	1410      	asrs	r0, r2, #16
 8017186:	fb06 5000 	mla	r0, r6, r0, r5
 801718a:	9d01      	ldr	r5, [sp, #4]
 801718c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8017190:	0e2e      	lsrs	r6, r5, #24
 8017192:	2eff      	cmp	r6, #255	; 0xff
 8017194:	d112      	bne.n	80171bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8017196:	482c      	ldr	r0, [pc, #176]	; (8017248 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8017198:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 801719c:	0968      	lsrs	r0, r5, #5
 801719e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80171a2:	4330      	orrs	r0, r6
 80171a4:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80171a8:	4328      	orrs	r0, r5
 80171aa:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 80171ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 80171b0:	4401      	add	r1, r0
 80171b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80171b4:	f10e 0e01 	add.w	lr, lr, #1
 80171b8:	4402      	add	r2, r0
 80171ba:	e7db      	b.n	8017174 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80171bc:	b2f0      	uxtb	r0, r6
 80171be:	2e00      	cmp	r6, #0
 80171c0:	d0f5      	beq.n	80171ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80171c2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80171c6:	fa1f f980 	uxth.w	r9, r0
 80171ca:	ea4f 272c 	mov.w	r7, ip, asr #8
 80171ce:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80171d2:	43c0      	mvns	r0, r0
 80171d4:	b2c0      	uxtb	r0, r0
 80171d6:	fb16 f609 	smulbb	r6, r6, r9
 80171da:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80171de:	fb07 6700 	mla	r7, r7, r0, r6
 80171e2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80171e6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80171ea:	b2ed      	uxtb	r5, r5
 80171ec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80171f0:	fa5f fc8c 	uxtb.w	ip, ip
 80171f4:	fb15 f509 	smulbb	r5, r5, r9
 80171f8:	fb0c 5500 	mla	r5, ip, r0, r5
 80171fc:	b2bf      	uxth	r7, r7
 80171fe:	fb1a fa09 	smulbb	sl, sl, r9
 8017202:	b2ad      	uxth	r5, r5
 8017204:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017208:	fb06 a600 	mla	r6, r6, r0, sl
 801720c:	1c78      	adds	r0, r7, #1
 801720e:	f105 0a01 	add.w	sl, r5, #1
 8017212:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8017216:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801721a:	b2b6      	uxth	r6, r6
 801721c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017220:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8017224:	ea4a 0707 	orr.w	r7, sl, r7
 8017228:	f106 0a01 	add.w	sl, r6, #1
 801722c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017230:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017234:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017238:	ea47 070a 	orr.w	r7, r7, sl
 801723c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8017240:	e7b5      	b.n	80171ae <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8017242:	b005      	add	sp, #20
 8017244:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017248:	fffff800 	.word	0xfffff800

0801724c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801724c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017250:	b087      	sub	sp, #28
 8017252:	468b      	mov	fp, r1
 8017254:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017256:	9203      	str	r2, [sp, #12]
 8017258:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801725c:	9204      	str	r2, [sp, #16]
 801725e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017262:	6841      	ldr	r1, [r0, #4]
 8017264:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8017268:	fb01 2404 	mla	r4, r1, r4, r2
 801726c:	6802      	ldr	r2, [r0, #0]
 801726e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017272:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8017276:	3201      	adds	r2, #1
 8017278:	f022 0201 	bic.w	r2, r2, #1
 801727c:	9200      	str	r2, [sp, #0]
 801727e:	f8d9 2000 	ldr.w	r2, [r9]
 8017282:	9201      	str	r2, [sp, #4]
 8017284:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8017288:	f1bb 0f00 	cmp.w	fp, #0
 801728c:	dc03      	bgt.n	8017296 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801728e:	9a03      	ldr	r2, [sp, #12]
 8017290:	2a00      	cmp	r2, #0
 8017292:	f340 8169 	ble.w	8017568 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017296:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8017298:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 801729c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80172a0:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80172a4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80172a6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80172aa:	2b00      	cmp	r3, #0
 80172ac:	dd0e      	ble.n	80172cc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80172ae:	1402      	asrs	r2, r0, #16
 80172b0:	d405      	bmi.n	80172be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80172b2:	42ba      	cmp	r2, r7
 80172b4:	da03      	bge.n	80172be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80172b6:	140a      	asrs	r2, r1, #16
 80172b8:	d401      	bmi.n	80172be <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80172ba:	42b2      	cmp	r2, r6
 80172bc:	db07      	blt.n	80172ce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80172be:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80172c0:	4410      	add	r0, r2
 80172c2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80172c4:	3b01      	subs	r3, #1
 80172c6:	4411      	add	r1, r2
 80172c8:	3402      	adds	r4, #2
 80172ca:	e7ee      	b.n	80172aa <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 80172cc:	d017      	beq.n	80172fe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80172ce:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80172d0:	1e5a      	subs	r2, r3, #1
 80172d2:	fb05 0502 	mla	r5, r5, r2, r0
 80172d6:	142d      	asrs	r5, r5, #16
 80172d8:	d409      	bmi.n	80172ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80172da:	42bd      	cmp	r5, r7
 80172dc:	da07      	bge.n	80172ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80172de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80172e0:	fb05 1202 	mla	r2, r5, r2, r1
 80172e4:	1412      	asrs	r2, r2, #16
 80172e6:	d402      	bmi.n	80172ee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80172e8:	42b2      	cmp	r2, r6
 80172ea:	f2c0 80c7 	blt.w	801747c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 80172ee:	2700      	movs	r7, #0
 80172f0:	19da      	adds	r2, r3, r7
 80172f2:	2a00      	cmp	r2, #0
 80172f4:	dc3e      	bgt.n	8017374 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80172f6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80172fa:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80172fe:	f1bb 0f00 	cmp.w	fp, #0
 8017302:	f340 8131 	ble.w	8017568 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8017306:	ee30 0a04 	vadd.f32	s0, s0, s8
 801730a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801730e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017312:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017314:	f1bb 0b01 	subs.w	fp, fp, #1
 8017318:	ee31 1a05 	vadd.f32	s2, s2, s10
 801731c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017320:	eeb0 6a62 	vmov.f32	s12, s5
 8017324:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017328:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801732c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017330:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017334:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017338:	eeb0 6a43 	vmov.f32	s12, s6
 801733c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017340:	ee12 2a90 	vmov	r2, s5
 8017344:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017348:	fb92 f3f3 	sdiv	r3, r2, r3
 801734c:	ee13 2a10 	vmov	r2, s6
 8017350:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017354:	9313      	str	r3, [sp, #76]	; 0x4c
 8017356:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017358:	fb92 f3f3 	sdiv	r3, r2, r3
 801735c:	9a03      	ldr	r2, [sp, #12]
 801735e:	9314      	str	r3, [sp, #80]	; 0x50
 8017360:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8017364:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017366:	eeb0 3a67 	vmov.f32	s6, s15
 801736a:	bf08      	it	eq
 801736c:	4613      	moveq	r3, r2
 801736e:	eef0 2a47 	vmov.f32	s5, s14
 8017372:	e789      	b.n	8017288 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8017374:	1405      	asrs	r5, r0, #16
 8017376:	d435      	bmi.n	80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017378:	f8d9 2008 	ldr.w	r2, [r9, #8]
 801737c:	42aa      	cmp	r2, r5
 801737e:	dd31      	ble.n	80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017380:	140e      	asrs	r6, r1, #16
 8017382:	d42f      	bmi.n	80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8017384:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8017388:	42b2      	cmp	r2, r6
 801738a:	dd2b      	ble.n	80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801738c:	9a00      	ldr	r2, [sp, #0]
 801738e:	fb06 5502 	mla	r5, r6, r2, r5
 8017392:	086a      	lsrs	r2, r5, #1
 8017394:	9e01      	ldr	r6, [sp, #4]
 8017396:	5cb2      	ldrb	r2, [r6, r2]
 8017398:	07ee      	lsls	r6, r5, #31
 801739a:	bf54      	ite	pl
 801739c:	f002 020f 	andpl.w	r2, r2, #15
 80173a0:	1112      	asrmi	r2, r2, #4
 80173a2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80173a6:	b2d2      	uxtb	r2, r2
 80173a8:	b1e2      	cbz	r2, 80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 80173aa:	9d04      	ldr	r5, [sp, #16]
 80173ac:	436a      	muls	r2, r5
 80173ae:	1c55      	adds	r5, r2, #1
 80173b0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80173b4:	4d6e      	ldr	r5, [pc, #440]	; (8017570 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80173b6:	682d      	ldr	r5, [r5, #0]
 80173b8:	1212      	asrs	r2, r2, #8
 80173ba:	0a2e      	lsrs	r6, r5, #8
 80173bc:	2aff      	cmp	r2, #255	; 0xff
 80173be:	9605      	str	r6, [sp, #20]
 80173c0:	d116      	bne.n	80173f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80173c2:	f06f 0201 	mvn.w	r2, #1
 80173c6:	fb02 fc07 	mul.w	ip, r2, r7
 80173ca:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80173ce:	096a      	lsrs	r2, r5, #5
 80173d0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80173d4:	f026 0607 	bic.w	r6, r6, #7
 80173d8:	4316      	orrs	r6, r2
 80173da:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80173de:	432e      	orrs	r6, r5
 80173e0:	f824 600c 	strh.w	r6, [r4, ip]
 80173e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80173e6:	4410      	add	r0, r2
 80173e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80173ea:	3f01      	subs	r7, #1
 80173ec:	4411      	add	r1, r2
 80173ee:	e77f      	b.n	80172f0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 80173f0:	f06f 0601 	mvn.w	r6, #1
 80173f4:	437e      	muls	r6, r7
 80173f6:	fa1f fa82 	uxth.w	sl, r2
 80173fa:	f834 8006 	ldrh.w	r8, [r4, r6]
 80173fe:	9602      	str	r6, [sp, #8]
 8017400:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8017404:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8017408:	43d2      	mvns	r2, r2
 801740a:	b2d2      	uxtb	r2, r2
 801740c:	fb1c fc0a 	smulbb	ip, ip, sl
 8017410:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8017414:	fb0e ce02 	mla	lr, lr, r2, ip
 8017418:	b2ed      	uxtb	r5, r5
 801741a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801741e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8017422:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8017426:	fa5f f888 	uxtb.w	r8, r8
 801742a:	fb15 f50a 	smulbb	r5, r5, sl
 801742e:	fb08 5502 	mla	r5, r8, r2, r5
 8017432:	fa1f fe8e 	uxth.w	lr, lr
 8017436:	fb16 f60a 	smulbb	r6, r6, sl
 801743a:	b2ad      	uxth	r5, r5
 801743c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8017440:	fb0c 6c02 	mla	ip, ip, r2, r6
 8017444:	f10e 0201 	add.w	r2, lr, #1
 8017448:	1c6e      	adds	r6, r5, #1
 801744a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801744e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8017452:	fa1f fc8c 	uxth.w	ip, ip
 8017456:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801745a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801745e:	ea46 0e0e 	orr.w	lr, r6, lr
 8017462:	f10c 0601 	add.w	r6, ip, #1
 8017466:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 801746a:	0976      	lsrs	r6, r6, #5
 801746c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017470:	9a02      	ldr	r2, [sp, #8]
 8017472:	ea4e 0e06 	orr.w	lr, lr, r6
 8017476:	f824 e002 	strh.w	lr, [r4, r2]
 801747a:	e7b3      	b.n	80173e4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801747c:	f04f 0800 	mov.w	r8, #0
 8017480:	eba3 0208 	sub.w	r2, r3, r8
 8017484:	2a00      	cmp	r2, #0
 8017486:	f77f af36 	ble.w	80172f6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801748a:	9e00      	ldr	r6, [sp, #0]
 801748c:	1402      	asrs	r2, r0, #16
 801748e:	140d      	asrs	r5, r1, #16
 8017490:	fb06 2505 	mla	r5, r6, r5, r2
 8017494:	086a      	lsrs	r2, r5, #1
 8017496:	9e01      	ldr	r6, [sp, #4]
 8017498:	5cb2      	ldrb	r2, [r6, r2]
 801749a:	07ed      	lsls	r5, r5, #31
 801749c:	bf54      	ite	pl
 801749e:	f002 020f 	andpl.w	r2, r2, #15
 80174a2:	1112      	asrmi	r2, r2, #4
 80174a4:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80174a8:	b2d2      	uxtb	r2, r2
 80174aa:	b1c2      	cbz	r2, 80174de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 80174ac:	9d04      	ldr	r5, [sp, #16]
 80174ae:	436a      	muls	r2, r5
 80174b0:	1c55      	adds	r5, r2, #1
 80174b2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 80174b6:	4d2e      	ldr	r5, [pc, #184]	; (8017570 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 80174b8:	1212      	asrs	r2, r2, #8
 80174ba:	682e      	ldr	r6, [r5, #0]
 80174bc:	2aff      	cmp	r2, #255	; 0xff
 80174be:	ea4f 2516 	mov.w	r5, r6, lsr #8
 80174c2:	d113      	bne.n	80174ec <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 80174c4:	0972      	lsrs	r2, r6, #5
 80174c6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 80174ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80174ce:	f025 0507 	bic.w	r5, r5, #7
 80174d2:	4315      	orrs	r5, r2
 80174d4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 80174d8:	4335      	orrs	r5, r6
 80174da:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 80174de:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80174e0:	4410      	add	r0, r2
 80174e2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80174e4:	f108 0801 	add.w	r8, r8, #1
 80174e8:	4411      	add	r1, r2
 80174ea:	e7c9      	b.n	8017480 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80174ec:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 80174f0:	fa1f fa82 	uxth.w	sl, r2
 80174f4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80174f8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 80174fc:	43d2      	mvns	r2, r2
 80174fe:	b2d2      	uxtb	r2, r2
 8017500:	fb17 f70a 	smulbb	r7, r7, sl
 8017504:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017508:	fb0c 7c02 	mla	ip, ip, r2, r7
 801750c:	b2f6      	uxtb	r6, r6
 801750e:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017512:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017516:	fa5f fe8e 	uxtb.w	lr, lr
 801751a:	fb16 f60a 	smulbb	r6, r6, sl
 801751e:	fb0e 6602 	mla	r6, lr, r2, r6
 8017522:	b2ed      	uxtb	r5, r5
 8017524:	fa1f fc8c 	uxth.w	ip, ip
 8017528:	fb15 f50a 	smulbb	r5, r5, sl
 801752c:	b2b6      	uxth	r6, r6
 801752e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017532:	fb07 5702 	mla	r7, r7, r2, r5
 8017536:	f10c 0201 	add.w	r2, ip, #1
 801753a:	1c75      	adds	r5, r6, #1
 801753c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017540:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017544:	b2bf      	uxth	r7, r7
 8017546:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801754a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801754e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017552:	1c7d      	adds	r5, r7, #1
 8017554:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017558:	096d      	lsrs	r5, r5, #5
 801755a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801755e:	ea4c 0c05 	orr.w	ip, ip, r5
 8017562:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017566:	e7ba      	b.n	80174de <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017568:	b007      	add	sp, #28
 801756a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801756e:	bf00      	nop
 8017570:	20013768 	.word	0x20013768

08017574 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017574:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017578:	b087      	sub	sp, #28
 801757a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8017888 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801757e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017580:	9205      	str	r2, [sp, #20]
 8017582:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017586:	9101      	str	r1, [sp, #4]
 8017588:	6841      	ldr	r1, [r0, #4]
 801758a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801758e:	fb01 2404 	mla	r4, r1, r4, r2
 8017592:	6802      	ldr	r2, [r0, #0]
 8017594:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017598:	f8db 2008 	ldr.w	r2, [fp, #8]
 801759c:	3201      	adds	r2, #1
 801759e:	f022 0201 	bic.w	r2, r2, #1
 80175a2:	9202      	str	r2, [sp, #8]
 80175a4:	f8db 2000 	ldr.w	r2, [fp]
 80175a8:	9203      	str	r2, [sp, #12]
 80175aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80175ae:	9a01      	ldr	r2, [sp, #4]
 80175b0:	2a00      	cmp	r2, #0
 80175b2:	dc03      	bgt.n	80175bc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80175b4:	9a05      	ldr	r2, [sp, #20]
 80175b6:	2a00      	cmp	r2, #0
 80175b8:	f340 8162 	ble.w	8017880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80175bc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80175be:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80175c2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80175c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80175ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80175cc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80175d0:	2b00      	cmp	r3, #0
 80175d2:	dd0e      	ble.n	80175f2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80175d4:	1402      	asrs	r2, r0, #16
 80175d6:	d405      	bmi.n	80175e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175d8:	42ba      	cmp	r2, r7
 80175da:	da03      	bge.n	80175e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175dc:	140a      	asrs	r2, r1, #16
 80175de:	d401      	bmi.n	80175e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80175e0:	42b2      	cmp	r2, r6
 80175e2:	db07      	blt.n	80175f4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80175e4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80175e6:	4410      	add	r0, r2
 80175e8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80175ea:	3b01      	subs	r3, #1
 80175ec:	4411      	add	r1, r2
 80175ee:	3402      	adds	r4, #2
 80175f0:	e7ee      	b.n	80175d0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80175f2:	d017      	beq.n	8017624 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80175f4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80175f6:	1e5a      	subs	r2, r3, #1
 80175f8:	fb05 0502 	mla	r5, r5, r2, r0
 80175fc:	142d      	asrs	r5, r5, #16
 80175fe:	d409      	bmi.n	8017614 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017600:	42bd      	cmp	r5, r7
 8017602:	da07      	bge.n	8017614 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8017604:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017606:	fb05 1202 	mla	r2, r5, r2, r1
 801760a:	1412      	asrs	r2, r2, #16
 801760c:	d402      	bmi.n	8017614 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 801760e:	42b2      	cmp	r2, r6
 8017610:	f2c0 80c3 	blt.w	801779a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017614:	2500      	movs	r5, #0
 8017616:	195a      	adds	r2, r3, r5
 8017618:	2a00      	cmp	r2, #0
 801761a:	dc3f      	bgt.n	801769c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801761c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017620:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017624:	9b01      	ldr	r3, [sp, #4]
 8017626:	2b00      	cmp	r3, #0
 8017628:	f340 812a 	ble.w	8017880 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801762c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017630:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017634:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017638:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801763a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801763e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017642:	eeb0 6a62 	vmov.f32	s12, s5
 8017646:	ee61 7a27 	vmul.f32	s15, s2, s15
 801764a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801764e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017652:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017656:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801765a:	eeb0 6a43 	vmov.f32	s12, s6
 801765e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017662:	ee12 2a90 	vmov	r2, s5
 8017666:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801766a:	fb92 f3f3 	sdiv	r3, r2, r3
 801766e:	ee13 2a10 	vmov	r2, s6
 8017672:	9313      	str	r3, [sp, #76]	; 0x4c
 8017674:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017676:	fb92 f3f3 	sdiv	r3, r2, r3
 801767a:	9314      	str	r3, [sp, #80]	; 0x50
 801767c:	9b01      	ldr	r3, [sp, #4]
 801767e:	9a05      	ldr	r2, [sp, #20]
 8017680:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017684:	3b01      	subs	r3, #1
 8017686:	9301      	str	r3, [sp, #4]
 8017688:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801768c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801768e:	eeb0 3a67 	vmov.f32	s6, s15
 8017692:	bf08      	it	eq
 8017694:	4613      	moveq	r3, r2
 8017696:	eef0 2a47 	vmov.f32	s5, s14
 801769a:	e788      	b.n	80175ae <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801769c:	1406      	asrs	r6, r0, #16
 801769e:	d42c      	bmi.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80176a0:	f8db 2008 	ldr.w	r2, [fp, #8]
 80176a4:	42b2      	cmp	r2, r6
 80176a6:	dd28      	ble.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80176a8:	140f      	asrs	r7, r1, #16
 80176aa:	d426      	bmi.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80176ac:	f8db 200c 	ldr.w	r2, [fp, #12]
 80176b0:	42ba      	cmp	r2, r7
 80176b2:	dd22      	ble.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80176b4:	9a02      	ldr	r2, [sp, #8]
 80176b6:	fb07 6602 	mla	r6, r7, r2, r6
 80176ba:	0872      	lsrs	r2, r6, #1
 80176bc:	9f03      	ldr	r7, [sp, #12]
 80176be:	5cba      	ldrb	r2, [r7, r2]
 80176c0:	07f6      	lsls	r6, r6, #31
 80176c2:	bf54      	ite	pl
 80176c4:	f002 020f 	andpl.w	r2, r2, #15
 80176c8:	1112      	asrmi	r2, r2, #4
 80176ca:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80176ce:	b2d2      	uxtb	r2, r2
 80176d0:	2aff      	cmp	r2, #255	; 0xff
 80176d2:	d118      	bne.n	8017706 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80176d4:	f8d8 2000 	ldr.w	r2, [r8]
 80176d8:	f06f 0601 	mvn.w	r6, #1
 80176dc:	fb06 f705 	mul.w	r7, r6, r5
 80176e0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80176e4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80176e8:	0956      	lsrs	r6, r2, #5
 80176ea:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80176ee:	ea4c 0606 	orr.w	r6, ip, r6
 80176f2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80176f6:	4316      	orrs	r6, r2
 80176f8:	53e6      	strh	r6, [r4, r7]
 80176fa:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80176fc:	4410      	add	r0, r2
 80176fe:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8017700:	3d01      	subs	r5, #1
 8017702:	4411      	add	r1, r2
 8017704:	e787      	b.n	8017616 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8017706:	2a00      	cmp	r2, #0
 8017708:	d0f7      	beq.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801770a:	f06f 0601 	mvn.w	r6, #1
 801770e:	436e      	muls	r6, r5
 8017710:	f8d8 c000 	ldr.w	ip, [r8]
 8017714:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017718:	9604      	str	r6, [sp, #16]
 801771a:	fa1f f982 	uxth.w	r9, r2
 801771e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017722:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017726:	43d2      	mvns	r2, r2
 8017728:	b2d2      	uxtb	r2, r2
 801772a:	fb16 f609 	smulbb	r6, r6, r9
 801772e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017732:	fb07 6702 	mla	r7, r7, r2, r6
 8017736:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801773a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801773e:	fa5f fc8c 	uxtb.w	ip, ip
 8017742:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017746:	fa5f fe8e 	uxtb.w	lr, lr
 801774a:	fb1c fc09 	smulbb	ip, ip, r9
 801774e:	fb0e cc02 	mla	ip, lr, r2, ip
 8017752:	b2bf      	uxth	r7, r7
 8017754:	fb1a fa09 	smulbb	sl, sl, r9
 8017758:	fa1f fc8c 	uxth.w	ip, ip
 801775c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017760:	fb06 a602 	mla	r6, r6, r2, sl
 8017764:	1c7a      	adds	r2, r7, #1
 8017766:	f10c 0a01 	add.w	sl, ip, #1
 801776a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801776e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8017772:	b2b6      	uxth	r6, r6
 8017774:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017778:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801777c:	ea4a 0707 	orr.w	r7, sl, r7
 8017780:	f106 0a01 	add.w	sl, r6, #1
 8017784:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017788:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801778c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017790:	9a04      	ldr	r2, [sp, #16]
 8017792:	ea47 070a 	orr.w	r7, r7, sl
 8017796:	52a7      	strh	r7, [r4, r2]
 8017798:	e7af      	b.n	80176fa <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801779a:	f04f 0e00 	mov.w	lr, #0
 801779e:	eba3 020e 	sub.w	r2, r3, lr
 80177a2:	2a00      	cmp	r2, #0
 80177a4:	f77f af3a 	ble.w	801761c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80177a8:	9e02      	ldr	r6, [sp, #8]
 80177aa:	1402      	asrs	r2, r0, #16
 80177ac:	140d      	asrs	r5, r1, #16
 80177ae:	fb06 2505 	mla	r5, r6, r5, r2
 80177b2:	086a      	lsrs	r2, r5, #1
 80177b4:	9e03      	ldr	r6, [sp, #12]
 80177b6:	5cb2      	ldrb	r2, [r6, r2]
 80177b8:	07ed      	lsls	r5, r5, #31
 80177ba:	bf54      	ite	pl
 80177bc:	f002 020f 	andpl.w	r2, r2, #15
 80177c0:	1112      	asrmi	r2, r2, #4
 80177c2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80177c6:	b2d2      	uxtb	r2, r2
 80177c8:	2aff      	cmp	r2, #255	; 0xff
 80177ca:	d115      	bne.n	80177f8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80177cc:	f8d8 5000 	ldr.w	r5, [r8]
 80177d0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80177d4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80177d8:	096a      	lsrs	r2, r5, #5
 80177da:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80177de:	4332      	orrs	r2, r6
 80177e0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80177e4:	432a      	orrs	r2, r5
 80177e6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80177ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80177ec:	4410      	add	r0, r2
 80177ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80177f0:	f10e 0e01 	add.w	lr, lr, #1
 80177f4:	4411      	add	r1, r2
 80177f6:	e7d2      	b.n	801779e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80177f8:	2a00      	cmp	r2, #0
 80177fa:	d0f6      	beq.n	80177ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80177fc:	f8d8 7000 	ldr.w	r7, [r8]
 8017800:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8017804:	fa1f f982 	uxth.w	r9, r2
 8017808:	ea4f 262c 	mov.w	r6, ip, asr #8
 801780c:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017810:	43d2      	mvns	r2, r2
 8017812:	b2d2      	uxtb	r2, r2
 8017814:	fb15 f509 	smulbb	r5, r5, r9
 8017818:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801781c:	fb06 5602 	mla	r6, r6, r2, r5
 8017820:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017824:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017828:	b2ff      	uxtb	r7, r7
 801782a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801782e:	fa5f fc8c 	uxtb.w	ip, ip
 8017832:	fb17 f709 	smulbb	r7, r7, r9
 8017836:	fb0c 7702 	mla	r7, ip, r2, r7
 801783a:	b2b6      	uxth	r6, r6
 801783c:	fb1a fa09 	smulbb	sl, sl, r9
 8017840:	b2bf      	uxth	r7, r7
 8017842:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017846:	fb05 a502 	mla	r5, r5, r2, sl
 801784a:	1c72      	adds	r2, r6, #1
 801784c:	f107 0a01 	add.w	sl, r7, #1
 8017850:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017854:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017858:	b2ad      	uxth	r5, r5
 801785a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801785e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017862:	ea4a 0606 	orr.w	r6, sl, r6
 8017866:	f105 0a01 	add.w	sl, r5, #1
 801786a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801786e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017872:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017876:	ea46 060a 	orr.w	r6, r6, sl
 801787a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801787e:	e7b4      	b.n	80177ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017880:	b007      	add	sp, #28
 8017882:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017886:	bf00      	nop
 8017888:	20013768 	.word	0x20013768

0801788c <_ZN8touchgfx8LCD16bppD1Ev>:
 801788c:	4770      	bx	lr

0801788e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801788e:	4770      	bx	lr

08017890 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017890:	4770      	bx	lr

08017892 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017892:	4770      	bx	lr

08017894 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017894:	4770      	bx	lr

08017896 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017896:	4770      	bx	lr

08017898 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017898:	4770      	bx	lr

0801789a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801789a:	4770      	bx	lr

0801789c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801789c:	4770      	bx	lr

0801789e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801789e:	4770      	bx	lr

080178a0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80178a0:	4770      	bx	lr

080178a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80178a2:	4770      	bx	lr

080178a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80178a4:	4770      	bx	lr

080178a6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80178a6:	4770      	bx	lr

080178a8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80178a8:	4770      	bx	lr

080178aa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80178aa:	4770      	bx	lr

080178ac <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 80178ac:	4770      	bx	lr

080178ae <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 80178ae:	4770      	bx	lr

080178b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80178b0:	4770      	bx	lr

080178b2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80178b2:	4770      	bx	lr

080178b4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80178b4:	4770      	bx	lr

080178b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80178b6:	4770      	bx	lr

080178b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80178b8:	4770      	bx	lr

080178ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80178ba:	4770      	bx	lr

080178bc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80178bc:	4770      	bx	lr

080178be <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80178be:	4770      	bx	lr

080178c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80178c0:	4770      	bx	lr

080178c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80178c2:	4770      	bx	lr

080178c4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80178c4:	4770      	bx	lr

080178c6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80178c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80178ca:	b088      	sub	sp, #32
 80178cc:	ac08      	add	r4, sp, #32
 80178ce:	4606      	mov	r6, r0
 80178d0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80178d4:	4620      	mov	r0, r4
 80178d6:	4688      	mov	r8, r1
 80178d8:	4691      	mov	r9, r2
 80178da:	f7fd fc65 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 80178de:	6833      	ldr	r3, [r6, #0]
 80178e0:	4605      	mov	r5, r0
 80178e2:	4620      	mov	r0, r4
 80178e4:	699f      	ldr	r7, [r3, #24]
 80178e6:	f7fd fb73 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80178ea:	4682      	mov	sl, r0
 80178ec:	4620      	mov	r0, r4
 80178ee:	f7fd fba3 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80178f2:	9500      	str	r5, [sp, #0]
 80178f4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80178f8:	464b      	mov	r3, r9
 80178fa:	a806      	add	r0, sp, #24
 80178fc:	4642      	mov	r2, r8
 80178fe:	4631      	mov	r1, r6
 8017900:	47b8      	blx	r7
 8017902:	4628      	mov	r0, r5
 8017904:	b008      	add	sp, #32
 8017906:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0801790c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801790c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017910:	2300      	movs	r3, #0
 8017912:	9300      	str	r3, [sp, #0]
 8017914:	4b3d      	ldr	r3, [pc, #244]	; (8017a0c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017916:	781b      	ldrb	r3, [r3, #0]
 8017918:	2b00      	cmp	r3, #0
 801791a:	d137      	bne.n	801798c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801791c:	4a3c      	ldr	r2, [pc, #240]	; (8017a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801791e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017922:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017926:	2b00      	cmp	r3, #0
 8017928:	d132      	bne.n	8017990 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801792a:	4b3a      	ldr	r3, [pc, #232]	; (8017a14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801792c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017930:	6808      	ldr	r0, [r1, #0]
 8017932:	6849      	ldr	r1, [r1, #4]
 8017934:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017938:	ac02      	add	r4, sp, #8
 801793a:	ab02      	add	r3, sp, #8
 801793c:	c303      	stmia	r3!, {r0, r1}
 801793e:	4669      	mov	r1, sp
 8017940:	4620      	mov	r0, r4
 8017942:	f7f9 fe89 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017946:	4668      	mov	r0, sp
 8017948:	f7f9 fe42 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801794c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017950:	f8bd 2000 	ldrh.w	r2, [sp]
 8017954:	4d30      	ldr	r5, [pc, #192]	; (8017a18 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017956:	4413      	add	r3, r2
 8017958:	f8ad 3008 	strh.w	r3, [sp, #8]
 801795c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017960:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017964:	6828      	ldr	r0, [r5, #0]
 8017966:	4413      	add	r3, r2
 8017968:	f8ad 300a 	strh.w	r3, [sp, #10]
 801796c:	6803      	ldr	r3, [r0, #0]
 801796e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017970:	4798      	blx	r3
 8017972:	f010 0f01 	tst.w	r0, #1
 8017976:	462f      	mov	r7, r5
 8017978:	d00c      	beq.n	8017994 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801797a:	6828      	ldr	r0, [r5, #0]
 801797c:	6803      	ldr	r3, [r0, #0]
 801797e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017982:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8017984:	4798      	blx	r3
 8017986:	b004      	add	sp, #16
 8017988:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801798c:	4a21      	ldr	r2, [pc, #132]	; (8017a14 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801798e:	e7c6      	b.n	801791e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017990:	4b1f      	ldr	r3, [pc, #124]	; (8017a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017992:	e7cb      	b.n	801792c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017994:	6838      	ldr	r0, [r7, #0]
 8017996:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801799a:	6803      	ldr	r3, [r0, #0]
 801799c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 80179a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80179a2:	4798      	blx	r3
 80179a4:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 80179a8:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80179ac:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80179b0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80179b4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80179b8:	6838      	ldr	r0, [r7, #0]
 80179ba:	6803      	ldr	r3, [r0, #0]
 80179bc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80179be:	4798      	blx	r3
 80179c0:	4a13      	ldr	r2, [pc, #76]	; (8017a10 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80179c2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80179c6:	8813      	ldrh	r3, [r2, #0]
 80179c8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80179cc:	fb03 1404 	mla	r4, r3, r4, r1
 80179d0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80179d4:	435d      	muls	r5, r3
 80179d6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80179da:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80179de:	4691      	mov	r9, r2
 80179e0:	6838      	ldr	r0, [r7, #0]
 80179e2:	42ac      	cmp	r4, r5
 80179e4:	6803      	ldr	r3, [r0, #0]
 80179e6:	d20e      	bcs.n	8017a06 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80179e8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80179ec:	4632      	mov	r2, r6
 80179ee:	4643      	mov	r3, r8
 80179f0:	4621      	mov	r1, r4
 80179f2:	47d0      	blx	sl
 80179f4:	f8b9 3000 	ldrh.w	r3, [r9]
 80179f8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80179fc:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8017a00:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017a04:	e7ec      	b.n	80179e0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 8017a06:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017a08:	4798      	blx	r3
 8017a0a:	e7bc      	b.n	8017986 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 8017a0c:	20013750 	.word	0x20013750
 8017a10:	20013752 	.word	0x20013752
 8017a14:	20013754 	.word	0x20013754
 8017a18:	20013758 	.word	0x20013758

08017a1c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 8017a1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017a20:	b08b      	sub	sp, #44	; 0x2c
 8017a22:	460f      	mov	r7, r1
 8017a24:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017a28:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 8017a2c:	4616      	mov	r6, r2
 8017a2e:	f1bb 0f00 	cmp.w	fp, #0
 8017a32:	d049      	beq.n	8017ac8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017a34:	6810      	ldr	r0, [r2, #0]
 8017a36:	6851      	ldr	r1, [r2, #4]
 8017a38:	ad06      	add	r5, sp, #24
 8017a3a:	c503      	stmia	r5!, {r0, r1}
 8017a3c:	6818      	ldr	r0, [r3, #0]
 8017a3e:	6859      	ldr	r1, [r3, #4]
 8017a40:	ad08      	add	r5, sp, #32
 8017a42:	c503      	stmia	r5!, {r0, r1}
 8017a44:	a806      	add	r0, sp, #24
 8017a46:	f7f9 fdc3 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017a4a:	4631      	mov	r1, r6
 8017a4c:	a808      	add	r0, sp, #32
 8017a4e:	f7f9 fe03 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017a52:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017a56:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 8017a5a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 8017a5e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017a62:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017a66:	fb16 2103 	smlabb	r1, r6, r3, r2
 8017a6a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 8017a6e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017a72:	4f5f      	ldr	r7, [pc, #380]	; (8017bf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017a74:	440a      	add	r2, r1
 8017a76:	f8ad 2020 	strh.w	r2, [sp, #32]
 8017a7a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8017a7e:	6838      	ldr	r0, [r7, #0]
 8017a80:	4413      	add	r3, r2
 8017a82:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017a86:	6803      	ldr	r3, [r0, #0]
 8017a88:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a8a:	4798      	blx	r3
 8017a8c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017a90:	46b9      	mov	r9, r7
 8017a92:	d01c      	beq.n	8017ace <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8017a94:	f010 0f04 	tst.w	r0, #4
 8017a98:	d01d      	beq.n	8017ad6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017a9a:	f8d9 0000 	ldr.w	r0, [r9]
 8017a9e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017aa2:	6801      	ldr	r1, [r0, #0]
 8017aa4:	f8cd b00c 	str.w	fp, [sp, #12]
 8017aa8:	2700      	movs	r7, #0
 8017aaa:	e9cd 4704 	strd	r4, r7, [sp, #16]
 8017aae:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8017ab2:	9402      	str	r4, [sp, #8]
 8017ab4:	b2ad      	uxth	r5, r5
 8017ab6:	fa1f f488 	uxth.w	r4, r8
 8017aba:	9501      	str	r5, [sp, #4]
 8017abc:	9400      	str	r4, [sp, #0]
 8017abe:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 8017ac0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8017ac4:	4631      	mov	r1, r6
 8017ac6:	47a0      	blx	r4
 8017ac8:	b00b      	add	sp, #44	; 0x2c
 8017aca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017ace:	b914      	cbnz	r4, 8017ad6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 8017ad0:	f010 0f01 	tst.w	r0, #1
 8017ad4:	e7e0      	b.n	8017a98 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8017ad6:	f8d9 0000 	ldr.w	r0, [r9]
 8017ada:	6803      	ldr	r3, [r0, #0]
 8017adc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017ade:	4798      	blx	r3
 8017ae0:	4b44      	ldr	r3, [pc, #272]	; (8017bf4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 8017ae2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8017ae6:	881a      	ldrh	r2, [r3, #0]
 8017ae8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8017aec:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017af0:	fb02 1404 	mla	r4, r2, r4, r1
 8017af4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8017af8:	469a      	mov	sl, r3
 8017afa:	fb05 f502 	mul.w	r5, r5, r2
 8017afe:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8017b02:	d059      	beq.n	8017bb8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 8017b04:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8017b08:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017b0c:	fa1f f28b 	uxth.w	r2, fp
 8017b10:	fa1f f989 	uxth.w	r9, r9
 8017b14:	469e      	mov	lr, r3
 8017b16:	42ac      	cmp	r4, r5
 8017b18:	d264      	bcs.n	8017be4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017b1a:	eb04 0a07 	add.w	sl, r4, r7
 8017b1e:	4554      	cmp	r4, sl
 8017b20:	d23d      	bcs.n	8017b9e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017b22:	8821      	ldrh	r1, [r4, #0]
 8017b24:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017b28:	1208      	asrs	r0, r1, #8
 8017b2a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8017b2e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017b32:	fb10 f009 	smulbb	r0, r0, r9
 8017b36:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8017b3a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8017b3e:	00c9      	lsls	r1, r1, #3
 8017b40:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017b44:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017b48:	10d8      	asrs	r0, r3, #3
 8017b4a:	b2c9      	uxtb	r1, r1
 8017b4c:	00db      	lsls	r3, r3, #3
 8017b4e:	fa1f fc8c 	uxth.w	ip, ip
 8017b52:	fb1b fb09 	smulbb	fp, fp, r9
 8017b56:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8017b5a:	b2db      	uxtb	r3, r3
 8017b5c:	fb11 f109 	smulbb	r1, r1, r9
 8017b60:	fb00 b002 	mla	r0, r0, r2, fp
 8017b64:	fb03 1302 	mla	r3, r3, r2, r1
 8017b68:	f10c 0b01 	add.w	fp, ip, #1
 8017b6c:	b29b      	uxth	r3, r3
 8017b6e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017b72:	b280      	uxth	r0, r0
 8017b74:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017b78:	f103 0c01 	add.w	ip, r3, #1
 8017b7c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017b80:	1c43      	adds	r3, r0, #1
 8017b82:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017b86:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017b8a:	0940      	lsrs	r0, r0, #5
 8017b8c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017b90:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017b94:	ea4c 0c00 	orr.w	ip, ip, r0
 8017b98:	f824 cb02 	strh.w	ip, [r4], #2
 8017b9c:	e7bf      	b.n	8017b1e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 8017b9e:	f8be 3000 	ldrh.w	r3, [lr]
 8017ba2:	eba3 0308 	sub.w	r3, r3, r8
 8017ba6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017baa:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017bae:	eba3 0308 	sub.w	r3, r3, r8
 8017bb2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017bb6:	e7ae      	b.n	8017b16 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 8017bb8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 8017bbc:	f8d9 0000 	ldr.w	r0, [r9]
 8017bc0:	42ac      	cmp	r4, r5
 8017bc2:	6803      	ldr	r3, [r0, #0]
 8017bc4:	d20e      	bcs.n	8017be4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 8017bc6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 8017bca:	4632      	mov	r2, r6
 8017bcc:	463b      	mov	r3, r7
 8017bce:	4621      	mov	r1, r4
 8017bd0:	47c0      	blx	r8
 8017bd2:	f8ba 3000 	ldrh.w	r3, [sl]
 8017bd6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017bda:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 8017bde:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8017be2:	e7eb      	b.n	8017bbc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 8017be4:	4b02      	ldr	r3, [pc, #8]	; (8017bf0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017be6:	6818      	ldr	r0, [r3, #0]
 8017be8:	6803      	ldr	r3, [r0, #0]
 8017bea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017bec:	4798      	blx	r3
 8017bee:	e76b      	b.n	8017ac8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017bf0:	20013758 	.word	0x20013758
 8017bf4:	20013752 	.word	0x20013752

08017bf8 <_ZN8touchgfx8LCD16bppD0Ev>:
 8017bf8:	b510      	push	{r4, lr}
 8017bfa:	2178      	movs	r1, #120	; 0x78
 8017bfc:	4604      	mov	r4, r0
 8017bfe:	f00a f9cc 	bl	8021f9a <_ZdlPvj>
 8017c02:	4620      	mov	r0, r4
 8017c04:	bd10      	pop	{r4, pc}

08017c06 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017c06:	b510      	push	{r4, lr}
 8017c08:	2104      	movs	r1, #4
 8017c0a:	4604      	mov	r4, r0
 8017c0c:	f00a f9c5 	bl	8021f9a <_ZdlPvj>
 8017c10:	4620      	mov	r0, r4
 8017c12:	bd10      	pop	{r4, pc}

08017c14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017c14:	b510      	push	{r4, lr}
 8017c16:	2104      	movs	r1, #4
 8017c18:	4604      	mov	r4, r0
 8017c1a:	f00a f9be 	bl	8021f9a <_ZdlPvj>
 8017c1e:	4620      	mov	r0, r4
 8017c20:	bd10      	pop	{r4, pc}

08017c22 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017c22:	b510      	push	{r4, lr}
 8017c24:	2104      	movs	r1, #4
 8017c26:	4604      	mov	r4, r0
 8017c28:	f00a f9b7 	bl	8021f9a <_ZdlPvj>
 8017c2c:	4620      	mov	r0, r4
 8017c2e:	bd10      	pop	{r4, pc}

08017c30 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017c30:	b510      	push	{r4, lr}
 8017c32:	2104      	movs	r1, #4
 8017c34:	4604      	mov	r4, r0
 8017c36:	f00a f9b0 	bl	8021f9a <_ZdlPvj>
 8017c3a:	4620      	mov	r0, r4
 8017c3c:	bd10      	pop	{r4, pc}

08017c3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017c3e:	b510      	push	{r4, lr}
 8017c40:	2104      	movs	r1, #4
 8017c42:	4604      	mov	r4, r0
 8017c44:	f00a f9a9 	bl	8021f9a <_ZdlPvj>
 8017c48:	4620      	mov	r0, r4
 8017c4a:	bd10      	pop	{r4, pc}

08017c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 8017c4c:	b510      	push	{r4, lr}
 8017c4e:	2104      	movs	r1, #4
 8017c50:	4604      	mov	r4, r0
 8017c52:	f00a f9a2 	bl	8021f9a <_ZdlPvj>
 8017c56:	4620      	mov	r0, r4
 8017c58:	bd10      	pop	{r4, pc}

08017c5a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017c5a:	b510      	push	{r4, lr}
 8017c5c:	2104      	movs	r1, #4
 8017c5e:	4604      	mov	r4, r0
 8017c60:	f00a f99b 	bl	8021f9a <_ZdlPvj>
 8017c64:	4620      	mov	r0, r4
 8017c66:	bd10      	pop	{r4, pc}

08017c68 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017c68:	b510      	push	{r4, lr}
 8017c6a:	2104      	movs	r1, #4
 8017c6c:	4604      	mov	r4, r0
 8017c6e:	f00a f994 	bl	8021f9a <_ZdlPvj>
 8017c72:	4620      	mov	r0, r4
 8017c74:	bd10      	pop	{r4, pc}

08017c76 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017c76:	b510      	push	{r4, lr}
 8017c78:	2104      	movs	r1, #4
 8017c7a:	4604      	mov	r4, r0
 8017c7c:	f00a f98d 	bl	8021f9a <_ZdlPvj>
 8017c80:	4620      	mov	r0, r4
 8017c82:	bd10      	pop	{r4, pc}

08017c84 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017c84:	b510      	push	{r4, lr}
 8017c86:	2104      	movs	r1, #4
 8017c88:	4604      	mov	r4, r0
 8017c8a:	f00a f986 	bl	8021f9a <_ZdlPvj>
 8017c8e:	4620      	mov	r0, r4
 8017c90:	bd10      	pop	{r4, pc}

08017c92 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017c92:	b510      	push	{r4, lr}
 8017c94:	2104      	movs	r1, #4
 8017c96:	4604      	mov	r4, r0
 8017c98:	f00a f97f 	bl	8021f9a <_ZdlPvj>
 8017c9c:	4620      	mov	r0, r4
 8017c9e:	bd10      	pop	{r4, pc}

08017ca0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017ca0:	b510      	push	{r4, lr}
 8017ca2:	2104      	movs	r1, #4
 8017ca4:	4604      	mov	r4, r0
 8017ca6:	f00a f978 	bl	8021f9a <_ZdlPvj>
 8017caa:	4620      	mov	r0, r4
 8017cac:	bd10      	pop	{r4, pc}

08017cae <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8017cae:	b510      	push	{r4, lr}
 8017cb0:	2104      	movs	r1, #4
 8017cb2:	4604      	mov	r4, r0
 8017cb4:	f00a f971 	bl	8021f9a <_ZdlPvj>
 8017cb8:	4620      	mov	r0, r4
 8017cba:	bd10      	pop	{r4, pc}

08017cbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017cbc:	b510      	push	{r4, lr}
 8017cbe:	2104      	movs	r1, #4
 8017cc0:	4604      	mov	r4, r0
 8017cc2:	f00a f96a 	bl	8021f9a <_ZdlPvj>
 8017cc6:	4620      	mov	r0, r4
 8017cc8:	bd10      	pop	{r4, pc}

08017cca <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017cca:	b510      	push	{r4, lr}
 8017ccc:	2104      	movs	r1, #4
 8017cce:	4604      	mov	r4, r0
 8017cd0:	f00a f963 	bl	8021f9a <_ZdlPvj>
 8017cd4:	4620      	mov	r0, r4
 8017cd6:	bd10      	pop	{r4, pc}

08017cd8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017cd8:	b510      	push	{r4, lr}
 8017cda:	2104      	movs	r1, #4
 8017cdc:	4604      	mov	r4, r0
 8017cde:	f00a f95c 	bl	8021f9a <_ZdlPvj>
 8017ce2:	4620      	mov	r0, r4
 8017ce4:	bd10      	pop	{r4, pc}

08017ce6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017ce6:	b510      	push	{r4, lr}
 8017ce8:	2104      	movs	r1, #4
 8017cea:	4604      	mov	r4, r0
 8017cec:	f00a f955 	bl	8021f9a <_ZdlPvj>
 8017cf0:	4620      	mov	r0, r4
 8017cf2:	bd10      	pop	{r4, pc}

08017cf4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017cf4:	b510      	push	{r4, lr}
 8017cf6:	2104      	movs	r1, #4
 8017cf8:	4604      	mov	r4, r0
 8017cfa:	f00a f94e 	bl	8021f9a <_ZdlPvj>
 8017cfe:	4620      	mov	r0, r4
 8017d00:	bd10      	pop	{r4, pc}

08017d02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017d02:	b510      	push	{r4, lr}
 8017d04:	2104      	movs	r1, #4
 8017d06:	4604      	mov	r4, r0
 8017d08:	f00a f947 	bl	8021f9a <_ZdlPvj>
 8017d0c:	4620      	mov	r0, r4
 8017d0e:	bd10      	pop	{r4, pc}

08017d10 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017d10:	b510      	push	{r4, lr}
 8017d12:	2104      	movs	r1, #4
 8017d14:	4604      	mov	r4, r0
 8017d16:	f00a f940 	bl	8021f9a <_ZdlPvj>
 8017d1a:	4620      	mov	r0, r4
 8017d1c:	bd10      	pop	{r4, pc}

08017d1e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017d1e:	b510      	push	{r4, lr}
 8017d20:	2104      	movs	r1, #4
 8017d22:	4604      	mov	r4, r0
 8017d24:	f00a f939 	bl	8021f9a <_ZdlPvj>
 8017d28:	4620      	mov	r0, r4
 8017d2a:	bd10      	pop	{r4, pc}

08017d2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017d2c:	b510      	push	{r4, lr}
 8017d2e:	2104      	movs	r1, #4
 8017d30:	4604      	mov	r4, r0
 8017d32:	f00a f932 	bl	8021f9a <_ZdlPvj>
 8017d36:	4620      	mov	r0, r4
 8017d38:	bd10      	pop	{r4, pc}

08017d3a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017d3a:	b510      	push	{r4, lr}
 8017d3c:	2104      	movs	r1, #4
 8017d3e:	4604      	mov	r4, r0
 8017d40:	f00a f92b 	bl	8021f9a <_ZdlPvj>
 8017d44:	4620      	mov	r0, r4
 8017d46:	bd10      	pop	{r4, pc}

08017d48 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017d48:	b510      	push	{r4, lr}
 8017d4a:	2104      	movs	r1, #4
 8017d4c:	4604      	mov	r4, r0
 8017d4e:	f00a f924 	bl	8021f9a <_ZdlPvj>
 8017d52:	4620      	mov	r0, r4
 8017d54:	bd10      	pop	{r4, pc}

08017d56 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017d56:	b510      	push	{r4, lr}
 8017d58:	2104      	movs	r1, #4
 8017d5a:	4604      	mov	r4, r0
 8017d5c:	f00a f91d 	bl	8021f9a <_ZdlPvj>
 8017d60:	4620      	mov	r0, r4
 8017d62:	bd10      	pop	{r4, pc}

08017d64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017d64:	b510      	push	{r4, lr}
 8017d66:	2104      	movs	r1, #4
 8017d68:	4604      	mov	r4, r0
 8017d6a:	f00a f916 	bl	8021f9a <_ZdlPvj>
 8017d6e:	4620      	mov	r0, r4
 8017d70:	bd10      	pop	{r4, pc}

08017d72 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017d72:	b510      	push	{r4, lr}
 8017d74:	2104      	movs	r1, #4
 8017d76:	4604      	mov	r4, r0
 8017d78:	f00a f90f 	bl	8021f9a <_ZdlPvj>
 8017d7c:	4620      	mov	r0, r4
 8017d7e:	bd10      	pop	{r4, pc}

08017d80 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017d80:	b510      	push	{r4, lr}
 8017d82:	2104      	movs	r1, #4
 8017d84:	4604      	mov	r4, r0
 8017d86:	f00a f908 	bl	8021f9a <_ZdlPvj>
 8017d8a:	4620      	mov	r0, r4
 8017d8c:	bd10      	pop	{r4, pc}
	...

08017d90 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017d90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017d94:	b091      	sub	sp, #68	; 0x44
 8017d96:	469b      	mov	fp, r3
 8017d98:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 8017d9c:	4616      	mov	r6, r2
 8017d9e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017da2:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017da6:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 8017daa:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8017dae:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017db2:	4604      	mov	r4, r0
 8017db4:	460d      	mov	r5, r1
 8017db6:	4640      	mov	r0, r8
 8017db8:	4659      	mov	r1, fp
 8017dba:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017dbe:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 8017dc2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 8017dc6:	f7f3 ffed 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8017dca:	4631      	mov	r1, r6
 8017dcc:	4640      	mov	r0, r8
 8017dce:	f7f3 ffe9 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8017dd2:	4b74      	ldr	r3, [pc, #464]	; (8017fa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 8017dd4:	8818      	ldrh	r0, [r3, #0]
 8017dd6:	4b74      	ldr	r3, [pc, #464]	; (8017fa8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 8017dd8:	8819      	ldrh	r1, [r3, #0]
 8017dda:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017dde:	2b00      	cmp	r3, #0
 8017de0:	b202      	sxth	r2, r0
 8017de2:	b20e      	sxth	r6, r1
 8017de4:	da07      	bge.n	8017df6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 8017de6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8017dea:	4463      	add	r3, ip
 8017dec:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 8017df0:	2300      	movs	r3, #0
 8017df2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 8017df6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 8017dfa:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8017dfe:	1ad2      	subs	r2, r2, r3
 8017e00:	4594      	cmp	ip, r2
 8017e02:	bfc4      	itt	gt
 8017e04:	1ac2      	subgt	r2, r0, r3
 8017e06:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 8017e0a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017e0e:	2a00      	cmp	r2, #0
 8017e10:	da07      	bge.n	8017e22 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017e12:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017e16:	4462      	add	r2, ip
 8017e18:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8017e1c:	2200      	movs	r2, #0
 8017e1e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017e22:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017e26:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017e2a:	eba6 060a 	sub.w	r6, r6, sl
 8017e2e:	42b2      	cmp	r2, r6
 8017e30:	bfc4      	itt	gt
 8017e32:	eba1 020a 	subgt.w	r2, r1, sl
 8017e36:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 8017e3a:	4a5c      	ldr	r2, [pc, #368]	; (8017fac <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 8017e3c:	7812      	ldrb	r2, [r2, #0]
 8017e3e:	b9a2      	cbnz	r2, 8017e6a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017e40:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017e44:	4286      	cmp	r6, r0
 8017e46:	4640      	mov	r0, r8
 8017e48:	9303      	str	r3, [sp, #12]
 8017e4a:	bf14      	ite	ne
 8017e4c:	2600      	movne	r6, #0
 8017e4e:	2601      	moveq	r6, #1
 8017e50:	f7f3 ffeb 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017e54:	9b03      	ldr	r3, [sp, #12]
 8017e56:	b160      	cbz	r0, 8017e72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017e58:	2300      	movs	r3, #0
 8017e5a:	8023      	strh	r3, [r4, #0]
 8017e5c:	8063      	strh	r3, [r4, #2]
 8017e5e:	80a3      	strh	r3, [r4, #4]
 8017e60:	4620      	mov	r0, r4
 8017e62:	80e3      	strh	r3, [r4, #6]
 8017e64:	b011      	add	sp, #68	; 0x44
 8017e66:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017e6a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017e6e:	428e      	cmp	r6, r1
 8017e70:	e7e9      	b.n	8017e46 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017e72:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017e76:	9205      	str	r2, [sp, #20]
 8017e78:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 8017e7c:	9206      	str	r2, [sp, #24]
 8017e7e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017e82:	900e      	str	r0, [sp, #56]	; 0x38
 8017e84:	1a9b      	subs	r3, r3, r2
 8017e86:	b21b      	sxth	r3, r3
 8017e88:	9303      	str	r3, [sp, #12]
 8017e8a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8017e8e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017e92:	ebaa 0a03 	sub.w	sl, sl, r3
 8017e96:	fa0f f38a 	sxth.w	r3, sl
 8017e9a:	9304      	str	r3, [sp, #16]
 8017e9c:	9b03      	ldr	r3, [sp, #12]
 8017e9e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017ea2:	9b04      	ldr	r3, [sp, #16]
 8017ea4:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017ea8:	9b05      	ldr	r3, [sp, #20]
 8017eaa:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 8017eae:	a90e      	add	r1, sp, #56	; 0x38
 8017eb0:	9b06      	ldr	r3, [sp, #24]
 8017eb2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8017eb6:	a80c      	add	r0, sp, #48	; 0x30
 8017eb8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 8017ebc:	f7f9 fbcc 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ec0:	4640      	mov	r0, r8
 8017ec2:	f7f9 fb85 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ec6:	a80e      	add	r0, sp, #56	; 0x38
 8017ec8:	f7f9 fb82 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ecc:	4b38      	ldr	r3, [pc, #224]	; (8017fb0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 8017ece:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 8017ed2:	881b      	ldrh	r3, [r3, #0]
 8017ed4:	9307      	str	r3, [sp, #28]
 8017ed6:	682b      	ldr	r3, [r5, #0]
 8017ed8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8017fb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017edc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017ede:	4628      	mov	r0, r5
 8017ee0:	4798      	blx	r3
 8017ee2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 8017ee6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 8017eea:	4681      	mov	r9, r0
 8017eec:	fb1a 3305 	smlabb	r3, sl, r5, r3
 8017ef0:	f8db 0000 	ldr.w	r0, [fp]
 8017ef4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8017ef6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8017efa:	6803      	ldr	r3, [r0, #0]
 8017efc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017efe:	4798      	blx	r3
 8017f00:	4607      	mov	r7, r0
 8017f02:	f8db 0000 	ldr.w	r0, [fp]
 8017f06:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8017f0a:	6803      	ldr	r3, [r0, #0]
 8017f0c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017f10:	9109      	str	r1, [sp, #36]	; 0x24
 8017f12:	9208      	str	r2, [sp, #32]
 8017f14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017f16:	4798      	blx	r3
 8017f18:	f010 0f01 	tst.w	r0, #1
 8017f1c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017f20:	d012      	beq.n	8017f48 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017f22:	f8db 0000 	ldr.w	r0, [fp]
 8017f26:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8017f2a:	6803      	ldr	r3, [r0, #0]
 8017f2c:	9200      	str	r2, [sp, #0]
 8017f2e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017f30:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017f34:	462b      	mov	r3, r5
 8017f36:	47b0      	blx	r6
 8017f38:	9b03      	ldr	r3, [sp, #12]
 8017f3a:	8023      	strh	r3, [r4, #0]
 8017f3c:	9b04      	ldr	r3, [sp, #16]
 8017f3e:	8063      	strh	r3, [r4, #2]
 8017f40:	9b05      	ldr	r3, [sp, #20]
 8017f42:	80a3      	strh	r3, [r4, #4]
 8017f44:	9b06      	ldr	r3, [sp, #24]
 8017f46:	e78b      	b.n	8017e60 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017f48:	fb09 f202 	mul.w	r2, r9, r2
 8017f4c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017f50:	440f      	add	r7, r1
 8017f52:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017f56:	b166      	cbz	r6, 8017f72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017f58:	9a07      	ldr	r2, [sp, #28]
 8017f5a:	4592      	cmp	sl, r2
 8017f5c:	d109      	bne.n	8017f72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017f5e:	f8db 0000 	ldr.w	r0, [fp]
 8017f62:	6802      	ldr	r2, [r0, #0]
 8017f64:	fb09 f303 	mul.w	r3, r9, r3
 8017f68:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017f6a:	4629      	mov	r1, r5
 8017f6c:	463a      	mov	r2, r7
 8017f6e:	47b0      	blx	r6
 8017f70:	e7e2      	b.n	8017f38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017f72:	fb0a f303 	mul.w	r3, sl, r3
 8017f76:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8017fb4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017f7a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017f7e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017f82:	4545      	cmp	r5, r8
 8017f84:	d2d8      	bcs.n	8017f38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017f86:	f8db 0000 	ldr.w	r0, [fp]
 8017f8a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017f8e:	6802      	ldr	r2, [r0, #0]
 8017f90:	4629      	mov	r1, r5
 8017f92:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017f96:	005b      	lsls	r3, r3, #1
 8017f98:	463a      	mov	r2, r7
 8017f9a:	47d0      	blx	sl
 8017f9c:	444f      	add	r7, r9
 8017f9e:	4435      	add	r5, r6
 8017fa0:	e7ef      	b.n	8017f82 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017fa2:	bf00      	nop
 8017fa4:	2001374c 	.word	0x2001374c
 8017fa8:	2001374e 	.word	0x2001374e
 8017fac:	20013750 	.word	0x20013750
 8017fb0:	20013752 	.word	0x20013752
 8017fb4:	20013758 	.word	0x20013758

08017fb8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017fb8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017fba:	4606      	mov	r6, r0
 8017fbc:	b087      	sub	sp, #28
 8017fbe:	460c      	mov	r4, r1
 8017fc0:	4617      	mov	r7, r2
 8017fc2:	461d      	mov	r5, r3
 8017fc4:	b333      	cbz	r3, 8018014 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017fc6:	4608      	mov	r0, r1
 8017fc8:	f7f3 ff2f 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8017fcc:	bb10      	cbnz	r0, 8018014 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017fce:	6820      	ldr	r0, [r4, #0]
 8017fd0:	6861      	ldr	r1, [r4, #4]
 8017fd2:	4c1c      	ldr	r4, [pc, #112]	; (8018044 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017fd4:	ab04      	add	r3, sp, #16
 8017fd6:	c303      	stmia	r3!, {r0, r1}
 8017fd8:	a804      	add	r0, sp, #16
 8017fda:	f7f9 faf9 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fde:	6820      	ldr	r0, [r4, #0]
 8017fe0:	6803      	ldr	r3, [r0, #0]
 8017fe2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017fe4:	4798      	blx	r3
 8017fe6:	2dff      	cmp	r5, #255	; 0xff
 8017fe8:	d016      	beq.n	8018018 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017fea:	f010 0f08 	tst.w	r0, #8
 8017fee:	6820      	ldr	r0, [r4, #0]
 8017ff0:	d015      	beq.n	801801e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017ff2:	2400      	movs	r4, #0
 8017ff4:	6801      	ldr	r1, [r0, #0]
 8017ff6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017ffa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017ffe:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8018002:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8018006:	9401      	str	r4, [sp, #4]
 8018008:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801800c:	9400      	str	r4, [sp, #0]
 801800e:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8018010:	4639      	mov	r1, r7
 8018012:	47a0      	blx	r4
 8018014:	b007      	add	sp, #28
 8018016:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8018018:	f010 0f02 	tst.w	r0, #2
 801801c:	e7e7      	b.n	8017fee <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801801e:	6803      	ldr	r3, [r0, #0]
 8018020:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018022:	4798      	blx	r3
 8018024:	4b08      	ldr	r3, [pc, #32]	; (8018048 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8018026:	881a      	ldrh	r2, [r3, #0]
 8018028:	6833      	ldr	r3, [r6, #0]
 801802a:	e9cd 7500 	strd	r7, r5, [sp]
 801802e:	4601      	mov	r1, r0
 8018030:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8018032:	4630      	mov	r0, r6
 8018034:	ab04      	add	r3, sp, #16
 8018036:	47a8      	blx	r5
 8018038:	6820      	ldr	r0, [r4, #0]
 801803a:	6803      	ldr	r3, [r0, #0]
 801803c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801803e:	4798      	blx	r3
 8018040:	e7e8      	b.n	8018014 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8018042:	bf00      	nop
 8018044:	20013758 	.word	0x20013758
 8018048:	20013752 	.word	0x20013752

0801804c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801804c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018050:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8018054:	9e08      	ldr	r6, [sp, #32]
 8018056:	4688      	mov	r8, r1
 8018058:	4614      	mov	r4, r2
 801805a:	461d      	mov	r5, r3
 801805c:	2f00      	cmp	r7, #0
 801805e:	f000 80a9 	beq.w	80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018062:	4618      	mov	r0, r3
 8018064:	f7f3 fee1 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018068:	2800      	cmp	r0, #0
 801806a:	f040 80a3 	bne.w	80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801806e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8018072:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8018076:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801807a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801807e:	fb04 1303 	mla	r3, r4, r3, r1
 8018082:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8018086:	4365      	muls	r5, r4
 8018088:	2fff      	cmp	r7, #255	; 0xff
 801808a:	eba4 0200 	sub.w	r2, r4, r0
 801808e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8018092:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8018096:	d04a      	beq.n	801812e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8018098:	b2bc      	uxth	r4, r7
 801809a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 801809e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 80180a2:	fa5f f788 	uxtb.w	r7, r8
 80180a6:	b2f3      	uxtb	r3, r6
 80180a8:	0040      	lsls	r0, r0, #1
 80180aa:	fb0e fe04 	mul.w	lr, lr, r4
 80180ae:	4367      	muls	r7, r4
 80180b0:	4363      	muls	r3, r4
 80180b2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 80180b6:	fa1f fc8c 	uxth.w	ip, ip
 80180ba:	42a9      	cmp	r1, r5
 80180bc:	d27a      	bcs.n	80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80180be:	eb01 0900 	add.w	r9, r1, r0
 80180c2:	4549      	cmp	r1, r9
 80180c4:	d231      	bcs.n	801812a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 80180c6:	880a      	ldrh	r2, [r1, #0]
 80180c8:	1214      	asrs	r4, r2, #8
 80180ca:	10d6      	asrs	r6, r2, #3
 80180cc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80180d0:	00d2      	lsls	r2, r2, #3
 80180d2:	b2d2      	uxtb	r2, r2
 80180d4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80180d8:	fb14 f40c 	smulbb	r4, r4, ip
 80180dc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80180e0:	4474      	add	r4, lr
 80180e2:	fb12 f20c 	smulbb	r2, r2, ip
 80180e6:	b2a4      	uxth	r4, r4
 80180e8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80180ec:	441a      	add	r2, r3
 80180ee:	b292      	uxth	r2, r2
 80180f0:	f104 0a01 	add.w	sl, r4, #1
 80180f4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80180f8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80180fc:	fb16 f60c 	smulbb	r6, r6, ip
 8018100:	f102 0a01 	add.w	sl, r2, #1
 8018104:	443e      	add	r6, r7
 8018106:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801810a:	b2b6      	uxth	r6, r6
 801810c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018110:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018114:	4322      	orrs	r2, r4
 8018116:	1c74      	adds	r4, r6, #1
 8018118:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801811c:	0976      	lsrs	r6, r6, #5
 801811e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018122:	4332      	orrs	r2, r6
 8018124:	f821 2b02 	strh.w	r2, [r1], #2
 8018128:	e7cb      	b.n	80180c2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801812a:	4441      	add	r1, r8
 801812c:	e7c5      	b.n	80180ba <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801812e:	4f22      	ldr	r7, [pc, #136]	; (80181b8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8018130:	0973      	lsrs	r3, r6, #5
 8018132:	ea08 0707 	and.w	r7, r8, r7
 8018136:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801813a:	433b      	orrs	r3, r7
 801813c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8018140:	4333      	orrs	r3, r6
 8018142:	07e7      	lsls	r7, r4, #31
 8018144:	b29b      	uxth	r3, r3
 8018146:	d50b      	bpl.n	8018160 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8018148:	0040      	lsls	r0, r0, #1
 801814a:	0052      	lsls	r2, r2, #1
 801814c:	42a9      	cmp	r1, r5
 801814e:	d231      	bcs.n	80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018150:	180c      	adds	r4, r1, r0
 8018152:	42a1      	cmp	r1, r4
 8018154:	d202      	bcs.n	801815c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8018156:	f821 3b02 	strh.w	r3, [r1], #2
 801815a:	e7fa      	b.n	8018152 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801815c:	4411      	add	r1, r2
 801815e:	e7f5      	b.n	801814c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8018160:	078e      	lsls	r6, r1, #30
 8018162:	d008      	beq.n	8018176 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8018164:	0066      	lsls	r6, r4, #1
 8018166:	460a      	mov	r2, r1
 8018168:	42aa      	cmp	r2, r5
 801816a:	d202      	bcs.n	8018172 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801816c:	8013      	strh	r3, [r2, #0]
 801816e:	4432      	add	r2, r6
 8018170:	e7fa      	b.n	8018168 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8018172:	3102      	adds	r1, #2
 8018174:	3801      	subs	r0, #1
 8018176:	07c2      	lsls	r2, r0, #31
 8018178:	d50b      	bpl.n	8018192 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801817a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 801817e:	3a01      	subs	r2, #1
 8018180:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8018184:	0066      	lsls	r6, r4, #1
 8018186:	42aa      	cmp	r2, r5
 8018188:	d202      	bcs.n	8018190 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801818a:	8013      	strh	r3, [r2, #0]
 801818c:	4432      	add	r2, r6
 801818e:	e7fa      	b.n	8018186 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8018190:	3801      	subs	r0, #1
 8018192:	b178      	cbz	r0, 80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8018194:	1040      	asrs	r0, r0, #1
 8018196:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801819a:	0080      	lsls	r0, r0, #2
 801819c:	0064      	lsls	r4, r4, #1
 801819e:	42a9      	cmp	r1, r5
 80181a0:	d208      	bcs.n	80181b4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 80181a2:	180e      	adds	r6, r1, r0
 80181a4:	460a      	mov	r2, r1
 80181a6:	42b2      	cmp	r2, r6
 80181a8:	d202      	bcs.n	80181b0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 80181aa:	f842 3b04 	str.w	r3, [r2], #4
 80181ae:	e7fa      	b.n	80181a6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 80181b0:	4421      	add	r1, r4
 80181b2:	e7f4      	b.n	801819e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 80181b4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80181b8:	00fff800 	.word	0x00fff800

080181bc <_ZN8touchgfx8LCD16bppC1Ev>:
 80181bc:	2200      	movs	r2, #0
 80181be:	4910      	ldr	r1, [pc, #64]	; (8018200 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 80181c0:	6042      	str	r2, [r0, #4]
 80181c2:	6001      	str	r1, [r0, #0]
 80181c4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 80181c8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 80181cc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 80181d0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 80181d4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80181d8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80181dc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80181e0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80181e4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80181e8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80181ec:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80181f0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80181f4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80181f8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80181fc:	4770      	bx	lr
 80181fe:	bf00      	nop
 8018200:	0802a880 	.word	0x0802a880

08018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8018204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018208:	460d      	mov	r5, r1
 801820a:	b08d      	sub	sp, #52	; 0x34
 801820c:	4604      	mov	r4, r0
 801820e:	6808      	ldr	r0, [r1, #0]
 8018210:	6849      	ldr	r1, [r1, #4]
 8018212:	4699      	mov	r9, r3
 8018214:	ab08      	add	r3, sp, #32
 8018216:	c303      	stmia	r3!, {r0, r1}
 8018218:	6810      	ldr	r0, [r2, #0]
 801821a:	6851      	ldr	r1, [r2, #4]
 801821c:	ab0a      	add	r3, sp, #40	; 0x28
 801821e:	c303      	stmia	r3!, {r0, r1}
 8018220:	a808      	add	r0, sp, #32
 8018222:	f7f9 f9d5 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018226:	4629      	mov	r1, r5
 8018228:	a80a      	add	r0, sp, #40	; 0x28
 801822a:	f7f9 fa15 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801822e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8018232:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8018236:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 801823a:	4d63      	ldr	r5, [pc, #396]	; (80183c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801823c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8018240:	6828      	ldr	r0, [r5, #0]
 8018242:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8018246:	fb11 2103 	smlabb	r1, r1, r3, r2
 801824a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801824e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8018252:	440a      	add	r2, r1
 8018254:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8018258:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801825c:	4413      	add	r3, r2
 801825e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8018262:	6803      	ldr	r3, [r0, #0]
 8018264:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018266:	4798      	blx	r3
 8018268:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801826c:	d119      	bne.n	80182a2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801826e:	f010 0f20 	tst.w	r0, #32
 8018272:	6828      	ldr	r0, [r5, #0]
 8018274:	d018      	beq.n	80182a8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8018276:	2500      	movs	r5, #0
 8018278:	6801      	ldr	r1, [r0, #0]
 801827a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 801827e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8018282:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8018286:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 801828a:	9502      	str	r5, [sp, #8]
 801828c:	b2b6      	uxth	r6, r6
 801828e:	fa1f f588 	uxth.w	r5, r8
 8018292:	9601      	str	r6, [sp, #4]
 8018294:	9500      	str	r5, [sp, #0]
 8018296:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8018298:	4621      	mov	r1, r4
 801829a:	47a8      	blx	r5
 801829c:	b00d      	add	sp, #52	; 0x34
 801829e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80182a2:	f010 0f40 	tst.w	r0, #64	; 0x40
 80182a6:	e7e4      	b.n	8018272 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 80182a8:	6803      	ldr	r3, [r0, #0]
 80182aa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80182ac:	4798      	blx	r3
 80182ae:	4947      	ldr	r1, [pc, #284]	; (80183cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 80182b0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80182b4:	880b      	ldrh	r3, [r1, #0]
 80182b6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 80182ba:	fb03 5202 	mla	r2, r3, r2, r5
 80182be:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80182c2:	4373      	muls	r3, r6
 80182c4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80182c8:	9307      	str	r3, [sp, #28]
 80182ca:	ea4f 0348 	mov.w	r3, r8, lsl #1
 80182ce:	9306      	str	r3, [sp, #24]
 80182d0:	468a      	mov	sl, r1
 80182d2:	9b07      	ldr	r3, [sp, #28]
 80182d4:	4298      	cmp	r0, r3
 80182d6:	d270      	bcs.n	80183ba <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 80182d8:	9b06      	ldr	r3, [sp, #24]
 80182da:	4621      	mov	r1, r4
 80182dc:	eb00 0b03 	add.w	fp, r0, r3
 80182e0:	4558      	cmp	r0, fp
 80182e2:	d25d      	bcs.n	80183a0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 80182e4:	f851 4b04 	ldr.w	r4, [r1], #4
 80182e8:	0e23      	lsrs	r3, r4, #24
 80182ea:	d014      	beq.n	8018316 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80182ec:	2bff      	cmp	r3, #255	; 0xff
 80182ee:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 80182f2:	d112      	bne.n	801831a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80182f4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80182f8:	d10f      	bne.n	801831a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 80182fa:	0963      	lsrs	r3, r4, #5
 80182fc:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8018300:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018304:	f02c 0c07 	bic.w	ip, ip, #7
 8018308:	ea43 0c0c 	orr.w	ip, r3, ip
 801830c:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8018310:	ea4c 0404 	orr.w	r4, ip, r4
 8018314:	8004      	strh	r4, [r0, #0]
 8018316:	3002      	adds	r0, #2
 8018318:	e7e2      	b.n	80182e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801831a:	fb09 f303 	mul.w	r3, r9, r3
 801831e:	8807      	ldrh	r7, [r0, #0]
 8018320:	1c5a      	adds	r2, r3, #1
 8018322:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8018326:	1212      	asrs	r2, r2, #8
 8018328:	123e      	asrs	r6, r7, #8
 801832a:	b293      	uxth	r3, r2
 801832c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8018330:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018334:	43d2      	mvns	r2, r2
 8018336:	b2d2      	uxtb	r2, r2
 8018338:	10fd      	asrs	r5, r7, #3
 801833a:	fb1e fe03 	smulbb	lr, lr, r3
 801833e:	00ff      	lsls	r7, r7, #3
 8018340:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018344:	fb06 e602 	mla	r6, r6, r2, lr
 8018348:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801834c:	b2ff      	uxtb	r7, r7
 801834e:	fa5f fc8c 	uxtb.w	ip, ip
 8018352:	b2e4      	uxtb	r4, r4
 8018354:	b2b6      	uxth	r6, r6
 8018356:	fb1c fc03 	smulbb	ip, ip, r3
 801835a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801835e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8018362:	fb14 f403 	smulbb	r4, r4, r3
 8018366:	fb05 c502 	mla	r5, r5, r2, ip
 801836a:	f106 0e01 	add.w	lr, r6, #1
 801836e:	fb07 4702 	mla	r7, r7, r2, r4
 8018372:	b2ad      	uxth	r5, r5
 8018374:	b2bf      	uxth	r7, r7
 8018376:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801837a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 801837e:	f105 0c01 	add.w	ip, r5, #1
 8018382:	1c7e      	adds	r6, r7, #1
 8018384:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8018388:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801838c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8018390:	096d      	lsrs	r5, r5, #5
 8018392:	ea46 060e 	orr.w	r6, r6, lr
 8018396:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801839a:	432e      	orrs	r6, r5
 801839c:	8006      	strh	r6, [r0, #0]
 801839e:	e7ba      	b.n	8018316 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 80183a0:	f8ba 3000 	ldrh.w	r3, [sl]
 80183a4:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 80183a8:	eba3 0308 	sub.w	r3, r3, r8
 80183ac:	eba4 0408 	sub.w	r4, r4, r8
 80183b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80183b4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 80183b8:	e78b      	b.n	80182d2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 80183ba:	4b03      	ldr	r3, [pc, #12]	; (80183c8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 80183bc:	6818      	ldr	r0, [r3, #0]
 80183be:	6803      	ldr	r3, [r0, #0]
 80183c0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80183c2:	4798      	blx	r3
 80183c4:	e76a      	b.n	801829c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 80183c6:	bf00      	nop
 80183c8:	20013758 	.word	0x20013758
 80183cc:	20013752 	.word	0x20013752

080183d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 80183d0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80183d4:	460c      	mov	r4, r1
 80183d6:	b085      	sub	sp, #20
 80183d8:	6810      	ldr	r0, [r2, #0]
 80183da:	6851      	ldr	r1, [r2, #4]
 80183dc:	466d      	mov	r5, sp
 80183de:	c503      	stmia	r5!, {r0, r1}
 80183e0:	6818      	ldr	r0, [r3, #0]
 80183e2:	6859      	ldr	r1, [r3, #4]
 80183e4:	4616      	mov	r6, r2
 80183e6:	c503      	stmia	r5!, {r0, r1}
 80183e8:	4668      	mov	r0, sp
 80183ea:	f7f9 f8f1 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183ee:	4631      	mov	r1, r6
 80183f0:	a802      	add	r0, sp, #8
 80183f2:	f7f9 f931 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183f6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 80183fa:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 80183fe:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8018402:	4d28      	ldr	r5, [pc, #160]	; (80184a4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8018404:	4e28      	ldr	r6, [pc, #160]	; (80184a8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8018406:	6828      	ldr	r0, [r5, #0]
 8018408:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801840c:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8018410:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018414:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8018418:	f8bd 1000 	ldrh.w	r1, [sp]
 801841c:	440a      	add	r2, r1
 801841e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8018422:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8018426:	4413      	add	r3, r2
 8018428:	f8ad 300a 	strh.w	r3, [sp, #10]
 801842c:	6803      	ldr	r3, [r0, #0]
 801842e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018430:	4798      	blx	r3
 8018432:	8833      	ldrh	r3, [r6, #0]
 8018434:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8018438:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801843c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 80184ac <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8018440:	fb03 1202 	mla	r2, r3, r2, r1
 8018444:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018448:	fb08 f303 	mul.w	r3, r8, r3
 801844c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018450:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8018454:	4298      	cmp	r0, r3
 8018456:	d21d      	bcs.n	8018494 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8018458:	eb00 080c 	add.w	r8, r0, ip
 801845c:	4540      	cmp	r0, r8
 801845e:	d20f      	bcs.n	8018480 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8018460:	f854 1b04 	ldr.w	r1, [r4], #4
 8018464:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8018468:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801846c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8018470:	ea42 0209 	orr.w	r2, r2, r9
 8018474:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8018478:	430a      	orrs	r2, r1
 801847a:	f820 2b02 	strh.w	r2, [r0], #2
 801847e:	e7ed      	b.n	801845c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8018480:	8832      	ldrh	r2, [r6, #0]
 8018482:	1bd2      	subs	r2, r2, r7
 8018484:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018488:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801848c:	1bd2      	subs	r2, r2, r7
 801848e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8018492:	e7df      	b.n	8018454 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8018494:	6828      	ldr	r0, [r5, #0]
 8018496:	6803      	ldr	r3, [r0, #0]
 8018498:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801849a:	4798      	blx	r3
 801849c:	b005      	add	sp, #20
 801849e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80184a2:	bf00      	nop
 80184a4:	20013758 	.word	0x20013758
 80184a8:	20013752 	.word	0x20013752
 80184ac:	fffff800 	.word	0xfffff800

080184b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80184b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80184b4:	460e      	mov	r6, r1
 80184b6:	b08e      	sub	sp, #56	; 0x38
 80184b8:	4604      	mov	r4, r0
 80184ba:	6808      	ldr	r0, [r1, #0]
 80184bc:	6849      	ldr	r1, [r1, #4]
 80184be:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8018698 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 80184c2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801869c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 80184c6:	461d      	mov	r5, r3
 80184c8:	ab0a      	add	r3, sp, #40	; 0x28
 80184ca:	c303      	stmia	r3!, {r0, r1}
 80184cc:	6810      	ldr	r0, [r2, #0]
 80184ce:	6851      	ldr	r1, [r2, #4]
 80184d0:	ab0c      	add	r3, sp, #48	; 0x30
 80184d2:	c303      	stmia	r3!, {r0, r1}
 80184d4:	a80a      	add	r0, sp, #40	; 0x28
 80184d6:	f7f9 f87b 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80184da:	4631      	mov	r1, r6
 80184dc:	a80c      	add	r0, sp, #48	; 0x30
 80184de:	f7f9 f8bb 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80184e2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 80184e6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80184ea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 80184ee:	f8d8 0000 	ldr.w	r0, [r8]
 80184f2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 80184f6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 80184fa:	fb11 2103 	smlabb	r1, r1, r3, r2
 80184fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8018502:	440c      	add	r4, r1
 8018504:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8018508:	440a      	add	r2, r1
 801850a:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 801850e:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8018512:	4413      	add	r3, r2
 8018514:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018518:	6803      	ldr	r3, [r0, #0]
 801851a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801851c:	4798      	blx	r3
 801851e:	2dff      	cmp	r5, #255	; 0xff
 8018520:	d124      	bne.n	801856c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8018522:	f010 0f01 	tst.w	r0, #1
 8018526:	f8d8 0000 	ldr.w	r0, [r8]
 801852a:	d022      	beq.n	8018572 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801852c:	2100      	movs	r1, #0
 801852e:	f8d0 c000 	ldr.w	ip, [r0]
 8018532:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018536:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801853a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801853e:	f04f 0e01 	mov.w	lr, #1
 8018542:	f8cd e018 	str.w	lr, [sp, #24]
 8018546:	f8b9 e000 	ldrh.w	lr, [r9]
 801854a:	9503      	str	r5, [sp, #12]
 801854c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8018550:	b2b6      	uxth	r6, r6
 8018552:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018556:	9102      	str	r1, [sp, #8]
 8018558:	b2bf      	uxth	r7, r7
 801855a:	9601      	str	r6, [sp, #4]
 801855c:	9700      	str	r7, [sp, #0]
 801855e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8018562:	4621      	mov	r1, r4
 8018564:	47a8      	blx	r5
 8018566:	b00e      	add	sp, #56	; 0x38
 8018568:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801856c:	f010 0f04 	tst.w	r0, #4
 8018570:	e7d9      	b.n	8018526 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8018572:	6803      	ldr	r3, [r0, #0]
 8018574:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018576:	4798      	blx	r3
 8018578:	f8b9 3000 	ldrh.w	r3, [r9]
 801857c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018580:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8018584:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8018588:	fb03 1202 	mla	r2, r3, r2, r1
 801858c:	ebac 0c07 	sub.w	ip, ip, r7
 8018590:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018594:	435e      	muls	r6, r3
 8018596:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801859a:	2dff      	cmp	r5, #255	; 0xff
 801859c:	eba3 0707 	sub.w	r7, r3, r7
 80185a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80185a4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 80185a8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 80185ac:	d049      	beq.n	8018642 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 80185ae:	43eb      	mvns	r3, r5
 80185b0:	fa1f f985 	uxth.w	r9, r5
 80185b4:	b2db      	uxtb	r3, r3
 80185b6:	42b0      	cmp	r0, r6
 80185b8:	d266      	bcs.n	8018688 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80185ba:	eb00 0a0e 	add.w	sl, r0, lr
 80185be:	4550      	cmp	r0, sl
 80185c0:	4621      	mov	r1, r4
 80185c2:	f104 0403 	add.w	r4, r4, #3
 80185c6:	d25b      	bcs.n	8018680 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80185c8:	8802      	ldrh	r2, [r0, #0]
 80185ca:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80185ce:	ea4f 2822 	mov.w	r8, r2, asr #8
 80185d2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80185d6:	fb11 f109 	smulbb	r1, r1, r9
 80185da:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80185de:	10d5      	asrs	r5, r2, #3
 80185e0:	fb08 1803 	mla	r8, r8, r3, r1
 80185e4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80185e8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80185ec:	fb11 f109 	smulbb	r1, r1, r9
 80185f0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80185f4:	fb05 1503 	mla	r5, r5, r3, r1
 80185f8:	00d2      	lsls	r2, r2, #3
 80185fa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80185fe:	b2d2      	uxtb	r2, r2
 8018600:	fb11 f109 	smulbb	r1, r1, r9
 8018604:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8018608:	fa1f f888 	uxth.w	r8, r8
 801860c:	fb02 1203 	mla	r2, r2, r3, r1
 8018610:	b292      	uxth	r2, r2
 8018612:	f108 0101 	add.w	r1, r8, #1
 8018616:	b2ad      	uxth	r5, r5
 8018618:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801861c:	1c51      	adds	r1, r2, #1
 801861e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018622:	1c69      	adds	r1, r5, #1
 8018624:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018628:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801862c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018630:	096d      	lsrs	r5, r5, #5
 8018632:	ea42 0208 	orr.w	r2, r2, r8
 8018636:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801863a:	432a      	orrs	r2, r5
 801863c:	f820 2b02 	strh.w	r2, [r0], #2
 8018640:	e7bd      	b.n	80185be <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018642:	4a14      	ldr	r2, [pc, #80]	; (8018694 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018644:	42b0      	cmp	r0, r6
 8018646:	d21f      	bcs.n	8018688 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018648:	eb00 050e 	add.w	r5, r0, lr
 801864c:	42a8      	cmp	r0, r5
 801864e:	4621      	mov	r1, r4
 8018650:	f104 0403 	add.w	r4, r4, #3
 8018654:	d210      	bcs.n	8018678 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018656:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801865a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801865e:	00db      	lsls	r3, r3, #3
 8018660:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018664:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018668:	430b      	orrs	r3, r1
 801866a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801866e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018672:	f820 3b02 	strh.w	r3, [r0], #2
 8018676:	e7e9      	b.n	801864c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018678:	4438      	add	r0, r7
 801867a:	eb01 040c 	add.w	r4, r1, ip
 801867e:	e7e1      	b.n	8018644 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018680:	4438      	add	r0, r7
 8018682:	eb01 040c 	add.w	r4, r1, ip
 8018686:	e796      	b.n	80185b6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018688:	4b03      	ldr	r3, [pc, #12]	; (8018698 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801868a:	6818      	ldr	r0, [r3, #0]
 801868c:	6803      	ldr	r3, [r0, #0]
 801868e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018690:	4798      	blx	r3
 8018692:	e768      	b.n	8018566 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018694:	fffff800 	.word	0xfffff800
 8018698:	20013758 	.word	0x20013758
 801869c:	20013752 	.word	0x20013752

080186a0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 80186a0:	b4f0      	push	{r4, r5, r6, r7}
 80186a2:	4616      	mov	r6, r2
 80186a4:	2e01      	cmp	r6, #1
 80186a6:	461c      	mov	r4, r3
 80186a8:	460d      	mov	r5, r1
 80186aa:	9a04      	ldr	r2, [sp, #16]
 80186ac:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80186b0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80186b4:	d012      	beq.n	80186dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80186b6:	d303      	bcc.n	80186c0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80186b8:	2e02      	cmp	r6, #2
 80186ba:	d00a      	beq.n	80186d2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80186bc:	bcf0      	pop	{r4, r5, r6, r7}
 80186be:	4770      	bx	lr
 80186c0:	6805      	ldr	r5, [r0, #0]
 80186c2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80186c6:	68ed      	ldr	r5, [r5, #12]
 80186c8:	4613      	mov	r3, r2
 80186ca:	46ac      	mov	ip, r5
 80186cc:	4622      	mov	r2, r4
 80186ce:	bcf0      	pop	{r4, r5, r6, r7}
 80186d0:	4760      	bx	ip
 80186d2:	4621      	mov	r1, r4
 80186d4:	4628      	mov	r0, r5
 80186d6:	bcf0      	pop	{r4, r5, r6, r7}
 80186d8:	f7ff bd94 	b.w	8018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80186dc:	4621      	mov	r1, r4
 80186de:	4628      	mov	r0, r5
 80186e0:	bcf0      	pop	{r4, r5, r6, r7}
 80186e2:	f7ff bee5 	b.w	80184b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080186e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80186e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80186ec:	4681      	mov	r9, r0
 80186ee:	b093      	sub	sp, #76	; 0x4c
 80186f0:	6810      	ldr	r0, [r2, #0]
 80186f2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80186f6:	4f6d      	ldr	r7, [pc, #436]	; (80188ac <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80186f8:	4688      	mov	r8, r1
 80186fa:	6851      	ldr	r1, [r2, #4]
 80186fc:	ac0e      	add	r4, sp, #56	; 0x38
 80186fe:	c403      	stmia	r4!, {r0, r1}
 8018700:	6818      	ldr	r0, [r3, #0]
 8018702:	6859      	ldr	r1, [r3, #4]
 8018704:	ac10      	add	r4, sp, #64	; 0x40
 8018706:	4616      	mov	r6, r2
 8018708:	c403      	stmia	r4!, {r0, r1}
 801870a:	a80e      	add	r0, sp, #56	; 0x38
 801870c:	f7f8 ff60 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018710:	4631      	mov	r1, r6
 8018712:	a810      	add	r0, sp, #64	; 0x40
 8018714:	f7f8 ffa0 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018718:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801871c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8018720:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8018724:	4e62      	ldr	r6, [pc, #392]	; (80188b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018726:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801872a:	6830      	ldr	r0, [r6, #0]
 801872c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8018730:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018734:	4489      	add	r9, r1
 8018736:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801873a:	440a      	add	r2, r1
 801873c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018740:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018744:	4413      	add	r3, r2
 8018746:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801874a:	6803      	ldr	r3, [r0, #0]
 801874c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801874e:	4798      	blx	r3
 8018750:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018754:	6830      	ldr	r0, [r6, #0]
 8018756:	d01d      	beq.n	8018794 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018758:	2200      	movs	r2, #0
 801875a:	6801      	ldr	r1, [r0, #0]
 801875c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018760:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018764:	220b      	movs	r2, #11
 8018766:	9207      	str	r2, [sp, #28]
 8018768:	883a      	ldrh	r2, [r7, #0]
 801876a:	9206      	str	r2, [sp, #24]
 801876c:	2201      	movs	r2, #1
 801876e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018772:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8018776:	9203      	str	r2, [sp, #12]
 8018778:	b2a4      	uxth	r4, r4
 801877a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801877e:	9200      	str	r2, [sp, #0]
 8018780:	b2ad      	uxth	r5, r5
 8018782:	9502      	str	r5, [sp, #8]
 8018784:	9401      	str	r4, [sp, #4]
 8018786:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8018788:	4642      	mov	r2, r8
 801878a:	4649      	mov	r1, r9
 801878c:	47a0      	blx	r4
 801878e:	b013      	add	sp, #76	; 0x4c
 8018790:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018794:	6803      	ldr	r3, [r0, #0]
 8018796:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018798:	4798      	blx	r3
 801879a:	883b      	ldrh	r3, [r7, #0]
 801879c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 80187a0:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 80187a4:	fb03 1202 	mla	r2, r3, r2, r1
 80187a8:	435d      	muls	r5, r3
 80187aa:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 80187ae:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80187b2:	920c      	str	r2, [sp, #48]	; 0x30
 80187b4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80187b8:	1b12      	subs	r2, r2, r4
 80187ba:	920d      	str	r2, [sp, #52]	; 0x34
 80187bc:	0062      	lsls	r2, r4, #1
 80187be:	1b1c      	subs	r4, r3, r4
 80187c0:	0063      	lsls	r3, r4, #1
 80187c2:	920a      	str	r2, [sp, #40]	; 0x28
 80187c4:	930b      	str	r3, [sp, #44]	; 0x2c
 80187c6:	f04f 0e04 	mov.w	lr, #4
 80187ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80187cc:	4298      	cmp	r0, r3
 80187ce:	d266      	bcs.n	801889e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80187d0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80187d2:	eb00 0b03 	add.w	fp, r0, r3
 80187d6:	4558      	cmp	r0, fp
 80187d8:	d25c      	bcs.n	8018894 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80187da:	f819 3b01 	ldrb.w	r3, [r9], #1
 80187de:	fb1e e303 	smlabb	r3, lr, r3, lr
 80187e2:	f858 2003 	ldr.w	r2, [r8, r3]
 80187e6:	0e11      	lsrs	r1, r2, #24
 80187e8:	d012      	beq.n	8018810 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80187ea:	29ff      	cmp	r1, #255	; 0xff
 80187ec:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80187f0:	d110      	bne.n	8018814 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80187f2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80187f6:	d10d      	bne.n	8018814 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80187f8:	0953      	lsrs	r3, r2, #5
 80187fa:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80187fe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018802:	f027 0707 	bic.w	r7, r7, #7
 8018806:	431f      	orrs	r7, r3
 8018808:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801880c:	433a      	orrs	r2, r7
 801880e:	8002      	strh	r2, [r0, #0]
 8018810:	3002      	adds	r0, #2
 8018812:	e7e0      	b.n	80187d6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018814:	fb0a f101 	mul.w	r1, sl, r1
 8018818:	8806      	ldrh	r6, [r0, #0]
 801881a:	1c4b      	adds	r3, r1, #1
 801881c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018820:	1235      	asrs	r5, r6, #8
 8018822:	10f4      	asrs	r4, r6, #3
 8018824:	121b      	asrs	r3, r3, #8
 8018826:	00f6      	lsls	r6, r6, #3
 8018828:	b299      	uxth	r1, r3
 801882a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801882e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018832:	b2f6      	uxtb	r6, r6
 8018834:	43db      	mvns	r3, r3
 8018836:	b2d2      	uxtb	r2, r2
 8018838:	b2db      	uxtb	r3, r3
 801883a:	fb1c fc01 	smulbb	ip, ip, r1
 801883e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018842:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018846:	fb12 f201 	smulbb	r2, r2, r1
 801884a:	fb05 c503 	mla	r5, r5, r3, ip
 801884e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018852:	b2ff      	uxtb	r7, r7
 8018854:	fb06 2203 	mla	r2, r6, r3, r2
 8018858:	b2ad      	uxth	r5, r5
 801885a:	fb17 f701 	smulbb	r7, r7, r1
 801885e:	b292      	uxth	r2, r2
 8018860:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018864:	fb04 7403 	mla	r4, r4, r3, r7
 8018868:	f105 0c01 	add.w	ip, r5, #1
 801886c:	1c57      	adds	r7, r2, #1
 801886e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018872:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018876:	b2a4      	uxth	r4, r4
 8018878:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801887c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018880:	433d      	orrs	r5, r7
 8018882:	1c67      	adds	r7, r4, #1
 8018884:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018888:	0964      	lsrs	r4, r4, #5
 801888a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801888e:	4325      	orrs	r5, r4
 8018890:	8005      	strh	r5, [r0, #0]
 8018892:	e7bd      	b.n	8018810 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018894:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018896:	4418      	add	r0, r3
 8018898:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801889a:	4499      	add	r9, r3
 801889c:	e795      	b.n	80187ca <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801889e:	4b04      	ldr	r3, [pc, #16]	; (80188b0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 80188a0:	6818      	ldr	r0, [r3, #0]
 80188a2:	6803      	ldr	r3, [r0, #0]
 80188a4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80188a6:	4798      	blx	r3
 80188a8:	e771      	b.n	801878e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 80188aa:	bf00      	nop
 80188ac:	20013752 	.word	0x20013752
 80188b0:	20013758 	.word	0x20013758

080188b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80188b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80188b8:	b087      	sub	sp, #28
 80188ba:	4680      	mov	r8, r0
 80188bc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80188c0:	460d      	mov	r5, r1
 80188c2:	4614      	mov	r4, r2
 80188c4:	2e00      	cmp	r6, #0
 80188c6:	f000 80b9 	beq.w	8018a3c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80188ca:	6810      	ldr	r0, [r2, #0]
 80188cc:	6851      	ldr	r1, [r2, #4]
 80188ce:	af02      	add	r7, sp, #8
 80188d0:	c703      	stmia	r7!, {r0, r1}
 80188d2:	6818      	ldr	r0, [r3, #0]
 80188d4:	6859      	ldr	r1, [r3, #4]
 80188d6:	af04      	add	r7, sp, #16
 80188d8:	c703      	stmia	r7!, {r0, r1}
 80188da:	a802      	add	r0, sp, #8
 80188dc:	f7f8 fe78 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80188e0:	4621      	mov	r1, r4
 80188e2:	a804      	add	r0, sp, #16
 80188e4:	f7f8 feb8 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80188e8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80188ec:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80188f0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80188f4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80188f8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80188fc:	eb08 0401 	add.w	r4, r8, r1
 8018900:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018904:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018908:	440a      	add	r2, r1
 801890a:	f8ad 2010 	strh.w	r2, [sp, #16]
 801890e:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018912:	4413      	add	r3, r2
 8018914:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018918:	4b4a      	ldr	r3, [pc, #296]	; (8018a44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801891a:	6818      	ldr	r0, [r3, #0]
 801891c:	6803      	ldr	r3, [r0, #0]
 801891e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018920:	4798      	blx	r3
 8018922:	4b49      	ldr	r3, [pc, #292]	; (8018a48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018924:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018928:	881a      	ldrh	r2, [r3, #0]
 801892a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801892e:	2eff      	cmp	r6, #255	; 0xff
 8018930:	fb02 c101 	mla	r1, r2, r1, ip
 8018934:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018938:	fb02 f207 	mul.w	r2, r2, r7
 801893c:	f105 0104 	add.w	r1, r5, #4
 8018940:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018944:	461d      	mov	r5, r3
 8018946:	d05a      	beq.n	80189fe <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018948:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801894c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018950:	b2b6      	uxth	r6, r6
 8018952:	fa1f fe8e 	uxth.w	lr, lr
 8018956:	9301      	str	r3, [sp, #4]
 8018958:	4282      	cmp	r2, r0
 801895a:	d96a      	bls.n	8018a32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801895c:	eb00 0b0a 	add.w	fp, r0, sl
 8018960:	4583      	cmp	fp, r0
 8018962:	d940      	bls.n	80189e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018964:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018968:	8805      	ldrh	r5, [r0, #0]
 801896a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801896e:	122f      	asrs	r7, r5, #8
 8018970:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018974:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018978:	fb17 f70e 	smulbb	r7, r7, lr
 801897c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018980:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018984:	00ed      	lsls	r5, r5, #3
 8018986:	fb0c 7c06 	mla	ip, ip, r6, r7
 801898a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801898e:	10df      	asrs	r7, r3, #3
 8018990:	b2ed      	uxtb	r5, r5
 8018992:	00db      	lsls	r3, r3, #3
 8018994:	fa1f fc8c 	uxth.w	ip, ip
 8018998:	fb19 f90e 	smulbb	r9, r9, lr
 801899c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80189a0:	b2db      	uxtb	r3, r3
 80189a2:	fb15 f50e 	smulbb	r5, r5, lr
 80189a6:	fb07 9706 	mla	r7, r7, r6, r9
 80189aa:	fb03 5306 	mla	r3, r3, r6, r5
 80189ae:	f10c 0901 	add.w	r9, ip, #1
 80189b2:	b29b      	uxth	r3, r3
 80189b4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80189b8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80189bc:	f103 0c01 	add.w	ip, r3, #1
 80189c0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80189c4:	b2bf      	uxth	r7, r7
 80189c6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80189ca:	ea4c 0c09 	orr.w	ip, ip, r9
 80189ce:	f107 0901 	add.w	r9, r7, #1
 80189d2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80189d6:	097f      	lsrs	r7, r7, #5
 80189d8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80189dc:	ea4c 0c07 	orr.w	ip, ip, r7
 80189e0:	f820 cb02 	strh.w	ip, [r0], #2
 80189e4:	e7bc      	b.n	8018960 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80189e6:	9b01      	ldr	r3, [sp, #4]
 80189e8:	881b      	ldrh	r3, [r3, #0]
 80189ea:	eba3 0308 	sub.w	r3, r3, r8
 80189ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80189f2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80189f6:	eba3 0308 	sub.w	r3, r3, r8
 80189fa:	441c      	add	r4, r3
 80189fc:	e7ac      	b.n	8018958 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80189fe:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018a02:	4282      	cmp	r2, r0
 8018a04:	d915      	bls.n	8018a32 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 8018a06:	eb00 060a 	add.w	r6, r0, sl
 8018a0a:	4286      	cmp	r6, r0
 8018a0c:	d906      	bls.n	8018a1c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 8018a0e:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018a12:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018a16:	f820 3b02 	strh.w	r3, [r0], #2
 8018a1a:	e7f6      	b.n	8018a0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 8018a1c:	882b      	ldrh	r3, [r5, #0]
 8018a1e:	eba3 0308 	sub.w	r3, r3, r8
 8018a22:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018a26:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8018a2a:	eba3 0308 	sub.w	r3, r3, r8
 8018a2e:	441c      	add	r4, r3
 8018a30:	e7e7      	b.n	8018a02 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018a32:	4b04      	ldr	r3, [pc, #16]	; (8018a44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018a34:	6818      	ldr	r0, [r3, #0]
 8018a36:	6803      	ldr	r3, [r0, #0]
 8018a38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018a3a:	4798      	blx	r3
 8018a3c:	b007      	add	sp, #28
 8018a3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a42:	bf00      	nop
 8018a44:	20013758 	.word	0x20013758
 8018a48:	20013752 	.word	0x20013752

08018a4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8018a4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018a50:	b091      	sub	sp, #68	; 0x44
 8018a52:	4680      	mov	r8, r0
 8018a54:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018a58:	460f      	mov	r7, r1
 8018a5a:	4614      	mov	r4, r2
 8018a5c:	2d00      	cmp	r5, #0
 8018a5e:	d051      	beq.n	8018b04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018a60:	6810      	ldr	r0, [r2, #0]
 8018a62:	6851      	ldr	r1, [r2, #4]
 8018a64:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018c68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018a68:	ae0c      	add	r6, sp, #48	; 0x30
 8018a6a:	c603      	stmia	r6!, {r0, r1}
 8018a6c:	6818      	ldr	r0, [r3, #0]
 8018a6e:	6859      	ldr	r1, [r3, #4]
 8018a70:	ae0e      	add	r6, sp, #56	; 0x38
 8018a72:	c603      	stmia	r6!, {r0, r1}
 8018a74:	a80c      	add	r0, sp, #48	; 0x30
 8018a76:	f7f8 fdab 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018a7a:	4621      	mov	r1, r4
 8018a7c:	a80e      	add	r0, sp, #56	; 0x38
 8018a7e:	f7f8 fdeb 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018a82:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018a86:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018a8a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8018a8e:	f8d9 0000 	ldr.w	r0, [r9]
 8018a92:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018a96:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8018a9a:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018a9e:	eb08 0401 	add.w	r4, r8, r1
 8018aa2:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8018aa6:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 8018c6c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 8018aaa:	440a      	add	r2, r1
 8018aac:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8018ab0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8018ab4:	4413      	add	r3, r2
 8018ab6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8018aba:	6803      	ldr	r3, [r0, #0]
 8018abc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018abe:	4798      	blx	r3
 8018ac0:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018ac4:	f8d9 0000 	ldr.w	r0, [r9]
 8018ac8:	d01f      	beq.n	8018b0a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 8018aca:	2200      	movs	r2, #0
 8018acc:	6801      	ldr	r1, [r0, #0]
 8018ace:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8018ad2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018ad6:	220b      	movs	r2, #11
 8018ad8:	9207      	str	r2, [sp, #28]
 8018ada:	f8b8 2000 	ldrh.w	r2, [r8]
 8018ade:	9206      	str	r2, [sp, #24]
 8018ae0:	2201      	movs	r2, #1
 8018ae2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 8018ae6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 8018aea:	9203      	str	r2, [sp, #12]
 8018aec:	fa1f f28a 	uxth.w	r2, sl
 8018af0:	9202      	str	r2, [sp, #8]
 8018af2:	b2b6      	uxth	r6, r6
 8018af4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018af8:	9200      	str	r2, [sp, #0]
 8018afa:	9601      	str	r6, [sp, #4]
 8018afc:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 8018afe:	463a      	mov	r2, r7
 8018b00:	4621      	mov	r1, r4
 8018b02:	47a8      	blx	r5
 8018b04:	b011      	add	sp, #68	; 0x44
 8018b06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018b0a:	6803      	ldr	r3, [r0, #0]
 8018b0c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018b0e:	4798      	blx	r3
 8018b10:	f8b8 2000 	ldrh.w	r2, [r8]
 8018b14:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018b18:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8018b1c:	2dff      	cmp	r5, #255	; 0xff
 8018b1e:	fb02 1303 	mla	r3, r2, r3, r1
 8018b22:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b26:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8018b2a:	fb0a fa02 	mul.w	sl, sl, r2
 8018b2e:	d062      	beq.n	8018bf6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018b30:	ea6f 0c05 	mvn.w	ip, r5
 8018b34:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018b38:	930a      	str	r3, [sp, #40]	; 0x28
 8018b3a:	b2ad      	uxth	r5, r5
 8018b3c:	fa5f fc8c 	uxtb.w	ip, ip
 8018b40:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018b44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018b46:	4298      	cmp	r0, r3
 8018b48:	f080 8085 	bcs.w	8018c56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018b4c:	eb00 0b09 	add.w	fp, r0, r9
 8018b50:	4558      	cmp	r0, fp
 8018b52:	d246      	bcs.n	8018be2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018b54:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018b58:	2303      	movs	r3, #3
 8018b5a:	2204      	movs	r2, #4
 8018b5c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018b60:	eb07 0a0e 	add.w	sl, r7, lr
 8018b64:	8803      	ldrh	r3, [r0, #0]
 8018b66:	f89a 8002 	ldrb.w	r8, [sl, #2]
 8018b6a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018b6e:	1219      	asrs	r1, r3, #8
 8018b70:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018b74:	fb18 f805 	smulbb	r8, r8, r5
 8018b78:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 8018b7c:	10da      	asrs	r2, r3, #3
 8018b7e:	fb01 810c 	mla	r1, r1, ip, r8
 8018b82:	00db      	lsls	r3, r3, #3
 8018b84:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018b88:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018b8c:	b2db      	uxtb	r3, r3
 8018b8e:	fb18 f805 	smulbb	r8, r8, r5
 8018b92:	fb1e fe05 	smulbb	lr, lr, r5
 8018b96:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 8018b9a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 8018b9e:	b289      	uxth	r1, r1
 8018ba0:	fb02 820c 	mla	r2, r2, ip, r8
 8018ba4:	fb03 e30c 	mla	r3, r3, ip, lr
 8018ba8:	b292      	uxth	r2, r2
 8018baa:	b29b      	uxth	r3, r3
 8018bac:	f101 0801 	add.w	r8, r1, #1
 8018bb0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8018bb4:	f103 0e01 	add.w	lr, r3, #1
 8018bb8:	f102 0801 	add.w	r8, r2, #1
 8018bbc:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 8018bc0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8018bc4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018bc8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8018bcc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8018bd0:	ea4e 0101 	orr.w	r1, lr, r1
 8018bd4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8018bd8:	ea41 0108 	orr.w	r1, r1, r8
 8018bdc:	f820 1b02 	strh.w	r1, [r0], #2
 8018be0:	e7b6      	b.n	8018b50 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 8018be2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018be4:	881b      	ldrh	r3, [r3, #0]
 8018be6:	1b9b      	subs	r3, r3, r6
 8018be8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018bec:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018bf0:	1b9b      	subs	r3, r3, r6
 8018bf2:	441c      	add	r4, r3
 8018bf4:	e7a6      	b.n	8018b44 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 8018bf6:	491b      	ldr	r1, [pc, #108]	; (8018c64 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 8018bf8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8018bfc:	2203      	movs	r2, #3
 8018bfe:	2504      	movs	r5, #4
 8018c00:	4550      	cmp	r0, sl
 8018c02:	d228      	bcs.n	8018c56 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 8018c04:	eb00 0c09 	add.w	ip, r0, r9
 8018c08:	4560      	cmp	r0, ip
 8018c0a:	4623      	mov	r3, r4
 8018c0c:	d219      	bcs.n	8018c42 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 8018c0e:	f893 e000 	ldrb.w	lr, [r3]
 8018c12:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018c16:	eb07 0b0e 	add.w	fp, r7, lr
 8018c1a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018c1e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018c22:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018c26:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8018c2a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 8018c2e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018c32:	ea43 030b 	orr.w	r3, r3, fp
 8018c36:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8018c3a:	3401      	adds	r4, #1
 8018c3c:	f820 3b02 	strh.w	r3, [r0], #2
 8018c40:	e7e2      	b.n	8018c08 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018c42:	f8b8 3000 	ldrh.w	r3, [r8]
 8018c46:	1b9b      	subs	r3, r3, r6
 8018c48:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018c4c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018c50:	1b9b      	subs	r3, r3, r6
 8018c52:	441c      	add	r4, r3
 8018c54:	e7d4      	b.n	8018c00 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018c56:	4b04      	ldr	r3, [pc, #16]	; (8018c68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018c58:	6818      	ldr	r0, [r3, #0]
 8018c5a:	6803      	ldr	r3, [r0, #0]
 8018c5c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018c5e:	4798      	blx	r3
 8018c60:	e750      	b.n	8018b04 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018c62:	bf00      	nop
 8018c64:	fffff800 	.word	0xfffff800
 8018c68:	20013758 	.word	0x20013758
 8018c6c:	20013752 	.word	0x20013752

08018c70 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018c70:	b430      	push	{r4, r5}
 8018c72:	780d      	ldrb	r5, [r1, #0]
 8018c74:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018c78:	2d01      	cmp	r5, #1
 8018c7a:	d00a      	beq.n	8018c92 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 8018c7c:	d305      	bcc.n	8018c8a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 8018c7e:	2d02      	cmp	r5, #2
 8018c80:	d10b      	bne.n	8018c9a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018c82:	9402      	str	r4, [sp, #8]
 8018c84:	bc30      	pop	{r4, r5}
 8018c86:	f7ff be15 	b.w	80188b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 8018c8a:	9402      	str	r4, [sp, #8]
 8018c8c:	bc30      	pop	{r4, r5}
 8018c8e:	f7ff bd2b 	b.w	80186e8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018c92:	9402      	str	r4, [sp, #8]
 8018c94:	bc30      	pop	{r4, r5}
 8018c96:	f7ff bed9 	b.w	8018a4c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 8018c9a:	bc30      	pop	{r4, r5}
 8018c9c:	4770      	bx	lr
	...

08018ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018ca0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ca4:	4604      	mov	r4, r0
 8018ca6:	b087      	sub	sp, #28
 8018ca8:	6810      	ldr	r0, [r2, #0]
 8018caa:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8018cae:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8018ee8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 8018cb2:	460e      	mov	r6, r1
 8018cb4:	6851      	ldr	r1, [r2, #4]
 8018cb6:	ad02      	add	r5, sp, #8
 8018cb8:	c503      	stmia	r5!, {r0, r1}
 8018cba:	6818      	ldr	r0, [r3, #0]
 8018cbc:	6859      	ldr	r1, [r3, #4]
 8018cbe:	ad04      	add	r5, sp, #16
 8018cc0:	4617      	mov	r7, r2
 8018cc2:	c503      	stmia	r5!, {r0, r1}
 8018cc4:	a802      	add	r0, sp, #8
 8018cc6:	f7f8 fc83 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018cca:	4639      	mov	r1, r7
 8018ccc:	a804      	add	r0, sp, #16
 8018cce:	f7f8 fcc3 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018cd2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018cd6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018cda:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8018cde:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8018ce2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 8018ce6:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018cea:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8018cee:	440e      	add	r6, r1
 8018cf0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8018cf4:	440a      	add	r2, r1
 8018cf6:	f8ad 2010 	strh.w	r2, [sp, #16]
 8018cfa:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018cfe:	4413      	add	r3, r2
 8018d00:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018d04:	4b77      	ldr	r3, [pc, #476]	; (8018ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018d06:	6818      	ldr	r0, [r3, #0]
 8018d08:	6803      	ldr	r3, [r0, #0]
 8018d0a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018d0c:	4798      	blx	r3
 8018d0e:	f8b9 b000 	ldrh.w	fp, [r9]
 8018d12:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018d16:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8018d1a:	fb0b 2303 	mla	r3, fp, r3, r2
 8018d1e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018d22:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018d26:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8018d2a:	fb05 f50b 	mul.w	r5, r5, fp
 8018d2e:	9300      	str	r3, [sp, #0]
 8018d30:	d069      	beq.n	8018e06 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018d32:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018d36:	4558      	cmp	r0, fp
 8018d38:	f080 80cc 	bcs.w	8018ed4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018d3c:	9b00      	ldr	r3, [sp, #0]
 8018d3e:	18c3      	adds	r3, r0, r3
 8018d40:	9301      	str	r3, [sp, #4]
 8018d42:	4631      	mov	r1, r6
 8018d44:	9b01      	ldr	r3, [sp, #4]
 8018d46:	4298      	cmp	r0, r3
 8018d48:	d24f      	bcs.n	8018dea <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 8018d4a:	f811 2b01 	ldrb.w	r2, [r1], #1
 8018d4e:	2a00      	cmp	r2, #0
 8018d50:	d048      	beq.n	8018de4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018d52:	fb0a f202 	mul.w	r2, sl, r2
 8018d56:	1c53      	adds	r3, r2, #1
 8018d58:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018d5c:	121b      	asrs	r3, r3, #8
 8018d5e:	d041      	beq.n	8018de4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018d60:	8802      	ldrh	r2, [r0, #0]
 8018d62:	f8b4 c000 	ldrh.w	ip, [r4]
 8018d66:	b29e      	uxth	r6, r3
 8018d68:	1215      	asrs	r5, r2, #8
 8018d6a:	43db      	mvns	r3, r3
 8018d6c:	b2db      	uxtb	r3, r3
 8018d6e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018d72:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018d76:	fb15 f503 	smulbb	r5, r5, r3
 8018d7a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 8018d7e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018d82:	00d2      	lsls	r2, r2, #3
 8018d84:	fb07 5706 	mla	r7, r7, r6, r5
 8018d88:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8018d8c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018d90:	b2d2      	uxtb	r2, r2
 8018d92:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018d96:	b2bf      	uxth	r7, r7
 8018d98:	fb1e fe03 	smulbb	lr, lr, r3
 8018d9c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018da0:	fa5f fc8c 	uxtb.w	ip, ip
 8018da4:	fb12 f203 	smulbb	r2, r2, r3
 8018da8:	fb05 e506 	mla	r5, r5, r6, lr
 8018dac:	fb0c 2c06 	mla	ip, ip, r6, r2
 8018db0:	f107 0e01 	add.w	lr, r7, #1
 8018db4:	fa1f fc8c 	uxth.w	ip, ip
 8018db8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8018dbc:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8018dc0:	f10c 0701 	add.w	r7, ip, #1
 8018dc4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8018dc8:	b2ad      	uxth	r5, r5
 8018dca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8018dce:	ea47 070e 	orr.w	r7, r7, lr
 8018dd2:	f105 0e01 	add.w	lr, r5, #1
 8018dd6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8018dda:	096d      	lsrs	r5, r5, #5
 8018ddc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8018de0:	432f      	orrs	r7, r5
 8018de2:	8007      	strh	r7, [r0, #0]
 8018de4:	3002      	adds	r0, #2
 8018de6:	3402      	adds	r4, #2
 8018de8:	e7ac      	b.n	8018d44 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8018dea:	f8b9 3000 	ldrh.w	r3, [r9]
 8018dee:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018df2:	eba3 0308 	sub.w	r3, r3, r8
 8018df6:	eba6 0608 	sub.w	r6, r6, r8
 8018dfa:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018dfe:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e02:	440e      	add	r6, r1
 8018e04:	e797      	b.n	8018d36 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 8018e06:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8018e0a:	42a8      	cmp	r0, r5
 8018e0c:	d262      	bcs.n	8018ed4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8018e0e:	9b00      	ldr	r3, [sp, #0]
 8018e10:	4631      	mov	r1, r6
 8018e12:	eb00 0b03 	add.w	fp, r0, r3
 8018e16:	4558      	cmp	r0, fp
 8018e18:	d24e      	bcs.n	8018eb8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8018e1a:	f811 3b01 	ldrb.w	r3, [r1], #1
 8018e1e:	b12b      	cbz	r3, 8018e2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018e20:	2bff      	cmp	r3, #255	; 0xff
 8018e22:	f8b4 e000 	ldrh.w	lr, [r4]
 8018e26:	d104      	bne.n	8018e32 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018e28:	f8a0 e000 	strh.w	lr, [r0]
 8018e2c:	3002      	adds	r0, #2
 8018e2e:	3402      	adds	r4, #2
 8018e30:	e7f1      	b.n	8018e16 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018e32:	8802      	ldrh	r2, [r0, #0]
 8018e34:	b29f      	uxth	r7, r3
 8018e36:	1216      	asrs	r6, r2, #8
 8018e38:	43db      	mvns	r3, r3
 8018e3a:	b2db      	uxtb	r3, r3
 8018e3c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018e40:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018e44:	fb16 f603 	smulbb	r6, r6, r3
 8018e48:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 8018e4c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018e50:	00d2      	lsls	r2, r2, #3
 8018e52:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018e56:	b2d2      	uxtb	r2, r2
 8018e58:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018e5c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018e60:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018e64:	fb1a fa03 	smulbb	sl, sl, r3
 8018e68:	fa1f fc8c 	uxth.w	ip, ip
 8018e6c:	fb12 f303 	smulbb	r3, r2, r3
 8018e70:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018e74:	fa5f fe8e 	uxtb.w	lr, lr
 8018e78:	fb06 a607 	mla	r6, r6, r7, sl
 8018e7c:	f10c 0201 	add.w	r2, ip, #1
 8018e80:	fb0e 3307 	mla	r3, lr, r7, r3
 8018e84:	b2b6      	uxth	r6, r6
 8018e86:	b29b      	uxth	r3, r3
 8018e88:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8018e8c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018e90:	f106 0a01 	add.w	sl, r6, #1
 8018e94:	f103 0c01 	add.w	ip, r3, #1
 8018e98:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8018e9c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018ea0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018ea4:	0976      	lsrs	r6, r6, #5
 8018ea6:	ea4c 0c02 	orr.w	ip, ip, r2
 8018eaa:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8018eae:	ea4c 0c06 	orr.w	ip, ip, r6
 8018eb2:	f8a0 c000 	strh.w	ip, [r0]
 8018eb6:	e7b9      	b.n	8018e2c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018eb8:	f8b9 3000 	ldrh.w	r3, [r9]
 8018ebc:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8018ec0:	eba3 0308 	sub.w	r3, r3, r8
 8018ec4:	eba6 0608 	sub.w	r6, r6, r8
 8018ec8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8018ecc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018ed0:	440e      	add	r6, r1
 8018ed2:	e79a      	b.n	8018e0a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 8018ed4:	4b03      	ldr	r3, [pc, #12]	; (8018ee4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 8018ed6:	6818      	ldr	r0, [r3, #0]
 8018ed8:	6803      	ldr	r3, [r0, #0]
 8018eda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018edc:	4798      	blx	r3
 8018ede:	b007      	add	sp, #28
 8018ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018ee4:	20013758 	.word	0x20013758
 8018ee8:	20013752 	.word	0x20013752

08018eec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8018eec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ef0:	b089      	sub	sp, #36	; 0x24
 8018ef2:	4682      	mov	sl, r0
 8018ef4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 8018ef8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8018efa:	460f      	mov	r7, r1
 8018efc:	4691      	mov	r9, r2
 8018efe:	4698      	mov	r8, r3
 8018f00:	2e00      	cmp	r6, #0
 8018f02:	d036      	beq.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018f04:	4608      	mov	r0, r1
 8018f06:	f7fc f863 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8018f0a:	4605      	mov	r5, r0
 8018f0c:	4638      	mov	r0, r7
 8018f0e:	f7fc f893 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018f12:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018f16:	4638      	mov	r0, r7
 8018f18:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018f1c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018f20:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018f24:	f7fc f940 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018f28:	4605      	mov	r5, r0
 8018f2a:	4638      	mov	r0, r7
 8018f2c:	f7fc f96c 	bl	8015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018f30:	4681      	mov	r9, r0
 8018f32:	4638      	mov	r0, r7
 8018f34:	f7fc f9bc 	bl	80152b0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018f38:	280b      	cmp	r0, #11
 8018f3a:	d81a      	bhi.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018f3c:	e8df f000 	tbb	[pc, r0]
 8018f40:	1906aebd 	.word	0x1906aebd
 8018f44:	19191919 	.word	0x19191919
 8018f48:	b5191919 	.word	0xb5191919
 8018f4c:	4bb0      	ldr	r3, [pc, #704]	; (8019210 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8018f4e:	6818      	ldr	r0, [r3, #0]
 8018f50:	6803      	ldr	r3, [r0, #0]
 8018f52:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018f54:	4798      	blx	r3
 8018f56:	2eff      	cmp	r6, #255	; 0xff
 8018f58:	d121      	bne.n	8018f9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018f5a:	0683      	lsls	r3, r0, #26
 8018f5c:	d41f      	bmi.n	8018f9e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018f5e:	4638      	mov	r0, r7
 8018f60:	f7fc f8ea 	bl	8015138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018f64:	b940      	cbnz	r0, 8018f78 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018f66:	4623      	mov	r3, r4
 8018f68:	aa02      	add	r2, sp, #8
 8018f6a:	4629      	mov	r1, r5
 8018f6c:	4650      	mov	r0, sl
 8018f6e:	f7ff fa2f 	bl	80183d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018f72:	b009      	add	sp, #36	; 0x24
 8018f74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018f78:	f10d 0818 	add.w	r8, sp, #24
 8018f7c:	4639      	mov	r1, r7
 8018f7e:	4640      	mov	r0, r8
 8018f80:	f7fc f88e 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018f84:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018f88:	af04      	add	r7, sp, #16
 8018f8a:	e887 0003 	stmia.w	r7, {r0, r1}
 8018f8e:	4638      	mov	r0, r7
 8018f90:	4621      	mov	r1, r4
 8018f92:	f7f2 ff07 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 8018f96:	4638      	mov	r0, r7
 8018f98:	f7f2 ff47 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 8018f9c:	b130      	cbz	r0, 8018fac <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8018f9e:	4633      	mov	r3, r6
 8018fa0:	4622      	mov	r2, r4
 8018fa2:	a902      	add	r1, sp, #8
 8018fa4:	4628      	mov	r0, r5
 8018fa6:	f7ff f92d 	bl	8018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018faa:	e7e2      	b.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018fac:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018fb0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018fb4:	4293      	cmp	r3, r2
 8018fb6:	dd12      	ble.n	8018fde <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018fb8:	1a9b      	subs	r3, r3, r2
 8018fba:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018fbe:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018fc2:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018fc6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018fca:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018fce:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018fd2:	4642      	mov	r2, r8
 8018fd4:	4633      	mov	r3, r6
 8018fd6:	a902      	add	r1, sp, #8
 8018fd8:	4628      	mov	r0, r5
 8018fda:	f7ff f913 	bl	8018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018fde:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018fe2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018fe6:	4293      	cmp	r3, r2
 8018fe8:	dd12      	ble.n	8019010 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8018fea:	1a9b      	subs	r3, r3, r2
 8018fec:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018ff0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018ff4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ff8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018ffc:	f8ad 301c 	strh.w	r3, [sp, #28]
 8019000:	f8ad 101e 	strh.w	r1, [sp, #30]
 8019004:	23ff      	movs	r3, #255	; 0xff
 8019006:	4642      	mov	r2, r8
 8019008:	a902      	add	r1, sp, #8
 801900a:	4628      	mov	r0, r5
 801900c:	f7ff f8fa 	bl	8018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8019010:	463b      	mov	r3, r7
 8019012:	aa02      	add	r2, sp, #8
 8019014:	4629      	mov	r1, r5
 8019016:	4650      	mov	r0, sl
 8019018:	f7ff f9da 	bl	80183d0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801901c:	88a2      	ldrh	r2, [r4, #4]
 801901e:	8823      	ldrh	r3, [r4, #0]
 8019020:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019024:	4413      	add	r3, r2
 8019026:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801902a:	440a      	add	r2, r1
 801902c:	b29b      	uxth	r3, r3
 801902e:	b292      	uxth	r2, r2
 8019030:	b211      	sxth	r1, r2
 8019032:	b218      	sxth	r0, r3
 8019034:	4288      	cmp	r0, r1
 8019036:	dd12      	ble.n	801905e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8019038:	1a9b      	subs	r3, r3, r2
 801903a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801903e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8019042:	f8ad 1018 	strh.w	r1, [sp, #24]
 8019046:	f8ad 301c 	strh.w	r3, [sp, #28]
 801904a:	f8ad 001e 	strh.w	r0, [sp, #30]
 801904e:	23ff      	movs	r3, #255	; 0xff
 8019050:	4642      	mov	r2, r8
 8019052:	a902      	add	r1, sp, #8
 8019054:	4628      	mov	r0, r5
 8019056:	f8ad 601a 	strh.w	r6, [sp, #26]
 801905a:	f7ff f8d3 	bl	8018204 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801905e:	88e2      	ldrh	r2, [r4, #6]
 8019060:	8863      	ldrh	r3, [r4, #2]
 8019062:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8019066:	4413      	add	r3, r2
 8019068:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801906c:	440a      	add	r2, r1
 801906e:	b29b      	uxth	r3, r3
 8019070:	b292      	uxth	r2, r2
 8019072:	b211      	sxth	r1, r2
 8019074:	b218      	sxth	r0, r3
 8019076:	4288      	cmp	r0, r1
 8019078:	f77f af7b 	ble.w	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801907c:	1a9b      	subs	r3, r3, r2
 801907e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8019082:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8019086:	f8ad 301e 	strh.w	r3, [sp, #30]
 801908a:	f8ad 6018 	strh.w	r6, [sp, #24]
 801908e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019092:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019096:	23ff      	movs	r3, #255	; 0xff
 8019098:	4642      	mov	r2, r8
 801909a:	e782      	b.n	8018fa2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 801909c:	4633      	mov	r3, r6
 801909e:	4622      	mov	r2, r4
 80190a0:	a902      	add	r1, sp, #8
 80190a2:	4628      	mov	r0, r5
 80190a4:	f7ff fa04 	bl	80184b0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80190a8:	e763      	b.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80190aa:	9600      	str	r6, [sp, #0]
 80190ac:	4623      	mov	r3, r4
 80190ae:	aa02      	add	r2, sp, #8
 80190b0:	4649      	mov	r1, r9
 80190b2:	4628      	mov	r0, r5
 80190b4:	f7ff fddc 	bl	8018c70 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80190b8:	e75b      	b.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80190ba:	4638      	mov	r0, r7
 80190bc:	f7fc f83c 	bl	8015138 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80190c0:	b950      	cbnz	r0, 80190d8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 80190c2:	e9cd 6000 	strd	r6, r0, [sp]
 80190c6:	f8da 3000 	ldr.w	r3, [sl]
 80190ca:	aa02      	add	r2, sp, #8
 80190cc:	68de      	ldr	r6, [r3, #12]
 80190ce:	4629      	mov	r1, r5
 80190d0:	4623      	mov	r3, r4
 80190d2:	4650      	mov	r0, sl
 80190d4:	47b0      	blx	r6
 80190d6:	e74c      	b.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80190d8:	f10d 0818 	add.w	r8, sp, #24
 80190dc:	4639      	mov	r1, r7
 80190de:	4640      	mov	r0, r8
 80190e0:	f7fb ffde 	bl	80150a0 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80190e4:	e898 0003 	ldmia.w	r8, {r0, r1}
 80190e8:	af04      	add	r7, sp, #16
 80190ea:	e887 0003 	stmia.w	r7, {r0, r1}
 80190ee:	4638      	mov	r0, r7
 80190f0:	4621      	mov	r1, r4
 80190f2:	f7f2 fe57 	bl	800bda4 <_ZN8touchgfx4RectaNERKS0_>
 80190f6:	4638      	mov	r0, r7
 80190f8:	f7f2 fe97 	bl	800be2a <_ZNK8touchgfx4Rect7isEmptyEv>
 80190fc:	b138      	cbz	r0, 801910e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 80190fe:	9600      	str	r6, [sp, #0]
 8019100:	4623      	mov	r3, r4
 8019102:	aa02      	add	r2, sp, #8
 8019104:	4649      	mov	r1, r9
 8019106:	4628      	mov	r0, r5
 8019108:	f7ff fdca 	bl	8018ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801910c:	e731      	b.n	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 801910e:	e9cd 6000 	strd	r6, r0, [sp]
 8019112:	f8da 3000 	ldr.w	r3, [sl]
 8019116:	aa02      	add	r2, sp, #8
 8019118:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801911c:	4629      	mov	r1, r5
 801911e:	463b      	mov	r3, r7
 8019120:	4650      	mov	r0, sl
 8019122:	47d8      	blx	fp
 8019124:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8019128:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801912c:	4293      	cmp	r3, r2
 801912e:	dd13      	ble.n	8019158 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8019130:	f9b4 0000 	ldrsh.w	r0, [r4]
 8019134:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019138:	f8ad 0018 	strh.w	r0, [sp, #24]
 801913c:	1a9b      	subs	r3, r3, r2
 801913e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8019142:	f8ad 101c 	strh.w	r1, [sp, #28]
 8019146:	f8ad 301e 	strh.w	r3, [sp, #30]
 801914a:	9600      	str	r6, [sp, #0]
 801914c:	4643      	mov	r3, r8
 801914e:	aa02      	add	r2, sp, #8
 8019150:	4649      	mov	r1, r9
 8019152:	4628      	mov	r0, r5
 8019154:	f7ff fda4 	bl	8018ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8019158:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801915c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8019160:	4293      	cmp	r3, r2
 8019162:	dd13      	ble.n	801918c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8019164:	1a9b      	subs	r3, r3, r2
 8019166:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801916a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801916e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8019172:	f8ad 001a 	strh.w	r0, [sp, #26]
 8019176:	f8ad 301c 	strh.w	r3, [sp, #28]
 801917a:	f8ad 101e 	strh.w	r1, [sp, #30]
 801917e:	9600      	str	r6, [sp, #0]
 8019180:	4643      	mov	r3, r8
 8019182:	aa02      	add	r2, sp, #8
 8019184:	4649      	mov	r1, r9
 8019186:	4628      	mov	r0, r5
 8019188:	f7ff fd8a 	bl	8018ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801918c:	88a2      	ldrh	r2, [r4, #4]
 801918e:	8823      	ldrh	r3, [r4, #0]
 8019190:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8019194:	4413      	add	r3, r2
 8019196:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801919a:	440a      	add	r2, r1
 801919c:	b29b      	uxth	r3, r3
 801919e:	b292      	uxth	r2, r2
 80191a0:	b211      	sxth	r1, r2
 80191a2:	b218      	sxth	r0, r3
 80191a4:	4288      	cmp	r0, r1
 80191a6:	dd13      	ble.n	80191d0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 80191a8:	1a9b      	subs	r3, r3, r2
 80191aa:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80191ae:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 80191b2:	f8ad 1018 	strh.w	r1, [sp, #24]
 80191b6:	f8ad 301c 	strh.w	r3, [sp, #28]
 80191ba:	f8ad 001e 	strh.w	r0, [sp, #30]
 80191be:	9600      	str	r6, [sp, #0]
 80191c0:	4643      	mov	r3, r8
 80191c2:	aa02      	add	r2, sp, #8
 80191c4:	4649      	mov	r1, r9
 80191c6:	4628      	mov	r0, r5
 80191c8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80191cc:	f7ff fd68 	bl	8018ca0 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80191d0:	88e2      	ldrh	r2, [r4, #6]
 80191d2:	8863      	ldrh	r3, [r4, #2]
 80191d4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80191d8:	4413      	add	r3, r2
 80191da:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80191de:	440a      	add	r2, r1
 80191e0:	b29b      	uxth	r3, r3
 80191e2:	b292      	uxth	r2, r2
 80191e4:	b211      	sxth	r1, r2
 80191e6:	b218      	sxth	r0, r3
 80191e8:	4288      	cmp	r0, r1
 80191ea:	f77f aec2 	ble.w	8018f72 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80191ee:	f9b4 7000 	ldrsh.w	r7, [r4]
 80191f2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80191f6:	f8ad 7018 	strh.w	r7, [sp, #24]
 80191fa:	1a9b      	subs	r3, r3, r2
 80191fc:	f8ad 301e 	strh.w	r3, [sp, #30]
 8019200:	f8ad 101a 	strh.w	r1, [sp, #26]
 8019204:	f8ad 001c 	strh.w	r0, [sp, #28]
 8019208:	9600      	str	r6, [sp, #0]
 801920a:	4643      	mov	r3, r8
 801920c:	e779      	b.n	8019102 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 801920e:	bf00      	nop
 8019210:	20013758 	.word	0x20013758

08019214 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8019214:	b180      	cbz	r0, 8019238 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8019216:	2903      	cmp	r1, #3
 8019218:	d81c      	bhi.n	8019254 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801921a:	e8df f001 	tbb	[pc, r1]
 801921e:	1d02      	.short	0x1d02
 8019220:	1f08      	.short	0x1f08
 8019222:	4b10      	ldr	r3, [pc, #64]	; (8019264 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019224:	8818      	ldrh	r0, [r3, #0]
 8019226:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801922a:	4240      	negs	r0, r0
 801922c:	4770      	bx	lr
 801922e:	4b0d      	ldr	r3, [pc, #52]	; (8019264 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8019230:	8818      	ldrh	r0, [r3, #0]
 8019232:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019236:	4770      	bx	lr
 8019238:	2903      	cmp	r1, #3
 801923a:	d80b      	bhi.n	8019254 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801923c:	a301      	add	r3, pc, #4	; (adr r3, 8019244 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801923e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019242:	bf00      	nop
 8019244:	08019259 	.word	0x08019259
 8019248:	0801922f 	.word	0x0801922f
 801924c:	0801925d 	.word	0x0801925d
 8019250:	08019223 	.word	0x08019223
 8019254:	2000      	movs	r0, #0
 8019256:	4770      	bx	lr
 8019258:	2001      	movs	r0, #1
 801925a:	4770      	bx	lr
 801925c:	f04f 30ff 	mov.w	r0, #4294967295
 8019260:	4770      	bx	lr
 8019262:	bf00      	nop
 8019264:	20013752 	.word	0x20013752

08019268 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8019268:	b180      	cbz	r0, 801928c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801926a:	2903      	cmp	r1, #3
 801926c:	d81c      	bhi.n	80192a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801926e:	e8df f001 	tbb	[pc, r1]
 8019272:	021d      	.short	0x021d
 8019274:	071f      	.short	0x071f
 8019276:	4b10      	ldr	r3, [pc, #64]	; (80192b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019278:	8818      	ldrh	r0, [r3, #0]
 801927a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801927e:	4770      	bx	lr
 8019280:	4b0d      	ldr	r3, [pc, #52]	; (80192b8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8019282:	8818      	ldrh	r0, [r3, #0]
 8019284:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8019288:	4240      	negs	r0, r0
 801928a:	4770      	bx	lr
 801928c:	2903      	cmp	r1, #3
 801928e:	d80b      	bhi.n	80192a8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8019290:	a301      	add	r3, pc, #4	; (adr r3, 8019298 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8019292:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8019296:	bf00      	nop
 8019298:	08019277 	.word	0x08019277
 801929c:	080192b1 	.word	0x080192b1
 80192a0:	08019281 	.word	0x08019281
 80192a4:	080192ad 	.word	0x080192ad
 80192a8:	2000      	movs	r0, #0
 80192aa:	4770      	bx	lr
 80192ac:	2001      	movs	r0, #1
 80192ae:	4770      	bx	lr
 80192b0:	f04f 30ff 	mov.w	r0, #4294967295
 80192b4:	4770      	bx	lr
 80192b6:	bf00      	nop
 80192b8:	20013752 	.word	0x20013752

080192bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 80192bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192c0:	b099      	sub	sp, #100	; 0x64
 80192c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80192c4:	a914      	add	r1, sp, #80	; 0x50
 80192c6:	e881 000c 	stmia.w	r1, {r2, r3}
 80192ca:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 80192ce:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 80192d2:	f891 900d 	ldrb.w	r9, [r1, #13]
 80192d6:	9309      	str	r3, [sp, #36]	; 0x24
 80192d8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 80192dc:	9310      	str	r3, [sp, #64]	; 0x40
 80192de:	ea4f 1749 	mov.w	r7, r9, lsl #5
 80192e2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 80192e6:	930c      	str	r3, [sp, #48]	; 0x30
 80192e8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 80192ec:	798f      	ldrb	r7, [r1, #6]
 80192ee:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 80192f2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 80192f6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 80192fa:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 80192fe:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8019302:	431f      	orrs	r7, r3
 8019304:	f000 8195 	beq.w	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019308:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801930c:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8019310:	f891 9007 	ldrb.w	r9, [r1, #7]
 8019314:	ea59 0903 	orrs.w	r9, r9, r3
 8019318:	f000 818b 	beq.w	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801931c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8019320:	b29b      	uxth	r3, r3
 8019322:	2d00      	cmp	r5, #0
 8019324:	f000 812e 	beq.w	8019584 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8019328:	1aed      	subs	r5, r5, r3
 801932a:	b2ad      	uxth	r5, r5
 801932c:	042b      	lsls	r3, r5, #16
 801932e:	d502      	bpl.n	8019336 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8019330:	1b64      	subs	r4, r4, r5
 8019332:	b224      	sxth	r4, r4
 8019334:	2500      	movs	r5, #0
 8019336:	f9b2 1000 	ldrsh.w	r1, [r2]
 801933a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 801933e:	428c      	cmp	r4, r1
 8019340:	b28b      	uxth	r3, r1
 8019342:	bfbf      	itttt	lt
 8019344:	18ed      	addlt	r5, r5, r3
 8019346:	1b2c      	sublt	r4, r5, r4
 8019348:	b2a5      	uxthlt	r5, r4
 801934a:	460c      	movlt	r4, r1
 801934c:	8891      	ldrh	r1, [r2, #4]
 801934e:	440b      	add	r3, r1
 8019350:	b21b      	sxth	r3, r3
 8019352:	930f      	str	r3, [sp, #60]	; 0x3c
 8019354:	88d3      	ldrh	r3, [r2, #6]
 8019356:	8852      	ldrh	r2, [r2, #2]
 8019358:	4413      	add	r3, r2
 801935a:	b21b      	sxth	r3, r3
 801935c:	930d      	str	r3, [sp, #52]	; 0x34
 801935e:	4bbe      	ldr	r3, [pc, #760]	; (8019658 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8019360:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019362:	f893 b000 	ldrb.w	fp, [r3]
 8019366:	f10b 3cff 	add.w	ip, fp, #4294967295
 801936a:	f1dc 0300 	rsbs	r3, ip, #0
 801936e:	eb43 030c 	adc.w	r3, r3, ip
 8019372:	930e      	str	r3, [sp, #56]	; 0x38
 8019374:	4621      	mov	r1, r4
 8019376:	4653      	mov	r3, sl
 8019378:	a814      	add	r0, sp, #80	; 0x50
 801937a:	f7f7 ffa3 	bl	80112c4 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801937e:	4621      	mov	r1, r4
 8019380:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8019384:	4653      	mov	r3, sl
 8019386:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8019388:	a814      	add	r0, sp, #80	; 0x50
 801938a:	f7f7 ffb8 	bl	80112fe <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801938e:	a918      	add	r1, sp, #96	; 0x60
 8019390:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8019394:	a817      	add	r0, sp, #92	; 0x5c
 8019396:	f7f8 f8d9 	bl	801154c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801939a:	f1ba 0f00 	cmp.w	sl, #0
 801939e:	f040 80f4 	bne.w	801958a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 80193a2:	f1bb 0f01 	cmp.w	fp, #1
 80193a6:	f040 80f8 	bne.w	801959a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 80193aa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80193ac:	2b00      	cmp	r3, #0
 80193ae:	f040 8145 	bne.w	801963c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 80193b2:	b2ba      	uxth	r2, r7
 80193b4:	b905      	cbnz	r5, 80193b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 80193b6:	b16e      	cbz	r6, 80193d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 80193b8:	fb06 5302 	mla	r3, r6, r2, r5
 80193bc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80193be:	fb08 f303 	mul.w	r3, r8, r3
 80193c2:	4631      	mov	r1, r6
 80193c4:	f003 0607 	and.w	r6, r3, #7
 80193c8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 80193cc:	9328      	str	r3, [sp, #160]	; 0xa0
 80193ce:	eba9 0301 	sub.w	r3, r9, r1
 80193d2:	930a      	str	r3, [sp, #40]	; 0x28
 80193d4:	4651      	mov	r1, sl
 80193d6:	980e      	ldr	r0, [sp, #56]	; 0x38
 80193d8:	f7ff ff1c 	bl	8019214 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 80193dc:	4681      	mov	r9, r0
 80193de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80193e0:	f7ff ff42 	bl	8019268 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 80193e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80193e6:	9909      	ldr	r1, [sp, #36]	; 0x24
 80193e8:	eba3 0a01 	sub.w	sl, r3, r1
 80193ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80193ee:	459a      	cmp	sl, r3
 80193f0:	bfa8      	it	ge
 80193f2:	469a      	movge	sl, r3
 80193f4:	f1ba 0f00 	cmp.w	sl, #0
 80193f8:	4683      	mov	fp, r0
 80193fa:	f340 811a 	ble.w	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80193fe:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019400:	1b64      	subs	r4, r4, r5
 8019402:	1b1c      	subs	r4, r3, r4
 8019404:	42bc      	cmp	r4, r7
 8019406:	bfd4      	ite	le
 8019408:	ebc5 0504 	rsble	r5, r5, r4
 801940c:	ebc5 0507 	rsbgt	r5, r5, r7
 8019410:	2d00      	cmp	r5, #0
 8019412:	f340 810e 	ble.w	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019416:	1b52      	subs	r2, r2, r5
 8019418:	fb08 f302 	mul.w	r3, r8, r2
 801941c:	930f      	str	r3, [sp, #60]	; 0x3c
 801941e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019420:	2b00      	cmp	r3, #0
 8019422:	f040 8116 	bne.w	8019652 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8019426:	4b8d      	ldr	r3, [pc, #564]	; (801965c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8019428:	6818      	ldr	r0, [r3, #0]
 801942a:	6803      	ldr	r3, [r0, #0]
 801942c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801942e:	4798      	blx	r3
 8019430:	2301      	movs	r3, #1
 8019432:	fa03 f308 	lsl.w	r3, r3, r8
 8019436:	4a8a      	ldr	r2, [pc, #552]	; (8019660 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8019438:	3b01      	subs	r3, #1
 801943a:	b2db      	uxtb	r3, r3
 801943c:	8811      	ldrh	r1, [r2, #0]
 801943e:	930e      	str	r3, [sp, #56]	; 0x38
 8019440:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8019444:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8019448:	fb01 2303 	mla	r3, r1, r3, r2
 801944c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8019450:	930a      	str	r3, [sp, #40]	; 0x28
 8019452:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019454:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8019458:	9313      	str	r3, [sp, #76]	; 0x4c
 801945a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801945c:	0a19      	lsrs	r1, r3, #8
 801945e:	b2cb      	uxtb	r3, r1
 8019460:	9312      	str	r3, [sp, #72]	; 0x48
 8019462:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019464:	b2db      	uxtb	r3, r3
 8019466:	9311      	str	r3, [sp, #68]	; 0x44
 8019468:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801946a:	095a      	lsrs	r2, r3, #5
 801946c:	4b7d      	ldr	r3, [pc, #500]	; (8019664 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801946e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019472:	400b      	ands	r3, r1
 8019474:	4313      	orrs	r3, r2
 8019476:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019478:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801947c:	4313      	orrs	r3, r2
 801947e:	b29b      	uxth	r3, r3
 8019480:	9310      	str	r3, [sp, #64]	; 0x40
 8019482:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019484:	781a      	ldrb	r2, [r3, #0]
 8019486:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801948a:	4132      	asrs	r2, r6
 801948c:	fb05 b919 	mls	r9, r5, r9, fp
 8019490:	fb03 fb05 	mul.w	fp, r3, r5
 8019494:	b2d2      	uxtb	r2, r2
 8019496:	930d      	str	r3, [sp, #52]	; 0x34
 8019498:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801949c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80194a0:	f0c0 80f5 	bcc.w	801968e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 80194a4:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 80194a8:	46ae      	mov	lr, r5
 80194aa:	f11e 3eff 	adds.w	lr, lr, #4294967295
 80194ae:	f0c0 80dd 	bcc.w	801966c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 80194b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80194b4:	4013      	ands	r3, r2
 80194b6:	d055      	beq.n	8019564 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 80194b8:	20ff      	movs	r0, #255	; 0xff
 80194ba:	990e      	ldr	r1, [sp, #56]	; 0x38
 80194bc:	fb90 f1f1 	sdiv	r1, r0, r1
 80194c0:	434b      	muls	r3, r1
 80194c2:	2bfe      	cmp	r3, #254	; 0xfe
 80194c4:	dd03      	ble.n	80194ce <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 80194c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 80194c8:	4281      	cmp	r1, r0
 80194ca:	f000 80cd 	beq.w	8019668 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 80194ce:	990c      	ldr	r1, [sp, #48]	; 0x30
 80194d0:	f8bc 4000 	ldrh.w	r4, [ip]
 80194d4:	fb11 f303 	smulbb	r3, r1, r3
 80194d8:	b29b      	uxth	r3, r3
 80194da:	1c59      	adds	r1, r3, #1
 80194dc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80194e0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80194e4:	b29f      	uxth	r7, r3
 80194e6:	43db      	mvns	r3, r3
 80194e8:	b2db      	uxtb	r3, r3
 80194ea:	9309      	str	r3, [sp, #36]	; 0x24
 80194ec:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80194ee:	1220      	asrs	r0, r4, #8
 80194f0:	fb13 f907 	smulbb	r9, r3, r7
 80194f4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 80194f8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80194fa:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 80194fe:	fb00 9003 	mla	r0, r0, r3, r9
 8019502:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019504:	10e1      	asrs	r1, r4, #3
 8019506:	fb13 f907 	smulbb	r9, r3, r7
 801950a:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801950e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019510:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019514:	fb01 9103 	mla	r1, r1, r3, r9
 8019518:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801951a:	00e4      	lsls	r4, r4, #3
 801951c:	fb13 f707 	smulbb	r7, r3, r7
 8019520:	b2e4      	uxtb	r4, r4
 8019522:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019524:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019528:	fb04 7403 	mla	r4, r4, r3, r7
 801952c:	b280      	uxth	r0, r0
 801952e:	b2a4      	uxth	r4, r4
 8019530:	1c43      	adds	r3, r0, #1
 8019532:	f104 0901 	add.w	r9, r4, #1
 8019536:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801953a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801953e:	b289      	uxth	r1, r1
 8019540:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8019544:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019548:	ea49 0000 	orr.w	r0, r9, r0
 801954c:	f101 0901 	add.w	r9, r1, #1
 8019550:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8019554:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019558:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801955c:	ea40 0009 	orr.w	r0, r0, r9
 8019560:	f8ac 0000 	strh.w	r0, [ip]
 8019564:	4446      	add	r6, r8
 8019566:	b2b6      	uxth	r6, r6
 8019568:	2e07      	cmp	r6, #7
 801956a:	bf81      	itttt	hi
 801956c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801956e:	785a      	ldrbhi	r2, [r3, #1]
 8019570:	3301      	addhi	r3, #1
 8019572:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8019574:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019576:	bf9a      	itte	ls
 8019578:	fa42 f208 	asrls.w	r2, r2, r8
 801957c:	b2d2      	uxtbls	r2, r2
 801957e:	2600      	movhi	r6, #0
 8019580:	449c      	add	ip, r3
 8019582:	e792      	b.n	80194aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8019584:	441c      	add	r4, r3
 8019586:	b224      	sxth	r4, r4
 8019588:	e6d5      	b.n	8019336 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801958a:	f1ba 0f01 	cmp.w	sl, #1
 801958e:	f47f af0c 	bne.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019592:	f1bb 0f01 	cmp.w	fp, #1
 8019596:	f47f af08 	bne.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801959a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801965c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801959e:	f8db 0000 	ldr.w	r0, [fp]
 80195a2:	6803      	ldr	r3, [r0, #0]
 80195a4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80195a6:	4798      	blx	r3
 80195a8:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 80195ac:	465a      	mov	r2, fp
 80195ae:	d006      	beq.n	80195be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80195b0:	f1b8 0f04 	cmp.w	r8, #4
 80195b4:	d140      	bne.n	8019638 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80195b6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80195b8:	3300      	adds	r3, #0
 80195ba:	bf18      	it	ne
 80195bc:	2301      	movne	r3, #1
 80195be:	0580      	lsls	r0, r0, #22
 80195c0:	d56e      	bpl.n	80196a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80195c2:	f1b8 0f08 	cmp.w	r8, #8
 80195c6:	d16b      	bne.n	80196a0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80195c8:	2b00      	cmp	r3, #0
 80195ca:	bf0c      	ite	eq
 80195cc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80195d0:	f44f 7180 	movne.w	r1, #256	; 0x100
 80195d4:	2d00      	cmp	r5, #0
 80195d6:	f47f aee8 	bne.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80195da:	2e00      	cmp	r6, #0
 80195dc:	f47f aee5 	bne.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80195e0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80195e2:	19e3      	adds	r3, r4, r7
 80195e4:	4283      	cmp	r3, r0
 80195e6:	f73f aee0 	bgt.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80195ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80195ec:	980d      	ldr	r0, [sp, #52]	; 0x34
 80195ee:	444b      	add	r3, r9
 80195f0:	4283      	cmp	r3, r0
 80195f2:	f73f aeda 	bgt.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80195f6:	6810      	ldr	r0, [r2, #0]
 80195f8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80195fc:	6804      	ldr	r4, [r0, #0]
 80195fe:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 8019602:	b2bf      	uxth	r7, r7
 8019604:	f1b8 0f08 	cmp.w	r8, #8
 8019608:	f04f 0500 	mov.w	r5, #0
 801960c:	bf18      	it	ne
 801960e:	3701      	addne	r7, #1
 8019610:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019614:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019616:	9104      	str	r1, [sp, #16]
 8019618:	bf18      	it	ne
 801961a:	f027 0701 	bicne.w	r7, r7, #1
 801961e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019620:	bf18      	it	ne
 8019622:	b2bf      	uxthne	r7, r7
 8019624:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8019628:	e9cd 7900 	strd	r7, r9, [sp]
 801962c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801962e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8019630:	47a0      	blx	r4
 8019632:	b019      	add	sp, #100	; 0x64
 8019634:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019638:	2300      	movs	r3, #0
 801963a:	e7c0      	b.n	80195be <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801963c:	2208      	movs	r2, #8
 801963e:	fb92 f3f8 	sdiv	r3, r2, r8
 8019642:	1e5a      	subs	r2, r3, #1
 8019644:	443a      	add	r2, r7
 8019646:	fb92 f2f3 	sdiv	r2, r2, r3
 801964a:	fb12 f203 	smulbb	r2, r2, r3
 801964e:	b292      	uxth	r2, r2
 8019650:	e6b0      	b.n	80193b4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8019652:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019654:	e6ec      	b.n	8019430 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8019656:	bf00      	nop
 8019658:	20013750 	.word	0x20013750
 801965c:	20013758 	.word	0x20013758
 8019660:	20013752 	.word	0x20013752
 8019664:	00fff800 	.word	0x00fff800
 8019668:	9810      	ldr	r0, [sp, #64]	; 0x40
 801966a:	e779      	b.n	8019560 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801966c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801966e:	b153      	cbz	r3, 8019686 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8019670:	441e      	add	r6, r3
 8019672:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019674:	b2b6      	uxth	r6, r6
 8019676:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801967a:	f006 0607 	and.w	r6, r6, #7
 801967e:	781a      	ldrb	r2, [r3, #0]
 8019680:	9328      	str	r3, [sp, #160]	; 0xa0
 8019682:	4132      	asrs	r2, r6
 8019684:	b2d2      	uxtb	r2, r2
 8019686:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019688:	445b      	add	r3, fp
 801968a:	930a      	str	r3, [sp, #40]	; 0x28
 801968c:	e706      	b.n	801949c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801968e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019690:	2b00      	cmp	r3, #0
 8019692:	d1ce      	bne.n	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019694:	4b05      	ldr	r3, [pc, #20]	; (80196ac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8019696:	6818      	ldr	r0, [r3, #0]
 8019698:	6803      	ldr	r3, [r0, #0]
 801969a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801969c:	4798      	blx	r3
 801969e:	e7c8      	b.n	8019632 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 80196a0:	2b00      	cmp	r3, #0
 80196a2:	f43f ae82 	beq.w	80193aa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80196a6:	f44f 7180 	mov.w	r1, #256	; 0x100
 80196aa:	e793      	b.n	80195d4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 80196ac:	20013758 	.word	0x20013758

080196b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80196b0:	b538      	push	{r3, r4, r5, lr}
 80196b2:	4c15      	ldr	r4, [pc, #84]	; (8019708 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80196b4:	7823      	ldrb	r3, [r4, #0]
 80196b6:	f3bf 8f5b 	dmb	ish
 80196ba:	07da      	lsls	r2, r3, #31
 80196bc:	4605      	mov	r5, r0
 80196be:	d40b      	bmi.n	80196d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80196c0:	4620      	mov	r0, r4
 80196c2:	f008 fc6c 	bl	8021f9e <__cxa_guard_acquire>
 80196c6:	b138      	cbz	r0, 80196d8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80196c8:	4620      	mov	r0, r4
 80196ca:	f008 fc74 	bl	8021fb6 <__cxa_guard_release>
 80196ce:	4a0f      	ldr	r2, [pc, #60]	; (801970c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80196d0:	490f      	ldr	r1, [pc, #60]	; (8019710 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80196d2:	4810      	ldr	r0, [pc, #64]	; (8019714 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80196d4:	f008 fc5c 	bl	8021f90 <__aeabi_atexit>
 80196d8:	4c0f      	ldr	r4, [pc, #60]	; (8019718 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80196da:	7823      	ldrb	r3, [r4, #0]
 80196dc:	f3bf 8f5b 	dmb	ish
 80196e0:	07db      	lsls	r3, r3, #31
 80196e2:	d40b      	bmi.n	80196fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80196e4:	4620      	mov	r0, r4
 80196e6:	f008 fc5a 	bl	8021f9e <__cxa_guard_acquire>
 80196ea:	b138      	cbz	r0, 80196fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80196ec:	4620      	mov	r0, r4
 80196ee:	f008 fc62 	bl	8021fb6 <__cxa_guard_release>
 80196f2:	4a06      	ldr	r2, [pc, #24]	; (801970c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80196f4:	4909      	ldr	r1, [pc, #36]	; (801971c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80196f6:	480a      	ldr	r0, [pc, #40]	; (8019720 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80196f8:	f008 fc4a 	bl	8021f90 <__aeabi_atexit>
 80196fc:	4b05      	ldr	r3, [pc, #20]	; (8019714 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80196fe:	612b      	str	r3, [r5, #16]
 8019700:	4b07      	ldr	r3, [pc, #28]	; (8019720 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8019702:	616b      	str	r3, [r5, #20]
 8019704:	bd38      	pop	{r3, r4, r5, pc}
 8019706:	bf00      	nop
 8019708:	2001382c 	.word	0x2001382c
 801970c:	20000000 	.word	0x20000000
 8019710:	080178c1 	.word	0x080178c1
 8019714:	200000c8 	.word	0x200000c8
 8019718:	20013830 	.word	0x20013830
 801971c:	080178bf 	.word	0x080178bf
 8019720:	200000cc 	.word	0x200000cc

08019724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019724:	b538      	push	{r3, r4, r5, lr}
 8019726:	4c15      	ldr	r4, [pc, #84]	; (801977c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019728:	7823      	ldrb	r3, [r4, #0]
 801972a:	f3bf 8f5b 	dmb	ish
 801972e:	07da      	lsls	r2, r3, #31
 8019730:	4605      	mov	r5, r0
 8019732:	d40b      	bmi.n	801974c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019734:	4620      	mov	r0, r4
 8019736:	f008 fc32 	bl	8021f9e <__cxa_guard_acquire>
 801973a:	b138      	cbz	r0, 801974c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801973c:	4620      	mov	r0, r4
 801973e:	f008 fc3a 	bl	8021fb6 <__cxa_guard_release>
 8019742:	4a0f      	ldr	r2, [pc, #60]	; (8019780 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019744:	490f      	ldr	r1, [pc, #60]	; (8019784 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019746:	4810      	ldr	r0, [pc, #64]	; (8019788 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019748:	f008 fc22 	bl	8021f90 <__aeabi_atexit>
 801974c:	4c0f      	ldr	r4, [pc, #60]	; (801978c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801974e:	7823      	ldrb	r3, [r4, #0]
 8019750:	f3bf 8f5b 	dmb	ish
 8019754:	07db      	lsls	r3, r3, #31
 8019756:	d40b      	bmi.n	8019770 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019758:	4620      	mov	r0, r4
 801975a:	f008 fc20 	bl	8021f9e <__cxa_guard_acquire>
 801975e:	b138      	cbz	r0, 8019770 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019760:	4620      	mov	r0, r4
 8019762:	f008 fc28 	bl	8021fb6 <__cxa_guard_release>
 8019766:	4a06      	ldr	r2, [pc, #24]	; (8019780 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019768:	4909      	ldr	r1, [pc, #36]	; (8019790 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801976a:	480a      	ldr	r0, [pc, #40]	; (8019794 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801976c:	f008 fc10 	bl	8021f90 <__aeabi_atexit>
 8019770:	4b05      	ldr	r3, [pc, #20]	; (8019788 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019772:	60ab      	str	r3, [r5, #8]
 8019774:	4b07      	ldr	r3, [pc, #28]	; (8019794 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019776:	60eb      	str	r3, [r5, #12]
 8019778:	bd38      	pop	{r3, r4, r5, pc}
 801977a:	bf00      	nop
 801977c:	20013804 	.word	0x20013804
 8019780:	20000000 	.word	0x20000000
 8019784:	080178c5 	.word	0x080178c5
 8019788:	200000a0 	.word	0x200000a0
 801978c:	20013808 	.word	0x20013808
 8019790:	080178c3 	.word	0x080178c3
 8019794:	200000a4 	.word	0x200000a4

08019798 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019798:	b510      	push	{r4, lr}
 801979a:	4604      	mov	r4, r0
 801979c:	f7ff ff88 	bl	80196b0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 80197a0:	4620      	mov	r0, r4
 80197a2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80197a6:	f7ff bfbd 	b.w	8019724 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

080197ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 80197ac:	b538      	push	{r3, r4, r5, lr}
 80197ae:	4c15      	ldr	r4, [pc, #84]	; (8019804 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80197b0:	7823      	ldrb	r3, [r4, #0]
 80197b2:	f3bf 8f5b 	dmb	ish
 80197b6:	07da      	lsls	r2, r3, #31
 80197b8:	4605      	mov	r5, r0
 80197ba:	d40b      	bmi.n	80197d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80197bc:	4620      	mov	r0, r4
 80197be:	f008 fbee 	bl	8021f9e <__cxa_guard_acquire>
 80197c2:	b138      	cbz	r0, 80197d4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80197c4:	4620      	mov	r0, r4
 80197c6:	f008 fbf6 	bl	8021fb6 <__cxa_guard_release>
 80197ca:	4a0f      	ldr	r2, [pc, #60]	; (8019808 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80197cc:	490f      	ldr	r1, [pc, #60]	; (801980c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80197ce:	4810      	ldr	r0, [pc, #64]	; (8019810 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80197d0:	f008 fbde 	bl	8021f90 <__aeabi_atexit>
 80197d4:	4c0f      	ldr	r4, [pc, #60]	; (8019814 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80197d6:	7823      	ldrb	r3, [r4, #0]
 80197d8:	f3bf 8f5b 	dmb	ish
 80197dc:	07db      	lsls	r3, r3, #31
 80197de:	d40b      	bmi.n	80197f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80197e0:	4620      	mov	r0, r4
 80197e2:	f008 fbdc 	bl	8021f9e <__cxa_guard_acquire>
 80197e6:	b138      	cbz	r0, 80197f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80197e8:	4620      	mov	r0, r4
 80197ea:	f008 fbe4 	bl	8021fb6 <__cxa_guard_release>
 80197ee:	4a06      	ldr	r2, [pc, #24]	; (8019808 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80197f0:	4909      	ldr	r1, [pc, #36]	; (8019818 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80197f2:	480a      	ldr	r0, [pc, #40]	; (801981c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80197f4:	f008 fbcc 	bl	8021f90 <__aeabi_atexit>
 80197f8:	4b05      	ldr	r3, [pc, #20]	; (8019810 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80197fa:	622b      	str	r3, [r5, #32]
 80197fc:	4b07      	ldr	r3, [pc, #28]	; (801981c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80197fe:	626b      	str	r3, [r5, #36]	; 0x24
 8019800:	bd38      	pop	{r3, r4, r5, pc}
 8019802:	bf00      	nop
 8019804:	20013834 	.word	0x20013834
 8019808:	20000000 	.word	0x20000000
 801980c:	080178b9 	.word	0x080178b9
 8019810:	200000d0 	.word	0x200000d0
 8019814:	20013838 	.word	0x20013838
 8019818:	080178b7 	.word	0x080178b7
 801981c:	200000d4 	.word	0x200000d4

08019820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019820:	b538      	push	{r3, r4, r5, lr}
 8019822:	4c15      	ldr	r4, [pc, #84]	; (8019878 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019824:	7823      	ldrb	r3, [r4, #0]
 8019826:	f3bf 8f5b 	dmb	ish
 801982a:	07da      	lsls	r2, r3, #31
 801982c:	4605      	mov	r5, r0
 801982e:	d40b      	bmi.n	8019848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019830:	4620      	mov	r0, r4
 8019832:	f008 fbb4 	bl	8021f9e <__cxa_guard_acquire>
 8019836:	b138      	cbz	r0, 8019848 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019838:	4620      	mov	r0, r4
 801983a:	f008 fbbc 	bl	8021fb6 <__cxa_guard_release>
 801983e:	4a0f      	ldr	r2, [pc, #60]	; (801987c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019840:	490f      	ldr	r1, [pc, #60]	; (8019880 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019842:	4810      	ldr	r0, [pc, #64]	; (8019884 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019844:	f008 fba4 	bl	8021f90 <__aeabi_atexit>
 8019848:	4c0f      	ldr	r4, [pc, #60]	; (8019888 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801984a:	7823      	ldrb	r3, [r4, #0]
 801984c:	f3bf 8f5b 	dmb	ish
 8019850:	07db      	lsls	r3, r3, #31
 8019852:	d40b      	bmi.n	801986c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019854:	4620      	mov	r0, r4
 8019856:	f008 fba2 	bl	8021f9e <__cxa_guard_acquire>
 801985a:	b138      	cbz	r0, 801986c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801985c:	4620      	mov	r0, r4
 801985e:	f008 fbaa 	bl	8021fb6 <__cxa_guard_release>
 8019862:	4a06      	ldr	r2, [pc, #24]	; (801987c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019864:	4909      	ldr	r1, [pc, #36]	; (801988c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019866:	480a      	ldr	r0, [pc, #40]	; (8019890 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019868:	f008 fb92 	bl	8021f90 <__aeabi_atexit>
 801986c:	4b05      	ldr	r3, [pc, #20]	; (8019884 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801986e:	61ab      	str	r3, [r5, #24]
 8019870:	4b07      	ldr	r3, [pc, #28]	; (8019890 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019872:	61eb      	str	r3, [r5, #28]
 8019874:	bd38      	pop	{r3, r4, r5, pc}
 8019876:	bf00      	nop
 8019878:	2001380c 	.word	0x2001380c
 801987c:	20000000 	.word	0x20000000
 8019880:	080178bd 	.word	0x080178bd
 8019884:	200000a8 	.word	0x200000a8
 8019888:	20013810 	.word	0x20013810
 801988c:	080178bb 	.word	0x080178bb
 8019890:	200000ac 	.word	0x200000ac

08019894 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019894:	b510      	push	{r4, lr}
 8019896:	4604      	mov	r4, r0
 8019898:	f7ff ff88 	bl	80197ac <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801989c:	4620      	mov	r0, r4
 801989e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198a2:	f7ff bfbd 	b.w	8019820 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

080198a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 80198a8:	b538      	push	{r3, r4, r5, lr}
 80198aa:	4c15      	ldr	r4, [pc, #84]	; (8019900 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 80198ac:	7823      	ldrb	r3, [r4, #0]
 80198ae:	f3bf 8f5b 	dmb	ish
 80198b2:	07da      	lsls	r2, r3, #31
 80198b4:	4605      	mov	r5, r0
 80198b6:	d40b      	bmi.n	80198d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80198b8:	4620      	mov	r0, r4
 80198ba:	f008 fb70 	bl	8021f9e <__cxa_guard_acquire>
 80198be:	b138      	cbz	r0, 80198d0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80198c0:	4620      	mov	r0, r4
 80198c2:	f008 fb78 	bl	8021fb6 <__cxa_guard_release>
 80198c6:	4a0f      	ldr	r2, [pc, #60]	; (8019904 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80198c8:	490f      	ldr	r1, [pc, #60]	; (8019908 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80198ca:	4810      	ldr	r0, [pc, #64]	; (801990c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80198cc:	f008 fb60 	bl	8021f90 <__aeabi_atexit>
 80198d0:	4c0f      	ldr	r4, [pc, #60]	; (8019910 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80198d2:	7823      	ldrb	r3, [r4, #0]
 80198d4:	f3bf 8f5b 	dmb	ish
 80198d8:	07db      	lsls	r3, r3, #31
 80198da:	d40b      	bmi.n	80198f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80198dc:	4620      	mov	r0, r4
 80198de:	f008 fb5e 	bl	8021f9e <__cxa_guard_acquire>
 80198e2:	b138      	cbz	r0, 80198f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80198e4:	4620      	mov	r0, r4
 80198e6:	f008 fb66 	bl	8021fb6 <__cxa_guard_release>
 80198ea:	4a06      	ldr	r2, [pc, #24]	; (8019904 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80198ec:	4909      	ldr	r1, [pc, #36]	; (8019914 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80198ee:	480a      	ldr	r0, [pc, #40]	; (8019918 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80198f0:	f008 fb4e 	bl	8021f90 <__aeabi_atexit>
 80198f4:	4b05      	ldr	r3, [pc, #20]	; (801990c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80198f6:	632b      	str	r3, [r5, #48]	; 0x30
 80198f8:	4b07      	ldr	r3, [pc, #28]	; (8019918 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80198fa:	636b      	str	r3, [r5, #52]	; 0x34
 80198fc:	bd38      	pop	{r3, r4, r5, pc}
 80198fe:	bf00      	nop
 8019900:	20013844 	.word	0x20013844
 8019904:	20000000 	.word	0x20000000
 8019908:	080178b1 	.word	0x080178b1
 801990c:	200000e0 	.word	0x200000e0
 8019910:	20013848 	.word	0x20013848
 8019914:	080178af 	.word	0x080178af
 8019918:	200000e4 	.word	0x200000e4

0801991c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801991c:	b538      	push	{r3, r4, r5, lr}
 801991e:	4c15      	ldr	r4, [pc, #84]	; (8019974 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019920:	7823      	ldrb	r3, [r4, #0]
 8019922:	f3bf 8f5b 	dmb	ish
 8019926:	07da      	lsls	r2, r3, #31
 8019928:	4605      	mov	r5, r0
 801992a:	d40b      	bmi.n	8019944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801992c:	4620      	mov	r0, r4
 801992e:	f008 fb36 	bl	8021f9e <__cxa_guard_acquire>
 8019932:	b138      	cbz	r0, 8019944 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019934:	4620      	mov	r0, r4
 8019936:	f008 fb3e 	bl	8021fb6 <__cxa_guard_release>
 801993a:	4a0f      	ldr	r2, [pc, #60]	; (8019978 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801993c:	490f      	ldr	r1, [pc, #60]	; (801997c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801993e:	4810      	ldr	r0, [pc, #64]	; (8019980 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019940:	f008 fb26 	bl	8021f90 <__aeabi_atexit>
 8019944:	4c0f      	ldr	r4, [pc, #60]	; (8019984 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019946:	7823      	ldrb	r3, [r4, #0]
 8019948:	f3bf 8f5b 	dmb	ish
 801994c:	07db      	lsls	r3, r3, #31
 801994e:	d40b      	bmi.n	8019968 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019950:	4620      	mov	r0, r4
 8019952:	f008 fb24 	bl	8021f9e <__cxa_guard_acquire>
 8019956:	b138      	cbz	r0, 8019968 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019958:	4620      	mov	r0, r4
 801995a:	f008 fb2c 	bl	8021fb6 <__cxa_guard_release>
 801995e:	4a06      	ldr	r2, [pc, #24]	; (8019978 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019960:	4909      	ldr	r1, [pc, #36]	; (8019988 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019962:	480a      	ldr	r0, [pc, #40]	; (801998c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019964:	f008 fb14 	bl	8021f90 <__aeabi_atexit>
 8019968:	4b05      	ldr	r3, [pc, #20]	; (8019980 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801996a:	62ab      	str	r3, [r5, #40]	; 0x28
 801996c:	4b07      	ldr	r3, [pc, #28]	; (801998c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801996e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8019970:	bd38      	pop	{r3, r4, r5, pc}
 8019972:	bf00      	nop
 8019974:	20013814 	.word	0x20013814
 8019978:	20000000 	.word	0x20000000
 801997c:	080178b5 	.word	0x080178b5
 8019980:	200000b0 	.word	0x200000b0
 8019984:	20013818 	.word	0x20013818
 8019988:	080178b3 	.word	0x080178b3
 801998c:	200000b4 	.word	0x200000b4

08019990 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019990:	b510      	push	{r4, lr}
 8019992:	4604      	mov	r4, r0
 8019994:	f7ff ff88 	bl	80198a8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019998:	4620      	mov	r0, r4
 801999a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801999e:	f7ff bfbd 	b.w	801991c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

080199a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 80199a4:	b538      	push	{r3, r4, r5, lr}
 80199a6:	4c15      	ldr	r4, [pc, #84]	; (80199fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 80199a8:	7823      	ldrb	r3, [r4, #0]
 80199aa:	f3bf 8f5b 	dmb	ish
 80199ae:	07da      	lsls	r2, r3, #31
 80199b0:	4605      	mov	r5, r0
 80199b2:	d40b      	bmi.n	80199cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80199b4:	4620      	mov	r0, r4
 80199b6:	f008 faf2 	bl	8021f9e <__cxa_guard_acquire>
 80199ba:	b138      	cbz	r0, 80199cc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80199bc:	4620      	mov	r0, r4
 80199be:	f008 fafa 	bl	8021fb6 <__cxa_guard_release>
 80199c2:	4a0f      	ldr	r2, [pc, #60]	; (8019a00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80199c4:	490f      	ldr	r1, [pc, #60]	; (8019a04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80199c6:	4810      	ldr	r0, [pc, #64]	; (8019a08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80199c8:	f008 fae2 	bl	8021f90 <__aeabi_atexit>
 80199cc:	4c0f      	ldr	r4, [pc, #60]	; (8019a0c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80199ce:	7823      	ldrb	r3, [r4, #0]
 80199d0:	f3bf 8f5b 	dmb	ish
 80199d4:	07db      	lsls	r3, r3, #31
 80199d6:	d40b      	bmi.n	80199f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80199d8:	4620      	mov	r0, r4
 80199da:	f008 fae0 	bl	8021f9e <__cxa_guard_acquire>
 80199de:	b138      	cbz	r0, 80199f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80199e0:	4620      	mov	r0, r4
 80199e2:	f008 fae8 	bl	8021fb6 <__cxa_guard_release>
 80199e6:	4a06      	ldr	r2, [pc, #24]	; (8019a00 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80199e8:	4909      	ldr	r1, [pc, #36]	; (8019a10 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80199ea:	480a      	ldr	r0, [pc, #40]	; (8019a14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80199ec:	f008 fad0 	bl	8021f90 <__aeabi_atexit>
 80199f0:	4b05      	ldr	r3, [pc, #20]	; (8019a08 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80199f2:	652b      	str	r3, [r5, #80]	; 0x50
 80199f4:	4b07      	ldr	r3, [pc, #28]	; (8019a14 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80199f6:	656b      	str	r3, [r5, #84]	; 0x54
 80199f8:	bd38      	pop	{r3, r4, r5, pc}
 80199fa:	bf00      	nop
 80199fc:	2001384c 	.word	0x2001384c
 8019a00:	20000000 	.word	0x20000000
 8019a04:	080178a1 	.word	0x080178a1
 8019a08:	200000e8 	.word	0x200000e8
 8019a0c:	20013850 	.word	0x20013850
 8019a10:	0801789f 	.word	0x0801789f
 8019a14:	200000ec 	.word	0x200000ec

08019a18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019a18:	b538      	push	{r3, r4, r5, lr}
 8019a1a:	4c15      	ldr	r4, [pc, #84]	; (8019a70 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8019a1c:	7823      	ldrb	r3, [r4, #0]
 8019a1e:	f3bf 8f5b 	dmb	ish
 8019a22:	07da      	lsls	r2, r3, #31
 8019a24:	4605      	mov	r5, r0
 8019a26:	d40b      	bmi.n	8019a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019a28:	4620      	mov	r0, r4
 8019a2a:	f008 fab8 	bl	8021f9e <__cxa_guard_acquire>
 8019a2e:	b138      	cbz	r0, 8019a40 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019a30:	4620      	mov	r0, r4
 8019a32:	f008 fac0 	bl	8021fb6 <__cxa_guard_release>
 8019a36:	4a0f      	ldr	r2, [pc, #60]	; (8019a74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019a38:	490f      	ldr	r1, [pc, #60]	; (8019a78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8019a3a:	4810      	ldr	r0, [pc, #64]	; (8019a7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019a3c:	f008 faa8 	bl	8021f90 <__aeabi_atexit>
 8019a40:	4c0f      	ldr	r4, [pc, #60]	; (8019a80 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019a42:	7823      	ldrb	r3, [r4, #0]
 8019a44:	f3bf 8f5b 	dmb	ish
 8019a48:	07db      	lsls	r3, r3, #31
 8019a4a:	d40b      	bmi.n	8019a64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019a4c:	4620      	mov	r0, r4
 8019a4e:	f008 faa6 	bl	8021f9e <__cxa_guard_acquire>
 8019a52:	b138      	cbz	r0, 8019a64 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019a54:	4620      	mov	r0, r4
 8019a56:	f008 faae 	bl	8021fb6 <__cxa_guard_release>
 8019a5a:	4a06      	ldr	r2, [pc, #24]	; (8019a74 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019a5c:	4909      	ldr	r1, [pc, #36]	; (8019a84 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8019a5e:	480a      	ldr	r0, [pc, #40]	; (8019a88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019a60:	f008 fa96 	bl	8021f90 <__aeabi_atexit>
 8019a64:	4b05      	ldr	r3, [pc, #20]	; (8019a7c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019a66:	64ab      	str	r3, [r5, #72]	; 0x48
 8019a68:	4b07      	ldr	r3, [pc, #28]	; (8019a88 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019a6a:	64eb      	str	r3, [r5, #76]	; 0x4c
 8019a6c:	bd38      	pop	{r3, r4, r5, pc}
 8019a6e:	bf00      	nop
 8019a70:	20013854 	.word	0x20013854
 8019a74:	20000000 	.word	0x20000000
 8019a78:	080178a5 	.word	0x080178a5
 8019a7c:	200000f0 	.word	0x200000f0
 8019a80:	20013858 	.word	0x20013858
 8019a84:	080178a3 	.word	0x080178a3
 8019a88:	200000f4 	.word	0x200000f4

08019a8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8019a8c:	b538      	push	{r3, r4, r5, lr}
 8019a8e:	4c15      	ldr	r4, [pc, #84]	; (8019ae4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019a90:	7823      	ldrb	r3, [r4, #0]
 8019a92:	f3bf 8f5b 	dmb	ish
 8019a96:	07da      	lsls	r2, r3, #31
 8019a98:	4605      	mov	r5, r0
 8019a9a:	d40b      	bmi.n	8019ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019a9c:	4620      	mov	r0, r4
 8019a9e:	f008 fa7e 	bl	8021f9e <__cxa_guard_acquire>
 8019aa2:	b138      	cbz	r0, 8019ab4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019aa4:	4620      	mov	r0, r4
 8019aa6:	f008 fa86 	bl	8021fb6 <__cxa_guard_release>
 8019aaa:	4a0f      	ldr	r2, [pc, #60]	; (8019ae8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019aac:	490f      	ldr	r1, [pc, #60]	; (8019aec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8019aae:	4810      	ldr	r0, [pc, #64]	; (8019af0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019ab0:	f008 fa6e 	bl	8021f90 <__aeabi_atexit>
 8019ab4:	4c0f      	ldr	r4, [pc, #60]	; (8019af4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8019ab6:	7823      	ldrb	r3, [r4, #0]
 8019ab8:	f3bf 8f5b 	dmb	ish
 8019abc:	07db      	lsls	r3, r3, #31
 8019abe:	d40b      	bmi.n	8019ad8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019ac0:	4620      	mov	r0, r4
 8019ac2:	f008 fa6c 	bl	8021f9e <__cxa_guard_acquire>
 8019ac6:	b138      	cbz	r0, 8019ad8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8019ac8:	4620      	mov	r0, r4
 8019aca:	f008 fa74 	bl	8021fb6 <__cxa_guard_release>
 8019ace:	4a06      	ldr	r2, [pc, #24]	; (8019ae8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8019ad0:	4909      	ldr	r1, [pc, #36]	; (8019af8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8019ad2:	480a      	ldr	r0, [pc, #40]	; (8019afc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019ad4:	f008 fa5c 	bl	8021f90 <__aeabi_atexit>
 8019ad8:	4b05      	ldr	r3, [pc, #20]	; (8019af0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8019ada:	642b      	str	r3, [r5, #64]	; 0x40
 8019adc:	4b07      	ldr	r3, [pc, #28]	; (8019afc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8019ade:	646b      	str	r3, [r5, #68]	; 0x44
 8019ae0:	bd38      	pop	{r3, r4, r5, pc}
 8019ae2:	bf00      	nop
 8019ae4:	2001381c 	.word	0x2001381c
 8019ae8:	20000000 	.word	0x20000000
 8019aec:	080178a9 	.word	0x080178a9
 8019af0:	200000b8 	.word	0x200000b8
 8019af4:	20013820 	.word	0x20013820
 8019af8:	080178a7 	.word	0x080178a7
 8019afc:	200000bc 	.word	0x200000bc

08019b00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8019b00:	b538      	push	{r3, r4, r5, lr}
 8019b02:	4c15      	ldr	r4, [pc, #84]	; (8019b58 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8019b04:	7823      	ldrb	r3, [r4, #0]
 8019b06:	f3bf 8f5b 	dmb	ish
 8019b0a:	07da      	lsls	r2, r3, #31
 8019b0c:	4605      	mov	r5, r0
 8019b0e:	d40b      	bmi.n	8019b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019b10:	4620      	mov	r0, r4
 8019b12:	f008 fa44 	bl	8021f9e <__cxa_guard_acquire>
 8019b16:	b138      	cbz	r0, 8019b28 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019b18:	4620      	mov	r0, r4
 8019b1a:	f008 fa4c 	bl	8021fb6 <__cxa_guard_release>
 8019b1e:	4a0f      	ldr	r2, [pc, #60]	; (8019b5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019b20:	490f      	ldr	r1, [pc, #60]	; (8019b60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019b22:	4810      	ldr	r0, [pc, #64]	; (8019b64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019b24:	f008 fa34 	bl	8021f90 <__aeabi_atexit>
 8019b28:	4c0f      	ldr	r4, [pc, #60]	; (8019b68 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8019b2a:	7823      	ldrb	r3, [r4, #0]
 8019b2c:	f3bf 8f5b 	dmb	ish
 8019b30:	07db      	lsls	r3, r3, #31
 8019b32:	d40b      	bmi.n	8019b4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019b34:	4620      	mov	r0, r4
 8019b36:	f008 fa32 	bl	8021f9e <__cxa_guard_acquire>
 8019b3a:	b138      	cbz	r0, 8019b4c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019b3c:	4620      	mov	r0, r4
 8019b3e:	f008 fa3a 	bl	8021fb6 <__cxa_guard_release>
 8019b42:	4a06      	ldr	r2, [pc, #24]	; (8019b5c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019b44:	4909      	ldr	r1, [pc, #36]	; (8019b6c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019b46:	480a      	ldr	r0, [pc, #40]	; (8019b70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019b48:	f008 fa22 	bl	8021f90 <__aeabi_atexit>
 8019b4c:	4b05      	ldr	r3, [pc, #20]	; (8019b64 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019b4e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019b50:	4b07      	ldr	r3, [pc, #28]	; (8019b70 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019b52:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019b54:	bd38      	pop	{r3, r4, r5, pc}
 8019b56:	bf00      	nop
 8019b58:	2001383c 	.word	0x2001383c
 8019b5c:	20000000 	.word	0x20000000
 8019b60:	080178ad 	.word	0x080178ad
 8019b64:	200000d8 	.word	0x200000d8
 8019b68:	20013840 	.word	0x20013840
 8019b6c:	080178ab 	.word	0x080178ab
 8019b70:	200000dc 	.word	0x200000dc

08019b74 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019b74:	b510      	push	{r4, lr}
 8019b76:	4604      	mov	r4, r0
 8019b78:	f7ff ff14 	bl	80199a4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8019b7c:	4620      	mov	r0, r4
 8019b7e:	f7ff ff85 	bl	8019a8c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019b82:	4620      	mov	r0, r4
 8019b84:	f7ff ff48 	bl	8019a18 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019b88:	4620      	mov	r0, r4
 8019b8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019b8e:	f7ff bfb7 	b.w	8019b00 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019b94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019b94:	b538      	push	{r3, r4, r5, lr}
 8019b96:	4c15      	ldr	r4, [pc, #84]	; (8019bec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019b98:	7823      	ldrb	r3, [r4, #0]
 8019b9a:	f3bf 8f5b 	dmb	ish
 8019b9e:	07da      	lsls	r2, r3, #31
 8019ba0:	4605      	mov	r5, r0
 8019ba2:	d40b      	bmi.n	8019bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019ba4:	4620      	mov	r0, r4
 8019ba6:	f008 f9fa 	bl	8021f9e <__cxa_guard_acquire>
 8019baa:	b138      	cbz	r0, 8019bbc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019bac:	4620      	mov	r0, r4
 8019bae:	f008 fa02 	bl	8021fb6 <__cxa_guard_release>
 8019bb2:	4a0f      	ldr	r2, [pc, #60]	; (8019bf0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019bb4:	490f      	ldr	r1, [pc, #60]	; (8019bf4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8019bb6:	4810      	ldr	r0, [pc, #64]	; (8019bf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019bb8:	f008 f9ea 	bl	8021f90 <__aeabi_atexit>
 8019bbc:	4c0f      	ldr	r4, [pc, #60]	; (8019bfc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 8019bbe:	7823      	ldrb	r3, [r4, #0]
 8019bc0:	f3bf 8f5b 	dmb	ish
 8019bc4:	07db      	lsls	r3, r3, #31
 8019bc6:	d40b      	bmi.n	8019be0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019bc8:	4620      	mov	r0, r4
 8019bca:	f008 f9e8 	bl	8021f9e <__cxa_guard_acquire>
 8019bce:	b138      	cbz	r0, 8019be0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8019bd0:	4620      	mov	r0, r4
 8019bd2:	f008 f9f0 	bl	8021fb6 <__cxa_guard_release>
 8019bd6:	4a06      	ldr	r2, [pc, #24]	; (8019bf0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8019bd8:	4909      	ldr	r1, [pc, #36]	; (8019c00 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 8019bda:	480a      	ldr	r0, [pc, #40]	; (8019c04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019bdc:	f008 f9d8 	bl	8021f90 <__aeabi_atexit>
 8019be0:	4b05      	ldr	r3, [pc, #20]	; (8019bf8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8019be2:	662b      	str	r3, [r5, #96]	; 0x60
 8019be4:	4b07      	ldr	r3, [pc, #28]	; (8019c04 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8019be6:	666b      	str	r3, [r5, #100]	; 0x64
 8019be8:	bd38      	pop	{r3, r4, r5, pc}
 8019bea:	bf00      	nop
 8019bec:	20013824 	.word	0x20013824
 8019bf0:	20000000 	.word	0x20000000
 8019bf4:	08017899 	.word	0x08017899
 8019bf8:	200000c0 	.word	0x200000c0
 8019bfc:	20013828 	.word	0x20013828
 8019c00:	08017897 	.word	0x08017897
 8019c04:	200000c4 	.word	0x200000c4

08019c08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8019c08:	b538      	push	{r3, r4, r5, lr}
 8019c0a:	4c15      	ldr	r4, [pc, #84]	; (8019c60 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 8019c0c:	7823      	ldrb	r3, [r4, #0]
 8019c0e:	f3bf 8f5b 	dmb	ish
 8019c12:	07da      	lsls	r2, r3, #31
 8019c14:	4605      	mov	r5, r0
 8019c16:	d40b      	bmi.n	8019c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019c18:	4620      	mov	r0, r4
 8019c1a:	f008 f9c0 	bl	8021f9e <__cxa_guard_acquire>
 8019c1e:	b138      	cbz	r0, 8019c30 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019c20:	4620      	mov	r0, r4
 8019c22:	f008 f9c8 	bl	8021fb6 <__cxa_guard_release>
 8019c26:	4a0f      	ldr	r2, [pc, #60]	; (8019c64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019c28:	490f      	ldr	r1, [pc, #60]	; (8019c68 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 8019c2a:	4810      	ldr	r0, [pc, #64]	; (8019c6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019c2c:	f008 f9b0 	bl	8021f90 <__aeabi_atexit>
 8019c30:	4c0f      	ldr	r4, [pc, #60]	; (8019c70 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019c32:	7823      	ldrb	r3, [r4, #0]
 8019c34:	f3bf 8f5b 	dmb	ish
 8019c38:	07db      	lsls	r3, r3, #31
 8019c3a:	d40b      	bmi.n	8019c54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019c3c:	4620      	mov	r0, r4
 8019c3e:	f008 f9ae 	bl	8021f9e <__cxa_guard_acquire>
 8019c42:	b138      	cbz	r0, 8019c54 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019c44:	4620      	mov	r0, r4
 8019c46:	f008 f9b6 	bl	8021fb6 <__cxa_guard_release>
 8019c4a:	4a06      	ldr	r2, [pc, #24]	; (8019c64 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019c4c:	4909      	ldr	r1, [pc, #36]	; (8019c74 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 8019c4e:	480a      	ldr	r0, [pc, #40]	; (8019c78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019c50:	f008 f99e 	bl	8021f90 <__aeabi_atexit>
 8019c54:	4b05      	ldr	r3, [pc, #20]	; (8019c6c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019c56:	65ab      	str	r3, [r5, #88]	; 0x58
 8019c58:	4b07      	ldr	r3, [pc, #28]	; (8019c78 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019c5a:	65eb      	str	r3, [r5, #92]	; 0x5c
 8019c5c:	bd38      	pop	{r3, r4, r5, pc}
 8019c5e:	bf00      	nop
 8019c60:	200137fc 	.word	0x200137fc
 8019c64:	20000000 	.word	0x20000000
 8019c68:	0801789d 	.word	0x0801789d
 8019c6c:	20000098 	.word	0x20000098
 8019c70:	20013800 	.word	0x20013800
 8019c74:	0801789b 	.word	0x0801789b
 8019c78:	2000009c 	.word	0x2000009c

08019c7c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 8019c7c:	b510      	push	{r4, lr}
 8019c7e:	4604      	mov	r4, r0
 8019c80:	f7ff ff88 	bl	8019b94 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019c84:	4620      	mov	r0, r4
 8019c86:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019c8a:	f7ff bfbd 	b.w	8019c08 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019c90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019c90:	b538      	push	{r3, r4, r5, lr}
 8019c92:	4c15      	ldr	r4, [pc, #84]	; (8019ce8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019c94:	7823      	ldrb	r3, [r4, #0]
 8019c96:	f3bf 8f5b 	dmb	ish
 8019c9a:	07da      	lsls	r2, r3, #31
 8019c9c:	4605      	mov	r5, r0
 8019c9e:	d40b      	bmi.n	8019cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019ca0:	4620      	mov	r0, r4
 8019ca2:	f008 f97c 	bl	8021f9e <__cxa_guard_acquire>
 8019ca6:	b138      	cbz	r0, 8019cb8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019ca8:	4620      	mov	r0, r4
 8019caa:	f008 f984 	bl	8021fb6 <__cxa_guard_release>
 8019cae:	4a0f      	ldr	r2, [pc, #60]	; (8019cec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019cb0:	490f      	ldr	r1, [pc, #60]	; (8019cf0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8019cb2:	4810      	ldr	r0, [pc, #64]	; (8019cf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019cb4:	f008 f96c 	bl	8021f90 <__aeabi_atexit>
 8019cb8:	4c0f      	ldr	r4, [pc, #60]	; (8019cf8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 8019cba:	7823      	ldrb	r3, [r4, #0]
 8019cbc:	f3bf 8f5b 	dmb	ish
 8019cc0:	07db      	lsls	r3, r3, #31
 8019cc2:	d40b      	bmi.n	8019cdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019cc4:	4620      	mov	r0, r4
 8019cc6:	f008 f96a 	bl	8021f9e <__cxa_guard_acquire>
 8019cca:	b138      	cbz	r0, 8019cdc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8019ccc:	4620      	mov	r0, r4
 8019cce:	f008 f972 	bl	8021fb6 <__cxa_guard_release>
 8019cd2:	4a06      	ldr	r2, [pc, #24]	; (8019cec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8019cd4:	4909      	ldr	r1, [pc, #36]	; (8019cfc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8019cd6:	480a      	ldr	r0, [pc, #40]	; (8019d00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019cd8:	f008 f95a 	bl	8021f90 <__aeabi_atexit>
 8019cdc:	4b05      	ldr	r3, [pc, #20]	; (8019cf4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8019cde:	672b      	str	r3, [r5, #112]	; 0x70
 8019ce0:	4b07      	ldr	r3, [pc, #28]	; (8019d00 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8019ce2:	676b      	str	r3, [r5, #116]	; 0x74
 8019ce4:	bd38      	pop	{r3, r4, r5, pc}
 8019ce6:	bf00      	nop
 8019ce8:	200137f4 	.word	0x200137f4
 8019cec:	20000000 	.word	0x20000000
 8019cf0:	08017891 	.word	0x08017891
 8019cf4:	20000090 	.word	0x20000090
 8019cf8:	200137f8 	.word	0x200137f8
 8019cfc:	0801788f 	.word	0x0801788f
 8019d00:	20000094 	.word	0x20000094

08019d04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8019d04:	b538      	push	{r3, r4, r5, lr}
 8019d06:	4c15      	ldr	r4, [pc, #84]	; (8019d5c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8019d08:	7823      	ldrb	r3, [r4, #0]
 8019d0a:	f3bf 8f5b 	dmb	ish
 8019d0e:	07da      	lsls	r2, r3, #31
 8019d10:	4605      	mov	r5, r0
 8019d12:	d40b      	bmi.n	8019d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019d14:	4620      	mov	r0, r4
 8019d16:	f008 f942 	bl	8021f9e <__cxa_guard_acquire>
 8019d1a:	b138      	cbz	r0, 8019d2c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019d1c:	4620      	mov	r0, r4
 8019d1e:	f008 f94a 	bl	8021fb6 <__cxa_guard_release>
 8019d22:	4a0f      	ldr	r2, [pc, #60]	; (8019d60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019d24:	490f      	ldr	r1, [pc, #60]	; (8019d64 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019d26:	4810      	ldr	r0, [pc, #64]	; (8019d68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019d28:	f008 f932 	bl	8021f90 <__aeabi_atexit>
 8019d2c:	4c0f      	ldr	r4, [pc, #60]	; (8019d6c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 8019d2e:	7823      	ldrb	r3, [r4, #0]
 8019d30:	f3bf 8f5b 	dmb	ish
 8019d34:	07db      	lsls	r3, r3, #31
 8019d36:	d40b      	bmi.n	8019d50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019d38:	4620      	mov	r0, r4
 8019d3a:	f008 f930 	bl	8021f9e <__cxa_guard_acquire>
 8019d3e:	b138      	cbz	r0, 8019d50 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019d40:	4620      	mov	r0, r4
 8019d42:	f008 f938 	bl	8021fb6 <__cxa_guard_release>
 8019d46:	4a06      	ldr	r2, [pc, #24]	; (8019d60 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019d48:	4909      	ldr	r1, [pc, #36]	; (8019d70 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 8019d4a:	480a      	ldr	r0, [pc, #40]	; (8019d74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019d4c:	f008 f920 	bl	8021f90 <__aeabi_atexit>
 8019d50:	4b05      	ldr	r3, [pc, #20]	; (8019d68 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019d52:	66ab      	str	r3, [r5, #104]	; 0x68
 8019d54:	4b07      	ldr	r3, [pc, #28]	; (8019d74 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019d56:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019d58:	bd38      	pop	{r3, r4, r5, pc}
 8019d5a:	bf00      	nop
 8019d5c:	200137ec 	.word	0x200137ec
 8019d60:	20000000 	.word	0x20000000
 8019d64:	08017895 	.word	0x08017895
 8019d68:	20000088 	.word	0x20000088
 8019d6c:	200137f0 	.word	0x200137f0
 8019d70:	08017893 	.word	0x08017893
 8019d74:	2000008c 	.word	0x2000008c

08019d78 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019d78:	b510      	push	{r4, lr}
 8019d7a:	4604      	mov	r4, r0
 8019d7c:	f7ff ff88 	bl	8019c90 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019d80:	4620      	mov	r0, r4
 8019d82:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019d86:	f7ff bfbd 	b.w	8019d04 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

08019d8a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 8019d8a:	b510      	push	{r4, lr}
 8019d8c:	4604      	mov	r4, r0
 8019d8e:	f7ff fff3 	bl	8019d78 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019d92:	4620      	mov	r0, r4
 8019d94:	f7ff ff72 	bl	8019c7c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019d98:	4620      	mov	r0, r4
 8019d9a:	f7ff fdf9 	bl	8019990 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 8019d9e:	4620      	mov	r0, r4
 8019da0:	f7ff fcfa 	bl	8019798 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019da4:	4620      	mov	r0, r4
 8019da6:	f7ff fd75 	bl	8019894 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 8019daa:	4620      	mov	r0, r4
 8019dac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019db0:	f7ff bee0 	b.w	8019b74 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08019db4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8019db4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019db8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 8019dbc:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 8019dc0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 8019dc4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 8019dc8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 8019dcc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 8019dd0:	8808      	ldrh	r0, [r1, #0]
 8019dd2:	fb05 4c0e 	mla	ip, r5, lr, r4
 8019dd6:	2d00      	cmp	r5, #0
 8019dd8:	eb02 0a0c 	add.w	sl, r2, ip
 8019ddc:	f2c0 80b0 	blt.w	8019f40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019de0:	45ab      	cmp	fp, r5
 8019de2:	f340 80ad 	ble.w	8019f40 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 8019de6:	2c00      	cmp	r4, #0
 8019de8:	f2c0 80a8 	blt.w	8019f3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019dec:	45a6      	cmp	lr, r4
 8019dee:	f340 80a5 	ble.w	8019f3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 8019df2:	f812 200c 	ldrb.w	r2, [r2, ip]
 8019df6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 8019dfa:	1c62      	adds	r2, r4, #1
 8019dfc:	f100 80a3 	bmi.w	8019f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019e00:	4596      	cmp	lr, r2
 8019e02:	f340 80a0 	ble.w	8019f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019e06:	f1b9 0f00 	cmp.w	r9, #0
 8019e0a:	f000 809c 	beq.w	8019f46 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 8019e0e:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019e12:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019e16:	3501      	adds	r5, #1
 8019e18:	f100 8099 	bmi.w	8019f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019e1c:	45ab      	cmp	fp, r5
 8019e1e:	f340 8096 	ble.w	8019f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019e22:	2f00      	cmp	r7, #0
 8019e24:	f000 8093 	beq.w	8019f4e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019e28:	2c00      	cmp	r4, #0
 8019e2a:	f2c0 808e 	blt.w	8019f4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019e2e:	45a6      	cmp	lr, r4
 8019e30:	f340 808b 	ble.w	8019f4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019e34:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019e38:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 8019e3c:	3401      	adds	r4, #1
 8019e3e:	f100 8089 	bmi.w	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019e42:	45a6      	cmp	lr, r4
 8019e44:	f340 8086 	ble.w	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019e48:	f1b9 0f00 	cmp.w	r9, #0
 8019e4c:	f000 8082 	beq.w	8019f54 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019e50:	44d6      	add	lr, sl
 8019e52:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019e56:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8019e5a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 8019e5e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019e62:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019e66:	fb19 fe07 	smulbb	lr, r9, r7
 8019e6a:	ea44 0808 	orr.w	r8, r4, r8
 8019e6e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019e72:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019e76:	f1c7 0210 	rsb	r2, r7, #16
 8019e7a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019e7e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019e82:	ea44 0c0c 	orr.w	ip, r4, ip
 8019e86:	eba2 0209 	sub.w	r2, r2, r9
 8019e8a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8019e8e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019e92:	fb04 f40c 	mul.w	r4, r4, ip
 8019e96:	fb02 4808 	mla	r8, r2, r8, r4
 8019e9a:	041a      	lsls	r2, r3, #16
 8019e9c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019ea0:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019ea4:	4313      	orrs	r3, r2
 8019ea6:	042a      	lsls	r2, r5, #16
 8019ea8:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019eac:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8019eb0:	fb0e 8303 	mla	r3, lr, r3, r8
 8019eb4:	432a      	orrs	r2, r5
 8019eb6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 8019eba:	fb07 3202 	mla	r2, r7, r2, r3
 8019ebe:	0d53      	lsrs	r3, r2, #21
 8019ec0:	0952      	lsrs	r2, r2, #5
 8019ec2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019ec6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019eca:	431a      	orrs	r2, r3
 8019ecc:	b293      	uxth	r3, r2
 8019ece:	b2b4      	uxth	r4, r6
 8019ed0:	1202      	asrs	r2, r0, #8
 8019ed2:	43f6      	mvns	r6, r6
 8019ed4:	b2f6      	uxtb	r6, r6
 8019ed6:	121d      	asrs	r5, r3, #8
 8019ed8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8019edc:	fb12 f206 	smulbb	r2, r2, r6
 8019ee0:	10c7      	asrs	r7, r0, #3
 8019ee2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8019ee6:	00c0      	lsls	r0, r0, #3
 8019ee8:	fb05 2504 	mla	r5, r5, r4, r2
 8019eec:	b2c0      	uxtb	r0, r0
 8019eee:	10da      	asrs	r2, r3, #3
 8019ef0:	00db      	lsls	r3, r3, #3
 8019ef2:	b2db      	uxtb	r3, r3
 8019ef4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019ef8:	fb10 f006 	smulbb	r0, r0, r6
 8019efc:	b2ad      	uxth	r5, r5
 8019efe:	fb03 0004 	mla	r0, r3, r4, r0
 8019f02:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8019f06:	fb17 f706 	smulbb	r7, r7, r6
 8019f0a:	b280      	uxth	r0, r0
 8019f0c:	1c6b      	adds	r3, r5, #1
 8019f0e:	fb02 7204 	mla	r2, r2, r4, r7
 8019f12:	b292      	uxth	r2, r2
 8019f14:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019f18:	1c43      	adds	r3, r0, #1
 8019f1a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019f1e:	1c50      	adds	r0, r2, #1
 8019f20:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019f24:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019f28:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019f2c:	0952      	lsrs	r2, r2, #5
 8019f2e:	432b      	orrs	r3, r5
 8019f30:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019f34:	4313      	orrs	r3, r2
 8019f36:	800b      	strh	r3, [r1, #0]
 8019f38:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019f3c:	4680      	mov	r8, r0
 8019f3e:	e75c      	b.n	8019dfa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019f40:	4684      	mov	ip, r0
 8019f42:	4680      	mov	r8, r0
 8019f44:	e767      	b.n	8019e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019f46:	4684      	mov	ip, r0
 8019f48:	e765      	b.n	8019e16 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019f4a:	4605      	mov	r5, r0
 8019f4c:	e776      	b.n	8019e3c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019f4e:	4603      	mov	r3, r0
 8019f50:	4605      	mov	r5, r0
 8019f52:	e782      	b.n	8019e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019f54:	4603      	mov	r3, r0
 8019f56:	e780      	b.n	8019e5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019f58 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019f58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019f5c:	b099      	sub	sp, #100	; 0x64
 8019f5e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019f62:	9215      	str	r2, [sp, #84]	; 0x54
 8019f64:	9309      	str	r3, [sp, #36]	; 0x24
 8019f66:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019f68:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019f6c:	930d      	str	r3, [sp, #52]	; 0x34
 8019f6e:	910c      	str	r1, [sp, #48]	; 0x30
 8019f70:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019f74:	9016      	str	r0, [sp, #88]	; 0x58
 8019f76:	6850      	ldr	r0, [r2, #4]
 8019f78:	6812      	ldr	r2, [r2, #0]
 8019f7a:	fb00 1303 	mla	r3, r0, r3, r1
 8019f7e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019f82:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019f84:	681b      	ldr	r3, [r3, #0]
 8019f86:	930b      	str	r3, [sp, #44]	; 0x2c
 8019f88:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019f8a:	685e      	ldr	r6, [r3, #4]
 8019f8c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019f8e:	43db      	mvns	r3, r3
 8019f90:	b2db      	uxtb	r3, r3
 8019f92:	3604      	adds	r6, #4
 8019f94:	930a      	str	r3, [sp, #40]	; 0x28
 8019f96:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019f98:	2b00      	cmp	r3, #0
 8019f9a:	dc03      	bgt.n	8019fa4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019f9c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8019f9e:	2b00      	cmp	r3, #0
 8019fa0:	f340 8225 	ble.w	801a3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019fa4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019fa6:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019faa:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019fae:	1e48      	subs	r0, r1, #1
 8019fb0:	1e57      	subs	r7, r2, #1
 8019fb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019fb4:	2b00      	cmp	r3, #0
 8019fb6:	f340 80e3 	ble.w	801a180 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019fba:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019fbe:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019fc2:	d406      	bmi.n	8019fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fc4:	4584      	cmp	ip, r0
 8019fc6:	da04      	bge.n	8019fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fc8:	2b00      	cmp	r3, #0
 8019fca:	db02      	blt.n	8019fd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019fcc:	42bb      	cmp	r3, r7
 8019fce:	f2c0 80d8 	blt.w	801a182 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019fd2:	f11c 0c01 	adds.w	ip, ip, #1
 8019fd6:	f100 80c9 	bmi.w	801a16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019fda:	4561      	cmp	r1, ip
 8019fdc:	f2c0 80c6 	blt.w	801a16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019fe0:	3301      	adds	r3, #1
 8019fe2:	f100 80c3 	bmi.w	801a16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019fe6:	429a      	cmp	r2, r3
 8019fe8:	f2c0 80c0 	blt.w	801a16c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019fec:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019ff0:	4647      	mov	r7, r8
 8019ff2:	f1bb 0f00 	cmp.w	fp, #0
 8019ff6:	f340 80e3 	ble.w	801a1c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019ffa:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019ffc:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019ffe:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a002:	689b      	ldr	r3, [r3, #8]
 801a004:	ea5f 422a 	movs.w	r2, sl, asr #16
 801a008:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801a00c:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801a010:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801a014:	f100 8121 	bmi.w	801a25a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a018:	f103 39ff 	add.w	r9, r3, #4294967295
 801a01c:	454a      	cmp	r2, r9
 801a01e:	f280 811c 	bge.w	801a25a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a022:	f1bc 0f00 	cmp.w	ip, #0
 801a026:	f2c0 8118 	blt.w	801a25a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a02a:	f10e 39ff 	add.w	r9, lr, #4294967295
 801a02e:	45cc      	cmp	ip, r9
 801a030:	f280 8113 	bge.w	801a25a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801a034:	b21b      	sxth	r3, r3
 801a036:	fb0c 2203 	mla	r2, ip, r3, r2
 801a03a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a03c:	eb04 0902 	add.w	r9, r4, r2
 801a040:	5ca2      	ldrb	r2, [r4, r2]
 801a042:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801a046:	2800      	cmp	r0, #0
 801a048:	f000 80fe 	beq.w	801a248 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801a04c:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a050:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801a054:	9211      	str	r2, [sp, #68]	; 0x44
 801a056:	b151      	cbz	r1, 801a06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a058:	eb09 0203 	add.w	r2, r9, r3
 801a05c:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a060:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a064:	930f      	str	r3, [sp, #60]	; 0x3c
 801a066:	7853      	ldrb	r3, [r2, #1]
 801a068:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a06c:	9312      	str	r3, [sp, #72]	; 0x48
 801a06e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a070:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801a072:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a076:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a07a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a07e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a082:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a084:	041b      	lsls	r3, r3, #16
 801a086:	fb10 f201 	smulbb	r2, r0, r1
 801a08a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801a08e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a092:	10d2      	asrs	r2, r2, #3
 801a094:	4323      	orrs	r3, r4
 801a096:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801a09a:	4353      	muls	r3, r2
 801a09c:	fb09 330c 	mla	r3, r9, ip, r3
 801a0a0:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a0a4:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a0a8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a0ac:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a0b0:	f1c1 0c10 	rsb	ip, r1, #16
 801a0b4:	ebac 0c00 	sub.w	ip, ip, r0
 801a0b8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a0bc:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a0c0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a0c2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a0c4:	0418      	lsls	r0, r3, #16
 801a0c6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a0ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a0ce:	4318      	orrs	r0, r3
 801a0d0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a0d4:	fb02 c200 	mla	r2, r2, r0, ip
 801a0d8:	0d53      	lsrs	r3, r2, #21
 801a0da:	0952      	lsrs	r2, r2, #5
 801a0dc:	8838      	ldrh	r0, [r7, #0]
 801a0de:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a0e2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a0e6:	431a      	orrs	r2, r3
 801a0e8:	b292      	uxth	r2, r2
 801a0ea:	1201      	asrs	r1, r0, #8
 801a0ec:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801a0f0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801a0f4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a0f8:	fb11 f104 	smulbb	r1, r1, r4
 801a0fc:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801a100:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801a104:	00c0      	lsls	r0, r0, #3
 801a106:	fb0c 1c03 	mla	ip, ip, r3, r1
 801a10a:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801a10e:	10d1      	asrs	r1, r2, #3
 801a110:	b2c0      	uxtb	r0, r0
 801a112:	00d2      	lsls	r2, r2, #3
 801a114:	b2d2      	uxtb	r2, r2
 801a116:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a11a:	fb1e fe04 	smulbb	lr, lr, r4
 801a11e:	fb10 f004 	smulbb	r0, r0, r4
 801a122:	fa1f fc8c 	uxth.w	ip, ip
 801a126:	fb01 e103 	mla	r1, r1, r3, lr
 801a12a:	fb02 0303 	mla	r3, r2, r3, r0
 801a12e:	b29a      	uxth	r2, r3
 801a130:	f10c 0301 	add.w	r3, ip, #1
 801a134:	b289      	uxth	r1, r1
 801a136:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a13a:	1c53      	adds	r3, r2, #1
 801a13c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801a140:	1c4a      	adds	r2, r1, #1
 801a142:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801a146:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801a14a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801a14e:	0949      	lsrs	r1, r1, #5
 801a150:	ea43 030c 	orr.w	r3, r3, ip
 801a154:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a158:	430b      	orrs	r3, r1
 801a15a:	803b      	strh	r3, [r7, #0]
 801a15c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a15e:	449a      	add	sl, r3
 801a160:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a162:	3702      	adds	r7, #2
 801a164:	441d      	add	r5, r3
 801a166:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a16a:	e742      	b.n	8019ff2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a16c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a16e:	449a      	add	sl, r3
 801a170:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a172:	441d      	add	r5, r3
 801a174:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a176:	3b01      	subs	r3, #1
 801a178:	9309      	str	r3, [sp, #36]	; 0x24
 801a17a:	f108 0802 	add.w	r8, r8, #2
 801a17e:	e718      	b.n	8019fb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801a180:	d023      	beq.n	801a1ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801a182:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a184:	9825      	ldr	r0, [sp, #148]	; 0x94
 801a186:	3b01      	subs	r3, #1
 801a188:	fb00 a003 	mla	r0, r0, r3, sl
 801a18c:	1400      	asrs	r0, r0, #16
 801a18e:	f53f af2d 	bmi.w	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a192:	3901      	subs	r1, #1
 801a194:	4288      	cmp	r0, r1
 801a196:	f6bf af29 	bge.w	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a19a:	9926      	ldr	r1, [sp, #152]	; 0x98
 801a19c:	fb01 5303 	mla	r3, r1, r3, r5
 801a1a0:	141b      	asrs	r3, r3, #16
 801a1a2:	f53f af23 	bmi.w	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a1a6:	3a01      	subs	r2, #1
 801a1a8:	4293      	cmp	r3, r2
 801a1aa:	f6bf af1f 	bge.w	8019fec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801a1ae:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801a1b2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 801a1b6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 801a1ba:	f1be 0f00 	cmp.w	lr, #0
 801a1be:	dc6c      	bgt.n	801a29a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801a1c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a1c2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a1c6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a1ca:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a1cc:	2b00      	cmp	r3, #0
 801a1ce:	f340 810e 	ble.w	801a3ee <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801a1d2:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1d6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a1da:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a1de:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a1e0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1ec:	eef0 6a62 	vmov.f32	s13, s5
 801a1f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a1f4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a1f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a1fc:	ee16 aa90 	vmov	sl, s13
 801a200:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a204:	eef0 6a43 	vmov.f32	s13, s6
 801a208:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a20c:	ee12 2a90 	vmov	r2, s5
 801a210:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a214:	fb92 f3f3 	sdiv	r3, r2, r3
 801a218:	ee13 2a10 	vmov	r2, s6
 801a21c:	9325      	str	r3, [sp, #148]	; 0x94
 801a21e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a220:	fb92 f3f3 	sdiv	r3, r2, r3
 801a224:	9326      	str	r3, [sp, #152]	; 0x98
 801a226:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a228:	9a15      	ldr	r2, [sp, #84]	; 0x54
 801a22a:	3b01      	subs	r3, #1
 801a22c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a230:	930c      	str	r3, [sp, #48]	; 0x30
 801a232:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801a234:	bf08      	it	eq
 801a236:	4613      	moveq	r3, r2
 801a238:	ee16 5a90 	vmov	r5, s13
 801a23c:	9309      	str	r3, [sp, #36]	; 0x24
 801a23e:	eeb0 3a67 	vmov.f32	s6, s15
 801a242:	eef0 2a47 	vmov.f32	s5, s14
 801a246:	e6a6      	b.n	8019f96 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801a248:	2900      	cmp	r1, #0
 801a24a:	f43f af10 	beq.w	801a06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a24e:	f819 3003 	ldrb.w	r3, [r9, r3]
 801a252:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a256:	930f      	str	r3, [sp, #60]	; 0x3c
 801a258:	e709      	b.n	801a06e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a25a:	f112 0901 	adds.w	r9, r2, #1
 801a25e:	f53f af7d 	bmi.w	801a15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a262:	454b      	cmp	r3, r9
 801a264:	f6ff af7a 	blt.w	801a15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a268:	f11c 0901 	adds.w	r9, ip, #1
 801a26c:	f53f af76 	bmi.w	801a15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a270:	45ce      	cmp	lr, r9
 801a272:	f6ff af73 	blt.w	801a15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a276:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801a278:	9202      	str	r2, [sp, #8]
 801a27a:	b21b      	sxth	r3, r3
 801a27c:	fa0f f28e 	sxth.w	r2, lr
 801a280:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801a284:	e9cd c003 	strd	ip, r0, [sp, #12]
 801a288:	9201      	str	r2, [sp, #4]
 801a28a:	9300      	str	r3, [sp, #0]
 801a28c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a28e:	9816      	ldr	r0, [sp, #88]	; 0x58
 801a290:	4633      	mov	r3, r6
 801a292:	4639      	mov	r1, r7
 801a294:	f7ff fd8e 	bl	8019db4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801a298:	e760      	b.n	801a15c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801a29a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801a29c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801a29e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a2a2:	ea4f 422a 	mov.w	r2, sl, asr #16
 801a2a6:	1429      	asrs	r1, r5, #16
 801a2a8:	fb03 2101 	mla	r1, r3, r1, r2
 801a2ac:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801a2ae:	440a      	add	r2, r1
 801a2b0:	5c61      	ldrb	r1, [r4, r1]
 801a2b2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801a2b6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801a2ba:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801a2be:	f1bc 0f00 	cmp.w	ip, #0
 801a2c2:	f000 808c 	beq.w	801a3de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801a2c6:	7857      	ldrb	r7, [r2, #1]
 801a2c8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801a2cc:	9413      	str	r4, [sp, #76]	; 0x4c
 801a2ce:	b140      	cbz	r0, 801a2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a2d0:	18d7      	adds	r7, r2, r3
 801a2d2:	5cd3      	ldrb	r3, [r2, r3]
 801a2d4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a2d8:	9310      	str	r3, [sp, #64]	; 0x40
 801a2da:	787b      	ldrb	r3, [r7, #1]
 801a2dc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a2e0:	9314      	str	r3, [sp, #80]	; 0x50
 801a2e2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801a2e4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801a2e6:	fb1c f200 	smulbb	r2, ip, r0
 801a2ea:	041f      	lsls	r7, r3, #16
 801a2ec:	10d2      	asrs	r2, r2, #3
 801a2ee:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a2f2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 801a2f6:	431f      	orrs	r7, r3
 801a2f8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801a2fc:	9317      	str	r3, [sp, #92]	; 0x5c
 801a2fe:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801a300:	041b      	lsls	r3, r3, #16
 801a302:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 801a306:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a30a:	ea43 030b 	orr.w	r3, r3, fp
 801a30e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801a310:	4353      	muls	r3, r2
 801a312:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a316:	fb04 3707 	mla	r7, r4, r7, r3
 801a31a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a31e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a322:	ea43 0b01 	orr.w	fp, r3, r1
 801a326:	f1c0 0110 	rsb	r1, r0, #16
 801a32a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a32c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801a32e:	eba1 0c0c 	sub.w	ip, r1, ip
 801a332:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a336:	fb0c 770b 	mla	r7, ip, fp, r7
 801a33a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a33e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 801a342:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a346:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a34a:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a34e:	fb02 770c 	mla	r7, r2, ip, r7
 801a352:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801a354:	0d79      	lsrs	r1, r7, #21
 801a356:	097f      	lsrs	r7, r7, #5
 801a358:	8812      	ldrh	r2, [r2, #0]
 801a35a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a35e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a362:	430f      	orrs	r7, r1
 801a364:	b2bb      	uxth	r3, r7
 801a366:	1211      	asrs	r1, r2, #8
 801a368:	1218      	asrs	r0, r3, #8
 801a36a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801a36e:	fb11 f104 	smulbb	r1, r1, r4
 801a372:	10d7      	asrs	r7, r2, #3
 801a374:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801a378:	00d2      	lsls	r2, r2, #3
 801a37a:	fb00 1009 	mla	r0, r0, r9, r1
 801a37e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a382:	10d9      	asrs	r1, r3, #3
 801a384:	b2d2      	uxtb	r2, r2
 801a386:	00db      	lsls	r3, r3, #3
 801a388:	fb17 f704 	smulbb	r7, r7, r4
 801a38c:	fb12 f204 	smulbb	r2, r2, r4
 801a390:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801a394:	b2db      	uxtb	r3, r3
 801a396:	b280      	uxth	r0, r0
 801a398:	fb01 7109 	mla	r1, r1, r9, r7
 801a39c:	fb03 2309 	mla	r3, r3, r9, r2
 801a3a0:	b29b      	uxth	r3, r3
 801a3a2:	b289      	uxth	r1, r1
 801a3a4:	1c42      	adds	r2, r0, #1
 801a3a6:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801a3aa:	1c4f      	adds	r7, r1, #1
 801a3ac:	1c5a      	adds	r2, r3, #1
 801a3ae:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801a3b2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801a3b6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801a3ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801a3be:	0949      	lsrs	r1, r1, #5
 801a3c0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a3c2:	4310      	orrs	r0, r2
 801a3c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801a3c8:	4308      	orrs	r0, r1
 801a3ca:	f823 0b02 	strh.w	r0, [r3], #2
 801a3ce:	930e      	str	r3, [sp, #56]	; 0x38
 801a3d0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801a3d2:	449a      	add	sl, r3
 801a3d4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a3d6:	f10e 3eff 	add.w	lr, lr, #4294967295
 801a3da:	441d      	add	r5, r3
 801a3dc:	e6ed      	b.n	801a1ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801a3de:	2800      	cmp	r0, #0
 801a3e0:	f43f af7f 	beq.w	801a2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a3e4:	5cd3      	ldrb	r3, [r2, r3]
 801a3e6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801a3ea:	9310      	str	r3, [sp, #64]	; 0x40
 801a3ec:	e779      	b.n	801a2e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801a3ee:	b019      	add	sp, #100	; 0x64
 801a3f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a3f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801a3f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a3f8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 801a3fc:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801a400:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 801a404:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 801a408:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801a40c:	8808      	ldrh	r0, [r1, #0]
 801a40e:	fb08 470e 	mla	r7, r8, lr, r4
 801a412:	f1b8 0f00 	cmp.w	r8, #0
 801a416:	eb02 0907 	add.w	r9, r2, r7
 801a41a:	db67      	blt.n	801a4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a41c:	45c2      	cmp	sl, r8
 801a41e:	dd65      	ble.n	801a4ec <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801a420:	2c00      	cmp	r4, #0
 801a422:	db61      	blt.n	801a4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a424:	45a6      	cmp	lr, r4
 801a426:	dd5f      	ble.n	801a4e8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801a428:	5dd2      	ldrb	r2, [r2, r7]
 801a42a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801a42e:	1c62      	adds	r2, r4, #1
 801a430:	d45f      	bmi.n	801a4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a432:	4596      	cmp	lr, r2
 801a434:	dd5d      	ble.n	801a4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a436:	2d00      	cmp	r5, #0
 801a438:	d05b      	beq.n	801a4f2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801a43a:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a43e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801a442:	f118 0801 	adds.w	r8, r8, #1
 801a446:	d458      	bmi.n	801a4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a448:	45c2      	cmp	sl, r8
 801a44a:	dd56      	ble.n	801a4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a44c:	2e00      	cmp	r6, #0
 801a44e:	d054      	beq.n	801a4fa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801a450:	2c00      	cmp	r4, #0
 801a452:	db50      	blt.n	801a4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a454:	45a6      	cmp	lr, r4
 801a456:	dd4e      	ble.n	801a4f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801a458:	f819 200e 	ldrb.w	r2, [r9, lr]
 801a45c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801a460:	3401      	adds	r4, #1
 801a462:	d407      	bmi.n	801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a464:	45a6      	cmp	lr, r4
 801a466:	dd05      	ble.n	801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a468:	b125      	cbz	r5, 801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801a46a:	44ce      	add	lr, r9
 801a46c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801a470:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801a474:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801a478:	fb15 f406 	smulbb	r4, r5, r6
 801a47c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a480:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801a484:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a488:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801a48c:	ea43 0c0c 	orr.w	ip, r3, ip
 801a490:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801a494:	f1c6 0310 	rsb	r3, r6, #16
 801a498:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801a49c:	1b5b      	subs	r3, r3, r5
 801a49e:	ea4e 0707 	orr.w	r7, lr, r7
 801a4a2:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801a4a6:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801a4aa:	437d      	muls	r5, r7
 801a4ac:	fb03 5c0c 	mla	ip, r3, ip, r5
 801a4b0:	0403      	lsls	r3, r0, #16
 801a4b2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a4b6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a4ba:	4318      	orrs	r0, r3
 801a4bc:	0413      	lsls	r3, r2, #16
 801a4be:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a4c2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a4c6:	4313      	orrs	r3, r2
 801a4c8:	fb04 c000 	mla	r0, r4, r0, ip
 801a4cc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801a4d0:	fb06 0003 	mla	r0, r6, r3, r0
 801a4d4:	0d43      	lsrs	r3, r0, #21
 801a4d6:	0940      	lsrs	r0, r0, #5
 801a4d8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a4dc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801a4e0:	4318      	orrs	r0, r3
 801a4e2:	8008      	strh	r0, [r1, #0]
 801a4e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a4e8:	4684      	mov	ip, r0
 801a4ea:	e7a0      	b.n	801a42e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801a4ec:	4607      	mov	r7, r0
 801a4ee:	4684      	mov	ip, r0
 801a4f0:	e7a7      	b.n	801a442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a4f2:	4607      	mov	r7, r0
 801a4f4:	e7a5      	b.n	801a442 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801a4f6:	4602      	mov	r2, r0
 801a4f8:	e7b2      	b.n	801a460 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801a4fa:	4602      	mov	r2, r0
 801a4fc:	e7ba      	b.n	801a474 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801a4fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a4fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a502:	b093      	sub	sp, #76	; 0x4c
 801a504:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801a508:	920f      	str	r2, [sp, #60]	; 0x3c
 801a50a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a50c:	9108      	str	r1, [sp, #32]
 801a50e:	9306      	str	r3, [sp, #24]
 801a510:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801a514:	9010      	str	r0, [sp, #64]	; 0x40
 801a516:	6850      	ldr	r0, [r2, #4]
 801a518:	6812      	ldr	r2, [r2, #0]
 801a51a:	fb00 1303 	mla	r3, r0, r3, r1
 801a51e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a522:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a524:	681b      	ldr	r3, [r3, #0]
 801a526:	9307      	str	r3, [sp, #28]
 801a528:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a52a:	685f      	ldr	r7, [r3, #4]
 801a52c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a530:	3704      	adds	r7, #4
 801a532:	9b08      	ldr	r3, [sp, #32]
 801a534:	2b00      	cmp	r3, #0
 801a536:	dc03      	bgt.n	801a540 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a538:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a53a:	2b00      	cmp	r3, #0
 801a53c:	f340 81b2 	ble.w	801a8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a540:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a542:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a546:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a54a:	1e48      	subs	r0, r1, #1
 801a54c:	f102 3cff 	add.w	ip, r2, #4294967295
 801a550:	9b06      	ldr	r3, [sp, #24]
 801a552:	2b00      	cmp	r3, #0
 801a554:	f340 80a9 	ble.w	801a6aa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a558:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a55c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a560:	d406      	bmi.n	801a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a562:	4586      	cmp	lr, r0
 801a564:	da04      	bge.n	801a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a566:	2b00      	cmp	r3, #0
 801a568:	db02      	blt.n	801a570 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a56a:	4563      	cmp	r3, ip
 801a56c:	f2c0 809e 	blt.w	801a6ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a570:	f11e 0e01 	adds.w	lr, lr, #1
 801a574:	f100 808f 	bmi.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a578:	4571      	cmp	r1, lr
 801a57a:	f2c0 808c 	blt.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a57e:	3301      	adds	r3, #1
 801a580:	f100 8089 	bmi.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a584:	429a      	cmp	r2, r3
 801a586:	f2c0 8086 	blt.w	801a696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a58a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a58e:	46c8      	mov	r8, r9
 801a590:	f1bb 0f00 	cmp.w	fp, #0
 801a594:	f340 80a6 	ble.w	801a6e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a598:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801a59a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a59c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a5a0:	689b      	ldr	r3, [r3, #8]
 801a5a2:	1422      	asrs	r2, r4, #16
 801a5a4:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a5a8:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a5ac:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a5b0:	f100 80e3 	bmi.w	801a77a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a5b4:	f103 3aff 	add.w	sl, r3, #4294967295
 801a5b8:	4552      	cmp	r2, sl
 801a5ba:	f280 80de 	bge.w	801a77a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a5be:	f1bc 0f00 	cmp.w	ip, #0
 801a5c2:	f2c0 80da 	blt.w	801a77a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a5c6:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a5ca:	45d4      	cmp	ip, sl
 801a5cc:	f280 80d5 	bge.w	801a77a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a5d0:	b21b      	sxth	r3, r3
 801a5d2:	fb0c 2203 	mla	r2, ip, r3, r2
 801a5d6:	9d07      	ldr	r5, [sp, #28]
 801a5d8:	eb05 0a02 	add.w	sl, r5, r2
 801a5dc:	5caa      	ldrb	r2, [r5, r2]
 801a5de:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a5e2:	2800      	cmp	r0, #0
 801a5e4:	f000 80c0 	beq.w	801a768 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a5e8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a5ec:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a5f0:	920b      	str	r2, [sp, #44]	; 0x2c
 801a5f2:	b151      	cbz	r1, 801a60a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a5f4:	eb0a 0203 	add.w	r2, sl, r3
 801a5f8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a5fc:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a600:	9309      	str	r3, [sp, #36]	; 0x24
 801a602:	7853      	ldrb	r3, [r2, #1]
 801a604:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a608:	930c      	str	r3, [sp, #48]	; 0x30
 801a60a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a60c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a60e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a612:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a616:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a61a:	ea4c 0c03 	orr.w	ip, ip, r3
 801a61e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a620:	041b      	lsls	r3, r3, #16
 801a622:	fb10 f201 	smulbb	r2, r0, r1
 801a626:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a62a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a62e:	10d2      	asrs	r2, r2, #3
 801a630:	432b      	orrs	r3, r5
 801a632:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a636:	4353      	muls	r3, r2
 801a638:	fb0a 330c 	mla	r3, sl, ip, r3
 801a63c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a640:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a644:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a648:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a64c:	f1c1 0c10 	rsb	ip, r1, #16
 801a650:	ebac 0c00 	sub.w	ip, ip, r0
 801a654:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a658:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a65c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a65e:	0418      	lsls	r0, r3, #16
 801a660:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a664:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a668:	4318      	orrs	r0, r3
 801a66a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a66e:	fb02 c200 	mla	r2, r2, r0, ip
 801a672:	0d53      	lsrs	r3, r2, #21
 801a674:	0952      	lsrs	r2, r2, #5
 801a676:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a67a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a67e:	431a      	orrs	r2, r3
 801a680:	f8a8 2000 	strh.w	r2, [r8]
 801a684:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a686:	441c      	add	r4, r3
 801a688:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a68a:	f108 0802 	add.w	r8, r8, #2
 801a68e:	441e      	add	r6, r3
 801a690:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a694:	e77c      	b.n	801a590 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a696:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a698:	441c      	add	r4, r3
 801a69a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a69c:	441e      	add	r6, r3
 801a69e:	9b06      	ldr	r3, [sp, #24]
 801a6a0:	3b01      	subs	r3, #1
 801a6a2:	9306      	str	r3, [sp, #24]
 801a6a4:	f109 0902 	add.w	r9, r9, #2
 801a6a8:	e752      	b.n	801a550 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a6aa:	d020      	beq.n	801a6ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a6ac:	9b06      	ldr	r3, [sp, #24]
 801a6ae:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a6b0:	3b01      	subs	r3, #1
 801a6b2:	fb00 4003 	mla	r0, r0, r3, r4
 801a6b6:	1400      	asrs	r0, r0, #16
 801a6b8:	f53f af67 	bmi.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a6bc:	3901      	subs	r1, #1
 801a6be:	4288      	cmp	r0, r1
 801a6c0:	f6bf af63 	bge.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a6c4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a6c6:	fb01 6303 	mla	r3, r1, r3, r6
 801a6ca:	141b      	asrs	r3, r3, #16
 801a6cc:	f53f af5d 	bmi.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a6d0:	3a01      	subs	r2, #1
 801a6d2:	4293      	cmp	r3, r2
 801a6d4:	f6bf af59 	bge.w	801a58a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a6d8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a6dc:	46ca      	mov	sl, r9
 801a6de:	f1b8 0f00 	cmp.w	r8, #0
 801a6e2:	dc67      	bgt.n	801a7b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a6e4:	9b06      	ldr	r3, [sp, #24]
 801a6e6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a6ea:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a6ee:	9b08      	ldr	r3, [sp, #32]
 801a6f0:	2b00      	cmp	r3, #0
 801a6f2:	f340 80d7 	ble.w	801a8a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a6f6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a6fa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a6fe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a702:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a704:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a708:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a70c:	eeb0 6a62 	vmov.f32	s12, s5
 801a710:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a714:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a718:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a71c:	ee16 4a10 	vmov	r4, s12
 801a720:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a724:	eeb0 6a43 	vmov.f32	s12, s6
 801a728:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a72c:	ee12 2a90 	vmov	r2, s5
 801a730:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a734:	fb92 f3f3 	sdiv	r3, r2, r3
 801a738:	ee13 2a10 	vmov	r2, s6
 801a73c:	931f      	str	r3, [sp, #124]	; 0x7c
 801a73e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a740:	fb92 f3f3 	sdiv	r3, r2, r3
 801a744:	9320      	str	r3, [sp, #128]	; 0x80
 801a746:	9b08      	ldr	r3, [sp, #32]
 801a748:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a74a:	3b01      	subs	r3, #1
 801a74c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a750:	9308      	str	r3, [sp, #32]
 801a752:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a754:	bf08      	it	eq
 801a756:	4613      	moveq	r3, r2
 801a758:	ee16 6a10 	vmov	r6, s12
 801a75c:	9306      	str	r3, [sp, #24]
 801a75e:	eeb0 3a67 	vmov.f32	s6, s15
 801a762:	eef0 2a47 	vmov.f32	s5, s14
 801a766:	e6e4      	b.n	801a532 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a768:	2900      	cmp	r1, #0
 801a76a:	f43f af4e 	beq.w	801a60a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a76e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a772:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a776:	9309      	str	r3, [sp, #36]	; 0x24
 801a778:	e747      	b.n	801a60a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a77a:	f112 0a01 	adds.w	sl, r2, #1
 801a77e:	d481      	bmi.n	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a780:	4553      	cmp	r3, sl
 801a782:	f6ff af7f 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a786:	f11c 0a01 	adds.w	sl, ip, #1
 801a78a:	f53f af7b 	bmi.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a78e:	45d6      	cmp	lr, sl
 801a790:	f6ff af78 	blt.w	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a794:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a798:	b21b      	sxth	r3, r3
 801a79a:	fa0f f28e 	sxth.w	r2, lr
 801a79e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a7a2:	9201      	str	r2, [sp, #4]
 801a7a4:	9300      	str	r3, [sp, #0]
 801a7a6:	9a07      	ldr	r2, [sp, #28]
 801a7a8:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a7aa:	463b      	mov	r3, r7
 801a7ac:	4641      	mov	r1, r8
 801a7ae:	f7ff fe21 	bl	801a3f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a7b2:	e767      	b.n	801a684 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a7b4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a7b6:	9d07      	ldr	r5, [sp, #28]
 801a7b8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a7bc:	1422      	asrs	r2, r4, #16
 801a7be:	1431      	asrs	r1, r6, #16
 801a7c0:	fb03 2101 	mla	r1, r3, r1, r2
 801a7c4:	9a07      	ldr	r2, [sp, #28]
 801a7c6:	440a      	add	r2, r1
 801a7c8:	5c69      	ldrb	r1, [r5, r1]
 801a7ca:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a7ce:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a7d2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a7d6:	f1be 0f00 	cmp.w	lr, #0
 801a7da:	d05c      	beq.n	801a896 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a7dc:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a7e0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a7e4:	950d      	str	r5, [sp, #52]	; 0x34
 801a7e6:	b150      	cbz	r0, 801a7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a7e8:	eb02 0c03 	add.w	ip, r2, r3
 801a7ec:	5cd3      	ldrb	r3, [r2, r3]
 801a7ee:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a7f2:	930a      	str	r3, [sp, #40]	; 0x28
 801a7f4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a7f8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a7fc:	930e      	str	r3, [sp, #56]	; 0x38
 801a7fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a800:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a802:	fb1e f200 	smulbb	r2, lr, r0
 801a806:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a80a:	10d2      	asrs	r2, r2, #3
 801a80c:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a810:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a814:	ea4c 0c03 	orr.w	ip, ip, r3
 801a818:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a81c:	9311      	str	r3, [sp, #68]	; 0x44
 801a81e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a820:	041b      	lsls	r3, r3, #16
 801a822:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801a826:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a82a:	ea43 030b 	orr.w	r3, r3, fp
 801a82e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a830:	4353      	muls	r3, r2
 801a832:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a836:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a83a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a83e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a842:	ea43 0b01 	orr.w	fp, r3, r1
 801a846:	f1c0 0110 	rsb	r1, r0, #16
 801a84a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a84c:	eba1 0e0e 	sub.w	lr, r1, lr
 801a850:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a854:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a858:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a85c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801a860:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a864:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a868:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a86c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a870:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a874:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a878:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a87c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a880:	ea43 0c0c 	orr.w	ip, r3, ip
 801a884:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a886:	f82a cb02 	strh.w	ip, [sl], #2
 801a88a:	441c      	add	r4, r3
 801a88c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a88e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a892:	441e      	add	r6, r3
 801a894:	e723      	b.n	801a6de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a896:	2800      	cmp	r0, #0
 801a898:	d0b1      	beq.n	801a7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a89a:	5cd3      	ldrb	r3, [r2, r3]
 801a89c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a8a0:	930a      	str	r3, [sp, #40]	; 0x28
 801a8a2:	e7ac      	b.n	801a7fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a8a4:	b013      	add	sp, #76	; 0x4c
 801a8a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a8aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a8aa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a8ae:	880d      	ldrh	r5, [r1, #0]
 801a8b0:	b087      	sub	sp, #28
 801a8b2:	10ef      	asrs	r7, r5, #3
 801a8b4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a8b8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a8bc:	00ed      	lsls	r5, r5, #3
 801a8be:	9701      	str	r7, [sp, #4]
 801a8c0:	b2ed      	uxtb	r5, r5
 801a8c2:	9502      	str	r5, [sp, #8]
 801a8c4:	9d01      	ldr	r5, [sp, #4]
 801a8c6:	9103      	str	r1, [sp, #12]
 801a8c8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801a8cc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801a8d0:	9902      	ldr	r1, [sp, #8]
 801a8d2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a8d6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801a8da:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801a8de:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801a8e2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801a8e6:	022d      	lsls	r5, r5, #8
 801a8e8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a8ec:	fb06 0709 	mla	r7, r6, r9, r0
 801a8f0:	430d      	orrs	r5, r1
 801a8f2:	2e00      	cmp	r6, #0
 801a8f4:	eb02 0c07 	add.w	ip, r2, r7
 801a8f8:	9505      	str	r5, [sp, #20]
 801a8fa:	f2c0 80b6 	blt.w	801aa6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a8fe:	45b3      	cmp	fp, r6
 801a900:	f340 80b3 	ble.w	801aa6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a904:	2800      	cmp	r0, #0
 801a906:	f2c0 80ae 	blt.w	801aa66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a90a:	4581      	cmp	r9, r0
 801a90c:	f340 80ab 	ble.w	801aa66 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a910:	5dd7      	ldrb	r7, [r2, r7]
 801a912:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a916:	441f      	add	r7, r3
 801a918:	1c42      	adds	r2, r0, #1
 801a91a:	f100 80a9 	bmi.w	801aa70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a91e:	4591      	cmp	r9, r2
 801a920:	f340 80a6 	ble.w	801aa70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a924:	2c00      	cmp	r4, #0
 801a926:	f000 80a3 	beq.w	801aa70 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a92a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a92e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a932:	441d      	add	r5, r3
 801a934:	3601      	adds	r6, #1
 801a936:	f100 809f 	bmi.w	801aa78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a93a:	45b3      	cmp	fp, r6
 801a93c:	f340 809c 	ble.w	801aa78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a940:	f1be 0f00 	cmp.w	lr, #0
 801a944:	f000 8098 	beq.w	801aa78 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a948:	2800      	cmp	r0, #0
 801a94a:	f2c0 8093 	blt.w	801aa74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a94e:	4581      	cmp	r9, r0
 801a950:	f340 8090 	ble.w	801aa74 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a954:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a958:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a95c:	441e      	add	r6, r3
 801a95e:	3001      	adds	r0, #1
 801a960:	f100 808d 	bmi.w	801aa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a964:	4581      	cmp	r9, r0
 801a966:	f340 808a 	ble.w	801aa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a96a:	2c00      	cmp	r4, #0
 801a96c:	f000 8087 	beq.w	801aa7e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a970:	44e1      	add	r9, ip
 801a972:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a976:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a97a:	4413      	add	r3, r2
 801a97c:	b2a4      	uxth	r4, r4
 801a97e:	fa1f fe8e 	uxth.w	lr, lr
 801a982:	fb04 fb0e 	mul.w	fp, r4, lr
 801a986:	0124      	lsls	r4, r4, #4
 801a988:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a98c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801a990:	eba4 040b 	sub.w	r4, r4, fp
 801a994:	fa1f f08e 	uxth.w	r0, lr
 801a998:	b2a2      	uxth	r2, r4
 801a99a:	78ac      	ldrb	r4, [r5, #2]
 801a99c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a9a0:	9901      	ldr	r1, [sp, #4]
 801a9a2:	eba9 0900 	sub.w	r9, r9, r0
 801a9a6:	fa1f f989 	uxth.w	r9, r9
 801a9aa:	4354      	muls	r4, r2
 801a9ac:	fb09 440c 	mla	r4, r9, ip, r4
 801a9b0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a9b4:	fb00 440c 	mla	r4, r0, ip, r4
 801a9b8:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a9bc:	fa1f fe88 	uxth.w	lr, r8
 801a9c0:	ea6f 0808 	mvn.w	r8, r8
 801a9c4:	fa5f f888 	uxtb.w	r8, r8
 801a9c8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a9cc:	fb1a fa08 	smulbb	sl, sl, r8
 801a9d0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a9d4:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a9d8:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a9dc:	787c      	ldrb	r4, [r7, #1]
 801a9de:	782d      	ldrb	r5, [r5, #0]
 801a9e0:	783f      	ldrb	r7, [r7, #0]
 801a9e2:	fb02 fa0a 	mul.w	sl, r2, sl
 801a9e6:	fb09 aa04 	mla	sl, r9, r4, sl
 801a9ea:	7874      	ldrb	r4, [r6, #1]
 801a9ec:	436a      	muls	r2, r5
 801a9ee:	7835      	ldrb	r5, [r6, #0]
 801a9f0:	fb00 aa04 	mla	sl, r0, r4, sl
 801a9f4:	fb09 2207 	mla	r2, r9, r7, r2
 801a9f8:	785c      	ldrb	r4, [r3, #1]
 801a9fa:	781b      	ldrb	r3, [r3, #0]
 801a9fc:	fb00 2005 	mla	r0, r0, r5, r2
 801aa00:	fb0b a404 	mla	r4, fp, r4, sl
 801aa04:	fb0b 0b03 	mla	fp, fp, r3, r0
 801aa08:	9b02      	ldr	r3, [sp, #8]
 801aa0a:	fb11 fa08 	smulbb	sl, r1, r8
 801aa0e:	fa1f fc8c 	uxth.w	ip, ip
 801aa12:	fb13 f808 	smulbb	r8, r3, r8
 801aa16:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801aa1a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801aa1e:	fb04 a40e 	mla	r4, r4, lr, sl
 801aa22:	f10c 0301 	add.w	r3, ip, #1
 801aa26:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801aa2a:	fa1f fe8e 	uxth.w	lr, lr
 801aa2e:	b2a4      	uxth	r4, r4
 801aa30:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801aa34:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801aa38:	f104 0a01 	add.w	sl, r4, #1
 801aa3c:	f10e 0c01 	add.w	ip, lr, #1
 801aa40:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801aa44:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801aa48:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801aa4c:	0964      	lsrs	r4, r4, #5
 801aa4e:	ea4c 0c03 	orr.w	ip, ip, r3
 801aa52:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801aa56:	9b03      	ldr	r3, [sp, #12]
 801aa58:	ea4c 0c04 	orr.w	ip, ip, r4
 801aa5c:	f8a3 c000 	strh.w	ip, [r3]
 801aa60:	b007      	add	sp, #28
 801aa62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aa66:	af05      	add	r7, sp, #20
 801aa68:	e756      	b.n	801a918 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801aa6a:	ad05      	add	r5, sp, #20
 801aa6c:	462f      	mov	r7, r5
 801aa6e:	e761      	b.n	801a934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801aa70:	ad05      	add	r5, sp, #20
 801aa72:	e75f      	b.n	801a934 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801aa74:	ae05      	add	r6, sp, #20
 801aa76:	e772      	b.n	801a95e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801aa78:	ab05      	add	r3, sp, #20
 801aa7a:	461e      	mov	r6, r3
 801aa7c:	e77e      	b.n	801a97c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801aa7e:	ab05      	add	r3, sp, #20
 801aa80:	e77c      	b.n	801a97c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801aa82 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801aa82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa86:	b095      	sub	sp, #84	; 0x54
 801aa88:	9212      	str	r2, [sp, #72]	; 0x48
 801aa8a:	9309      	str	r3, [sp, #36]	; 0x24
 801aa8c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801aa8e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801aa92:	930f      	str	r3, [sp, #60]	; 0x3c
 801aa94:	910e      	str	r1, [sp, #56]	; 0x38
 801aa96:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801aa9a:	9013      	str	r0, [sp, #76]	; 0x4c
 801aa9c:	6850      	ldr	r0, [r2, #4]
 801aa9e:	6812      	ldr	r2, [r2, #0]
 801aaa0:	fb00 1303 	mla	r3, r0, r3, r1
 801aaa4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801aaa8:	930a      	str	r3, [sp, #40]	; 0x28
 801aaaa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801aaac:	681b      	ldr	r3, [r3, #0]
 801aaae:	930d      	str	r3, [sp, #52]	; 0x34
 801aab0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801aab2:	685c      	ldr	r4, [r3, #4]
 801aab4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801aab6:	43db      	mvns	r3, r3
 801aab8:	b2db      	uxtb	r3, r3
 801aaba:	3404      	adds	r4, #4
 801aabc:	930b      	str	r3, [sp, #44]	; 0x2c
 801aabe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801aac0:	2b00      	cmp	r3, #0
 801aac2:	dc03      	bgt.n	801aacc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801aac4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801aac6:	2b00      	cmp	r3, #0
 801aac8:	f340 8255 	ble.w	801af76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801aacc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801aace:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801aad2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801aad6:	1e48      	subs	r0, r1, #1
 801aad8:	1e55      	subs	r5, r2, #1
 801aada:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801aadc:	2b00      	cmp	r3, #0
 801aade:	f340 80f9 	ble.w	801acd4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801aae2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801aae4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aae6:	1436      	asrs	r6, r6, #16
 801aae8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801aaec:	d406      	bmi.n	801aafc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aaee:	4286      	cmp	r6, r0
 801aaf0:	da04      	bge.n	801aafc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aaf2:	2b00      	cmp	r3, #0
 801aaf4:	db02      	blt.n	801aafc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801aaf6:	42ab      	cmp	r3, r5
 801aaf8:	f2c0 80ed 	blt.w	801acd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801aafc:	3601      	adds	r6, #1
 801aafe:	f100 80da 	bmi.w	801acb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ab02:	42b1      	cmp	r1, r6
 801ab04:	f2c0 80d7 	blt.w	801acb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ab08:	3301      	adds	r3, #1
 801ab0a:	f100 80d4 	bmi.w	801acb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ab0e:	429a      	cmp	r2, r3
 801ab10:	f2c0 80d1 	blt.w	801acb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ab14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ab16:	9311      	str	r3, [sp, #68]	; 0x44
 801ab18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ab1a:	930c      	str	r3, [sp, #48]	; 0x30
 801ab1c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ab1e:	2b00      	cmp	r3, #0
 801ab20:	f340 80fa 	ble.w	801ad18 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801ab24:	9826      	ldr	r0, [sp, #152]	; 0x98
 801ab26:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ab28:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ab2a:	68c6      	ldr	r6, [r0, #12]
 801ab2c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801ab2e:	141d      	asrs	r5, r3, #16
 801ab30:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ab34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ab36:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ab38:	1400      	asrs	r0, r0, #16
 801ab3a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ab3e:	6892      	ldr	r2, [r2, #8]
 801ab40:	f100 813e 	bmi.w	801adc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ab44:	1e57      	subs	r7, r2, #1
 801ab46:	42b8      	cmp	r0, r7
 801ab48:	f280 813a 	bge.w	801adc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ab4c:	2d00      	cmp	r5, #0
 801ab4e:	f2c0 8137 	blt.w	801adc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ab52:	1e77      	subs	r7, r6, #1
 801ab54:	42bd      	cmp	r5, r7
 801ab56:	f280 8133 	bge.w	801adc0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801ab5a:	b212      	sxth	r2, r2
 801ab5c:	fb05 0002 	mla	r0, r5, r2, r0
 801ab60:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ab62:	f815 a000 	ldrb.w	sl, [r5, r0]
 801ab66:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801ab6a:	182e      	adds	r6, r5, r0
 801ab6c:	eb04 050a 	add.w	r5, r4, sl
 801ab70:	2b00      	cmp	r3, #0
 801ab72:	f000 8117 	beq.w	801ada4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801ab76:	f896 c001 	ldrb.w	ip, [r6, #1]
 801ab7a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801ab7e:	44a4      	add	ip, r4
 801ab80:	2900      	cmp	r1, #0
 801ab82:	f000 8117 	beq.w	801adb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801ab86:	18b0      	adds	r0, r6, r2
 801ab88:	5cb2      	ldrb	r2, [r6, r2]
 801ab8a:	7840      	ldrb	r0, [r0, #1]
 801ab8c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab90:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ab94:	4422      	add	r2, r4
 801ab96:	4420      	add	r0, r4
 801ab98:	b29b      	uxth	r3, r3
 801ab9a:	b289      	uxth	r1, r1
 801ab9c:	fb03 f901 	mul.w	r9, r3, r1
 801aba0:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aba4:	011b      	lsls	r3, r3, #4
 801aba6:	b289      	uxth	r1, r1
 801aba8:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801abac:	f895 b002 	ldrb.w	fp, [r5, #2]
 801abb0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801abb2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801abb6:	f8b6 e000 	ldrh.w	lr, [r6]
 801abba:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801abbe:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801abc2:	eba3 0309 	sub.w	r3, r3, r9
 801abc6:	b29b      	uxth	r3, r3
 801abc8:	eba8 0801 	sub.w	r8, r8, r1
 801abcc:	fa1f f888 	uxth.w	r8, r8
 801abd0:	435f      	muls	r7, r3
 801abd2:	fb08 770b 	mla	r7, r8, fp, r7
 801abd6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801abda:	9310      	str	r3, [sp, #64]	; 0x40
 801abdc:	fb01 770b 	mla	r7, r1, fp, r7
 801abe0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801abe4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801abe6:	fb09 770b 	mla	r7, r9, fp, r7
 801abea:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801abee:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801abf2:	fb1b fb03 	smulbb	fp, fp, r3
 801abf6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801abfa:	fb07 b706 	mla	r7, r7, r6, fp
 801abfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac00:	f895 b001 	ldrb.w	fp, [r5, #1]
 801ac04:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801ac08:	f89c c000 	ldrb.w	ip, [ip]
 801ac0c:	435d      	muls	r5, r3
 801ac0e:	fb08 550b 	mla	r5, r8, fp, r5
 801ac12:	f892 b001 	ldrb.w	fp, [r2, #1]
 801ac16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac18:	fb01 550b 	mla	r5, r1, fp, r5
 801ac1c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801ac20:	fb09 550b 	mla	r5, r9, fp, r5
 801ac24:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801ac28:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801ac2c:	fb1b fb03 	smulbb	fp, fp, r3
 801ac30:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801ac32:	fb03 f30c 	mul.w	r3, r3, ip
 801ac36:	f892 c000 	ldrb.w	ip, [r2]
 801ac3a:	fb08 330a 	mla	r3, r8, sl, r3
 801ac3e:	fb01 330c 	mla	r3, r1, ip, r3
 801ac42:	f890 c000 	ldrb.w	ip, [r0]
 801ac46:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801ac4a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801ac4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac50:	fa5f fe8e 	uxtb.w	lr, lr
 801ac54:	b2bf      	uxth	r7, r7
 801ac56:	fb1e fe03 	smulbb	lr, lr, r3
 801ac5a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801ac5e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801ac62:	fb05 b506 	mla	r5, r5, r6, fp
 801ac66:	1c7b      	adds	r3, r7, #1
 801ac68:	fb0c e606 	mla	r6, ip, r6, lr
 801ac6c:	b2ad      	uxth	r5, r5
 801ac6e:	b2b6      	uxth	r6, r6
 801ac70:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801ac74:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801ac78:	f105 0b01 	add.w	fp, r5, #1
 801ac7c:	1c77      	adds	r7, r6, #1
 801ac7e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801ac82:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801ac86:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ac8a:	096d      	lsrs	r5, r5, #5
 801ac8c:	431f      	orrs	r7, r3
 801ac8e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ac92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac94:	433d      	orrs	r5, r7
 801ac96:	801d      	strh	r5, [r3, #0]
 801ac98:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ac9a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ac9c:	3302      	adds	r3, #2
 801ac9e:	930c      	str	r3, [sp, #48]	; 0x30
 801aca0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801aca2:	4413      	add	r3, r2
 801aca4:	931f      	str	r3, [sp, #124]	; 0x7c
 801aca6:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801aca8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801acaa:	4413      	add	r3, r2
 801acac:	9320      	str	r3, [sp, #128]	; 0x80
 801acae:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801acb0:	3b01      	subs	r3, #1
 801acb2:	9311      	str	r3, [sp, #68]	; 0x44
 801acb4:	e732      	b.n	801ab1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801acb6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801acb8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801acba:	4433      	add	r3, r6
 801acbc:	931f      	str	r3, [sp, #124]	; 0x7c
 801acbe:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801acc0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801acc2:	4433      	add	r3, r6
 801acc4:	9320      	str	r3, [sp, #128]	; 0x80
 801acc6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acc8:	3b01      	subs	r3, #1
 801acca:	9309      	str	r3, [sp, #36]	; 0x24
 801accc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801acce:	3302      	adds	r3, #2
 801acd0:	930a      	str	r3, [sp, #40]	; 0x28
 801acd2:	e702      	b.n	801aada <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801acd4:	d027      	beq.n	801ad26 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801acd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801acd8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801acda:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801acdc:	3b01      	subs	r3, #1
 801acde:	fb00 5003 	mla	r0, r0, r3, r5
 801ace2:	1400      	asrs	r0, r0, #16
 801ace4:	f53f af16 	bmi.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ace8:	3901      	subs	r1, #1
 801acea:	4288      	cmp	r0, r1
 801acec:	f6bf af12 	bge.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801acf0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801acf2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801acf4:	fb01 0303 	mla	r3, r1, r3, r0
 801acf8:	141b      	asrs	r3, r3, #16
 801acfa:	f53f af0b 	bmi.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801acfe:	3a01      	subs	r2, #1
 801ad00:	4293      	cmp	r3, r2
 801ad02:	f6bf af07 	bge.w	801ab14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ad06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad08:	9311      	str	r3, [sp, #68]	; 0x44
 801ad0a:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801ad0e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ad10:	930c      	str	r3, [sp, #48]	; 0x30
 801ad12:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ad14:	2b00      	cmp	r3, #0
 801ad16:	dc70      	bgt.n	801adfa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801ad18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ad1c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801ad20:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ad24:	930a      	str	r3, [sp, #40]	; 0x28
 801ad26:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad28:	2b00      	cmp	r3, #0
 801ad2a:	f340 8124 	ble.w	801af76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801ad2e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ad32:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ad36:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ad3a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ad3c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ad40:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ad44:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ad48:	eef0 6a62 	vmov.f32	s13, s5
 801ad4c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ad50:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad54:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ad58:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801ad5c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ad60:	eef0 6a43 	vmov.f32	s13, s6
 801ad64:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ad68:	ee12 2a90 	vmov	r2, s5
 801ad6c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ad70:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad74:	ee13 2a10 	vmov	r2, s6
 801ad78:	9321      	str	r3, [sp, #132]	; 0x84
 801ad7a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ad7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801ad80:	9322      	str	r3, [sp, #136]	; 0x88
 801ad82:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ad84:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801ad86:	3b01      	subs	r3, #1
 801ad88:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ad8c:	930e      	str	r3, [sp, #56]	; 0x38
 801ad8e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801ad90:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801ad94:	bf08      	it	eq
 801ad96:	4613      	moveq	r3, r2
 801ad98:	9309      	str	r3, [sp, #36]	; 0x24
 801ad9a:	eeb0 3a67 	vmov.f32	s6, s15
 801ad9e:	eef0 2a47 	vmov.f32	s5, s14
 801ada2:	e68c      	b.n	801aabe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801ada4:	b149      	cbz	r1, 801adba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801ada6:	5cb2      	ldrb	r2, [r6, r2]
 801ada8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801adac:	4422      	add	r2, r4
 801adae:	4628      	mov	r0, r5
 801adb0:	46ac      	mov	ip, r5
 801adb2:	e6f1      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801adb4:	4628      	mov	r0, r5
 801adb6:	462a      	mov	r2, r5
 801adb8:	e6ee      	b.n	801ab98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801adba:	4628      	mov	r0, r5
 801adbc:	462a      	mov	r2, r5
 801adbe:	e7f7      	b.n	801adb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801adc0:	1c47      	adds	r7, r0, #1
 801adc2:	f53f af69 	bmi.w	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801adc6:	42ba      	cmp	r2, r7
 801adc8:	f6ff af66 	blt.w	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801adcc:	1c6f      	adds	r7, r5, #1
 801adce:	f53f af63 	bmi.w	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801add2:	42be      	cmp	r6, r7
 801add4:	f6ff af60 	blt.w	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801add8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801adda:	9002      	str	r0, [sp, #8]
 801addc:	b236      	sxth	r6, r6
 801adde:	b212      	sxth	r2, r2
 801ade0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801ade4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801ade8:	9200      	str	r2, [sp, #0]
 801adea:	9601      	str	r6, [sp, #4]
 801adec:	4623      	mov	r3, r4
 801adee:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801adf2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801adf4:	f7ff fd59 	bl	801a8aa <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801adf8:	e74e      	b.n	801ac98 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801adfa:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801adfc:	9820      	ldr	r0, [sp, #128]	; 0x80
 801adfe:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801ae00:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801ae02:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801ae06:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801ae08:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801ae0c:	142d      	asrs	r5, r5, #16
 801ae0e:	1400      	asrs	r0, r0, #16
 801ae10:	fb02 5000 	mla	r0, r2, r0, r5
 801ae14:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ae16:	f815 9000 	ldrb.w	r9, [r5, r0]
 801ae1a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801ae1e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801ae22:	182e      	adds	r6, r5, r0
 801ae24:	eb04 0509 	add.w	r5, r4, r9
 801ae28:	2b00      	cmp	r3, #0
 801ae2a:	f000 8096 	beq.w	801af5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801ae2e:	7877      	ldrb	r7, [r6, #1]
 801ae30:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801ae34:	4427      	add	r7, r4
 801ae36:	2900      	cmp	r1, #0
 801ae38:	f000 8097 	beq.w	801af6a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801ae3c:	18b0      	adds	r0, r6, r2
 801ae3e:	5cb2      	ldrb	r2, [r6, r2]
 801ae40:	7840      	ldrb	r0, [r0, #1]
 801ae42:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae46:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801ae4a:	4422      	add	r2, r4
 801ae4c:	4420      	add	r0, r4
 801ae4e:	b29b      	uxth	r3, r3
 801ae50:	b289      	uxth	r1, r1
 801ae52:	fb03 f801 	mul.w	r8, r3, r1
 801ae56:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801ae58:	f895 b002 	ldrb.w	fp, [r5, #2]
 801ae5c:	f8b6 c000 	ldrh.w	ip, [r6]
 801ae60:	78be      	ldrb	r6, [r7, #2]
 801ae62:	f814 9009 	ldrb.w	r9, [r4, r9]
 801ae66:	011b      	lsls	r3, r3, #4
 801ae68:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801ae6c:	b289      	uxth	r1, r1
 801ae6e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ae72:	eba3 0308 	sub.w	r3, r3, r8
 801ae76:	b29b      	uxth	r3, r3
 801ae78:	ebae 0e01 	sub.w	lr, lr, r1
 801ae7c:	fa1f fe8e 	uxth.w	lr, lr
 801ae80:	435e      	muls	r6, r3
 801ae82:	fb0e 660b 	mla	r6, lr, fp, r6
 801ae86:	f892 b002 	ldrb.w	fp, [r2, #2]
 801ae8a:	9310      	str	r3, [sp, #64]	; 0x40
 801ae8c:	fb01 660b 	mla	r6, r1, fp, r6
 801ae90:	f890 b002 	ldrb.w	fp, [r0, #2]
 801ae94:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ae96:	fb08 660b 	mla	r6, r8, fp, r6
 801ae9a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801ae9e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801aea2:	fb1b fb03 	smulbb	fp, fp, r3
 801aea6:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801aeaa:	fb06 b60a 	mla	r6, r6, sl, fp
 801aeae:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aeb0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801aeb4:	787d      	ldrb	r5, [r7, #1]
 801aeb6:	783f      	ldrb	r7, [r7, #0]
 801aeb8:	435d      	muls	r5, r3
 801aeba:	fb0e 550b 	mla	r5, lr, fp, r5
 801aebe:	f892 b001 	ldrb.w	fp, [r2, #1]
 801aec2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aec4:	fb01 550b 	mla	r5, r1, fp, r5
 801aec8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801aecc:	fb08 550b 	mla	r5, r8, fp, r5
 801aed0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801aed4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801aed8:	fb1b fb03 	smulbb	fp, fp, r3
 801aedc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801aede:	437b      	muls	r3, r7
 801aee0:	7817      	ldrb	r7, [r2, #0]
 801aee2:	fb0e 3309 	mla	r3, lr, r9, r3
 801aee6:	fb01 3307 	mla	r3, r1, r7, r3
 801aeea:	7807      	ldrb	r7, [r0, #0]
 801aeec:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801aef0:	fb08 3707 	mla	r7, r8, r7, r3
 801aef4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801aef6:	fa5f fc8c 	uxtb.w	ip, ip
 801aefa:	fb1c fc03 	smulbb	ip, ip, r3
 801aefe:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801af02:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801af06:	fb05 b50a 	mla	r5, r5, sl, fp
 801af0a:	fb07 c70a 	mla	r7, r7, sl, ip
 801af0e:	b2b6      	uxth	r6, r6
 801af10:	b2ad      	uxth	r5, r5
 801af12:	b2bf      	uxth	r7, r7
 801af14:	1c73      	adds	r3, r6, #1
 801af16:	1c7a      	adds	r2, r7, #1
 801af18:	f105 0b01 	add.w	fp, r5, #1
 801af1c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801af20:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801af24:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801af28:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801af2c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801af30:	096d      	lsrs	r5, r5, #5
 801af32:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801af34:	4316      	orrs	r6, r2
 801af36:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801af3a:	432e      	orrs	r6, r5
 801af3c:	f823 6b02 	strh.w	r6, [r3], #2
 801af40:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801af42:	930c      	str	r3, [sp, #48]	; 0x30
 801af44:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801af46:	4413      	add	r3, r2
 801af48:	931f      	str	r3, [sp, #124]	; 0x7c
 801af4a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801af4c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801af4e:	4413      	add	r3, r2
 801af50:	9320      	str	r3, [sp, #128]	; 0x80
 801af52:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801af54:	3b01      	subs	r3, #1
 801af56:	9311      	str	r3, [sp, #68]	; 0x44
 801af58:	e6db      	b.n	801ad12 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801af5a:	b149      	cbz	r1, 801af70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801af5c:	5cb2      	ldrb	r2, [r6, r2]
 801af5e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af62:	4422      	add	r2, r4
 801af64:	4628      	mov	r0, r5
 801af66:	462f      	mov	r7, r5
 801af68:	e771      	b.n	801ae4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801af6a:	4628      	mov	r0, r5
 801af6c:	462a      	mov	r2, r5
 801af6e:	e76e      	b.n	801ae4e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801af70:	4628      	mov	r0, r5
 801af72:	462a      	mov	r2, r5
 801af74:	e7f7      	b.n	801af66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801af76:	b015      	add	sp, #84	; 0x54
 801af78:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801af7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801af7c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801af80:	880f      	ldrh	r7, [r1, #0]
 801af82:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801af86:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801af8a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801af8e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801af92:	023c      	lsls	r4, r7, #8
 801af94:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801af98:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801af9c:	017c      	lsls	r4, r7, #5
 801af9e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801afa2:	00ff      	lsls	r7, r7, #3
 801afa4:	ea4b 0404 	orr.w	r4, fp, r4
 801afa8:	b2ff      	uxtb	r7, r7
 801afaa:	fb05 ca0e 	mla	sl, r5, lr, ip
 801afae:	4327      	orrs	r7, r4
 801afb0:	2d00      	cmp	r5, #0
 801afb2:	eb02 080a 	add.w	r8, r2, sl
 801afb6:	9701      	str	r7, [sp, #4]
 801afb8:	db7e      	blt.n	801b0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801afba:	45a9      	cmp	r9, r5
 801afbc:	dd7c      	ble.n	801b0b8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801afbe:	f1bc 0f00 	cmp.w	ip, #0
 801afc2:	db77      	blt.n	801b0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801afc4:	45e6      	cmp	lr, ip
 801afc6:	dd75      	ble.n	801b0b4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801afc8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801afcc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801afd0:	441f      	add	r7, r3
 801afd2:	f11c 0201 	adds.w	r2, ip, #1
 801afd6:	d472      	bmi.n	801b0be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801afd8:	4596      	cmp	lr, r2
 801afda:	dd70      	ble.n	801b0be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801afdc:	2800      	cmp	r0, #0
 801afde:	d06e      	beq.n	801b0be <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801afe0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801afe4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801afe8:	441c      	add	r4, r3
 801afea:	3501      	adds	r5, #1
 801afec:	d46b      	bmi.n	801b0c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801afee:	45a9      	cmp	r9, r5
 801aff0:	dd69      	ble.n	801b0c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aff2:	2e00      	cmp	r6, #0
 801aff4:	d067      	beq.n	801b0c6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aff6:	f1bc 0f00 	cmp.w	ip, #0
 801affa:	db62      	blt.n	801b0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801affc:	45e6      	cmp	lr, ip
 801affe:	dd60      	ble.n	801b0c2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801b000:	f818 500e 	ldrb.w	r5, [r8, lr]
 801b004:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801b008:	441d      	add	r5, r3
 801b00a:	f11c 0201 	adds.w	r2, ip, #1
 801b00e:	d45d      	bmi.n	801b0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b010:	4596      	cmp	lr, r2
 801b012:	dd5b      	ble.n	801b0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b014:	2800      	cmp	r0, #0
 801b016:	d059      	beq.n	801b0cc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801b018:	44c6      	add	lr, r8
 801b01a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b01e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b022:	4413      	add	r3, r2
 801b024:	b280      	uxth	r0, r0
 801b026:	b2b2      	uxth	r2, r6
 801b028:	fb00 f602 	mul.w	r6, r0, r2
 801b02c:	0100      	lsls	r0, r0, #4
 801b02e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801b032:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801b036:	1b80      	subs	r0, r0, r6
 801b038:	fa1f fc82 	uxth.w	ip, r2
 801b03c:	b282      	uxth	r2, r0
 801b03e:	78a0      	ldrb	r0, [r4, #2]
 801b040:	f897 e002 	ldrb.w	lr, [r7, #2]
 801b044:	f897 9000 	ldrb.w	r9, [r7]
 801b048:	787f      	ldrb	r7, [r7, #1]
 801b04a:	eba8 080c 	sub.w	r8, r8, ip
 801b04e:	fa1f f888 	uxth.w	r8, r8
 801b052:	4350      	muls	r0, r2
 801b054:	fb08 0e0e 	mla	lr, r8, lr, r0
 801b058:	78a8      	ldrb	r0, [r5, #2]
 801b05a:	fb0c e000 	mla	r0, ip, r0, lr
 801b05e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801b062:	fb06 0e0e 	mla	lr, r6, lr, r0
 801b066:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801b06a:	f894 e000 	ldrb.w	lr, [r4]
 801b06e:	fb02 fe0e 	mul.w	lr, r2, lr
 801b072:	fb08 e909 	mla	r9, r8, r9, lr
 801b076:	f895 e000 	ldrb.w	lr, [r5]
 801b07a:	fb0c 990e 	mla	r9, ip, lr, r9
 801b07e:	f893 e000 	ldrb.w	lr, [r3]
 801b082:	785b      	ldrb	r3, [r3, #1]
 801b084:	fb06 9e0e 	mla	lr, r6, lr, r9
 801b088:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801b08c:	ea4e 0e00 	orr.w	lr, lr, r0
 801b090:	7860      	ldrb	r0, [r4, #1]
 801b092:	4350      	muls	r0, r2
 801b094:	786a      	ldrb	r2, [r5, #1]
 801b096:	fb08 0007 	mla	r0, r8, r7, r0
 801b09a:	fb0c 0202 	mla	r2, ip, r2, r0
 801b09e:	fb06 2303 	mla	r3, r6, r3, r2
 801b0a2:	095b      	lsrs	r3, r3, #5
 801b0a4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b0a8:	ea4e 0303 	orr.w	r3, lr, r3
 801b0ac:	800b      	strh	r3, [r1, #0]
 801b0ae:	b003      	add	sp, #12
 801b0b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b0b4:	af01      	add	r7, sp, #4
 801b0b6:	e78c      	b.n	801afd2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801b0b8:	ac01      	add	r4, sp, #4
 801b0ba:	4627      	mov	r7, r4
 801b0bc:	e795      	b.n	801afea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b0be:	ac01      	add	r4, sp, #4
 801b0c0:	e793      	b.n	801afea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801b0c2:	ad01      	add	r5, sp, #4
 801b0c4:	e7a1      	b.n	801b00a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801b0c6:	ab01      	add	r3, sp, #4
 801b0c8:	461d      	mov	r5, r3
 801b0ca:	e7ab      	b.n	801b024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801b0cc:	ab01      	add	r3, sp, #4
 801b0ce:	e7a9      	b.n	801b024 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801b0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b0d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b0d4:	b08f      	sub	sp, #60	; 0x3c
 801b0d6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801b0da:	920c      	str	r2, [sp, #48]	; 0x30
 801b0dc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801b0de:	910a      	str	r1, [sp, #40]	; 0x28
 801b0e0:	9306      	str	r3, [sp, #24]
 801b0e2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801b0e6:	900d      	str	r0, [sp, #52]	; 0x34
 801b0e8:	6850      	ldr	r0, [r2, #4]
 801b0ea:	6812      	ldr	r2, [r2, #0]
 801b0ec:	fb00 1303 	mla	r3, r0, r3, r1
 801b0f0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b0f4:	9307      	str	r3, [sp, #28]
 801b0f6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b0f8:	681b      	ldr	r3, [r3, #0]
 801b0fa:	9308      	str	r3, [sp, #32]
 801b0fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b0fe:	685c      	ldr	r4, [r3, #4]
 801b100:	3404      	adds	r4, #4
 801b102:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b104:	2b00      	cmp	r3, #0
 801b106:	dc03      	bgt.n	801b110 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801b108:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b10a:	2b00      	cmp	r3, #0
 801b10c:	f340 81d6 	ble.w	801b4bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b110:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801b112:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b116:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b11a:	1e48      	subs	r0, r1, #1
 801b11c:	1e56      	subs	r6, r2, #1
 801b11e:	9b06      	ldr	r3, [sp, #24]
 801b120:	2b00      	cmp	r3, #0
 801b122:	f340 80b7 	ble.w	801b294 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801b126:	ea5f 472b 	movs.w	r7, fp, asr #16
 801b12a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b12e:	d406      	bmi.n	801b13e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b130:	4287      	cmp	r7, r0
 801b132:	da04      	bge.n	801b13e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b134:	2b00      	cmp	r3, #0
 801b136:	db02      	blt.n	801b13e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801b138:	42b3      	cmp	r3, r6
 801b13a:	f2c0 80ac 	blt.w	801b296 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801b13e:	3701      	adds	r7, #1
 801b140:	f100 809d 	bmi.w	801b27e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b144:	42b9      	cmp	r1, r7
 801b146:	f2c0 809a 	blt.w	801b27e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b14a:	3301      	adds	r3, #1
 801b14c:	f100 8097 	bmi.w	801b27e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b150:	429a      	cmp	r2, r3
 801b152:	f2c0 8094 	blt.w	801b27e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801b156:	9b06      	ldr	r3, [sp, #24]
 801b158:	930b      	str	r3, [sp, #44]	; 0x2c
 801b15a:	9b07      	ldr	r3, [sp, #28]
 801b15c:	9309      	str	r3, [sp, #36]	; 0x24
 801b15e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b160:	2b00      	cmp	r3, #0
 801b162:	f340 80b5 	ble.w	801b2d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801b166:	9820      	ldr	r0, [sp, #128]	; 0x80
 801b168:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b16a:	68c7      	ldr	r7, [r0, #12]
 801b16c:	6892      	ldr	r2, [r2, #8]
 801b16e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801b172:	ea4f 4625 	mov.w	r6, r5, asr #16
 801b176:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b17a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b17e:	f100 80fb 	bmi.w	801b378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b182:	f102 3cff 	add.w	ip, r2, #4294967295
 801b186:	4560      	cmp	r0, ip
 801b188:	f280 80f6 	bge.w	801b378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b18c:	2e00      	cmp	r6, #0
 801b18e:	f2c0 80f3 	blt.w	801b378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b192:	f107 3cff 	add.w	ip, r7, #4294967295
 801b196:	4566      	cmp	r6, ip
 801b198:	f280 80ee 	bge.w	801b378 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801b19c:	b212      	sxth	r2, r2
 801b19e:	fb06 0002 	mla	r0, r6, r2, r0
 801b1a2:	9e08      	ldr	r6, [sp, #32]
 801b1a4:	1837      	adds	r7, r6, r0
 801b1a6:	5c30      	ldrb	r0, [r6, r0]
 801b1a8:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801b1ac:	eb04 0c08 	add.w	ip, r4, r8
 801b1b0:	2b00      	cmp	r3, #0
 801b1b2:	f000 80d3 	beq.w	801b35c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801b1b6:	787e      	ldrb	r6, [r7, #1]
 801b1b8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b1bc:	4426      	add	r6, r4
 801b1be:	2900      	cmp	r1, #0
 801b1c0:	f000 80d4 	beq.w	801b36c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801b1c4:	18b8      	adds	r0, r7, r2
 801b1c6:	5cba      	ldrb	r2, [r7, r2]
 801b1c8:	7840      	ldrb	r0, [r0, #1]
 801b1ca:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b1ce:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b1d2:	4422      	add	r2, r4
 801b1d4:	4420      	add	r0, r4
 801b1d6:	b29b      	uxth	r3, r3
 801b1d8:	b289      	uxth	r1, r1
 801b1da:	fb03 f901 	mul.w	r9, r3, r1
 801b1de:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b1e2:	011b      	lsls	r3, r3, #4
 801b1e4:	b289      	uxth	r1, r1
 801b1e6:	78b7      	ldrb	r7, [r6, #2]
 801b1e8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b1ec:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b1f0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b1f4:	eba3 0309 	sub.w	r3, r3, r9
 801b1f8:	b29b      	uxth	r3, r3
 801b1fa:	ebae 0e01 	sub.w	lr, lr, r1
 801b1fe:	fa1f fe8e 	uxth.w	lr, lr
 801b202:	435f      	muls	r7, r3
 801b204:	fb0e 770a 	mla	r7, lr, sl, r7
 801b208:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b20c:	fb01 770a 	mla	r7, r1, sl, r7
 801b210:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b214:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b218:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b21c:	f896 8000 	ldrb.w	r8, [r6]
 801b220:	7876      	ldrb	r6, [r6, #1]
 801b222:	fb03 f808 	mul.w	r8, r3, r8
 801b226:	fb0e 8807 	mla	r8, lr, r7, r8
 801b22a:	7817      	ldrb	r7, [r2, #0]
 801b22c:	fb01 8807 	mla	r8, r1, r7, r8
 801b230:	7807      	ldrb	r7, [r0, #0]
 801b232:	fb09 8707 	mla	r7, r9, r7, r8
 801b236:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801b23a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b23e:	ea47 070a 	orr.w	r7, r7, sl
 801b242:	4373      	muls	r3, r6
 801b244:	f892 a001 	ldrb.w	sl, [r2, #1]
 801b248:	fb0e 330c 	mla	r3, lr, ip, r3
 801b24c:	fb01 310a 	mla	r1, r1, sl, r3
 801b250:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b254:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b256:	fb09 1a0a 	mla	sl, r9, sl, r1
 801b25a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b25e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b262:	ea47 070a 	orr.w	r7, r7, sl
 801b266:	801f      	strh	r7, [r3, #0]
 801b268:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b26a:	3302      	adds	r3, #2
 801b26c:	9309      	str	r3, [sp, #36]	; 0x24
 801b26e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b270:	449b      	add	fp, r3
 801b272:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b274:	441d      	add	r5, r3
 801b276:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b278:	3b01      	subs	r3, #1
 801b27a:	930b      	str	r3, [sp, #44]	; 0x2c
 801b27c:	e76f      	b.n	801b15e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801b27e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b280:	449b      	add	fp, r3
 801b282:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b284:	441d      	add	r5, r3
 801b286:	9b06      	ldr	r3, [sp, #24]
 801b288:	3b01      	subs	r3, #1
 801b28a:	9306      	str	r3, [sp, #24]
 801b28c:	9b07      	ldr	r3, [sp, #28]
 801b28e:	3302      	adds	r3, #2
 801b290:	9307      	str	r3, [sp, #28]
 801b292:	e744      	b.n	801b11e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801b294:	d023      	beq.n	801b2de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801b296:	9b06      	ldr	r3, [sp, #24]
 801b298:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801b29a:	3b01      	subs	r3, #1
 801b29c:	fb00 b003 	mla	r0, r0, r3, fp
 801b2a0:	1400      	asrs	r0, r0, #16
 801b2a2:	f53f af58 	bmi.w	801b156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b2a6:	3901      	subs	r1, #1
 801b2a8:	4288      	cmp	r0, r1
 801b2aa:	f6bf af54 	bge.w	801b156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b2ae:	991c      	ldr	r1, [sp, #112]	; 0x70
 801b2b0:	fb01 5303 	mla	r3, r1, r3, r5
 801b2b4:	141b      	asrs	r3, r3, #16
 801b2b6:	f53f af4e 	bmi.w	801b156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b2ba:	3a01      	subs	r2, #1
 801b2bc:	4293      	cmp	r3, r2
 801b2be:	f6bf af4a 	bge.w	801b156 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801b2c2:	9b06      	ldr	r3, [sp, #24]
 801b2c4:	9309      	str	r3, [sp, #36]	; 0x24
 801b2c6:	9b07      	ldr	r3, [sp, #28]
 801b2c8:	930b      	str	r3, [sp, #44]	; 0x2c
 801b2ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2cc:	2b00      	cmp	r3, #0
 801b2ce:	dc70      	bgt.n	801b3b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801b2d0:	9b06      	ldr	r3, [sp, #24]
 801b2d2:	9a07      	ldr	r2, [sp, #28]
 801b2d4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801b2d8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b2dc:	9307      	str	r3, [sp, #28]
 801b2de:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b2e0:	2b00      	cmp	r3, #0
 801b2e2:	f340 80eb 	ble.w	801b4bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801b2e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b2ea:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b2ee:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b2f2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b2f4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b2f8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b2fc:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b300:	eef0 6a62 	vmov.f32	s13, s5
 801b304:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b308:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b30c:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b310:	ee16 ba90 	vmov	fp, s13
 801b314:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b318:	eef0 6a43 	vmov.f32	s13, s6
 801b31c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b320:	ee12 2a90 	vmov	r2, s5
 801b324:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b328:	fb92 f3f3 	sdiv	r3, r2, r3
 801b32c:	ee13 2a10 	vmov	r2, s6
 801b330:	931b      	str	r3, [sp, #108]	; 0x6c
 801b332:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b334:	fb92 f3f3 	sdiv	r3, r2, r3
 801b338:	931c      	str	r3, [sp, #112]	; 0x70
 801b33a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801b33c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801b33e:	3b01      	subs	r3, #1
 801b340:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b344:	930a      	str	r3, [sp, #40]	; 0x28
 801b346:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801b348:	bf08      	it	eq
 801b34a:	4613      	moveq	r3, r2
 801b34c:	ee16 5a90 	vmov	r5, s13
 801b350:	9306      	str	r3, [sp, #24]
 801b352:	eeb0 3a67 	vmov.f32	s6, s15
 801b356:	eef0 2a47 	vmov.f32	s5, s14
 801b35a:	e6d2      	b.n	801b102 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801b35c:	b149      	cbz	r1, 801b372 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801b35e:	5cba      	ldrb	r2, [r7, r2]
 801b360:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b364:	4422      	add	r2, r4
 801b366:	4660      	mov	r0, ip
 801b368:	4666      	mov	r6, ip
 801b36a:	e734      	b.n	801b1d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b36c:	4660      	mov	r0, ip
 801b36e:	4662      	mov	r2, ip
 801b370:	e731      	b.n	801b1d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801b372:	4660      	mov	r0, ip
 801b374:	4662      	mov	r2, ip
 801b376:	e7f7      	b.n	801b368 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801b378:	f110 0c01 	adds.w	ip, r0, #1
 801b37c:	f53f af74 	bmi.w	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b380:	4562      	cmp	r2, ip
 801b382:	f6ff af71 	blt.w	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b386:	f116 0c01 	adds.w	ip, r6, #1
 801b38a:	f53f af6d 	bmi.w	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b38e:	4567      	cmp	r7, ip
 801b390:	f6ff af6a 	blt.w	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b394:	b23f      	sxth	r7, r7
 801b396:	b212      	sxth	r2, r2
 801b398:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801b39c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801b3a0:	9200      	str	r2, [sp, #0]
 801b3a2:	9701      	str	r7, [sp, #4]
 801b3a4:	4623      	mov	r3, r4
 801b3a6:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801b3aa:	980d      	ldr	r0, [sp, #52]	; 0x34
 801b3ac:	f7ff fde6 	bl	801af7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801b3b0:	e75a      	b.n	801b268 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801b3b2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801b3b4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801b3b8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801b3bc:	1428      	asrs	r0, r5, #16
 801b3be:	fb02 6000 	mla	r0, r2, r0, r6
 801b3c2:	9e08      	ldr	r6, [sp, #32]
 801b3c4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801b3c8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801b3cc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801b3d0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b3d4:	1837      	adds	r7, r6, r0
 801b3d6:	eb04 0c08 	add.w	ip, r4, r8
 801b3da:	2b00      	cmp	r3, #0
 801b3dc:	d060      	beq.n	801b4a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801b3de:	787e      	ldrb	r6, [r7, #1]
 801b3e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801b3e4:	4426      	add	r6, r4
 801b3e6:	2900      	cmp	r1, #0
 801b3e8:	d062      	beq.n	801b4b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801b3ea:	18b8      	adds	r0, r7, r2
 801b3ec:	5cba      	ldrb	r2, [r7, r2]
 801b3ee:	7840      	ldrb	r0, [r0, #1]
 801b3f0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b3f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801b3f8:	4422      	add	r2, r4
 801b3fa:	4420      	add	r0, r4
 801b3fc:	b29b      	uxth	r3, r3
 801b3fe:	b289      	uxth	r1, r1
 801b400:	fb03 f901 	mul.w	r9, r3, r1
 801b404:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b408:	011b      	lsls	r3, r3, #4
 801b40a:	b289      	uxth	r1, r1
 801b40c:	78b7      	ldrb	r7, [r6, #2]
 801b40e:	f89c a002 	ldrb.w	sl, [ip, #2]
 801b412:	f89c c001 	ldrb.w	ip, [ip, #1]
 801b416:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801b41a:	eba3 0309 	sub.w	r3, r3, r9
 801b41e:	b29b      	uxth	r3, r3
 801b420:	ebae 0e01 	sub.w	lr, lr, r1
 801b424:	fa1f fe8e 	uxth.w	lr, lr
 801b428:	435f      	muls	r7, r3
 801b42a:	fb0e 770a 	mla	r7, lr, sl, r7
 801b42e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801b432:	fb01 770a 	mla	r7, r1, sl, r7
 801b436:	f890 a002 	ldrb.w	sl, [r0, #2]
 801b43a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801b43e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801b442:	f896 8000 	ldrb.w	r8, [r6]
 801b446:	7876      	ldrb	r6, [r6, #1]
 801b448:	fb03 f808 	mul.w	r8, r3, r8
 801b44c:	fb0e 8807 	mla	r8, lr, r7, r8
 801b450:	7817      	ldrb	r7, [r2, #0]
 801b452:	fb01 8807 	mla	r8, r1, r7, r8
 801b456:	7807      	ldrb	r7, [r0, #0]
 801b458:	fb09 8707 	mla	r7, r9, r7, r8
 801b45c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801b460:	4373      	muls	r3, r6
 801b462:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801b466:	7856      	ldrb	r6, [r2, #1]
 801b468:	ea47 070a 	orr.w	r7, r7, sl
 801b46c:	fb0e 330c 	mla	r3, lr, ip, r3
 801b470:	f890 a001 	ldrb.w	sl, [r0, #1]
 801b474:	fb01 3306 	mla	r3, r1, r6, r3
 801b478:	fb09 3a0a 	mla	sl, r9, sl, r3
 801b47c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b480:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801b482:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801b486:	ea47 070a 	orr.w	r7, r7, sl
 801b48a:	f823 7b02 	strh.w	r7, [r3], #2
 801b48e:	930b      	str	r3, [sp, #44]	; 0x2c
 801b490:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b492:	449b      	add	fp, r3
 801b494:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801b496:	441d      	add	r5, r3
 801b498:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b49a:	3b01      	subs	r3, #1
 801b49c:	9309      	str	r3, [sp, #36]	; 0x24
 801b49e:	e714      	b.n	801b2ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801b4a0:	b149      	cbz	r1, 801b4b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801b4a2:	5cba      	ldrb	r2, [r7, r2]
 801b4a4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801b4a8:	4422      	add	r2, r4
 801b4aa:	4660      	mov	r0, ip
 801b4ac:	4666      	mov	r6, ip
 801b4ae:	e7a5      	b.n	801b3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b4b0:	4660      	mov	r0, ip
 801b4b2:	4662      	mov	r2, ip
 801b4b4:	e7a2      	b.n	801b3fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801b4b6:	4660      	mov	r0, ip
 801b4b8:	4662      	mov	r2, ip
 801b4ba:	e7f7      	b.n	801b4ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801b4bc:	b00f      	add	sp, #60	; 0x3c
 801b4be:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b4c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801b4c2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b4c6:	b085      	sub	sp, #20
 801b4c8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801b4cc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801b4d0:	9102      	str	r1, [sp, #8]
 801b4d2:	2c00      	cmp	r4, #0
 801b4d4:	fb04 710c 	mla	r1, r4, ip, r7
 801b4d8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801b4dc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801b4e0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801b4e4:	eb02 0e01 	add.w	lr, r2, r1
 801b4e8:	f2c0 8122 	blt.w	801b730 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b4ec:	45a0      	cmp	r8, r4
 801b4ee:	f340 811f 	ble.w	801b730 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801b4f2:	2f00      	cmp	r7, #0
 801b4f4:	f2c0 811a 	blt.w	801b72c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b4f8:	45bc      	cmp	ip, r7
 801b4fa:	f340 8117 	ble.w	801b72c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801b4fe:	5c52      	ldrb	r2, [r2, r1]
 801b500:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801b504:	1c7a      	adds	r2, r7, #1
 801b506:	f100 8116 	bmi.w	801b736 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b50a:	4594      	cmp	ip, r2
 801b50c:	f340 8113 	ble.w	801b736 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b510:	2e00      	cmp	r6, #0
 801b512:	f000 8112 	beq.w	801b73a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b516:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b51a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b51e:	3401      	adds	r4, #1
 801b520:	f100 810f 	bmi.w	801b742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b524:	45a0      	cmp	r8, r4
 801b526:	f340 810c 	ble.w	801b742 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b52a:	2800      	cmp	r0, #0
 801b52c:	f000 810c 	beq.w	801b748 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b530:	2f00      	cmp	r7, #0
 801b532:	f2c0 8104 	blt.w	801b73e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b536:	45bc      	cmp	ip, r7
 801b538:	f340 8101 	ble.w	801b73e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b53c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b540:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b544:	3701      	adds	r7, #1
 801b546:	f100 8102 	bmi.w	801b74e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b54a:	45bc      	cmp	ip, r7
 801b54c:	f340 80ff 	ble.w	801b74e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b550:	2e00      	cmp	r6, #0
 801b552:	f000 80fe 	beq.w	801b752 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b556:	44f4      	add	ip, lr
 801b558:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b55c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b560:	b2b6      	uxth	r6, r6
 801b562:	b280      	uxth	r0, r0
 801b564:	fb00 fe06 	mul.w	lr, r0, r6
 801b568:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b56c:	0136      	lsls	r6, r6, #4
 801b56e:	eba6 070e 	sub.w	r7, r6, lr
 801b572:	b280      	uxth	r0, r0
 801b574:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b578:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b57c:	b2bf      	uxth	r7, r7
 801b57e:	1a1b      	subs	r3, r3, r0
 801b580:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b584:	b29b      	uxth	r3, r3
 801b586:	fb0a f607 	mul.w	r6, sl, r7
 801b58a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b58e:	fb0b 6603 	mla	r6, fp, r3, r6
 801b592:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b596:	fb00 6609 	mla	r6, r0, r9, r6
 801b59a:	fb0e 6608 	mla	r6, lr, r8, r6
 801b59e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b5a2:	9600      	str	r6, [sp, #0]
 801b5a4:	2e00      	cmp	r6, #0
 801b5a6:	f000 80be 	beq.w	801b726 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b5aa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b5ae:	fb0b fc0c 	mul.w	ip, fp, ip
 801b5b2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b5b6:	fb0b f505 	mul.w	r5, fp, r5
 801b5ba:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b5be:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b5c2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b5c6:	44dc      	add	ip, fp
 801b5c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b5cc:	9501      	str	r5, [sp, #4]
 801b5ce:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b5d2:	9503      	str	r5, [sp, #12]
 801b5d4:	9d01      	ldr	r5, [sp, #4]
 801b5d6:	9e02      	ldr	r6, [sp, #8]
 801b5d8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b5dc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b5e0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b5e4:	fb0a fc0c 	mul.w	ip, sl, ip
 801b5e8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b5ec:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b5f0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b5f4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b5f8:	4465      	add	r5, ip
 801b5fa:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b5fe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b602:	fb09 fc0c 	mul.w	ip, r9, ip
 801b606:	fb09 f904 	mul.w	r9, r9, r4
 801b60a:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b60e:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b612:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b616:	fb08 f404 	mul.w	r4, r8, r4
 801b61a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b61e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b622:	fb08 f802 	mul.w	r8, r8, r2
 801b626:	fb0a fa01 	mul.w	sl, sl, r1
 801b62a:	0a22      	lsrs	r2, r4, #8
 801b62c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b630:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b634:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b638:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b63c:	4414      	add	r4, r2
 801b63e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b642:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b646:	0a2d      	lsrs	r5, r5, #8
 801b648:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b64c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b650:	9a03      	ldr	r2, [sp, #12]
 801b652:	8836      	ldrh	r6, [r6, #0]
 801b654:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b658:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b65c:	437d      	muls	r5, r7
 801b65e:	4461      	add	r1, ip
 801b660:	0a24      	lsrs	r4, r4, #8
 801b662:	fb02 5503 	mla	r5, r2, r3, r5
 801b666:	0a09      	lsrs	r1, r1, #8
 801b668:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b66c:	fb04 540e 	mla	r4, r4, lr, r5
 801b670:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b674:	fb01 4100 	mla	r1, r1, r0, r4
 801b678:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b67c:	0a09      	lsrs	r1, r1, #8
 801b67e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b682:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b686:	fb07 f70a 	mul.w	r7, r7, sl
 801b68a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b68e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b692:	fb03 7101 	mla	r1, r3, r1, r7
 801b696:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b69a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b69e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b6a2:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b6a6:	fb00 e101 	mla	r1, r0, r1, lr
 801b6aa:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801b6ae:	9a00      	ldr	r2, [sp, #0]
 801b6b0:	b287      	uxth	r7, r0
 801b6b2:	437a      	muls	r2, r7
 801b6b4:	0a09      	lsrs	r1, r1, #8
 801b6b6:	1c53      	adds	r3, r2, #1
 801b6b8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b6bc:	4321      	orrs	r1, r4
 801b6be:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b6c2:	1235      	asrs	r5, r6, #8
 801b6c4:	0c0a      	lsrs	r2, r1, #16
 801b6c6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b6ca:	b2db      	uxtb	r3, r3
 801b6cc:	fb12 f207 	smulbb	r2, r2, r7
 801b6d0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b6d4:	fb05 2503 	mla	r5, r5, r3, r2
 801b6d8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b6dc:	10f2      	asrs	r2, r6, #3
 801b6de:	b2c8      	uxtb	r0, r1
 801b6e0:	00f6      	lsls	r6, r6, #3
 801b6e2:	fb14 f407 	smulbb	r4, r4, r7
 801b6e6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b6ea:	b2f6      	uxtb	r6, r6
 801b6ec:	fb10 f007 	smulbb	r0, r0, r7
 801b6f0:	fb02 4203 	mla	r2, r2, r3, r4
 801b6f4:	b2ad      	uxth	r5, r5
 801b6f6:	fb06 0303 	mla	r3, r6, r3, r0
 801b6fa:	b299      	uxth	r1, r3
 801b6fc:	b294      	uxth	r4, r2
 801b6fe:	1c6b      	adds	r3, r5, #1
 801b700:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b704:	1c62      	adds	r2, r4, #1
 801b706:	1c4b      	adds	r3, r1, #1
 801b708:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b70c:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b710:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b714:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b718:	0952      	lsrs	r2, r2, #5
 801b71a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b71e:	432b      	orrs	r3, r5
 801b720:	4313      	orrs	r3, r2
 801b722:	9a02      	ldr	r2, [sp, #8]
 801b724:	8013      	strh	r3, [r2, #0]
 801b726:	b005      	add	sp, #20
 801b728:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b72c:	2500      	movs	r5, #0
 801b72e:	e6e9      	b.n	801b504 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b730:	2100      	movs	r1, #0
 801b732:	460d      	mov	r5, r1
 801b734:	e6f3      	b.n	801b51e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b736:	2100      	movs	r1, #0
 801b738:	e6f1      	b.n	801b51e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b73a:	4631      	mov	r1, r6
 801b73c:	e6ef      	b.n	801b51e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b73e:	2400      	movs	r4, #0
 801b740:	e700      	b.n	801b544 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b742:	2200      	movs	r2, #0
 801b744:	4614      	mov	r4, r2
 801b746:	e70b      	b.n	801b560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b748:	4602      	mov	r2, r0
 801b74a:	4604      	mov	r4, r0
 801b74c:	e708      	b.n	801b560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b74e:	2200      	movs	r2, #0
 801b750:	e706      	b.n	801b560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b752:	4632      	mov	r2, r6
 801b754:	e704      	b.n	801b560 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b756 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b756:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b75a:	b09f      	sub	sp, #124	; 0x7c
 801b75c:	921b      	str	r2, [sp, #108]	; 0x6c
 801b75e:	9309      	str	r3, [sp, #36]	; 0x24
 801b760:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b762:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b766:	931c      	str	r3, [sp, #112]	; 0x70
 801b768:	9119      	str	r1, [sp, #100]	; 0x64
 801b76a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b76e:	901d      	str	r0, [sp, #116]	; 0x74
 801b770:	6850      	ldr	r0, [r2, #4]
 801b772:	6812      	ldr	r2, [r2, #0]
 801b774:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801b776:	fb00 1303 	mla	r3, r0, r3, r1
 801b77a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b77e:	930c      	str	r3, [sp, #48]	; 0x30
 801b780:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b782:	681b      	ldr	r3, [r3, #0]
 801b784:	9312      	str	r3, [sp, #72]	; 0x48
 801b786:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b788:	685e      	ldr	r6, [r3, #4]
 801b78a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801b78e:	930d      	str	r3, [sp, #52]	; 0x34
 801b790:	3604      	adds	r6, #4
 801b792:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b794:	2b00      	cmp	r3, #0
 801b796:	dc03      	bgt.n	801b7a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b798:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b79a:	2b00      	cmp	r3, #0
 801b79c:	f340 8388 	ble.w	801beb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b7a0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b7a2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b7a6:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b7aa:	1e48      	subs	r0, r1, #1
 801b7ac:	1e57      	subs	r7, r2, #1
 801b7ae:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7b0:	2b00      	cmp	r3, #0
 801b7b2:	f340 8195 	ble.w	801bae0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b7b6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b7b8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b7bc:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b7c0:	d406      	bmi.n	801b7d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b7c2:	4584      	cmp	ip, r0
 801b7c4:	da04      	bge.n	801b7d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b7c6:	2b00      	cmp	r3, #0
 801b7c8:	db02      	blt.n	801b7d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b7ca:	42bb      	cmp	r3, r7
 801b7cc:	f2c0 8189 	blt.w	801bae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b7d0:	f11c 0c01 	adds.w	ip, ip, #1
 801b7d4:	f100 8177 	bmi.w	801bac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b7d8:	4561      	cmp	r1, ip
 801b7da:	f2c0 8174 	blt.w	801bac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b7de:	3301      	adds	r3, #1
 801b7e0:	f100 8171 	bmi.w	801bac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b7e4:	429a      	cmp	r2, r3
 801b7e6:	f2c0 816e 	blt.w	801bac6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b7ea:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b7ec:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b7ee:	931a      	str	r3, [sp, #104]	; 0x68
 801b7f0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b7f2:	2b00      	cmp	r3, #0
 801b7f4:	f340 8193 	ble.w	801bb1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b7f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b7fa:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b7fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b800:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b804:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b806:	141b      	asrs	r3, r3, #16
 801b808:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b80c:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b810:	f100 81d6 	bmi.w	801bbc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b814:	f100 38ff 	add.w	r8, r0, #4294967295
 801b818:	4543      	cmp	r3, r8
 801b81a:	f280 81d1 	bge.w	801bbc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b81e:	f1bc 0f00 	cmp.w	ip, #0
 801b822:	f2c0 81cd 	blt.w	801bbc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b826:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b82a:	45c4      	cmp	ip, r8
 801b82c:	f280 81c8 	bge.w	801bbc0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b830:	b200      	sxth	r0, r0
 801b832:	fb0c 3300 	mla	r3, ip, r0, r3
 801b836:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b838:	eb04 0803 	add.w	r8, r4, r3
 801b83c:	5ce3      	ldrb	r3, [r4, r3]
 801b83e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b842:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b846:	2a00      	cmp	r2, #0
 801b848:	f000 81af 	beq.w	801bbaa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b84c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b850:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b854:	940e      	str	r4, [sp, #56]	; 0x38
 801b856:	0e24      	lsrs	r4, r4, #24
 801b858:	9415      	str	r4, [sp, #84]	; 0x54
 801b85a:	b179      	cbz	r1, 801b87c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b85c:	eb08 0c00 	add.w	ip, r8, r0
 801b860:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b864:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b868:	900a      	str	r0, [sp, #40]	; 0x28
 801b86a:	0e00      	lsrs	r0, r0, #24
 801b86c:	9013      	str	r0, [sp, #76]	; 0x4c
 801b86e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b872:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b876:	900f      	str	r0, [sp, #60]	; 0x3c
 801b878:	0e00      	lsrs	r0, r0, #24
 801b87a:	9016      	str	r0, [sp, #88]	; 0x58
 801b87c:	b292      	uxth	r2, r2
 801b87e:	b289      	uxth	r1, r1
 801b880:	fb02 f901 	mul.w	r9, r2, r1
 801b884:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b888:	0112      	lsls	r2, r2, #4
 801b88a:	eba2 0809 	sub.w	r8, r2, r9
 801b88e:	b289      	uxth	r1, r1
 801b890:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b894:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b896:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b898:	fa1f f888 	uxth.w	r8, r8
 801b89c:	1a52      	subs	r2, r2, r1
 801b89e:	b292      	uxth	r2, r2
 801b8a0:	fb08 f000 	mul.w	r0, r8, r0
 801b8a4:	fb02 000e 	mla	r0, r2, lr, r0
 801b8a8:	fb01 0004 	mla	r0, r1, r4, r0
 801b8ac:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b8ae:	fb09 0004 	mla	r0, r9, r4, r0
 801b8b2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b8b6:	2800      	cmp	r0, #0
 801b8b8:	f000 80fa 	beq.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b8bc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b8c0:	d01b      	beq.n	801b8fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b8c2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b8c6:	fb0e fa0a 	mul.w	sl, lr, sl
 801b8ca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8ce:	fb0e fe03 	mul.w	lr, lr, r3
 801b8d2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b8d6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8da:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b8de:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b8e2:	4453      	add	r3, sl
 801b8e4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b8e8:	0a1b      	lsrs	r3, r3, #8
 801b8ea:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8ee:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b8f2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8f6:	ea43 030c 	orr.w	r3, r3, ip
 801b8fa:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b8fc:	2cff      	cmp	r4, #255	; 0xff
 801b8fe:	d021      	beq.n	801b944 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b900:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b902:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b906:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b908:	fb04 fb0b 	mul.w	fp, r4, fp
 801b90c:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b90e:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b912:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b914:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b918:	fb04 fa0a 	mul.w	sl, r4, sl
 801b91c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b920:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b924:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b928:	44de      	add	lr, fp
 801b92a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b92e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b932:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b936:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b93a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b93e:	ea4e 040a 	orr.w	r4, lr, sl
 801b942:	940e      	str	r4, [sp, #56]	; 0x38
 801b944:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b946:	2cff      	cmp	r4, #255	; 0xff
 801b948:	d021      	beq.n	801b98e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b94a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b94c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b950:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b952:	fb04 fb0b 	mul.w	fp, r4, fp
 801b956:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b958:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b95c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b95e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b962:	fb04 fa0a 	mul.w	sl, r4, sl
 801b966:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b96a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b96e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b972:	44de      	add	lr, fp
 801b974:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b978:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b97c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b980:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b984:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b988:	ea4e 040a 	orr.w	r4, lr, sl
 801b98c:	940a      	str	r4, [sp, #40]	; 0x28
 801b98e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b990:	2cff      	cmp	r4, #255	; 0xff
 801b992:	d021      	beq.n	801b9d8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b994:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b996:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b99a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b99c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b9a0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b9a2:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b9a6:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b9a8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b9ac:	fb04 fa0a 	mul.w	sl, r4, sl
 801b9b0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9b4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b9b8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b9bc:	44de      	add	lr, fp
 801b9be:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b9c2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b9c6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b9ca:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b9ce:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b9d2:	ea4e 040a 	orr.w	r4, lr, sl
 801b9d6:	940f      	str	r4, [sp, #60]	; 0x3c
 801b9d8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b9da:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b9de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b9e0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b9e4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b9e8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b9ec:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9f0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b9f2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b9f6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b9fa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b9fc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ba00:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801ba04:	fb08 f80e 	mul.w	r8, r8, lr
 801ba08:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ba0c:	fb02 8303 	mla	r3, r2, r3, r8
 801ba10:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801ba12:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801ba14:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ba18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ba1a:	fb01 330a 	mla	r3, r1, sl, r3
 801ba1e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801ba22:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801ba24:	fb09 3901 	mla	r9, r9, r1, r3
 801ba28:	4342      	muls	r2, r0
 801ba2a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ba2e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ba32:	883b      	ldrh	r3, [r7, #0]
 801ba34:	1c50      	adds	r0, r2, #1
 801ba36:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ba3a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ba3e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ba42:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ba46:	1219      	asrs	r1, r3, #8
 801ba48:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ba4c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ba50:	b2c0      	uxtb	r0, r0
 801ba52:	fb12 f204 	smulbb	r2, r2, r4
 801ba56:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ba5a:	fb01 2100 	mla	r1, r1, r0, r2
 801ba5e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ba62:	10da      	asrs	r2, r3, #3
 801ba64:	fa5f fc8c 	uxtb.w	ip, ip
 801ba68:	00db      	lsls	r3, r3, #3
 801ba6a:	fb1c fc04 	smulbb	ip, ip, r4
 801ba6e:	b2db      	uxtb	r3, r3
 801ba70:	b289      	uxth	r1, r1
 801ba72:	fb03 c300 	mla	r3, r3, r0, ip
 801ba76:	fa1f fc83 	uxth.w	ip, r3
 801ba7a:	1c4b      	adds	r3, r1, #1
 801ba7c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ba80:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ba84:	fb1e fe04 	smulbb	lr, lr, r4
 801ba88:	f10c 0301 	add.w	r3, ip, #1
 801ba8c:	fb02 e200 	mla	r2, r2, r0, lr
 801ba90:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801ba94:	b292      	uxth	r2, r2
 801ba96:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801ba9a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ba9e:	430b      	orrs	r3, r1
 801baa0:	1c51      	adds	r1, r2, #1
 801baa2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801baa6:	0952      	lsrs	r2, r2, #5
 801baa8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801baac:	4313      	orrs	r3, r2
 801baae:	803b      	strh	r3, [r7, #0]
 801bab0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bab2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bab4:	441a      	add	r2, r3
 801bab6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bab8:	9229      	str	r2, [sp, #164]	; 0xa4
 801baba:	441d      	add	r5, r3
 801babc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801babe:	3b01      	subs	r3, #1
 801bac0:	3702      	adds	r7, #2
 801bac2:	931a      	str	r3, [sp, #104]	; 0x68
 801bac4:	e694      	b.n	801b7f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801bac6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801bac8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801baca:	441c      	add	r4, r3
 801bacc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bace:	9429      	str	r4, [sp, #164]	; 0xa4
 801bad0:	441d      	add	r5, r3
 801bad2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bad4:	3b01      	subs	r3, #1
 801bad6:	9309      	str	r3, [sp, #36]	; 0x24
 801bad8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bada:	3302      	adds	r3, #2
 801badc:	930c      	str	r3, [sp, #48]	; 0x30
 801bade:	e666      	b.n	801b7ae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801bae0:	d024      	beq.n	801bb2c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801bae2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bae4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801bae6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801bae8:	3b01      	subs	r3, #1
 801baea:	fb00 4003 	mla	r0, r0, r3, r4
 801baee:	1400      	asrs	r0, r0, #16
 801baf0:	f53f ae7b 	bmi.w	801b7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801baf4:	3901      	subs	r1, #1
 801baf6:	4288      	cmp	r0, r1
 801baf8:	f6bf ae77 	bge.w	801b7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801bafc:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801bafe:	fb01 5303 	mla	r3, r1, r3, r5
 801bb02:	141b      	asrs	r3, r3, #16
 801bb04:	f53f ae71 	bmi.w	801b7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801bb08:	3a01      	subs	r2, #1
 801bb0a:	4293      	cmp	r3, r2
 801bb0c:	f6bf ae6d 	bge.w	801b7ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801bb10:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801bb14:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801bb18:	f1bb 0f00 	cmp.w	fp, #0
 801bb1c:	dc70      	bgt.n	801bc00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801bb1e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801bb20:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bb24:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801bb26:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bb2a:	930c      	str	r3, [sp, #48]	; 0x30
 801bb2c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bb2e:	2b00      	cmp	r3, #0
 801bb30:	f340 81be 	ble.w	801beb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801bb34:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bb38:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bb3c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bb40:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb42:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bb46:	ee31 1a05 	vadd.f32	s2, s2, s10
 801bb4a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801bb4e:	eef0 6a62 	vmov.f32	s13, s5
 801bb52:	ee61 7a27 	vmul.f32	s15, s2, s15
 801bb56:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb5a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801bb5e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801bb62:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801bb66:	eef0 6a43 	vmov.f32	s13, s6
 801bb6a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801bb6e:	ee12 2a90 	vmov	r2, s5
 801bb72:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801bb76:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb7a:	ee13 2a10 	vmov	r2, s6
 801bb7e:	932b      	str	r3, [sp, #172]	; 0xac
 801bb80:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb82:	fb92 f3f3 	sdiv	r3, r2, r3
 801bb86:	932c      	str	r3, [sp, #176]	; 0xb0
 801bb88:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801bb8a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801bb8c:	3b01      	subs	r3, #1
 801bb8e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801bb92:	9319      	str	r3, [sp, #100]	; 0x64
 801bb94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bb96:	bf08      	it	eq
 801bb98:	4613      	moveq	r3, r2
 801bb9a:	ee16 5a90 	vmov	r5, s13
 801bb9e:	9309      	str	r3, [sp, #36]	; 0x24
 801bba0:	eeb0 3a67 	vmov.f32	s6, s15
 801bba4:	eef0 2a47 	vmov.f32	s5, s14
 801bba8:	e5f3      	b.n	801b792 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801bbaa:	2900      	cmp	r1, #0
 801bbac:	f43f ae66 	beq.w	801b87c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bbb0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801bbb4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801bbb8:	900a      	str	r0, [sp, #40]	; 0x28
 801bbba:	0e00      	lsrs	r0, r0, #24
 801bbbc:	9013      	str	r0, [sp, #76]	; 0x4c
 801bbbe:	e65d      	b.n	801b87c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801bbc0:	f113 0801 	adds.w	r8, r3, #1
 801bbc4:	f53f af74 	bmi.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbc8:	4540      	cmp	r0, r8
 801bbca:	f6ff af71 	blt.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbce:	f11c 0801 	adds.w	r8, ip, #1
 801bbd2:	f53f af6d 	bmi.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbd6:	45c6      	cmp	lr, r8
 801bbd8:	f6ff af6a 	blt.w	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bbdc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801bbde:	9302      	str	r3, [sp, #8]
 801bbe0:	b200      	sxth	r0, r0
 801bbe2:	fa0f f38e 	sxth.w	r3, lr
 801bbe6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801bbea:	e9cd c203 	strd	ip, r2, [sp, #12]
 801bbee:	9301      	str	r3, [sp, #4]
 801bbf0:	9000      	str	r0, [sp, #0]
 801bbf2:	4633      	mov	r3, r6
 801bbf4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801bbf6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801bbf8:	4639      	mov	r1, r7
 801bbfa:	f7ff fc62 	bl	801b4c2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801bbfe:	e757      	b.n	801bab0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bc00:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801bc02:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801bc04:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bc08:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801bc0a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc0e:	1427      	asrs	r7, r4, #16
 801bc10:	142b      	asrs	r3, r5, #16
 801bc12:	fb01 7303 	mla	r3, r1, r3, r7
 801bc16:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bc18:	18e7      	adds	r7, r4, r3
 801bc1a:	5ce3      	ldrb	r3, [r4, r3]
 801bc1c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bc20:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bc24:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801bc28:	2a00      	cmp	r2, #0
 801bc2a:	f000 8137 	beq.w	801be9c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801bc2e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801bc32:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801bc36:	9410      	str	r4, [sp, #64]	; 0x40
 801bc38:	0e24      	lsrs	r4, r4, #24
 801bc3a:	9417      	str	r4, [sp, #92]	; 0x5c
 801bc3c:	b170      	cbz	r0, 801bc5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bc3e:	eb07 0e01 	add.w	lr, r7, r1
 801bc42:	5c79      	ldrb	r1, [r7, r1]
 801bc44:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc48:	910b      	str	r1, [sp, #44]	; 0x2c
 801bc4a:	0e09      	lsrs	r1, r1, #24
 801bc4c:	9114      	str	r1, [sp, #80]	; 0x50
 801bc4e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801bc52:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bc56:	9111      	str	r1, [sp, #68]	; 0x44
 801bc58:	0e09      	lsrs	r1, r1, #24
 801bc5a:	9118      	str	r1, [sp, #96]	; 0x60
 801bc5c:	b292      	uxth	r2, r2
 801bc5e:	b280      	uxth	r0, r0
 801bc60:	fb02 f800 	mul.w	r8, r2, r0
 801bc64:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801bc68:	0112      	lsls	r2, r2, #4
 801bc6a:	eba2 0e08 	sub.w	lr, r2, r8
 801bc6e:	b280      	uxth	r0, r0
 801bc70:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bc74:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801bc76:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bc78:	fa1f fe8e 	uxth.w	lr, lr
 801bc7c:	1a12      	subs	r2, r2, r0
 801bc7e:	b292      	uxth	r2, r2
 801bc80:	fb0e f101 	mul.w	r1, lr, r1
 801bc84:	fb02 110c 	mla	r1, r2, ip, r1
 801bc88:	fb00 1104 	mla	r1, r0, r4, r1
 801bc8c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801bc8e:	fb08 1104 	mla	r1, r8, r4, r1
 801bc92:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bc96:	2900      	cmp	r1, #0
 801bc98:	f000 80f5 	beq.w	801be86 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801bc9c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801bca0:	d019      	beq.n	801bcd6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801bca2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bca6:	fb0c fa0a 	mul.w	sl, ip, sl
 801bcaa:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bcae:	fb0c fc03 	mul.w	ip, ip, r3
 801bcb2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bcb6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bcba:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bcbe:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801bcc2:	4453      	add	r3, sl
 801bcc4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801bcc8:	0a1b      	lsrs	r3, r3, #8
 801bcca:	0a3f      	lsrs	r7, r7, #8
 801bccc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bcd0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bcd4:	433b      	orrs	r3, r7
 801bcd6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801bcd8:	2cff      	cmp	r4, #255	; 0xff
 801bcda:	d020      	beq.n	801bd1e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801bcdc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bcde:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bce2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801bce4:	4367      	muls	r7, r4
 801bce6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bce8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bcec:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801bcee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bcf2:	fb04 fa0a 	mul.w	sl, r4, sl
 801bcf6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bcfa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bcfe:	44bc      	add	ip, r7
 801bd00:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd04:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd08:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd0c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd10:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd14:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd18:	ea4c 040a 	orr.w	r4, ip, sl
 801bd1c:	9410      	str	r4, [sp, #64]	; 0x40
 801bd1e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bd20:	2cff      	cmp	r4, #255	; 0xff
 801bd22:	d020      	beq.n	801bd66 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801bd24:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bd26:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd2a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bd2c:	4367      	muls	r7, r4
 801bd2e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bd30:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd34:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801bd36:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd3a:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd3e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd42:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd46:	44bc      	add	ip, r7
 801bd48:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd4c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd50:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd54:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bd58:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd5c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bd60:	ea4c 040a 	orr.w	r4, ip, sl
 801bd64:	940b      	str	r4, [sp, #44]	; 0x2c
 801bd66:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801bd68:	2cff      	cmp	r4, #255	; 0xff
 801bd6a:	d020      	beq.n	801bdae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801bd6c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd6e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bd72:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801bd74:	4367      	muls	r7, r4
 801bd76:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bd78:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bd7c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801bd7e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bd82:	fb04 fa0a 	mul.w	sl, r4, sl
 801bd86:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bd8a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bd8e:	44bc      	add	ip, r7
 801bd90:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801bd94:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801bd98:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bd9c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bda0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bda4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801bda8:	ea4c 040a 	orr.w	r4, ip, sl
 801bdac:	9411      	str	r4, [sp, #68]	; 0x44
 801bdae:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bdb0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801bdb4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdb6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801bdba:	fb0e f707 	mul.w	r7, lr, r7
 801bdbe:	fb02 770c 	mla	r7, r2, ip, r7
 801bdc2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bdc6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801bdc8:	fb00 770c 	mla	r7, r0, ip, r7
 801bdcc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bdd0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bdd2:	fb08 770c 	mla	r7, r8, ip, r7
 801bdd6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801bdda:	fb0e fe0c 	mul.w	lr, lr, ip
 801bdde:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bde2:	fb02 e303 	mla	r3, r2, r3, lr
 801bde6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801bde8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801bdea:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bdee:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801bdf0:	fb00 330a 	mla	r3, r0, sl, r3
 801bdf4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801bdf8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801bdfc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801bdfe:	f8b9 0000 	ldrh.w	r0, [r9]
 801be02:	434b      	muls	r3, r1
 801be04:	0a3f      	lsrs	r7, r7, #8
 801be06:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801be0a:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801be0e:	1c59      	adds	r1, r3, #1
 801be10:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801be14:	ea47 070c 	orr.w	r7, r7, ip
 801be18:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801be1c:	1202      	asrs	r2, r0, #8
 801be1e:	0c3b      	lsrs	r3, r7, #16
 801be20:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801be24:	b2c9      	uxtb	r1, r1
 801be26:	fb13 f304 	smulbb	r3, r3, r4
 801be2a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801be2e:	fb02 3201 	mla	r2, r2, r1, r3
 801be32:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801be36:	10c3      	asrs	r3, r0, #3
 801be38:	b2ff      	uxtb	r7, r7
 801be3a:	00c0      	lsls	r0, r0, #3
 801be3c:	b292      	uxth	r2, r2
 801be3e:	fb1c fc04 	smulbb	ip, ip, r4
 801be42:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801be46:	b2c0      	uxtb	r0, r0
 801be48:	fb17 f704 	smulbb	r7, r7, r4
 801be4c:	fb03 c301 	mla	r3, r3, r1, ip
 801be50:	fb00 7001 	mla	r0, r0, r1, r7
 801be54:	f102 0c01 	add.w	ip, r2, #1
 801be58:	b280      	uxth	r0, r0
 801be5a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801be5e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801be62:	1c42      	adds	r2, r0, #1
 801be64:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801be68:	b29b      	uxth	r3, r3
 801be6a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801be6e:	ea42 020c 	orr.w	r2, r2, ip
 801be72:	f103 0c01 	add.w	ip, r3, #1
 801be76:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801be7a:	095b      	lsrs	r3, r3, #5
 801be7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801be80:	431a      	orrs	r2, r3
 801be82:	f8a9 2000 	strh.w	r2, [r9]
 801be86:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801be88:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801be8a:	441a      	add	r2, r3
 801be8c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801be8e:	9229      	str	r2, [sp, #164]	; 0xa4
 801be90:	f109 0902 	add.w	r9, r9, #2
 801be94:	441d      	add	r5, r3
 801be96:	f10b 3bff 	add.w	fp, fp, #4294967295
 801be9a:	e63d      	b.n	801bb18 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801be9c:	2800      	cmp	r0, #0
 801be9e:	f43f aedd 	beq.w	801bc5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801bea2:	5c79      	ldrb	r1, [r7, r1]
 801bea4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bea8:	910b      	str	r1, [sp, #44]	; 0x2c
 801beaa:	0e09      	lsrs	r1, r1, #24
 801beac:	9114      	str	r1, [sp, #80]	; 0x50
 801beae:	e6d5      	b.n	801bc5c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801beb0:	b01f      	add	sp, #124	; 0x7c
 801beb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801beb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801beb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801beba:	b089      	sub	sp, #36	; 0x24
 801bebc:	9101      	str	r1, [sp, #4]
 801bebe:	9801      	ldr	r0, [sp, #4]
 801bec0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801bec4:	8800      	ldrh	r0, [r0, #0]
 801bec6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801beca:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801bece:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801bed2:	1206      	asrs	r6, r0, #8
 801bed4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801bed8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801bedc:	9602      	str	r6, [sp, #8]
 801bede:	10c6      	asrs	r6, r0, #3
 801bee0:	00c0      	lsls	r0, r0, #3
 801bee2:	b2c0      	uxtb	r0, r0
 801bee4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801bee8:	9004      	str	r0, [sp, #16]
 801beea:	2f00      	cmp	r7, #0
 801beec:	fb07 100c 	mla	r0, r7, ip, r1
 801bef0:	9603      	str	r6, [sp, #12]
 801bef2:	eb02 0e00 	add.w	lr, r2, r0
 801bef6:	f2c0 810a 	blt.w	801c10e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801befa:	45b8      	cmp	r8, r7
 801befc:	f340 8107 	ble.w	801c10e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801bf00:	2900      	cmp	r1, #0
 801bf02:	f2c0 8102 	blt.w	801c10a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bf06:	458c      	cmp	ip, r1
 801bf08:	f340 80ff 	ble.w	801c10a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801bf0c:	5c12      	ldrb	r2, [r2, r0]
 801bf0e:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801bf12:	1c4a      	adds	r2, r1, #1
 801bf14:	f100 80fe 	bmi.w	801c114 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bf18:	4594      	cmp	ip, r2
 801bf1a:	f340 80fb 	ble.w	801c114 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801bf1e:	2d00      	cmp	r5, #0
 801bf20:	f000 80fa 	beq.w	801c118 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801bf24:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801bf28:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801bf2c:	3701      	adds	r7, #1
 801bf2e:	f100 80f7 	bmi.w	801c120 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bf32:	45b8      	cmp	r8, r7
 801bf34:	f340 80f4 	ble.w	801c120 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801bf38:	2c00      	cmp	r4, #0
 801bf3a:	f000 80f4 	beq.w	801c126 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801bf3e:	2900      	cmp	r1, #0
 801bf40:	eb0e 020c 	add.w	r2, lr, ip
 801bf44:	f2c0 80ea 	blt.w	801c11c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bf48:	458c      	cmp	ip, r1
 801bf4a:	f340 80e7 	ble.w	801c11c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801bf4e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801bf52:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801bf56:	3101      	adds	r1, #1
 801bf58:	f100 80e8 	bmi.w	801c12c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bf5c:	458c      	cmp	ip, r1
 801bf5e:	f340 80e5 	ble.w	801c12c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801bf62:	2d00      	cmp	r5, #0
 801bf64:	f000 80e4 	beq.w	801c130 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801bf68:	7852      	ldrb	r2, [r2, #1]
 801bf6a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801bf6e:	0e0b      	lsrs	r3, r1, #24
 801bf70:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801bf74:	9300      	str	r3, [sp, #0]
 801bf76:	b2a4      	uxth	r4, r4
 801bf78:	b2ab      	uxth	r3, r5
 801bf7a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801bf7e:	fb03 f904 	mul.w	r9, r3, r4
 801bf82:	fb0a f505 	mul.w	r5, sl, r5
 801bf86:	011b      	lsls	r3, r3, #4
 801bf88:	eba3 0e09 	sub.w	lr, r3, r9
 801bf8c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801bf90:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801bf94:	0a28      	lsrs	r0, r5, #8
 801bf96:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801bf9a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801bf9e:	4405      	add	r5, r0
 801bfa0:	0a2d      	lsrs	r5, r5, #8
 801bfa2:	fb0a f303 	mul.w	r3, sl, r3
 801bfa6:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801bfaa:	9005      	str	r0, [sp, #20]
 801bfac:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801bfb0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801bfb4:	0a1b      	lsrs	r3, r3, #8
 801bfb6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801bfba:	9306      	str	r3, [sp, #24]
 801bfbc:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801bfc0:	fb0b f303 	mul.w	r3, fp, r3
 801bfc4:	0a1d      	lsrs	r5, r3, #8
 801bfc6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801bfca:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801bfce:	fb0b f606 	mul.w	r6, fp, r6
 801bfd2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801bfd6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801bfda:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bfde:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bfe2:	fb08 f707 	mul.w	r7, r8, r7
 801bfe6:	441d      	add	r5, r3
 801bfe8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801bfec:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bff0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801bff4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bff8:	fb08 fc0c 	mul.w	ip, r8, ip
 801bffc:	0a1b      	lsrs	r3, r3, #8
 801bffe:	9307      	str	r3, [sp, #28]
 801c000:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801c004:	0e0b      	lsrs	r3, r1, #24
 801c006:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801c00a:	435f      	muls	r7, r3
 801c00c:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801c010:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c014:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801c018:	4460      	add	r0, ip
 801c01a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c01e:	b2a4      	uxth	r4, r4
 801c020:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c024:	0a2d      	lsrs	r5, r5, #8
 801c026:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c02a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c02e:	fa1f fe8e 	uxth.w	lr, lr
 801c032:	4359      	muls	r1, r3
 801c034:	1b12      	subs	r2, r2, r4
 801c036:	9b05      	ldr	r3, [sp, #20]
 801c038:	44bc      	add	ip, r7
 801c03a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c03e:	b292      	uxth	r2, r2
 801c040:	fb05 f50e 	mul.w	r5, r5, lr
 801c044:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c048:	fb03 5502 	mla	r5, r3, r2, r5
 801c04c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c050:	9b06      	ldr	r3, [sp, #24]
 801c052:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801c056:	0a36      	lsrs	r6, r6, #8
 801c058:	0a00      	lsrs	r0, r0, #8
 801c05a:	fb0c 5509 	mla	r5, ip, r9, r5
 801c05e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801c062:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801c066:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801c06a:	fb00 5504 	mla	r5, r0, r4, r5
 801c06e:	fb0e f606 	mul.w	r6, lr, r6
 801c072:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801c076:	0a09      	lsrs	r1, r1, #8
 801c078:	9b07      	ldr	r3, [sp, #28]
 801c07a:	fb02 6000 	mla	r0, r2, r0, r6
 801c07e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801c082:	fb09 0001 	mla	r0, r9, r1, r0
 801c086:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c08a:	fb0e fe0b 	mul.w	lr, lr, fp
 801c08e:	fb04 0003 	mla	r0, r4, r3, r0
 801c092:	fb02 e20a 	mla	r2, r2, sl, lr
 801c096:	9b00      	ldr	r3, [sp, #0]
 801c098:	fb04 2408 	mla	r4, r4, r8, r2
 801c09c:	fb09 4903 	mla	r9, r9, r3, r4
 801c0a0:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801c0a4:	9b02      	ldr	r3, [sp, #8]
 801c0a6:	9a04      	ldr	r2, [sp, #16]
 801c0a8:	fa5f f989 	uxtb.w	r9, r9
 801c0ac:	fb03 f109 	mul.w	r1, r3, r9
 801c0b0:	9b03      	ldr	r3, [sp, #12]
 801c0b2:	0a2d      	lsrs	r5, r5, #8
 801c0b4:	0a00      	lsrs	r0, r0, #8
 801c0b6:	fb03 f309 	mul.w	r3, r3, r9
 801c0ba:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801c0be:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801c0c2:	4305      	orrs	r5, r0
 801c0c4:	fb02 f909 	mul.w	r9, r2, r9
 801c0c8:	1c58      	adds	r0, r3, #1
 801c0ca:	1c4a      	adds	r2, r1, #1
 801c0cc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c0d0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c0d4:	0a2b      	lsrs	r3, r5, #8
 801c0d6:	0c2a      	lsrs	r2, r5, #16
 801c0d8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c0dc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801c0e0:	00db      	lsls	r3, r3, #3
 801c0e2:	0212      	lsls	r2, r2, #8
 801c0e4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801c0e8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c0ec:	4313      	orrs	r3, r2
 801c0ee:	f109 0201 	add.w	r2, r9, #1
 801c0f2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801c0f6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801c0fa:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801c0fe:	431d      	orrs	r5, r3
 801c100:	9b01      	ldr	r3, [sp, #4]
 801c102:	801d      	strh	r5, [r3, #0]
 801c104:	b009      	add	sp, #36	; 0x24
 801c106:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c10a:	2000      	movs	r0, #0
 801c10c:	e701      	b.n	801bf12 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801c10e:	2600      	movs	r6, #0
 801c110:	4630      	mov	r0, r6
 801c112:	e70b      	b.n	801bf2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c114:	2600      	movs	r6, #0
 801c116:	e709      	b.n	801bf2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c118:	462e      	mov	r6, r5
 801c11a:	e707      	b.n	801bf2c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801c11c:	2700      	movs	r7, #0
 801c11e:	e71a      	b.n	801bf56 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801c120:	2100      	movs	r1, #0
 801c122:	460f      	mov	r7, r1
 801c124:	e723      	b.n	801bf6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c126:	4621      	mov	r1, r4
 801c128:	4627      	mov	r7, r4
 801c12a:	e720      	b.n	801bf6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c12c:	2100      	movs	r1, #0
 801c12e:	e71e      	b.n	801bf6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801c130:	4629      	mov	r1, r5
 801c132:	e71c      	b.n	801bf6e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801c134 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c138:	b09b      	sub	sp, #108	; 0x6c
 801c13a:	9218      	str	r2, [sp, #96]	; 0x60
 801c13c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801c13e:	9116      	str	r1, [sp, #88]	; 0x58
 801c140:	9307      	str	r3, [sp, #28]
 801c142:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801c146:	9019      	str	r0, [sp, #100]	; 0x64
 801c148:	6850      	ldr	r0, [r2, #4]
 801c14a:	6812      	ldr	r2, [r2, #0]
 801c14c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801c14e:	fb00 1303 	mla	r3, r0, r3, r1
 801c152:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c156:	930a      	str	r3, [sp, #40]	; 0x28
 801c158:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c15a:	681b      	ldr	r3, [r3, #0]
 801c15c:	930f      	str	r3, [sp, #60]	; 0x3c
 801c15e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c160:	685e      	ldr	r6, [r3, #4]
 801c162:	3604      	adds	r6, #4
 801c164:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c166:	2b00      	cmp	r3, #0
 801c168:	dc03      	bgt.n	801c172 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801c16a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801c16c:	2b00      	cmp	r3, #0
 801c16e:	f340 8373 	ble.w	801c858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c172:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c174:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c178:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c17c:	1e48      	subs	r0, r1, #1
 801c17e:	1e57      	subs	r7, r2, #1
 801c180:	9b07      	ldr	r3, [sp, #28]
 801c182:	2b00      	cmp	r3, #0
 801c184:	f340 8190 	ble.w	801c4a8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801c188:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c18a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801c18e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801c192:	d406      	bmi.n	801c1a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c194:	4584      	cmp	ip, r0
 801c196:	da04      	bge.n	801c1a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c198:	2b00      	cmp	r3, #0
 801c19a:	db02      	blt.n	801c1a2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801c19c:	42bb      	cmp	r3, r7
 801c19e:	f2c0 8184 	blt.w	801c4aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801c1a2:	f11c 0c01 	adds.w	ip, ip, #1
 801c1a6:	f100 8172 	bmi.w	801c48e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c1aa:	4561      	cmp	r1, ip
 801c1ac:	f2c0 816f 	blt.w	801c48e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c1b0:	3301      	adds	r3, #1
 801c1b2:	f100 816c 	bmi.w	801c48e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c1b6:	429a      	cmp	r2, r3
 801c1b8:	f2c0 8169 	blt.w	801c48e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801c1bc:	9b07      	ldr	r3, [sp, #28]
 801c1be:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801c1c0:	9317      	str	r3, [sp, #92]	; 0x5c
 801c1c2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c1c4:	2b00      	cmp	r3, #0
 801c1c6:	f340 818e 	ble.w	801c4e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801c1ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c1cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c1d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c1d2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801c1d6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c1d8:	141b      	asrs	r3, r3, #16
 801c1da:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801c1de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c1e2:	f100 81d1 	bmi.w	801c588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c1e6:	f101 38ff 	add.w	r8, r1, #4294967295
 801c1ea:	4543      	cmp	r3, r8
 801c1ec:	f280 81cc 	bge.w	801c588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c1f0:	f1bc 0f00 	cmp.w	ip, #0
 801c1f4:	f2c0 81c8 	blt.w	801c588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c1f8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801c1fc:	45c4      	cmp	ip, r8
 801c1fe:	f280 81c3 	bge.w	801c588 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801c202:	b209      	sxth	r1, r1
 801c204:	fb0c 3301 	mla	r3, ip, r1, r3
 801c208:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c20a:	eb04 0803 	add.w	r8, r4, r3
 801c20e:	5ce3      	ldrb	r3, [r4, r3]
 801c210:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c214:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801c218:	2a00      	cmp	r2, #0
 801c21a:	f000 81aa 	beq.w	801c572 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801c21e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801c222:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801c226:	940b      	str	r4, [sp, #44]	; 0x2c
 801c228:	0e24      	lsrs	r4, r4, #24
 801c22a:	9412      	str	r4, [sp, #72]	; 0x48
 801c22c:	b178      	cbz	r0, 801c24e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c22e:	eb08 0c01 	add.w	ip, r8, r1
 801c232:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c236:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c23a:	9108      	str	r1, [sp, #32]
 801c23c:	0e09      	lsrs	r1, r1, #24
 801c23e:	9110      	str	r1, [sp, #64]	; 0x40
 801c240:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801c244:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c248:	910c      	str	r1, [sp, #48]	; 0x30
 801c24a:	0e09      	lsrs	r1, r1, #24
 801c24c:	9113      	str	r1, [sp, #76]	; 0x4c
 801c24e:	b292      	uxth	r2, r2
 801c250:	b280      	uxth	r0, r0
 801c252:	fb02 f900 	mul.w	r9, r2, r0
 801c256:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801c25a:	0112      	lsls	r2, r2, #4
 801c25c:	eba2 0809 	sub.w	r8, r2, r9
 801c260:	b280      	uxth	r0, r0
 801c262:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801c266:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c268:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c26a:	fa1f f888 	uxth.w	r8, r8
 801c26e:	1a12      	subs	r2, r2, r0
 801c270:	b292      	uxth	r2, r2
 801c272:	fb08 f101 	mul.w	r1, r8, r1
 801c276:	fb02 110e 	mla	r1, r2, lr, r1
 801c27a:	fb00 1104 	mla	r1, r0, r4, r1
 801c27e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c280:	fb09 1104 	mla	r1, r9, r4, r1
 801c284:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801c288:	2900      	cmp	r1, #0
 801c28a:	f000 80f5 	beq.w	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c28e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801c292:	d01b      	beq.n	801c2cc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801c294:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c298:	fb0e fa0a 	mul.w	sl, lr, sl
 801c29c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c2a0:	fb0e fe03 	mul.w	lr, lr, r3
 801c2a4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c2a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c2b0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801c2b4:	4453      	add	r3, sl
 801c2b6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801c2ba:	0a1b      	lsrs	r3, r3, #8
 801c2bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2c0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c2c4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c2c8:	ea43 030c 	orr.w	r3, r3, ip
 801c2cc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c2ce:	2cff      	cmp	r4, #255	; 0xff
 801c2d0:	d021      	beq.n	801c316 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801c2d2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c2d4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c2d8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c2da:	fb04 fb0b 	mul.w	fp, r4, fp
 801c2de:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c2e0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c2e4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801c2e6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c2ea:	fb04 fa0a 	mul.w	sl, r4, sl
 801c2ee:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c2f2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c2f6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c2fa:	44de      	add	lr, fp
 801c2fc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c300:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c304:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c308:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c30c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c310:	ea4e 040a 	orr.w	r4, lr, sl
 801c314:	940b      	str	r4, [sp, #44]	; 0x2c
 801c316:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c318:	2cff      	cmp	r4, #255	; 0xff
 801c31a:	d021      	beq.n	801c360 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801c31c:	9c08      	ldr	r4, [sp, #32]
 801c31e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c322:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c324:	fb04 fb0b 	mul.w	fp, r4, fp
 801c328:	9c08      	ldr	r4, [sp, #32]
 801c32a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c32e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801c330:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c334:	fb04 fa0a 	mul.w	sl, r4, sl
 801c338:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c33c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c340:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c344:	44de      	add	lr, fp
 801c346:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c34a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c34e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c352:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c356:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c35a:	ea4e 040a 	orr.w	r4, lr, sl
 801c35e:	9408      	str	r4, [sp, #32]
 801c360:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c362:	2cff      	cmp	r4, #255	; 0xff
 801c364:	d021      	beq.n	801c3aa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801c366:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c368:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801c36c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c36e:	fb04 fb0b 	mul.w	fp, r4, fp
 801c372:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c374:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c378:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801c37a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801c37e:	fb04 fa0a 	mul.w	sl, r4, sl
 801c382:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c386:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801c38a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801c38e:	44de      	add	lr, fp
 801c390:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801c394:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c398:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c39c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801c3a0:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c3a4:	ea4e 040a 	orr.w	r4, lr, sl
 801c3a8:	940c      	str	r4, [sp, #48]	; 0x30
 801c3aa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c3ac:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c3b0:	9c08      	ldr	r4, [sp, #32]
 801c3b2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801c3b6:	fb08 fc0c 	mul.w	ip, r8, ip
 801c3ba:	fb02 cc0e 	mla	ip, r2, lr, ip
 801c3be:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c3c2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801c3c4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801c3c8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801c3cc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c3ce:	fb09 cc0e 	mla	ip, r9, lr, ip
 801c3d2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801c3d6:	fb08 f80e 	mul.w	r8, r8, lr
 801c3da:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c3de:	fb02 8303 	mla	r3, r2, r3, r8
 801c3e2:	9a08      	ldr	r2, [sp, #32]
 801c3e4:	f8b7 8000 	ldrh.w	r8, [r7]
 801c3e8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801c3ec:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801c3ee:	fb00 330a 	mla	r3, r0, sl, r3
 801c3f2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801c3f6:	fb09 3900 	mla	r9, r9, r0, r3
 801c3fa:	43c9      	mvns	r1, r1
 801c3fc:	ea4f 2228 	mov.w	r2, r8, asr #8
 801c400:	fa5f fe81 	uxtb.w	lr, r1
 801c404:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c408:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c40c:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801c410:	fb02 f20e 	mul.w	r2, r2, lr
 801c414:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c418:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801c41c:	ea4c 0c09 	orr.w	ip, ip, r9
 801c420:	1c53      	adds	r3, r2, #1
 801c422:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801c426:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801c42a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801c42e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c432:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801c436:	4a63      	ldr	r2, [pc, #396]	; (801c5c4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801c438:	fb00 f00e 	mul.w	r0, r0, lr
 801c43c:	b2db      	uxtb	r3, r3
 801c43e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801c442:	1c43      	adds	r3, r0, #1
 801c444:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801c448:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801c44c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801c450:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801c454:	b2c9      	uxtb	r1, r1
 801c456:	00db      	lsls	r3, r3, #3
 801c458:	fb01 f10e 	mul.w	r1, r1, lr
 801c45c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c460:	4313      	orrs	r3, r2
 801c462:	1c4a      	adds	r2, r1, #1
 801c464:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c468:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801c46c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801c470:	ea4c 0c03 	orr.w	ip, ip, r3
 801c474:	f8a7 c000 	strh.w	ip, [r7]
 801c478:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c47a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c47c:	441a      	add	r2, r3
 801c47e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c480:	9225      	str	r2, [sp, #148]	; 0x94
 801c482:	441d      	add	r5, r3
 801c484:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801c486:	3b01      	subs	r3, #1
 801c488:	3702      	adds	r7, #2
 801c48a:	9317      	str	r3, [sp, #92]	; 0x5c
 801c48c:	e699      	b.n	801c1c2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801c48e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c490:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c492:	441c      	add	r4, r3
 801c494:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c496:	9425      	str	r4, [sp, #148]	; 0x94
 801c498:	441d      	add	r5, r3
 801c49a:	9b07      	ldr	r3, [sp, #28]
 801c49c:	3b01      	subs	r3, #1
 801c49e:	9307      	str	r3, [sp, #28]
 801c4a0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c4a2:	3302      	adds	r3, #2
 801c4a4:	930a      	str	r3, [sp, #40]	; 0x28
 801c4a6:	e66b      	b.n	801c180 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801c4a8:	d024      	beq.n	801c4f4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801c4aa:	9b07      	ldr	r3, [sp, #28]
 801c4ac:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801c4ae:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c4b0:	3b01      	subs	r3, #1
 801c4b2:	fb00 4003 	mla	r0, r0, r3, r4
 801c4b6:	1400      	asrs	r0, r0, #16
 801c4b8:	f53f ae80 	bmi.w	801c1bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c4bc:	3901      	subs	r1, #1
 801c4be:	4288      	cmp	r0, r1
 801c4c0:	f6bf ae7c 	bge.w	801c1bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c4c4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801c4c6:	fb01 5303 	mla	r3, r1, r3, r5
 801c4ca:	141b      	asrs	r3, r3, #16
 801c4cc:	f53f ae76 	bmi.w	801c1bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c4d0:	3a01      	subs	r2, #1
 801c4d2:	4293      	cmp	r3, r2
 801c4d4:	f6bf ae72 	bge.w	801c1bc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801c4d8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801c4dc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801c4e0:	f1bb 0f00 	cmp.w	fp, #0
 801c4e4:	dc70      	bgt.n	801c5c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801c4e6:	9b07      	ldr	r3, [sp, #28]
 801c4e8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801c4ec:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801c4ee:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801c4f2:	930a      	str	r3, [sp, #40]	; 0x28
 801c4f4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c4f6:	2b00      	cmp	r3, #0
 801c4f8:	f340 81ae 	ble.w	801c858 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801c4fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 801c500:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801c504:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801c508:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c50a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801c50e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c512:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c516:	eef0 6a62 	vmov.f32	s13, s5
 801c51a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c51e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c522:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c526:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801c52a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c52e:	eef0 6a43 	vmov.f32	s13, s6
 801c532:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c536:	ee12 2a90 	vmov	r2, s5
 801c53a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c53e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c542:	ee13 2a10 	vmov	r2, s6
 801c546:	9327      	str	r3, [sp, #156]	; 0x9c
 801c548:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c54a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c54e:	9328      	str	r3, [sp, #160]	; 0xa0
 801c550:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c552:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c554:	3b01      	subs	r3, #1
 801c556:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c55a:	9316      	str	r3, [sp, #88]	; 0x58
 801c55c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c55e:	bf08      	it	eq
 801c560:	4613      	moveq	r3, r2
 801c562:	ee16 5a90 	vmov	r5, s13
 801c566:	9307      	str	r3, [sp, #28]
 801c568:	eeb0 3a67 	vmov.f32	s6, s15
 801c56c:	eef0 2a47 	vmov.f32	s5, s14
 801c570:	e5f8      	b.n	801c164 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c572:	2800      	cmp	r0, #0
 801c574:	f43f ae6b 	beq.w	801c24e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c578:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c57c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c580:	9108      	str	r1, [sp, #32]
 801c582:	0e09      	lsrs	r1, r1, #24
 801c584:	9110      	str	r1, [sp, #64]	; 0x40
 801c586:	e662      	b.n	801c24e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c588:	f113 0801 	adds.w	r8, r3, #1
 801c58c:	f53f af74 	bmi.w	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c590:	4541      	cmp	r1, r8
 801c592:	f6ff af71 	blt.w	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c596:	f11c 0801 	adds.w	r8, ip, #1
 801c59a:	f53f af6d 	bmi.w	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c59e:	45c6      	cmp	lr, r8
 801c5a0:	f6ff af6a 	blt.w	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c5a4:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c5a8:	b209      	sxth	r1, r1
 801c5aa:	fa0f f38e 	sxth.w	r3, lr
 801c5ae:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c5b2:	9301      	str	r3, [sp, #4]
 801c5b4:	9100      	str	r1, [sp, #0]
 801c5b6:	4633      	mov	r3, r6
 801c5b8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c5ba:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c5bc:	4639      	mov	r1, r7
 801c5be:	f7ff fc7a 	bl	801beb6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c5c2:	e759      	b.n	801c478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c5c4:	fffff800 	.word	0xfffff800
 801c5c8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c5ca:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c5cc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c5d0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c5d2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c5d6:	1427      	asrs	r7, r4, #16
 801c5d8:	142b      	asrs	r3, r5, #16
 801c5da:	fb01 7303 	mla	r3, r1, r3, r7
 801c5de:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c5e0:	18e7      	adds	r7, r4, r3
 801c5e2:	5ce3      	ldrb	r3, [r4, r3]
 801c5e4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c5e8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c5ec:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c5f0:	2a00      	cmp	r2, #0
 801c5f2:	f000 8127 	beq.w	801c844 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c5f6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c5fa:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c5fe:	940d      	str	r4, [sp, #52]	; 0x34
 801c600:	0e24      	lsrs	r4, r4, #24
 801c602:	9414      	str	r4, [sp, #80]	; 0x50
 801c604:	b170      	cbz	r0, 801c624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c606:	eb07 0e01 	add.w	lr, r7, r1
 801c60a:	5c79      	ldrb	r1, [r7, r1]
 801c60c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c610:	9109      	str	r1, [sp, #36]	; 0x24
 801c612:	0e09      	lsrs	r1, r1, #24
 801c614:	9111      	str	r1, [sp, #68]	; 0x44
 801c616:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c61a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c61e:	910e      	str	r1, [sp, #56]	; 0x38
 801c620:	0e09      	lsrs	r1, r1, #24
 801c622:	9115      	str	r1, [sp, #84]	; 0x54
 801c624:	b292      	uxth	r2, r2
 801c626:	b280      	uxth	r0, r0
 801c628:	fb02 f800 	mul.w	r8, r2, r0
 801c62c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c630:	0112      	lsls	r2, r2, #4
 801c632:	eba2 0e08 	sub.w	lr, r2, r8
 801c636:	b280      	uxth	r0, r0
 801c638:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c63c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c63e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c640:	fa1f fe8e 	uxth.w	lr, lr
 801c644:	1a09      	subs	r1, r1, r0
 801c646:	b289      	uxth	r1, r1
 801c648:	fb0e f202 	mul.w	r2, lr, r2
 801c64c:	fb01 220c 	mla	r2, r1, ip, r2
 801c650:	fb00 2204 	mla	r2, r0, r4, r2
 801c654:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c656:	fb08 2204 	mla	r2, r8, r4, r2
 801c65a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c65e:	2a00      	cmp	r2, #0
 801c660:	f000 80e5 	beq.w	801c82e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c664:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c668:	d019      	beq.n	801c69e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c66a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c66e:	fb0c fa0a 	mul.w	sl, ip, sl
 801c672:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c676:	fb0c fc03 	mul.w	ip, ip, r3
 801c67a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c67e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c682:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c686:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c68a:	4453      	add	r3, sl
 801c68c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c690:	0a1b      	lsrs	r3, r3, #8
 801c692:	0a3f      	lsrs	r7, r7, #8
 801c694:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c698:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c69c:	433b      	orrs	r3, r7
 801c69e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c6a0:	2cff      	cmp	r4, #255	; 0xff
 801c6a2:	d020      	beq.n	801c6e6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c6a4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c6a6:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c6aa:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c6ac:	4367      	muls	r7, r4
 801c6ae:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c6b0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c6b4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c6b6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c6ba:	fb04 fa0a 	mul.w	sl, r4, sl
 801c6be:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c6c2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c6c6:	44bc      	add	ip, r7
 801c6c8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c6cc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c6d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c6d4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c6d8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c6dc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c6e0:	ea4c 040a 	orr.w	r4, ip, sl
 801c6e4:	940d      	str	r4, [sp, #52]	; 0x34
 801c6e6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c6e8:	2cff      	cmp	r4, #255	; 0xff
 801c6ea:	d020      	beq.n	801c72e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c6ec:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c6ee:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c6f2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c6f4:	4367      	muls	r7, r4
 801c6f6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c6f8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c6fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c6fe:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c702:	fb04 fa0a 	mul.w	sl, r4, sl
 801c706:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c70a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c70e:	44bc      	add	ip, r7
 801c710:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c714:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c718:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c71c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c720:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c724:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c728:	ea4c 040a 	orr.w	r4, ip, sl
 801c72c:	9409      	str	r4, [sp, #36]	; 0x24
 801c72e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c730:	2cff      	cmp	r4, #255	; 0xff
 801c732:	d020      	beq.n	801c776 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c734:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c736:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c73a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c73c:	4367      	muls	r7, r4
 801c73e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c740:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c744:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c746:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c74a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c74e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c752:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c756:	44bc      	add	ip, r7
 801c758:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c75c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c760:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c764:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c768:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c76c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c770:	ea4c 040a 	orr.w	r4, ip, sl
 801c774:	940e      	str	r4, [sp, #56]	; 0x38
 801c776:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c778:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c77c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c77e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c782:	fb0e f707 	mul.w	r7, lr, r7
 801c786:	fb01 770c 	mla	r7, r1, ip, r7
 801c78a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c78e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c790:	fb00 770c 	mla	r7, r0, ip, r7
 801c794:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c798:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c79a:	fb08 770c 	mla	r7, r8, ip, r7
 801c79e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c7a2:	fb0e fe0c 	mul.w	lr, lr, ip
 801c7a6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c7aa:	fb01 e303 	mla	r3, r1, r3, lr
 801c7ae:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c7b0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c7b4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c7b6:	fb00 330a 	mla	r3, r0, sl, r3
 801c7ba:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c7be:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c7c2:	f8b9 3000 	ldrh.w	r3, [r9]
 801c7c6:	43d2      	mvns	r2, r2
 801c7c8:	1218      	asrs	r0, r3, #8
 801c7ca:	b2d2      	uxtb	r2, r2
 801c7cc:	10d9      	asrs	r1, r3, #3
 801c7ce:	0a3f      	lsrs	r7, r7, #8
 801c7d0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c7d4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c7d8:	00db      	lsls	r3, r3, #3
 801c7da:	4350      	muls	r0, r2
 801c7dc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c7e0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c7e4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c7e8:	b2db      	uxtb	r3, r3
 801c7ea:	ea47 070c 	orr.w	r7, r7, ip
 801c7ee:	4351      	muls	r1, r2
 801c7f0:	4353      	muls	r3, r2
 801c7f2:	1c42      	adds	r2, r0, #1
 801c7f4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c7f8:	0c3a      	lsrs	r2, r7, #16
 801c7fa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c7fe:	4a18      	ldr	r2, [pc, #96]	; (801c860 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c800:	b2c0      	uxtb	r0, r0
 801c802:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c806:	1c4a      	adds	r2, r1, #1
 801c808:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c80c:	0a3a      	lsrs	r2, r7, #8
 801c80e:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c812:	00c9      	lsls	r1, r1, #3
 801c814:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c818:	4301      	orrs	r1, r0
 801c81a:	1c58      	adds	r0, r3, #1
 801c81c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c820:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c824:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c828:	4308      	orrs	r0, r1
 801c82a:	f8a9 0000 	strh.w	r0, [r9]
 801c82e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c830:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c832:	441a      	add	r2, r3
 801c834:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c836:	9225      	str	r2, [sp, #148]	; 0x94
 801c838:	f109 0902 	add.w	r9, r9, #2
 801c83c:	441d      	add	r5, r3
 801c83e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c842:	e64d      	b.n	801c4e0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c844:	2800      	cmp	r0, #0
 801c846:	f43f aeed 	beq.w	801c624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c84a:	5c79      	ldrb	r1, [r7, r1]
 801c84c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c850:	9109      	str	r1, [sp, #36]	; 0x24
 801c852:	0e09      	lsrs	r1, r1, #24
 801c854:	9111      	str	r1, [sp, #68]	; 0x44
 801c856:	e6e5      	b.n	801c624 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c858:	b01b      	add	sp, #108	; 0x6c
 801c85a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c85e:	bf00      	nop
 801c860:	fffff800 	.word	0xfffff800

0801c864 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c864:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c868:	b085      	sub	sp, #20
 801c86a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c86e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c872:	9103      	str	r1, [sp, #12]
 801c874:	fb00 7406 	mla	r4, r0, r6, r7
 801c878:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c87c:	2800      	cmp	r0, #0
 801c87e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c882:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c886:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c88a:	9501      	str	r5, [sp, #4]
 801c88c:	eb03 0904 	add.w	r9, r3, r4
 801c890:	f2c0 8150 	blt.w	801cb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c894:	4583      	cmp	fp, r0
 801c896:	f340 814d 	ble.w	801cb34 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c89a:	2f00      	cmp	r7, #0
 801c89c:	f2c0 8146 	blt.w	801cb2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c8a0:	42be      	cmp	r6, r7
 801c8a2:	f340 8143 	ble.w	801cb2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c8a6:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c8aa:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c8ae:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c8b2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c8b6:	4355      	muls	r5, r2
 801c8b8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8bc:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c8c0:	fb0c f203 	mul.w	r2, ip, r3
 801c8c4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c8c8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c8cc:	441d      	add	r5, r3
 801c8ce:	f102 0320 	add.w	r3, r2, #32
 801c8d2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c8d6:	0a1b      	lsrs	r3, r3, #8
 801c8d8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c8dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c8e0:	431c      	orrs	r4, r3
 801c8e2:	1c7b      	adds	r3, r7, #1
 801c8e4:	f100 812b 	bmi.w	801cb3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c8e8:	429e      	cmp	r6, r3
 801c8ea:	f340 8128 	ble.w	801cb3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c8ee:	2900      	cmp	r1, #0
 801c8f0:	f000 8128 	beq.w	801cb44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c8f4:	9a01      	ldr	r2, [sp, #4]
 801c8f6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c8fa:	8855      	ldrh	r5, [r2, #2]
 801c8fc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c900:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c904:	fb08 f802 	mul.w	r8, r8, r2
 801c908:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c90c:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c910:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c914:	435d      	muls	r5, r3
 801c916:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c91a:	44d0      	add	r8, sl
 801c91c:	f105 0a20 	add.w	sl, r5, #32
 801c920:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c924:	0a2d      	lsrs	r5, r5, #8
 801c926:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c92a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c92e:	432a      	orrs	r2, r5
 801c930:	3001      	adds	r0, #1
 801c932:	f100 810d 	bmi.w	801cb50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c936:	4583      	cmp	fp, r0
 801c938:	f340 810a 	ble.w	801cb50 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c93c:	f1be 0f00 	cmp.w	lr, #0
 801c940:	f000 810b 	beq.w	801cb5a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c944:	2f00      	cmp	r7, #0
 801c946:	f2c0 8100 	blt.w	801cb4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c94a:	42be      	cmp	r6, r7
 801c94c:	f340 80fd 	ble.w	801cb4a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c950:	9801      	ldr	r0, [sp, #4]
 801c952:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c956:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c95a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c95e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c962:	fb0a fa00 	mul.w	sl, sl, r0
 801c966:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c96a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c96e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c972:	fb05 f808 	mul.w	r8, r5, r8
 801c976:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c97a:	4482      	add	sl, r0
 801c97c:	f108 0020 	add.w	r0, r8, #32
 801c980:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c984:	0a00      	lsrs	r0, r0, #8
 801c986:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c98a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c98e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c992:	3701      	adds	r7, #1
 801c994:	f100 80e6 	bmi.w	801cb64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c998:	42be      	cmp	r6, r7
 801c99a:	f340 80e3 	ble.w	801cb64 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c99e:	2900      	cmp	r1, #0
 801c9a0:	f000 80e3 	beq.w	801cb6a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c9a4:	3601      	adds	r6, #1
 801c9a6:	9801      	ldr	r0, [sp, #4]
 801c9a8:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c9ac:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c9b0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c9b4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c9b8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9bc:	fb09 f906 	mul.w	r9, r9, r6
 801c9c0:	fb07 f800 	mul.w	r8, r7, r0
 801c9c4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c9c8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c9cc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c9d0:	44d1      	add	r9, sl
 801c9d2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c9d6:	f108 0020 	add.w	r0, r8, #32
 801c9da:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c9de:	0a00      	lsrs	r0, r0, #8
 801c9e0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c9e4:	4330      	orrs	r0, r6
 801c9e6:	b28e      	uxth	r6, r1
 801c9e8:	fa1f f98e 	uxth.w	r9, lr
 801c9ec:	fb06 f809 	mul.w	r8, r6, r9
 801c9f0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c9f4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c9f8:	0136      	lsls	r6, r6, #4
 801c9fa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c9fe:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801ca02:	9601      	str	r6, [sp, #4]
 801ca04:	ea4a 0404 	orr.w	r4, sl, r4
 801ca08:	fa1f f689 	uxth.w	r6, r9
 801ca0c:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ca10:	fb11 f90e 	smulbb	r9, r1, lr
 801ca14:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801ca18:	9602      	str	r6, [sp, #8]
 801ca1a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca1e:	4626      	mov	r6, r4
 801ca20:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ca24:	f1ce 0410 	rsb	r4, lr, #16
 801ca28:	1a64      	subs	r4, r4, r1
 801ca2a:	ea4a 0202 	orr.w	r2, sl, r2
 801ca2e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801ca32:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801ca36:	434a      	muls	r2, r1
 801ca38:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801ca3c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ca40:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801ca44:	fb04 2406 	mla	r4, r4, r6, r2
 801ca48:	ea4a 0000 	orr.w	r0, sl, r0
 801ca4c:	fb09 4200 	mla	r2, r9, r0, r4
 801ca50:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801ca54:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801ca58:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801ca5c:	ea44 0b0b 	orr.w	fp, r4, fp
 801ca60:	9c01      	ldr	r4, [sp, #4]
 801ca62:	9e02      	ldr	r6, [sp, #8]
 801ca64:	9903      	ldr	r1, [sp, #12]
 801ca66:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801ca6a:	1ba4      	subs	r4, r4, r6
 801ca6c:	9e01      	ldr	r6, [sp, #4]
 801ca6e:	8808      	ldrh	r0, [r1, #0]
 801ca70:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801ca74:	eba6 0608 	sub.w	r6, r6, r8
 801ca78:	b2b6      	uxth	r6, r6
 801ca7a:	b2a4      	uxth	r4, r4
 801ca7c:	4373      	muls	r3, r6
 801ca7e:	fb0c 3304 	mla	r3, ip, r4, r3
 801ca82:	9c02      	ldr	r4, [sp, #8]
 801ca84:	fb04 3505 	mla	r5, r4, r5, r3
 801ca88:	fb08 5707 	mla	r7, r8, r7, r5
 801ca8c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801ca90:	b289      	uxth	r1, r1
 801ca92:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801ca96:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801ca9a:	434f      	muls	r7, r1
 801ca9c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801caa0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801caa4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801caa8:	1c7b      	adds	r3, r7, #1
 801caaa:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801caae:	ea42 0e0e 	orr.w	lr, r2, lr
 801cab2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801cab6:	fa1f f28e 	uxth.w	r2, lr
 801caba:	1203      	asrs	r3, r0, #8
 801cabc:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801cac0:	b2ff      	uxtb	r7, r7
 801cac2:	1215      	asrs	r5, r2, #8
 801cac4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801cac8:	fb13 f307 	smulbb	r3, r3, r7
 801cacc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cad0:	fb05 3501 	mla	r5, r5, r1, r3
 801cad4:	10c3      	asrs	r3, r0, #3
 801cad6:	10d4      	asrs	r4, r2, #3
 801cad8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801cadc:	fb13 f307 	smulbb	r3, r3, r7
 801cae0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801cae4:	fb04 3401 	mla	r4, r4, r1, r3
 801cae8:	00c3      	lsls	r3, r0, #3
 801caea:	00d2      	lsls	r2, r2, #3
 801caec:	b2db      	uxtb	r3, r3
 801caee:	fb13 f307 	smulbb	r3, r3, r7
 801caf2:	b2d2      	uxtb	r2, r2
 801caf4:	fb02 3101 	mla	r1, r2, r1, r3
 801caf8:	b2ad      	uxth	r5, r5
 801cafa:	b289      	uxth	r1, r1
 801cafc:	b2a4      	uxth	r4, r4
 801cafe:	1c6b      	adds	r3, r5, #1
 801cb00:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cb04:	1c62      	adds	r2, r4, #1
 801cb06:	1c4b      	adds	r3, r1, #1
 801cb08:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801cb0c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801cb10:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cb14:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801cb18:	0964      	lsrs	r4, r4, #5
 801cb1a:	432b      	orrs	r3, r5
 801cb1c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801cb20:	9a03      	ldr	r2, [sp, #12]
 801cb22:	4323      	orrs	r3, r4
 801cb24:	8013      	strh	r3, [r2, #0]
 801cb26:	b005      	add	sp, #20
 801cb28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cb2c:	f04f 0c00 	mov.w	ip, #0
 801cb30:	4664      	mov	r4, ip
 801cb32:	e6d6      	b.n	801c8e2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801cb34:	2300      	movs	r3, #0
 801cb36:	469c      	mov	ip, r3
 801cb38:	461a      	mov	r2, r3
 801cb3a:	461c      	mov	r4, r3
 801cb3c:	e6f8      	b.n	801c930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cb3e:	2300      	movs	r3, #0
 801cb40:	461a      	mov	r2, r3
 801cb42:	e6f5      	b.n	801c930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cb44:	460b      	mov	r3, r1
 801cb46:	460a      	mov	r2, r1
 801cb48:	e6f2      	b.n	801c930 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801cb4a:	2500      	movs	r5, #0
 801cb4c:	46ab      	mov	fp, r5
 801cb4e:	e720      	b.n	801c992 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801cb50:	2700      	movs	r7, #0
 801cb52:	463d      	mov	r5, r7
 801cb54:	4638      	mov	r0, r7
 801cb56:	46bb      	mov	fp, r7
 801cb58:	e745      	b.n	801c9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801cb5a:	4677      	mov	r7, lr
 801cb5c:	4675      	mov	r5, lr
 801cb5e:	4670      	mov	r0, lr
 801cb60:	46f3      	mov	fp, lr
 801cb62:	e740      	b.n	801c9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801cb64:	2700      	movs	r7, #0
 801cb66:	4638      	mov	r0, r7
 801cb68:	e73d      	b.n	801c9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801cb6a:	460f      	mov	r7, r1
 801cb6c:	4608      	mov	r0, r1
 801cb6e:	e73a      	b.n	801c9e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801cb70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801cb70:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801cb74:	b097      	sub	sp, #92	; 0x5c
 801cb76:	9214      	str	r2, [sp, #80]	; 0x50
 801cb78:	9308      	str	r3, [sp, #32]
 801cb7a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801cb7c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801cb80:	9312      	str	r3, [sp, #72]	; 0x48
 801cb82:	9111      	str	r1, [sp, #68]	; 0x44
 801cb84:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801cb88:	9015      	str	r0, [sp, #84]	; 0x54
 801cb8a:	6850      	ldr	r0, [r2, #4]
 801cb8c:	6812      	ldr	r2, [r2, #0]
 801cb8e:	fb00 1303 	mla	r3, r0, r3, r1
 801cb92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801cb96:	9309      	str	r3, [sp, #36]	; 0x24
 801cb98:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb9a:	681b      	ldr	r3, [r3, #0]
 801cb9c:	930b      	str	r3, [sp, #44]	; 0x2c
 801cb9e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cba0:	685b      	ldr	r3, [r3, #4]
 801cba2:	930c      	str	r3, [sp, #48]	; 0x30
 801cba4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801cba8:	930a      	str	r3, [sp, #40]	; 0x28
 801cbaa:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cbac:	2b00      	cmp	r3, #0
 801cbae:	dc03      	bgt.n	801cbb8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801cbb0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801cbb2:	2b00      	cmp	r3, #0
 801cbb4:	f340 83cb 	ble.w	801d34e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cbb8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cbba:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cbbe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801cbc2:	1e48      	subs	r0, r1, #1
 801cbc4:	1e55      	subs	r5, r2, #1
 801cbc6:	9b08      	ldr	r3, [sp, #32]
 801cbc8:	2b00      	cmp	r3, #0
 801cbca:	f340 81a3 	ble.w	801cf14 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801cbce:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801cbd0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cbd2:	1436      	asrs	r6, r6, #16
 801cbd4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801cbd8:	d406      	bmi.n	801cbe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cbda:	4286      	cmp	r6, r0
 801cbdc:	da04      	bge.n	801cbe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cbde:	2b00      	cmp	r3, #0
 801cbe0:	db02      	blt.n	801cbe8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801cbe2:	42ab      	cmp	r3, r5
 801cbe4:	f2c0 8197 	blt.w	801cf16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801cbe8:	3601      	adds	r6, #1
 801cbea:	f100 8184 	bmi.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cbee:	42b1      	cmp	r1, r6
 801cbf0:	f2c0 8181 	blt.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cbf4:	3301      	adds	r3, #1
 801cbf6:	f100 817e 	bmi.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cbfa:	429a      	cmp	r2, r3
 801cbfc:	f2c0 817b 	blt.w	801cef6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801cc00:	9b08      	ldr	r3, [sp, #32]
 801cc02:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801cc04:	9313      	str	r3, [sp, #76]	; 0x4c
 801cc06:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cc0a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cc0c:	2b00      	cmp	r3, #0
 801cc0e:	f340 81a4 	ble.w	801cf5a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801cc12:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cc14:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801cc16:	1418      	asrs	r0, r3, #16
 801cc18:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cc1a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801cc1e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cc20:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801cc24:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cc26:	142d      	asrs	r5, r5, #16
 801cc28:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801cc2c:	f100 81f8 	bmi.w	801d020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cc30:	f102 3eff 	add.w	lr, r2, #4294967295
 801cc34:	4575      	cmp	r5, lr
 801cc36:	f280 81f3 	bge.w	801d020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cc3a:	2800      	cmp	r0, #0
 801cc3c:	f2c0 81f0 	blt.w	801d020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cc40:	f103 3eff 	add.w	lr, r3, #4294967295
 801cc44:	4570      	cmp	r0, lr
 801cc46:	f280 81eb 	bge.w	801d020 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801cc4a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cc4c:	b212      	sxth	r2, r2
 801cc4e:	fb00 5002 	mla	r0, r0, r2, r5
 801cc52:	fa1f fe81 	uxth.w	lr, r1
 801cc56:	eb03 0a00 	add.w	sl, r3, r0
 801cc5a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801cc5e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801cc62:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cc66:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801cc6a:	b29b      	uxth	r3, r3
 801cc6c:	f1bc 0f00 	cmp.w	ip, #0
 801cc70:	f000 81b9 	beq.w	801cfe6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801cc74:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801cc78:	940d      	str	r4, [sp, #52]	; 0x34
 801cc7a:	eb0a 0b02 	add.w	fp, sl, r2
 801cc7e:	fa1f fa8c 	uxth.w	sl, ip
 801cc82:	fb0a fe0e 	mul.w	lr, sl, lr
 801cc86:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801cc8a:	fa1f fa8a 	uxth.w	sl, sl
 801cc8e:	eba5 050e 	sub.w	r5, r5, lr
 801cc92:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cc96:	940e      	str	r4, [sp, #56]	; 0x38
 801cc98:	eba3 030a 	sub.w	r3, r3, sl
 801cc9c:	b2ad      	uxth	r5, r5
 801cc9e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cca0:	b29b      	uxth	r3, r3
 801cca2:	fb08 f505 	mul.w	r5, r8, r5
 801cca6:	fb09 5303 	mla	r3, r9, r3, r5
 801ccaa:	fb0a 3304 	mla	r3, sl, r4, r3
 801ccae:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801ccb0:	fb0e 3304 	mla	r3, lr, r4, r3
 801ccb4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801ccb8:	2b00      	cmp	r3, #0
 801ccba:	f000 810f 	beq.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801ccbe:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801ccc0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801ccc4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801ccc8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801cccc:	f000 8190 	beq.w	801cff0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801ccd0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801ccd4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801ccd8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccdc:	fb09 f000 	mul.w	r0, r9, r0
 801cce0:	fb0a fe0e 	mul.w	lr, sl, lr
 801cce4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801cce8:	f100 0b20 	add.w	fp, r0, #32
 801ccec:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801ccf0:	44ce      	add	lr, r9
 801ccf2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801ccf6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ccfa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801ccfe:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cd02:	ea4e 0909 	orr.w	r9, lr, r9
 801cd06:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cd0a:	8868      	ldrh	r0, [r5, #2]
 801cd0c:	d019      	beq.n	801cd42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801cd0e:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801cd12:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cd16:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd1a:	fb08 f800 	mul.w	r8, r8, r0
 801cd1e:	fb0a fe0e 	mul.w	lr, sl, lr
 801cd22:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801cd26:	f108 0b20 	add.w	fp, r8, #32
 801cd2a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801cd2e:	4486      	add	lr, r0
 801cd30:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801cd34:	0a00      	lsrs	r0, r0, #8
 801cd36:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801cd3a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cd3e:	ea4e 0000 	orr.w	r0, lr, r0
 801cd42:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801cd46:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801cd4a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801cd4e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cd52:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd56:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd5a:	ea4e 0909 	orr.w	r9, lr, r9
 801cd5e:	ea4a 0000 	orr.w	r0, sl, r0
 801cd62:	f1bc 0f00 	cmp.w	ip, #0
 801cd66:	f000 8145 	beq.w	801cff4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801cd6a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801cd6e:	3a01      	subs	r2, #1
 801cd70:	0052      	lsls	r2, r2, #1
 801cd72:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801cd74:	3202      	adds	r2, #2
 801cd76:	2cff      	cmp	r4, #255	; 0xff
 801cd78:	eb05 0e02 	add.w	lr, r5, r2
 801cd7c:	5aaa      	ldrh	r2, [r5, r2]
 801cd7e:	d018      	beq.n	801cdb2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801cd80:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801cd84:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cd88:	fb04 fa02 	mul.w	sl, r4, r2
 801cd8c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cd90:	fb08 f805 	mul.w	r8, r8, r5
 801cd94:	f10a 0520 	add.w	r5, sl, #32
 801cd98:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801cd9c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801cda0:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cda4:	4442      	add	r2, r8
 801cda6:	0a2d      	lsrs	r5, r5, #8
 801cda8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801cdac:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdb0:	432a      	orrs	r2, r5
 801cdb2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801cdb4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801cdb8:	2cff      	cmp	r4, #255	; 0xff
 801cdba:	d01a      	beq.n	801cdf2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801cdbc:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801cdc0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cdc4:	fb04 fa05 	mul.w	sl, r4, r5
 801cdc8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cdcc:	fb08 f80e 	mul.w	r8, r8, lr
 801cdd0:	f10a 0e20 	add.w	lr, sl, #32
 801cdd4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801cdd8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801cddc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cde0:	4445      	add	r5, r8
 801cde2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801cde6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801cdea:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801cdee:	ea45 050e 	orr.w	r5, r5, lr
 801cdf2:	fb1c fe01 	smulbb	lr, ip, r1
 801cdf6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801cdfa:	f1cc 0810 	rsb	r8, ip, #16
 801cdfe:	eba8 0801 	sub.w	r8, r8, r1
 801ce02:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801ce06:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801ce0a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801ce0e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801ce12:	4341      	muls	r1, r0
 801ce14:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801ce18:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce1c:	ea4a 0202 	orr.w	r2, sl, r2
 801ce20:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801ce24:	fb09 1108 	mla	r1, r9, r8, r1
 801ce28:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ce2c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801ce30:	fb0c 1102 	mla	r1, ip, r2, r1
 801ce34:	ea4b 0505 	orr.w	r5, fp, r5
 801ce38:	fb0e 1e05 	mla	lr, lr, r5, r1
 801ce3c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801ce40:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801ce44:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ce48:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801ce4c:	ea42 0e0e 	orr.w	lr, r2, lr
 801ce50:	fa1f f28e 	uxth.w	r2, lr
 801ce54:	2bff      	cmp	r3, #255	; 0xff
 801ce56:	d103      	bne.n	801ce60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801ce58:	9912      	ldr	r1, [sp, #72]	; 0x48
 801ce5a:	29ff      	cmp	r1, #255	; 0xff
 801ce5c:	f000 80de 	beq.w	801d01c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801ce60:	990a      	ldr	r1, [sp, #40]	; 0x28
 801ce62:	8838      	ldrh	r0, [r7, #0]
 801ce64:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801ce66:	434b      	muls	r3, r1
 801ce68:	f103 0c01 	add.w	ip, r3, #1
 801ce6c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801ce70:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801ce74:	fa5f fc83 	uxtb.w	ip, r3
 801ce78:	1203      	asrs	r3, r0, #8
 801ce7a:	1215      	asrs	r5, r2, #8
 801ce7c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ce80:	fb13 f30c 	smulbb	r3, r3, ip
 801ce84:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ce88:	fb05 3501 	mla	r5, r5, r1, r3
 801ce8c:	10c3      	asrs	r3, r0, #3
 801ce8e:	10d1      	asrs	r1, r2, #3
 801ce90:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ce94:	fb13 f30c 	smulbb	r3, r3, ip
 801ce98:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801ce9c:	fb01 3104 	mla	r1, r1, r4, r3
 801cea0:	00c3      	lsls	r3, r0, #3
 801cea2:	00d2      	lsls	r2, r2, #3
 801cea4:	b2db      	uxtb	r3, r3
 801cea6:	b2d2      	uxtb	r2, r2
 801cea8:	fb13 f30c 	smulbb	r3, r3, ip
 801ceac:	b2ad      	uxth	r5, r5
 801ceae:	fb02 3304 	mla	r3, r2, r4, r3
 801ceb2:	b29a      	uxth	r2, r3
 801ceb4:	1c6b      	adds	r3, r5, #1
 801ceb6:	b289      	uxth	r1, r1
 801ceb8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cebc:	1c53      	adds	r3, r2, #1
 801cebe:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801cec2:	1c4a      	adds	r2, r1, #1
 801cec4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801cec8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cecc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ced0:	0949      	lsrs	r1, r1, #5
 801ced2:	432b      	orrs	r3, r5
 801ced4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ced8:	430b      	orrs	r3, r1
 801ceda:	803b      	strh	r3, [r7, #0]
 801cedc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cede:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801cee0:	4413      	add	r3, r2
 801cee2:	9321      	str	r3, [sp, #132]	; 0x84
 801cee4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801cee6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cee8:	441a      	add	r2, r3
 801ceea:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ceec:	9222      	str	r2, [sp, #136]	; 0x88
 801ceee:	3b01      	subs	r3, #1
 801cef0:	3702      	adds	r7, #2
 801cef2:	9313      	str	r3, [sp, #76]	; 0x4c
 801cef4:	e689      	b.n	801cc0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801cef6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cef8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801cefa:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801cefc:	4433      	add	r3, r6
 801cefe:	9321      	str	r3, [sp, #132]	; 0x84
 801cf00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cf02:	441c      	add	r4, r3
 801cf04:	9b08      	ldr	r3, [sp, #32]
 801cf06:	9422      	str	r4, [sp, #136]	; 0x88
 801cf08:	3b01      	subs	r3, #1
 801cf0a:	9308      	str	r3, [sp, #32]
 801cf0c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf0e:	3302      	adds	r3, #2
 801cf10:	9309      	str	r3, [sp, #36]	; 0x24
 801cf12:	e658      	b.n	801cbc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801cf14:	d028      	beq.n	801cf68 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801cf16:	9b08      	ldr	r3, [sp, #32]
 801cf18:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801cf1a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801cf1c:	3b01      	subs	r3, #1
 801cf1e:	fb00 5003 	mla	r0, r0, r3, r5
 801cf22:	1400      	asrs	r0, r0, #16
 801cf24:	f53f ae6c 	bmi.w	801cc00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cf28:	3901      	subs	r1, #1
 801cf2a:	4288      	cmp	r0, r1
 801cf2c:	f6bf ae68 	bge.w	801cc00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cf30:	9924      	ldr	r1, [sp, #144]	; 0x90
 801cf32:	9822      	ldr	r0, [sp, #136]	; 0x88
 801cf34:	fb01 0303 	mla	r3, r1, r3, r0
 801cf38:	141b      	asrs	r3, r3, #16
 801cf3a:	f53f ae61 	bmi.w	801cc00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cf3e:	3a01      	subs	r2, #1
 801cf40:	4293      	cmp	r3, r2
 801cf42:	f6bf ae5d 	bge.w	801cc00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801cf46:	9b08      	ldr	r3, [sp, #32]
 801cf48:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801cf4c:	9313      	str	r3, [sp, #76]	; 0x4c
 801cf4e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801cf52:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cf54:	2b00      	cmp	r3, #0
 801cf56:	f300 8082 	bgt.w	801d05e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801cf5a:	9b08      	ldr	r3, [sp, #32]
 801cf5c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801cf60:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801cf62:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801cf66:	9309      	str	r3, [sp, #36]	; 0x24
 801cf68:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cf6a:	2b00      	cmp	r3, #0
 801cf6c:	f340 81ef 	ble.w	801d34e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801cf70:	ee30 0a04 	vadd.f32	s0, s0, s8
 801cf74:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801cf78:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801cf7c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cf7e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801cf82:	ee31 1a05 	vadd.f32	s2, s2, s10
 801cf86:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801cf8a:	eef0 6a62 	vmov.f32	s13, s5
 801cf8e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801cf92:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cf96:	ee77 2a62 	vsub.f32	s5, s14, s5
 801cf9a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801cf9e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801cfa2:	eef0 6a43 	vmov.f32	s13, s6
 801cfa6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801cfaa:	ee12 2a90 	vmov	r2, s5
 801cfae:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801cfb2:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfb6:	ee13 2a10 	vmov	r2, s6
 801cfba:	9323      	str	r3, [sp, #140]	; 0x8c
 801cfbc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cfbe:	fb92 f3f3 	sdiv	r3, r2, r3
 801cfc2:	9324      	str	r3, [sp, #144]	; 0x90
 801cfc4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cfc6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cfc8:	3b01      	subs	r3, #1
 801cfca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cfce:	9311      	str	r3, [sp, #68]	; 0x44
 801cfd0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cfd2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801cfd6:	bf08      	it	eq
 801cfd8:	4613      	moveq	r3, r2
 801cfda:	9308      	str	r3, [sp, #32]
 801cfdc:	eeb0 3a67 	vmov.f32	s6, s15
 801cfe0:	eef0 2a47 	vmov.f32	s5, s14
 801cfe4:	e5e1      	b.n	801cbaa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cfe6:	fb08 f505 	mul.w	r5, r8, r5
 801cfea:	fb09 5303 	mla	r3, r9, r3, r5
 801cfee:	e661      	b.n	801ccb4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cff0:	4681      	mov	r9, r0
 801cff2:	e688      	b.n	801cd06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cff4:	f1c1 0210 	rsb	r2, r1, #16
 801cff8:	4341      	muls	r1, r0
 801cffa:	fb09 1902 	mla	r9, r9, r2, r1
 801cffe:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d002:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d006:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d00a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d00e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d012:	ea42 0909 	orr.w	r9, r2, r9
 801d016:	fa1f f289 	uxth.w	r2, r9
 801d01a:	e71b      	b.n	801ce54 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801d01c:	803a      	strh	r2, [r7, #0]
 801d01e:	e75d      	b.n	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d020:	f115 0e01 	adds.w	lr, r5, #1
 801d024:	f53f af5a 	bmi.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d028:	4572      	cmp	r2, lr
 801d02a:	f6ff af57 	blt.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d02e:	f110 0e01 	adds.w	lr, r0, #1
 801d032:	f53f af53 	bmi.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d036:	4573      	cmp	r3, lr
 801d038:	f6ff af50 	blt.w	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d03c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801d03e:	9502      	str	r5, [sp, #8]
 801d040:	b21b      	sxth	r3, r3
 801d042:	b212      	sxth	r2, r2
 801d044:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801d048:	9301      	str	r3, [sp, #4]
 801d04a:	9200      	str	r2, [sp, #0]
 801d04c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801d050:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801d054:	4639      	mov	r1, r7
 801d056:	9815      	ldr	r0, [sp, #84]	; 0x54
 801d058:	f7ff fc04 	bl	801c864 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801d05c:	e73e      	b.n	801cedc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d05e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d060:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d064:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d066:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d06a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801d06c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d070:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801d072:	141f      	asrs	r7, r3, #16
 801d074:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d076:	141b      	asrs	r3, r3, #16
 801d078:	fb01 3707 	mla	r7, r1, r7, r3
 801d07c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801d07e:	fa1f fc82 	uxth.w	ip, r2
 801d082:	eb03 0a07 	add.w	sl, r3, r7
 801d086:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d08a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d08e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d092:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d096:	b29b      	uxth	r3, r3
 801d098:	2d00      	cmp	r5, #0
 801d09a:	f000 813d 	beq.w	801d318 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801d09e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d0a2:	940f      	str	r4, [sp, #60]	; 0x3c
 801d0a4:	eb0a 0b01 	add.w	fp, sl, r1
 801d0a8:	fa1f fa85 	uxth.w	sl, r5
 801d0ac:	fb0a fc0c 	mul.w	ip, sl, ip
 801d0b0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d0b4:	fa1f fa8a 	uxth.w	sl, sl
 801d0b8:	eba0 000c 	sub.w	r0, r0, ip
 801d0bc:	eba3 030a 	sub.w	r3, r3, sl
 801d0c0:	b280      	uxth	r0, r0
 801d0c2:	fb08 f000 	mul.w	r0, r8, r0
 801d0c6:	b29b      	uxth	r3, r3
 801d0c8:	fb09 0303 	mla	r3, r9, r3, r0
 801d0cc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d0ce:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d0d2:	9410      	str	r4, [sp, #64]	; 0x40
 801d0d4:	fb0a 3300 	mla	r3, sl, r0, r3
 801d0d8:	fb0c 3304 	mla	r3, ip, r4, r3
 801d0dc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d0e0:	2b00      	cmp	r3, #0
 801d0e2:	f000 810b 	beq.w	801d2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d0e6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801d0e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d0ea:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d0ee:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d0f2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d0f6:	f000 8114 	beq.w	801d322 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801d0fa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d0fe:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d102:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d106:	fb09 f707 	mul.w	r7, r9, r7
 801d10a:	fb0a fc0c 	mul.w	ip, sl, ip
 801d10e:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d112:	f107 0b20 	add.w	fp, r7, #32
 801d116:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d11a:	44cc      	add	ip, r9
 801d11c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d120:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d124:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d128:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d12c:	ea4c 0909 	orr.w	r9, ip, r9
 801d130:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d134:	8847      	ldrh	r7, [r0, #2]
 801d136:	d019      	beq.n	801d16c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801d138:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d13c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d140:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d144:	fb08 f807 	mul.w	r8, r8, r7
 801d148:	fb0a fc0c 	mul.w	ip, sl, ip
 801d14c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d150:	f108 0b20 	add.w	fp, r8, #32
 801d154:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d158:	44bc      	add	ip, r7
 801d15a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d15e:	0a3f      	lsrs	r7, r7, #8
 801d160:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d164:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d168:	ea4c 0707 	orr.w	r7, ip, r7
 801d16c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d170:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d174:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d178:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d17c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d180:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d184:	ea4c 0909 	orr.w	r9, ip, r9
 801d188:	ea4a 0707 	orr.w	r7, sl, r7
 801d18c:	2d00      	cmp	r5, #0
 801d18e:	f000 80ca 	beq.w	801d326 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801d192:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d196:	3901      	subs	r1, #1
 801d198:	0049      	lsls	r1, r1, #1
 801d19a:	3102      	adds	r1, #2
 801d19c:	eb00 0c01 	add.w	ip, r0, r1
 801d1a0:	5a41      	ldrh	r1, [r0, r1]
 801d1a2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801d1a4:	28ff      	cmp	r0, #255	; 0xff
 801d1a6:	d019      	beq.n	801d1dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801d1a8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801d1aa:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d1ae:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d1b2:	fb04 fa01 	mul.w	sl, r4, r1
 801d1b6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1ba:	fb08 f800 	mul.w	r8, r8, r0
 801d1be:	f10a 0020 	add.w	r0, sl, #32
 801d1c2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d1c6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d1ca:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d1ce:	4441      	add	r1, r8
 801d1d0:	0a00      	lsrs	r0, r0, #8
 801d1d2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d1d6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1da:	4301      	orrs	r1, r0
 801d1dc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801d1de:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d1e2:	2cff      	cmp	r4, #255	; 0xff
 801d1e4:	d01a      	beq.n	801d21c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801d1e6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d1ea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d1ee:	fb04 fa00 	mul.w	sl, r4, r0
 801d1f2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d1f6:	fb08 f80c 	mul.w	r8, r8, ip
 801d1fa:	f10a 0c20 	add.w	ip, sl, #32
 801d1fe:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d202:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d206:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d20a:	4440      	add	r0, r8
 801d20c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d210:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d214:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d218:	ea40 000c 	orr.w	r0, r0, ip
 801d21c:	fb15 fc02 	smulbb	ip, r5, r2
 801d220:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d224:	f1c5 0810 	rsb	r8, r5, #16
 801d228:	eba8 0802 	sub.w	r8, r8, r2
 801d22c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d230:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d234:	437a      	muls	r2, r7
 801d236:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d23a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d23e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d242:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d246:	fb09 2208 	mla	r2, r9, r8, r2
 801d24a:	ea4a 0101 	orr.w	r1, sl, r1
 801d24e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d252:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d256:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d25a:	fb05 2201 	mla	r2, r5, r1, r2
 801d25e:	ea4b 0000 	orr.w	r0, fp, r0
 801d262:	fb0c 2200 	mla	r2, ip, r0, r2
 801d266:	0d57      	lsrs	r7, r2, #21
 801d268:	0952      	lsrs	r2, r2, #5
 801d26a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d26e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d272:	433a      	orrs	r2, r7
 801d274:	2bff      	cmp	r3, #255	; 0xff
 801d276:	b292      	uxth	r2, r2
 801d278:	d102      	bne.n	801d280 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d27a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801d27c:	29ff      	cmp	r1, #255	; 0xff
 801d27e:	d063      	beq.n	801d348 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801d280:	980a      	ldr	r0, [sp, #40]	; 0x28
 801d282:	f8be 1000 	ldrh.w	r1, [lr]
 801d286:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d288:	4343      	muls	r3, r0
 801d28a:	1c58      	adds	r0, r3, #1
 801d28c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801d290:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801d294:	1208      	asrs	r0, r1, #8
 801d296:	b2db      	uxtb	r3, r3
 801d298:	1215      	asrs	r5, r2, #8
 801d29a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d29e:	fb10 f003 	smulbb	r0, r0, r3
 801d2a2:	10cf      	asrs	r7, r1, #3
 801d2a4:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801d2a8:	00c9      	lsls	r1, r1, #3
 801d2aa:	fb05 0504 	mla	r5, r5, r4, r0
 801d2ae:	b2c9      	uxtb	r1, r1
 801d2b0:	10d0      	asrs	r0, r2, #3
 801d2b2:	00d2      	lsls	r2, r2, #3
 801d2b4:	fb11 f103 	smulbb	r1, r1, r3
 801d2b8:	b2d2      	uxtb	r2, r2
 801d2ba:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801d2be:	fb02 1204 	mla	r2, r2, r4, r1
 801d2c2:	fb17 f703 	smulbb	r7, r7, r3
 801d2c6:	b2ad      	uxth	r5, r5
 801d2c8:	b292      	uxth	r2, r2
 801d2ca:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d2ce:	fb00 7004 	mla	r0, r0, r4, r7
 801d2d2:	1c6b      	adds	r3, r5, #1
 801d2d4:	1c57      	adds	r7, r2, #1
 801d2d6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801d2da:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801d2de:	b280      	uxth	r0, r0
 801d2e0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d2e4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801d2e8:	433d      	orrs	r5, r7
 801d2ea:	1c47      	adds	r7, r0, #1
 801d2ec:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801d2f0:	097f      	lsrs	r7, r7, #5
 801d2f2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d2f6:	433d      	orrs	r5, r7
 801d2f8:	f8ae 5000 	strh.w	r5, [lr]
 801d2fc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801d2fe:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801d300:	4413      	add	r3, r2
 801d302:	9321      	str	r3, [sp, #132]	; 0x84
 801d304:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801d306:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d308:	441a      	add	r2, r3
 801d30a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801d30c:	9222      	str	r2, [sp, #136]	; 0x88
 801d30e:	3b01      	subs	r3, #1
 801d310:	f10e 0e02 	add.w	lr, lr, #2
 801d314:	9313      	str	r3, [sp, #76]	; 0x4c
 801d316:	e61c      	b.n	801cf52 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801d318:	fb08 f000 	mul.w	r0, r8, r0
 801d31c:	fb09 0303 	mla	r3, r9, r3, r0
 801d320:	e6dc      	b.n	801d0dc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801d322:	46b9      	mov	r9, r7
 801d324:	e704      	b.n	801d130 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801d326:	f1c2 0110 	rsb	r1, r2, #16
 801d32a:	437a      	muls	r2, r7
 801d32c:	fb09 2901 	mla	r9, r9, r1, r2
 801d330:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d334:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d338:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d33c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d340:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d344:	4302      	orrs	r2, r0
 801d346:	e795      	b.n	801d274 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801d348:	f8ae 2000 	strh.w	r2, [lr]
 801d34c:	e7d6      	b.n	801d2fc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801d34e:	b017      	add	sp, #92	; 0x5c
 801d350:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801d354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801d354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d358:	b085      	sub	sp, #20
 801d35a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801d35e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801d362:	9103      	str	r1, [sp, #12]
 801d364:	fb00 7406 	mla	r4, r0, r6, r7
 801d368:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801d36c:	2800      	cmp	r0, #0
 801d36e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801d372:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801d376:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801d37a:	9501      	str	r5, [sp, #4]
 801d37c:	eb02 0904 	add.w	r9, r2, r4
 801d380:	f2c0 8141 	blt.w	801d606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d384:	4583      	cmp	fp, r0
 801d386:	f340 813e 	ble.w	801d606 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801d38a:	2f00      	cmp	r7, #0
 801d38c:	f2c0 8137 	blt.w	801d5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d390:	42be      	cmp	r6, r7
 801d392:	f340 8134 	ble.w	801d5fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801d396:	f812 c004 	ldrb.w	ip, [r2, r4]
 801d39a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801d39e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801d3a2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801d3a6:	4355      	muls	r5, r2
 801d3a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3ac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801d3b0:	fb0c f203 	mul.w	r2, ip, r3
 801d3b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801d3b8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801d3bc:	441d      	add	r5, r3
 801d3be:	f102 0320 	add.w	r3, r2, #32
 801d3c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d3c6:	0a1b      	lsrs	r3, r3, #8
 801d3c8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801d3cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d3d0:	431c      	orrs	r4, r3
 801d3d2:	1c7b      	adds	r3, r7, #1
 801d3d4:	f100 811c 	bmi.w	801d610 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d3d8:	429e      	cmp	r6, r3
 801d3da:	f340 8119 	ble.w	801d610 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801d3de:	2900      	cmp	r1, #0
 801d3e0:	f000 8119 	beq.w	801d616 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801d3e4:	9a01      	ldr	r2, [sp, #4]
 801d3e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801d3ea:	8855      	ldrh	r5, [r2, #2]
 801d3ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801d3f0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801d3f4:	fb08 f802 	mul.w	r8, r8, r2
 801d3f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d3fc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801d400:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801d404:	435d      	muls	r5, r3
 801d406:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d40a:	44d0      	add	r8, sl
 801d40c:	f105 0a20 	add.w	sl, r5, #32
 801d410:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801d414:	0a2d      	lsrs	r5, r5, #8
 801d416:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801d41a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d41e:	432a      	orrs	r2, r5
 801d420:	3001      	adds	r0, #1
 801d422:	f100 80fe 	bmi.w	801d622 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d426:	4583      	cmp	fp, r0
 801d428:	f340 80fb 	ble.w	801d622 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801d42c:	f1be 0f00 	cmp.w	lr, #0
 801d430:	f000 80fc 	beq.w	801d62c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801d434:	2f00      	cmp	r7, #0
 801d436:	f2c0 80f1 	blt.w	801d61c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d43a:	42be      	cmp	r6, r7
 801d43c:	f340 80ee 	ble.w	801d61c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801d440:	9801      	ldr	r0, [sp, #4]
 801d442:	f819 5006 	ldrb.w	r5, [r9, r6]
 801d446:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801d44a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801d44e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801d452:	fb0a fa00 	mul.w	sl, sl, r0
 801d456:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801d45a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801d45e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801d462:	fb05 f808 	mul.w	r8, r5, r8
 801d466:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801d46a:	4482      	add	sl, r0
 801d46c:	f108 0020 	add.w	r0, r8, #32
 801d470:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d474:	0a00      	lsrs	r0, r0, #8
 801d476:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801d47a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d47e:	ea4b 0b00 	orr.w	fp, fp, r0
 801d482:	3701      	adds	r7, #1
 801d484:	f100 80d7 	bmi.w	801d636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d488:	42be      	cmp	r6, r7
 801d48a:	f340 80d4 	ble.w	801d636 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801d48e:	2900      	cmp	r1, #0
 801d490:	f000 80d4 	beq.w	801d63c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801d494:	3601      	adds	r6, #1
 801d496:	9801      	ldr	r0, [sp, #4]
 801d498:	f819 7006 	ldrb.w	r7, [r9, r6]
 801d49c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801d4a0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801d4a4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801d4a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4ac:	fb09 f906 	mul.w	r9, r9, r6
 801d4b0:	fb07 f800 	mul.w	r8, r7, r0
 801d4b4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801d4b8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801d4bc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801d4c0:	44d1      	add	r9, sl
 801d4c2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801d4c6:	f108 0020 	add.w	r0, r8, #32
 801d4ca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801d4ce:	0a00      	lsrs	r0, r0, #8
 801d4d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d4d4:	4330      	orrs	r0, r6
 801d4d6:	b28e      	uxth	r6, r1
 801d4d8:	fa1f f98e 	uxth.w	r9, lr
 801d4dc:	fb06 f809 	mul.w	r8, r6, r9
 801d4e0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801d4e4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801d4e8:	0136      	lsls	r6, r6, #4
 801d4ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d4ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801d4f2:	9601      	str	r6, [sp, #4]
 801d4f4:	ea4a 0404 	orr.w	r4, sl, r4
 801d4f8:	fa1f f689 	uxth.w	r6, r9
 801d4fc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d500:	fb11 f90e 	smulbb	r9, r1, lr
 801d504:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801d508:	9602      	str	r6, [sp, #8]
 801d50a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d50e:	4626      	mov	r6, r4
 801d510:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d514:	f1ce 0410 	rsb	r4, lr, #16
 801d518:	1a64      	subs	r4, r4, r1
 801d51a:	ea4a 0202 	orr.w	r2, sl, r2
 801d51e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d522:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d526:	434a      	muls	r2, r1
 801d528:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d52c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d530:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d534:	fb04 2406 	mla	r4, r4, r6, r2
 801d538:	ea4a 0000 	orr.w	r0, sl, r0
 801d53c:	fb09 4200 	mla	r2, r9, r0, r4
 801d540:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d544:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d548:	9801      	ldr	r0, [sp, #4]
 801d54a:	9903      	ldr	r1, [sp, #12]
 801d54c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d550:	ea44 0b0b 	orr.w	fp, r4, fp
 801d554:	9c02      	ldr	r4, [sp, #8]
 801d556:	8809      	ldrh	r1, [r1, #0]
 801d558:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801d55c:	1b00      	subs	r0, r0, r4
 801d55e:	9c01      	ldr	r4, [sp, #4]
 801d560:	eba4 0608 	sub.w	r6, r4, r8
 801d564:	b2b6      	uxth	r6, r6
 801d566:	b280      	uxth	r0, r0
 801d568:	4373      	muls	r3, r6
 801d56a:	fb0c 3300 	mla	r3, ip, r0, r3
 801d56e:	9802      	ldr	r0, [sp, #8]
 801d570:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d574:	fb00 3505 	mla	r5, r0, r5, r3
 801d578:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d57c:	fb08 5707 	mla	r7, r8, r7, r5
 801d580:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d584:	120b      	asrs	r3, r1, #8
 801d586:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d58a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d58e:	b2ff      	uxtb	r7, r7
 801d590:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d594:	10c8      	asrs	r0, r1, #3
 801d596:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d59a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d59e:	00c9      	lsls	r1, r1, #3
 801d5a0:	437b      	muls	r3, r7
 801d5a2:	ea42 0e0e 	orr.w	lr, r2, lr
 801d5a6:	b2c9      	uxtb	r1, r1
 801d5a8:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d5ac:	fa1f f28e 	uxth.w	r2, lr
 801d5b0:	4378      	muls	r0, r7
 801d5b2:	434f      	muls	r7, r1
 801d5b4:	1c59      	adds	r1, r3, #1
 801d5b6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d5ba:	1213      	asrs	r3, r2, #8
 801d5bc:	f023 0307 	bic.w	r3, r3, #7
 801d5c0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d5c4:	1c41      	adds	r1, r0, #1
 801d5c6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d5ca:	10d1      	asrs	r1, r2, #3
 801d5cc:	f021 0103 	bic.w	r1, r1, #3
 801d5d0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d5d4:	021b      	lsls	r3, r3, #8
 801d5d6:	00c9      	lsls	r1, r1, #3
 801d5d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d5dc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d5e0:	430b      	orrs	r3, r1
 801d5e2:	1c79      	adds	r1, r7, #1
 801d5e4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d5e8:	00d2      	lsls	r2, r2, #3
 801d5ea:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d5ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d5f2:	431a      	orrs	r2, r3
 801d5f4:	9b03      	ldr	r3, [sp, #12]
 801d5f6:	801a      	strh	r2, [r3, #0]
 801d5f8:	b005      	add	sp, #20
 801d5fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d5fe:	f04f 0c00 	mov.w	ip, #0
 801d602:	4664      	mov	r4, ip
 801d604:	e6e5      	b.n	801d3d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d606:	2300      	movs	r3, #0
 801d608:	469c      	mov	ip, r3
 801d60a:	461a      	mov	r2, r3
 801d60c:	461c      	mov	r4, r3
 801d60e:	e707      	b.n	801d420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d610:	2300      	movs	r3, #0
 801d612:	461a      	mov	r2, r3
 801d614:	e704      	b.n	801d420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d616:	460b      	mov	r3, r1
 801d618:	460a      	mov	r2, r1
 801d61a:	e701      	b.n	801d420 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d61c:	2500      	movs	r5, #0
 801d61e:	46ab      	mov	fp, r5
 801d620:	e72f      	b.n	801d482 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d622:	2700      	movs	r7, #0
 801d624:	463d      	mov	r5, r7
 801d626:	4638      	mov	r0, r7
 801d628:	46bb      	mov	fp, r7
 801d62a:	e754      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d62c:	4677      	mov	r7, lr
 801d62e:	4675      	mov	r5, lr
 801d630:	4670      	mov	r0, lr
 801d632:	46f3      	mov	fp, lr
 801d634:	e74f      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d636:	2700      	movs	r7, #0
 801d638:	4638      	mov	r0, r7
 801d63a:	e74c      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d63c:	460f      	mov	r7, r1
 801d63e:	4608      	mov	r0, r1
 801d640:	e749      	b.n	801d4d6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d644 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d644:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d648:	b093      	sub	sp, #76	; 0x4c
 801d64a:	9210      	str	r2, [sp, #64]	; 0x40
 801d64c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d64e:	910e      	str	r1, [sp, #56]	; 0x38
 801d650:	9306      	str	r3, [sp, #24]
 801d652:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801d656:	9011      	str	r0, [sp, #68]	; 0x44
 801d658:	6850      	ldr	r0, [r2, #4]
 801d65a:	6812      	ldr	r2, [r2, #0]
 801d65c:	fb00 1303 	mla	r3, r0, r3, r1
 801d660:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d664:	9307      	str	r3, [sp, #28]
 801d666:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d668:	681b      	ldr	r3, [r3, #0]
 801d66a:	9308      	str	r3, [sp, #32]
 801d66c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d66e:	685b      	ldr	r3, [r3, #4]
 801d670:	9309      	str	r3, [sp, #36]	; 0x24
 801d672:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d674:	2b00      	cmp	r3, #0
 801d676:	dc03      	bgt.n	801d680 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d678:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d67a:	2b00      	cmp	r3, #0
 801d67c:	f340 83b4 	ble.w	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d680:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d682:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d686:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d68a:	1e48      	subs	r0, r1, #1
 801d68c:	1e55      	subs	r5, r2, #1
 801d68e:	9b06      	ldr	r3, [sp, #24]
 801d690:	2b00      	cmp	r3, #0
 801d692:	f340 8163 	ble.w	801d95c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d696:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801d698:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d69a:	1436      	asrs	r6, r6, #16
 801d69c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d6a0:	d406      	bmi.n	801d6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6a2:	4286      	cmp	r6, r0
 801d6a4:	da04      	bge.n	801d6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6a6:	2b00      	cmp	r3, #0
 801d6a8:	db02      	blt.n	801d6b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d6aa:	42ab      	cmp	r3, r5
 801d6ac:	f2c0 8157 	blt.w	801d95e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d6b0:	3601      	adds	r6, #1
 801d6b2:	f100 8144 	bmi.w	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d6b6:	42b1      	cmp	r1, r6
 801d6b8:	f2c0 8141 	blt.w	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d6bc:	3301      	adds	r3, #1
 801d6be:	f100 813e 	bmi.w	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d6c2:	429a      	cmp	r2, r3
 801d6c4:	f2c0 813b 	blt.w	801d93e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d6c8:	9b06      	ldr	r3, [sp, #24]
 801d6ca:	9f07      	ldr	r7, [sp, #28]
 801d6cc:	930f      	str	r3, [sp, #60]	; 0x3c
 801d6ce:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d6d2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d6d4:	2b00      	cmp	r3, #0
 801d6d6:	f340 8164 	ble.w	801d9a2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d6da:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d6dc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d6de:	1418      	asrs	r0, r3, #16
 801d6e0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d6e2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d6e6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d6e8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d6ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d6ee:	142d      	asrs	r5, r5, #16
 801d6f0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d6f4:	f100 81ee 	bmi.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d6f8:	f102 3eff 	add.w	lr, r2, #4294967295
 801d6fc:	4575      	cmp	r5, lr
 801d6fe:	f280 81e9 	bge.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d702:	2800      	cmp	r0, #0
 801d704:	f2c0 81e6 	blt.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d708:	f103 3eff 	add.w	lr, r3, #4294967295
 801d70c:	4570      	cmp	r0, lr
 801d70e:	f280 81e1 	bge.w	801dad4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d712:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d714:	b212      	sxth	r2, r2
 801d716:	fb00 5002 	mla	r0, r0, r2, r5
 801d71a:	fa1f fe81 	uxth.w	lr, r1
 801d71e:	eb03 0a00 	add.w	sl, r3, r0
 801d722:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d726:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d72a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d72e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d732:	b29b      	uxth	r3, r3
 801d734:	f1bc 0f00 	cmp.w	ip, #0
 801d738:	f000 8179 	beq.w	801da2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d73c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d740:	940a      	str	r4, [sp, #40]	; 0x28
 801d742:	eb0a 0b02 	add.w	fp, sl, r2
 801d746:	fa1f fa8c 	uxth.w	sl, ip
 801d74a:	fb0a fe0e 	mul.w	lr, sl, lr
 801d74e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d752:	fa1f fa8a 	uxth.w	sl, sl
 801d756:	eba5 050e 	sub.w	r5, r5, lr
 801d75a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d75e:	940b      	str	r4, [sp, #44]	; 0x2c
 801d760:	eba3 030a 	sub.w	r3, r3, sl
 801d764:	b2ad      	uxth	r5, r5
 801d766:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d768:	b29b      	uxth	r3, r3
 801d76a:	fb08 f505 	mul.w	r5, r8, r5
 801d76e:	fb09 5303 	mla	r3, r9, r3, r5
 801d772:	fb0a 3304 	mla	r3, sl, r4, r3
 801d776:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d778:	fb0e 3304 	mla	r3, lr, r4, r3
 801d77c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d780:	2b00      	cmp	r3, #0
 801d782:	f000 80cf 	beq.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d786:	9c08      	ldr	r4, [sp, #32]
 801d788:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d78c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d790:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d794:	f000 8150 	beq.w	801da38 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d798:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d79c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d7a0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7a4:	fb09 f000 	mul.w	r0, r9, r0
 801d7a8:	fb0a fe0e 	mul.w	lr, sl, lr
 801d7ac:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d7b0:	f100 0b20 	add.w	fp, r0, #32
 801d7b4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d7b8:	44ce      	add	lr, r9
 801d7ba:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d7be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d7c2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d7c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d7ca:	ea4e 0909 	orr.w	r9, lr, r9
 801d7ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d7d2:	8868      	ldrh	r0, [r5, #2]
 801d7d4:	d019      	beq.n	801d80a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d7d6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d7da:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d7de:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d7e2:	fb08 f800 	mul.w	r8, r8, r0
 801d7e6:	fb0a fe0e 	mul.w	lr, sl, lr
 801d7ea:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d7ee:	f108 0b20 	add.w	fp, r8, #32
 801d7f2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d7f6:	4486      	add	lr, r0
 801d7f8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d7fc:	0a00      	lsrs	r0, r0, #8
 801d7fe:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d802:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d806:	ea4e 0000 	orr.w	r0, lr, r0
 801d80a:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d80e:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d812:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d816:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d81a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d81e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d822:	ea4e 0909 	orr.w	r9, lr, r9
 801d826:	ea4a 0000 	orr.w	r0, sl, r0
 801d82a:	f1bc 0f00 	cmp.w	ip, #0
 801d82e:	f000 8105 	beq.w	801da3c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d832:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d836:	3a01      	subs	r2, #1
 801d838:	0052      	lsls	r2, r2, #1
 801d83a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d83c:	3202      	adds	r2, #2
 801d83e:	2cff      	cmp	r4, #255	; 0xff
 801d840:	eb05 0e02 	add.w	lr, r5, r2
 801d844:	5aaa      	ldrh	r2, [r5, r2]
 801d846:	d018      	beq.n	801d87a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d848:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d84c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d850:	fb04 fa02 	mul.w	sl, r4, r2
 801d854:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d858:	fb08 f805 	mul.w	r8, r8, r5
 801d85c:	f10a 0520 	add.w	r5, sl, #32
 801d860:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d864:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d868:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d86c:	4442      	add	r2, r8
 801d86e:	0a2d      	lsrs	r5, r5, #8
 801d870:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d874:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d878:	432a      	orrs	r2, r5
 801d87a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d87c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d880:	2cff      	cmp	r4, #255	; 0xff
 801d882:	d01a      	beq.n	801d8ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d884:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d888:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d88c:	fb04 fa05 	mul.w	sl, r4, r5
 801d890:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d894:	fb08 f80e 	mul.w	r8, r8, lr
 801d898:	f10a 0e20 	add.w	lr, sl, #32
 801d89c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d8a0:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d8a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d8a8:	4445      	add	r5, r8
 801d8aa:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d8ae:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d8b2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d8b6:	ea45 050e 	orr.w	r5, r5, lr
 801d8ba:	fb1c fe01 	smulbb	lr, ip, r1
 801d8be:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d8c2:	f1cc 0810 	rsb	r8, ip, #16
 801d8c6:	eba8 0801 	sub.w	r8, r8, r1
 801d8ca:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d8ce:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d8d2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d8d6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d8da:	4341      	muls	r1, r0
 801d8dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d8e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d8e4:	ea4a 0202 	orr.w	r2, sl, r2
 801d8e8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d8ec:	fb09 1108 	mla	r1, r9, r8, r1
 801d8f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d8f4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d8f8:	fb0c 1102 	mla	r1, ip, r2, r1
 801d8fc:	ea4b 0505 	orr.w	r5, fp, r5
 801d900:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d904:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d908:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d90c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d910:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d914:	ea42 0e0e 	orr.w	lr, r2, lr
 801d918:	fa1f f28e 	uxth.w	r2, lr
 801d91c:	2bff      	cmp	r3, #255	; 0xff
 801d91e:	f040 80a1 	bne.w	801da64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d922:	803a      	strh	r2, [r7, #0]
 801d924:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d926:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d928:	4413      	add	r3, r2
 801d92a:	931d      	str	r3, [sp, #116]	; 0x74
 801d92c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d92e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d930:	441a      	add	r2, r3
 801d932:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d934:	921e      	str	r2, [sp, #120]	; 0x78
 801d936:	3b01      	subs	r3, #1
 801d938:	3702      	adds	r7, #2
 801d93a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d93c:	e6c9      	b.n	801d6d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d93e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d940:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d942:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801d944:	4433      	add	r3, r6
 801d946:	931d      	str	r3, [sp, #116]	; 0x74
 801d948:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d94a:	441c      	add	r4, r3
 801d94c:	9b06      	ldr	r3, [sp, #24]
 801d94e:	941e      	str	r4, [sp, #120]	; 0x78
 801d950:	3b01      	subs	r3, #1
 801d952:	9306      	str	r3, [sp, #24]
 801d954:	9b07      	ldr	r3, [sp, #28]
 801d956:	3302      	adds	r3, #2
 801d958:	9307      	str	r3, [sp, #28]
 801d95a:	e698      	b.n	801d68e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d95c:	d028      	beq.n	801d9b0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d95e:	9b06      	ldr	r3, [sp, #24]
 801d960:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d962:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d964:	3b01      	subs	r3, #1
 801d966:	fb00 5003 	mla	r0, r0, r3, r5
 801d96a:	1400      	asrs	r0, r0, #16
 801d96c:	f53f aeac 	bmi.w	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d970:	3901      	subs	r1, #1
 801d972:	4288      	cmp	r0, r1
 801d974:	f6bf aea8 	bge.w	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d978:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d97a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d97c:	fb01 0303 	mla	r3, r1, r3, r0
 801d980:	141b      	asrs	r3, r3, #16
 801d982:	f53f aea1 	bmi.w	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d986:	3a01      	subs	r2, #1
 801d988:	4293      	cmp	r3, r2
 801d98a:	f6bf ae9d 	bge.w	801d6c8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d98e:	9b06      	ldr	r3, [sp, #24]
 801d990:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d994:	930f      	str	r3, [sp, #60]	; 0x3c
 801d996:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d99a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d99c:	2b00      	cmp	r3, #0
 801d99e:	f300 80b6 	bgt.w	801db0e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d9a2:	9b06      	ldr	r3, [sp, #24]
 801d9a4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d9a8:	9b07      	ldr	r3, [sp, #28]
 801d9aa:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d9ae:	9307      	str	r3, [sp, #28]
 801d9b0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d9b2:	2b00      	cmp	r3, #0
 801d9b4:	f340 8218 	ble.w	801dde8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d9b8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d9bc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d9c0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d9c4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d9c6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d9ca:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d9ce:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d9d2:	eef0 6a62 	vmov.f32	s13, s5
 801d9d6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d9da:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d9de:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d9e2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d9e6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d9ea:	eef0 6a43 	vmov.f32	s13, s6
 801d9ee:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d9f2:	ee12 2a90 	vmov	r2, s5
 801d9f6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d9fa:	fb92 f3f3 	sdiv	r3, r2, r3
 801d9fe:	ee13 2a10 	vmov	r2, s6
 801da02:	931f      	str	r3, [sp, #124]	; 0x7c
 801da04:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da06:	fb92 f3f3 	sdiv	r3, r2, r3
 801da0a:	9320      	str	r3, [sp, #128]	; 0x80
 801da0c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801da0e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801da10:	3b01      	subs	r3, #1
 801da12:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801da16:	930e      	str	r3, [sp, #56]	; 0x38
 801da18:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801da1a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801da1e:	bf08      	it	eq
 801da20:	4613      	moveq	r3, r2
 801da22:	9306      	str	r3, [sp, #24]
 801da24:	eeb0 3a67 	vmov.f32	s6, s15
 801da28:	eef0 2a47 	vmov.f32	s5, s14
 801da2c:	e621      	b.n	801d672 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801da2e:	fb08 f505 	mul.w	r5, r8, r5
 801da32:	fb09 5303 	mla	r3, r9, r3, r5
 801da36:	e6a1      	b.n	801d77c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801da38:	4681      	mov	r9, r0
 801da3a:	e6c8      	b.n	801d7ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801da3c:	f1c1 0210 	rsb	r2, r1, #16
 801da40:	4341      	muls	r1, r0
 801da42:	fb09 1902 	mla	r9, r9, r2, r1
 801da46:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801da4a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801da4e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801da52:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da56:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801da5a:	ea42 0909 	orr.w	r9, r2, r9
 801da5e:	fa1f f289 	uxth.w	r2, r9
 801da62:	e75b      	b.n	801d91c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801da64:	f8b7 c000 	ldrh.w	ip, [r7]
 801da68:	43db      	mvns	r3, r3
 801da6a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801da6e:	fa5f fe83 	uxtb.w	lr, r3
 801da72:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801da76:	fb00 f00e 	mul.w	r0, r0, lr
 801da7a:	1c41      	adds	r1, r0, #1
 801da7c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801da80:	1211      	asrs	r1, r2, #8
 801da82:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801da86:	f021 0107 	bic.w	r1, r1, #7
 801da8a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801da8e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801da92:	48d7      	ldr	r0, [pc, #860]	; (801ddf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801da94:	fb05 f50e 	mul.w	r5, r5, lr
 801da98:	b2c9      	uxtb	r1, r1
 801da9a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801da9e:	1c69      	adds	r1, r5, #1
 801daa0:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801daa4:	10d1      	asrs	r1, r2, #3
 801daa6:	f021 0103 	bic.w	r1, r1, #3
 801daaa:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801daae:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801dab2:	b2db      	uxtb	r3, r3
 801dab4:	00c9      	lsls	r1, r1, #3
 801dab6:	fb03 f30e 	mul.w	r3, r3, lr
 801daba:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dabe:	4301      	orrs	r1, r0
 801dac0:	1c58      	adds	r0, r3, #1
 801dac2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801dac6:	00d2      	lsls	r2, r2, #3
 801dac8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801dacc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dad0:	430a      	orrs	r2, r1
 801dad2:	e726      	b.n	801d922 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801dad4:	f115 0e01 	adds.w	lr, r5, #1
 801dad8:	f53f af24 	bmi.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801dadc:	4572      	cmp	r2, lr
 801dade:	f6ff af21 	blt.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801dae2:	f110 0e01 	adds.w	lr, r0, #1
 801dae6:	f53f af1d 	bmi.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801daea:	4573      	cmp	r3, lr
 801daec:	f6ff af1a 	blt.w	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801daf0:	b21b      	sxth	r3, r3
 801daf2:	b212      	sxth	r2, r2
 801daf4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801daf8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801dafc:	9301      	str	r3, [sp, #4]
 801dafe:	9200      	str	r2, [sp, #0]
 801db00:	4639      	mov	r1, r7
 801db02:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801db06:	9811      	ldr	r0, [sp, #68]	; 0x44
 801db08:	f7ff fc24 	bl	801d354 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801db0c:	e70a      	b.n	801d924 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801db0e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801db10:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801db14:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801db16:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801db1a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801db1c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801db20:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801db22:	141f      	asrs	r7, r3, #16
 801db24:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801db26:	141b      	asrs	r3, r3, #16
 801db28:	fb01 3707 	mla	r7, r1, r7, r3
 801db2c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801db2e:	fa1f fc82 	uxth.w	ip, r2
 801db32:	eb03 0a07 	add.w	sl, r3, r7
 801db36:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801db3a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801db3e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801db42:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801db46:	b29b      	uxth	r3, r3
 801db48:	2d00      	cmp	r5, #0
 801db4a:	f000 80fe 	beq.w	801dd4a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801db4e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801db52:	940c      	str	r4, [sp, #48]	; 0x30
 801db54:	eb0a 0b01 	add.w	fp, sl, r1
 801db58:	fa1f fa85 	uxth.w	sl, r5
 801db5c:	fb0a fc0c 	mul.w	ip, sl, ip
 801db60:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801db64:	fa1f fa8a 	uxth.w	sl, sl
 801db68:	eba0 000c 	sub.w	r0, r0, ip
 801db6c:	eba3 030a 	sub.w	r3, r3, sl
 801db70:	b280      	uxth	r0, r0
 801db72:	fb08 f000 	mul.w	r0, r8, r0
 801db76:	b29b      	uxth	r3, r3
 801db78:	fb09 0303 	mla	r3, r9, r3, r0
 801db7c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801db7e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801db82:	940d      	str	r4, [sp, #52]	; 0x34
 801db84:	fb0a 3300 	mla	r3, sl, r0, r3
 801db88:	fb0c 3304 	mla	r3, ip, r4, r3
 801db8c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801db90:	2b00      	cmp	r3, #0
 801db92:	f000 80cc 	beq.w	801dd2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801db96:	9808      	ldr	r0, [sp, #32]
 801db98:	9c08      	ldr	r4, [sp, #32]
 801db9a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801db9e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801dba2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801dba6:	f000 80d5 	beq.w	801dd54 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801dbaa:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801dbae:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801dbb2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dbb6:	fb09 f707 	mul.w	r7, r9, r7
 801dbba:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbbe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801dbc2:	f107 0b20 	add.w	fp, r7, #32
 801dbc6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801dbca:	44cc      	add	ip, r9
 801dbcc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801dbd0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801dbd4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dbd8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801dbdc:	ea4c 0909 	orr.w	r9, ip, r9
 801dbe0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801dbe4:	8847      	ldrh	r7, [r0, #2]
 801dbe6:	d019      	beq.n	801dc1c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801dbe8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801dbec:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801dbf0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dbf4:	fb08 f807 	mul.w	r8, r8, r7
 801dbf8:	fb0a fc0c 	mul.w	ip, sl, ip
 801dbfc:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801dc00:	f108 0b20 	add.w	fp, r8, #32
 801dc04:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801dc08:	44bc      	add	ip, r7
 801dc0a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801dc0e:	0a3f      	lsrs	r7, r7, #8
 801dc10:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801dc14:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dc18:	ea4c 0707 	orr.w	r7, ip, r7
 801dc1c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801dc20:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801dc24:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801dc28:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801dc2c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dc30:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801dc34:	ea4c 0909 	orr.w	r9, ip, r9
 801dc38:	ea4a 0707 	orr.w	r7, sl, r7
 801dc3c:	2d00      	cmp	r5, #0
 801dc3e:	f000 808b 	beq.w	801dd58 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801dc42:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801dc46:	3901      	subs	r1, #1
 801dc48:	0049      	lsls	r1, r1, #1
 801dc4a:	3102      	adds	r1, #2
 801dc4c:	eb00 0c01 	add.w	ip, r0, r1
 801dc50:	5a41      	ldrh	r1, [r0, r1]
 801dc52:	980c      	ldr	r0, [sp, #48]	; 0x30
 801dc54:	28ff      	cmp	r0, #255	; 0xff
 801dc56:	d019      	beq.n	801dc8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801dc58:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801dc5a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801dc5e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dc62:	fb04 fa01 	mul.w	sl, r4, r1
 801dc66:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dc6a:	fb08 f800 	mul.w	r8, r8, r0
 801dc6e:	f10a 0020 	add.w	r0, sl, #32
 801dc72:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801dc76:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801dc7a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dc7e:	4441      	add	r1, r8
 801dc80:	0a00      	lsrs	r0, r0, #8
 801dc82:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801dc86:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dc8a:	4301      	orrs	r1, r0
 801dc8c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801dc8e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801dc92:	2cff      	cmp	r4, #255	; 0xff
 801dc94:	d01a      	beq.n	801dccc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801dc96:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801dc9a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dc9e:	fb04 fa00 	mul.w	sl, r4, r0
 801dca2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801dca6:	fb08 f80c 	mul.w	r8, r8, ip
 801dcaa:	f10a 0c20 	add.w	ip, sl, #32
 801dcae:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801dcb2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801dcb6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801dcba:	4440      	add	r0, r8
 801dcbc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801dcc0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801dcc4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801dcc8:	ea40 000c 	orr.w	r0, r0, ip
 801dccc:	fb15 fc02 	smulbb	ip, r5, r2
 801dcd0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801dcd4:	f1c5 0810 	rsb	r8, r5, #16
 801dcd8:	eba8 0802 	sub.w	r8, r8, r2
 801dcdc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801dce0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801dce4:	437a      	muls	r2, r7
 801dce6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801dcea:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801dcee:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801dcf2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801dcf6:	fb09 2208 	mla	r2, r9, r8, r2
 801dcfa:	ea4a 0101 	orr.w	r1, sl, r1
 801dcfe:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801dd02:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801dd06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dd0a:	fb05 2201 	mla	r2, r5, r1, r2
 801dd0e:	ea4b 0000 	orr.w	r0, fp, r0
 801dd12:	fb0c 2200 	mla	r2, ip, r0, r2
 801dd16:	0d57      	lsrs	r7, r2, #21
 801dd18:	0952      	lsrs	r2, r2, #5
 801dd1a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801dd1e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd22:	433a      	orrs	r2, r7
 801dd24:	2bff      	cmp	r3, #255	; 0xff
 801dd26:	b292      	uxth	r2, r2
 801dd28:	d127      	bne.n	801dd7a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801dd2a:	f8ae 2000 	strh.w	r2, [lr]
 801dd2e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dd30:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801dd32:	4413      	add	r3, r2
 801dd34:	931d      	str	r3, [sp, #116]	; 0x74
 801dd36:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801dd38:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dd3a:	441a      	add	r2, r3
 801dd3c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801dd3e:	921e      	str	r2, [sp, #120]	; 0x78
 801dd40:	3b01      	subs	r3, #1
 801dd42:	f10e 0e02 	add.w	lr, lr, #2
 801dd46:	930f      	str	r3, [sp, #60]	; 0x3c
 801dd48:	e627      	b.n	801d99a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801dd4a:	fb08 f000 	mul.w	r0, r8, r0
 801dd4e:	fb09 0303 	mla	r3, r9, r3, r0
 801dd52:	e71b      	b.n	801db8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801dd54:	46b9      	mov	r9, r7
 801dd56:	e743      	b.n	801dbe0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801dd58:	f1c2 0110 	rsb	r1, r2, #16
 801dd5c:	437a      	muls	r2, r7
 801dd5e:	fb09 2901 	mla	r9, r9, r1, r2
 801dd62:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801dd66:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801dd6a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801dd6e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801dd72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dd76:	4302      	orrs	r2, r0
 801dd78:	e7d4      	b.n	801dd24 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801dd7a:	f8be 7000 	ldrh.w	r7, [lr]
 801dd7e:	4c1c      	ldr	r4, [pc, #112]	; (801ddf0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801dd80:	43db      	mvns	r3, r3
 801dd82:	1238      	asrs	r0, r7, #8
 801dd84:	fa5f fc83 	uxtb.w	ip, r3
 801dd88:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801dd8c:	10fd      	asrs	r5, r7, #3
 801dd8e:	fb00 f00c 	mul.w	r0, r0, ip
 801dd92:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801dd96:	fb05 f10c 	mul.w	r1, r5, ip
 801dd9a:	1c45      	adds	r5, r0, #1
 801dd9c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801dda0:	1215      	asrs	r5, r2, #8
 801dda2:	f025 0507 	bic.w	r5, r5, #7
 801dda6:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801ddaa:	1c4d      	adds	r5, r1, #1
 801ddac:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801ddb0:	10d1      	asrs	r1, r2, #3
 801ddb2:	f021 0103 	bic.w	r1, r1, #3
 801ddb6:	00fb      	lsls	r3, r7, #3
 801ddb8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801ddbc:	b2db      	uxtb	r3, r3
 801ddbe:	b2c0      	uxtb	r0, r0
 801ddc0:	00c9      	lsls	r1, r1, #3
 801ddc2:	fb03 f30c 	mul.w	r3, r3, ip
 801ddc6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801ddca:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801ddce:	4308      	orrs	r0, r1
 801ddd0:	1c59      	adds	r1, r3, #1
 801ddd2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801ddd6:	00d2      	lsls	r2, r2, #3
 801ddd8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801dddc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801dde0:	4318      	orrs	r0, r3
 801dde2:	f8ae 0000 	strh.w	r0, [lr]
 801dde6:	e7a2      	b.n	801dd2e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801dde8:	b013      	add	sp, #76	; 0x4c
 801ddea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ddee:	bf00      	nop
 801ddf0:	fffff800 	.word	0xfffff800

0801ddf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801ddf4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ddf8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801ddfc:	fb05 4c03 	mla	ip, r5, r3, r4
 801de00:	2d00      	cmp	r5, #0
 801de02:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801de06:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801de0a:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801de0e:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801de12:	8808      	ldrh	r0, [r1, #0]
 801de14:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801de18:	f2c0 80a7 	blt.w	801df6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801de1c:	45aa      	cmp	sl, r5
 801de1e:	f340 80a4 	ble.w	801df6a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801de22:	2c00      	cmp	r4, #0
 801de24:	f2c0 809f 	blt.w	801df66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801de28:	42a3      	cmp	r3, r4
 801de2a:	f340 809c 	ble.w	801df66 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801de2e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801de32:	1c62      	adds	r2, r4, #1
 801de34:	f100 809c 	bmi.w	801df70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801de38:	4293      	cmp	r3, r2
 801de3a:	f340 8099 	ble.w	801df70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801de3e:	f1b9 0f00 	cmp.w	r9, #0
 801de42:	f000 8095 	beq.w	801df70 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801de46:	f8be c002 	ldrh.w	ip, [lr, #2]
 801de4a:	3501      	adds	r5, #1
 801de4c:	f100 8094 	bmi.w	801df78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801de50:	45aa      	cmp	sl, r5
 801de52:	f340 8091 	ble.w	801df78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801de56:	2f00      	cmp	r7, #0
 801de58:	f000 808e 	beq.w	801df78 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801de5c:	2c00      	cmp	r4, #0
 801de5e:	f2c0 8089 	blt.w	801df74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801de62:	42a3      	cmp	r3, r4
 801de64:	f340 8086 	ble.w	801df74 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801de68:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801de6c:	3401      	adds	r4, #1
 801de6e:	f100 8086 	bmi.w	801df7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de72:	42a3      	cmp	r3, r4
 801de74:	f340 8083 	ble.w	801df7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de78:	f1b9 0f00 	cmp.w	r9, #0
 801de7c:	d07f      	beq.n	801df7e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801de7e:	3301      	adds	r3, #1
 801de80:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801de84:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801de88:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801de8c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801de90:	fb19 fe07 	smulbb	lr, r9, r7
 801de94:	ea44 0808 	orr.w	r8, r4, r8
 801de98:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801de9c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801dea0:	f1c7 0210 	rsb	r2, r7, #16
 801dea4:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801dea8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801deac:	ea44 0c0c 	orr.w	ip, r4, ip
 801deb0:	eba2 0209 	sub.w	r2, r2, r9
 801deb4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801deb8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801debc:	fb04 f40c 	mul.w	r4, r4, ip
 801dec0:	fb02 4808 	mla	r8, r2, r8, r4
 801dec4:	041a      	lsls	r2, r3, #16
 801dec6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801deca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dece:	4313      	orrs	r3, r2
 801ded0:	042a      	lsls	r2, r5, #16
 801ded2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801ded6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801deda:	fb0e 8303 	mla	r3, lr, r3, r8
 801dede:	432a      	orrs	r2, r5
 801dee0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801dee4:	fb07 3202 	mla	r2, r7, r2, r3
 801dee8:	0d53      	lsrs	r3, r2, #21
 801deea:	0952      	lsrs	r2, r2, #5
 801deec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801def0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801def4:	431a      	orrs	r2, r3
 801def6:	b293      	uxth	r3, r2
 801def8:	b2b4      	uxth	r4, r6
 801defa:	1202      	asrs	r2, r0, #8
 801defc:	43f6      	mvns	r6, r6
 801defe:	b2f6      	uxtb	r6, r6
 801df00:	121d      	asrs	r5, r3, #8
 801df02:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801df06:	fb12 f206 	smulbb	r2, r2, r6
 801df0a:	10c7      	asrs	r7, r0, #3
 801df0c:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801df10:	00c0      	lsls	r0, r0, #3
 801df12:	fb05 2504 	mla	r5, r5, r4, r2
 801df16:	b2c0      	uxtb	r0, r0
 801df18:	10da      	asrs	r2, r3, #3
 801df1a:	00db      	lsls	r3, r3, #3
 801df1c:	b2db      	uxtb	r3, r3
 801df1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801df22:	fb10 f006 	smulbb	r0, r0, r6
 801df26:	b2ad      	uxth	r5, r5
 801df28:	fb03 0004 	mla	r0, r3, r4, r0
 801df2c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801df30:	fb17 f706 	smulbb	r7, r7, r6
 801df34:	b280      	uxth	r0, r0
 801df36:	1c6b      	adds	r3, r5, #1
 801df38:	fb02 7204 	mla	r2, r2, r4, r7
 801df3c:	b292      	uxth	r2, r2
 801df3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801df42:	1c43      	adds	r3, r0, #1
 801df44:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801df48:	1c50      	adds	r0, r2, #1
 801df4a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801df4e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801df52:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801df56:	0952      	lsrs	r2, r2, #5
 801df58:	432b      	orrs	r3, r5
 801df5a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801df5e:	4313      	orrs	r3, r2
 801df60:	800b      	strh	r3, [r1, #0]
 801df62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801df66:	4680      	mov	r8, r0
 801df68:	e763      	b.n	801de32 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801df6a:	4684      	mov	ip, r0
 801df6c:	4680      	mov	r8, r0
 801df6e:	e76c      	b.n	801de4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801df70:	4684      	mov	ip, r0
 801df72:	e76a      	b.n	801de4a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801df74:	4605      	mov	r5, r0
 801df76:	e779      	b.n	801de6c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801df78:	4603      	mov	r3, r0
 801df7a:	4605      	mov	r5, r0
 801df7c:	e782      	b.n	801de84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801df7e:	4603      	mov	r3, r0
 801df80:	e780      	b.n	801de84 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801df82 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801df82:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801df86:	b093      	sub	sp, #76	; 0x4c
 801df88:	461d      	mov	r5, r3
 801df8a:	9210      	str	r2, [sp, #64]	; 0x40
 801df8c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801df8e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801df92:	920b      	str	r2, [sp, #44]	; 0x2c
 801df94:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801df98:	910a      	str	r1, [sp, #40]	; 0x28
 801df9a:	6859      	ldr	r1, [r3, #4]
 801df9c:	681b      	ldr	r3, [r3, #0]
 801df9e:	9011      	str	r0, [sp, #68]	; 0x44
 801dfa0:	fb01 2707 	mla	r7, r1, r7, r2
 801dfa4:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801dfa8:	9307      	str	r3, [sp, #28]
 801dfaa:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dfac:	681b      	ldr	r3, [r3, #0]
 801dfae:	9309      	str	r3, [sp, #36]	; 0x24
 801dfb0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801dfb2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801dfb6:	43db      	mvns	r3, r3
 801dfb8:	b2db      	uxtb	r3, r3
 801dfba:	9308      	str	r3, [sp, #32]
 801dfbc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dfbe:	2b00      	cmp	r3, #0
 801dfc0:	dc03      	bgt.n	801dfca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dfc2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dfc4:	2b00      	cmp	r3, #0
 801dfc6:	f340 8203 	ble.w	801e3d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dfca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dfcc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dfd0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dfd4:	1e48      	subs	r0, r1, #1
 801dfd6:	f102 3cff 	add.w	ip, r2, #4294967295
 801dfda:	2d00      	cmp	r5, #0
 801dfdc:	f340 80da 	ble.w	801e194 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dfe0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dfe4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dfe8:	d406      	bmi.n	801dff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dfea:	4586      	cmp	lr, r0
 801dfec:	da04      	bge.n	801dff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dfee:	2b00      	cmp	r3, #0
 801dff0:	db02      	blt.n	801dff8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dff2:	4563      	cmp	r3, ip
 801dff4:	f2c0 80cf 	blt.w	801e196 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dff8:	f11e 0e01 	adds.w	lr, lr, #1
 801dffc:	f100 80c1 	bmi.w	801e182 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e000:	4571      	cmp	r1, lr
 801e002:	f2c0 80be 	blt.w	801e182 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e006:	3301      	adds	r3, #1
 801e008:	f100 80bb 	bmi.w	801e182 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e00c:	429a      	cmp	r2, r3
 801e00e:	f2c0 80b8 	blt.w	801e182 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801e012:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801e016:	46a9      	mov	r9, r5
 801e018:	f1b9 0f00 	cmp.w	r9, #0
 801e01c:	f340 80d8 	ble.w	801e1d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801e020:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e022:	1421      	asrs	r1, r4, #16
 801e024:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e028:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e02c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e030:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e034:	f100 8111 	bmi.w	801e25a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e038:	f10e 3aff 	add.w	sl, lr, #4294967295
 801e03c:	4551      	cmp	r1, sl
 801e03e:	f280 810c 	bge.w	801e25a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e042:	2800      	cmp	r0, #0
 801e044:	f2c0 8109 	blt.w	801e25a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e048:	f103 3aff 	add.w	sl, r3, #4294967295
 801e04c:	4550      	cmp	r0, sl
 801e04e:	f280 8104 	bge.w	801e25a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801e052:	fa0f f38e 	sxth.w	r3, lr
 801e056:	fb00 1103 	mla	r1, r0, r3, r1
 801e05a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801e05c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801e060:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801e064:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801e068:	f1bc 0f00 	cmp.w	ip, #0
 801e06c:	d007      	beq.n	801e07e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801e06e:	005b      	lsls	r3, r3, #1
 801e070:	eb0a 0003 	add.w	r0, sl, r3
 801e074:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801e078:	930c      	str	r3, [sp, #48]	; 0x30
 801e07a:	8843      	ldrh	r3, [r0, #2]
 801e07c:	930d      	str	r3, [sp, #52]	; 0x34
 801e07e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801e082:	fb12 f30c 	smulbb	r3, r2, ip
 801e086:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801e08a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801e08e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e092:	10db      	asrs	r3, r3, #3
 801e094:	ea40 000e 	orr.w	r0, r0, lr
 801e098:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801e09c:	f1cc 0e10 	rsb	lr, ip, #16
 801e0a0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e0a4:	ebae 0e02 	sub.w	lr, lr, r2
 801e0a8:	ea4a 0101 	orr.w	r1, sl, r1
 801e0ac:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e0b0:	4351      	muls	r1, r2
 801e0b2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801e0b4:	9f08      	ldr	r7, [sp, #32]
 801e0b6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e0ba:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e0be:	0410      	lsls	r0, r2, #16
 801e0c0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e0c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e0c8:	4310      	orrs	r0, r2
 801e0ca:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e0cc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801e0ce:	0412      	lsls	r2, r2, #16
 801e0d0:	fb03 e000 	mla	r0, r3, r0, lr
 801e0d4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e0d8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e0dc:	ea42 020e 	orr.w	r2, r2, lr
 801e0e0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e0e4:	fb03 0302 	mla	r3, r3, r2, r0
 801e0e8:	0d5a      	lsrs	r2, r3, #21
 801e0ea:	095b      	lsrs	r3, r3, #5
 801e0ec:	f8b8 0000 	ldrh.w	r0, [r8]
 801e0f0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e0f4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e0f8:	4313      	orrs	r3, r2
 801e0fa:	b29b      	uxth	r3, r3
 801e0fc:	1201      	asrs	r1, r0, #8
 801e0fe:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801e102:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801e106:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e10a:	fb11 f107 	smulbb	r1, r1, r7
 801e10e:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801e112:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801e116:	00c0      	lsls	r0, r0, #3
 801e118:	fb0c 1c02 	mla	ip, ip, r2, r1
 801e11c:	b2c0      	uxtb	r0, r0
 801e11e:	10d9      	asrs	r1, r3, #3
 801e120:	00db      	lsls	r3, r3, #3
 801e122:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801e126:	b2db      	uxtb	r3, r3
 801e128:	fb10 f007 	smulbb	r0, r0, r7
 801e12c:	fa1f fc8c 	uxth.w	ip, ip
 801e130:	fb03 0302 	mla	r3, r3, r2, r0
 801e134:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e138:	fb1e fe07 	smulbb	lr, lr, r7
 801e13c:	fb01 e102 	mla	r1, r1, r2, lr
 801e140:	b29a      	uxth	r2, r3
 801e142:	f10c 0301 	add.w	r3, ip, #1
 801e146:	b289      	uxth	r1, r1
 801e148:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801e14c:	1c53      	adds	r3, r2, #1
 801e14e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e152:	1c4a      	adds	r2, r1, #1
 801e154:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801e158:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801e15c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e160:	0949      	lsrs	r1, r1, #5
 801e162:	ea43 030c 	orr.w	r3, r3, ip
 801e166:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801e16a:	430b      	orrs	r3, r1
 801e16c:	f8a8 3000 	strh.w	r3, [r8]
 801e170:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e172:	441c      	add	r4, r3
 801e174:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e176:	f108 0802 	add.w	r8, r8, #2
 801e17a:	441e      	add	r6, r3
 801e17c:	f109 39ff 	add.w	r9, r9, #4294967295
 801e180:	e74a      	b.n	801e018 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801e182:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e184:	441c      	add	r4, r3
 801e186:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e188:	441e      	add	r6, r3
 801e18a:	9b07      	ldr	r3, [sp, #28]
 801e18c:	3302      	adds	r3, #2
 801e18e:	3d01      	subs	r5, #1
 801e190:	9307      	str	r3, [sp, #28]
 801e192:	e722      	b.n	801dfda <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801e194:	d022      	beq.n	801e1dc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801e196:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801e198:	1e6b      	subs	r3, r5, #1
 801e19a:	fb00 4003 	mla	r0, r0, r3, r4
 801e19e:	1400      	asrs	r0, r0, #16
 801e1a0:	f53f af37 	bmi.w	801e012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e1a4:	3901      	subs	r1, #1
 801e1a6:	4288      	cmp	r0, r1
 801e1a8:	f6bf af33 	bge.w	801e012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e1ac:	9920      	ldr	r1, [sp, #128]	; 0x80
 801e1ae:	fb01 6303 	mla	r3, r1, r3, r6
 801e1b2:	141b      	asrs	r3, r3, #16
 801e1b4:	f53f af2d 	bmi.w	801e012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e1b8:	3a01      	subs	r2, #1
 801e1ba:	4293      	cmp	r3, r2
 801e1bc:	f6bf af29 	bge.w	801e012 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801e1c0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801e1c4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801e1c8:	46a8      	mov	r8, r5
 801e1ca:	f1b8 0f00 	cmp.w	r8, #0
 801e1ce:	dc5e      	bgt.n	801e28e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801e1d0:	9b07      	ldr	r3, [sp, #28]
 801e1d2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e1d6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e1da:	9307      	str	r3, [sp, #28]
 801e1dc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e1de:	2b00      	cmp	r3, #0
 801e1e0:	f340 80f6 	ble.w	801e3d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801e1e4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e1e8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e1ec:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e1f0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e1f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e1f6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e1fa:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e1fe:	eef0 6a62 	vmov.f32	s13, s5
 801e202:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e206:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e20a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e20e:	ee16 4a90 	vmov	r4, s13
 801e212:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e216:	eef0 6a43 	vmov.f32	s13, s6
 801e21a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e21e:	ee12 2a90 	vmov	r2, s5
 801e222:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e226:	fb92 f3f3 	sdiv	r3, r2, r3
 801e22a:	ee13 2a10 	vmov	r2, s6
 801e22e:	931f      	str	r3, [sp, #124]	; 0x7c
 801e230:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e232:	fb92 f3f3 	sdiv	r3, r2, r3
 801e236:	9320      	str	r3, [sp, #128]	; 0x80
 801e238:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e23a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801e23c:	3b01      	subs	r3, #1
 801e23e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e242:	930a      	str	r3, [sp, #40]	; 0x28
 801e244:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e246:	ee16 6a90 	vmov	r6, s13
 801e24a:	bf14      	ite	ne
 801e24c:	461d      	movne	r5, r3
 801e24e:	4615      	moveq	r5, r2
 801e250:	eeb0 3a67 	vmov.f32	s6, s15
 801e254:	eef0 2a47 	vmov.f32	s5, s14
 801e258:	e6b0      	b.n	801dfbc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801e25a:	f111 0a01 	adds.w	sl, r1, #1
 801e25e:	d487      	bmi.n	801e170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e260:	45d6      	cmp	lr, sl
 801e262:	db85      	blt.n	801e170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e264:	f110 0a01 	adds.w	sl, r0, #1
 801e268:	d482      	bmi.n	801e170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e26a:	4553      	cmp	r3, sl
 801e26c:	db80      	blt.n	801e170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e26e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801e270:	9101      	str	r1, [sp, #4]
 801e272:	b21b      	sxth	r3, r3
 801e274:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801e278:	9300      	str	r3, [sp, #0]
 801e27a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801e27e:	fa0f f38e 	sxth.w	r3, lr
 801e282:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e284:	9811      	ldr	r0, [sp, #68]	; 0x44
 801e286:	4641      	mov	r1, r8
 801e288:	f7ff fdb4 	bl	801ddf4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801e28c:	e770      	b.n	801e170 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801e28e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801e290:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801e292:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e296:	1430      	asrs	r0, r6, #16
 801e298:	1423      	asrs	r3, r4, #16
 801e29a:	fb01 3000 	mla	r0, r1, r0, r3
 801e29e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801e2a0:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801e2a4:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801e2a8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e2ac:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e2b0:	8858      	ldrh	r0, [r3, #2]
 801e2b2:	f1be 0f00 	cmp.w	lr, #0
 801e2b6:	d00b      	beq.n	801e2d0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801e2b8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801e2bc:	3901      	subs	r1, #1
 801e2be:	0049      	lsls	r1, r1, #1
 801e2c0:	3102      	adds	r1, #2
 801e2c2:	eb03 0b01 	add.w	fp, r3, r1
 801e2c6:	5a5b      	ldrh	r3, [r3, r1]
 801e2c8:	930e      	str	r3, [sp, #56]	; 0x38
 801e2ca:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e2ce:	930f      	str	r3, [sp, #60]	; 0x3c
 801e2d0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801e2d4:	fb12 f30e 	smulbb	r3, r2, lr
 801e2d8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e2dc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801e2e0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801e2e4:	10db      	asrs	r3, r3, #3
 801e2e6:	ea41 010c 	orr.w	r1, r1, ip
 801e2ea:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e2ee:	f1ce 0c10 	rsb	ip, lr, #16
 801e2f2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e2f6:	ebac 0c02 	sub.w	ip, ip, r2
 801e2fa:	ea4b 0000 	orr.w	r0, fp, r0
 801e2fe:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e302:	4350      	muls	r0, r2
 801e304:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801e306:	9f08      	ldr	r7, [sp, #32]
 801e308:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e30c:	fb0c 0c01 	mla	ip, ip, r1, r0
 801e310:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e314:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801e318:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801e31a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801e31c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e320:	0412      	lsls	r2, r2, #16
 801e322:	ea4b 0101 	orr.w	r1, fp, r1
 801e326:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e32a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e32e:	fb03 c101 	mla	r1, r3, r1, ip
 801e332:	4302      	orrs	r2, r0
 801e334:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e338:	fb03 1202 	mla	r2, r3, r2, r1
 801e33c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801e340:	0952      	lsrs	r2, r2, #5
 801e342:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801e346:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801e34a:	f8b9 2000 	ldrh.w	r2, [r9]
 801e34e:	ea4b 0303 	orr.w	r3, fp, r3
 801e352:	b29b      	uxth	r3, r3
 801e354:	1211      	asrs	r1, r2, #8
 801e356:	1218      	asrs	r0, r3, #8
 801e358:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e35c:	fb11 f107 	smulbb	r1, r1, r7
 801e360:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801e364:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801e368:	00d2      	lsls	r2, r2, #3
 801e36a:	fb00 100a 	mla	r0, r0, sl, r1
 801e36e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801e372:	10d9      	asrs	r1, r3, #3
 801e374:	b2d2      	uxtb	r2, r2
 801e376:	00db      	lsls	r3, r3, #3
 801e378:	fb1c fc07 	smulbb	ip, ip, r7
 801e37c:	fb12 f207 	smulbb	r2, r2, r7
 801e380:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801e384:	b2db      	uxtb	r3, r3
 801e386:	b280      	uxth	r0, r0
 801e388:	fb01 c10a 	mla	r1, r1, sl, ip
 801e38c:	fb03 230a 	mla	r3, r3, sl, r2
 801e390:	b29b      	uxth	r3, r3
 801e392:	b289      	uxth	r1, r1
 801e394:	1c42      	adds	r2, r0, #1
 801e396:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801e39a:	f101 0c01 	add.w	ip, r1, #1
 801e39e:	1c5a      	adds	r2, r3, #1
 801e3a0:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801e3a4:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801e3a8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801e3aa:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801e3ae:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801e3b2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801e3b6:	4310      	orrs	r0, r2
 801e3b8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801e3bc:	441c      	add	r4, r3
 801e3be:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e3c0:	ea40 000c 	orr.w	r0, r0, ip
 801e3c4:	f829 0b02 	strh.w	r0, [r9], #2
 801e3c8:	441e      	add	r6, r3
 801e3ca:	f108 38ff 	add.w	r8, r8, #4294967295
 801e3ce:	e6fc      	b.n	801e1ca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801e3d0:	b013      	add	sp, #76	; 0x4c
 801e3d2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e3d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801e3d6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801e3da:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801e3de:	fb0e 4703 	mla	r7, lr, r3, r4
 801e3e2:	f1be 0f00 	cmp.w	lr, #0
 801e3e6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801e3ea:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801e3ee:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801e3f2:	8808      	ldrh	r0, [r1, #0]
 801e3f4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801e3f8:	db60      	blt.n	801e4bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e3fa:	45f1      	cmp	r9, lr
 801e3fc:	dd5e      	ble.n	801e4bc <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801e3fe:	2c00      	cmp	r4, #0
 801e400:	db5a      	blt.n	801e4b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e402:	42a3      	cmp	r3, r4
 801e404:	dd58      	ble.n	801e4b8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801e406:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801e40a:	1c62      	adds	r2, r4, #1
 801e40c:	d459      	bmi.n	801e4c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e40e:	4293      	cmp	r3, r2
 801e410:	dd57      	ble.n	801e4c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e412:	2d00      	cmp	r5, #0
 801e414:	d055      	beq.n	801e4c2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801e416:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801e41a:	f11e 0e01 	adds.w	lr, lr, #1
 801e41e:	d454      	bmi.n	801e4ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e420:	45f1      	cmp	r9, lr
 801e422:	dd52      	ble.n	801e4ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e424:	2e00      	cmp	r6, #0
 801e426:	d050      	beq.n	801e4ca <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801e428:	2c00      	cmp	r4, #0
 801e42a:	db4c      	blt.n	801e4c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e42c:	42a3      	cmp	r3, r4
 801e42e:	dd4a      	ble.n	801e4c6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801e430:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801e434:	3401      	adds	r4, #1
 801e436:	d405      	bmi.n	801e444 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e438:	42a3      	cmp	r3, r4
 801e43a:	dd03      	ble.n	801e444 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e43c:	b115      	cbz	r5, 801e444 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801e43e:	3301      	adds	r3, #1
 801e440:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801e444:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801e448:	fb15 f406 	smulbb	r4, r5, r6
 801e44c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e450:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801e454:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e458:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801e45c:	ea43 0c0c 	orr.w	ip, r3, ip
 801e460:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801e464:	f1c6 0310 	rsb	r3, r6, #16
 801e468:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801e46c:	1b5b      	subs	r3, r3, r5
 801e46e:	ea4e 0707 	orr.w	r7, lr, r7
 801e472:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801e476:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801e47a:	437d      	muls	r5, r7
 801e47c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801e480:	0403      	lsls	r3, r0, #16
 801e482:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e486:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e48a:	4318      	orrs	r0, r3
 801e48c:	0413      	lsls	r3, r2, #16
 801e48e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801e492:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e496:	4313      	orrs	r3, r2
 801e498:	fb04 c000 	mla	r0, r4, r0, ip
 801e49c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801e4a0:	fb06 0003 	mla	r0, r6, r3, r0
 801e4a4:	0d43      	lsrs	r3, r0, #21
 801e4a6:	0940      	lsrs	r0, r0, #5
 801e4a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e4ac:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e4b0:	4318      	orrs	r0, r3
 801e4b2:	8008      	strh	r0, [r1, #0]
 801e4b4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801e4b8:	4684      	mov	ip, r0
 801e4ba:	e7a6      	b.n	801e40a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801e4bc:	4607      	mov	r7, r0
 801e4be:	4684      	mov	ip, r0
 801e4c0:	e7ab      	b.n	801e41a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e4c2:	4607      	mov	r7, r0
 801e4c4:	e7a9      	b.n	801e41a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801e4c6:	4602      	mov	r2, r0
 801e4c8:	e7b4      	b.n	801e434 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801e4ca:	4602      	mov	r2, r0
 801e4cc:	e7ba      	b.n	801e444 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801e4ce <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e4ce:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e4d2:	b08f      	sub	sp, #60	; 0x3c
 801e4d4:	461d      	mov	r5, r3
 801e4d6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801e4d8:	920c      	str	r2, [sp, #48]	; 0x30
 801e4da:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801e4de:	9107      	str	r1, [sp, #28]
 801e4e0:	6859      	ldr	r1, [r3, #4]
 801e4e2:	681b      	ldr	r3, [r3, #0]
 801e4e4:	900d      	str	r0, [sp, #52]	; 0x34
 801e4e6:	fb01 2707 	mla	r7, r1, r7, r2
 801e4ea:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801e4ee:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e4f0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801e4f4:	f8d3 8000 	ldr.w	r8, [r3]
 801e4f8:	9b07      	ldr	r3, [sp, #28]
 801e4fa:	2b00      	cmp	r3, #0
 801e4fc:	dc03      	bgt.n	801e506 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e4fe:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801e500:	2b00      	cmp	r3, #0
 801e502:	f340 8181 	ble.w	801e808 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e506:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e508:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e50c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e510:	1e48      	subs	r0, r1, #1
 801e512:	f102 3cff 	add.w	ip, r2, #4294967295
 801e516:	2d00      	cmp	r5, #0
 801e518:	f340 809b 	ble.w	801e652 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e51c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e520:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e524:	d406      	bmi.n	801e534 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e526:	4586      	cmp	lr, r0
 801e528:	da04      	bge.n	801e534 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e52a:	2b00      	cmp	r3, #0
 801e52c:	db02      	blt.n	801e534 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e52e:	4563      	cmp	r3, ip
 801e530:	f2c0 8090 	blt.w	801e654 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e534:	f11e 0e01 	adds.w	lr, lr, #1
 801e538:	f100 8084 	bmi.w	801e644 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e53c:	4571      	cmp	r1, lr
 801e53e:	f2c0 8081 	blt.w	801e644 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e542:	3301      	adds	r3, #1
 801e544:	d47e      	bmi.n	801e644 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e546:	429a      	cmp	r2, r3
 801e548:	db7c      	blt.n	801e644 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e54a:	46aa      	mov	sl, r5
 801e54c:	46b9      	mov	r9, r7
 801e54e:	f1ba 0f00 	cmp.w	sl, #0
 801e552:	f340 8099 	ble.w	801e688 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e556:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e558:	1421      	asrs	r1, r4, #16
 801e55a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e55e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e562:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e566:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e56a:	f100 80d0 	bmi.w	801e70e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e56e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e572:	4559      	cmp	r1, fp
 801e574:	f280 80cb 	bge.w	801e70e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e578:	2800      	cmp	r0, #0
 801e57a:	f2c0 80c8 	blt.w	801e70e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e57e:	f103 3bff 	add.w	fp, r3, #4294967295
 801e582:	4558      	cmp	r0, fp
 801e584:	f280 80c3 	bge.w	801e70e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e588:	fa0f fe8e 	sxth.w	lr, lr
 801e58c:	fb00 110e 	mla	r1, r0, lr, r1
 801e590:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e594:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e598:	8841      	ldrh	r1, [r0, #2]
 801e59a:	f1bc 0f00 	cmp.w	ip, #0
 801e59e:	d00b      	beq.n	801e5b8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e5a0:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801e5a4:	3b01      	subs	r3, #1
 801e5a6:	005b      	lsls	r3, r3, #1
 801e5a8:	3302      	adds	r3, #2
 801e5aa:	eb00 0e03 	add.w	lr, r0, r3
 801e5ae:	5ac3      	ldrh	r3, [r0, r3]
 801e5b0:	9308      	str	r3, [sp, #32]
 801e5b2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e5b6:	9309      	str	r3, [sp, #36]	; 0x24
 801e5b8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e5bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e5c0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801e5c4:	ea40 000b 	orr.w	r0, r0, fp
 801e5c8:	fb12 f30c 	smulbb	r3, r2, ip
 801e5cc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e5d0:	10db      	asrs	r3, r3, #3
 801e5d2:	f1cc 0e10 	rsb	lr, ip, #16
 801e5d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e5da:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e5de:	ebae 0e02 	sub.w	lr, lr, r2
 801e5e2:	ea4b 0101 	orr.w	r1, fp, r1
 801e5e6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e5ea:	4351      	muls	r1, r2
 801e5ec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e5ee:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e5f2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e5f6:	0410      	lsls	r0, r2, #16
 801e5f8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e5fc:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e600:	4310      	orrs	r0, r2
 801e602:	9a08      	ldr	r2, [sp, #32]
 801e604:	9908      	ldr	r1, [sp, #32]
 801e606:	0412      	lsls	r2, r2, #16
 801e608:	fb03 e000 	mla	r0, r3, r0, lr
 801e60c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e610:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e614:	ea42 020e 	orr.w	r2, r2, lr
 801e618:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e61c:	fb03 0302 	mla	r3, r3, r2, r0
 801e620:	0d5a      	lsrs	r2, r3, #21
 801e622:	095b      	lsrs	r3, r3, #5
 801e624:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e628:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e62c:	4313      	orrs	r3, r2
 801e62e:	f8a9 3000 	strh.w	r3, [r9]
 801e632:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e634:	441c      	add	r4, r3
 801e636:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e638:	f109 0902 	add.w	r9, r9, #2
 801e63c:	441e      	add	r6, r3
 801e63e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e642:	e784      	b.n	801e54e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e644:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e646:	441c      	add	r4, r3
 801e648:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e64a:	3d01      	subs	r5, #1
 801e64c:	441e      	add	r6, r3
 801e64e:	3702      	adds	r7, #2
 801e650:	e761      	b.n	801e516 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e652:	d01d      	beq.n	801e690 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e654:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e656:	1e6b      	subs	r3, r5, #1
 801e658:	fb00 4003 	mla	r0, r0, r3, r4
 801e65c:	1400      	asrs	r0, r0, #16
 801e65e:	f53f af74 	bmi.w	801e54a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e662:	3901      	subs	r1, #1
 801e664:	4288      	cmp	r0, r1
 801e666:	f6bf af70 	bge.w	801e54a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e66a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e66c:	fb01 6303 	mla	r3, r1, r3, r6
 801e670:	141b      	asrs	r3, r3, #16
 801e672:	f53f af6a 	bmi.w	801e54a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e676:	3a01      	subs	r2, #1
 801e678:	4293      	cmp	r3, r2
 801e67a:	f6bf af66 	bge.w	801e54a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e67e:	46a9      	mov	r9, r5
 801e680:	46ba      	mov	sl, r7
 801e682:	f1b9 0f00 	cmp.w	r9, #0
 801e686:	dc5a      	bgt.n	801e73e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e688:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e68c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e690:	9b07      	ldr	r3, [sp, #28]
 801e692:	2b00      	cmp	r3, #0
 801e694:	f340 80b8 	ble.w	801e808 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e698:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e69c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e6a0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e6a4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e6a6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e6aa:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e6ae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e6b2:	eef0 6a62 	vmov.f32	s13, s5
 801e6b6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e6ba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e6be:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e6c2:	ee16 4a90 	vmov	r4, s13
 801e6c6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e6ca:	eef0 6a43 	vmov.f32	s13, s6
 801e6ce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e6d2:	ee12 2a90 	vmov	r2, s5
 801e6d6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e6da:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6de:	ee13 2a10 	vmov	r2, s6
 801e6e2:	931b      	str	r3, [sp, #108]	; 0x6c
 801e6e4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e6e6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e6ea:	931c      	str	r3, [sp, #112]	; 0x70
 801e6ec:	9b07      	ldr	r3, [sp, #28]
 801e6ee:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e6f0:	3b01      	subs	r3, #1
 801e6f2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e6f6:	9307      	str	r3, [sp, #28]
 801e6f8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e6fa:	ee16 6a90 	vmov	r6, s13
 801e6fe:	bf14      	ite	ne
 801e700:	461d      	movne	r5, r3
 801e702:	4615      	moveq	r5, r2
 801e704:	eeb0 3a67 	vmov.f32	s6, s15
 801e708:	eef0 2a47 	vmov.f32	s5, s14
 801e70c:	e6f4      	b.n	801e4f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e70e:	f111 0b01 	adds.w	fp, r1, #1
 801e712:	d48e      	bmi.n	801e632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e714:	45de      	cmp	lr, fp
 801e716:	db8c      	blt.n	801e632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e718:	f110 0b01 	adds.w	fp, r0, #1
 801e71c:	d489      	bmi.n	801e632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e71e:	455b      	cmp	r3, fp
 801e720:	db87      	blt.n	801e632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e722:	b21b      	sxth	r3, r3
 801e724:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e728:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e72c:	9300      	str	r3, [sp, #0]
 801e72e:	4642      	mov	r2, r8
 801e730:	fa0f f38e 	sxth.w	r3, lr
 801e734:	4649      	mov	r1, r9
 801e736:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e738:	f7ff fe4d 	bl	801e3d6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e73c:	e779      	b.n	801e632 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e73e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e740:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e744:	1420      	asrs	r0, r4, #16
 801e746:	1431      	asrs	r1, r6, #16
 801e748:	fb03 0101 	mla	r1, r3, r1, r0
 801e74c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e750:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e754:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e758:	8841      	ldrh	r1, [r0, #2]
 801e75a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e75e:	f1be 0f00 	cmp.w	lr, #0
 801e762:	d00b      	beq.n	801e77c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e764:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801e768:	3b01      	subs	r3, #1
 801e76a:	005b      	lsls	r3, r3, #1
 801e76c:	3302      	adds	r3, #2
 801e76e:	eb00 0b03 	add.w	fp, r0, r3
 801e772:	5ac3      	ldrh	r3, [r0, r3]
 801e774:	930a      	str	r3, [sp, #40]	; 0x28
 801e776:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e77a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e77c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e780:	fb12 f30e 	smulbb	r3, r2, lr
 801e784:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e788:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e78c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e790:	10db      	asrs	r3, r3, #3
 801e792:	ea40 000c 	orr.w	r0, r0, ip
 801e796:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e79a:	f1ce 0c10 	rsb	ip, lr, #16
 801e79e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e7a2:	ebac 0c02 	sub.w	ip, ip, r2
 801e7a6:	ea4b 0101 	orr.w	r1, fp, r1
 801e7aa:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e7ae:	4351      	muls	r1, r2
 801e7b0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e7b2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e7b6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e7ba:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e7be:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801e7c2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e7c4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e7c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e7ca:	0412      	lsls	r2, r2, #16
 801e7cc:	ea4b 0000 	orr.w	r0, fp, r0
 801e7d0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e7d4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801e7d8:	fb03 c000 	mla	r0, r3, r0, ip
 801e7dc:	ea42 0b0b 	orr.w	fp, r2, fp
 801e7e0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e7e4:	fb03 000b 	mla	r0, r3, fp, r0
 801e7e8:	0d43      	lsrs	r3, r0, #21
 801e7ea:	0940      	lsrs	r0, r0, #5
 801e7ec:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e7f0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e7f4:	4318      	orrs	r0, r3
 801e7f6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e7f8:	f82a 0b02 	strh.w	r0, [sl], #2
 801e7fc:	441c      	add	r4, r3
 801e7fe:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e800:	f109 39ff 	add.w	r9, r9, #4294967295
 801e804:	441e      	add	r6, r3
 801e806:	e73c      	b.n	801e682 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e808:	b00f      	add	sp, #60	; 0x3c
 801e80a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e80e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e80e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e812:	b085      	sub	sp, #20
 801e814:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e818:	9102      	str	r1, [sp, #8]
 801e81a:	2c00      	cmp	r4, #0
 801e81c:	fb04 7103 	mla	r1, r4, r3, r7
 801e820:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e824:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e828:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e82c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e830:	f2c0 811b 	blt.w	801ea6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e834:	45a6      	cmp	lr, r4
 801e836:	f340 8118 	ble.w	801ea6a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e83a:	2f00      	cmp	r7, #0
 801e83c:	f2c0 8113 	blt.w	801ea66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e840:	42bb      	cmp	r3, r7
 801e842:	f340 8110 	ble.w	801ea66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e846:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e84a:	1c7a      	adds	r2, r7, #1
 801e84c:	f100 8110 	bmi.w	801ea70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e850:	4293      	cmp	r3, r2
 801e852:	f340 810d 	ble.w	801ea70 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e856:	2e00      	cmp	r6, #0
 801e858:	f000 810c 	beq.w	801ea74 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e85c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e860:	3401      	adds	r4, #1
 801e862:	f100 810b 	bmi.w	801ea7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e866:	45a6      	cmp	lr, r4
 801e868:	f340 8108 	ble.w	801ea7c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e86c:	2800      	cmp	r0, #0
 801e86e:	f000 8108 	beq.w	801ea82 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e872:	2f00      	cmp	r7, #0
 801e874:	f2c0 8100 	blt.w	801ea78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e878:	42bb      	cmp	r3, r7
 801e87a:	f340 80fd 	ble.w	801ea78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e87e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e882:	3701      	adds	r7, #1
 801e884:	f100 8100 	bmi.w	801ea88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e888:	42bb      	cmp	r3, r7
 801e88a:	f340 80fd 	ble.w	801ea88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e88e:	2e00      	cmp	r6, #0
 801e890:	f000 80fc 	beq.w	801ea8c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e894:	3301      	adds	r3, #1
 801e896:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e89a:	b2b6      	uxth	r6, r6
 801e89c:	b280      	uxth	r0, r0
 801e89e:	fb00 fe06 	mul.w	lr, r0, r6
 801e8a2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e8a6:	0136      	lsls	r6, r6, #4
 801e8a8:	eba6 070e 	sub.w	r7, r6, lr
 801e8ac:	b280      	uxth	r0, r0
 801e8ae:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e8b2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e8b6:	b2bf      	uxth	r7, r7
 801e8b8:	1a1b      	subs	r3, r3, r0
 801e8ba:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e8be:	b29b      	uxth	r3, r3
 801e8c0:	fb0a f607 	mul.w	r6, sl, r7
 801e8c4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e8c8:	fb0b 6603 	mla	r6, fp, r3, r6
 801e8cc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e8d0:	fb00 6609 	mla	r6, r0, r9, r6
 801e8d4:	fb0e 6608 	mla	r6, lr, r8, r6
 801e8d8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e8dc:	9600      	str	r6, [sp, #0]
 801e8de:	2e00      	cmp	r6, #0
 801e8e0:	f000 80be 	beq.w	801ea60 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e8e4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e8e8:	fb0b fc0c 	mul.w	ip, fp, ip
 801e8ec:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e8f0:	fb0b f505 	mul.w	r5, fp, r5
 801e8f4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e8f8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e8fc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e900:	44dc      	add	ip, fp
 801e902:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e906:	9501      	str	r5, [sp, #4]
 801e908:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e90c:	9503      	str	r5, [sp, #12]
 801e90e:	9d01      	ldr	r5, [sp, #4]
 801e910:	9e02      	ldr	r6, [sp, #8]
 801e912:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e916:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e91a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e91e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e922:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e926:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e92a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e92e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e932:	4465      	add	r5, ip
 801e934:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e938:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e93c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e940:	fb09 f904 	mul.w	r9, r9, r4
 801e944:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e948:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e94c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e950:	fb08 f404 	mul.w	r4, r8, r4
 801e954:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e958:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e95c:	fb08 f802 	mul.w	r8, r8, r2
 801e960:	fb0a fa01 	mul.w	sl, sl, r1
 801e964:	0a22      	lsrs	r2, r4, #8
 801e966:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e96a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e96e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e972:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e976:	4414      	add	r4, r2
 801e978:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e97c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e980:	0a2d      	lsrs	r5, r5, #8
 801e982:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e986:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e98a:	9a03      	ldr	r2, [sp, #12]
 801e98c:	8836      	ldrh	r6, [r6, #0]
 801e98e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e992:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e996:	437d      	muls	r5, r7
 801e998:	4461      	add	r1, ip
 801e99a:	0a24      	lsrs	r4, r4, #8
 801e99c:	fb02 5503 	mla	r5, r2, r3, r5
 801e9a0:	0a09      	lsrs	r1, r1, #8
 801e9a2:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e9a6:	fb04 540e 	mla	r4, r4, lr, r5
 801e9aa:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e9ae:	fb01 4100 	mla	r1, r1, r0, r4
 801e9b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e9b6:	0a09      	lsrs	r1, r1, #8
 801e9b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e9bc:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e9c0:	fb07 f70a 	mul.w	r7, r7, sl
 801e9c4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e9c8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e9cc:	fb03 7101 	mla	r1, r3, r1, r7
 801e9d0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e9d4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e9d8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e9dc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e9e0:	fb00 e101 	mla	r1, r0, r1, lr
 801e9e4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e9e8:	9a00      	ldr	r2, [sp, #0]
 801e9ea:	b287      	uxth	r7, r0
 801e9ec:	437a      	muls	r2, r7
 801e9ee:	0a09      	lsrs	r1, r1, #8
 801e9f0:	1c53      	adds	r3, r2, #1
 801e9f2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e9f6:	4321      	orrs	r1, r4
 801e9f8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e9fc:	1235      	asrs	r5, r6, #8
 801e9fe:	0c0a      	lsrs	r2, r1, #16
 801ea00:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801ea04:	b2db      	uxtb	r3, r3
 801ea06:	fb12 f207 	smulbb	r2, r2, r7
 801ea0a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801ea0e:	fb05 2503 	mla	r5, r5, r3, r2
 801ea12:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801ea16:	10f2      	asrs	r2, r6, #3
 801ea18:	b2c8      	uxtb	r0, r1
 801ea1a:	00f6      	lsls	r6, r6, #3
 801ea1c:	fb14 f407 	smulbb	r4, r4, r7
 801ea20:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801ea24:	b2f6      	uxtb	r6, r6
 801ea26:	fb10 f007 	smulbb	r0, r0, r7
 801ea2a:	fb02 4203 	mla	r2, r2, r3, r4
 801ea2e:	b2ad      	uxth	r5, r5
 801ea30:	fb06 0303 	mla	r3, r6, r3, r0
 801ea34:	b299      	uxth	r1, r3
 801ea36:	b294      	uxth	r4, r2
 801ea38:	1c6b      	adds	r3, r5, #1
 801ea3a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801ea3e:	1c62      	adds	r2, r4, #1
 801ea40:	1c4b      	adds	r3, r1, #1
 801ea42:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801ea46:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801ea4a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801ea4e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ea52:	0952      	lsrs	r2, r2, #5
 801ea54:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801ea58:	432b      	orrs	r3, r5
 801ea5a:	4313      	orrs	r3, r2
 801ea5c:	9a02      	ldr	r2, [sp, #8]
 801ea5e:	8013      	strh	r3, [r2, #0]
 801ea60:	b005      	add	sp, #20
 801ea62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ea66:	2500      	movs	r5, #0
 801ea68:	e6ef      	b.n	801e84a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801ea6a:	2100      	movs	r1, #0
 801ea6c:	460d      	mov	r5, r1
 801ea6e:	e6f7      	b.n	801e860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea70:	2100      	movs	r1, #0
 801ea72:	e6f5      	b.n	801e860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea74:	4631      	mov	r1, r6
 801ea76:	e6f3      	b.n	801e860 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801ea78:	2400      	movs	r4, #0
 801ea7a:	e702      	b.n	801e882 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801ea7c:	2200      	movs	r2, #0
 801ea7e:	4614      	mov	r4, r2
 801ea80:	e70b      	b.n	801e89a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea82:	4602      	mov	r2, r0
 801ea84:	4604      	mov	r4, r0
 801ea86:	e708      	b.n	801e89a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea88:	2200      	movs	r2, #0
 801ea8a:	e706      	b.n	801e89a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801ea8c:	4632      	mov	r2, r6
 801ea8e:	e704      	b.n	801e89a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801ea90 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ea90:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ea94:	b09d      	sub	sp, #116	; 0x74
 801ea96:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801ea9a:	9219      	str	r2, [sp, #100]	; 0x64
 801ea9c:	9307      	str	r3, [sp, #28]
 801ea9e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801eaa0:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801eaa4:	931a      	str	r3, [sp, #104]	; 0x68
 801eaa6:	9117      	str	r1, [sp, #92]	; 0x5c
 801eaa8:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801eaac:	901b      	str	r0, [sp, #108]	; 0x6c
 801eaae:	6850      	ldr	r0, [r2, #4]
 801eab0:	6812      	ldr	r2, [r2, #0]
 801eab2:	fb00 1303 	mla	r3, r0, r3, r1
 801eab6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801eaba:	930a      	str	r3, [sp, #40]	; 0x28
 801eabc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801eabe:	681b      	ldr	r3, [r3, #0]
 801eac0:	9310      	str	r3, [sp, #64]	; 0x40
 801eac2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801eac6:	930b      	str	r3, [sp, #44]	; 0x2c
 801eac8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eaca:	2b00      	cmp	r3, #0
 801eacc:	dc03      	bgt.n	801ead6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801eace:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801ead0:	2b00      	cmp	r3, #0
 801ead2:	f340 8375 	ble.w	801f1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ead6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ead8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eadc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eae0:	1e48      	subs	r0, r1, #1
 801eae2:	1e57      	subs	r7, r2, #1
 801eae4:	9b07      	ldr	r3, [sp, #28]
 801eae6:	2b00      	cmp	r3, #0
 801eae8:	f340 818e 	ble.w	801ee08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801eaec:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801eaf0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eaf4:	d406      	bmi.n	801eb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801eaf6:	4584      	cmp	ip, r0
 801eaf8:	da04      	bge.n	801eb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801eafa:	2b00      	cmp	r3, #0
 801eafc:	db02      	blt.n	801eb04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801eafe:	42bb      	cmp	r3, r7
 801eb00:	f2c0 8183 	blt.w	801ee0a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801eb04:	f11c 0c01 	adds.w	ip, ip, #1
 801eb08:	f100 8173 	bmi.w	801edf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eb0c:	4561      	cmp	r1, ip
 801eb0e:	f2c0 8170 	blt.w	801edf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eb12:	3301      	adds	r3, #1
 801eb14:	f100 816d 	bmi.w	801edf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eb18:	429a      	cmp	r2, r3
 801eb1a:	f2c0 816a 	blt.w	801edf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801eb1e:	9b07      	ldr	r3, [sp, #28]
 801eb20:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801eb22:	9318      	str	r3, [sp, #96]	; 0x60
 801eb24:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801eb26:	2b00      	cmp	r3, #0
 801eb28:	f340 818c 	ble.w	801ee44 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801eb2c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801eb2e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801eb30:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801eb34:	689b      	ldr	r3, [r3, #8]
 801eb36:	1422      	asrs	r2, r4, #16
 801eb38:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801eb3c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801eb40:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801eb44:	f100 81cd 	bmi.w	801eee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eb48:	f103 38ff 	add.w	r8, r3, #4294967295
 801eb4c:	4542      	cmp	r2, r8
 801eb4e:	f280 81c8 	bge.w	801eee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eb52:	f1bc 0f00 	cmp.w	ip, #0
 801eb56:	f2c0 81c4 	blt.w	801eee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eb5a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801eb5e:	45c4      	cmp	ip, r8
 801eb60:	f280 81bf 	bge.w	801eee2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801eb64:	b21b      	sxth	r3, r3
 801eb66:	fb0c 2203 	mla	r2, ip, r3, r2
 801eb6a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801eb6c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eb70:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eb74:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eb78:	2800      	cmp	r0, #0
 801eb7a:	f000 81a9 	beq.w	801eed0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801eb7e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801eb82:	950c      	str	r5, [sp, #48]	; 0x30
 801eb84:	0e2d      	lsrs	r5, r5, #24
 801eb86:	9513      	str	r5, [sp, #76]	; 0x4c
 801eb88:	b181      	cbz	r1, 801ebac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eb8a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801eb8e:	3b01      	subs	r3, #1
 801eb90:	009b      	lsls	r3, r3, #2
 801eb92:	3304      	adds	r3, #4
 801eb94:	eb08 0c03 	add.w	ip, r8, r3
 801eb98:	f858 3003 	ldr.w	r3, [r8, r3]
 801eb9c:	9308      	str	r3, [sp, #32]
 801eb9e:	0e1b      	lsrs	r3, r3, #24
 801eba0:	9311      	str	r3, [sp, #68]	; 0x44
 801eba2:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801eba6:	930d      	str	r3, [sp, #52]	; 0x34
 801eba8:	0e1b      	lsrs	r3, r3, #24
 801ebaa:	9314      	str	r3, [sp, #80]	; 0x50
 801ebac:	b280      	uxth	r0, r0
 801ebae:	b289      	uxth	r1, r1
 801ebb0:	fb00 f901 	mul.w	r9, r0, r1
 801ebb4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801ebb8:	0100      	lsls	r0, r0, #4
 801ebba:	eba0 0809 	sub.w	r8, r0, r9
 801ebbe:	b289      	uxth	r1, r1
 801ebc0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801ebc4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801ebc6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ebc8:	fa1f f888 	uxth.w	r8, r8
 801ebcc:	1a5b      	subs	r3, r3, r1
 801ebce:	b29b      	uxth	r3, r3
 801ebd0:	fb08 f000 	mul.w	r0, r8, r0
 801ebd4:	fb03 000e 	mla	r0, r3, lr, r0
 801ebd8:	fb01 0005 	mla	r0, r1, r5, r0
 801ebdc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ebde:	fb09 0005 	mla	r0, r9, r5, r0
 801ebe2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801ebe6:	2800      	cmp	r0, #0
 801ebe8:	f000 80fa 	beq.w	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ebec:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801ebf0:	d01b      	beq.n	801ec2a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801ebf2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801ebf6:	fb0e fa0a 	mul.w	sl, lr, sl
 801ebfa:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ebfe:	fb0e fe02 	mul.w	lr, lr, r2
 801ec02:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801ec06:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ec0a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801ec0e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801ec12:	4452      	add	r2, sl
 801ec14:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801ec18:	0a12      	lsrs	r2, r2, #8
 801ec1a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec1e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ec22:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ec26:	ea42 020c 	orr.w	r2, r2, ip
 801ec2a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec2c:	2dff      	cmp	r5, #255	; 0xff
 801ec2e:	d021      	beq.n	801ec74 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801ec30:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec32:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec36:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec38:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec3c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ec3e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ec42:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801ec44:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec48:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec4c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec50:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec54:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ec58:	44de      	add	lr, fp
 801ec5a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ec5e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ec62:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ec66:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec6a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ec6e:	ea4e 050a 	orr.w	r5, lr, sl
 801ec72:	950c      	str	r5, [sp, #48]	; 0x30
 801ec74:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec76:	2dff      	cmp	r5, #255	; 0xff
 801ec78:	d021      	beq.n	801ecbe <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801ec7a:	9d08      	ldr	r5, [sp, #32]
 801ec7c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ec80:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec82:	fb05 fb0b 	mul.w	fp, r5, fp
 801ec86:	9d08      	ldr	r5, [sp, #32]
 801ec88:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ec8c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801ec8e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ec92:	fb05 fa0a 	mul.w	sl, r5, sl
 801ec96:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ec9a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ec9e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801eca2:	44de      	add	lr, fp
 801eca4:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801eca8:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ecac:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecb0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ecb4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ecb8:	ea4e 050a 	orr.w	r5, lr, sl
 801ecbc:	9508      	str	r5, [sp, #32]
 801ecbe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ecc0:	2dff      	cmp	r5, #255	; 0xff
 801ecc2:	d021      	beq.n	801ed08 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801ecc4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ecc6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801ecca:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801eccc:	fb05 fb0b 	mul.w	fp, r5, fp
 801ecd0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ecd2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801ecd6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801ecd8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801ecdc:	fb05 fa0a 	mul.w	sl, r5, sl
 801ece0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ece4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801ece8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801ecec:	44de      	add	lr, fp
 801ecee:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801ecf2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801ecf6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ecfa:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801ecfe:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ed02:	ea4e 050a 	orr.w	r5, lr, sl
 801ed06:	950d      	str	r5, [sp, #52]	; 0x34
 801ed08:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ed0a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed0e:	9d08      	ldr	r5, [sp, #32]
 801ed10:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801ed14:	fb08 fc0c 	mul.w	ip, r8, ip
 801ed18:	fb03 cc0e 	mla	ip, r3, lr, ip
 801ed1c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ed20:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801ed22:	fb01 cc0e 	mla	ip, r1, lr, ip
 801ed26:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801ed2a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801ed2c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801ed30:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801ed34:	fb08 f80e 	mul.w	r8, r8, lr
 801ed38:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ed3c:	fb03 8202 	mla	r2, r3, r2, r8
 801ed40:	9b08      	ldr	r3, [sp, #32]
 801ed42:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ed44:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801ed48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ed4a:	fb01 220a 	mla	r2, r1, sl, r2
 801ed4e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801ed52:	fb09 2901 	mla	r9, r9, r1, r2
 801ed56:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801ed58:	883b      	ldrh	r3, [r7, #0]
 801ed5a:	4342      	muls	r2, r0
 801ed5c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ed60:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ed64:	1c50      	adds	r0, r2, #1
 801ed66:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ed6a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801ed6e:	ea4c 0c09 	orr.w	ip, ip, r9
 801ed72:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801ed76:	1219      	asrs	r1, r3, #8
 801ed78:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801ed7c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801ed80:	b2c0      	uxtb	r0, r0
 801ed82:	fb12 f205 	smulbb	r2, r2, r5
 801ed86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801ed8a:	fb01 2100 	mla	r1, r1, r0, r2
 801ed8e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801ed92:	10da      	asrs	r2, r3, #3
 801ed94:	fa5f fc8c 	uxtb.w	ip, ip
 801ed98:	00db      	lsls	r3, r3, #3
 801ed9a:	fb1c fc05 	smulbb	ip, ip, r5
 801ed9e:	b2db      	uxtb	r3, r3
 801eda0:	b289      	uxth	r1, r1
 801eda2:	fb03 c300 	mla	r3, r3, r0, ip
 801eda6:	fa1f fc83 	uxth.w	ip, r3
 801edaa:	1c4b      	adds	r3, r1, #1
 801edac:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801edb0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801edb4:	fb1e fe05 	smulbb	lr, lr, r5
 801edb8:	f10c 0301 	add.w	r3, ip, #1
 801edbc:	fb02 e200 	mla	r2, r2, r0, lr
 801edc0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801edc4:	b292      	uxth	r2, r2
 801edc6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801edca:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801edce:	430b      	orrs	r3, r1
 801edd0:	1c51      	adds	r1, r2, #1
 801edd2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801edd6:	0952      	lsrs	r2, r2, #5
 801edd8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eddc:	4313      	orrs	r3, r2
 801edde:	803b      	strh	r3, [r7, #0]
 801ede0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ede2:	441c      	add	r4, r3
 801ede4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ede6:	441e      	add	r6, r3
 801ede8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801edea:	3b01      	subs	r3, #1
 801edec:	3702      	adds	r7, #2
 801edee:	9318      	str	r3, [sp, #96]	; 0x60
 801edf0:	e698      	b.n	801eb24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801edf2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801edf4:	441c      	add	r4, r3
 801edf6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801edf8:	441e      	add	r6, r3
 801edfa:	9b07      	ldr	r3, [sp, #28]
 801edfc:	3b01      	subs	r3, #1
 801edfe:	9307      	str	r3, [sp, #28]
 801ee00:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee02:	3302      	adds	r3, #2
 801ee04:	930a      	str	r3, [sp, #40]	; 0x28
 801ee06:	e66d      	b.n	801eae4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801ee08:	d023      	beq.n	801ee52 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801ee0a:	9b07      	ldr	r3, [sp, #28]
 801ee0c:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801ee0e:	3b01      	subs	r3, #1
 801ee10:	fb00 4003 	mla	r0, r0, r3, r4
 801ee14:	1400      	asrs	r0, r0, #16
 801ee16:	f53f ae82 	bmi.w	801eb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ee1a:	3901      	subs	r1, #1
 801ee1c:	4288      	cmp	r0, r1
 801ee1e:	f6bf ae7e 	bge.w	801eb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ee22:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801ee24:	fb01 6303 	mla	r3, r1, r3, r6
 801ee28:	141b      	asrs	r3, r3, #16
 801ee2a:	f53f ae78 	bmi.w	801eb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ee2e:	3a01      	subs	r2, #1
 801ee30:	4293      	cmp	r3, r2
 801ee32:	f6bf ae74 	bge.w	801eb1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ee36:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801ee3a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801ee3e:	f1bb 0f00 	cmp.w	fp, #0
 801ee42:	dc6c      	bgt.n	801ef1e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801ee44:	9b07      	ldr	r3, [sp, #28]
 801ee46:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ee4a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ee4c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801ee50:	930a      	str	r3, [sp, #40]	; 0x28
 801ee52:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801ee54:	2b00      	cmp	r3, #0
 801ee56:	f340 81b3 	ble.w	801f1c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801ee5a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ee5e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ee62:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ee66:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801ee68:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ee6c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ee70:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ee74:	eef0 6a62 	vmov.f32	s13, s5
 801ee78:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ee7c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ee80:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ee84:	ee16 4a90 	vmov	r4, s13
 801ee88:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ee8c:	eef0 6a43 	vmov.f32	s13, s6
 801ee90:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ee94:	ee12 2a90 	vmov	r2, s5
 801ee98:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ee9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eea0:	ee13 2a10 	vmov	r2, s6
 801eea4:	9329      	str	r3, [sp, #164]	; 0xa4
 801eea6:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eea8:	fb92 f3f3 	sdiv	r3, r2, r3
 801eeac:	932a      	str	r3, [sp, #168]	; 0xa8
 801eeae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801eeb0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801eeb2:	3b01      	subs	r3, #1
 801eeb4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eeb8:	9317      	str	r3, [sp, #92]	; 0x5c
 801eeba:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801eebc:	bf08      	it	eq
 801eebe:	4613      	moveq	r3, r2
 801eec0:	ee16 6a90 	vmov	r6, s13
 801eec4:	9307      	str	r3, [sp, #28]
 801eec6:	eeb0 3a67 	vmov.f32	s6, s15
 801eeca:	eef0 2a47 	vmov.f32	s5, s14
 801eece:	e5fb      	b.n	801eac8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801eed0:	2900      	cmp	r1, #0
 801eed2:	f43f ae6b 	beq.w	801ebac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eed6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801eeda:	9308      	str	r3, [sp, #32]
 801eedc:	0e1b      	lsrs	r3, r3, #24
 801eede:	9311      	str	r3, [sp, #68]	; 0x44
 801eee0:	e664      	b.n	801ebac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801eee2:	f112 0801 	adds.w	r8, r2, #1
 801eee6:	f53f af7b 	bmi.w	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eeea:	4543      	cmp	r3, r8
 801eeec:	f6ff af78 	blt.w	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eef0:	f11c 0801 	adds.w	r8, ip, #1
 801eef4:	f53f af74 	bmi.w	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eef8:	45c6      	cmp	lr, r8
 801eefa:	f6ff af71 	blt.w	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801eefe:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801ef00:	9201      	str	r2, [sp, #4]
 801ef02:	fa0f f28e 	sxth.w	r2, lr
 801ef06:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801ef0a:	e9cd c002 	strd	ip, r0, [sp, #8]
 801ef0e:	9200      	str	r2, [sp, #0]
 801ef10:	b21b      	sxth	r3, r3
 801ef12:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ef14:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ef16:	4639      	mov	r1, r7
 801ef18:	f7ff fc79 	bl	801e80e <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801ef1c:	e760      	b.n	801ede0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ef1e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ef20:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ef22:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef26:	1427      	asrs	r7, r4, #16
 801ef28:	1433      	asrs	r3, r6, #16
 801ef2a:	fb01 7303 	mla	r3, r1, r3, r7
 801ef2e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ef32:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ef36:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ef3a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ef3e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ef42:	2a00      	cmp	r2, #0
 801ef44:	f000 8133 	beq.w	801f1ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ef48:	687d      	ldr	r5, [r7, #4]
 801ef4a:	950e      	str	r5, [sp, #56]	; 0x38
 801ef4c:	0e2d      	lsrs	r5, r5, #24
 801ef4e:	9515      	str	r5, [sp, #84]	; 0x54
 801ef50:	b178      	cbz	r0, 801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ef52:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801ef56:	3901      	subs	r1, #1
 801ef58:	0089      	lsls	r1, r1, #2
 801ef5a:	3104      	adds	r1, #4
 801ef5c:	eb07 0e01 	add.w	lr, r7, r1
 801ef60:	5879      	ldr	r1, [r7, r1]
 801ef62:	9109      	str	r1, [sp, #36]	; 0x24
 801ef64:	0e09      	lsrs	r1, r1, #24
 801ef66:	9112      	str	r1, [sp, #72]	; 0x48
 801ef68:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ef6c:	910f      	str	r1, [sp, #60]	; 0x3c
 801ef6e:	0e09      	lsrs	r1, r1, #24
 801ef70:	9116      	str	r1, [sp, #88]	; 0x58
 801ef72:	b292      	uxth	r2, r2
 801ef74:	b280      	uxth	r0, r0
 801ef76:	fb02 f800 	mul.w	r8, r2, r0
 801ef7a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ef7e:	0112      	lsls	r2, r2, #4
 801ef80:	eba2 0e08 	sub.w	lr, r2, r8
 801ef84:	b280      	uxth	r0, r0
 801ef86:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ef8a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801ef8c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ef8e:	fa1f fe8e 	uxth.w	lr, lr
 801ef92:	1a12      	subs	r2, r2, r0
 801ef94:	b292      	uxth	r2, r2
 801ef96:	fb0e f101 	mul.w	r1, lr, r1
 801ef9a:	fb02 110c 	mla	r1, r2, ip, r1
 801ef9e:	fb00 1105 	mla	r1, r0, r5, r1
 801efa2:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801efa4:	fb08 1105 	mla	r1, r8, r5, r1
 801efa8:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801efac:	2900      	cmp	r1, #0
 801efae:	f000 80f5 	beq.w	801f19c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801efb2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801efb6:	d019      	beq.n	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801efb8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801efbc:	fb0c fa0a 	mul.w	sl, ip, sl
 801efc0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801efc4:	fb0c fc03 	mul.w	ip, ip, r3
 801efc8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801efcc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efd0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801efd4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801efd8:	4453      	add	r3, sl
 801efda:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801efde:	0a1b      	lsrs	r3, r3, #8
 801efe0:	0a3f      	lsrs	r7, r7, #8
 801efe2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801efe6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801efea:	433b      	orrs	r3, r7
 801efec:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801efee:	2dff      	cmp	r5, #255	; 0xff
 801eff0:	d020      	beq.n	801f034 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801eff2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eff4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eff8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801effa:	436f      	muls	r7, r5
 801effc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801effe:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f002:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f004:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f008:	fb05 fa0a 	mul.w	sl, r5, sl
 801f00c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f010:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f014:	44bc      	add	ip, r7
 801f016:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f01a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f01e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f022:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f026:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f02a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f02e:	ea4c 050a 	orr.w	r5, ip, sl
 801f032:	950e      	str	r5, [sp, #56]	; 0x38
 801f034:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f036:	2dff      	cmp	r5, #255	; 0xff
 801f038:	d020      	beq.n	801f07c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801f03a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f03c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f040:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f042:	436f      	muls	r7, r5
 801f044:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f046:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f04a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f04c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f050:	fb05 fa0a 	mul.w	sl, r5, sl
 801f054:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f058:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f05c:	44bc      	add	ip, r7
 801f05e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f062:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f066:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f06a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f06e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f072:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f076:	ea4c 050a 	orr.w	r5, ip, sl
 801f07a:	9509      	str	r5, [sp, #36]	; 0x24
 801f07c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f07e:	2dff      	cmp	r5, #255	; 0xff
 801f080:	d020      	beq.n	801f0c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801f082:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f084:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f088:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f08a:	436f      	muls	r7, r5
 801f08c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f08e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f092:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801f094:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f098:	fb05 fa0a 	mul.w	sl, r5, sl
 801f09c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f0a0:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0a4:	44bc      	add	ip, r7
 801f0a6:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f0aa:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f0ae:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f0b2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0b6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f0ba:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0be:	ea4c 050a 	orr.w	r5, ip, sl
 801f0c2:	950f      	str	r5, [sp, #60]	; 0x3c
 801f0c4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f0c6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f0ca:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f0cc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f0d0:	fb0e f707 	mul.w	r7, lr, r7
 801f0d4:	fb02 770c 	mla	r7, r2, ip, r7
 801f0d8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f0dc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f0de:	fb00 770c 	mla	r7, r0, ip, r7
 801f0e2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f0e6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f0e8:	fb08 770c 	mla	r7, r8, ip, r7
 801f0ec:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f0f0:	fb0e fe0c 	mul.w	lr, lr, ip
 801f0f4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f0f8:	fb02 e303 	mla	r3, r2, r3, lr
 801f0fc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801f0fe:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f100:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801f104:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f106:	fb00 330a 	mla	r3, r0, sl, r3
 801f10a:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801f10e:	fb08 3c0c 	mla	ip, r8, ip, r3
 801f112:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801f114:	f8b9 0000 	ldrh.w	r0, [r9]
 801f118:	4359      	muls	r1, r3
 801f11a:	0a3f      	lsrs	r7, r7, #8
 801f11c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f120:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f124:	1c4b      	adds	r3, r1, #1
 801f126:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f12a:	ea47 070c 	orr.w	r7, r7, ip
 801f12e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801f132:	1202      	asrs	r2, r0, #8
 801f134:	0c3b      	lsrs	r3, r7, #16
 801f136:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801f13a:	b2c9      	uxtb	r1, r1
 801f13c:	fb13 f305 	smulbb	r3, r3, r5
 801f140:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801f144:	fb02 3201 	mla	r2, r2, r1, r3
 801f148:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801f14c:	10c3      	asrs	r3, r0, #3
 801f14e:	b2ff      	uxtb	r7, r7
 801f150:	00c0      	lsls	r0, r0, #3
 801f152:	b2c0      	uxtb	r0, r0
 801f154:	fb17 f705 	smulbb	r7, r7, r5
 801f158:	fb00 7001 	mla	r0, r0, r1, r7
 801f15c:	b292      	uxth	r2, r2
 801f15e:	fb1c fc05 	smulbb	ip, ip, r5
 801f162:	b280      	uxth	r0, r0
 801f164:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801f168:	fb03 c301 	mla	r3, r3, r1, ip
 801f16c:	1c51      	adds	r1, r2, #1
 801f16e:	f100 0c01 	add.w	ip, r0, #1
 801f172:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f176:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801f17a:	b29b      	uxth	r3, r3
 801f17c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f180:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801f184:	ea4c 0202 	orr.w	r2, ip, r2
 801f188:	f103 0c01 	add.w	ip, r3, #1
 801f18c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801f190:	095b      	lsrs	r3, r3, #5
 801f192:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f196:	431a      	orrs	r2, r3
 801f198:	f8a9 2000 	strh.w	r2, [r9]
 801f19c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801f19e:	441c      	add	r4, r3
 801f1a0:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801f1a2:	f109 0902 	add.w	r9, r9, #2
 801f1a6:	441e      	add	r6, r3
 801f1a8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f1ac:	e647      	b.n	801ee3e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801f1ae:	2800      	cmp	r0, #0
 801f1b0:	f43f aedf 	beq.w	801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f1b4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801f1b8:	9109      	str	r1, [sp, #36]	; 0x24
 801f1ba:	0e09      	lsrs	r1, r1, #24
 801f1bc:	9112      	str	r1, [sp, #72]	; 0x48
 801f1be:	e6d8      	b.n	801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801f1c0:	b01d      	add	sp, #116	; 0x74
 801f1c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f1c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801f1c6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f1ca:	b085      	sub	sp, #20
 801f1cc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801f1d0:	9102      	str	r1, [sp, #8]
 801f1d2:	2c00      	cmp	r4, #0
 801f1d4:	fb04 7103 	mla	r1, r4, r3, r7
 801f1d8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801f1dc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801f1e0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801f1e4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801f1e8:	f2c0 810c 	blt.w	801f404 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f1ec:	45a6      	cmp	lr, r4
 801f1ee:	f340 8109 	ble.w	801f404 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801f1f2:	2f00      	cmp	r7, #0
 801f1f4:	f2c0 8104 	blt.w	801f400 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f1f8:	42bb      	cmp	r3, r7
 801f1fa:	f340 8101 	ble.w	801f400 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801f1fe:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801f202:	1c7a      	adds	r2, r7, #1
 801f204:	f100 8101 	bmi.w	801f40a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f208:	4293      	cmp	r3, r2
 801f20a:	f340 80fe 	ble.w	801f40a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801f20e:	2e00      	cmp	r6, #0
 801f210:	f000 80fd 	beq.w	801f40e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801f214:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801f218:	3401      	adds	r4, #1
 801f21a:	f100 80fc 	bmi.w	801f416 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f21e:	45a6      	cmp	lr, r4
 801f220:	f340 80f9 	ble.w	801f416 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801f224:	2800      	cmp	r0, #0
 801f226:	f000 80f9 	beq.w	801f41c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801f22a:	2f00      	cmp	r7, #0
 801f22c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801f230:	f2c0 80ef 	blt.w	801f412 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f234:	42bb      	cmp	r3, r7
 801f236:	f340 80ec 	ble.w	801f412 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801f23a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801f23e:	3701      	adds	r7, #1
 801f240:	f100 80ef 	bmi.w	801f422 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f244:	42bb      	cmp	r3, r7
 801f246:	f340 80ec 	ble.w	801f422 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801f24a:	2e00      	cmp	r6, #0
 801f24c:	f000 80eb 	beq.w	801f426 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801f250:	6852      	ldr	r2, [r2, #4]
 801f252:	b2b6      	uxth	r6, r6
 801f254:	b280      	uxth	r0, r0
 801f256:	fb00 fe06 	mul.w	lr, r0, r6
 801f25a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801f25e:	0136      	lsls	r6, r6, #4
 801f260:	eba6 070e 	sub.w	r7, r6, lr
 801f264:	b280      	uxth	r0, r0
 801f266:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801f26a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801f26e:	b2bf      	uxth	r7, r7
 801f270:	1a1b      	subs	r3, r3, r0
 801f272:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801f276:	b29b      	uxth	r3, r3
 801f278:	fb07 f60a 	mul.w	r6, r7, sl
 801f27c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801f280:	fb0b 6603 	mla	r6, fp, r3, r6
 801f284:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801f288:	fb00 6609 	mla	r6, r0, r9, r6
 801f28c:	fb0e 6608 	mla	r6, lr, r8, r6
 801f290:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f294:	9600      	str	r6, [sp, #0]
 801f296:	2e00      	cmp	r6, #0
 801f298:	f000 80af 	beq.w	801f3fa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801f29c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f2a0:	fb0b fc0c 	mul.w	ip, fp, ip
 801f2a4:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801f2a8:	fb0b f505 	mul.w	r5, fp, r5
 801f2ac:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801f2b0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801f2b4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f2b8:	44dc      	add	ip, fp
 801f2ba:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f2be:	9501      	str	r5, [sp, #4]
 801f2c0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801f2c4:	9503      	str	r5, [sp, #12]
 801f2c6:	9d01      	ldr	r5, [sp, #4]
 801f2c8:	9e02      	ldr	r6, [sp, #8]
 801f2ca:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801f2ce:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801f2d2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801f2d6:	fb0a fc0c 	mul.w	ip, sl, ip
 801f2da:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801f2de:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801f2e2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f2e6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f2ea:	4465      	add	r5, ip
 801f2ec:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801f2f0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801f2f4:	fb09 fc0c 	mul.w	ip, r9, ip
 801f2f8:	fb09 f904 	mul.w	r9, r9, r4
 801f2fc:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801f300:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801f304:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801f308:	fb08 f404 	mul.w	r4, r8, r4
 801f30c:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f310:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f314:	fb08 f802 	mul.w	r8, r8, r2
 801f318:	fb0a fa01 	mul.w	sl, sl, r1
 801f31c:	0a22      	lsrs	r2, r4, #8
 801f31e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801f322:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f326:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801f32a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801f32e:	4414      	add	r4, r2
 801f330:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801f334:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801f338:	0a2d      	lsrs	r5, r5, #8
 801f33a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801f33e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801f342:	9a03      	ldr	r2, [sp, #12]
 801f344:	8836      	ldrh	r6, [r6, #0]
 801f346:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f34a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801f34e:	437d      	muls	r5, r7
 801f350:	4461      	add	r1, ip
 801f352:	0a24      	lsrs	r4, r4, #8
 801f354:	fb02 5503 	mla	r5, r2, r3, r5
 801f358:	0a09      	lsrs	r1, r1, #8
 801f35a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801f35e:	fb04 540e 	mla	r4, r4, lr, r5
 801f362:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801f366:	fb01 4100 	mla	r1, r1, r0, r4
 801f36a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f36e:	0a09      	lsrs	r1, r1, #8
 801f370:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f374:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801f378:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801f37c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801f380:	fb07 f70a 	mul.w	r7, r7, sl
 801f384:	fb03 7101 	mla	r1, r3, r1, r7
 801f388:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f38c:	9b00      	ldr	r3, [sp, #0]
 801f38e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801f392:	fb0e 1e08 	mla	lr, lr, r8, r1
 801f396:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801f39a:	fb00 e101 	mla	r1, r0, r1, lr
 801f39e:	43da      	mvns	r2, r3
 801f3a0:	1233      	asrs	r3, r6, #8
 801f3a2:	b2d2      	uxtb	r2, r2
 801f3a4:	10f0      	asrs	r0, r6, #3
 801f3a6:	0a09      	lsrs	r1, r1, #8
 801f3a8:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801f3ac:	00f6      	lsls	r6, r6, #3
 801f3ae:	4353      	muls	r3, r2
 801f3b0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801f3b4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f3b8:	b2f6      	uxtb	r6, r6
 801f3ba:	4321      	orrs	r1, r4
 801f3bc:	4350      	muls	r0, r2
 801f3be:	4356      	muls	r6, r2
 801f3c0:	1c5a      	adds	r2, r3, #1
 801f3c2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801f3c6:	0c0b      	lsrs	r3, r1, #16
 801f3c8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f3cc:	1c42      	adds	r2, r0, #1
 801f3ce:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f3d2:	0a0a      	lsrs	r2, r1, #8
 801f3d4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f3d8:	021b      	lsls	r3, r3, #8
 801f3da:	00d2      	lsls	r2, r2, #3
 801f3dc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f3e0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801f3e4:	4313      	orrs	r3, r2
 801f3e6:	1c72      	adds	r2, r6, #1
 801f3e8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801f3ec:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801f3f0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801f3f4:	4319      	orrs	r1, r3
 801f3f6:	9b02      	ldr	r3, [sp, #8]
 801f3f8:	8019      	strh	r1, [r3, #0]
 801f3fa:	b005      	add	sp, #20
 801f3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f400:	2500      	movs	r5, #0
 801f402:	e6fe      	b.n	801f202 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801f404:	2100      	movs	r1, #0
 801f406:	460d      	mov	r5, r1
 801f408:	e706      	b.n	801f218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f40a:	2100      	movs	r1, #0
 801f40c:	e704      	b.n	801f218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f40e:	4631      	mov	r1, r6
 801f410:	e702      	b.n	801f218 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801f412:	2400      	movs	r4, #0
 801f414:	e713      	b.n	801f23e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801f416:	2200      	movs	r2, #0
 801f418:	4614      	mov	r4, r2
 801f41a:	e71a      	b.n	801f252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f41c:	4602      	mov	r2, r0
 801f41e:	4604      	mov	r4, r0
 801f420:	e717      	b.n	801f252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f422:	2200      	movs	r2, #0
 801f424:	e715      	b.n	801f252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801f426:	4632      	mov	r2, r6
 801f428:	e713      	b.n	801f252 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801f42c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f42c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f430:	b09b      	sub	sp, #108	; 0x6c
 801f432:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801f436:	9218      	str	r2, [sp, #96]	; 0x60
 801f438:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801f43a:	9116      	str	r1, [sp, #88]	; 0x58
 801f43c:	9307      	str	r3, [sp, #28]
 801f43e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801f442:	9019      	str	r0, [sp, #100]	; 0x64
 801f444:	6850      	ldr	r0, [r2, #4]
 801f446:	6812      	ldr	r2, [r2, #0]
 801f448:	fb00 1303 	mla	r3, r0, r3, r1
 801f44c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f450:	930a      	str	r3, [sp, #40]	; 0x28
 801f452:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f454:	681b      	ldr	r3, [r3, #0]
 801f456:	930f      	str	r3, [sp, #60]	; 0x3c
 801f458:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f45a:	2b00      	cmp	r3, #0
 801f45c:	dc03      	bgt.n	801f466 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801f45e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801f460:	2b00      	cmp	r3, #0
 801f462:	f340 8386 	ble.w	801fb72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f466:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f468:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f46c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f470:	1e48      	subs	r0, r1, #1
 801f472:	1e57      	subs	r7, r2, #1
 801f474:	9b07      	ldr	r3, [sp, #28]
 801f476:	2b00      	cmp	r3, #0
 801f478:	f340 8166 	ble.w	801f748 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801f47c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801f480:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f484:	d406      	bmi.n	801f494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f486:	4584      	cmp	ip, r0
 801f488:	da04      	bge.n	801f494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f48a:	2b00      	cmp	r3, #0
 801f48c:	db02      	blt.n	801f494 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801f48e:	42bb      	cmp	r3, r7
 801f490:	f2c0 815b 	blt.w	801f74a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801f494:	f11c 0c01 	adds.w	ip, ip, #1
 801f498:	f100 814b 	bmi.w	801f732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f49c:	4561      	cmp	r1, ip
 801f49e:	f2c0 8148 	blt.w	801f732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f4a2:	3301      	adds	r3, #1
 801f4a4:	f100 8145 	bmi.w	801f732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f4a8:	429a      	cmp	r2, r3
 801f4aa:	f2c0 8142 	blt.w	801f732 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801f4ae:	9b07      	ldr	r3, [sp, #28]
 801f4b0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801f4b2:	9317      	str	r3, [sp, #92]	; 0x5c
 801f4b4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f4b6:	2b00      	cmp	r3, #0
 801f4b8:	f340 8165 	ble.w	801f786 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801f4bc:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801f4be:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f4c0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801f4c4:	689b      	ldr	r3, [r3, #8]
 801f4c6:	1422      	asrs	r2, r4, #16
 801f4c8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801f4cc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801f4d0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f4d4:	f100 81d5 	bmi.w	801f882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f4d8:	f103 38ff 	add.w	r8, r3, #4294967295
 801f4dc:	4542      	cmp	r2, r8
 801f4de:	f280 81d0 	bge.w	801f882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f4e2:	f1bc 0f00 	cmp.w	ip, #0
 801f4e6:	f2c0 81cc 	blt.w	801f882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f4ea:	f10e 38ff 	add.w	r8, lr, #4294967295
 801f4ee:	45c4      	cmp	ip, r8
 801f4f0:	f280 81c7 	bge.w	801f882 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801f4f4:	b21b      	sxth	r3, r3
 801f4f6:	fb0c 2203 	mla	r2, ip, r3, r2
 801f4fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f4fc:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801f500:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801f504:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801f508:	2900      	cmp	r1, #0
 801f50a:	f000 8182 	beq.w	801f812 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801f50e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f512:	950b      	str	r5, [sp, #44]	; 0x2c
 801f514:	0e2d      	lsrs	r5, r5, #24
 801f516:	9512      	str	r5, [sp, #72]	; 0x48
 801f518:	b180      	cbz	r0, 801f53c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f51a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801f51e:	3b01      	subs	r3, #1
 801f520:	009b      	lsls	r3, r3, #2
 801f522:	3304      	adds	r3, #4
 801f524:	eb08 0c03 	add.w	ip, r8, r3
 801f528:	f858 3003 	ldr.w	r3, [r8, r3]
 801f52c:	9308      	str	r3, [sp, #32]
 801f52e:	0e1b      	lsrs	r3, r3, #24
 801f530:	9310      	str	r3, [sp, #64]	; 0x40
 801f532:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f536:	930c      	str	r3, [sp, #48]	; 0x30
 801f538:	0e1b      	lsrs	r3, r3, #24
 801f53a:	9313      	str	r3, [sp, #76]	; 0x4c
 801f53c:	b289      	uxth	r1, r1
 801f53e:	b280      	uxth	r0, r0
 801f540:	fb01 f900 	mul.w	r9, r1, r0
 801f544:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f548:	0109      	lsls	r1, r1, #4
 801f54a:	eba1 0809 	sub.w	r8, r1, r9
 801f54e:	b280      	uxth	r0, r0
 801f550:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801f554:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f556:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f558:	fa1f f888 	uxth.w	r8, r8
 801f55c:	1a09      	subs	r1, r1, r0
 801f55e:	b289      	uxth	r1, r1
 801f560:	fb08 f303 	mul.w	r3, r8, r3
 801f564:	fb01 330e 	mla	r3, r1, lr, r3
 801f568:	fb00 3305 	mla	r3, r0, r5, r3
 801f56c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f56e:	fb09 3305 	mla	r3, r9, r5, r3
 801f572:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f576:	2b00      	cmp	r3, #0
 801f578:	f000 80d2 	beq.w	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f57c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f580:	d01b      	beq.n	801f5ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f582:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801f586:	fb0e fa0a 	mul.w	sl, lr, sl
 801f58a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f58e:	fb0e fe02 	mul.w	lr, lr, r2
 801f592:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f596:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f59a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f59e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f5a2:	4452      	add	r2, sl
 801f5a4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f5a8:	0a12      	lsrs	r2, r2, #8
 801f5aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5ae:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f5b2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f5b6:	ea42 020c 	orr.w	r2, r2, ip
 801f5ba:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f5bc:	2dff      	cmp	r5, #255	; 0xff
 801f5be:	d021      	beq.n	801f604 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f5c0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f5c2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f5c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f5c8:	fb05 fb0b 	mul.w	fp, r5, fp
 801f5cc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f5ce:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f5d2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f5d4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f5d8:	fb05 fa0a 	mul.w	sl, r5, sl
 801f5dc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f5e0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f5e4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f5e8:	44de      	add	lr, fp
 801f5ea:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f5ee:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f5f2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f5f6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f5fa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f5fe:	ea4e 050a 	orr.w	r5, lr, sl
 801f602:	950b      	str	r5, [sp, #44]	; 0x2c
 801f604:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f606:	2dff      	cmp	r5, #255	; 0xff
 801f608:	d021      	beq.n	801f64e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f60a:	9d08      	ldr	r5, [sp, #32]
 801f60c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f610:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f612:	fb05 fb0b 	mul.w	fp, r5, fp
 801f616:	9d08      	ldr	r5, [sp, #32]
 801f618:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f61c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f61e:	fb05 fa0e 	mul.w	sl, r5, lr
 801f622:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f626:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f62a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f62e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f632:	44de      	add	lr, fp
 801f634:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f638:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f63c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f640:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f644:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f648:	ea4e 050a 	orr.w	r5, lr, sl
 801f64c:	9508      	str	r5, [sp, #32]
 801f64e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f650:	2dff      	cmp	r5, #255	; 0xff
 801f652:	d021      	beq.n	801f698 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f654:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f656:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f65a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f65c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f660:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f662:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f666:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f668:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f66c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f670:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f674:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f678:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f67c:	44de      	add	lr, fp
 801f67e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f682:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f686:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f68a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f68e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f692:	ea4e 050a 	orr.w	r5, lr, sl
 801f696:	950c      	str	r5, [sp, #48]	; 0x30
 801f698:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f69a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f69e:	9d08      	ldr	r5, [sp, #32]
 801f6a0:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f6a4:	fb08 fc0c 	mul.w	ip, r8, ip
 801f6a8:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f6ac:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f6b0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f6b2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f6b6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f6ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f6bc:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f6c0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f6c4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f6c8:	fb08 f80e 	mul.w	r8, r8, lr
 801f6cc:	fb01 8202 	mla	r2, r1, r2, r8
 801f6d0:	9908      	ldr	r1, [sp, #32]
 801f6d2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f6d6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f6d8:	fb00 220a 	mla	r2, r0, sl, r2
 801f6dc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801f6e0:	fb09 2900 	mla	r9, r9, r0, r2
 801f6e4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f6e8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f6ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f6f0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f6f4:	ea4c 0c09 	orr.w	ip, ip, r9
 801f6f8:	2bff      	cmp	r3, #255	; 0xff
 801f6fa:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f6fe:	f040 8091 	bne.w	801f824 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f702:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f706:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801f70a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f70e:	f022 0207 	bic.w	r2, r2, #7
 801f712:	431a      	orrs	r2, r3
 801f714:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f718:	ea4c 0c02 	orr.w	ip, ip, r2
 801f71c:	f8a7 c000 	strh.w	ip, [r7]
 801f720:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f722:	441c      	add	r4, r3
 801f724:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f726:	441e      	add	r6, r3
 801f728:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f72a:	3b01      	subs	r3, #1
 801f72c:	3702      	adds	r7, #2
 801f72e:	9317      	str	r3, [sp, #92]	; 0x5c
 801f730:	e6c0      	b.n	801f4b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f732:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f734:	441c      	add	r4, r3
 801f736:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f738:	441e      	add	r6, r3
 801f73a:	9b07      	ldr	r3, [sp, #28]
 801f73c:	3b01      	subs	r3, #1
 801f73e:	9307      	str	r3, [sp, #28]
 801f740:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f742:	3302      	adds	r3, #2
 801f744:	930a      	str	r3, [sp, #40]	; 0x28
 801f746:	e695      	b.n	801f474 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f748:	d024      	beq.n	801f794 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f74a:	9b07      	ldr	r3, [sp, #28]
 801f74c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f74e:	3b01      	subs	r3, #1
 801f750:	fb00 4003 	mla	r0, r0, r3, r4
 801f754:	1400      	asrs	r0, r0, #16
 801f756:	f53f aeaa 	bmi.w	801f4ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f75a:	3901      	subs	r1, #1
 801f75c:	4288      	cmp	r0, r1
 801f75e:	f6bf aea6 	bge.w	801f4ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f762:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f764:	fb01 6303 	mla	r3, r1, r3, r6
 801f768:	141b      	asrs	r3, r3, #16
 801f76a:	f53f aea0 	bmi.w	801f4ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f76e:	3a01      	subs	r2, #1
 801f770:	4293      	cmp	r3, r2
 801f772:	f6bf ae9c 	bge.w	801f4ae <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f776:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f77a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801f77e:	f1bb 0f00 	cmp.w	fp, #0
 801f782:	f300 809a 	bgt.w	801f8ba <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f786:	9b07      	ldr	r3, [sp, #28]
 801f788:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f78c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f78e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f792:	930a      	str	r3, [sp, #40]	; 0x28
 801f794:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f796:	2b00      	cmp	r3, #0
 801f798:	f340 81eb 	ble.w	801fb72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f79c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f7a0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f7a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f7a8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f7ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f7b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f7b6:	eef0 6a62 	vmov.f32	s13, s5
 801f7ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f7be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f7c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f7c6:	ee16 4a90 	vmov	r4, s13
 801f7ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f7ce:	eef0 6a43 	vmov.f32	s13, s6
 801f7d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f7d6:	ee12 2a90 	vmov	r2, s5
 801f7da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f7de:	fb92 f3f3 	sdiv	r3, r2, r3
 801f7e2:	ee13 2a10 	vmov	r2, s6
 801f7e6:	9327      	str	r3, [sp, #156]	; 0x9c
 801f7e8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801f7ee:	9328      	str	r3, [sp, #160]	; 0xa0
 801f7f0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f7f2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f7f4:	3b01      	subs	r3, #1
 801f7f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f7fa:	9316      	str	r3, [sp, #88]	; 0x58
 801f7fc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f7fe:	bf08      	it	eq
 801f800:	4613      	moveq	r3, r2
 801f802:	ee16 6a90 	vmov	r6, s13
 801f806:	9307      	str	r3, [sp, #28]
 801f808:	eeb0 3a67 	vmov.f32	s6, s15
 801f80c:	eef0 2a47 	vmov.f32	s5, s14
 801f810:	e622      	b.n	801f458 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f812:	2800      	cmp	r0, #0
 801f814:	f43f ae92 	beq.w	801f53c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f818:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f81c:	9308      	str	r3, [sp, #32]
 801f81e:	0e1b      	lsrs	r3, r3, #24
 801f820:	9310      	str	r3, [sp, #64]	; 0x40
 801f822:	e68b      	b.n	801f53c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f824:	8839      	ldrh	r1, [r7, #0]
 801f826:	4dd4      	ldr	r5, [pc, #848]	; (801fb78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f828:	43db      	mvns	r3, r3
 801f82a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f82e:	fa5f f883 	uxtb.w	r8, r3
 801f832:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f836:	fb0e fe08 	mul.w	lr, lr, r8
 801f83a:	10c8      	asrs	r0, r1, #3
 801f83c:	00cb      	lsls	r3, r1, #3
 801f83e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f842:	f10e 0101 	add.w	r1, lr, #1
 801f846:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f84a:	fb00 f008 	mul.w	r0, r0, r8
 801f84e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f852:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f856:	f100 0e01 	add.w	lr, r0, #1
 801f85a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f85e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f862:	b2db      	uxtb	r3, r3
 801f864:	b2c9      	uxtb	r1, r1
 801f866:	00d2      	lsls	r2, r2, #3
 801f868:	fb03 f308 	mul.w	r3, r3, r8
 801f86c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f870:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f874:	430a      	orrs	r2, r1
 801f876:	1c59      	adds	r1, r3, #1
 801f878:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f87c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f880:	e748      	b.n	801f714 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f882:	f112 0801 	adds.w	r8, r2, #1
 801f886:	f53f af4b 	bmi.w	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f88a:	4543      	cmp	r3, r8
 801f88c:	f6ff af48 	blt.w	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f890:	f11c 0801 	adds.w	r8, ip, #1
 801f894:	f53f af44 	bmi.w	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f898:	45c6      	cmp	lr, r8
 801f89a:	f6ff af41 	blt.w	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f89e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f8a2:	fa0f f28e 	sxth.w	r2, lr
 801f8a6:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f8aa:	9200      	str	r2, [sp, #0]
 801f8ac:	b21b      	sxth	r3, r3
 801f8ae:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f8b0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801f8b2:	4639      	mov	r1, r7
 801f8b4:	f7ff fc87 	bl	801f1c6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f8b8:	e732      	b.n	801f720 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f8ba:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f8bc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f8be:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f8c2:	1421      	asrs	r1, r4, #16
 801f8c4:	1433      	asrs	r3, r6, #16
 801f8c6:	fb07 1303 	mla	r3, r7, r3, r1
 801f8ca:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f8cc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f8d0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f8d4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f8d8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f8dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f8e0:	2a00      	cmp	r2, #0
 801f8e2:	f000 8107 	beq.w	801faf4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f8e6:	684d      	ldr	r5, [r1, #4]
 801f8e8:	950d      	str	r5, [sp, #52]	; 0x34
 801f8ea:	0e2d      	lsrs	r5, r5, #24
 801f8ec:	9514      	str	r5, [sp, #80]	; 0x50
 801f8ee:	b178      	cbz	r0, 801f910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f8f0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801f8f4:	3f01      	subs	r7, #1
 801f8f6:	00bf      	lsls	r7, r7, #2
 801f8f8:	3704      	adds	r7, #4
 801f8fa:	eb01 0e07 	add.w	lr, r1, r7
 801f8fe:	59c9      	ldr	r1, [r1, r7]
 801f900:	9109      	str	r1, [sp, #36]	; 0x24
 801f902:	0e09      	lsrs	r1, r1, #24
 801f904:	9111      	str	r1, [sp, #68]	; 0x44
 801f906:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f90a:	910e      	str	r1, [sp, #56]	; 0x38
 801f90c:	0e09      	lsrs	r1, r1, #24
 801f90e:	9115      	str	r1, [sp, #84]	; 0x54
 801f910:	b292      	uxth	r2, r2
 801f912:	b280      	uxth	r0, r0
 801f914:	fb02 f900 	mul.w	r9, r2, r0
 801f918:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f91c:	0112      	lsls	r2, r2, #4
 801f91e:	eba2 0e09 	sub.w	lr, r2, r9
 801f922:	b280      	uxth	r0, r0
 801f924:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f928:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f92a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f92c:	fa1f fe8e 	uxth.w	lr, lr
 801f930:	1a09      	subs	r1, r1, r0
 801f932:	b289      	uxth	r1, r1
 801f934:	fb0e f202 	mul.w	r2, lr, r2
 801f938:	fb01 220c 	mla	r2, r1, ip, r2
 801f93c:	fb00 2205 	mla	r2, r0, r5, r2
 801f940:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f942:	fb09 2205 	mla	r2, r9, r5, r2
 801f946:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f94a:	2a00      	cmp	r2, #0
 801f94c:	f000 80c9 	beq.w	801fae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f950:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f954:	d019      	beq.n	801f98a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f956:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f95a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f95e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f962:	fb0c fc03 	mul.w	ip, ip, r3
 801f966:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f96a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f96e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f972:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f976:	4453      	add	r3, sl
 801f978:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f97c:	0a1b      	lsrs	r3, r3, #8
 801f97e:	0a3f      	lsrs	r7, r7, #8
 801f980:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f984:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f988:	433b      	orrs	r3, r7
 801f98a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f98c:	2dff      	cmp	r5, #255	; 0xff
 801f98e:	d020      	beq.n	801f9d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f990:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f992:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f996:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f998:	436f      	muls	r7, r5
 801f99a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f99c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f9a0:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f9a2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f9a6:	fb05 fa0a 	mul.w	sl, r5, sl
 801f9aa:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f9ae:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f9b2:	44bc      	add	ip, r7
 801f9b4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f9b8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f9bc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f9c0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f9c4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f9c8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f9cc:	ea4c 050a 	orr.w	r5, ip, sl
 801f9d0:	950d      	str	r5, [sp, #52]	; 0x34
 801f9d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f9d4:	2dff      	cmp	r5, #255	; 0xff
 801f9d6:	d020      	beq.n	801fa1a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f9d8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f9da:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f9de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f9e0:	436f      	muls	r7, r5
 801f9e2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f9e4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f9e8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f9ea:	fb05 fa0c 	mul.w	sl, r5, ip
 801f9ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f9f2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f9f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f9fa:	44bc      	add	ip, r7
 801f9fc:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fa00:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fa04:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa08:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa0c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa10:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa14:	ea4c 050a 	orr.w	r5, ip, sl
 801fa18:	9509      	str	r5, [sp, #36]	; 0x24
 801fa1a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fa1c:	2dff      	cmp	r5, #255	; 0xff
 801fa1e:	d020      	beq.n	801fa62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801fa20:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa22:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fa26:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fa28:	436f      	muls	r7, r5
 801fa2a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa2c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801fa30:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801fa32:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801fa36:	fb05 fa0a 	mul.w	sl, r5, sl
 801fa3a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801fa3e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa42:	44bc      	add	ip, r7
 801fa44:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801fa48:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801fa4c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fa50:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801fa54:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801fa58:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801fa5c:	ea4c 050a 	orr.w	r5, ip, sl
 801fa60:	950e      	str	r5, [sp, #56]	; 0x38
 801fa62:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fa64:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801fa68:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801fa6a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801fa6e:	fb0e f707 	mul.w	r7, lr, r7
 801fa72:	fb01 770c 	mla	r7, r1, ip, r7
 801fa76:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fa7a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fa7c:	fb00 770c 	mla	r7, r0, ip, r7
 801fa80:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801fa84:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801fa86:	fb09 770c 	mla	r7, r9, ip, r7
 801fa8a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801fa8e:	fb0e fe0c 	mul.w	lr, lr, ip
 801fa92:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801fa96:	fb01 e303 	mla	r3, r1, r3, lr
 801fa9a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801fa9c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801faa0:	990e      	ldr	r1, [sp, #56]	; 0x38
 801faa2:	fb00 330a 	mla	r3, r0, sl, r3
 801faa6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801faaa:	fb09 3c0c 	mla	ip, r9, ip, r3
 801faae:	0a3f      	lsrs	r7, r7, #8
 801fab0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801fab4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801fab8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801fabc:	ea47 070c 	orr.w	r7, r7, ip
 801fac0:	2aff      	cmp	r2, #255	; 0xff
 801fac2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801fac6:	d11e      	bne.n	801fb06 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801fac8:	097a      	lsrs	r2, r7, #5
 801faca:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801face:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801fad2:	f023 0307 	bic.w	r3, r3, #7
 801fad6:	4313      	orrs	r3, r2
 801fad8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fadc:	431f      	orrs	r7, r3
 801fade:	f8a8 7000 	strh.w	r7, [r8]
 801fae2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801fae4:	441c      	add	r4, r3
 801fae6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fae8:	f108 0802 	add.w	r8, r8, #2
 801faec:	441e      	add	r6, r3
 801faee:	f10b 3bff 	add.w	fp, fp, #4294967295
 801faf2:	e644      	b.n	801f77e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801faf4:	2800      	cmp	r0, #0
 801faf6:	f43f af0b 	beq.w	801f910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fafa:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801fafe:	9109      	str	r1, [sp, #36]	; 0x24
 801fb00:	0e09      	lsrs	r1, r1, #24
 801fb02:	9111      	str	r1, [sp, #68]	; 0x44
 801fb04:	e704      	b.n	801f910 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801fb06:	f8b8 1000 	ldrh.w	r1, [r8]
 801fb0a:	43d2      	mvns	r2, r2
 801fb0c:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801fb10:	fa5f fe82 	uxtb.w	lr, r2
 801fb14:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801fb18:	fb0c fc0e 	mul.w	ip, ip, lr
 801fb1c:	10c8      	asrs	r0, r1, #3
 801fb1e:	00ca      	lsls	r2, r1, #3
 801fb20:	f10c 0101 	add.w	r1, ip, #1
 801fb24:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fb28:	0c39      	lsrs	r1, r7, #16
 801fb2a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fb2e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fb32:	4911      	ldr	r1, [pc, #68]	; (801fb78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801fb34:	fb00 f00e 	mul.w	r0, r0, lr
 801fb38:	fa5f fc8c 	uxtb.w	ip, ip
 801fb3c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801fb40:	b2d2      	uxtb	r2, r2
 801fb42:	1c41      	adds	r1, r0, #1
 801fb44:	fb02 f20e 	mul.w	r2, r2, lr
 801fb48:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801fb4c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fb50:	1c51      	adds	r1, r2, #1
 801fb52:	00c0      	lsls	r0, r0, #3
 801fb54:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801fb58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fb5c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801fb60:	ea4c 0c00 	orr.w	ip, ip, r0
 801fb64:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801fb68:	ea47 0c0c 	orr.w	ip, r7, ip
 801fb6c:	f8a8 c000 	strh.w	ip, [r8]
 801fb70:	e7b7      	b.n	801fae2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801fb72:	b01b      	add	sp, #108	; 0x6c
 801fb74:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fb78:	fffff800 	.word	0xfffff800

0801fb7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801fb7c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fb80:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801fb84:	2d00      	cmp	r5, #0
 801fb86:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fb8a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801fb8e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801fb92:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801fb96:	fb05 0e03 	mla	lr, r5, r3, r0
 801fb9a:	f2c0 808c 	blt.w	801fcb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fb9e:	45a9      	cmp	r9, r5
 801fba0:	f340 8089 	ble.w	801fcb6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801fba4:	2800      	cmp	r0, #0
 801fba6:	f2c0 8084 	blt.w	801fcb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fbaa:	4580      	cmp	r8, r0
 801fbac:	f340 8081 	ble.w	801fcb2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801fbb0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fbb4:	f01e 0f01 	tst.w	lr, #1
 801fbb8:	5d16      	ldrb	r6, [r2, r4]
 801fbba:	bf0c      	ite	eq
 801fbbc:	f006 060f 	andeq.w	r6, r6, #15
 801fbc0:	1136      	asrne	r6, r6, #4
 801fbc2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fbc6:	b2f6      	uxtb	r6, r6
 801fbc8:	1c44      	adds	r4, r0, #1
 801fbca:	d477      	bmi.n	801fcbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fbcc:	45a0      	cmp	r8, r4
 801fbce:	dd75      	ble.n	801fcbc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801fbd0:	2f00      	cmp	r7, #0
 801fbd2:	d075      	beq.n	801fcc0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801fbd4:	f10e 0a01 	add.w	sl, lr, #1
 801fbd8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fbdc:	f01a 0f01 	tst.w	sl, #1
 801fbe0:	5d14      	ldrb	r4, [r2, r4]
 801fbe2:	bf0c      	ite	eq
 801fbe4:	f004 040f 	andeq.w	r4, r4, #15
 801fbe8:	1124      	asrne	r4, r4, #4
 801fbea:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fbee:	b2e4      	uxtb	r4, r4
 801fbf0:	3501      	adds	r5, #1
 801fbf2:	d469      	bmi.n	801fcc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fbf4:	45a9      	cmp	r9, r5
 801fbf6:	dd67      	ble.n	801fcc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801fbf8:	f1bc 0f00 	cmp.w	ip, #0
 801fbfc:	d067      	beq.n	801fcce <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801fbfe:	2800      	cmp	r0, #0
 801fc00:	db60      	blt.n	801fcc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fc02:	4580      	cmp	r8, r0
 801fc04:	dd5e      	ble.n	801fcc4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801fc06:	eb03 090e 	add.w	r9, r3, lr
 801fc0a:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fc0e:	f019 0f01 	tst.w	r9, #1
 801fc12:	5d55      	ldrb	r5, [r2, r5]
 801fc14:	bf0c      	ite	eq
 801fc16:	f005 050f 	andeq.w	r5, r5, #15
 801fc1a:	112d      	asrne	r5, r5, #4
 801fc1c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fc20:	b2ed      	uxtb	r5, r5
 801fc22:	3001      	adds	r0, #1
 801fc24:	d456      	bmi.n	801fcd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fc26:	4580      	cmp	r8, r0
 801fc28:	dd54      	ble.n	801fcd4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801fc2a:	2f00      	cmp	r7, #0
 801fc2c:	d054      	beq.n	801fcd8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801fc2e:	3301      	adds	r3, #1
 801fc30:	449e      	add	lr, r3
 801fc32:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fc36:	f01e 0f01 	tst.w	lr, #1
 801fc3a:	5cd0      	ldrb	r0, [r2, r3]
 801fc3c:	bf0c      	ite	eq
 801fc3e:	f000 000f 	andeq.w	r0, r0, #15
 801fc42:	1100      	asrne	r0, r0, #4
 801fc44:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fc48:	b2c3      	uxtb	r3, r0
 801fc4a:	b2ba      	uxth	r2, r7
 801fc4c:	fa1f fc8c 	uxth.w	ip, ip
 801fc50:	fb02 f00c 	mul.w	r0, r2, ip
 801fc54:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fc58:	0112      	lsls	r2, r2, #4
 801fc5a:	fa1f fc8c 	uxth.w	ip, ip
 801fc5e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801fc62:	1a12      	subs	r2, r2, r0
 801fc64:	eba7 070c 	sub.w	r7, r7, ip
 801fc68:	b292      	uxth	r2, r2
 801fc6a:	b2bf      	uxth	r7, r7
 801fc6c:	4362      	muls	r2, r4
 801fc6e:	fb06 2207 	mla	r2, r6, r7, r2
 801fc72:	fb0c 2505 	mla	r5, ip, r5, r2
 801fc76:	fb00 5303 	mla	r3, r0, r3, r5
 801fc7a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc7e:	b1b3      	cbz	r3, 801fcae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fc80:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801fc84:	435a      	muls	r2, r3
 801fc86:	1c53      	adds	r3, r2, #1
 801fc88:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fc8c:	4a2d      	ldr	r2, [pc, #180]	; (801fd44 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801fc8e:	121b      	asrs	r3, r3, #8
 801fc90:	6812      	ldr	r2, [r2, #0]
 801fc92:	2bff      	cmp	r3, #255	; 0xff
 801fc94:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801fc98:	d120      	bne.n	801fcdc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801fc9a:	4b2b      	ldr	r3, [pc, #172]	; (801fd48 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801fc9c:	0950      	lsrs	r0, r2, #5
 801fc9e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fca2:	4033      	ands	r3, r6
 801fca4:	4318      	orrs	r0, r3
 801fca6:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fcaa:	4302      	orrs	r2, r0
 801fcac:	800a      	strh	r2, [r1, #0]
 801fcae:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801fcb2:	2600      	movs	r6, #0
 801fcb4:	e788      	b.n	801fbc8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801fcb6:	2400      	movs	r4, #0
 801fcb8:	4626      	mov	r6, r4
 801fcba:	e799      	b.n	801fbf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fcbc:	2400      	movs	r4, #0
 801fcbe:	e797      	b.n	801fbf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fcc0:	463c      	mov	r4, r7
 801fcc2:	e795      	b.n	801fbf0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801fcc4:	2500      	movs	r5, #0
 801fcc6:	e7ac      	b.n	801fc22 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801fcc8:	2300      	movs	r3, #0
 801fcca:	461d      	mov	r5, r3
 801fccc:	e7bd      	b.n	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fcce:	4663      	mov	r3, ip
 801fcd0:	4665      	mov	r5, ip
 801fcd2:	e7ba      	b.n	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fcd4:	2300      	movs	r3, #0
 801fcd6:	e7b8      	b.n	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fcd8:	463b      	mov	r3, r7
 801fcda:	e7b6      	b.n	801fc4a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801fcdc:	880d      	ldrh	r5, [r1, #0]
 801fcde:	b29f      	uxth	r7, r3
 801fce0:	122c      	asrs	r4, r5, #8
 801fce2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801fce6:	43db      	mvns	r3, r3
 801fce8:	b2db      	uxtb	r3, r3
 801fcea:	fb10 f007 	smulbb	r0, r0, r7
 801fcee:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fcf2:	fb04 0403 	mla	r4, r4, r3, r0
 801fcf6:	b2f6      	uxtb	r6, r6
 801fcf8:	10e8      	asrs	r0, r5, #3
 801fcfa:	b2d2      	uxtb	r2, r2
 801fcfc:	00ed      	lsls	r5, r5, #3
 801fcfe:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fd02:	fb12 f207 	smulbb	r2, r2, r7
 801fd06:	fb16 f607 	smulbb	r6, r6, r7
 801fd0a:	b2ed      	uxtb	r5, r5
 801fd0c:	b2a4      	uxth	r4, r4
 801fd0e:	fb00 6603 	mla	r6, r0, r3, r6
 801fd12:	fb05 2303 	mla	r3, r5, r3, r2
 801fd16:	b29a      	uxth	r2, r3
 801fd18:	1c63      	adds	r3, r4, #1
 801fd1a:	b2b0      	uxth	r0, r6
 801fd1c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fd20:	1c53      	adds	r3, r2, #1
 801fd22:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fd26:	1c42      	adds	r2, r0, #1
 801fd28:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fd2c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801fd30:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801fd34:	0940      	lsrs	r0, r0, #5
 801fd36:	4323      	orrs	r3, r4
 801fd38:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801fd3c:	4303      	orrs	r3, r0
 801fd3e:	800b      	strh	r3, [r1, #0]
 801fd40:	e7b5      	b.n	801fcae <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801fd42:	bf00      	nop
 801fd44:	20013768 	.word	0x20013768
 801fd48:	00fff800 	.word	0x00fff800

0801fd4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fd4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fd50:	b097      	sub	sp, #92	; 0x5c
 801fd52:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801fd56:	9214      	str	r2, [sp, #80]	; 0x50
 801fd58:	9309      	str	r3, [sp, #36]	; 0x24
 801fd5a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801fd5c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801fd60:	910d      	str	r1, [sp, #52]	; 0x34
 801fd62:	930f      	str	r3, [sp, #60]	; 0x3c
 801fd64:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801fd68:	9015      	str	r0, [sp, #84]	; 0x54
 801fd6a:	6850      	ldr	r0, [r2, #4]
 801fd6c:	6812      	ldr	r2, [r2, #0]
 801fd6e:	fb00 1303 	mla	r3, r0, r3, r1
 801fd72:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801fd76:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd78:	689b      	ldr	r3, [r3, #8]
 801fd7a:	3301      	adds	r3, #1
 801fd7c:	f023 0301 	bic.w	r3, r3, #1
 801fd80:	930a      	str	r3, [sp, #40]	; 0x28
 801fd82:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd84:	681f      	ldr	r7, [r3, #0]
 801fd86:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fd88:	2b00      	cmp	r3, #0
 801fd8a:	dc03      	bgt.n	801fd94 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801fd8c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801fd8e:	2b00      	cmp	r3, #0
 801fd90:	f340 8287 	ble.w	80202a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fd94:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fd96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fd9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fd9e:	1e48      	subs	r0, r1, #1
 801fda0:	f102 3cff 	add.w	ip, r2, #4294967295
 801fda4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fda6:	2b00      	cmp	r3, #0
 801fda8:	f340 80c4 	ble.w	801ff34 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801fdac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801fdb0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801fdb4:	d406      	bmi.n	801fdc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fdb6:	4586      	cmp	lr, r0
 801fdb8:	da04      	bge.n	801fdc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fdba:	2b00      	cmp	r3, #0
 801fdbc:	db02      	blt.n	801fdc4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801fdbe:	4563      	cmp	r3, ip
 801fdc0:	f2c0 80b9 	blt.w	801ff36 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801fdc4:	f11e 0e01 	adds.w	lr, lr, #1
 801fdc8:	f100 80aa 	bmi.w	801ff20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fdcc:	4571      	cmp	r1, lr
 801fdce:	f2c0 80a7 	blt.w	801ff20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fdd2:	3301      	adds	r3, #1
 801fdd4:	f100 80a4 	bmi.w	801ff20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fdd8:	429a      	cmp	r2, r3
 801fdda:	f2c0 80a1 	blt.w	801ff20 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801fdde:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fde0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801fde4:	930e      	str	r3, [sp, #56]	; 0x38
 801fde6:	46c8      	mov	r8, r9
 801fde8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fdea:	2b00      	cmp	r3, #0
 801fdec:	f340 80c3 	ble.w	801ff76 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801fdf0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801fdf2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801fdf6:	1423      	asrs	r3, r4, #16
 801fdf8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fdfc:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801fe00:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fe04:	f100 814d 	bmi.w	80200a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fe08:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fe0c:	455b      	cmp	r3, fp
 801fe0e:	f280 8148 	bge.w	80200a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fe12:	2800      	cmp	r0, #0
 801fe14:	f2c0 8145 	blt.w	80200a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fe18:	f10e 3bff 	add.w	fp, lr, #4294967295
 801fe1c:	4558      	cmp	r0, fp
 801fe1e:	f280 8140 	bge.w	80200a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801fe22:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801fe24:	fb00 3305 	mla	r3, r0, r5, r3
 801fe28:	0858      	lsrs	r0, r3, #1
 801fe2a:	07dd      	lsls	r5, r3, #31
 801fe2c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801fe30:	bf54      	ite	pl
 801fe32:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fe36:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fe3a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fe3e:	fa5f fc8c 	uxtb.w	ip, ip
 801fe42:	2a00      	cmp	r2, #0
 801fe44:	f000 80db 	beq.w	801fffe <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801fe48:	1c58      	adds	r0, r3, #1
 801fe4a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801fe4e:	07c0      	lsls	r0, r0, #31
 801fe50:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801fe54:	bf54      	ite	pl
 801fe56:	f00e 0e0f 	andpl.w	lr, lr, #15
 801fe5a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801fe5e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801fe62:	fa5f f08e 	uxtb.w	r0, lr
 801fe66:	9010      	str	r0, [sp, #64]	; 0x40
 801fe68:	b1c9      	cbz	r1, 801fe9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fe6a:	4453      	add	r3, sl
 801fe6c:	0858      	lsrs	r0, r3, #1
 801fe6e:	07dd      	lsls	r5, r3, #31
 801fe70:	5c38      	ldrb	r0, [r7, r0]
 801fe72:	bf54      	ite	pl
 801fe74:	f000 000f 	andpl.w	r0, r0, #15
 801fe78:	1100      	asrmi	r0, r0, #4
 801fe7a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fe7e:	3301      	adds	r3, #1
 801fe80:	b2c0      	uxtb	r0, r0
 801fe82:	900b      	str	r0, [sp, #44]	; 0x2c
 801fe84:	0858      	lsrs	r0, r3, #1
 801fe86:	07dd      	lsls	r5, r3, #31
 801fe88:	f817 e000 	ldrb.w	lr, [r7, r0]
 801fe8c:	bf54      	ite	pl
 801fe8e:	f00e 030f 	andpl.w	r3, lr, #15
 801fe92:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801fe96:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fe9a:	b2db      	uxtb	r3, r3
 801fe9c:	9311      	str	r3, [sp, #68]	; 0x44
 801fe9e:	b292      	uxth	r2, r2
 801fea0:	b289      	uxth	r1, r1
 801fea2:	fb02 f301 	mul.w	r3, r2, r1
 801fea6:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801feaa:	0112      	lsls	r2, r2, #4
 801feac:	b289      	uxth	r1, r1
 801feae:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801feb2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801feb4:	1ad2      	subs	r2, r2, r3
 801feb6:	1a40      	subs	r0, r0, r1
 801feb8:	b292      	uxth	r2, r2
 801feba:	436a      	muls	r2, r5
 801febc:	b280      	uxth	r0, r0
 801febe:	fb0c 2c00 	mla	ip, ip, r0, r2
 801fec2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801fec4:	fb01 c102 	mla	r1, r1, r2, ip
 801fec8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801feca:	fb03 1302 	mla	r3, r3, r2, r1
 801fece:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fed2:	b1db      	cbz	r3, 801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fed4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fed6:	4353      	muls	r3, r2
 801fed8:	1c5a      	adds	r2, r3, #1
 801feda:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fede:	4ac6      	ldr	r2, [pc, #792]	; (80201f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fee0:	121b      	asrs	r3, r3, #8
 801fee2:	6812      	ldr	r2, [r2, #0]
 801fee4:	2bff      	cmp	r3, #255	; 0xff
 801fee6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801feea:	f040 8099 	bne.w	8020020 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801feee:	0953      	lsrs	r3, r2, #5
 801fef0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fef4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fef8:	f02c 0c07 	bic.w	ip, ip, #7
 801fefc:	ea43 0c0c 	orr.w	ip, r3, ip
 801ff00:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801ff04:	ea4c 0202 	orr.w	r2, ip, r2
 801ff08:	f8a8 2000 	strh.w	r2, [r8]
 801ff0c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ff0e:	441c      	add	r4, r3
 801ff10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff12:	441e      	add	r6, r3
 801ff14:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801ff16:	3b01      	subs	r3, #1
 801ff18:	f108 0802 	add.w	r8, r8, #2
 801ff1c:	930e      	str	r3, [sp, #56]	; 0x38
 801ff1e:	e763      	b.n	801fde8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801ff20:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801ff22:	441c      	add	r4, r3
 801ff24:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff26:	441e      	add	r6, r3
 801ff28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff2a:	3b01      	subs	r3, #1
 801ff2c:	9309      	str	r3, [sp, #36]	; 0x24
 801ff2e:	f109 0902 	add.w	r9, r9, #2
 801ff32:	e737      	b.n	801fda4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801ff34:	d024      	beq.n	801ff80 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801ff36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff38:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ff3a:	3b01      	subs	r3, #1
 801ff3c:	fb00 4003 	mla	r0, r0, r3, r4
 801ff40:	1400      	asrs	r0, r0, #16
 801ff42:	f53f af4c 	bmi.w	801fdde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff46:	3901      	subs	r1, #1
 801ff48:	4288      	cmp	r0, r1
 801ff4a:	f6bf af48 	bge.w	801fdde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff4e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ff50:	fb01 6303 	mla	r3, r1, r3, r6
 801ff54:	141b      	asrs	r3, r3, #16
 801ff56:	f53f af42 	bmi.w	801fdde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff5a:	3a01      	subs	r2, #1
 801ff5c:	4293      	cmp	r3, r2
 801ff5e:	f6bf af3e 	bge.w	801fdde <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801ff62:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801ff66:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801ff6a:	930e      	str	r3, [sp, #56]	; 0x38
 801ff6c:	46c8      	mov	r8, r9
 801ff6e:	f1bb 0f00 	cmp.w	fp, #0
 801ff72:	f300 80b7 	bgt.w	80200e4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801ff76:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ff78:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801ff7c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801ff80:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ff82:	2b00      	cmp	r3, #0
 801ff84:	f340 818d 	ble.w	80202a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801ff88:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ff8c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ff90:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ff94:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ff96:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ff9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ff9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ffa2:	eef0 6a62 	vmov.f32	s13, s5
 801ffa6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ffaa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ffb2:	ee16 4a90 	vmov	r4, s13
 801ffb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ffba:	eef0 6a43 	vmov.f32	s13, s6
 801ffbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ffc2:	ee12 2a90 	vmov	r2, s5
 801ffc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ffca:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffce:	ee13 2a10 	vmov	r2, s6
 801ffd2:	9323      	str	r3, [sp, #140]	; 0x8c
 801ffd4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffd6:	fb92 f3f3 	sdiv	r3, r2, r3
 801ffda:	9324      	str	r3, [sp, #144]	; 0x90
 801ffdc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801ffde:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801ffe0:	3b01      	subs	r3, #1
 801ffe2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ffe6:	930d      	str	r3, [sp, #52]	; 0x34
 801ffe8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ffea:	bf08      	it	eq
 801ffec:	4613      	moveq	r3, r2
 801ffee:	ee16 6a90 	vmov	r6, s13
 801fff2:	9309      	str	r3, [sp, #36]	; 0x24
 801fff4:	eeb0 3a67 	vmov.f32	s6, s15
 801fff8:	eef0 2a47 	vmov.f32	s5, s14
 801fffc:	e6c3      	b.n	801fd86 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801fffe:	2900      	cmp	r1, #0
 8020000:	f43f af4d 	beq.w	801fe9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020004:	eb0a 0003 	add.w	r0, sl, r3
 8020008:	0843      	lsrs	r3, r0, #1
 802000a:	07c0      	lsls	r0, r0, #31
 802000c:	5cfb      	ldrb	r3, [r7, r3]
 802000e:	bf54      	ite	pl
 8020010:	f003 030f 	andpl.w	r3, r3, #15
 8020014:	111b      	asrmi	r3, r3, #4
 8020016:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802001a:	b2db      	uxtb	r3, r3
 802001c:	930b      	str	r3, [sp, #44]	; 0x2c
 802001e:	e73e      	b.n	801fe9e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8020020:	f8b8 e000 	ldrh.w	lr, [r8]
 8020024:	fa1f fb83 	uxth.w	fp, r3
 8020028:	ea4f 202e 	mov.w	r0, lr, asr #8
 802002c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020030:	43db      	mvns	r3, r3
 8020032:	b2db      	uxtb	r3, r3
 8020034:	fb11 f10b 	smulbb	r1, r1, fp
 8020038:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 802003c:	fb00 1003 	mla	r0, r0, r3, r1
 8020040:	fa5f fc8c 	uxtb.w	ip, ip
 8020044:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8020048:	b2d2      	uxtb	r2, r2
 802004a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802004e:	b280      	uxth	r0, r0
 8020050:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020054:	fb1c fc0b 	smulbb	ip, ip, fp
 8020058:	fa5f fe8e 	uxtb.w	lr, lr
 802005c:	fb12 fb0b 	smulbb	fp, r2, fp
 8020060:	fb01 cc03 	mla	ip, r1, r3, ip
 8020064:	fb0e bb03 	mla	fp, lr, r3, fp
 8020068:	1c43      	adds	r3, r0, #1
 802006a:	fa1f fc8c 	uxth.w	ip, ip
 802006e:	fa1f fb8b 	uxth.w	fp, fp
 8020072:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020076:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 802007a:	f10c 0101 	add.w	r1, ip, #1
 802007e:	f10b 0001 	add.w	r0, fp, #1
 8020082:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8020086:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 802008a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 802008e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020092:	4318      	orrs	r0, r3
 8020094:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020098:	ea40 000c 	orr.w	r0, r0, ip
 802009c:	f8a8 0000 	strh.w	r0, [r8]
 80200a0:	e734      	b.n	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200a2:	f113 0b01 	adds.w	fp, r3, #1
 80200a6:	f53f af31 	bmi.w	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200aa:	45dc      	cmp	ip, fp
 80200ac:	f6ff af2e 	blt.w	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200b0:	f110 0b01 	adds.w	fp, r0, #1
 80200b4:	f53f af2a 	bmi.w	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200b8:	45de      	cmp	lr, fp
 80200ba:	f6ff af27 	blt.w	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200be:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80200c0:	9302      	str	r3, [sp, #8]
 80200c2:	fa0f f38e 	sxth.w	r3, lr
 80200c6:	9301      	str	r3, [sp, #4]
 80200c8:	fa0f f38c 	sxth.w	r3, ip
 80200cc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80200d0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 80200d4:	9300      	str	r3, [sp, #0]
 80200d6:	463a      	mov	r2, r7
 80200d8:	4653      	mov	r3, sl
 80200da:	4641      	mov	r1, r8
 80200dc:	9815      	ldr	r0, [sp, #84]	; 0x54
 80200de:	f7ff fd4d 	bl	801fb7c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 80200e2:	e713      	b.n	801ff0c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 80200e4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80200e6:	1422      	asrs	r2, r4, #16
 80200e8:	1433      	asrs	r3, r6, #16
 80200ea:	fb05 2303 	mla	r3, r5, r3, r2
 80200ee:	085a      	lsrs	r2, r3, #1
 80200f0:	07dd      	lsls	r5, r3, #31
 80200f2:	5cba      	ldrb	r2, [r7, r2]
 80200f4:	bf54      	ite	pl
 80200f6:	f002 020f 	andpl.w	r2, r2, #15
 80200fa:	1112      	asrmi	r2, r2, #4
 80200fc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8020100:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8020104:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8020108:	b2d2      	uxtb	r2, r2
 802010a:	2900      	cmp	r1, #0
 802010c:	d076      	beq.n	80201fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 802010e:	f103 0e01 	add.w	lr, r3, #1
 8020112:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8020116:	f01e 0f01 	tst.w	lr, #1
 802011a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802011e:	bf0c      	ite	eq
 8020120:	f00c 0c0f 	andeq.w	ip, ip, #15
 8020124:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8020128:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802012c:	fa5f f58c 	uxtb.w	r5, ip
 8020130:	9512      	str	r5, [sp, #72]	; 0x48
 8020132:	b300      	cbz	r0, 8020176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020134:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020136:	442b      	add	r3, r5
 8020138:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802013c:	07dd      	lsls	r5, r3, #31
 802013e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020142:	bf54      	ite	pl
 8020144:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020148:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802014c:	3301      	adds	r3, #1
 802014e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020152:	fa5f f58c 	uxtb.w	r5, ip
 8020156:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 802015a:	950c      	str	r5, [sp, #48]	; 0x30
 802015c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8020160:	07dd      	lsls	r5, r3, #31
 8020162:	bf54      	ite	pl
 8020164:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020168:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802016c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020170:	fa5f f38c 	uxtb.w	r3, ip
 8020174:	9313      	str	r3, [sp, #76]	; 0x4c
 8020176:	b289      	uxth	r1, r1
 8020178:	b280      	uxth	r0, r0
 802017a:	fb01 f300 	mul.w	r3, r1, r0
 802017e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8020182:	0109      	lsls	r1, r1, #4
 8020184:	b280      	uxth	r0, r0
 8020186:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 802018a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 802018c:	1ac9      	subs	r1, r1, r3
 802018e:	ebac 0c00 	sub.w	ip, ip, r0
 8020192:	b289      	uxth	r1, r1
 8020194:	4369      	muls	r1, r5
 8020196:	fa1f fc8c 	uxth.w	ip, ip
 802019a:	fb02 120c 	mla	r2, r2, ip, r1
 802019e:	990c      	ldr	r1, [sp, #48]	; 0x30
 80201a0:	fb00 2001 	mla	r0, r0, r1, r2
 80201a4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80201a6:	fb03 0302 	mla	r3, r3, r2, r0
 80201aa:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80201ae:	b1d3      	cbz	r3, 80201e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80201b0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80201b2:	4353      	muls	r3, r2
 80201b4:	1c5a      	adds	r2, r3, #1
 80201b6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 80201ba:	4a0f      	ldr	r2, [pc, #60]	; (80201f8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 80201bc:	121b      	asrs	r3, r3, #8
 80201be:	6812      	ldr	r2, [r2, #0]
 80201c0:	2bff      	cmp	r3, #255	; 0xff
 80201c2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80201c6:	d12d      	bne.n	8020224 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 80201c8:	0953      	lsrs	r3, r2, #5
 80201ca:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 80201ce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80201d2:	f02c 0c07 	bic.w	ip, ip, #7
 80201d6:	ea43 0c0c 	orr.w	ip, r3, ip
 80201da:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80201de:	ea4c 0202 	orr.w	r2, ip, r2
 80201e2:	f8a8 2000 	strh.w	r2, [r8]
 80201e6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80201e8:	441c      	add	r4, r3
 80201ea:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80201ec:	f108 0802 	add.w	r8, r8, #2
 80201f0:	441e      	add	r6, r3
 80201f2:	f10b 3bff 	add.w	fp, fp, #4294967295
 80201f6:	e6ba      	b.n	801ff6e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 80201f8:	20013768 	.word	0x20013768
 80201fc:	2800      	cmp	r0, #0
 80201fe:	d0ba      	beq.n	8020176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020200:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8020202:	442b      	add	r3, r5
 8020204:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8020208:	07db      	lsls	r3, r3, #31
 802020a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 802020e:	bf54      	ite	pl
 8020210:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020214:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8020218:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 802021c:	fa5f f38c 	uxtb.w	r3, ip
 8020220:	930c      	str	r3, [sp, #48]	; 0x30
 8020222:	e7a8      	b.n	8020176 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8020224:	f8b8 e000 	ldrh.w	lr, [r8]
 8020228:	fa1f fa83 	uxth.w	sl, r3
 802022c:	ea4f 202e 	mov.w	r0, lr, asr #8
 8020230:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8020234:	43db      	mvns	r3, r3
 8020236:	b2db      	uxtb	r3, r3
 8020238:	fb11 f10a 	smulbb	r1, r1, sl
 802023c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8020240:	fb00 1003 	mla	r0, r0, r3, r1
 8020244:	b2d2      	uxtb	r2, r2
 8020246:	ea4f 01ee 	mov.w	r1, lr, asr #3
 802024a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 802024e:	fa5f fe8e 	uxtb.w	lr, lr
 8020252:	fb12 f20a 	smulbb	r2, r2, sl
 8020256:	fb0e 2203 	mla	r2, lr, r3, r2
 802025a:	fa5f fc8c 	uxtb.w	ip, ip
 802025e:	b280      	uxth	r0, r0
 8020260:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8020264:	b292      	uxth	r2, r2
 8020266:	fb1c fc0a 	smulbb	ip, ip, sl
 802026a:	fb01 cc03 	mla	ip, r1, r3, ip
 802026e:	1c43      	adds	r3, r0, #1
 8020270:	1c51      	adds	r1, r2, #1
 8020272:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020276:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 802027a:	fa1f fc8c 	uxth.w	ip, ip
 802027e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020282:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8020286:	4308      	orrs	r0, r1
 8020288:	f10c 0101 	add.w	r1, ip, #1
 802028c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8020290:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8020294:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8020298:	ea40 000c 	orr.w	r0, r0, ip
 802029c:	f8a8 0000 	strh.w	r0, [r8]
 80202a0:	e7a1      	b.n	80201e6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80202a2:	b017      	add	sp, #92	; 0x5c
 80202a4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080202a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 80202a8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80202ac:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 80202b0:	2d00      	cmp	r5, #0
 80202b2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80202b6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80202ba:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 80202be:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80202c2:	fb05 0e03 	mla	lr, r5, r3, r0
 80202c6:	f2c0 80b0 	blt.w	802042a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80202ca:	45a9      	cmp	r9, r5
 80202cc:	f340 80ad 	ble.w	802042a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 80202d0:	2800      	cmp	r0, #0
 80202d2:	f2c0 80a8 	blt.w	8020426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80202d6:	4580      	cmp	r8, r0
 80202d8:	f340 80a5 	ble.w	8020426 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 80202dc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 80202e0:	f01e 0f01 	tst.w	lr, #1
 80202e4:	5d16      	ldrb	r6, [r2, r4]
 80202e6:	bf0c      	ite	eq
 80202e8:	f006 060f 	andeq.w	r6, r6, #15
 80202ec:	1136      	asrne	r6, r6, #4
 80202ee:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 80202f2:	b2f6      	uxtb	r6, r6
 80202f4:	1c44      	adds	r4, r0, #1
 80202f6:	f100 809b 	bmi.w	8020430 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 80202fa:	45a0      	cmp	r8, r4
 80202fc:	f340 8098 	ble.w	8020430 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8020300:	2f00      	cmp	r7, #0
 8020302:	f000 8097 	beq.w	8020434 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8020306:	f10e 0a01 	add.w	sl, lr, #1
 802030a:	ea4f 045a 	mov.w	r4, sl, lsr #1
 802030e:	f01a 0f01 	tst.w	sl, #1
 8020312:	5d14      	ldrb	r4, [r2, r4]
 8020314:	bf0c      	ite	eq
 8020316:	f004 040f 	andeq.w	r4, r4, #15
 802031a:	1124      	asrne	r4, r4, #4
 802031c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8020320:	b2e4      	uxtb	r4, r4
 8020322:	3501      	adds	r5, #1
 8020324:	f100 808a 	bmi.w	802043c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8020328:	45a9      	cmp	r9, r5
 802032a:	f340 8087 	ble.w	802043c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 802032e:	f1bc 0f00 	cmp.w	ip, #0
 8020332:	f000 8086 	beq.w	8020442 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8020336:	2800      	cmp	r0, #0
 8020338:	db7e      	blt.n	8020438 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802033a:	4580      	cmp	r8, r0
 802033c:	dd7c      	ble.n	8020438 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 802033e:	eb03 090e 	add.w	r9, r3, lr
 8020342:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8020346:	f019 0f01 	tst.w	r9, #1
 802034a:	5d55      	ldrb	r5, [r2, r5]
 802034c:	bf0c      	ite	eq
 802034e:	f005 050f 	andeq.w	r5, r5, #15
 8020352:	112d      	asrne	r5, r5, #4
 8020354:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8020358:	b2ed      	uxtb	r5, r5
 802035a:	3001      	adds	r0, #1
 802035c:	d474      	bmi.n	8020448 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 802035e:	4580      	cmp	r8, r0
 8020360:	dd72      	ble.n	8020448 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8020362:	2f00      	cmp	r7, #0
 8020364:	d072      	beq.n	802044c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8020366:	3301      	adds	r3, #1
 8020368:	449e      	add	lr, r3
 802036a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802036e:	f01e 0f01 	tst.w	lr, #1
 8020372:	5cd0      	ldrb	r0, [r2, r3]
 8020374:	bf0c      	ite	eq
 8020376:	f000 000f 	andeq.w	r0, r0, #15
 802037a:	1100      	asrne	r0, r0, #4
 802037c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020380:	b2c3      	uxtb	r3, r0
 8020382:	b2ba      	uxth	r2, r7
 8020384:	fa1f fc8c 	uxth.w	ip, ip
 8020388:	fb02 f00c 	mul.w	r0, r2, ip
 802038c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8020390:	0112      	lsls	r2, r2, #4
 8020392:	fa1f fc8c 	uxth.w	ip, ip
 8020396:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 802039a:	1a12      	subs	r2, r2, r0
 802039c:	eba7 070c 	sub.w	r7, r7, ip
 80203a0:	b292      	uxth	r2, r2
 80203a2:	b2bf      	uxth	r7, r7
 80203a4:	4362      	muls	r2, r4
 80203a6:	fb06 2207 	mla	r2, r6, r7, r2
 80203aa:	fb0c 2505 	mla	r5, ip, r5, r2
 80203ae:	fb00 5303 	mla	r3, r0, r3, r5
 80203b2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80203b6:	b3a3      	cbz	r3, 8020422 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 80203b8:	4a25      	ldr	r2, [pc, #148]	; (8020450 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 80203ba:	880e      	ldrh	r6, [r1, #0]
 80203bc:	6815      	ldr	r5, [r2, #0]
 80203be:	1234      	asrs	r4, r6, #8
 80203c0:	b29a      	uxth	r2, r3
 80203c2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 80203c6:	43db      	mvns	r3, r3
 80203c8:	b2db      	uxtb	r3, r3
 80203ca:	fb10 f002 	smulbb	r0, r0, r2
 80203ce:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 80203d2:	fb04 0403 	mla	r4, r4, r3, r0
 80203d6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 80203da:	10f0      	asrs	r0, r6, #3
 80203dc:	b2ed      	uxtb	r5, r5
 80203de:	00f6      	lsls	r6, r6, #3
 80203e0:	fb17 f702 	smulbb	r7, r7, r2
 80203e4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 80203e8:	fb15 f202 	smulbb	r2, r5, r2
 80203ec:	b2f6      	uxtb	r6, r6
 80203ee:	b2a4      	uxth	r4, r4
 80203f0:	fb00 7003 	mla	r0, r0, r3, r7
 80203f4:	fb06 2303 	mla	r3, r6, r3, r2
 80203f8:	b29a      	uxth	r2, r3
 80203fa:	1c63      	adds	r3, r4, #1
 80203fc:	b280      	uxth	r0, r0
 80203fe:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8020402:	1c53      	adds	r3, r2, #1
 8020404:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020408:	1c42      	adds	r2, r0, #1
 802040a:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 802040e:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8020412:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020416:	0940      	lsrs	r0, r0, #5
 8020418:	4323      	orrs	r3, r4
 802041a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 802041e:	4303      	orrs	r3, r0
 8020420:	800b      	strh	r3, [r1, #0]
 8020422:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020426:	2600      	movs	r6, #0
 8020428:	e764      	b.n	80202f4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 802042a:	2400      	movs	r4, #0
 802042c:	4626      	mov	r6, r4
 802042e:	e778      	b.n	8020322 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020430:	2400      	movs	r4, #0
 8020432:	e776      	b.n	8020322 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020434:	463c      	mov	r4, r7
 8020436:	e774      	b.n	8020322 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8020438:	2500      	movs	r5, #0
 802043a:	e78e      	b.n	802035a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 802043c:	2300      	movs	r3, #0
 802043e:	461d      	mov	r5, r3
 8020440:	e79f      	b.n	8020382 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020442:	4663      	mov	r3, ip
 8020444:	4665      	mov	r5, ip
 8020446:	e79c      	b.n	8020382 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020448:	2300      	movs	r3, #0
 802044a:	e79a      	b.n	8020382 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 802044c:	463b      	mov	r3, r7
 802044e:	e798      	b.n	8020382 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8020450:	20013768 	.word	0x20013768

08020454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020454:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020458:	b093      	sub	sp, #76	; 0x4c
 802045a:	461d      	mov	r5, r3
 802045c:	920c      	str	r2, [sp, #48]	; 0x30
 802045e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8020460:	9107      	str	r1, [sp, #28]
 8020462:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 8020466:	9011      	str	r0, [sp, #68]	; 0x44
 8020468:	6850      	ldr	r0, [r2, #4]
 802046a:	6812      	ldr	r2, [r2, #0]
 802046c:	fb00 1303 	mla	r3, r0, r3, r1
 8020470:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8020474:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020476:	689b      	ldr	r3, [r3, #8]
 8020478:	3301      	adds	r3, #1
 802047a:	f023 0301 	bic.w	r3, r3, #1
 802047e:	9306      	str	r3, [sp, #24]
 8020480:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020482:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8020486:	681f      	ldr	r7, [r3, #0]
 8020488:	9b07      	ldr	r3, [sp, #28]
 802048a:	2b00      	cmp	r3, #0
 802048c:	dc03      	bgt.n	8020496 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 802048e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8020490:	2b00      	cmp	r3, #0
 8020492:	f340 8267 	ble.w	8020964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8020496:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8020498:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802049c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80204a0:	1e48      	subs	r0, r1, #1
 80204a2:	f102 3cff 	add.w	ip, r2, #4294967295
 80204a6:	2d00      	cmp	r5, #0
 80204a8:	f340 80b8 	ble.w	802061c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80204ac:	ea5f 4e24 	movs.w	lr, r4, asr #16
 80204b0:	ea4f 4326 	mov.w	r3, r6, asr #16
 80204b4:	d406      	bmi.n	80204c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80204b6:	4586      	cmp	lr, r0
 80204b8:	da04      	bge.n	80204c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80204ba:	2b00      	cmp	r3, #0
 80204bc:	db02      	blt.n	80204c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80204be:	4563      	cmp	r3, ip
 80204c0:	f2c0 80ad 	blt.w	802061e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 80204c4:	f11e 0e01 	adds.w	lr, lr, #1
 80204c8:	f100 80a0 	bmi.w	802060c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80204cc:	4571      	cmp	r1, lr
 80204ce:	f2c0 809d 	blt.w	802060c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80204d2:	3301      	adds	r3, #1
 80204d4:	f100 809a 	bmi.w	802060c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80204d8:	429a      	cmp	r2, r3
 80204da:	f2c0 8097 	blt.w	802060c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 80204de:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 80204e2:	9509      	str	r5, [sp, #36]	; 0x24
 80204e4:	46c8      	mov	r8, r9
 80204e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80204e8:	2b00      	cmp	r3, #0
 80204ea:	f340 80b6 	ble.w	802065a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80204ee:	f3c4 3303 	ubfx	r3, r4, #12, #4
 80204f2:	9308      	str	r3, [sp, #32]
 80204f4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80204f6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 80204fa:	1423      	asrs	r3, r4, #16
 80204fc:	ea4f 4026 	mov.w	r0, r6, asr #16
 8020500:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8020504:	f100 813e 	bmi.w	8020784 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020508:	f10c 3bff 	add.w	fp, ip, #4294967295
 802050c:	455b      	cmp	r3, fp
 802050e:	f280 8139 	bge.w	8020784 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020512:	2800      	cmp	r0, #0
 8020514:	f2c0 8136 	blt.w	8020784 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020518:	f10e 3bff 	add.w	fp, lr, #4294967295
 802051c:	4558      	cmp	r0, fp
 802051e:	f280 8131 	bge.w	8020784 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020522:	9a06      	ldr	r2, [sp, #24]
 8020524:	fb00 3302 	mla	r3, r0, r2, r3
 8020528:	0858      	lsrs	r0, r3, #1
 802052a:	07da      	lsls	r2, r3, #31
 802052c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020530:	9a08      	ldr	r2, [sp, #32]
 8020532:	bf54      	ite	pl
 8020534:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020538:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802053c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020540:	fa5f fc8c 	uxtb.w	ip, ip
 8020544:	2a00      	cmp	r2, #0
 8020546:	f000 80cb 	beq.w	80206e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802054a:	1c58      	adds	r0, r3, #1
 802054c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020550:	07c0      	lsls	r0, r0, #31
 8020552:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020556:	bf54      	ite	pl
 8020558:	f00e 0e0f 	andpl.w	lr, lr, #15
 802055c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020560:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020564:	fa5f fe8e 	uxtb.w	lr, lr
 8020568:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802056c:	b1b9      	cbz	r1, 802059e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802056e:	4453      	add	r3, sl
 8020570:	0858      	lsrs	r0, r3, #1
 8020572:	07da      	lsls	r2, r3, #31
 8020574:	5c38      	ldrb	r0, [r7, r0]
 8020576:	bf54      	ite	pl
 8020578:	f000 000f 	andpl.w	r0, r0, #15
 802057c:	1100      	asrmi	r0, r0, #4
 802057e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020582:	b2c0      	uxtb	r0, r0
 8020584:	900a      	str	r0, [sp, #40]	; 0x28
 8020586:	1c58      	adds	r0, r3, #1
 8020588:	0843      	lsrs	r3, r0, #1
 802058a:	07c2      	lsls	r2, r0, #31
 802058c:	5cfb      	ldrb	r3, [r7, r3]
 802058e:	bf54      	ite	pl
 8020590:	f003 030f 	andpl.w	r3, r3, #15
 8020594:	111b      	asrmi	r3, r3, #4
 8020596:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802059a:	b2db      	uxtb	r3, r3
 802059c:	930e      	str	r3, [sp, #56]	; 0x38
 802059e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80205a2:	b289      	uxth	r1, r1
 80205a4:	fb02 f301 	mul.w	r3, r2, r1
 80205a8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 80205ac:	0112      	lsls	r2, r2, #4
 80205ae:	b289      	uxth	r1, r1
 80205b0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80205b4:	1a40      	subs	r0, r0, r1
 80205b6:	fa1f fe80 	uxth.w	lr, r0
 80205ba:	1ad2      	subs	r2, r2, r3
 80205bc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80205be:	b292      	uxth	r2, r2
 80205c0:	4342      	muls	r2, r0
 80205c2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80205c6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80205c8:	fb01 c102 	mla	r1, r1, r2, ip
 80205cc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80205ce:	fb03 1302 	mla	r3, r3, r2, r1
 80205d2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80205d6:	2bff      	cmp	r3, #255	; 0xff
 80205d8:	f040 8093 	bne.w	8020702 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80205dc:	4bbe      	ldr	r3, [pc, #760]	; (80208d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80205de:	681a      	ldr	r2, [r3, #0]
 80205e0:	4bbe      	ldr	r3, [pc, #760]	; (80208dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80205e2:	0951      	lsrs	r1, r2, #5
 80205e4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80205e8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80205ec:	430b      	orrs	r3, r1
 80205ee:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80205f2:	4313      	orrs	r3, r2
 80205f4:	f8a8 3000 	strh.w	r3, [r8]
 80205f8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80205fa:	441c      	add	r4, r3
 80205fc:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80205fe:	441e      	add	r6, r3
 8020600:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020602:	3b01      	subs	r3, #1
 8020604:	f108 0802 	add.w	r8, r8, #2
 8020608:	9309      	str	r3, [sp, #36]	; 0x24
 802060a:	e76c      	b.n	80204e6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 802060c:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 802060e:	441c      	add	r4, r3
 8020610:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020612:	3d01      	subs	r5, #1
 8020614:	441e      	add	r6, r3
 8020616:	f109 0902 	add.w	r9, r9, #2
 802061a:	e744      	b.n	80204a6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802061c:	d021      	beq.n	8020662 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802061e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020620:	1e6b      	subs	r3, r5, #1
 8020622:	fb00 4003 	mla	r0, r0, r3, r4
 8020626:	1400      	asrs	r0, r0, #16
 8020628:	f53f af59 	bmi.w	80204de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802062c:	3901      	subs	r1, #1
 802062e:	4288      	cmp	r0, r1
 8020630:	f6bf af55 	bge.w	80204de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020634:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020636:	fb01 6303 	mla	r3, r1, r3, r6
 802063a:	141b      	asrs	r3, r3, #16
 802063c:	f53f af4f 	bmi.w	80204de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020640:	3a01      	subs	r2, #1
 8020642:	4293      	cmp	r3, r2
 8020644:	f6bf af4b 	bge.w	80204de <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020648:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802064c:	9308      	str	r3, [sp, #32]
 802064e:	46a8      	mov	r8, r5
 8020650:	46ce      	mov	lr, r9
 8020652:	f1b8 0f00 	cmp.w	r8, #0
 8020656:	f300 80b5 	bgt.w	80207c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802065a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802065e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020662:	9b07      	ldr	r3, [sp, #28]
 8020664:	2b00      	cmp	r3, #0
 8020666:	f340 817d 	ble.w	8020964 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802066a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802066e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020672:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020676:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020678:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802067c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020680:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020684:	eef0 6a62 	vmov.f32	s13, s5
 8020688:	ee61 7a27 	vmul.f32	s15, s2, s15
 802068c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020690:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020694:	ee16 4a90 	vmov	r4, s13
 8020698:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802069c:	eef0 6a43 	vmov.f32	s13, s6
 80206a0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80206a4:	ee12 2a90 	vmov	r2, s5
 80206a8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80206ac:	fb92 f3f3 	sdiv	r3, r2, r3
 80206b0:	ee13 2a10 	vmov	r2, s6
 80206b4:	931f      	str	r3, [sp, #124]	; 0x7c
 80206b6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80206b8:	fb92 f3f3 	sdiv	r3, r2, r3
 80206bc:	9320      	str	r3, [sp, #128]	; 0x80
 80206be:	9b07      	ldr	r3, [sp, #28]
 80206c0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80206c2:	3b01      	subs	r3, #1
 80206c4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80206c8:	9307      	str	r3, [sp, #28]
 80206ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80206cc:	ee16 6a90 	vmov	r6, s13
 80206d0:	bf14      	ite	ne
 80206d2:	461d      	movne	r5, r3
 80206d4:	4615      	moveq	r5, r2
 80206d6:	eeb0 3a67 	vmov.f32	s6, s15
 80206da:	eef0 2a47 	vmov.f32	s5, s14
 80206de:	e6d3      	b.n	8020488 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80206e0:	2900      	cmp	r1, #0
 80206e2:	f43f af5c 	beq.w	802059e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80206e6:	eb0a 0003 	add.w	r0, sl, r3
 80206ea:	0843      	lsrs	r3, r0, #1
 80206ec:	07c0      	lsls	r0, r0, #31
 80206ee:	5cfb      	ldrb	r3, [r7, r3]
 80206f0:	bf54      	ite	pl
 80206f2:	f003 030f 	andpl.w	r3, r3, #15
 80206f6:	111b      	asrmi	r3, r3, #4
 80206f8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80206fc:	b2db      	uxtb	r3, r3
 80206fe:	930a      	str	r3, [sp, #40]	; 0x28
 8020700:	e74d      	b.n	802059e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8020702:	2b00      	cmp	r3, #0
 8020704:	f43f af78 	beq.w	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020708:	4a73      	ldr	r2, [pc, #460]	; (80208d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 802070a:	f8b8 c000 	ldrh.w	ip, [r8]
 802070e:	6810      	ldr	r0, [r2, #0]
 8020710:	fa1f fe83 	uxth.w	lr, r3
 8020714:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020718:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802071c:	43db      	mvns	r3, r3
 802071e:	b2db      	uxtb	r3, r3
 8020720:	fb12 f20e 	smulbb	r2, r2, lr
 8020724:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020728:	fb01 2103 	mla	r1, r1, r3, r2
 802072c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020730:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020734:	b2c0      	uxtb	r0, r0
 8020736:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802073a:	fb1b fb0e 	smulbb	fp, fp, lr
 802073e:	b289      	uxth	r1, r1
 8020740:	fb10 fe0e 	smulbb	lr, r0, lr
 8020744:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020748:	fa5f fc8c 	uxtb.w	ip, ip
 802074c:	fb02 b203 	mla	r2, r2, r3, fp
 8020750:	1c48      	adds	r0, r1, #1
 8020752:	fb0c e303 	mla	r3, ip, r3, lr
 8020756:	b292      	uxth	r2, r2
 8020758:	b29b      	uxth	r3, r3
 802075a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802075e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8020762:	f102 0b01 	add.w	fp, r2, #1
 8020766:	1c59      	adds	r1, r3, #1
 8020768:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802076c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020770:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020774:	0952      	lsrs	r2, r2, #5
 8020776:	4301      	orrs	r1, r0
 8020778:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802077c:	4311      	orrs	r1, r2
 802077e:	f8a8 1000 	strh.w	r1, [r8]
 8020782:	e739      	b.n	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020784:	f113 0b01 	adds.w	fp, r3, #1
 8020788:	f53f af36 	bmi.w	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802078c:	45dc      	cmp	ip, fp
 802078e:	f6ff af33 	blt.w	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020792:	f110 0b01 	adds.w	fp, r0, #1
 8020796:	f53f af2f 	bmi.w	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802079a:	45de      	cmp	lr, fp
 802079c:	f6ff af2c 	blt.w	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80207a0:	9a08      	ldr	r2, [sp, #32]
 80207a2:	9302      	str	r3, [sp, #8]
 80207a4:	fa0f f38e 	sxth.w	r3, lr
 80207a8:	9301      	str	r3, [sp, #4]
 80207aa:	fa0f f38c 	sxth.w	r3, ip
 80207ae:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80207b2:	9105      	str	r1, [sp, #20]
 80207b4:	9300      	str	r3, [sp, #0]
 80207b6:	463a      	mov	r2, r7
 80207b8:	4653      	mov	r3, sl
 80207ba:	4641      	mov	r1, r8
 80207bc:	9811      	ldr	r0, [sp, #68]	; 0x44
 80207be:	f7ff fd73 	bl	80202a8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80207c2:	e719      	b.n	80205f8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80207c4:	9906      	ldr	r1, [sp, #24]
 80207c6:	1422      	asrs	r2, r4, #16
 80207c8:	1433      	asrs	r3, r6, #16
 80207ca:	fb01 2303 	mla	r3, r1, r3, r2
 80207ce:	085a      	lsrs	r2, r3, #1
 80207d0:	07d9      	lsls	r1, r3, #31
 80207d2:	5cba      	ldrb	r2, [r7, r2]
 80207d4:	bf54      	ite	pl
 80207d6:	f002 020f 	andpl.w	r2, r2, #15
 80207da:	1112      	asrmi	r2, r2, #4
 80207dc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80207e0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80207e4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80207e8:	b2d2      	uxtb	r2, r2
 80207ea:	2800      	cmp	r0, #0
 80207ec:	d062      	beq.n	80208b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80207ee:	f103 0a01 	add.w	sl, r3, #1
 80207f2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80207f6:	f01a 0f01 	tst.w	sl, #1
 80207fa:	5c79      	ldrb	r1, [r7, r1]
 80207fc:	bf0c      	ite	eq
 80207fe:	f001 010f 	andeq.w	r1, r1, #15
 8020802:	1109      	asrne	r1, r1, #4
 8020804:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020808:	b2c9      	uxtb	r1, r1
 802080a:	910f      	str	r1, [sp, #60]	; 0x3c
 802080c:	f1bc 0f00 	cmp.w	ip, #0
 8020810:	d019      	beq.n	8020846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020812:	9908      	ldr	r1, [sp, #32]
 8020814:	440b      	add	r3, r1
 8020816:	0859      	lsrs	r1, r3, #1
 8020818:	f013 0f01 	tst.w	r3, #1
 802081c:	5c79      	ldrb	r1, [r7, r1]
 802081e:	bf0c      	ite	eq
 8020820:	f001 010f 	andeq.w	r1, r1, #15
 8020824:	1109      	asrne	r1, r1, #4
 8020826:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802082a:	b2c9      	uxtb	r1, r1
 802082c:	3301      	adds	r3, #1
 802082e:	910b      	str	r1, [sp, #44]	; 0x2c
 8020830:	0859      	lsrs	r1, r3, #1
 8020832:	07db      	lsls	r3, r3, #31
 8020834:	5c79      	ldrb	r1, [r7, r1]
 8020836:	bf54      	ite	pl
 8020838:	f001 010f 	andpl.w	r1, r1, #15
 802083c:	1109      	asrmi	r1, r1, #4
 802083e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020842:	b2c9      	uxtb	r1, r1
 8020844:	9110      	str	r1, [sp, #64]	; 0x40
 8020846:	b280      	uxth	r0, r0
 8020848:	fa1f fc8c 	uxth.w	ip, ip
 802084c:	fb00 f30c 	mul.w	r3, r0, ip
 8020850:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020854:	0100      	lsls	r0, r0, #4
 8020856:	fa1f fc8c 	uxth.w	ip, ip
 802085a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802085e:	eba1 010c 	sub.w	r1, r1, ip
 8020862:	fa1f fa81 	uxth.w	sl, r1
 8020866:	1ac0      	subs	r0, r0, r3
 8020868:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802086a:	b280      	uxth	r0, r0
 802086c:	4348      	muls	r0, r1
 802086e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8020870:	fb02 020a 	mla	r2, r2, sl, r0
 8020874:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020878:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802087a:	fb03 c302 	mla	r3, r3, r2, ip
 802087e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020882:	2bff      	cmp	r3, #255	; 0xff
 8020884:	d12c      	bne.n	80208e0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020886:	4b14      	ldr	r3, [pc, #80]	; (80208d8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020888:	681a      	ldr	r2, [r3, #0]
 802088a:	4b14      	ldr	r3, [pc, #80]	; (80208dc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802088c:	0951      	lsrs	r1, r2, #5
 802088e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020892:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020896:	430b      	orrs	r3, r1
 8020898:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802089c:	4313      	orrs	r3, r2
 802089e:	f8ae 3000 	strh.w	r3, [lr]
 80208a2:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80208a4:	441c      	add	r4, r3
 80208a6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80208a8:	f10e 0e02 	add.w	lr, lr, #2
 80208ac:	441e      	add	r6, r3
 80208ae:	f108 38ff 	add.w	r8, r8, #4294967295
 80208b2:	e6ce      	b.n	8020652 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80208b4:	f1bc 0f00 	cmp.w	ip, #0
 80208b8:	d0c5      	beq.n	8020846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80208ba:	9908      	ldr	r1, [sp, #32]
 80208bc:	440b      	add	r3, r1
 80208be:	0859      	lsrs	r1, r3, #1
 80208c0:	07db      	lsls	r3, r3, #31
 80208c2:	5c79      	ldrb	r1, [r7, r1]
 80208c4:	bf54      	ite	pl
 80208c6:	f001 010f 	andpl.w	r1, r1, #15
 80208ca:	1109      	asrmi	r1, r1, #4
 80208cc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80208d0:	b2c9      	uxtb	r1, r1
 80208d2:	910b      	str	r1, [sp, #44]	; 0x2c
 80208d4:	e7b7      	b.n	8020846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80208d6:	bf00      	nop
 80208d8:	20013768 	.word	0x20013768
 80208dc:	fffff800 	.word	0xfffff800
 80208e0:	2b00      	cmp	r3, #0
 80208e2:	d0de      	beq.n	80208a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80208e4:	4a21      	ldr	r2, [pc, #132]	; (802096c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80208e6:	f8be c000 	ldrh.w	ip, [lr]
 80208ea:	6810      	ldr	r0, [r2, #0]
 80208ec:	fa1f fa83 	uxth.w	sl, r3
 80208f0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80208f4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80208f8:	43db      	mvns	r3, r3
 80208fa:	b2db      	uxtb	r3, r3
 80208fc:	fb12 f20a 	smulbb	r2, r2, sl
 8020900:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020904:	fb01 2103 	mla	r1, r1, r3, r2
 8020908:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 802090c:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020910:	b2c0      	uxtb	r0, r0
 8020912:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020916:	fa5f fc8c 	uxtb.w	ip, ip
 802091a:	fb10 f00a 	smulbb	r0, r0, sl
 802091e:	fb0c 0003 	mla	r0, ip, r3, r0
 8020922:	b289      	uxth	r1, r1
 8020924:	fb1b fb0a 	smulbb	fp, fp, sl
 8020928:	b280      	uxth	r0, r0
 802092a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802092e:	fb02 b203 	mla	r2, r2, r3, fp
 8020932:	1c4b      	adds	r3, r1, #1
 8020934:	f100 0b01 	add.w	fp, r0, #1
 8020938:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802093c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020940:	b292      	uxth	r2, r2
 8020942:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020946:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802094a:	ea4b 0101 	orr.w	r1, fp, r1
 802094e:	f102 0b01 	add.w	fp, r2, #1
 8020952:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020956:	0952      	lsrs	r2, r2, #5
 8020958:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802095c:	4311      	orrs	r1, r2
 802095e:	f8ae 1000 	strh.w	r1, [lr]
 8020962:	e79e      	b.n	80208a2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020964:	b013      	add	sp, #76	; 0x4c
 8020966:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802096a:	bf00      	nop
 802096c:	20013768 	.word	0x20013768

08020970 <CRC_Lock>:
 8020970:	b530      	push	{r4, r5, lr}
 8020972:	4a20      	ldr	r2, [pc, #128]	; (80209f4 <CRC_Lock+0x84>)
 8020974:	6813      	ldr	r3, [r2, #0]
 8020976:	f023 0301 	bic.w	r3, r3, #1
 802097a:	6013      	str	r3, [r2, #0]
 802097c:	4b1e      	ldr	r3, [pc, #120]	; (80209f8 <CRC_Lock+0x88>)
 802097e:	681a      	ldr	r2, [r3, #0]
 8020980:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8020984:	4022      	ands	r2, r4
 8020986:	f24c 2540 	movw	r5, #49728	; 0xc240
 802098a:	42aa      	cmp	r2, r5
 802098c:	d005      	beq.n	802099a <CRC_Lock+0x2a>
 802098e:	681b      	ldr	r3, [r3, #0]
 8020990:	f24c 2270 	movw	r2, #49776	; 0xc270
 8020994:	4023      	ands	r3, r4
 8020996:	4293      	cmp	r3, r2
 8020998:	d124      	bne.n	80209e4 <CRC_Lock+0x74>
 802099a:	4b18      	ldr	r3, [pc, #96]	; (80209fc <CRC_Lock+0x8c>)
 802099c:	681b      	ldr	r3, [r3, #0]
 802099e:	bb0b      	cbnz	r3, 80209e4 <CRC_Lock+0x74>
 80209a0:	4b17      	ldr	r3, [pc, #92]	; (8020a00 <CRC_Lock+0x90>)
 80209a2:	681a      	ldr	r2, [r3, #0]
 80209a4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80209a8:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 80209ac:	d00d      	beq.n	80209ca <CRC_Lock+0x5a>
 80209ae:	681a      	ldr	r2, [r3, #0]
 80209b0:	f240 4483 	movw	r4, #1155	; 0x483
 80209b4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80209b8:	42a2      	cmp	r2, r4
 80209ba:	d006      	beq.n	80209ca <CRC_Lock+0x5a>
 80209bc:	681b      	ldr	r3, [r3, #0]
 80209be:	f240 4285 	movw	r2, #1157	; 0x485
 80209c2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80209c6:	4293      	cmp	r3, r2
 80209c8:	d10c      	bne.n	80209e4 <CRC_Lock+0x74>
 80209ca:	4b0e      	ldr	r3, [pc, #56]	; (8020a04 <CRC_Lock+0x94>)
 80209cc:	2201      	movs	r2, #1
 80209ce:	601a      	str	r2, [r3, #0]
 80209d0:	681a      	ldr	r2, [r3, #0]
 80209d2:	2a00      	cmp	r2, #0
 80209d4:	d1fc      	bne.n	80209d0 <CRC_Lock+0x60>
 80209d6:	4b0c      	ldr	r3, [pc, #48]	; (8020a08 <CRC_Lock+0x98>)
 80209d8:	6018      	str	r0, [r3, #0]
 80209da:	6818      	ldr	r0, [r3, #0]
 80209dc:	1a43      	subs	r3, r0, r1
 80209de:	4258      	negs	r0, r3
 80209e0:	4158      	adcs	r0, r3
 80209e2:	bd30      	pop	{r4, r5, pc}
 80209e4:	4b09      	ldr	r3, [pc, #36]	; (8020a0c <CRC_Lock+0x9c>)
 80209e6:	2201      	movs	r2, #1
 80209e8:	601a      	str	r2, [r3, #0]
 80209ea:	681a      	ldr	r2, [r3, #0]
 80209ec:	2a00      	cmp	r2, #0
 80209ee:	d1fc      	bne.n	80209ea <CRC_Lock+0x7a>
 80209f0:	4b07      	ldr	r3, [pc, #28]	; (8020a10 <CRC_Lock+0xa0>)
 80209f2:	e7f1      	b.n	80209d8 <CRC_Lock+0x68>
 80209f4:	e0002000 	.word	0xe0002000
 80209f8:	e000ed00 	.word	0xe000ed00
 80209fc:	e0042000 	.word	0xe0042000
 8020a00:	5c001000 	.word	0x5c001000
 8020a04:	58024c08 	.word	0x58024c08
 8020a08:	58024c00 	.word	0x58024c00
 8020a0c:	40023008 	.word	0x40023008
 8020a10:	40023000 	.word	0x40023000

08020a14 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020a14:	6101      	str	r1, [r0, #16]
 8020a16:	4770      	bx	lr

08020a18 <_ZN8touchgfx8Gestures4tickEv>:
 8020a18:	7b83      	ldrb	r3, [r0, #14]
 8020a1a:	b14b      	cbz	r3, 8020a30 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8020a1c:	8903      	ldrh	r3, [r0, #8]
 8020a1e:	3301      	adds	r3, #1
 8020a20:	b29b      	uxth	r3, r3
 8020a22:	2b07      	cmp	r3, #7
 8020a24:	8103      	strh	r3, [r0, #8]
 8020a26:	bf81      	itttt	hi
 8020a28:	2300      	movhi	r3, #0
 8020a2a:	8143      	strhhi	r3, [r0, #10]
 8020a2c:	8183      	strhhi	r3, [r0, #12]
 8020a2e:	7383      	strbhi	r3, [r0, #14]
 8020a30:	4770      	bx	lr
	...

08020a34 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020a34:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020a38:	4698      	mov	r8, r3
 8020a3a:	8883      	ldrh	r3, [r0, #4]
 8020a3c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020a40:	eba8 0303 	sub.w	r3, r8, r3
 8020a44:	b21b      	sxth	r3, r3
 8020a46:	4604      	mov	r4, r0
 8020a48:	2b00      	cmp	r3, #0
 8020a4a:	4617      	mov	r7, r2
 8020a4c:	4a18      	ldr	r2, [pc, #96]	; (8020ab0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8020a4e:	9200      	str	r2, [sp, #0]
 8020a50:	bfb8      	it	lt
 8020a52:	425b      	neglt	r3, r3
 8020a54:	8aa2      	ldrh	r2, [r4, #20]
 8020a56:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 8020a5a:	f8ad 800a 	strh.w	r8, [sp, #10]
 8020a5e:	b21b      	sxth	r3, r3
 8020a60:	460e      	mov	r6, r1
 8020a62:	4293      	cmp	r3, r2
 8020a64:	88c1      	ldrh	r1, [r0, #6]
 8020a66:	f8ad 1008 	strh.w	r1, [sp, #8]
 8020a6a:	f04f 0000 	mov.w	r0, #0
 8020a6e:	f88d 0004 	strb.w	r0, [sp, #4]
 8020a72:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020a76:	dc07      	bgt.n	8020a88 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020a78:	1a69      	subs	r1, r5, r1
 8020a7a:	b209      	sxth	r1, r1
 8020a7c:	2900      	cmp	r1, #0
 8020a7e:	bfb8      	it	lt
 8020a80:	4249      	neglt	r1, r1
 8020a82:	b209      	sxth	r1, r1
 8020a84:	428a      	cmp	r2, r1
 8020a86:	da10      	bge.n	8020aaa <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020a88:	6920      	ldr	r0, [r4, #16]
 8020a8a:	6803      	ldr	r3, [r0, #0]
 8020a8c:	4669      	mov	r1, sp
 8020a8e:	685b      	ldr	r3, [r3, #4]
 8020a90:	4798      	blx	r3
 8020a92:	eba8 0606 	sub.w	r6, r8, r6
 8020a96:	2300      	movs	r3, #0
 8020a98:	1bef      	subs	r7, r5, r7
 8020a9a:	2001      	movs	r0, #1
 8020a9c:	8123      	strh	r3, [r4, #8]
 8020a9e:	8166      	strh	r6, [r4, #10]
 8020aa0:	81a7      	strh	r7, [r4, #12]
 8020aa2:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020aa6:	80e5      	strh	r5, [r4, #6]
 8020aa8:	73a0      	strb	r0, [r4, #14]
 8020aaa:	b004      	add	sp, #16
 8020aac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020ab0:	0802a5f4 	.word	0x0802a5f4

08020ab4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8020ab4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8020ab6:	461e      	mov	r6, r3
 8020ab8:	1e4b      	subs	r3, r1, #1
 8020aba:	2b01      	cmp	r3, #1
 8020abc:	b085      	sub	sp, #20
 8020abe:	4604      	mov	r4, r0
 8020ac0:	460d      	mov	r5, r1
 8020ac2:	4617      	mov	r7, r2
 8020ac4:	d84b      	bhi.n	8020b5e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8020ac6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8020aca:	1cd3      	adds	r3, r2, #3
 8020acc:	b29b      	uxth	r3, r3
 8020ace:	2b06      	cmp	r3, #6
 8020ad0:	d916      	bls.n	8020b00 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8020ad2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020b74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020ad6:	f8cd c004 	str.w	ip, [sp, #4]
 8020ada:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020ade:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020ae2:	6900      	ldr	r0, [r0, #16]
 8020ae4:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020ae8:	f04f 0c00 	mov.w	ip, #0
 8020aec:	f88d c008 	strb.w	ip, [sp, #8]
 8020af0:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020af4:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020af8:	6803      	ldr	r3, [r0, #0]
 8020afa:	a901      	add	r1, sp, #4
 8020afc:	689b      	ldr	r3, [r3, #8]
 8020afe:	4798      	blx	r3
 8020b00:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8020b04:	1cd3      	adds	r3, r2, #3
 8020b06:	b29b      	uxth	r3, r3
 8020b08:	2b06      	cmp	r3, #6
 8020b0a:	d916      	bls.n	8020b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020b0c:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020b74 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020b10:	f8cd c004 	str.w	ip, [sp, #4]
 8020b14:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020b18:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8020b1c:	6920      	ldr	r0, [r4, #16]
 8020b1e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020b22:	f04f 0c01 	mov.w	ip, #1
 8020b26:	f88d c008 	strb.w	ip, [sp, #8]
 8020b2a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8020b2e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020b32:	6803      	ldr	r3, [r0, #0]
 8020b34:	a901      	add	r1, sp, #4
 8020b36:	689b      	ldr	r3, [r3, #8]
 8020b38:	4798      	blx	r3
 8020b3a:	4b0d      	ldr	r3, [pc, #52]	; (8020b70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8020b3c:	9301      	str	r3, [sp, #4]
 8020b3e:	6920      	ldr	r0, [r4, #16]
 8020b40:	f88d 5008 	strb.w	r5, [sp, #8]
 8020b44:	2300      	movs	r3, #0
 8020b46:	f8ad 700a 	strh.w	r7, [sp, #10]
 8020b4a:	f8ad 600c 	strh.w	r6, [sp, #12]
 8020b4e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020b52:	6803      	ldr	r3, [r0, #0]
 8020b54:	a901      	add	r1, sp, #4
 8020b56:	681b      	ldr	r3, [r3, #0]
 8020b58:	4798      	blx	r3
 8020b5a:	b005      	add	sp, #20
 8020b5c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020b5e:	2900      	cmp	r1, #0
 8020b60:	d1eb      	bne.n	8020b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020b62:	80a2      	strh	r2, [r4, #4]
 8020b64:	80c6      	strh	r6, [r0, #6]
 8020b66:	60a1      	str	r1, [r4, #8]
 8020b68:	81a1      	strh	r1, [r4, #12]
 8020b6a:	73a1      	strb	r1, [r4, #14]
 8020b6c:	e7e5      	b.n	8020b3a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020b6e:	bf00      	nop
 8020b70:	0802a5e0 	.word	0x0802a5e0
 8020b74:	0802a608 	.word	0x0802a608

08020b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>:
 8020b78:	10c9      	asrs	r1, r1, #3
 8020b7a:	2900      	cmp	r1, #0
 8020b7c:	bfb8      	it	lt
 8020b7e:	4249      	neglt	r1, r1
 8020b80:	2801      	cmp	r0, #1
 8020b82:	d108      	bne.n	8020b96 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020b84:	f3c1 0008 	ubfx	r0, r1, #0, #9
 8020b88:	f5b0 7f80 	cmp.w	r0, #256	; 0x100
 8020b8c:	4601      	mov	r1, r0
 8020b8e:	dd02      	ble.n	8020b96 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5+0x1e>
 8020b90:	f5c0 7000 	rsb	r0, r0, #512	; 0x200
 8020b94:	4770      	bx	lr
 8020b96:	29ff      	cmp	r1, #255	; 0xff
 8020b98:	bfa8      	it	ge
 8020b9a:	21ff      	movge	r1, #255	; 0xff
 8020b9c:	4608      	mov	r0, r1
 8020b9e:	4770      	bx	lr

08020ba0 <_ZN8touchgfx10Rasterizer6lineToEii>:
 8020ba0:	b410      	push	{r4}
 8020ba2:	e9d0 3401 	ldrd	r3, r4, [r0, #4]
 8020ba6:	429c      	cmp	r4, r3
 8020ba8:	d803      	bhi.n	8020bb2 <_ZN8touchgfx10Rasterizer6lineToEii+0x12>
 8020baa:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020bae:	f7ef b81d 	b.w	800fbec <_ZN8touchgfx7Outline6lineToEii>
 8020bb2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020bb6:	4770      	bx	lr

08020bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>:
 8020bb8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020bbc:	b08b      	sub	sp, #44	; 0x2c
 8020bbe:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8020bc2:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8020bc6:	9308      	str	r3, [sp, #32]
 8020bc8:	4606      	mov	r6, r0
 8020bca:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8020bce:	9309      	str	r3, [sp, #36]	; 0x24
 8020bd0:	468a      	mov	sl, r1
 8020bd2:	f7ef f978 	bl	800fec6 <_ZN8touchgfx7Outline24closeOutlineAndSortCellsEv>
 8020bd6:	68b5      	ldr	r5, [r6, #8]
 8020bd8:	4604      	mov	r4, r0
 8020bda:	2d00      	cmp	r5, #0
 8020bdc:	d044      	beq.n	8020c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020bde:	6873      	ldr	r3, [r6, #4]
 8020be0:	42ab      	cmp	r3, r5
 8020be2:	d33d      	bcc.n	8020c60 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa8>
 8020be4:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 8020be8:	f9b6 2034 	ldrsh.w	r2, [r6, #52]	; 0x34
 8020bec:	eb02 0b03 	add.w	fp, r2, r3
 8020bf0:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8020bf4:	fb02 1203 	mla	r2, r2, r3, r1
 8020bf8:	9205      	str	r2, [sp, #20]
 8020bfa:	1e6a      	subs	r2, r5, #1
 8020bfc:	9204      	str	r2, [sp, #16]
 8020bfe:	f04f 0800 	mov.w	r8, #0
 8020c02:	f9b4 9002 	ldrsh.w	r9, [r4, #2]
 8020c06:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020c0a:	454b      	cmp	r3, r9
 8020c0c:	463a      	mov	r2, r7
 8020c0e:	d008      	beq.n	8020c22 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x6a>
 8020c10:	f9b6 3034 	ldrsh.w	r3, [r6, #52]	; 0x34
 8020c14:	eb03 0b09 	add.w	fp, r3, r9
 8020c18:	e9dd 1306 	ldrd	r1, r3, [sp, #24]
 8020c1c:	fb03 1309 	mla	r3, r3, r9, r1
 8020c20:	9305      	str	r3, [sp, #20]
 8020c22:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8020c26:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8020c2a:	4498      	add	r8, r3
 8020c2c:	9b04      	ldr	r3, [sp, #16]
 8020c2e:	3b01      	subs	r3, #1
 8020c30:	9304      	str	r3, [sp, #16]
 8020c32:	9b04      	ldr	r3, [sp, #16]
 8020c34:	3301      	adds	r3, #1
 8020c36:	d015      	beq.n	8020c64 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xac>
 8020c38:	f934 3f08 	ldrsh.w	r3, [r4, #8]!
 8020c3c:	42bb      	cmp	r3, r7
 8020c3e:	d117      	bne.n	8020c70 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb8>
 8020c40:	f9b4 0002 	ldrsh.w	r0, [r4, #2]
 8020c44:	9b04      	ldr	r3, [sp, #16]
 8020c46:	4548      	cmp	r0, r9
 8020c48:	f103 33ff 	add.w	r3, r3, #4294967295
 8020c4c:	d17f      	bne.n	8020d4e <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x196>
 8020c4e:	f9b4 0006 	ldrsh.w	r0, [r4, #6]
 8020c52:	4401      	add	r1, r0
 8020c54:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8020c58:	4480      	add	r8, r0
 8020c5a:	e7e9      	b.n	8020c30 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x78>
 8020c5c:	461f      	mov	r7, r3
 8020c5e:	e044      	b.n	8020cea <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x132>
 8020c60:	2000      	movs	r0, #0
 8020c62:	e002      	b.n	8020c6a <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb2>
 8020c64:	2900      	cmp	r1, #0
 8020c66:	d16f      	bne.n	8020d48 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x190>
 8020c68:	2001      	movs	r0, #1
 8020c6a:	b00b      	add	sp, #44	; 0x2c
 8020c6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020c70:	2900      	cmp	r1, #0
 8020c72:	d030      	beq.n	8020cd6 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x11e>
 8020c74:	2f00      	cmp	r7, #0
 8020c76:	db29      	blt.n	8020ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020c78:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8020c7c:	42bb      	cmp	r3, r7
 8020c7e:	dd25      	ble.n	8020ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020c80:	ebc1 1188 	rsb	r1, r1, r8, lsl #6
 8020c84:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020c88:	f7ff ff76 	bl	8020b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020c8c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c8e:	fb10 f003 	smulbb	r0, r0, r3
 8020c92:	b280      	uxth	r0, r0
 8020c94:	1c41      	adds	r1, r0, #1
 8020c96:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020c9a:	1209      	asrs	r1, r1, #8
 8020c9c:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020ca0:	d014      	beq.n	8020ccc <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x114>
 8020ca2:	9808      	ldr	r0, [sp, #32]
 8020ca4:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020ca6:	b2c9      	uxtb	r1, r1
 8020ca8:	b2ba      	uxth	r2, r7
 8020caa:	9102      	str	r1, [sp, #8]
 8020cac:	2101      	movs	r1, #1
 8020cae:	4413      	add	r3, r2
 8020cb0:	9101      	str	r1, [sp, #4]
 8020cb2:	4402      	add	r2, r0
 8020cb4:	fa0f f18b 	sxth.w	r1, fp
 8020cb8:	f8da 0000 	ldr.w	r0, [sl]
 8020cbc:	9100      	str	r1, [sp, #0]
 8020cbe:	6941      	ldr	r1, [r0, #20]
 8020cc0:	b21b      	sxth	r3, r3
 8020cc2:	460d      	mov	r5, r1
 8020cc4:	b212      	sxth	r2, r2
 8020cc6:	9905      	ldr	r1, [sp, #20]
 8020cc8:	4650      	mov	r0, sl
 8020cca:	47a8      	blx	r5
 8020ccc:	9b04      	ldr	r3, [sp, #16]
 8020cce:	3301      	adds	r3, #1
 8020cd0:	f107 0201 	add.w	r2, r7, #1
 8020cd4:	d0c8      	beq.n	8020c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020cd6:	f9b4 7000 	ldrsh.w	r7, [r4]
 8020cda:	1abb      	subs	r3, r7, r2
 8020cdc:	2b00      	cmp	r3, #0
 8020cde:	dd31      	ble.n	8020d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020ce0:	2a00      	cmp	r2, #0
 8020ce2:	dabb      	bge.n	8020c5c <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xa4>
 8020ce4:	2f00      	cmp	r7, #0
 8020ce6:	dd2d      	ble.n	8020d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020ce8:	2200      	movs	r2, #0
 8020cea:	f9b6 3036 	ldrsh.w	r3, [r6, #54]	; 0x36
 8020cee:	19d1      	adds	r1, r2, r7
 8020cf0:	4299      	cmp	r1, r3
 8020cf2:	db02      	blt.n	8020cfa <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x142>
 8020cf4:	1a9f      	subs	r7, r3, r2
 8020cf6:	2f00      	cmp	r7, #0
 8020cf8:	dd24      	ble.n	8020d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020cfa:	ea4f 1188 	mov.w	r1, r8, lsl #6
 8020cfe:	f896 0030 	ldrb.w	r0, [r6, #48]	; 0x30
 8020d02:	f7ff ff39 	bl	8020b78 <_ZNK8touchgfx10Rasterizer14calculateAlphaEi.isra.5>
 8020d06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020d08:	fb10 f003 	smulbb	r0, r0, r3
 8020d0c:	b280      	uxth	r0, r0
 8020d0e:	1c41      	adds	r1, r0, #1
 8020d10:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8020d14:	1209      	asrs	r1, r1, #8
 8020d16:	f011 0fff 	tst.w	r1, #255	; 0xff
 8020d1a:	d013      	beq.n	8020d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020d1c:	9808      	ldr	r0, [sp, #32]
 8020d1e:	8e73      	ldrh	r3, [r6, #50]	; 0x32
 8020d20:	b292      	uxth	r2, r2
 8020d22:	b2c9      	uxtb	r1, r1
 8020d24:	4413      	add	r3, r2
 8020d26:	9102      	str	r1, [sp, #8]
 8020d28:	4402      	add	r2, r0
 8020d2a:	b23f      	sxth	r7, r7
 8020d2c:	f8da 0000 	ldr.w	r0, [sl]
 8020d30:	9701      	str	r7, [sp, #4]
 8020d32:	fa0f f18b 	sxth.w	r1, fp
 8020d36:	9100      	str	r1, [sp, #0]
 8020d38:	6947      	ldr	r7, [r0, #20]
 8020d3a:	9905      	ldr	r1, [sp, #20]
 8020d3c:	b21b      	sxth	r3, r3
 8020d3e:	b212      	sxth	r2, r2
 8020d40:	4650      	mov	r0, sl
 8020d42:	47b8      	blx	r7
 8020d44:	464b      	mov	r3, r9
 8020d46:	e75c      	b.n	8020c02 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x4a>
 8020d48:	2f00      	cmp	r7, #0
 8020d4a:	da95      	bge.n	8020c78 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xc0>
 8020d4c:	e78c      	b.n	8020c68 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xb0>
 8020d4e:	2900      	cmp	r1, #0
 8020d50:	d0f8      	beq.n	8020d44 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0x18c>
 8020d52:	e78f      	b.n	8020c74 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh+0xbc>

08020d54 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE>:
 8020d54:	4b4b      	ldr	r3, [pc, #300]	; (8020e84 <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x130>)
 8020d56:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 8020d5a:	2500      	movs	r5, #0
 8020d5c:	f100 0620 	add.w	r6, r0, #32
 8020d60:	4604      	mov	r4, r0
 8020d62:	e9c0 3100 	strd	r3, r1, [r0]
 8020d66:	e9c0 5502 	strd	r5, r5, [r0, #8]
 8020d6a:	e9c0 5504 	strd	r5, r5, [r0, #16]
 8020d6e:	e9c0 5506 	strd	r5, r5, [r0, #24]
 8020d72:	f100 0718 	add.w	r7, r0, #24
 8020d76:	4630      	mov	r0, r6
 8020d78:	4690      	mov	r8, r2
 8020d7a:	f7ee fa6f 	bl	800f25c <_ZN8touchgfx7OutlineC1Ev>
 8020d7e:	e9c4 5517 	strd	r5, r5, [r4, #92]	; 0x5c
 8020d82:	e9c4 551a 	strd	r5, r5, [r4, #104]	; 0x68
 8020d86:	f884 5050 	strb.w	r5, [r4, #80]	; 0x50
 8020d8a:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 8020d8e:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 8020d92:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 8020d96:	f884 5058 	strb.w	r5, [r4, #88]	; 0x58
 8020d9a:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 8020d9e:	f8a4 5064 	strh.w	r5, [r4, #100]	; 0x64
 8020da2:	f9b8 2000 	ldrsh.w	r2, [r8]
 8020da6:	f8b8 0004 	ldrh.w	r0, [r8, #4]
 8020daa:	f8d4 c004 	ldr.w	ip, [r4, #4]
 8020dae:	9500      	str	r5, [sp, #0]
 8020db0:	4410      	add	r0, r2
 8020db2:	b280      	uxth	r0, r0
 8020db4:	fa0f fa80 	sxth.w	sl, r0
 8020db8:	45aa      	cmp	sl, r5
 8020dba:	f9bc 9008 	ldrsh.w	r9, [ip, #8]
 8020dbe:	f9bc e00a 	ldrsh.w	lr, [ip, #10]
 8020dc2:	dd5c      	ble.n	8020e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020dc4:	4591      	cmp	r9, r2
 8020dc6:	dd5a      	ble.n	8020e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020dc8:	f9b8 1002 	ldrsh.w	r1, [r8, #2]
 8020dcc:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8020dd0:	440b      	add	r3, r1
 8020dd2:	b29b      	uxth	r3, r3
 8020dd4:	b21d      	sxth	r5, r3
 8020dd6:	2d00      	cmp	r5, #0
 8020dd8:	dd51      	ble.n	8020e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020dda:	458e      	cmp	lr, r1
 8020ddc:	dd4f      	ble.n	8020e7e <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0x12a>
 8020dde:	45d1      	cmp	r9, sl
 8020de0:	bfb8      	it	lt
 8020de2:	fa1f f089 	uxthlt.w	r0, r9
 8020de6:	45ae      	cmp	lr, r5
 8020de8:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 8020dec:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8020df0:	bfb8      	it	lt
 8020df2:	fa1f f38e 	uxthlt.w	r3, lr
 8020df6:	1a80      	subs	r0, r0, r2
 8020df8:	1a5b      	subs	r3, r3, r1
 8020dfa:	f8ad 0004 	strh.w	r0, [sp, #4]
 8020dfe:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020e02:	f8ad 2000 	strh.w	r2, [sp]
 8020e06:	f8ad 1002 	strh.w	r1, [sp, #2]
 8020e0a:	466d      	mov	r5, sp
 8020e0c:	e895 0003 	ldmia.w	r5, {r0, r1}
 8020e10:	e887 0003 	stmia.w	r7, {r0, r1}
 8020e14:	f8dc 3000 	ldr.w	r3, [ip]
 8020e18:	4660      	mov	r0, ip
 8020e1a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020e1c:	4639      	mov	r1, r7
 8020e1e:	4798      	blx	r3
 8020e20:	6861      	ldr	r1, [r4, #4]
 8020e22:	4628      	mov	r0, r5
 8020e24:	3104      	adds	r1, #4
 8020e26:	f7f0 fc17 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8020e2a:	4638      	mov	r0, r7
 8020e2c:	f7f0 fbd0 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8020e30:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020e34:	f8bd 2000 	ldrh.w	r2, [sp]
 8020e38:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 8020e3c:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 8020e40:	4630      	mov	r0, r6
 8020e42:	f7ee f9ef 	bl	800f224 <_ZN8touchgfx7Outline5resetEv>
 8020e46:	f9bd 3000 	ldrsh.w	r3, [sp]
 8020e4a:	f9b4 201e 	ldrsh.w	r2, [r4, #30]
 8020e4e:	015b      	lsls	r3, r3, #5
 8020e50:	60a3      	str	r3, [r4, #8]
 8020e52:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 8020e56:	015b      	lsls	r3, r3, #5
 8020e58:	60e3      	str	r3, [r4, #12]
 8020e5a:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 8020e5e:	015b      	lsls	r3, r3, #5
 8020e60:	6123      	str	r3, [r4, #16]
 8020e62:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 8020e66:	015b      	lsls	r3, r3, #5
 8020e68:	6163      	str	r3, [r4, #20]
 8020e6a:	f9b4 301c 	ldrsh.w	r3, [r4, #28]
 8020e6e:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 8020e72:	4620      	mov	r0, r4
 8020e74:	e9c4 3212 	strd	r3, r2, [r4, #72]	; 0x48
 8020e78:	b002      	add	sp, #8
 8020e7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020e7e:	2300      	movs	r3, #0
 8020e80:	9301      	str	r3, [sp, #4]
 8020e82:	e7c2      	b.n	8020e0a <_ZN8touchgfx6CanvasC1EPKNS_12CanvasWidgetERKNS_4RectE+0xb6>
 8020e84:	0802a8d8 	.word	0x0802a8d8

08020e88 <_ZN8touchgfx6Canvas5closeEv>:
 8020e88:	b538      	push	{r3, r4, r5, lr}
 8020e8a:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8020e8e:	4604      	mov	r4, r0
 8020e90:	b193      	cbz	r3, 8020eb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020e92:	f890 3064 	ldrb.w	r3, [r0, #100]	; 0x64
 8020e96:	f890 2065 	ldrb.w	r2, [r0, #101]	; 0x65
 8020e9a:	4213      	tst	r3, r2
 8020e9c:	d10c      	bne.n	8020eb8 <_ZN8touchgfx6Canvas5closeEv+0x30>
 8020e9e:	f100 0520 	add.w	r5, r0, #32
 8020ea2:	b123      	cbz	r3, 8020eae <_ZN8touchgfx6Canvas5closeEv+0x26>
 8020ea4:	e9d0 1217 	ldrd	r1, r2, [r0, #92]	; 0x5c
 8020ea8:	4628      	mov	r0, r5
 8020eaa:	f7ff fe79 	bl	8020ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020eae:	e9d4 121a 	ldrd	r1, r2, [r4, #104]	; 0x68
 8020eb2:	4628      	mov	r0, r5
 8020eb4:	f7ff fe74 	bl	8020ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8020eb8:	2300      	movs	r3, #0
 8020eba:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 8020ebe:	e9d4 0309 	ldrd	r0, r3, [r4, #36]	; 0x24
 8020ec2:	4298      	cmp	r0, r3
 8020ec4:	bf34      	ite	cc
 8020ec6:	2000      	movcc	r0, #0
 8020ec8:	2001      	movcs	r0, #1
 8020eca:	bd38      	pop	{r3, r4, r5, pc}

08020ecc <_ZN8touchgfx6Canvas6renderEh>:
 8020ecc:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8020ed0:	4604      	mov	r4, r0
 8020ed2:	6840      	ldr	r0, [r0, #4]
 8020ed4:	6803      	ldr	r3, [r0, #0]
 8020ed6:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 8020ed8:	460d      	mov	r5, r1
 8020eda:	4798      	blx	r3
 8020edc:	fb10 f105 	smulbb	r1, r0, r5
 8020ee0:	b289      	uxth	r1, r1
 8020ee2:	1c4d      	adds	r5, r1, #1
 8020ee4:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8020ee8:	122d      	asrs	r5, r5, #8
 8020eea:	f000 8098 	beq.w	802101e <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020eee:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 8020ef2:	2b00      	cmp	r3, #0
 8020ef4:	f000 8093 	beq.w	802101e <_ZN8touchgfx6Canvas6renderEh+0x152>
 8020ef8:	4620      	mov	r0, r4
 8020efa:	f7ff ffc5 	bl	8020e88 <_ZN8touchgfx6Canvas5closeEv>
 8020efe:	4607      	mov	r7, r0
 8020f00:	2800      	cmp	r0, #0
 8020f02:	d043      	beq.n	8020f8c <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8020f04:	6863      	ldr	r3, [r4, #4]
 8020f06:	4e47      	ldr	r6, [pc, #284]	; (8021024 <_ZN8touchgfx6Canvas6renderEh+0x158>)
 8020f08:	6a98      	ldr	r0, [r3, #40]	; 0x28
 8020f0a:	6837      	ldr	r7, [r6, #0]
 8020f0c:	6803      	ldr	r3, [r0, #0]
 8020f0e:	689b      	ldr	r3, [r3, #8]
 8020f10:	4798      	blx	r3
 8020f12:	4601      	mov	r1, r0
 8020f14:	4638      	mov	r0, r7
 8020f16:	f7eb fe39 	bl	800cb8c <_ZN8touchgfx3HAL33lockFrameBufferForRenderingMethodENS0_15RenderingMethodE>
 8020f1a:	4607      	mov	r7, r0
 8020f1c:	f7eb fa12 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 8020f20:	6803      	ldr	r3, [r0, #0]
 8020f22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8020f24:	4798      	blx	r3
 8020f26:	4680      	mov	r8, r0
 8020f28:	f7eb fa0c 	bl	800c344 <_ZN8touchgfx3HAL3lcdEv>
 8020f2c:	6803      	ldr	r3, [r0, #0]
 8020f2e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f30:	4798      	blx	r3
 8020f32:	280b      	cmp	r0, #11
 8020f34:	d858      	bhi.n	8020fe8 <_ZN8touchgfx6Canvas6renderEh+0x11c>
 8020f36:	e8df f000 	tbb	[pc, r0]
 8020f3a:	594e      	.short	0x594e
 8020f3c:	2d570669 	.word	0x2d570669
 8020f40:	6262623d 	.word	0x6262623d
 8020f44:	6262      	.short	0x6262
 8020f46:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020f4a:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020f4e:	2208      	movs	r2, #8
 8020f50:	fb91 f2f2 	sdiv	r2, r1, r2
 8020f54:	fb08 2303 	mla	r3, r8, r3, r2
 8020f58:	441f      	add	r7, r3
 8020f5a:	424b      	negs	r3, r1
 8020f5c:	f003 0307 	and.w	r3, r3, #7
 8020f60:	f001 0107 	and.w	r1, r1, #7
 8020f64:	bf58      	it	pl
 8020f66:	4259      	negpl	r1, r3
 8020f68:	b2c9      	uxtb	r1, r1
 8020f6a:	b2ed      	uxtb	r5, r5
 8020f6c:	e9cd 1500 	strd	r1, r5, [sp]
 8020f70:	6860      	ldr	r0, [r4, #4]
 8020f72:	fa0f f388 	sxth.w	r3, r8
 8020f76:	463a      	mov	r2, r7
 8020f78:	6a81      	ldr	r1, [r0, #40]	; 0x28
 8020f7a:	f104 0020 	add.w	r0, r4, #32
 8020f7e:	f7ff fe1b 	bl	8020bb8 <_ZN8touchgfx10Rasterizer6renderEPKNS_15AbstractPainterEPhshh>
 8020f82:	4607      	mov	r7, r0
 8020f84:	6830      	ldr	r0, [r6, #0]
 8020f86:	6803      	ldr	r3, [r0, #0]
 8020f88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8020f8a:	4798      	blx	r3
 8020f8c:	4638      	mov	r0, r7
 8020f8e:	b002      	add	sp, #8
 8020f90:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020f94:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020f98:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020f9c:	2204      	movs	r2, #4
 8020f9e:	fb91 f2f2 	sdiv	r2, r1, r2
 8020fa2:	fb08 2303 	mla	r3, r8, r3, r2
 8020fa6:	441f      	add	r7, r3
 8020fa8:	424b      	negs	r3, r1
 8020faa:	f003 0303 	and.w	r3, r3, #3
 8020fae:	f001 0103 	and.w	r1, r1, #3
 8020fb2:	e7d7      	b.n	8020f64 <_ZN8touchgfx6Canvas6renderEh+0x98>
 8020fb4:	f9b4 1018 	ldrsh.w	r1, [r4, #24]
 8020fb8:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020fbc:	2900      	cmp	r1, #0
 8020fbe:	f04f 0202 	mov.w	r2, #2
 8020fc2:	fb91 f2f2 	sdiv	r2, r1, r2
 8020fc6:	f001 0101 	and.w	r1, r1, #1
 8020fca:	fb08 2303 	mla	r3, r8, r3, r2
 8020fce:	441f      	add	r7, r3
 8020fd0:	bfb8      	it	lt
 8020fd2:	4249      	neglt	r1, r1
 8020fd4:	e7c8      	b.n	8020f68 <_ZN8touchgfx6Canvas6renderEh+0x9c>
 8020fd6:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020fda:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8020fde:	fb08 f303 	mul.w	r3, r8, r3
 8020fe2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8020fe6:	441f      	add	r7, r3
 8020fe8:	2100      	movs	r1, #0
 8020fea:	e7be      	b.n	8020f6a <_ZN8touchgfx6Canvas6renderEh+0x9e>
 8020fec:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8020ff0:	fb08 f203 	mul.w	r2, r8, r3
 8020ff4:	8b23      	ldrh	r3, [r4, #24]
 8020ff6:	2103      	movs	r1, #3
 8020ff8:	fb13 2301 	smlabb	r3, r3, r1, r2
 8020ffc:	e7f3      	b.n	8020fe6 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 8020ffe:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021002:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8021006:	fb08 2303 	mla	r3, r8, r3, r2
 802100a:	e7ec      	b.n	8020fe6 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802100c:	f9b4 301a 	ldrsh.w	r3, [r4, #26]
 8021010:	f9b4 2018 	ldrsh.w	r2, [r4, #24]
 8021014:	fb08 f303 	mul.w	r3, r8, r3
 8021018:	eb03 0382 	add.w	r3, r3, r2, lsl #2
 802101c:	e7e3      	b.n	8020fe6 <_ZN8touchgfx6Canvas6renderEh+0x11a>
 802101e:	2701      	movs	r7, #1
 8021020:	e7b4      	b.n	8020f8c <_ZN8touchgfx6Canvas6renderEh+0xc0>
 8021022:	bf00      	nop
 8021024:	20013758 	.word	0x20013758

08021028 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>:
 8021028:	b510      	push	{r4, lr}
 802102a:	4b07      	ldr	r3, [pc, #28]	; (8021048 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x20>)
 802102c:	781b      	ldrb	r3, [r3, #0]
 802102e:	2b01      	cmp	r3, #1
 8021030:	d108      	bne.n	8021044 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_+0x1c>
 8021032:	6843      	ldr	r3, [r0, #4]
 8021034:	6814      	ldr	r4, [r2, #0]
 8021036:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 802103a:	680b      	ldr	r3, [r1, #0]
 802103c:	ebc3 1340 	rsb	r3, r3, r0, lsl #5
 8021040:	6013      	str	r3, [r2, #0]
 8021042:	600c      	str	r4, [r1, #0]
 8021044:	bd10      	pop	{r4, pc}
 8021046:	bf00      	nop
 8021048:	20013750 	.word	0x20013750

0802104c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_>:
 802104c:	b513      	push	{r0, r1, r4, lr}
 802104e:	f890 3058 	ldrb.w	r3, [r0, #88]	; 0x58
 8021052:	4604      	mov	r4, r0
 8021054:	e9cd 2100 	strd	r2, r1, [sp]
 8021058:	b9a3      	cbnz	r3, 8021084 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x38>
 802105a:	466a      	mov	r2, sp
 802105c:	a901      	add	r1, sp, #4
 802105e:	4620      	mov	r0, r4
 8021060:	f7ff ffe2 	bl	8021028 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 8021064:	68a3      	ldr	r3, [r4, #8]
 8021066:	9901      	ldr	r1, [sp, #4]
 8021068:	9a00      	ldr	r2, [sp, #0]
 802106a:	1ac9      	subs	r1, r1, r3
 802106c:	68e3      	ldr	r3, [r4, #12]
 802106e:	9101      	str	r1, [sp, #4]
 8021070:	1ad2      	subs	r2, r2, r3
 8021072:	2a00      	cmp	r2, #0
 8021074:	9200      	str	r2, [sp, #0]
 8021076:	da0b      	bge.n	8021090 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x44>
 8021078:	2301      	movs	r3, #1
 802107a:	2900      	cmp	r1, #0
 802107c:	da0e      	bge.n	802109c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x50>
 802107e:	f043 0304 	orr.w	r3, r3, #4
 8021082:	e013      	b.n	80210ac <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x60>
 8021084:	f7ff ff00 	bl	8020e88 <_ZN8touchgfx6Canvas5closeEv>
 8021088:	2800      	cmp	r0, #0
 802108a:	d1e6      	bne.n	802105a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0xe>
 802108c:	b002      	add	sp, #8
 802108e:	bd10      	pop	{r4, pc}
 8021090:	6963      	ldr	r3, [r4, #20]
 8021092:	429a      	cmp	r2, r3
 8021094:	bfac      	ite	ge
 8021096:	2302      	movge	r3, #2
 8021098:	2300      	movlt	r3, #0
 802109a:	e7ee      	b.n	802107a <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x2e>
 802109c:	6920      	ldr	r0, [r4, #16]
 802109e:	4281      	cmp	r1, r0
 80210a0:	bfac      	ite	ge
 80210a2:	2008      	movge	r0, #8
 80210a4:	2000      	movlt	r0, #0
 80210a6:	4318      	orrs	r0, r3
 80210a8:	b2c3      	uxtb	r3, r0
 80210aa:	b158      	cbz	r0, 80210c4 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x78>
 80210ac:	2200      	movs	r2, #0
 80210ae:	f884 2058 	strb.w	r2, [r4, #88]	; 0x58
 80210b2:	9901      	ldr	r1, [sp, #4]
 80210b4:	9a00      	ldr	r2, [sp, #0]
 80210b6:	66a1      	str	r1, [r4, #104]	; 0x68
 80210b8:	66e2      	str	r2, [r4, #108]	; 0x6c
 80210ba:	e9c4 1217 	strd	r1, r2, [r4, #92]	; 0x5c
 80210be:	f884 3064 	strb.w	r3, [r4, #100]	; 0x64
 80210c2:	e7e3      	b.n	802108c <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x40>
 80210c4:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 80210c8:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 80210cc:	4298      	cmp	r0, r3
 80210ce:	d803      	bhi.n	80210d8 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x8c>
 80210d0:	f104 0020 	add.w	r0, r4, #32
 80210d4:	f7ee fda4 	bl	800fc20 <_ZN8touchgfx7Outline6moveToEii>
 80210d8:	2301      	movs	r3, #1
 80210da:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 80210de:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 80210e2:	2300      	movs	r3, #0
 80210e4:	e7e5      	b.n	80210b2 <_ZN8touchgfx6Canvas6moveToENS_7CWRUtil2Q5ES2_+0x66>

080210e6 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_>:
 80210e6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80210e8:	ab02      	add	r3, sp, #8
 80210ea:	4604      	mov	r4, r0
 80210ec:	f843 2d08 	str.w	r2, [r3, #-8]!
 80210f0:	9101      	str	r1, [sp, #4]
 80210f2:	461a      	mov	r2, r3
 80210f4:	a901      	add	r1, sp, #4
 80210f6:	f7ff ff97 	bl	8021028 <_ZNK8touchgfx6Canvas29transformFrameBufferToDisplayERNS_7CWRUtil2Q5ES3_>
 80210fa:	68a3      	ldr	r3, [r4, #8]
 80210fc:	9901      	ldr	r1, [sp, #4]
 80210fe:	9a00      	ldr	r2, [sp, #0]
 8021100:	1ac9      	subs	r1, r1, r3
 8021102:	68e3      	ldr	r3, [r4, #12]
 8021104:	9101      	str	r1, [sp, #4]
 8021106:	1ad2      	subs	r2, r2, r3
 8021108:	2a00      	cmp	r2, #0
 802110a:	9200      	str	r2, [sp, #0]
 802110c:	db1c      	blt.n	8021148 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x62>
 802110e:	6963      	ldr	r3, [r4, #20]
 8021110:	429a      	cmp	r2, r3
 8021112:	bfac      	ite	ge
 8021114:	2002      	movge	r0, #2
 8021116:	2000      	movlt	r0, #0
 8021118:	2900      	cmp	r1, #0
 802111a:	db17      	blt.n	802114c <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x66>
 802111c:	6923      	ldr	r3, [r4, #16]
 802111e:	4299      	cmp	r1, r3
 8021120:	bfac      	ite	ge
 8021122:	2308      	movge	r3, #8
 8021124:	2300      	movlt	r3, #0
 8021126:	4303      	orrs	r3, r0
 8021128:	f894 0064 	ldrb.w	r0, [r4, #100]	; 0x64
 802112c:	b2dd      	uxtb	r5, r3
 802112e:	b978      	cbnz	r0, 8021150 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x6a>
 8021130:	f104 0020 	add.w	r0, r4, #32
 8021134:	f7ff fd34 	bl	8020ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021138:	9b01      	ldr	r3, [sp, #4]
 802113a:	65e3      	str	r3, [r4, #92]	; 0x5c
 802113c:	9b00      	ldr	r3, [sp, #0]
 802113e:	6623      	str	r3, [r4, #96]	; 0x60
 8021140:	f884 5064 	strb.w	r5, [r4, #100]	; 0x64
 8021144:	b002      	add	sp, #8
 8021146:	bd70      	pop	{r4, r5, r6, pc}
 8021148:	2001      	movs	r0, #1
 802114a:	e7e5      	b.n	8021118 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x32>
 802114c:	2304      	movs	r3, #4
 802114e:	e7ea      	b.n	8021126 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x40>
 8021150:	b113      	cbz	r3, 8021158 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x72>
 8021152:	ea10 0305 	ands.w	r3, r0, r5
 8021156:	d11c      	bne.n	8021192 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xac>
 8021158:	f894 3058 	ldrb.w	r3, [r4, #88]	; 0x58
 802115c:	f104 0620 	add.w	r6, r4, #32
 8021160:	e9d4 1217 	ldrd	r1, r2, [r4, #92]	; 0x5c
 8021164:	b98b      	cbnz	r3, 802118a <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0xa4>
 8021166:	f884 0065 	strb.w	r0, [r4, #101]	; 0x65
 802116a:	e9d4 3009 	ldrd	r3, r0, [r4, #36]	; 0x24
 802116e:	4298      	cmp	r0, r3
 8021170:	d802      	bhi.n	8021178 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x92>
 8021172:	4630      	mov	r0, r6
 8021174:	f7ee fd54 	bl	800fc20 <_ZN8touchgfx7Outline6moveToEii>
 8021178:	2301      	movs	r3, #1
 802117a:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 802117e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8021182:	e9dd 2100 	ldrd	r2, r1, [sp]
 8021186:	4630      	mov	r0, r6
 8021188:	e7d4      	b.n	8021134 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x4e>
 802118a:	4630      	mov	r0, r6
 802118c:	f7ff fd08 	bl	8020ba0 <_ZN8touchgfx10Rasterizer6lineToEii>
 8021190:	e7f7      	b.n	8021182 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x9c>
 8021192:	461d      	mov	r5, r3
 8021194:	e7d0      	b.n	8021138 <_ZN8touchgfx6Canvas6lineToENS_7CWRUtil2Q5ES2_+0x52>
	...

08021198 <_ZN8touchgfx6CanvasD1Ev>:
 8021198:	b510      	push	{r4, lr}
 802119a:	4b04      	ldr	r3, [pc, #16]	; (80211ac <_ZN8touchgfx6CanvasD1Ev+0x14>)
 802119c:	4604      	mov	r4, r0
 802119e:	f840 3b20 	str.w	r3, [r0], #32
 80211a2:	f7ee f837 	bl	800f214 <_ZN8touchgfx7OutlineD1Ev>
 80211a6:	4620      	mov	r0, r4
 80211a8:	bd10      	pop	{r4, pc}
 80211aa:	bf00      	nop
 80211ac:	0802a8d8 	.word	0x0802a8d8

080211b0 <_ZN8touchgfx6CanvasD0Ev>:
 80211b0:	b510      	push	{r4, lr}
 80211b2:	4604      	mov	r4, r0
 80211b4:	f7ff fff0 	bl	8021198 <_ZN8touchgfx6CanvasD1Ev>
 80211b8:	4620      	mov	r0, r4
 80211ba:	2170      	movs	r1, #112	; 0x70
 80211bc:	f000 feed 	bl	8021f9a <_ZdlPvj>
 80211c0:	4620      	mov	r0, r4
 80211c2:	bd10      	pop	{r4, pc}

080211c4 <_ZN8touchgfx13TextureMapper21setRenderingAlgorithmENS0_18RenderingAlgorithmE>:
 80211c4:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 80211c8:	4770      	bx	lr

080211ca <_ZNK8touchgfx13TextureMapper21getRenderingAlgorithmEv>:
 80211ca:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 80211ce:	4770      	bx	lr

080211d0 <_ZN8touchgfx13TextureMapper9setXAngleEf>:
 80211d0:	6802      	ldr	r2, [r0, #0]
 80211d2:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80211d6:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80211d8:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80211dc:	4710      	bx	r2

080211de <_ZN8touchgfx13TextureMapper9setYAngleEf>:
 80211de:	6802      	ldr	r2, [r0, #0]
 80211e0:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 80211e4:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80211e6:	eef0 0a40 	vmov.f32	s1, s0
 80211ea:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 80211ee:	4710      	bx	r2

080211f0 <_ZN8touchgfx13TextureMapper9setZAngleEf>:
 80211f0:	6802      	ldr	r2, [r0, #0]
 80211f2:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 80211f6:	6ed2      	ldr	r2, [r2, #108]	; 0x6c
 80211f8:	eeb0 1a40 	vmov.f32	s2, s0
 80211fc:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8021200:	4710      	bx	r2

08021202 <_ZN8touchgfx13TextureMapper12updateXAngleEf>:
 8021202:	6802      	ldr	r2, [r0, #0]
 8021204:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8021208:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802120a:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 802120e:	4710      	bx	r2

08021210 <_ZN8touchgfx13TextureMapper12updateYAngleEf>:
 8021210:	6802      	ldr	r2, [r0, #0]
 8021212:	ed90 1a0f 	vldr	s2, [r0, #60]	; 0x3c
 8021216:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 8021218:	eef0 0a40 	vmov.f32	s1, s0
 802121c:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8021220:	4710      	bx	r2

08021222 <_ZN8touchgfx13TextureMapper12updateZAngleEf>:
 8021222:	6802      	ldr	r2, [r0, #0]
 8021224:	edd0 0a0e 	vldr	s1, [r0, #56]	; 0x38
 8021228:	6fd2      	ldr	r2, [r2, #124]	; 0x7c
 802122a:	eeb0 1a40 	vmov.f32	s2, s0
 802122e:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8021232:	4710      	bx	r2

08021234 <_ZNK8touchgfx13TextureMapper9getXAngleEv>:
 8021234:	ed90 0a0d 	vldr	s0, [r0, #52]	; 0x34
 8021238:	4770      	bx	lr

0802123a <_ZNK8touchgfx13TextureMapper9getYAngleEv>:
 802123a:	ed90 0a0e 	vldr	s0, [r0, #56]	; 0x38
 802123e:	4770      	bx	lr

08021240 <_ZNK8touchgfx13TextureMapper9getZAngleEv>:
 8021240:	ed90 0a0f 	vldr	s0, [r0, #60]	; 0x3c
 8021244:	4770      	bx	lr

08021246 <_ZNK8touchgfx13TextureMapper8getScaleEv>:
 8021246:	ed90 0a10 	vldr	s0, [r0, #64]	; 0x40
 802124a:	4770      	bx	lr

0802124c <_ZNK8touchgfx13TextureMapper9getOrigoXEv>:
 802124c:	ed90 0a11 	vldr	s0, [r0, #68]	; 0x44
 8021250:	4770      	bx	lr

08021252 <_ZNK8touchgfx13TextureMapper9getOrigoYEv>:
 8021252:	ed90 0a12 	vldr	s0, [r0, #72]	; 0x48
 8021256:	4770      	bx	lr

08021258 <_ZNK8touchgfx13TextureMapper9getOrigoZEv>:
 8021258:	ed90 0a13 	vldr	s0, [r0, #76]	; 0x4c
 802125c:	4770      	bx	lr

0802125e <_ZNK8touchgfx13TextureMapper10getCameraXEv>:
 802125e:	ed90 0a14 	vldr	s0, [r0, #80]	; 0x50
 8021262:	4770      	bx	lr

08021264 <_ZNK8touchgfx13TextureMapper10getCameraYEv>:
 8021264:	ed90 0a15 	vldr	s0, [r0, #84]	; 0x54
 8021268:	4770      	bx	lr

0802126a <_ZNK8touchgfx13TextureMapper17getCameraDistanceEv>:
 802126a:	ed90 0a16 	vldr	s0, [r0, #88]	; 0x58
 802126e:	4770      	bx	lr

08021270 <_ZN8touchgfx13TextureMapper17setBitmapPositionEii>:
 8021270:	ee07 2a90 	vmov	s15, r2
 8021274:	6803      	ldr	r3, [r0, #0]
 8021276:	eef8 0ae7 	vcvt.f32.s32	s1, s15
 802127a:	ee07 1a90 	vmov	s15, r1
 802127e:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 8021282:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8021286:	4718      	bx	r3

08021288 <_ZNK8touchgfx13TextureMapper18getBitmapPositionXEv>:
 8021288:	ed90 0a0b 	vldr	s0, [r0, #44]	; 0x2c
 802128c:	4770      	bx	lr

0802128e <_ZNK8touchgfx13TextureMapper18getBitmapPositionYEv>:
 802128e:	ed90 0a0c 	vldr	s0, [r0, #48]	; 0x30
 8021292:	4770      	bx	lr

08021294 <_ZNK8touchgfx13TextureMapper5getX0Ev>:
 8021294:	ed90 0a17 	vldr	s0, [r0, #92]	; 0x5c
 8021298:	4770      	bx	lr

0802129a <_ZNK8touchgfx13TextureMapper5getX1Ev>:
 802129a:	ed90 0a1a 	vldr	s0, [r0, #104]	; 0x68
 802129e:	4770      	bx	lr

080212a0 <_ZNK8touchgfx13TextureMapper5getX2Ev>:
 80212a0:	ed90 0a1d 	vldr	s0, [r0, #116]	; 0x74
 80212a4:	4770      	bx	lr

080212a6 <_ZNK8touchgfx13TextureMapper5getX3Ev>:
 80212a6:	ed90 0a20 	vldr	s0, [r0, #128]	; 0x80
 80212aa:	4770      	bx	lr

080212ac <_ZNK8touchgfx13TextureMapper5getY0Ev>:
 80212ac:	ed90 0a18 	vldr	s0, [r0, #96]	; 0x60
 80212b0:	4770      	bx	lr

080212b2 <_ZNK8touchgfx13TextureMapper5getY1Ev>:
 80212b2:	ed90 0a1b 	vldr	s0, [r0, #108]	; 0x6c
 80212b6:	4770      	bx	lr

080212b8 <_ZNK8touchgfx13TextureMapper5getY2Ev>:
 80212b8:	ed90 0a1e 	vldr	s0, [r0, #120]	; 0x78
 80212bc:	4770      	bx	lr

080212be <_ZNK8touchgfx13TextureMapper5getY3Ev>:
 80212be:	ed90 0a21 	vldr	s0, [r0, #132]	; 0x84
 80212c2:	4770      	bx	lr

080212c4 <_ZNK8touchgfx13TextureMapper5getZ0Ev>:
 80212c4:	ed90 0a19 	vldr	s0, [r0, #100]	; 0x64
 80212c8:	4770      	bx	lr

080212ca <_ZNK8touchgfx13TextureMapper5getZ1Ev>:
 80212ca:	ed90 0a1c 	vldr	s0, [r0, #112]	; 0x70
 80212ce:	4770      	bx	lr

080212d0 <_ZNK8touchgfx13TextureMapper5getZ2Ev>:
 80212d0:	ed90 0a1f 	vldr	s0, [r0, #124]	; 0x7c
 80212d4:	4770      	bx	lr

080212d6 <_ZNK8touchgfx13TextureMapper5getZ3Ev>:
 80212d6:	ed90 0a22 	vldr	s0, [r0, #136]	; 0x88
 80212da:	4770      	bx	lr

080212dc <_ZN8touchgfx13TextureMapper12updateAnglesEfff>:
 80212dc:	b510      	push	{r4, lr}
 80212de:	ed2d 8b04 	vpush	{d8-d9}
 80212e2:	6803      	ldr	r3, [r0, #0]
 80212e4:	4604      	mov	r4, r0
 80212e6:	699b      	ldr	r3, [r3, #24]
 80212e8:	eeb0 8a40 	vmov.f32	s16, s0
 80212ec:	eef0 8a60 	vmov.f32	s17, s1
 80212f0:	eeb0 9a41 	vmov.f32	s18, s2
 80212f4:	4798      	blx	r3
 80212f6:	6823      	ldr	r3, [r4, #0]
 80212f8:	4620      	mov	r0, r4
 80212fa:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 80212fc:	eeb0 1a49 	vmov.f32	s2, s18
 8021300:	eef0 0a68 	vmov.f32	s1, s17
 8021304:	eeb0 0a48 	vmov.f32	s0, s16
 8021308:	4798      	blx	r3
 802130a:	ecbd 8b04 	vpop	{d8-d9}
 802130e:	6823      	ldr	r3, [r4, #0]
 8021310:	4620      	mov	r0, r4
 8021312:	699b      	ldr	r3, [r3, #24]
 8021314:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021318:	4718      	bx	r3

0802131a <_ZN8touchgfx13TextureMapper11updateScaleEf>:
 802131a:	b510      	push	{r4, lr}
 802131c:	ed2d 8b02 	vpush	{d8}
 8021320:	6803      	ldr	r3, [r0, #0]
 8021322:	4604      	mov	r4, r0
 8021324:	699b      	ldr	r3, [r3, #24]
 8021326:	eeb0 8a40 	vmov.f32	s16, s0
 802132a:	4798      	blx	r3
 802132c:	6823      	ldr	r3, [r4, #0]
 802132e:	4620      	mov	r0, r4
 8021330:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8021334:	eeb0 0a48 	vmov.f32	s0, s16
 8021338:	4798      	blx	r3
 802133a:	ecbd 8b02 	vpop	{d8}
 802133e:	6823      	ldr	r3, [r4, #0]
 8021340:	4620      	mov	r0, r4
 8021342:	699b      	ldr	r3, [r3, #24]
 8021344:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021348:	4718      	bx	r3

0802134a <_ZNK8touchgfx13TextureMapper12getSolidRectEv>:
 802134a:	2200      	movs	r2, #0
 802134c:	8002      	strh	r2, [r0, #0]
 802134e:	8042      	strh	r2, [r0, #2]
 8021350:	8082      	strh	r2, [r0, #4]
 8021352:	80c2      	strh	r2, [r0, #6]
 8021354:	4770      	bx	lr

08021356 <_ZN8touchgfx13TextureMapperD1Ev>:
 8021356:	4770      	bx	lr

08021358 <_ZN8touchgfx13TextureMapperD0Ev>:
 8021358:	b510      	push	{r4, lr}
 802135a:	2190      	movs	r1, #144	; 0x90
 802135c:	4604      	mov	r4, r0
 802135e:	f000 fe1c 	bl	8021f9a <_ZdlPvj>
 8021362:	4620      	mov	r0, r4
 8021364:	bd10      	pop	{r4, pc}
	...

08021368 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE>:
 8021368:	b538      	push	{r3, r4, r5, lr}
 802136a:	2500      	movs	r5, #0
 802136c:	e9c0 5505 	strd	r5, r5, [r0, #20]
 8021370:	2301      	movs	r3, #1
 8021372:	f880 3025 	strb.w	r3, [r0, #37]	; 0x25
 8021376:	4b1f      	ldr	r3, [pc, #124]	; (80213f4 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x8c>)
 8021378:	8085      	strh	r5, [r0, #4]
 802137a:	80c5      	strh	r5, [r0, #6]
 802137c:	8105      	strh	r5, [r0, #8]
 802137e:	8145      	strh	r5, [r0, #10]
 8021380:	8185      	strh	r5, [r0, #12]
 8021382:	81c5      	strh	r5, [r0, #14]
 8021384:	8205      	strh	r5, [r0, #16]
 8021386:	8245      	strh	r5, [r0, #18]
 8021388:	61c5      	str	r5, [r0, #28]
 802138a:	8405      	strh	r5, [r0, #32]
 802138c:	8445      	strh	r5, [r0, #34]	; 0x22
 802138e:	f880 5024 	strb.w	r5, [r0, #36]	; 0x24
 8021392:	6003      	str	r3, [r0, #0]
 8021394:	880b      	ldrh	r3, [r1, #0]
 8021396:	84c3      	strh	r3, [r0, #38]	; 0x26
 8021398:	23ff      	movs	r3, #255	; 0xff
 802139a:	4604      	mov	r4, r0
 802139c:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 80213a0:	f7ed fec5 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80213a4:	4b14      	ldr	r3, [pc, #80]	; (80213f8 <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x90>)
 80213a6:	6023      	str	r3, [r4, #0]
 80213a8:	2300      	movs	r3, #0
 80213aa:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80213ae:	4913      	ldr	r1, [pc, #76]	; (80213fc <_ZN8touchgfx13TextureMapperC1ERKNS_6BitmapE+0x94>)
 80213b0:	62e3      	str	r3, [r4, #44]	; 0x2c
 80213b2:	6323      	str	r3, [r4, #48]	; 0x30
 80213b4:	6363      	str	r3, [r4, #52]	; 0x34
 80213b6:	63a3      	str	r3, [r4, #56]	; 0x38
 80213b8:	63e3      	str	r3, [r4, #60]	; 0x3c
 80213ba:	6463      	str	r3, [r4, #68]	; 0x44
 80213bc:	64a3      	str	r3, [r4, #72]	; 0x48
 80213be:	6523      	str	r3, [r4, #80]	; 0x50
 80213c0:	6563      	str	r3, [r4, #84]	; 0x54
 80213c2:	65e3      	str	r3, [r4, #92]	; 0x5c
 80213c4:	6623      	str	r3, [r4, #96]	; 0x60
 80213c6:	66a3      	str	r3, [r4, #104]	; 0x68
 80213c8:	66e3      	str	r3, [r4, #108]	; 0x6c
 80213ca:	6763      	str	r3, [r4, #116]	; 0x74
 80213cc:	67a3      	str	r3, [r4, #120]	; 0x78
 80213ce:	f8c4 3080 	str.w	r3, [r4, #128]	; 0x80
 80213d2:	f8c4 3084 	str.w	r3, [r4, #132]	; 0x84
 80213d6:	230c      	movs	r3, #12
 80213d8:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 80213dc:	6422      	str	r2, [r4, #64]	; 0x40
 80213de:	64e1      	str	r1, [r4, #76]	; 0x4c
 80213e0:	65a1      	str	r1, [r4, #88]	; 0x58
 80213e2:	6662      	str	r2, [r4, #100]	; 0x64
 80213e4:	6722      	str	r2, [r4, #112]	; 0x70
 80213e6:	67e2      	str	r2, [r4, #124]	; 0x7c
 80213e8:	f8c4 2088 	str.w	r2, [r4, #136]	; 0x88
 80213ec:	f8a4 308c 	strh.w	r3, [r4, #140]	; 0x8c
 80213f0:	4620      	mov	r0, r4
 80213f2:	bd38      	pop	{r3, r4, r5, pc}
 80213f4:	0802a450 	.word	0x0802a450
 80213f8:	0802a8ec 	.word	0x0802a8ec
 80213fc:	447a0000 	.word	0x447a0000

08021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>:
 8021400:	b570      	push	{r4, r5, r6, lr}
 8021402:	ed2d 8b04 	vpush	{d8-d9}
 8021406:	f5ad 7d50 	sub.w	sp, sp, #832	; 0x340
 802140a:	add0      	add	r5, sp, #832	; 0x340
 802140c:	8cc3      	ldrh	r3, [r0, #38]	; 0x26
 802140e:	f825 3d40 	strh.w	r3, [r5, #-64]!
 8021412:	4604      	mov	r4, r0
 8021414:	4628      	mov	r0, r5
 8021416:	f7f3 fddb 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 802141a:	8ce3      	ldrh	r3, [r4, #38]	; 0x26
 802141c:	f8ad 3300 	strh.w	r3, [sp, #768]	; 0x300
 8021420:	4606      	mov	r6, r0
 8021422:	4628      	mov	r0, r5
 8021424:	f7f3 fe08 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021428:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 802142c:	ed94 6a0b 	vldr	s12, [r4, #44]	; 0x2c
 8021430:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8021432:	ed94 9a11 	vldr	s18, [r4, #68]	; 0x44
 8021436:	9312      	str	r3, [sp, #72]	; 0x48
 8021438:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 802143c:	1c72      	adds	r2, r6, #1
 802143e:	3001      	adds	r0, #1
 8021440:	ee76 5ac7 	vsub.f32	s11, s13, s14
 8021444:	ee07 2a90 	vmov	s15, r2
 8021448:	ee06 0a90 	vmov	s13, r0
 802144c:	ee36 6a47 	vsub.f32	s12, s12, s14
 8021450:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8021454:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8021458:	ee77 7a86 	vadd.f32	s15, s15, s12
 802145c:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8021460:	9316      	str	r3, [sp, #88]	; 0x58
 8021462:	931a      	str	r3, [sp, #104]	; 0x68
 8021464:	931e      	str	r3, [sp, #120]	; 0x78
 8021466:	2300      	movs	r3, #0
 8021468:	9320      	str	r3, [sp, #128]	; 0x80
 802146a:	9321      	str	r3, [sp, #132]	; 0x84
 802146c:	9322      	str	r3, [sp, #136]	; 0x88
 802146e:	9324      	str	r3, [sp, #144]	; 0x90
 8021470:	9325      	str	r3, [sp, #148]	; 0x94
 8021472:	9326      	str	r3, [sp, #152]	; 0x98
 8021474:	9328      	str	r3, [sp, #160]	; 0xa0
 8021476:	9329      	str	r3, [sp, #164]	; 0xa4
 8021478:	932a      	str	r3, [sp, #168]	; 0xa8
 802147a:	932c      	str	r3, [sp, #176]	; 0xb0
 802147c:	932d      	str	r3, [sp, #180]	; 0xb4
 802147e:	932e      	str	r3, [sp, #184]	; 0xb8
 8021480:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8021484:	edcd 5a11 	vstr	s11, [sp, #68]	; 0x44
 8021488:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 802148c:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8021490:	edcd 5a15 	vstr	s11, [sp, #84]	; 0x54
 8021494:	ed8d 7a17 	vstr	s14, [sp, #92]	; 0x5c
 8021498:	edcd 7a18 	vstr	s15, [sp, #96]	; 0x60
 802149c:	edcd 6a19 	vstr	s13, [sp, #100]	; 0x64
 80214a0:	ed8d 7a1b 	vstr	s14, [sp, #108]	; 0x6c
 80214a4:	ed8d 6a1c 	vstr	s12, [sp, #112]	; 0x70
 80214a8:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 80214ac:	ed8d 7a1f 	vstr	s14, [sp, #124]	; 0x7c
 80214b0:	a830      	add	r0, sp, #192	; 0xc0
 80214b2:	edd4 8a12 	vldr	s17, [r4, #72]	; 0x48
 80214b6:	ed94 8a13 	vldr	s16, [r4, #76]	; 0x4c
 80214ba:	f000 fc43 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80214be:	eeb1 0a49 	vneg.f32	s0, s18
 80214c2:	a830      	add	r0, sp, #192	; 0xc0
 80214c4:	f000 fd12 	bl	8021eec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 80214c8:	eeb1 0a68 	vneg.f32	s0, s17
 80214cc:	f000 fd1c 	bl	8021f08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80214d0:	eeb1 0a48 	vneg.f32	s0, s16
 80214d4:	f000 fd27 	bl	8021f26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 80214d8:	a840      	add	r0, sp, #256	; 0x100
 80214da:	f000 fc33 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80214de:	ed94 0a0d 	vldr	s0, [r4, #52]	; 0x34
 80214e2:	a840      	add	r0, sp, #256	; 0x100
 80214e4:	f000 fc86 	bl	8021df4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>
 80214e8:	ed94 0a0e 	vldr	s0, [r4, #56]	; 0x38
 80214ec:	f000 fcac 	bl	8021e48 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>
 80214f0:	ed94 0a0f 	vldr	s0, [r4, #60]	; 0x3c
 80214f4:	f000 fcd1 	bl	8021e9a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>
 80214f8:	a850      	add	r0, sp, #320	; 0x140
 80214fa:	f000 fc23 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 80214fe:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8021502:	a850      	add	r0, sp, #320	; 0x140
 8021504:	f000 fd1e 	bl	8021f44 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>
 8021508:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 802150c:	f000 fd26 	bl	8021f5c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>
 8021510:	ed94 0a10 	vldr	s0, [r4, #64]	; 0x40
 8021514:	f000 fd2f 	bl	8021f76 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>
 8021518:	a860      	add	r0, sp, #384	; 0x180
 802151a:	f000 fc13 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802151e:	eeb0 0a49 	vmov.f32	s0, s18
 8021522:	a860      	add	r0, sp, #384	; 0x180
 8021524:	f000 fce2 	bl	8021eec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8021528:	eeb0 0a68 	vmov.f32	s0, s17
 802152c:	f000 fcec 	bl	8021f08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8021530:	eeb0 0a48 	vmov.f32	s0, s16
 8021534:	f000 fcf7 	bl	8021f26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>
 8021538:	aa50      	add	r2, sp, #320	; 0x140
 802153a:	a960      	add	r1, sp, #384	; 0x180
 802153c:	a8b0      	add	r0, sp, #704	; 0x2c0
 802153e:	f000 fc1b 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8021542:	4628      	mov	r0, r5
 8021544:	aa40      	add	r2, sp, #256	; 0x100
 8021546:	a9b0      	add	r1, sp, #704	; 0x2c0
 8021548:	f000 fc16 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 802154c:	4629      	mov	r1, r5
 802154e:	aa30      	add	r2, sp, #192	; 0xc0
 8021550:	a870      	add	r0, sp, #448	; 0x1c0
 8021552:	f000 fc11 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 8021556:	a880      	add	r0, sp, #512	; 0x200
 8021558:	f000 fbf4 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802155c:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8021560:	a880      	add	r0, sp, #512	; 0x200
 8021562:	eeb1 0a40 	vneg.f32	s0, s0
 8021566:	f000 fcc1 	bl	8021eec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 802156a:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802156e:	a880      	add	r0, sp, #512	; 0x200
 8021570:	eeb1 0a40 	vneg.f32	s0, s0
 8021574:	f000 fcc8 	bl	8021f08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 8021578:	a890      	add	r0, sp, #576	; 0x240
 802157a:	f000 fbe3 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802157e:	ed94 0a16 	vldr	s0, [r4, #88]	; 0x58
 8021582:	a890      	add	r0, sp, #576	; 0x240
 8021584:	f000 fc26 	bl	8021dd4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>
 8021588:	a8a0      	add	r0, sp, #640	; 0x280
 802158a:	f000 fbdb 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 802158e:	ed94 0a14 	vldr	s0, [r4, #80]	; 0x50
 8021592:	a8a0      	add	r0, sp, #640	; 0x280
 8021594:	f000 fcaa 	bl	8021eec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>
 8021598:	ed94 0a15 	vldr	s0, [r4, #84]	; 0x54
 802159c:	f000 fcb4 	bl	8021f08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>
 80215a0:	aa90      	add	r2, sp, #576	; 0x240
 80215a2:	a9a0      	add	r1, sp, #640	; 0x280
 80215a4:	a8b0      	add	r0, sp, #704	; 0x2c0
 80215a6:	f000 fbe7 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80215aa:	4628      	mov	r0, r5
 80215ac:	aa80      	add	r2, sp, #512	; 0x200
 80215ae:	a9b0      	add	r1, sp, #704	; 0x2c0
 80215b0:	f000 fbe2 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80215b4:	4629      	mov	r1, r5
 80215b6:	aa70      	add	r2, sp, #448	; 0x1c0
 80215b8:	4668      	mov	r0, sp
 80215ba:	466d      	mov	r5, sp
 80215bc:	f000 fbdc 	bl	8021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>
 80215c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80215c2:	ae70      	add	r6, sp, #448	; 0x1c0
 80215c4:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80215c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80215c8:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80215ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80215cc:	c60f      	stmia	r6!, {r0, r1, r2, r3}
 80215ce:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80215d2:	e886 000f 	stmia.w	r6, {r0, r1, r2, r3}
 80215d6:	2500      	movs	r5, #0
 80215d8:	0129      	lsls	r1, r5, #4
 80215da:	ab20      	add	r3, sp, #128	; 0x80
 80215dc:	185e      	adds	r6, r3, r1
 80215de:	ab10      	add	r3, sp, #64	; 0x40
 80215e0:	4419      	add	r1, r3
 80215e2:	a870      	add	r0, sp, #448	; 0x1c0
 80215e4:	f000 fb7e 	bl	8021ce4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>
 80215e8:	3501      	adds	r5, #1
 80215ea:	2d04      	cmp	r5, #4
 80215ec:	ed86 0a00 	vstr	s0, [r6]
 80215f0:	edc6 0a01 	vstr	s1, [r6, #4]
 80215f4:	ed86 1a02 	vstr	s2, [r6, #8]
 80215f8:	edc6 1a03 	vstr	s3, [r6, #12]
 80215fc:	d1ec      	bne.n	80215d8 <_ZN8touchgfx13TextureMapper19applyTransformationEv+0x1d8>
 80215fe:	edd4 7a16 	vldr	s15, [r4, #88]	; 0x58
 8021602:	eddd 6a20 	vldr	s13, [sp, #128]	; 0x80
 8021606:	ed9d 7a22 	vldr	s14, [sp, #136]	; 0x88
 802160a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802160e:	ed84 7a19 	vstr	s14, [r4, #100]	; 0x64
 8021612:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8021616:	eddd 6a21 	vldr	s13, [sp, #132]	; 0x84
 802161a:	ed84 6a17 	vstr	s12, [r4, #92]	; 0x5c
 802161e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8021622:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8021626:	eddd 6a24 	vldr	s13, [sp, #144]	; 0x90
 802162a:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 802162e:	ed84 6a18 	vstr	s12, [r4, #96]	; 0x60
 8021632:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8021636:	ed84 7a1c 	vstr	s14, [r4, #112]	; 0x70
 802163a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802163e:	eddd 6a25 	vldr	s13, [sp, #148]	; 0x94
 8021642:	ed84 6a1a 	vstr	s12, [r4, #104]	; 0x68
 8021646:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802164a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802164e:	eddd 6a28 	vldr	s13, [sp, #160]	; 0xa0
 8021652:	ed9d 7a2a 	vldr	s14, [sp, #168]	; 0xa8
 8021656:	ed84 6a1b 	vstr	s12, [r4, #108]	; 0x6c
 802165a:	ee67 6aa6 	vmul.f32	s13, s15, s13
 802165e:	ed84 7a1f 	vstr	s14, [r4, #124]	; 0x7c
 8021662:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8021666:	eddd 6a29 	vldr	s13, [sp, #164]	; 0xa4
 802166a:	ed84 6a1d 	vstr	s12, [r4, #116]	; 0x74
 802166e:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8021672:	ee86 6a87 	vdiv.f32	s12, s13, s14
 8021676:	eddd 6a2c 	vldr	s13, [sp, #176]	; 0xb0
 802167a:	ed9d 7a2e 	vldr	s14, [sp, #184]	; 0xb8
 802167e:	ed84 6a1e 	vstr	s12, [r4, #120]	; 0x78
 8021682:	ee67 6aa6 	vmul.f32	s13, s15, s13
 8021686:	ed84 7a22 	vstr	s14, [r4, #136]	; 0x88
 802168a:	ee86 6a87 	vdiv.f32	s12, s13, s14
 802168e:	eddd 6a2d 	vldr	s13, [sp, #180]	; 0xb4
 8021692:	ed84 6a20 	vstr	s12, [r4, #128]	; 0x80
 8021696:	ee67 7aa6 	vmul.f32	s15, s15, s13
 802169a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 802169e:	edc4 6a21 	vstr	s13, [r4, #132]	; 0x84
 80216a2:	f50d 7d50 	add.w	sp, sp, #832	; 0x340
 80216a6:	ecbd 8b04 	vpop	{d8-d9}
 80216aa:	bd70      	pop	{r4, r5, r6, pc}

080216ac <_ZN8touchgfx13TextureMapper9setBitmapERKNS_6BitmapE>:
 80216ac:	b510      	push	{r4, lr}
 80216ae:	4604      	mov	r4, r0
 80216b0:	f7ed fd3d 	bl	800f12e <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 80216b4:	4620      	mov	r0, r4
 80216b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80216ba:	f7ff bea1 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080216be <_ZN8touchgfx13TextureMapper9setAnglesEfff>:
 80216be:	ed80 0a0d 	vstr	s0, [r0, #52]	; 0x34
 80216c2:	edc0 0a0e 	vstr	s1, [r0, #56]	; 0x38
 80216c6:	ed80 1a0f 	vstr	s2, [r0, #60]	; 0x3c
 80216ca:	f7ff be99 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080216ce <_ZN8touchgfx13TextureMapper8setScaleEf>:
 80216ce:	ed80 0a10 	vstr	s0, [r0, #64]	; 0x40
 80216d2:	f7ff be95 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080216d6 <_ZN8touchgfx13TextureMapper17setBitmapPositionEff>:
 80216d6:	ed80 0a0b 	vstr	s0, [r0, #44]	; 0x2c
 80216da:	edc0 0a0c 	vstr	s1, [r0, #48]	; 0x30
 80216de:	f7ff be8f 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080216e2 <_ZN8touchgfx13TextureMapper17setCameraDistanceEf>:
 80216e2:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80216e6:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80216ea:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80216ee:	bfd8      	it	le
 80216f0:	eeb0 0a67 	vmovle.f32	s0, s15
 80216f4:	ed80 0a16 	vstr	s0, [r0, #88]	; 0x58
 80216f8:	f7ff be82 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

080216fc <_ZN8touchgfx13TextureMapper9setCameraEff>:
 80216fc:	ed80 0a14 	vstr	s0, [r0, #80]	; 0x50
 8021700:	edc0 0a15 	vstr	s1, [r0, #84]	; 0x54
 8021704:	f7ff be7c 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08021708 <_ZN8touchgfx13TextureMapper8setOrigoEff>:
 8021708:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 802170c:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 8021710:	f7ff be76 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08021714 <_ZN8touchgfx13TextureMapper8setOrigoEfff>:
 8021714:	ed80 0a11 	vstr	s0, [r0, #68]	; 0x44
 8021718:	edc0 0a12 	vstr	s1, [r0, #72]	; 0x48
 802171c:	ed80 1a13 	vstr	s2, [r0, #76]	; 0x4c
 8021720:	f7ff be6e 	b.w	8021400 <_ZN8touchgfx13TextureMapper19applyTransformationEv>

08021724 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>:
 8021724:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021728:	ed2d 8b04 	vpush	{d8-d9}
 802172c:	edd1 9a1a 	vldr	s19, [r1, #104]	; 0x68
 8021730:	ed91 8a17 	vldr	s16, [r1, #92]	; 0x5c
 8021734:	ed91 9a1d 	vldr	s18, [r1, #116]	; 0x74
 8021738:	edd1 8a20 	vldr	s17, [r1, #128]	; 0x80
 802173c:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8021740:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021744:	bf54      	ite	pl
 8021746:	eeb0 0a69 	vmovpl.f32	s0, s19
 802174a:	eeb0 0a48 	vmovmi.f32	s0, s16
 802174e:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8021752:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021756:	bfd8      	it	le
 8021758:	eeb0 0a49 	vmovle.f32	s0, s18
 802175c:	eef4 8ac0 	vcmpe.f32	s17, s0
 8021760:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021764:	bfd8      	it	le
 8021766:	eeb0 0a68 	vmovle.f32	s0, s17
 802176a:	460c      	mov	r4, r1
 802176c:	4607      	mov	r7, r0
 802176e:	f000 fcc3 	bl	80220f8 <floorf>
 8021772:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021776:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802177a:	bf58      	it	pl
 802177c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8021780:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8021784:	bf56      	itet	pl
 8021786:	ee10 3a10 	vmovpl	r3, s0
 802178a:	2600      	movmi	r6, #0
 802178c:	b21e      	sxthpl	r6, r3
 802178e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021792:	bfd8      	it	le
 8021794:	eeb0 8a69 	vmovle.f32	s16, s19
 8021798:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802179c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217a0:	bf58      	it	pl
 80217a2:	eeb0 8a49 	vmovpl.f32	s16, s18
 80217a6:	eef4 8ac8 	vcmpe.f32	s17, s16
 80217aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217ae:	bf54      	ite	pl
 80217b0:	eeb0 0a68 	vmovpl.f32	s0, s17
 80217b4:	eeb0 0a48 	vmovmi.f32	s0, s16
 80217b8:	f000 fc18 	bl	8021fec <ceilf>
 80217bc:	f9b4 8008 	ldrsh.w	r8, [r4, #8]
 80217c0:	edd4 9a1b 	vldr	s19, [r4, #108]	; 0x6c
 80217c4:	ed94 8a18 	vldr	s16, [r4, #96]	; 0x60
 80217c8:	ed94 9a1e 	vldr	s18, [r4, #120]	; 0x78
 80217cc:	edd4 8a21 	vldr	s17, [r4, #132]	; 0x84
 80217d0:	ee07 8a90 	vmov	s15, r8
 80217d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80217d8:	eeb4 0ae7 	vcmpe.f32	s0, s15
 80217dc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217e0:	bfd8      	it	le
 80217e2:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 80217e6:	eeb4 8ae9 	vcmpe.f32	s16, s19
 80217ea:	bfdc      	itt	le
 80217ec:	ee10 3a10 	vmovle	r3, s0
 80217f0:	fa0f f883 	sxthle.w	r8, r3
 80217f4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80217f8:	bf54      	ite	pl
 80217fa:	eeb0 0a69 	vmovpl.f32	s0, s19
 80217fe:	eeb0 0a48 	vmovmi.f32	s0, s16
 8021802:	eeb4 9ac0 	vcmpe.f32	s18, s0
 8021806:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802180a:	bfd8      	it	le
 802180c:	eeb0 0a49 	vmovle.f32	s0, s18
 8021810:	eef4 8ac0 	vcmpe.f32	s17, s0
 8021814:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021818:	bfd8      	it	le
 802181a:	eeb0 0a68 	vmovle.f32	s0, s17
 802181e:	f000 fc6b 	bl	80220f8 <floorf>
 8021822:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8021826:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802182a:	bf58      	it	pl
 802182c:	eebd 0ac0 	vcvtpl.s32.f32	s0, s0
 8021830:	eeb4 8ae9 	vcmpe.f32	s16, s19
 8021834:	bf56      	itet	pl
 8021836:	ee10 3a10 	vmovpl	r3, s0
 802183a:	2500      	movmi	r5, #0
 802183c:	b21d      	sxthpl	r5, r3
 802183e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021842:	bfd8      	it	le
 8021844:	eeb0 8a69 	vmovle.f32	s16, s19
 8021848:	eeb4 9ac8 	vcmpe.f32	s18, s16
 802184c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021850:	bf58      	it	pl
 8021852:	eeb0 8a49 	vmovpl.f32	s16, s18
 8021856:	eef4 8ac8 	vcmpe.f32	s17, s16
 802185a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802185e:	bf54      	ite	pl
 8021860:	eeb0 0a68 	vmovpl.f32	s0, s17
 8021864:	eeb0 0a48 	vmovmi.f32	s0, s16
 8021868:	f000 fbc0 	bl	8021fec <ceilf>
 802186c:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8021870:	803e      	strh	r6, [r7, #0]
 8021872:	ee07 3a90 	vmov	s15, r3
 8021876:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802187a:	807d      	strh	r5, [r7, #2]
 802187c:	eeb4 0ae7 	vcmpe.f32	s0, s15
 8021880:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021884:	bfd8      	it	le
 8021886:	eebd 0ac0 	vcvtle.s32.f32	s0, s0
 802188a:	eba8 0606 	sub.w	r6, r8, r6
 802188e:	bfdc      	itt	le
 8021890:	ee10 3a10 	vmovle	r3, s0
 8021894:	b21b      	sxthle	r3, r3
 8021896:	1b5d      	subs	r5, r3, r5
 8021898:	80be      	strh	r6, [r7, #4]
 802189a:	80fd      	strh	r5, [r7, #6]
 802189c:	ecbd 8b04 	vpop	{d8-d9}
 80218a0:	4638      	mov	r0, r7
 80218a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080218a6 <_ZNK8touchgfx13TextureMapper17invalidateContentEv>:
 80218a6:	b513      	push	{r0, r1, r4, lr}
 80218a8:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 80218ac:	4604      	mov	r4, r0
 80218ae:	b143      	cbz	r3, 80218c2 <_ZNK8touchgfx13TextureMapper17invalidateContentEv+0x1c>
 80218b0:	4601      	mov	r1, r0
 80218b2:	4668      	mov	r0, sp
 80218b4:	f7ff ff36 	bl	8021724 <_ZNK8touchgfx13TextureMapper15getBoundingRectEv>
 80218b8:	6823      	ldr	r3, [r4, #0]
 80218ba:	4669      	mov	r1, sp
 80218bc:	691b      	ldr	r3, [r3, #16]
 80218be:	4620      	mov	r0, r4
 80218c0:	4798      	blx	r3
 80218c2:	b002      	add	sp, #8
 80218c4:	bd10      	pop	{r4, pc}

080218c6 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>:
 80218c6:	4603      	mov	r3, r0
 80218c8:	3026      	adds	r0, #38	; 0x26
 80218ca:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 80218ce:	b90b      	cbnz	r3, 80218d4 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv+0xe>
 80218d0:	f7f1 ba10 	b.w	8012cf4 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 80218d4:	f7f1 ba1e 	b.w	8012d14 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>

080218d8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 80218d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80218dc:	ed2d 8b04 	vpush	{d8-d9}
 80218e0:	4604      	mov	r4, r0
 80218e2:	469b      	mov	fp, r3
 80218e4:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 80218e8:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 80218ec:	f9b1 6000 	ldrsh.w	r6, [r1]
 80218f0:	8888      	ldrh	r0, [r1, #4]
 80218f2:	b0b3      	sub	sp, #204	; 0xcc
 80218f4:	4430      	add	r0, r6
 80218f6:	b280      	uxth	r0, r0
 80218f8:	9206      	str	r2, [sp, #24]
 80218fa:	fa0f fe80 	sxth.w	lr, r0
 80218fe:	2200      	movs	r2, #0
 8021900:	4596      	cmp	lr, r2
 8021902:	f8dd a100 	ldr.w	sl, [sp, #256]	; 0x100
 8021906:	f8dd 9104 	ldr.w	r9, [sp, #260]	; 0x104
 802190a:	f8dd 8108 	ldr.w	r8, [sp, #264]	; 0x108
 802190e:	9f43      	ldr	r7, [sp, #268]	; 0x10c
 8021910:	9211      	str	r2, [sp, #68]	; 0x44
 8021912:	f340 8129 	ble.w	8021b68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8021916:	45b4      	cmp	ip, r6
 8021918:	f340 8126 	ble.w	8021b68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802191c:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8021920:	88ca      	ldrh	r2, [r1, #6]
 8021922:	442a      	add	r2, r5
 8021924:	b292      	uxth	r2, r2
 8021926:	b211      	sxth	r1, r2
 8021928:	2900      	cmp	r1, #0
 802192a:	f340 811d 	ble.w	8021b68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 802192e:	42ab      	cmp	r3, r5
 8021930:	f340 811a 	ble.w	8021b68 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x290>
 8021934:	45f4      	cmp	ip, lr
 8021936:	bfb8      	it	lt
 8021938:	fa1f f08c 	uxthlt.w	r0, ip
 802193c:	428b      	cmp	r3, r1
 802193e:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8021942:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8021946:	bfb8      	it	lt
 8021948:	b29a      	uxthlt	r2, r3
 802194a:	1b80      	subs	r0, r0, r6
 802194c:	1b52      	subs	r2, r2, r5
 802194e:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 8021952:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 8021956:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 802195a:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 802195e:	ab11      	add	r3, sp, #68	; 0x44
 8021960:	e893 0003 	ldmia.w	r3, {r0, r1}
 8021964:	6822      	ldr	r2, [r4, #0]
 8021966:	9307      	str	r3, [sp, #28]
 8021968:	ad13      	add	r5, sp, #76	; 0x4c
 802196a:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 802196c:	e885 0003 	stmia.w	r5, {r0, r1}
 8021970:	4629      	mov	r1, r5
 8021972:	4620      	mov	r0, r4
 8021974:	4790      	blx	r2
 8021976:	4621      	mov	r1, r4
 8021978:	a815      	add	r0, sp, #84	; 0x54
 802197a:	f7f1 f917 	bl	8012bac <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 802197e:	a815      	add	r0, sp, #84	; 0x54
 8021980:	f7ef fe26 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8021984:	9b07      	ldr	r3, [sp, #28]
 8021986:	1d26      	adds	r6, r4, #4
 8021988:	4618      	mov	r0, r3
 802198a:	4631      	mov	r1, r6
 802198c:	f7ef fe64 	bl	8011658 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8021990:	4628      	mov	r0, r5
 8021992:	f104 0526 	add.w	r5, r4, #38	; 0x26
 8021996:	f7ef fe1b 	bl	80115d0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802199a:	4628      	mov	r0, r5
 802199c:	f7f3 fc04 	bl	80151a8 <_ZNK8touchgfx6Bitmap7getDataEv>
 80219a0:	9007      	str	r0, [sp, #28]
 80219a2:	2800      	cmp	r0, #0
 80219a4:	f000 80db 	beq.w	8021b5e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x286>
 80219a8:	f8db 2000 	ldr.w	r2, [fp]
 80219ac:	9209      	str	r2, [sp, #36]	; 0x24
 80219ae:	f8db 2004 	ldr.w	r2, [fp, #4]
 80219b2:	920a      	str	r2, [sp, #40]	; 0x28
 80219b4:	f8db 2008 	ldr.w	r2, [fp, #8]
 80219b8:	920b      	str	r2, [sp, #44]	; 0x2c
 80219ba:	f8db 200c 	ldr.w	r2, [fp, #12]
 80219be:	920c      	str	r2, [sp, #48]	; 0x30
 80219c0:	f8da 2000 	ldr.w	r2, [sl]
 80219c4:	920d      	str	r2, [sp, #52]	; 0x34
 80219c6:	f8da 2004 	ldr.w	r2, [sl, #4]
 80219ca:	920e      	str	r2, [sp, #56]	; 0x38
 80219cc:	f8da 2008 	ldr.w	r2, [sl, #8]
 80219d0:	920f      	str	r2, [sp, #60]	; 0x3c
 80219d2:	f8da 200c 	ldr.w	r2, [sl, #12]
 80219d6:	9210      	str	r2, [sp, #64]	; 0x40
 80219d8:	a90d      	add	r1, sp, #52	; 0x34
 80219da:	4632      	mov	r2, r6
 80219dc:	a809      	add	r0, sp, #36	; 0x24
 80219de:	f7ef fe1f 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80219e2:	4632      	mov	r2, r6
 80219e4:	a90e      	add	r1, sp, #56	; 0x38
 80219e6:	a80a      	add	r0, sp, #40	; 0x28
 80219e8:	f7ef fe1a 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80219ec:	4632      	mov	r2, r6
 80219ee:	a90f      	add	r1, sp, #60	; 0x3c
 80219f0:	a80b      	add	r0, sp, #44	; 0x2c
 80219f2:	f7ef fe15 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 80219f6:	4632      	mov	r2, r6
 80219f8:	a910      	add	r1, sp, #64	; 0x40
 80219fa:	a80c      	add	r0, sp, #48	; 0x30
 80219fc:	f7ef fe10 	bl	8011620 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 8021a00:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 8021a04:	edd7 4a00 	vldr	s9, [r7]
 8021a08:	edd7 5a01 	vldr	s11, [r7, #4]
 8021a0c:	ed98 4a00 	vldr	s8, [r8]
 8021a10:	ed98 5a01 	vldr	s10, [r8, #4]
 8021a14:	ed99 9a00 	vldr	s18, [r9]
 8021a18:	ed99 8a01 	vldr	s16, [r9, #4]
 8021a1c:	edd9 8a02 	vldr	s17, [r9, #8]
 8021a20:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 8021a24:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 8021a28:	ed8d 4a21 	vstr	s8, [sp, #132]	; 0x84
 8021a2c:	eef0 6a67 	vmov.f32	s13, s15
 8021a30:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 8021a34:	edcd 4a22 	vstr	s9, [sp, #136]	; 0x88
 8021a38:	eeb0 7a67 	vmov.f32	s14, s15
 8021a3c:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 8021a40:	ed8d 5a26 	vstr	s10, [sp, #152]	; 0x98
 8021a44:	eeb0 6a67 	vmov.f32	s12, s15
 8021a48:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8021a4c:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 8021a50:	edcd 5a27 	vstr	s11, [sp, #156]	; 0x9c
 8021a54:	ee16 6a10 	vmov	r6, s12
 8021a58:	eeb0 6a67 	vmov.f32	s12, s15
 8021a5c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8021a60:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 8021a64:	f8d7 a008 	ldr.w	sl, [r7, #8]
 8021a68:	f8d8 b008 	ldr.w	fp, [r8, #8]
 8021a6c:	68ff      	ldr	r7, [r7, #12]
 8021a6e:	9624      	str	r6, [sp, #144]	; 0x90
 8021a70:	ee16 0a10 	vmov	r0, s12
 8021a74:	eeb0 6a67 	vmov.f32	s12, s15
 8021a78:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8021a7c:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 8021a80:	ed8d 9a20 	vstr	s18, [sp, #128]	; 0x80
 8021a84:	ee16 1a10 	vmov	r1, s12
 8021a88:	eeb0 6a67 	vmov.f32	s12, s15
 8021a8c:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8021a90:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 8021a94:	ee16 2a10 	vmov	r2, s12
 8021a98:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 8021a9c:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 8021aa0:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 8021aa4:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 8021aa8:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 8021aac:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 8021ab0:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 8021ab4:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 8021ab8:	ed8d 8a25 	vstr	s16, [sp, #148]	; 0x94
 8021abc:	edcd 8a2a 	vstr	s17, [sp, #168]	; 0xa8
 8021ac0:	922d      	str	r2, [sp, #180]	; 0xb4
 8021ac2:	4a2b      	ldr	r2, [pc, #172]	; (8021b70 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x298>)
 8021ac4:	9b06      	ldr	r3, [sp, #24]
 8021ac6:	8812      	ldrh	r2, [r2, #0]
 8021ac8:	9317      	str	r3, [sp, #92]	; 0x5c
 8021aca:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 8021ace:	9b07      	ldr	r3, [sp, #28]
 8021ad0:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 8021ad4:	4628      	mov	r0, r5
 8021ad6:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 8021ada:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 8021ade:	9218      	str	r2, [sp, #96]	; 0x60
 8021ae0:	9319      	str	r3, [sp, #100]	; 0x64
 8021ae2:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 8021ae6:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 8021aea:	9731      	str	r7, [sp, #196]	; 0xc4
 8021aec:	f7f3 fb8c 	bl	8015208 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8021af0:	901a      	str	r0, [sp, #104]	; 0x68
 8021af2:	4628      	mov	r0, r5
 8021af4:	f7f3 fa6c 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021af8:	901b      	str	r0, [sp, #108]	; 0x6c
 8021afa:	4628      	mov	r0, r5
 8021afc:	f7f3 fa9c 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021b00:	901c      	str	r0, [sp, #112]	; 0x70
 8021b02:	4628      	mov	r0, r5
 8021b04:	f7f3 fa64 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021b08:	eeb4 9a48 	vcmp.f32	s18, s16
 8021b0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b10:	901d      	str	r0, [sp, #116]	; 0x74
 8021b12:	f8b4 608c 	ldrh.w	r6, [r4, #140]	; 0x8c
 8021b16:	d107      	bne.n	8021b28 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x250>
 8021b18:	eeb4 8a68 	vcmp.f32	s16, s17
 8021b1c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021b20:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8021b24:	bf08      	it	eq
 8021b26:	461e      	moveq	r6, r3
 8021b28:	4b12      	ldr	r3, [pc, #72]	; (8021b74 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x29c>)
 8021b2a:	681b      	ldr	r3, [r3, #0]
 8021b2c:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8021b30:	b10a      	cbz	r2, 8021b36 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x25e>
 8021b32:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 8021b34:	b905      	cbnz	r5, 8021b38 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x260>
 8021b36:	689d      	ldr	r5, [r3, #8]
 8021b38:	682b      	ldr	r3, [r5, #0]
 8021b3a:	4620      	mov	r0, r4
 8021b3c:	6c1f      	ldr	r7, [r3, #64]	; 0x40
 8021b3e:	f7ff fec2 	bl	80218c6 <_ZNK8touchgfx13TextureMapper19lookupRenderVariantEv>
 8021b42:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8021b46:	9604      	str	r6, [sp, #16]
 8021b48:	e9cd 0302 	strd	r0, r3, [sp, #8]
 8021b4c:	ab13      	add	r3, sp, #76	; 0x4c
 8021b4e:	9301      	str	r3, [sp, #4]
 8021b50:	ab15      	add	r3, sp, #84	; 0x54
 8021b52:	9300      	str	r3, [sp, #0]
 8021b54:	aa1e      	add	r2, sp, #120	; 0x78
 8021b56:	ab19      	add	r3, sp, #100	; 0x64
 8021b58:	a917      	add	r1, sp, #92	; 0x5c
 8021b5a:	4628      	mov	r0, r5
 8021b5c:	47b8      	blx	r7
 8021b5e:	b033      	add	sp, #204	; 0xcc
 8021b60:	ecbd 8b04 	vpop	{d8-d9}
 8021b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021b68:	2300      	movs	r3, #0
 8021b6a:	9312      	str	r3, [sp, #72]	; 0x48
 8021b6c:	e6f7      	b.n	802195e <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x86>
 8021b6e:	bf00      	nop
 8021b70:	20013752 	.word	0x20013752
 8021b74:	20013758 	.word	0x20013758

08021b78 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE>:
 8021b78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021b7c:	ed2d 8b02 	vpush	{d8}
 8021b80:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 8021b84:	b098      	sub	sp, #96	; 0x60
 8021b86:	4604      	mov	r4, r0
 8021b88:	4688      	mov	r8, r1
 8021b8a:	2b00      	cmp	r3, #0
 8021b8c:	d077      	beq.n	8021c7e <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x106>
 8021b8e:	f100 0526 	add.w	r5, r0, #38	; 0x26
 8021b92:	4628      	mov	r0, r5
 8021b94:	f7f3 fa1c 	bl	8014fd0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8021b98:	ee07 0a90 	vmov	s15, r0
 8021b9c:	4628      	mov	r0, r5
 8021b9e:	eeb8 8ae7 	vcvt.f32.s32	s16, s15
 8021ba2:	f7f3 fa49 	bl	8015038 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8021ba6:	4b4e      	ldr	r3, [pc, #312]	; (8021ce0 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x168>)
 8021ba8:	781b      	ldrb	r3, [r3, #0]
 8021baa:	ee07 0a90 	vmov	s15, r0
 8021bae:	2b01      	cmp	r3, #1
 8021bb0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8021bb4:	eeff 7a00 	vmov.f32	s15, #240	; 0xbf800000 -1.0
 8021bb8:	d066      	beq.n	8021c88 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x110>
 8021bba:	eeb0 6a47 	vmov.f32	s12, s14
 8021bbe:	ee17 3a10 	vmov	r3, s14
 8021bc2:	eeb0 4a48 	vmov.f32	s8, s16
 8021bc6:	eeb0 7a48 	vmov.f32	s14, s16
 8021bca:	eef0 4a67 	vmov.f32	s9, s15
 8021bce:	eeb0 8a67 	vmov.f32	s16, s15
 8021bd2:	ed94 5a17 	vldr	s10, [r4, #92]	; 0x5c
 8021bd6:	edd4 5a18 	vldr	s11, [r4, #96]	; 0x60
 8021bda:	ed94 3a1b 	vldr	s6, [r4, #108]	; 0x6c
 8021bde:	edd4 2a1d 	vldr	s5, [r4, #116]	; 0x74
 8021be2:	ed94 2a1a 	vldr	s4, [r4, #104]	; 0x68
 8021be6:	edd4 3a1e 	vldr	s7, [r4, #120]	; 0x78
 8021bea:	6f25      	ldr	r5, [r4, #112]	; 0x70
 8021bec:	6e66      	ldr	r6, [r4, #100]	; 0x64
 8021bee:	6fe2      	ldr	r2, [r4, #124]	; 0x7c
 8021bf0:	f8d4 c080 	ldr.w	ip, [r4, #128]	; 0x80
 8021bf4:	f8d4 7084 	ldr.w	r7, [r4, #132]	; 0x84
 8021bf8:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021bfc:	ee73 1a65 	vsub.f32	s3, s6, s11
 8021c00:	ee72 6ac5 	vsub.f32	s13, s5, s10
 8021c04:	ee32 1a45 	vsub.f32	s2, s4, s10
 8021c08:	ee66 6ae1 	vnmul.f32	s13, s13, s3
 8021c0c:	ee73 1ae5 	vsub.f32	s3, s7, s11
 8021c10:	eee1 6a21 	vfma.f32	s13, s2, s3
 8021c14:	eef5 6ac0 	vcmpe.f32	s13, #0.0
 8021c18:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8021c1c:	dd3d      	ble.n	8021c9a <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x122>
 8021c1e:	ed8d 5a04 	vstr	s10, [sp, #16]
 8021c22:	ed8d 2a05 	vstr	s4, [sp, #20]
 8021c26:	edcd 2a06 	vstr	s5, [sp, #24]
 8021c2a:	f8cd c01c 	str.w	ip, [sp, #28]
 8021c2e:	edcd 5a08 	vstr	s11, [sp, #32]
 8021c32:	ed8d 3a09 	vstr	s6, [sp, #36]	; 0x24
 8021c36:	edcd 3a0a 	vstr	s7, [sp, #40]	; 0x28
 8021c3a:	970b      	str	r7, [sp, #44]	; 0x2c
 8021c3c:	960c      	str	r6, [sp, #48]	; 0x30
 8021c3e:	950d      	str	r5, [sp, #52]	; 0x34
 8021c40:	920e      	str	r2, [sp, #56]	; 0x38
 8021c42:	900f      	str	r0, [sp, #60]	; 0x3c
 8021c44:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 8021c48:	ed8d 4a11 	vstr	s8, [sp, #68]	; 0x44
 8021c4c:	ed8d 7a12 	vstr	s14, [sp, #72]	; 0x48
 8021c50:	edcd 4a13 	vstr	s9, [sp, #76]	; 0x4c
 8021c54:	ed8d 8a14 	vstr	s16, [sp, #80]	; 0x50
 8021c58:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 8021c5c:	9316      	str	r3, [sp, #88]	; 0x58
 8021c5e:	ed8d 6a17 	vstr	s12, [sp, #92]	; 0x5c
 8021c62:	ab14      	add	r3, sp, #80	; 0x50
 8021c64:	9303      	str	r3, [sp, #12]
 8021c66:	ab10      	add	r3, sp, #64	; 0x40
 8021c68:	9302      	str	r3, [sp, #8]
 8021c6a:	ab0c      	add	r3, sp, #48	; 0x30
 8021c6c:	9301      	str	r3, [sp, #4]
 8021c6e:	ab08      	add	r3, sp, #32
 8021c70:	9300      	str	r3, [sp, #0]
 8021c72:	2200      	movs	r2, #0
 8021c74:	ab04      	add	r3, sp, #16
 8021c76:	4641      	mov	r1, r8
 8021c78:	4620      	mov	r0, r4
 8021c7a:	f7ff fe2d 	bl	80218d8 <_ZNK8touchgfx13TextureMapper8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 8021c7e:	b018      	add	sp, #96	; 0x60
 8021c80:	ecbd 8b02 	vpop	{d8}
 8021c84:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021c88:	eeb0 6a48 	vmov.f32	s12, s16
 8021c8c:	eef0 4a47 	vmov.f32	s9, s14
 8021c90:	ee17 3a90 	vmov	r3, s15
 8021c94:	eeb0 4a67 	vmov.f32	s8, s15
 8021c98:	e79b      	b.n	8021bd2 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0x5a>
 8021c9a:	ed8d 5a05 	vstr	s10, [sp, #20]
 8021c9e:	ed8d 2a04 	vstr	s4, [sp, #16]
 8021ca2:	f8cd c018 	str.w	ip, [sp, #24]
 8021ca6:	edcd 2a07 	vstr	s5, [sp, #28]
 8021caa:	edcd 5a09 	vstr	s11, [sp, #36]	; 0x24
 8021cae:	ed8d 3a08 	vstr	s6, [sp, #32]
 8021cb2:	970a      	str	r7, [sp, #40]	; 0x28
 8021cb4:	edcd 3a0b 	vstr	s7, [sp, #44]	; 0x2c
 8021cb8:	960d      	str	r6, [sp, #52]	; 0x34
 8021cba:	950c      	str	r5, [sp, #48]	; 0x30
 8021cbc:	900e      	str	r0, [sp, #56]	; 0x38
 8021cbe:	920f      	str	r2, [sp, #60]	; 0x3c
 8021cc0:	edcd 7a11 	vstr	s15, [sp, #68]	; 0x44
 8021cc4:	ed8d 4a10 	vstr	s8, [sp, #64]	; 0x40
 8021cc8:	edcd 4a12 	vstr	s9, [sp, #72]	; 0x48
 8021ccc:	ed8d 7a13 	vstr	s14, [sp, #76]	; 0x4c
 8021cd0:	ed8d 8a15 	vstr	s16, [sp, #84]	; 0x54
 8021cd4:	edcd 7a14 	vstr	s15, [sp, #80]	; 0x50
 8021cd8:	ed8d 6a16 	vstr	s12, [sp, #88]	; 0x58
 8021cdc:	9317      	str	r3, [sp, #92]	; 0x5c
 8021cde:	e7c0      	b.n	8021c62 <_ZNK8touchgfx13TextureMapper4drawERKNS_4RectE+0xea>
 8021ce0:	20013750 	.word	0x20013750

08021ce4 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E>:
 8021ce4:	b5f0      	push	{r4, r5, r6, r7, lr}
 8021ce6:	b08d      	sub	sp, #52	; 0x34
 8021ce8:	2300      	movs	r3, #0
 8021cea:	9304      	str	r3, [sp, #16]
 8021cec:	9305      	str	r3, [sp, #20]
 8021cee:	9306      	str	r3, [sp, #24]
 8021cf0:	aa04      	add	r2, sp, #16
 8021cf2:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8021cf6:	9307      	str	r3, [sp, #28]
 8021cf8:	f100 0640 	add.w	r6, r0, #64	; 0x40
 8021cfc:	4613      	mov	r3, r2
 8021cfe:	f101 0710 	add.w	r7, r1, #16
 8021d02:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8021d40 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x5c>
 8021d06:	460c      	mov	r4, r1
 8021d08:	4605      	mov	r5, r0
 8021d0a:	ecb4 7a01 	vldmia	r4!, {s14}
 8021d0e:	ecf5 6a01 	vldmia	r5!, {s13}
 8021d12:	42bc      	cmp	r4, r7
 8021d14:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021d18:	d1f7      	bne.n	8021d0a <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x26>
 8021d1a:	3010      	adds	r0, #16
 8021d1c:	42b0      	cmp	r0, r6
 8021d1e:	ece2 7a01 	vstmia	r2!, {s15}
 8021d22:	d1ee      	bne.n	8021d02 <_ZN8touchgfxmlERKNS_9Matrix4x4ERKNS_6Point4E+0x1e>
 8021d24:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8021d26:	ac0c      	add	r4, sp, #48	; 0x30
 8021d28:	e904 000f 	stmdb	r4, {r0, r1, r2, r3}
 8021d2c:	ed9d 0a08 	vldr	s0, [sp, #32]
 8021d30:	eddd 0a09 	vldr	s1, [sp, #36]	; 0x24
 8021d34:	ed9d 1a0a 	vldr	s2, [sp, #40]	; 0x28
 8021d38:	eddd 1a0b 	vldr	s3, [sp, #44]	; 0x2c
 8021d3c:	b00d      	add	sp, #52	; 0x34
 8021d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8021d40:	00000000 	.word	0x00000000

08021d44 <_ZN8touchgfx9Matrix4x4C1Ev>:
 8021d44:	ed9f 7a0b 	vldr	s14, [pc, #44]	; 8021d74 <_ZN8touchgfx9Matrix4x4C1Ev+0x30>
 8021d48:	2300      	movs	r3, #0
 8021d4a:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8021d4e:	eb00 1103 	add.w	r1, r0, r3, lsl #4
 8021d52:	2200      	movs	r2, #0
 8021d54:	4293      	cmp	r3, r2
 8021d56:	f102 0201 	add.w	r2, r2, #1
 8021d5a:	bf14      	ite	ne
 8021d5c:	eef0 6a47 	vmovne.f32	s13, s14
 8021d60:	eef0 6a67 	vmoveq.f32	s13, s15
 8021d64:	2a04      	cmp	r2, #4
 8021d66:	ece1 6a01 	vstmia	r1!, {s13}
 8021d6a:	d1f3      	bne.n	8021d54 <_ZN8touchgfx9Matrix4x4C1Ev+0x10>
 8021d6c:	3301      	adds	r3, #1
 8021d6e:	2b04      	cmp	r3, #4
 8021d70:	d1ed      	bne.n	8021d4e <_ZN8touchgfx9Matrix4x4C1Ev+0xa>
 8021d72:	4770      	bx	lr
 8021d74:	00000000 	.word	0x00000000

08021d78 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_>:
 8021d78:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8021d7c:	460c      	mov	r4, r1
 8021d7e:	4605      	mov	r5, r0
 8021d80:	4690      	mov	r8, r2
 8021d82:	f7ff ffdf 	bl	8021d44 <_ZN8touchgfx9Matrix4x4C1Ev>
 8021d86:	4628      	mov	r0, r5
 8021d88:	4621      	mov	r1, r4
 8021d8a:	f104 0c40 	add.w	ip, r4, #64	; 0x40
 8021d8e:	2300      	movs	r3, #0
 8021d90:	eddf 7a0f 	vldr	s15, [pc, #60]	; 8021dd0 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x58>
 8021d94:	eb08 0603 	add.w	r6, r8, r3
 8021d98:	460f      	mov	r7, r1
 8021d9a:	2400      	movs	r4, #0
 8021d9c:	4632      	mov	r2, r6
 8021d9e:	ecf7 6a01 	vldmia	r7!, {s13}
 8021da2:	ed92 7a00 	vldr	s14, [r2]
 8021da6:	3401      	adds	r4, #1
 8021da8:	2c04      	cmp	r4, #4
 8021daa:	f106 0610 	add.w	r6, r6, #16
 8021dae:	eee6 7a87 	vfma.f32	s15, s13, s14
 8021db2:	d1f3      	bne.n	8021d9c <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x24>
 8021db4:	18c2      	adds	r2, r0, r3
 8021db6:	3304      	adds	r3, #4
 8021db8:	2b10      	cmp	r3, #16
 8021dba:	edc2 7a00 	vstr	s15, [r2]
 8021dbe:	d1e7      	bne.n	8021d90 <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x18>
 8021dc0:	3110      	adds	r1, #16
 8021dc2:	4561      	cmp	r1, ip
 8021dc4:	f100 0010 	add.w	r0, r0, #16
 8021dc8:	d1e1      	bne.n	8021d8e <_ZN8touchgfxmlERKNS_9Matrix4x4ES2_+0x16>
 8021dca:	4628      	mov	r0, r5
 8021dcc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8021dd0:	00000000 	.word	0x00000000

08021dd4 <_ZN8touchgfx9Matrix4x415setViewDistanceEf>:
 8021dd4:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8021dd8:	ee87 0a80 	vdiv.f32	s0, s15, s0
 8021ddc:	f100 0320 	add.w	r3, r0, #32
 8021de0:	3030      	adds	r0, #48	; 0x30
 8021de2:	ecf3 7a01 	vldmia	r3!, {s15}
 8021de6:	ee60 7a27 	vmul.f32	s15, s0, s15
 8021dea:	4283      	cmp	r3, r0
 8021dec:	edc3 7a03 	vstr	s15, [r3, #12]
 8021df0:	d1f7      	bne.n	8021de2 <_ZN8touchgfx9Matrix4x415setViewDistanceEf+0xe>
 8021df2:	4770      	bx	lr

08021df4 <_ZN8touchgfx9Matrix4x420concatenateXRotationEf>:
 8021df4:	b510      	push	{r4, lr}
 8021df6:	ed2d 8b02 	vpush	{d8}
 8021dfa:	4604      	mov	r4, r0
 8021dfc:	eef0 8a40 	vmov.f32	s17, s0
 8021e00:	f000 f9bc 	bl	802217c <sinf>
 8021e04:	eeb0 8a40 	vmov.f32	s16, s0
 8021e08:	eeb0 0a68 	vmov.f32	s0, s17
 8021e0c:	f000 f930 	bl	8022070 <cosf>
 8021e10:	f104 0310 	add.w	r3, r4, #16
 8021e14:	f104 0220 	add.w	r2, r4, #32
 8021e18:	eeb1 6a48 	vneg.f32	s12, s16
 8021e1c:	edd3 7a04 	vldr	s15, [r3, #16]
 8021e20:	edd3 6a00 	vldr	s13, [r3]
 8021e24:	ee26 7a27 	vmul.f32	s14, s12, s15
 8021e28:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021e2c:	eea6 7a80 	vfma.f32	s14, s13, s0
 8021e30:	eee6 7a88 	vfma.f32	s15, s13, s16
 8021e34:	eca3 7a01 	vstmia	r3!, {s14}
 8021e38:	429a      	cmp	r2, r3
 8021e3a:	edc3 7a03 	vstr	s15, [r3, #12]
 8021e3e:	d1ed      	bne.n	8021e1c <_ZN8touchgfx9Matrix4x420concatenateXRotationEf+0x28>
 8021e40:	ecbd 8b02 	vpop	{d8}
 8021e44:	4620      	mov	r0, r4
 8021e46:	bd10      	pop	{r4, pc}

08021e48 <_ZN8touchgfx9Matrix4x420concatenateYRotationEf>:
 8021e48:	b510      	push	{r4, lr}
 8021e4a:	ed2d 8b02 	vpush	{d8}
 8021e4e:	4604      	mov	r4, r0
 8021e50:	eef0 8a40 	vmov.f32	s17, s0
 8021e54:	f000 f992 	bl	802217c <sinf>
 8021e58:	eeb0 8a40 	vmov.f32	s16, s0
 8021e5c:	eeb0 0a68 	vmov.f32	s0, s17
 8021e60:	f000 f906 	bl	8022070 <cosf>
 8021e64:	4623      	mov	r3, r4
 8021e66:	f104 0210 	add.w	r2, r4, #16
 8021e6a:	eeb1 6a48 	vneg.f32	s12, s16
 8021e6e:	edd3 7a08 	vldr	s15, [r3, #32]
 8021e72:	edd3 6a00 	vldr	s13, [r3]
 8021e76:	ee27 7a88 	vmul.f32	s14, s15, s16
 8021e7a:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021e7e:	eea6 7a80 	vfma.f32	s14, s13, s0
 8021e82:	eee6 7a26 	vfma.f32	s15, s12, s13
 8021e86:	eca3 7a01 	vstmia	r3!, {s14}
 8021e8a:	429a      	cmp	r2, r3
 8021e8c:	edc3 7a07 	vstr	s15, [r3, #28]
 8021e90:	d1ed      	bne.n	8021e6e <_ZN8touchgfx9Matrix4x420concatenateYRotationEf+0x26>
 8021e92:	ecbd 8b02 	vpop	{d8}
 8021e96:	4620      	mov	r0, r4
 8021e98:	bd10      	pop	{r4, pc}

08021e9a <_ZN8touchgfx9Matrix4x420concatenateZRotationEf>:
 8021e9a:	b510      	push	{r4, lr}
 8021e9c:	ed2d 8b02 	vpush	{d8}
 8021ea0:	4604      	mov	r4, r0
 8021ea2:	eef0 8a40 	vmov.f32	s17, s0
 8021ea6:	f000 f969 	bl	802217c <sinf>
 8021eaa:	eeb0 8a40 	vmov.f32	s16, s0
 8021eae:	eeb0 0a68 	vmov.f32	s0, s17
 8021eb2:	f000 f8dd 	bl	8022070 <cosf>
 8021eb6:	4623      	mov	r3, r4
 8021eb8:	f104 0210 	add.w	r2, r4, #16
 8021ebc:	eeb1 6a48 	vneg.f32	s12, s16
 8021ec0:	edd3 7a04 	vldr	s15, [r3, #16]
 8021ec4:	edd3 6a00 	vldr	s13, [r3]
 8021ec8:	ee26 7a27 	vmul.f32	s14, s12, s15
 8021ecc:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021ed0:	eea6 7a80 	vfma.f32	s14, s13, s0
 8021ed4:	eee6 7a88 	vfma.f32	s15, s13, s16
 8021ed8:	eca3 7a01 	vstmia	r3!, {s14}
 8021edc:	429a      	cmp	r2, r3
 8021ede:	edc3 7a03 	vstr	s15, [r3, #12]
 8021ee2:	d1ed      	bne.n	8021ec0 <_ZN8touchgfx9Matrix4x420concatenateZRotationEf+0x26>
 8021ee4:	ecbd 8b02 	vpop	{d8}
 8021ee8:	4620      	mov	r0, r4
 8021eea:	bd10      	pop	{r4, pc}

08021eec <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf>:
 8021eec:	4603      	mov	r3, r0
 8021eee:	f100 0210 	add.w	r2, r0, #16
 8021ef2:	ed93 7a0c 	vldr	s14, [r3, #48]	; 0x30
 8021ef6:	edd3 7a00 	vldr	s15, [r3]
 8021efa:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021efe:	ece3 7a01 	vstmia	r3!, {s15}
 8021f02:	4293      	cmp	r3, r2
 8021f04:	d1f5      	bne.n	8021ef2 <_ZN8touchgfx9Matrix4x423concatenateXTranslationEf+0x6>
 8021f06:	4770      	bx	lr

08021f08 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf>:
 8021f08:	f100 0310 	add.w	r3, r0, #16
 8021f0c:	f100 0220 	add.w	r2, r0, #32
 8021f10:	ed93 7a08 	vldr	s14, [r3, #32]
 8021f14:	edd3 7a00 	vldr	s15, [r3]
 8021f18:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021f1c:	ece3 7a01 	vstmia	r3!, {s15}
 8021f20:	4293      	cmp	r3, r2
 8021f22:	d1f5      	bne.n	8021f10 <_ZN8touchgfx9Matrix4x423concatenateYTranslationEf+0x8>
 8021f24:	4770      	bx	lr

08021f26 <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf>:
 8021f26:	f100 0320 	add.w	r3, r0, #32
 8021f2a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8021f2e:	ed93 7a04 	vldr	s14, [r3, #16]
 8021f32:	edd3 7a00 	vldr	s15, [r3]
 8021f36:	eee7 7a00 	vfma.f32	s15, s14, s0
 8021f3a:	ece3 7a01 	vstmia	r3!, {s15}
 8021f3e:	4293      	cmp	r3, r2
 8021f40:	d1f5      	bne.n	8021f2e <_ZN8touchgfx9Matrix4x423concatenateZTranslationEf+0x8>
 8021f42:	4770      	bx	lr

08021f44 <_ZN8touchgfx9Matrix4x417concatenateXScaleEf>:
 8021f44:	4603      	mov	r3, r0
 8021f46:	f100 0210 	add.w	r2, r0, #16
 8021f4a:	edd3 7a00 	vldr	s15, [r3]
 8021f4e:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021f52:	ece3 7a01 	vstmia	r3!, {s15}
 8021f56:	4293      	cmp	r3, r2
 8021f58:	d1f7      	bne.n	8021f4a <_ZN8touchgfx9Matrix4x417concatenateXScaleEf+0x6>
 8021f5a:	4770      	bx	lr

08021f5c <_ZN8touchgfx9Matrix4x417concatenateYScaleEf>:
 8021f5c:	f100 0310 	add.w	r3, r0, #16
 8021f60:	f100 0220 	add.w	r2, r0, #32
 8021f64:	edd3 7a00 	vldr	s15, [r3]
 8021f68:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021f6c:	ece3 7a01 	vstmia	r3!, {s15}
 8021f70:	4293      	cmp	r3, r2
 8021f72:	d1f7      	bne.n	8021f64 <_ZN8touchgfx9Matrix4x417concatenateYScaleEf+0x8>
 8021f74:	4770      	bx	lr

08021f76 <_ZN8touchgfx9Matrix4x417concatenateZScaleEf>:
 8021f76:	f100 0320 	add.w	r3, r0, #32
 8021f7a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8021f7e:	edd3 7a00 	vldr	s15, [r3]
 8021f82:	ee67 7a80 	vmul.f32	s15, s15, s0
 8021f86:	ece3 7a01 	vstmia	r3!, {s15}
 8021f8a:	4293      	cmp	r3, r2
 8021f8c:	d1f7      	bne.n	8021f7e <_ZN8touchgfx9Matrix4x417concatenateZScaleEf+0x8>
 8021f8e:	4770      	bx	lr

08021f90 <__aeabi_atexit>:
 8021f90:	460b      	mov	r3, r1
 8021f92:	4601      	mov	r1, r0
 8021f94:	4618      	mov	r0, r3
 8021f96:	f000 be37 	b.w	8022c08 <__cxa_atexit>

08021f9a <_ZdlPvj>:
 8021f9a:	f000 b812 	b.w	8021fc2 <_ZdlPv>

08021f9e <__cxa_guard_acquire>:
 8021f9e:	6803      	ldr	r3, [r0, #0]
 8021fa0:	07db      	lsls	r3, r3, #31
 8021fa2:	d406      	bmi.n	8021fb2 <__cxa_guard_acquire+0x14>
 8021fa4:	7843      	ldrb	r3, [r0, #1]
 8021fa6:	b103      	cbz	r3, 8021faa <__cxa_guard_acquire+0xc>
 8021fa8:	deff      	udf	#255	; 0xff
 8021faa:	2301      	movs	r3, #1
 8021fac:	7043      	strb	r3, [r0, #1]
 8021fae:	4618      	mov	r0, r3
 8021fb0:	4770      	bx	lr
 8021fb2:	2000      	movs	r0, #0
 8021fb4:	4770      	bx	lr

08021fb6 <__cxa_guard_release>:
 8021fb6:	2301      	movs	r3, #1
 8021fb8:	6003      	str	r3, [r0, #0]
 8021fba:	4770      	bx	lr

08021fbc <__cxa_pure_virtual>:
 8021fbc:	b508      	push	{r3, lr}
 8021fbe:	f000 f80f 	bl	8021fe0 <_ZSt9terminatev>

08021fc2 <_ZdlPv>:
 8021fc2:	f000 be73 	b.w	8022cac <free>

08021fc6 <_ZN10__cxxabiv111__terminateEPFvvE>:
 8021fc6:	b508      	push	{r3, lr}
 8021fc8:	4780      	blx	r0
 8021fca:	f000 fdf1 	bl	8022bb0 <abort>
	...

08021fd0 <_ZSt13get_terminatev>:
 8021fd0:	4b02      	ldr	r3, [pc, #8]	; (8021fdc <_ZSt13get_terminatev+0xc>)
 8021fd2:	6818      	ldr	r0, [r3, #0]
 8021fd4:	f3bf 8f5b 	dmb	ish
 8021fd8:	4770      	bx	lr
 8021fda:	bf00      	nop
 8021fdc:	200000f8 	.word	0x200000f8

08021fe0 <_ZSt9terminatev>:
 8021fe0:	b508      	push	{r3, lr}
 8021fe2:	f7ff fff5 	bl	8021fd0 <_ZSt13get_terminatev>
 8021fe6:	f7ff ffee 	bl	8021fc6 <_ZN10__cxxabiv111__terminateEPFvvE>
	...

08021fec <ceilf>:
 8021fec:	ee10 3a10 	vmov	r3, s0
 8021ff0:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8021ff4:	3a7f      	subs	r2, #127	; 0x7f
 8021ff6:	2a16      	cmp	r2, #22
 8021ff8:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8021ffc:	dc2a      	bgt.n	8022054 <ceilf+0x68>
 8021ffe:	2a00      	cmp	r2, #0
 8022000:	da11      	bge.n	8022026 <ceilf+0x3a>
 8022002:	eddf 7a19 	vldr	s15, [pc, #100]	; 8022068 <ceilf+0x7c>
 8022006:	ee30 0a27 	vadd.f32	s0, s0, s15
 802200a:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802200e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022012:	dd05      	ble.n	8022020 <ceilf+0x34>
 8022014:	2b00      	cmp	r3, #0
 8022016:	db23      	blt.n	8022060 <ceilf+0x74>
 8022018:	2900      	cmp	r1, #0
 802201a:	bf18      	it	ne
 802201c:	f04f 537e 	movne.w	r3, #1065353216	; 0x3f800000
 8022020:	ee00 3a10 	vmov	s0, r3
 8022024:	4770      	bx	lr
 8022026:	4911      	ldr	r1, [pc, #68]	; (802206c <ceilf+0x80>)
 8022028:	4111      	asrs	r1, r2
 802202a:	420b      	tst	r3, r1
 802202c:	d0fa      	beq.n	8022024 <ceilf+0x38>
 802202e:	eddf 7a0e 	vldr	s15, [pc, #56]	; 8022068 <ceilf+0x7c>
 8022032:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022036:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802203a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802203e:	ddef      	ble.n	8022020 <ceilf+0x34>
 8022040:	2b00      	cmp	r3, #0
 8022042:	bfc2      	ittt	gt
 8022044:	f44f 0000 	movgt.w	r0, #8388608	; 0x800000
 8022048:	fa40 f202 	asrgt.w	r2, r0, r2
 802204c:	189b      	addgt	r3, r3, r2
 802204e:	ea23 0301 	bic.w	r3, r3, r1
 8022052:	e7e5      	b.n	8022020 <ceilf+0x34>
 8022054:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8022058:	d3e4      	bcc.n	8022024 <ceilf+0x38>
 802205a:	ee30 0a00 	vadd.f32	s0, s0, s0
 802205e:	4770      	bx	lr
 8022060:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8022064:	e7dc      	b.n	8022020 <ceilf+0x34>
 8022066:	bf00      	nop
 8022068:	7149f2ca 	.word	0x7149f2ca
 802206c:	007fffff 	.word	0x007fffff

08022070 <cosf>:
 8022070:	ee10 3a10 	vmov	r3, s0
 8022074:	b507      	push	{r0, r1, r2, lr}
 8022076:	4a1e      	ldr	r2, [pc, #120]	; (80220f0 <cosf+0x80>)
 8022078:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 802207c:	4293      	cmp	r3, r2
 802207e:	dc06      	bgt.n	802208e <cosf+0x1e>
 8022080:	eddf 0a1c 	vldr	s1, [pc, #112]	; 80220f4 <cosf+0x84>
 8022084:	b003      	add	sp, #12
 8022086:	f85d eb04 	ldr.w	lr, [sp], #4
 802208a:	f000 b9f9 	b.w	8022480 <__kernel_cosf>
 802208e:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8022092:	db04      	blt.n	802209e <cosf+0x2e>
 8022094:	ee30 0a40 	vsub.f32	s0, s0, s0
 8022098:	b003      	add	sp, #12
 802209a:	f85d fb04 	ldr.w	pc, [sp], #4
 802209e:	4668      	mov	r0, sp
 80220a0:	f000 f8b2 	bl	8022208 <__ieee754_rem_pio2f>
 80220a4:	f000 0003 	and.w	r0, r0, #3
 80220a8:	2801      	cmp	r0, #1
 80220aa:	d009      	beq.n	80220c0 <cosf+0x50>
 80220ac:	2802      	cmp	r0, #2
 80220ae:	d010      	beq.n	80220d2 <cosf+0x62>
 80220b0:	b9b0      	cbnz	r0, 80220e0 <cosf+0x70>
 80220b2:	eddd 0a01 	vldr	s1, [sp, #4]
 80220b6:	ed9d 0a00 	vldr	s0, [sp]
 80220ba:	f000 f9e1 	bl	8022480 <__kernel_cosf>
 80220be:	e7eb      	b.n	8022098 <cosf+0x28>
 80220c0:	eddd 0a01 	vldr	s1, [sp, #4]
 80220c4:	ed9d 0a00 	vldr	s0, [sp]
 80220c8:	f000 fcb0 	bl	8022a2c <__kernel_sinf>
 80220cc:	eeb1 0a40 	vneg.f32	s0, s0
 80220d0:	e7e2      	b.n	8022098 <cosf+0x28>
 80220d2:	eddd 0a01 	vldr	s1, [sp, #4]
 80220d6:	ed9d 0a00 	vldr	s0, [sp]
 80220da:	f000 f9d1 	bl	8022480 <__kernel_cosf>
 80220de:	e7f5      	b.n	80220cc <cosf+0x5c>
 80220e0:	eddd 0a01 	vldr	s1, [sp, #4]
 80220e4:	ed9d 0a00 	vldr	s0, [sp]
 80220e8:	2001      	movs	r0, #1
 80220ea:	f000 fc9f 	bl	8022a2c <__kernel_sinf>
 80220ee:	e7d3      	b.n	8022098 <cosf+0x28>
 80220f0:	3f490fd8 	.word	0x3f490fd8
 80220f4:	00000000 	.word	0x00000000

080220f8 <floorf>:
 80220f8:	ee10 3a10 	vmov	r3, s0
 80220fc:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022100:	3a7f      	subs	r2, #127	; 0x7f
 8022102:	2a16      	cmp	r2, #22
 8022104:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8022108:	dc2a      	bgt.n	8022160 <floorf+0x68>
 802210a:	2a00      	cmp	r2, #0
 802210c:	da11      	bge.n	8022132 <floorf+0x3a>
 802210e:	eddf 7a18 	vldr	s15, [pc, #96]	; 8022170 <floorf+0x78>
 8022112:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022116:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 802211a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802211e:	dd05      	ble.n	802212c <floorf+0x34>
 8022120:	2b00      	cmp	r3, #0
 8022122:	da23      	bge.n	802216c <floorf+0x74>
 8022124:	4a13      	ldr	r2, [pc, #76]	; (8022174 <floorf+0x7c>)
 8022126:	2900      	cmp	r1, #0
 8022128:	bf18      	it	ne
 802212a:	4613      	movne	r3, r2
 802212c:	ee00 3a10 	vmov	s0, r3
 8022130:	4770      	bx	lr
 8022132:	4911      	ldr	r1, [pc, #68]	; (8022178 <floorf+0x80>)
 8022134:	4111      	asrs	r1, r2
 8022136:	420b      	tst	r3, r1
 8022138:	d0fa      	beq.n	8022130 <floorf+0x38>
 802213a:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8022170 <floorf+0x78>
 802213e:	ee30 0a27 	vadd.f32	s0, s0, s15
 8022142:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8022146:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802214a:	ddef      	ble.n	802212c <floorf+0x34>
 802214c:	2b00      	cmp	r3, #0
 802214e:	bfbe      	ittt	lt
 8022150:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8022154:	fa40 f202 	asrlt.w	r2, r0, r2
 8022158:	189b      	addlt	r3, r3, r2
 802215a:	ea23 0301 	bic.w	r3, r3, r1
 802215e:	e7e5      	b.n	802212c <floorf+0x34>
 8022160:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8022164:	d3e4      	bcc.n	8022130 <floorf+0x38>
 8022166:	ee30 0a00 	vadd.f32	s0, s0, s0
 802216a:	4770      	bx	lr
 802216c:	2300      	movs	r3, #0
 802216e:	e7dd      	b.n	802212c <floorf+0x34>
 8022170:	7149f2ca 	.word	0x7149f2ca
 8022174:	bf800000 	.word	0xbf800000
 8022178:	007fffff 	.word	0x007fffff

0802217c <sinf>:
 802217c:	ee10 3a10 	vmov	r3, s0
 8022180:	b507      	push	{r0, r1, r2, lr}
 8022182:	4a1f      	ldr	r2, [pc, #124]	; (8022200 <sinf+0x84>)
 8022184:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022188:	4293      	cmp	r3, r2
 802218a:	dc07      	bgt.n	802219c <sinf+0x20>
 802218c:	eddf 0a1d 	vldr	s1, [pc, #116]	; 8022204 <sinf+0x88>
 8022190:	2000      	movs	r0, #0
 8022192:	b003      	add	sp, #12
 8022194:	f85d eb04 	ldr.w	lr, [sp], #4
 8022198:	f000 bc48 	b.w	8022a2c <__kernel_sinf>
 802219c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80221a0:	db04      	blt.n	80221ac <sinf+0x30>
 80221a2:	ee30 0a40 	vsub.f32	s0, s0, s0
 80221a6:	b003      	add	sp, #12
 80221a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80221ac:	4668      	mov	r0, sp
 80221ae:	f000 f82b 	bl	8022208 <__ieee754_rem_pio2f>
 80221b2:	f000 0003 	and.w	r0, r0, #3
 80221b6:	2801      	cmp	r0, #1
 80221b8:	d00a      	beq.n	80221d0 <sinf+0x54>
 80221ba:	2802      	cmp	r0, #2
 80221bc:	d00f      	beq.n	80221de <sinf+0x62>
 80221be:	b9c0      	cbnz	r0, 80221f2 <sinf+0x76>
 80221c0:	eddd 0a01 	vldr	s1, [sp, #4]
 80221c4:	ed9d 0a00 	vldr	s0, [sp]
 80221c8:	2001      	movs	r0, #1
 80221ca:	f000 fc2f 	bl	8022a2c <__kernel_sinf>
 80221ce:	e7ea      	b.n	80221a6 <sinf+0x2a>
 80221d0:	eddd 0a01 	vldr	s1, [sp, #4]
 80221d4:	ed9d 0a00 	vldr	s0, [sp]
 80221d8:	f000 f952 	bl	8022480 <__kernel_cosf>
 80221dc:	e7e3      	b.n	80221a6 <sinf+0x2a>
 80221de:	eddd 0a01 	vldr	s1, [sp, #4]
 80221e2:	ed9d 0a00 	vldr	s0, [sp]
 80221e6:	2001      	movs	r0, #1
 80221e8:	f000 fc20 	bl	8022a2c <__kernel_sinf>
 80221ec:	eeb1 0a40 	vneg.f32	s0, s0
 80221f0:	e7d9      	b.n	80221a6 <sinf+0x2a>
 80221f2:	eddd 0a01 	vldr	s1, [sp, #4]
 80221f6:	ed9d 0a00 	vldr	s0, [sp]
 80221fa:	f000 f941 	bl	8022480 <__kernel_cosf>
 80221fe:	e7f5      	b.n	80221ec <sinf+0x70>
 8022200:	3f490fd8 	.word	0x3f490fd8
 8022204:	00000000 	.word	0x00000000

08022208 <__ieee754_rem_pio2f>:
 8022208:	b5f0      	push	{r4, r5, r6, r7, lr}
 802220a:	ee10 6a10 	vmov	r6, s0
 802220e:	4b8e      	ldr	r3, [pc, #568]	; (8022448 <__ieee754_rem_pio2f+0x240>)
 8022210:	f026 4500 	bic.w	r5, r6, #2147483648	; 0x80000000
 8022214:	429d      	cmp	r5, r3
 8022216:	b087      	sub	sp, #28
 8022218:	eef0 7a40 	vmov.f32	s15, s0
 802221c:	4604      	mov	r4, r0
 802221e:	dc05      	bgt.n	802222c <__ieee754_rem_pio2f+0x24>
 8022220:	2300      	movs	r3, #0
 8022222:	ed80 0a00 	vstr	s0, [r0]
 8022226:	6043      	str	r3, [r0, #4]
 8022228:	2000      	movs	r0, #0
 802222a:	e01a      	b.n	8022262 <__ieee754_rem_pio2f+0x5a>
 802222c:	4b87      	ldr	r3, [pc, #540]	; (802244c <__ieee754_rem_pio2f+0x244>)
 802222e:	429d      	cmp	r5, r3
 8022230:	dc46      	bgt.n	80222c0 <__ieee754_rem_pio2f+0xb8>
 8022232:	2e00      	cmp	r6, #0
 8022234:	ed9f 0a86 	vldr	s0, [pc, #536]	; 8022450 <__ieee754_rem_pio2f+0x248>
 8022238:	4b86      	ldr	r3, [pc, #536]	; (8022454 <__ieee754_rem_pio2f+0x24c>)
 802223a:	f025 050f 	bic.w	r5, r5, #15
 802223e:	dd1f      	ble.n	8022280 <__ieee754_rem_pio2f+0x78>
 8022240:	429d      	cmp	r5, r3
 8022242:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8022246:	d00e      	beq.n	8022266 <__ieee754_rem_pio2f+0x5e>
 8022248:	ed9f 7a83 	vldr	s14, [pc, #524]	; 8022458 <__ieee754_rem_pio2f+0x250>
 802224c:	ee37 0ac7 	vsub.f32	s0, s15, s14
 8022250:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8022254:	ed80 0a00 	vstr	s0, [r0]
 8022258:	ee77 7ac7 	vsub.f32	s15, s15, s14
 802225c:	2001      	movs	r0, #1
 802225e:	edc4 7a01 	vstr	s15, [r4, #4]
 8022262:	b007      	add	sp, #28
 8022264:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8022266:	ed9f 0a7d 	vldr	s0, [pc, #500]	; 802245c <__ieee754_rem_pio2f+0x254>
 802226a:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 8022460 <__ieee754_rem_pio2f+0x258>
 802226e:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8022272:	ee77 6ac7 	vsub.f32	s13, s15, s14
 8022276:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802227a:	edc0 6a00 	vstr	s13, [r0]
 802227e:	e7eb      	b.n	8022258 <__ieee754_rem_pio2f+0x50>
 8022280:	429d      	cmp	r5, r3
 8022282:	ee77 7a80 	vadd.f32	s15, s15, s0
 8022286:	d00e      	beq.n	80222a6 <__ieee754_rem_pio2f+0x9e>
 8022288:	ed9f 7a73 	vldr	s14, [pc, #460]	; 8022458 <__ieee754_rem_pio2f+0x250>
 802228c:	ee37 0a87 	vadd.f32	s0, s15, s14
 8022290:	ee77 7ac0 	vsub.f32	s15, s15, s0
 8022294:	ed80 0a00 	vstr	s0, [r0]
 8022298:	ee77 7a87 	vadd.f32	s15, s15, s14
 802229c:	f04f 30ff 	mov.w	r0, #4294967295
 80222a0:	edc4 7a01 	vstr	s15, [r4, #4]
 80222a4:	e7dd      	b.n	8022262 <__ieee754_rem_pio2f+0x5a>
 80222a6:	ed9f 0a6d 	vldr	s0, [pc, #436]	; 802245c <__ieee754_rem_pio2f+0x254>
 80222aa:	ed9f 7a6d 	vldr	s14, [pc, #436]	; 8022460 <__ieee754_rem_pio2f+0x258>
 80222ae:	ee77 7a80 	vadd.f32	s15, s15, s0
 80222b2:	ee77 6a87 	vadd.f32	s13, s15, s14
 80222b6:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80222ba:	edc0 6a00 	vstr	s13, [r0]
 80222be:	e7eb      	b.n	8022298 <__ieee754_rem_pio2f+0x90>
 80222c0:	4b68      	ldr	r3, [pc, #416]	; (8022464 <__ieee754_rem_pio2f+0x25c>)
 80222c2:	429d      	cmp	r5, r3
 80222c4:	dc72      	bgt.n	80223ac <__ieee754_rem_pio2f+0x1a4>
 80222c6:	f000 fbf9 	bl	8022abc <fabsf>
 80222ca:	ed9f 7a67 	vldr	s14, [pc, #412]	; 8022468 <__ieee754_rem_pio2f+0x260>
 80222ce:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80222d2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80222d6:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80222da:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80222de:	ee17 0a90 	vmov	r0, s15
 80222e2:	eddf 7a5b 	vldr	s15, [pc, #364]	; 8022450 <__ieee754_rem_pio2f+0x248>
 80222e6:	eea7 0a67 	vfms.f32	s0, s14, s15
 80222ea:	281f      	cmp	r0, #31
 80222ec:	eddf 7a5a 	vldr	s15, [pc, #360]	; 8022458 <__ieee754_rem_pio2f+0x250>
 80222f0:	ee67 7a27 	vmul.f32	s15, s14, s15
 80222f4:	eeb1 6a47 	vneg.f32	s12, s14
 80222f8:	ee70 6a67 	vsub.f32	s13, s0, s15
 80222fc:	ee16 2a90 	vmov	r2, s13
 8022300:	dc1c      	bgt.n	802233c <__ieee754_rem_pio2f+0x134>
 8022302:	495a      	ldr	r1, [pc, #360]	; (802246c <__ieee754_rem_pio2f+0x264>)
 8022304:	1e47      	subs	r7, r0, #1
 8022306:	f025 03ff 	bic.w	r3, r5, #255	; 0xff
 802230a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 802230e:	428b      	cmp	r3, r1
 8022310:	d014      	beq.n	802233c <__ieee754_rem_pio2f+0x134>
 8022312:	6022      	str	r2, [r4, #0]
 8022314:	ed94 7a00 	vldr	s14, [r4]
 8022318:	ee30 0a47 	vsub.f32	s0, s0, s14
 802231c:	2e00      	cmp	r6, #0
 802231e:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022322:	ed84 0a01 	vstr	s0, [r4, #4]
 8022326:	da9c      	bge.n	8022262 <__ieee754_rem_pio2f+0x5a>
 8022328:	eeb1 7a47 	vneg.f32	s14, s14
 802232c:	eeb1 0a40 	vneg.f32	s0, s0
 8022330:	ed84 7a00 	vstr	s14, [r4]
 8022334:	ed84 0a01 	vstr	s0, [r4, #4]
 8022338:	4240      	negs	r0, r0
 802233a:	e792      	b.n	8022262 <__ieee754_rem_pio2f+0x5a>
 802233c:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022340:	15eb      	asrs	r3, r5, #23
 8022342:	ebc1 55d5 	rsb	r5, r1, r5, lsr #23
 8022346:	2d08      	cmp	r5, #8
 8022348:	dde3      	ble.n	8022312 <__ieee754_rem_pio2f+0x10a>
 802234a:	eddf 7a44 	vldr	s15, [pc, #272]	; 802245c <__ieee754_rem_pio2f+0x254>
 802234e:	eddf 5a44 	vldr	s11, [pc, #272]	; 8022460 <__ieee754_rem_pio2f+0x258>
 8022352:	eef0 6a40 	vmov.f32	s13, s0
 8022356:	eee6 6a27 	vfma.f32	s13, s12, s15
 802235a:	ee30 0a66 	vsub.f32	s0, s0, s13
 802235e:	eea6 0a27 	vfma.f32	s0, s12, s15
 8022362:	eef0 7a40 	vmov.f32	s15, s0
 8022366:	eed7 7a25 	vfnms.f32	s15, s14, s11
 802236a:	ee76 5ae7 	vsub.f32	s11, s13, s15
 802236e:	ee15 2a90 	vmov	r2, s11
 8022372:	f3c2 51c7 	ubfx	r1, r2, #23, #8
 8022376:	1a5b      	subs	r3, r3, r1
 8022378:	2b19      	cmp	r3, #25
 802237a:	dc04      	bgt.n	8022386 <__ieee754_rem_pio2f+0x17e>
 802237c:	edc4 5a00 	vstr	s11, [r4]
 8022380:	eeb0 0a66 	vmov.f32	s0, s13
 8022384:	e7c6      	b.n	8022314 <__ieee754_rem_pio2f+0x10c>
 8022386:	eddf 5a3a 	vldr	s11, [pc, #232]	; 8022470 <__ieee754_rem_pio2f+0x268>
 802238a:	eeb0 0a66 	vmov.f32	s0, s13
 802238e:	eea6 0a25 	vfma.f32	s0, s12, s11
 8022392:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8022396:	eddf 6a37 	vldr	s13, [pc, #220]	; 8022474 <__ieee754_rem_pio2f+0x26c>
 802239a:	eee6 7a25 	vfma.f32	s15, s12, s11
 802239e:	eed7 7a26 	vfnms.f32	s15, s14, s13
 80223a2:	ee30 7a67 	vsub.f32	s14, s0, s15
 80223a6:	ed84 7a00 	vstr	s14, [r4]
 80223aa:	e7b3      	b.n	8022314 <__ieee754_rem_pio2f+0x10c>
 80223ac:	f1b5 4fff 	cmp.w	r5, #2139095040	; 0x7f800000
 80223b0:	db06      	blt.n	80223c0 <__ieee754_rem_pio2f+0x1b8>
 80223b2:	ee70 7a40 	vsub.f32	s15, s0, s0
 80223b6:	edc0 7a01 	vstr	s15, [r0, #4]
 80223ba:	edc0 7a00 	vstr	s15, [r0]
 80223be:	e733      	b.n	8022228 <__ieee754_rem_pio2f+0x20>
 80223c0:	15ea      	asrs	r2, r5, #23
 80223c2:	3a86      	subs	r2, #134	; 0x86
 80223c4:	eba5 53c2 	sub.w	r3, r5, r2, lsl #23
 80223c8:	ee07 3a90 	vmov	s15, r3
 80223cc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80223d0:	eddf 6a29 	vldr	s13, [pc, #164]	; 8022478 <__ieee754_rem_pio2f+0x270>
 80223d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80223d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80223dc:	ed8d 7a03 	vstr	s14, [sp, #12]
 80223e0:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80223e4:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 80223e8:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80223ec:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80223f0:	ed8d 7a04 	vstr	s14, [sp, #16]
 80223f4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80223f8:	eef5 7a40 	vcmp.f32	s15, #0.0
 80223fc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022400:	edcd 7a05 	vstr	s15, [sp, #20]
 8022404:	d11e      	bne.n	8022444 <__ieee754_rem_pio2f+0x23c>
 8022406:	eeb5 7a40 	vcmp.f32	s14, #0.0
 802240a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802240e:	bf14      	ite	ne
 8022410:	2302      	movne	r3, #2
 8022412:	2301      	moveq	r3, #1
 8022414:	4919      	ldr	r1, [pc, #100]	; (802247c <__ieee754_rem_pio2f+0x274>)
 8022416:	9101      	str	r1, [sp, #4]
 8022418:	2102      	movs	r1, #2
 802241a:	9100      	str	r1, [sp, #0]
 802241c:	a803      	add	r0, sp, #12
 802241e:	4621      	mov	r1, r4
 8022420:	f000 f88e 	bl	8022540 <__kernel_rem_pio2f>
 8022424:	2e00      	cmp	r6, #0
 8022426:	f6bf af1c 	bge.w	8022262 <__ieee754_rem_pio2f+0x5a>
 802242a:	edd4 7a00 	vldr	s15, [r4]
 802242e:	eef1 7a67 	vneg.f32	s15, s15
 8022432:	edc4 7a00 	vstr	s15, [r4]
 8022436:	edd4 7a01 	vldr	s15, [r4, #4]
 802243a:	eef1 7a67 	vneg.f32	s15, s15
 802243e:	edc4 7a01 	vstr	s15, [r4, #4]
 8022442:	e779      	b.n	8022338 <__ieee754_rem_pio2f+0x130>
 8022444:	2303      	movs	r3, #3
 8022446:	e7e5      	b.n	8022414 <__ieee754_rem_pio2f+0x20c>
 8022448:	3f490fd8 	.word	0x3f490fd8
 802244c:	4016cbe3 	.word	0x4016cbe3
 8022450:	3fc90f80 	.word	0x3fc90f80
 8022454:	3fc90fd0 	.word	0x3fc90fd0
 8022458:	37354443 	.word	0x37354443
 802245c:	37354400 	.word	0x37354400
 8022460:	2e85a308 	.word	0x2e85a308
 8022464:	43490f80 	.word	0x43490f80
 8022468:	3f22f984 	.word	0x3f22f984
 802246c:	0802a9f8 	.word	0x0802a9f8
 8022470:	2e85a300 	.word	0x2e85a300
 8022474:	248d3132 	.word	0x248d3132
 8022478:	43800000 	.word	0x43800000
 802247c:	0802aa78 	.word	0x0802aa78

08022480 <__kernel_cosf>:
 8022480:	ee10 3a10 	vmov	r3, s0
 8022484:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022488:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 802248c:	eeb7 6a00 	vmov.f32	s12, #112	; 0x3f800000  1.0
 8022490:	da05      	bge.n	802249e <__kernel_cosf+0x1e>
 8022492:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8022496:	ee17 2a90 	vmov	r2, s15
 802249a:	2a00      	cmp	r2, #0
 802249c:	d03d      	beq.n	802251a <__kernel_cosf+0x9a>
 802249e:	ee60 5a00 	vmul.f32	s11, s0, s0
 80224a2:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8022520 <__kernel_cosf+0xa0>
 80224a6:	ed9f 7a1f 	vldr	s14, [pc, #124]	; 8022524 <__kernel_cosf+0xa4>
 80224aa:	eddf 6a1f 	vldr	s13, [pc, #124]	; 8022528 <__kernel_cosf+0xa8>
 80224ae:	4a1f      	ldr	r2, [pc, #124]	; (802252c <__kernel_cosf+0xac>)
 80224b0:	eea5 7aa7 	vfma.f32	s14, s11, s15
 80224b4:	4293      	cmp	r3, r2
 80224b6:	eddf 7a1e 	vldr	s15, [pc, #120]	; 8022530 <__kernel_cosf+0xb0>
 80224ba:	eee7 7a25 	vfma.f32	s15, s14, s11
 80224be:	ed9f 7a1d 	vldr	s14, [pc, #116]	; 8022534 <__kernel_cosf+0xb4>
 80224c2:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80224c6:	eddf 7a1c 	vldr	s15, [pc, #112]	; 8022538 <__kernel_cosf+0xb8>
 80224ca:	eee7 7a25 	vfma.f32	s15, s14, s11
 80224ce:	eeb0 7a66 	vmov.f32	s14, s13
 80224d2:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80224d6:	eef6 6a00 	vmov.f32	s13, #96	; 0x3f000000  0.5
 80224da:	ee65 7aa6 	vmul.f32	s15, s11, s13
 80224de:	ee67 6a25 	vmul.f32	s13, s14, s11
 80224e2:	ee20 7ac0 	vnmul.f32	s14, s1, s0
 80224e6:	eea5 7aa6 	vfma.f32	s14, s11, s13
 80224ea:	dc04      	bgt.n	80224f6 <__kernel_cosf+0x76>
 80224ec:	ee37 7ac7 	vsub.f32	s14, s15, s14
 80224f0:	ee36 0a47 	vsub.f32	s0, s12, s14
 80224f4:	4770      	bx	lr
 80224f6:	4a11      	ldr	r2, [pc, #68]	; (802253c <__kernel_cosf+0xbc>)
 80224f8:	4293      	cmp	r3, r2
 80224fa:	bfda      	itte	le
 80224fc:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 8022500:	ee06 3a90 	vmovle	s13, r3
 8022504:	eef5 6a02 	vmovgt.f32	s13, #82	; 0x3e900000  0.2812500
 8022508:	ee77 7ae6 	vsub.f32	s15, s15, s13
 802250c:	ee36 0a66 	vsub.f32	s0, s12, s13
 8022510:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022514:	ee30 0a67 	vsub.f32	s0, s0, s15
 8022518:	4770      	bx	lr
 802251a:	eeb0 0a46 	vmov.f32	s0, s12
 802251e:	4770      	bx	lr
 8022520:	ad47d74e 	.word	0xad47d74e
 8022524:	310f74f6 	.word	0x310f74f6
 8022528:	3d2aaaab 	.word	0x3d2aaaab
 802252c:	3e999999 	.word	0x3e999999
 8022530:	b493f27c 	.word	0xb493f27c
 8022534:	37d00d01 	.word	0x37d00d01
 8022538:	bab60b61 	.word	0xbab60b61
 802253c:	3f480000 	.word	0x3f480000

08022540 <__kernel_rem_pio2f>:
 8022540:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022544:	ed2d 8b04 	vpush	{d8-d9}
 8022548:	b0d9      	sub	sp, #356	; 0x164
 802254a:	4688      	mov	r8, r1
 802254c:	9002      	str	r0, [sp, #8]
 802254e:	49bb      	ldr	r1, [pc, #748]	; (802283c <__kernel_rem_pio2f+0x2fc>)
 8022550:	9866      	ldr	r0, [sp, #408]	; 0x198
 8022552:	9301      	str	r3, [sp, #4]
 8022554:	f851 a020 	ldr.w	sl, [r1, r0, lsl #2]
 8022558:	f8dd e19c 	ldr.w	lr, [sp, #412]	; 0x19c
 802255c:	1e59      	subs	r1, r3, #1
 802255e:	1d13      	adds	r3, r2, #4
 8022560:	db27      	blt.n	80225b2 <__kernel_rem_pio2f+0x72>
 8022562:	f1b2 0b03 	subs.w	fp, r2, #3
 8022566:	bf48      	it	mi
 8022568:	f102 0b04 	addmi.w	fp, r2, #4
 802256c:	ea4f 00eb 	mov.w	r0, fp, asr #3
 8022570:	1c45      	adds	r5, r0, #1
 8022572:	00ec      	lsls	r4, r5, #3
 8022574:	1a47      	subs	r7, r0, r1
 8022576:	ed9f 7ab5 	vldr	s14, [pc, #724]	; 802284c <__kernel_rem_pio2f+0x30c>
 802257a:	9403      	str	r4, [sp, #12]
 802257c:	eba2 05c5 	sub.w	r5, r2, r5, lsl #3
 8022580:	eb0a 0c01 	add.w	ip, sl, r1
 8022584:	ae1c      	add	r6, sp, #112	; 0x70
 8022586:	eb0e 0987 	add.w	r9, lr, r7, lsl #2
 802258a:	2400      	movs	r4, #0
 802258c:	4564      	cmp	r4, ip
 802258e:	dd12      	ble.n	80225b6 <__kernel_rem_pio2f+0x76>
 8022590:	9b01      	ldr	r3, [sp, #4]
 8022592:	ac1c      	add	r4, sp, #112	; 0x70
 8022594:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8022598:	f50d 7b88 	add.w	fp, sp, #272	; 0x110
 802259c:	f04f 0c00 	mov.w	ip, #0
 80225a0:	45d4      	cmp	ip, sl
 80225a2:	dc27      	bgt.n	80225f4 <__kernel_rem_pio2f+0xb4>
 80225a4:	f8dd 9008 	ldr.w	r9, [sp, #8]
 80225a8:	eddf 7aa8 	vldr	s15, [pc, #672]	; 802284c <__kernel_rem_pio2f+0x30c>
 80225ac:	4627      	mov	r7, r4
 80225ae:	2600      	movs	r6, #0
 80225b0:	e016      	b.n	80225e0 <__kernel_rem_pio2f+0xa0>
 80225b2:	2000      	movs	r0, #0
 80225b4:	e7dc      	b.n	8022570 <__kernel_rem_pio2f+0x30>
 80225b6:	42e7      	cmn	r7, r4
 80225b8:	bf5d      	ittte	pl
 80225ba:	f859 3024 	ldrpl.w	r3, [r9, r4, lsl #2]
 80225be:	ee07 3a90 	vmovpl	s15, r3
 80225c2:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 80225c6:	eef0 7a47 	vmovmi.f32	s15, s14
 80225ca:	ece6 7a01 	vstmia	r6!, {s15}
 80225ce:	3401      	adds	r4, #1
 80225d0:	e7dc      	b.n	802258c <__kernel_rem_pio2f+0x4c>
 80225d2:	ecf9 6a01 	vldmia	r9!, {s13}
 80225d6:	ed97 7a00 	vldr	s14, [r7]
 80225da:	eee6 7a87 	vfma.f32	s15, s13, s14
 80225de:	3601      	adds	r6, #1
 80225e0:	428e      	cmp	r6, r1
 80225e2:	f1a7 0704 	sub.w	r7, r7, #4
 80225e6:	ddf4      	ble.n	80225d2 <__kernel_rem_pio2f+0x92>
 80225e8:	eceb 7a01 	vstmia	fp!, {s15}
 80225ec:	f10c 0c01 	add.w	ip, ip, #1
 80225f0:	3404      	adds	r4, #4
 80225f2:	e7d5      	b.n	80225a0 <__kernel_rem_pio2f+0x60>
 80225f4:	ab08      	add	r3, sp, #32
 80225f6:	eb03 038a 	add.w	r3, r3, sl, lsl #2
 80225fa:	eddf 8a93 	vldr	s17, [pc, #588]	; 8022848 <__kernel_rem_pio2f+0x308>
 80225fe:	ed9f 9a91 	vldr	s18, [pc, #580]	; 8022844 <__kernel_rem_pio2f+0x304>
 8022602:	9304      	str	r3, [sp, #16]
 8022604:	eb0e 0b80 	add.w	fp, lr, r0, lsl #2
 8022608:	4656      	mov	r6, sl
 802260a:	00b3      	lsls	r3, r6, #2
 802260c:	9305      	str	r3, [sp, #20]
 802260e:	ab58      	add	r3, sp, #352	; 0x160
 8022610:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8022614:	ac08      	add	r4, sp, #32
 8022616:	ab44      	add	r3, sp, #272	; 0x110
 8022618:	ed10 0a14 	vldr	s0, [r0, #-80]	; 0xffffffb0
 802261c:	46a4      	mov	ip, r4
 802261e:	eb03 0086 	add.w	r0, r3, r6, lsl #2
 8022622:	4637      	mov	r7, r6
 8022624:	2f00      	cmp	r7, #0
 8022626:	f1a0 0004 	sub.w	r0, r0, #4
 802262a:	dc4f      	bgt.n	80226cc <__kernel_rem_pio2f+0x18c>
 802262c:	4628      	mov	r0, r5
 802262e:	e9cd 1206 	strd	r1, r2, [sp, #24]
 8022632:	f000 fa4b 	bl	8022acc <scalbnf>
 8022636:	eeb0 8a40 	vmov.f32	s16, s0
 802263a:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 802263e:	ee28 0a00 	vmul.f32	s0, s16, s0
 8022642:	f7ff fd59 	bl	80220f8 <floorf>
 8022646:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 802264a:	eea0 8a67 	vfms.f32	s16, s0, s15
 802264e:	2d00      	cmp	r5, #0
 8022650:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 8022654:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 8022658:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 802265c:	ee17 9a90 	vmov	r9, s15
 8022660:	ee38 8a40 	vsub.f32	s16, s16, s0
 8022664:	dd44      	ble.n	80226f0 <__kernel_rem_pio2f+0x1b0>
 8022666:	f106 3cff 	add.w	ip, r6, #4294967295
 802266a:	ab08      	add	r3, sp, #32
 802266c:	f1c5 0e08 	rsb	lr, r5, #8
 8022670:	f853 702c 	ldr.w	r7, [r3, ip, lsl #2]
 8022674:	fa47 f00e 	asr.w	r0, r7, lr
 8022678:	4481      	add	r9, r0
 802267a:	fa00 f00e 	lsl.w	r0, r0, lr
 802267e:	1a3f      	subs	r7, r7, r0
 8022680:	f1c5 0007 	rsb	r0, r5, #7
 8022684:	f843 702c 	str.w	r7, [r3, ip, lsl #2]
 8022688:	4107      	asrs	r7, r0
 802268a:	2f00      	cmp	r7, #0
 802268c:	dd3f      	ble.n	802270e <__kernel_rem_pio2f+0x1ce>
 802268e:	f04f 0e00 	mov.w	lr, #0
 8022692:	f109 0901 	add.w	r9, r9, #1
 8022696:	4673      	mov	r3, lr
 8022698:	4576      	cmp	r6, lr
 802269a:	dc6b      	bgt.n	8022774 <__kernel_rem_pio2f+0x234>
 802269c:	2d00      	cmp	r5, #0
 802269e:	dd04      	ble.n	80226aa <__kernel_rem_pio2f+0x16a>
 80226a0:	2d01      	cmp	r5, #1
 80226a2:	d078      	beq.n	8022796 <__kernel_rem_pio2f+0x256>
 80226a4:	2d02      	cmp	r5, #2
 80226a6:	f000 8081 	beq.w	80227ac <__kernel_rem_pio2f+0x26c>
 80226aa:	2f02      	cmp	r7, #2
 80226ac:	d12f      	bne.n	802270e <__kernel_rem_pio2f+0x1ce>
 80226ae:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80226b2:	ee30 8a48 	vsub.f32	s16, s0, s16
 80226b6:	b353      	cbz	r3, 802270e <__kernel_rem_pio2f+0x1ce>
 80226b8:	4628      	mov	r0, r5
 80226ba:	e9cd 1206 	strd	r1, r2, [sp, #24]
 80226be:	f000 fa05 	bl	8022acc <scalbnf>
 80226c2:	e9dd 1206 	ldrd	r1, r2, [sp, #24]
 80226c6:	ee38 8a40 	vsub.f32	s16, s16, s0
 80226ca:	e020      	b.n	802270e <__kernel_rem_pio2f+0x1ce>
 80226cc:	ee60 7a28 	vmul.f32	s15, s0, s17
 80226d0:	3f01      	subs	r7, #1
 80226d2:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80226d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80226da:	eea7 0ac9 	vfms.f32	s0, s15, s18
 80226de:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80226e2:	ecac 0a01 	vstmia	ip!, {s0}
 80226e6:	ed90 0a00 	vldr	s0, [r0]
 80226ea:	ee37 0a80 	vadd.f32	s0, s15, s0
 80226ee:	e799      	b.n	8022624 <__kernel_rem_pio2f+0xe4>
 80226f0:	d105      	bne.n	80226fe <__kernel_rem_pio2f+0x1be>
 80226f2:	1e70      	subs	r0, r6, #1
 80226f4:	ab08      	add	r3, sp, #32
 80226f6:	f853 7020 	ldr.w	r7, [r3, r0, lsl #2]
 80226fa:	11ff      	asrs	r7, r7, #7
 80226fc:	e7c5      	b.n	802268a <__kernel_rem_pio2f+0x14a>
 80226fe:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8022702:	eeb4 8ae7 	vcmpe.f32	s16, s15
 8022706:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 802270a:	da31      	bge.n	8022770 <__kernel_rem_pio2f+0x230>
 802270c:	2700      	movs	r7, #0
 802270e:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8022712:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022716:	f040 809b 	bne.w	8022850 <__kernel_rem_pio2f+0x310>
 802271a:	1e74      	subs	r4, r6, #1
 802271c:	46a4      	mov	ip, r4
 802271e:	2000      	movs	r0, #0
 8022720:	45d4      	cmp	ip, sl
 8022722:	da4a      	bge.n	80227ba <__kernel_rem_pio2f+0x27a>
 8022724:	2800      	cmp	r0, #0
 8022726:	d07a      	beq.n	802281e <__kernel_rem_pio2f+0x2de>
 8022728:	ab08      	add	r3, sp, #32
 802272a:	3d08      	subs	r5, #8
 802272c:	f853 3024 	ldr.w	r3, [r3, r4, lsl #2]
 8022730:	2b00      	cmp	r3, #0
 8022732:	f000 8081 	beq.w	8022838 <__kernel_rem_pio2f+0x2f8>
 8022736:	4628      	mov	r0, r5
 8022738:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 802273c:	00a5      	lsls	r5, r4, #2
 802273e:	f000 f9c5 	bl	8022acc <scalbnf>
 8022742:	aa44      	add	r2, sp, #272	; 0x110
 8022744:	1d2b      	adds	r3, r5, #4
 8022746:	ed9f 7a40 	vldr	s14, [pc, #256]	; 8022848 <__kernel_rem_pio2f+0x308>
 802274a:	18d1      	adds	r1, r2, r3
 802274c:	4622      	mov	r2, r4
 802274e:	2a00      	cmp	r2, #0
 8022750:	f280 80ae 	bge.w	80228b0 <__kernel_rem_pio2f+0x370>
 8022754:	4622      	mov	r2, r4
 8022756:	2a00      	cmp	r2, #0
 8022758:	f2c0 80cc 	blt.w	80228f4 <__kernel_rem_pio2f+0x3b4>
 802275c:	a944      	add	r1, sp, #272	; 0x110
 802275e:	eb01 0682 	add.w	r6, r1, r2, lsl #2
 8022762:	f8df c0dc 	ldr.w	ip, [pc, #220]	; 8022840 <__kernel_rem_pio2f+0x300>
 8022766:	eddf 7a39 	vldr	s15, [pc, #228]	; 802284c <__kernel_rem_pio2f+0x30c>
 802276a:	2000      	movs	r0, #0
 802276c:	1aa1      	subs	r1, r4, r2
 802276e:	e0b6      	b.n	80228de <__kernel_rem_pio2f+0x39e>
 8022770:	2702      	movs	r7, #2
 8022772:	e78c      	b.n	802268e <__kernel_rem_pio2f+0x14e>
 8022774:	6820      	ldr	r0, [r4, #0]
 8022776:	b94b      	cbnz	r3, 802278c <__kernel_rem_pio2f+0x24c>
 8022778:	b118      	cbz	r0, 8022782 <__kernel_rem_pio2f+0x242>
 802277a:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 802277e:	6020      	str	r0, [r4, #0]
 8022780:	2001      	movs	r0, #1
 8022782:	f10e 0e01 	add.w	lr, lr, #1
 8022786:	3404      	adds	r4, #4
 8022788:	4603      	mov	r3, r0
 802278a:	e785      	b.n	8022698 <__kernel_rem_pio2f+0x158>
 802278c:	f1c0 00ff 	rsb	r0, r0, #255	; 0xff
 8022790:	6020      	str	r0, [r4, #0]
 8022792:	4618      	mov	r0, r3
 8022794:	e7f5      	b.n	8022782 <__kernel_rem_pio2f+0x242>
 8022796:	1e74      	subs	r4, r6, #1
 8022798:	a808      	add	r0, sp, #32
 802279a:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 802279e:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80227a2:	f10d 0c20 	add.w	ip, sp, #32
 80227a6:	f84c 0024 	str.w	r0, [ip, r4, lsl #2]
 80227aa:	e77e      	b.n	80226aa <__kernel_rem_pio2f+0x16a>
 80227ac:	1e74      	subs	r4, r6, #1
 80227ae:	a808      	add	r0, sp, #32
 80227b0:	f850 0024 	ldr.w	r0, [r0, r4, lsl #2]
 80227b4:	f000 003f 	and.w	r0, r0, #63	; 0x3f
 80227b8:	e7f3      	b.n	80227a2 <__kernel_rem_pio2f+0x262>
 80227ba:	ab08      	add	r3, sp, #32
 80227bc:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 80227c0:	f10c 3cff 	add.w	ip, ip, #4294967295
 80227c4:	4318      	orrs	r0, r3
 80227c6:	e7ab      	b.n	8022720 <__kernel_rem_pio2f+0x1e0>
 80227c8:	f10c 0c01 	add.w	ip, ip, #1
 80227cc:	f850 4d04 	ldr.w	r4, [r0, #-4]!
 80227d0:	2c00      	cmp	r4, #0
 80227d2:	d0f9      	beq.n	80227c8 <__kernel_rem_pio2f+0x288>
 80227d4:	9b05      	ldr	r3, [sp, #20]
 80227d6:	f503 73b0 	add.w	r3, r3, #352	; 0x160
 80227da:	eb0d 0003 	add.w	r0, sp, r3
 80227de:	9b01      	ldr	r3, [sp, #4]
 80227e0:	18f4      	adds	r4, r6, r3
 80227e2:	ab1c      	add	r3, sp, #112	; 0x70
 80227e4:	1c77      	adds	r7, r6, #1
 80227e6:	384c      	subs	r0, #76	; 0x4c
 80227e8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80227ec:	4466      	add	r6, ip
 80227ee:	42be      	cmp	r6, r7
 80227f0:	f6ff af0b 	blt.w	802260a <__kernel_rem_pio2f+0xca>
 80227f4:	f85b 3027 	ldr.w	r3, [fp, r7, lsl #2]
 80227f8:	f8dd e008 	ldr.w	lr, [sp, #8]
 80227fc:	ee07 3a90 	vmov	s15, r3
 8022800:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8022804:	f04f 0c00 	mov.w	ip, #0
 8022808:	ece4 7a01 	vstmia	r4!, {s15}
 802280c:	eddf 7a0f 	vldr	s15, [pc, #60]	; 802284c <__kernel_rem_pio2f+0x30c>
 8022810:	46a1      	mov	r9, r4
 8022812:	458c      	cmp	ip, r1
 8022814:	dd07      	ble.n	8022826 <__kernel_rem_pio2f+0x2e6>
 8022816:	ece0 7a01 	vstmia	r0!, {s15}
 802281a:	3701      	adds	r7, #1
 802281c:	e7e7      	b.n	80227ee <__kernel_rem_pio2f+0x2ae>
 802281e:	9804      	ldr	r0, [sp, #16]
 8022820:	f04f 0c01 	mov.w	ip, #1
 8022824:	e7d2      	b.n	80227cc <__kernel_rem_pio2f+0x28c>
 8022826:	ecfe 6a01 	vldmia	lr!, {s13}
 802282a:	ed39 7a01 	vldmdb	r9!, {s14}
 802282e:	f10c 0c01 	add.w	ip, ip, #1
 8022832:	eee6 7a87 	vfma.f32	s15, s13, s14
 8022836:	e7ec      	b.n	8022812 <__kernel_rem_pio2f+0x2d2>
 8022838:	3c01      	subs	r4, #1
 802283a:	e775      	b.n	8022728 <__kernel_rem_pio2f+0x1e8>
 802283c:	0802adbc 	.word	0x0802adbc
 8022840:	0802ad90 	.word	0x0802ad90
 8022844:	43800000 	.word	0x43800000
 8022848:	3b800000 	.word	0x3b800000
 802284c:	00000000 	.word	0x00000000
 8022850:	9b03      	ldr	r3, [sp, #12]
 8022852:	eeb0 0a48 	vmov.f32	s0, s16
 8022856:	1a98      	subs	r0, r3, r2
 8022858:	f000 f938 	bl	8022acc <scalbnf>
 802285c:	ed1f 7a07 	vldr	s14, [pc, #-28]	; 8022844 <__kernel_rem_pio2f+0x304>
 8022860:	eeb4 0ac7 	vcmpe.f32	s0, s14
 8022864:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8022868:	db19      	blt.n	802289e <__kernel_rem_pio2f+0x35e>
 802286a:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8022848 <__kernel_rem_pio2f+0x308>
 802286e:	ee60 7a27 	vmul.f32	s15, s0, s15
 8022872:	aa08      	add	r2, sp, #32
 8022874:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022878:	1c74      	adds	r4, r6, #1
 802287a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 802287e:	3508      	adds	r5, #8
 8022880:	eea7 0ac7 	vfms.f32	s0, s15, s14
 8022884:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8022888:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 802288c:	ee10 3a10 	vmov	r3, s0
 8022890:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 8022894:	ee17 3a90 	vmov	r3, s15
 8022898:	f842 3024 	str.w	r3, [r2, r4, lsl #2]
 802289c:	e74b      	b.n	8022736 <__kernel_rem_pio2f+0x1f6>
 802289e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 80228a2:	aa08      	add	r2, sp, #32
 80228a4:	ee10 3a10 	vmov	r3, s0
 80228a8:	4634      	mov	r4, r6
 80228aa:	f842 3026 	str.w	r3, [r2, r6, lsl #2]
 80228ae:	e742      	b.n	8022736 <__kernel_rem_pio2f+0x1f6>
 80228b0:	a808      	add	r0, sp, #32
 80228b2:	f850 0022 	ldr.w	r0, [r0, r2, lsl #2]
 80228b6:	9001      	str	r0, [sp, #4]
 80228b8:	ee07 0a90 	vmov	s15, r0
 80228bc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80228c0:	3a01      	subs	r2, #1
 80228c2:	ee67 7a80 	vmul.f32	s15, s15, s0
 80228c6:	ee20 0a07 	vmul.f32	s0, s0, s14
 80228ca:	ed61 7a01 	vstmdb	r1!, {s15}
 80228ce:	e73e      	b.n	802274e <__kernel_rem_pio2f+0x20e>
 80228d0:	ecfc 6a01 	vldmia	ip!, {s13}
 80228d4:	ecb6 7a01 	vldmia	r6!, {s14}
 80228d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80228dc:	3001      	adds	r0, #1
 80228de:	4550      	cmp	r0, sl
 80228e0:	dc01      	bgt.n	80228e6 <__kernel_rem_pio2f+0x3a6>
 80228e2:	4288      	cmp	r0, r1
 80228e4:	ddf4      	ble.n	80228d0 <__kernel_rem_pio2f+0x390>
 80228e6:	a858      	add	r0, sp, #352	; 0x160
 80228e8:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80228ec:	ed41 7a28 	vstr	s15, [r1, #-160]	; 0xffffff60
 80228f0:	3a01      	subs	r2, #1
 80228f2:	e730      	b.n	8022756 <__kernel_rem_pio2f+0x216>
 80228f4:	9a66      	ldr	r2, [sp, #408]	; 0x198
 80228f6:	2a02      	cmp	r2, #2
 80228f8:	dc09      	bgt.n	802290e <__kernel_rem_pio2f+0x3ce>
 80228fa:	2a00      	cmp	r2, #0
 80228fc:	dc2a      	bgt.n	8022954 <__kernel_rem_pio2f+0x414>
 80228fe:	d043      	beq.n	8022988 <__kernel_rem_pio2f+0x448>
 8022900:	f009 0007 	and.w	r0, r9, #7
 8022904:	b059      	add	sp, #356	; 0x164
 8022906:	ecbd 8b04 	vpop	{d8-d9}
 802290a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802290e:	9b66      	ldr	r3, [sp, #408]	; 0x198
 8022910:	2b03      	cmp	r3, #3
 8022912:	d1f5      	bne.n	8022900 <__kernel_rem_pio2f+0x3c0>
 8022914:	ab30      	add	r3, sp, #192	; 0xc0
 8022916:	442b      	add	r3, r5
 8022918:	461a      	mov	r2, r3
 802291a:	4619      	mov	r1, r3
 802291c:	4620      	mov	r0, r4
 802291e:	2800      	cmp	r0, #0
 8022920:	f1a1 0104 	sub.w	r1, r1, #4
 8022924:	dc51      	bgt.n	80229ca <__kernel_rem_pio2f+0x48a>
 8022926:	4621      	mov	r1, r4
 8022928:	2901      	cmp	r1, #1
 802292a:	f1a2 0204 	sub.w	r2, r2, #4
 802292e:	dc5c      	bgt.n	80229ea <__kernel_rem_pio2f+0x4aa>
 8022930:	ed5f 7a3a 	vldr	s15, [pc, #-232]	; 802284c <__kernel_rem_pio2f+0x30c>
 8022934:	3304      	adds	r3, #4
 8022936:	2c01      	cmp	r4, #1
 8022938:	dc67      	bgt.n	8022a0a <__kernel_rem_pio2f+0x4ca>
 802293a:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 802293e:	ed9d 7a31 	vldr	s14, [sp, #196]	; 0xc4
 8022942:	2f00      	cmp	r7, #0
 8022944:	d167      	bne.n	8022a16 <__kernel_rem_pio2f+0x4d6>
 8022946:	edc8 6a00 	vstr	s13, [r8]
 802294a:	ed88 7a01 	vstr	s14, [r8, #4]
 802294e:	edc8 7a02 	vstr	s15, [r8, #8]
 8022952:	e7d5      	b.n	8022900 <__kernel_rem_pio2f+0x3c0>
 8022954:	aa30      	add	r2, sp, #192	; 0xc0
 8022956:	ed1f 7a43 	vldr	s14, [pc, #-268]	; 802284c <__kernel_rem_pio2f+0x30c>
 802295a:	4413      	add	r3, r2
 802295c:	4622      	mov	r2, r4
 802295e:	2a00      	cmp	r2, #0
 8022960:	da24      	bge.n	80229ac <__kernel_rem_pio2f+0x46c>
 8022962:	b34f      	cbz	r7, 80229b8 <__kernel_rem_pio2f+0x478>
 8022964:	eef1 7a47 	vneg.f32	s15, s14
 8022968:	edc8 7a00 	vstr	s15, [r8]
 802296c:	eddd 7a30 	vldr	s15, [sp, #192]	; 0xc0
 8022970:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8022974:	aa31      	add	r2, sp, #196	; 0xc4
 8022976:	2301      	movs	r3, #1
 8022978:	429c      	cmp	r4, r3
 802297a:	da20      	bge.n	80229be <__kernel_rem_pio2f+0x47e>
 802297c:	b10f      	cbz	r7, 8022982 <__kernel_rem_pio2f+0x442>
 802297e:	eef1 7a67 	vneg.f32	s15, s15
 8022982:	edc8 7a01 	vstr	s15, [r8, #4]
 8022986:	e7bb      	b.n	8022900 <__kernel_rem_pio2f+0x3c0>
 8022988:	aa30      	add	r2, sp, #192	; 0xc0
 802298a:	ed5f 7a50 	vldr	s15, [pc, #-320]	; 802284c <__kernel_rem_pio2f+0x30c>
 802298e:	4413      	add	r3, r2
 8022990:	2c00      	cmp	r4, #0
 8022992:	da05      	bge.n	80229a0 <__kernel_rem_pio2f+0x460>
 8022994:	b10f      	cbz	r7, 802299a <__kernel_rem_pio2f+0x45a>
 8022996:	eef1 7a67 	vneg.f32	s15, s15
 802299a:	edc8 7a00 	vstr	s15, [r8]
 802299e:	e7af      	b.n	8022900 <__kernel_rem_pio2f+0x3c0>
 80229a0:	ed33 7a01 	vldmdb	r3!, {s14}
 80229a4:	3c01      	subs	r4, #1
 80229a6:	ee77 7a87 	vadd.f32	s15, s15, s14
 80229aa:	e7f1      	b.n	8022990 <__kernel_rem_pio2f+0x450>
 80229ac:	ed73 7a01 	vldmdb	r3!, {s15}
 80229b0:	3a01      	subs	r2, #1
 80229b2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80229b6:	e7d2      	b.n	802295e <__kernel_rem_pio2f+0x41e>
 80229b8:	eef0 7a47 	vmov.f32	s15, s14
 80229bc:	e7d4      	b.n	8022968 <__kernel_rem_pio2f+0x428>
 80229be:	ecb2 7a01 	vldmia	r2!, {s14}
 80229c2:	3301      	adds	r3, #1
 80229c4:	ee77 7a87 	vadd.f32	s15, s15, s14
 80229c8:	e7d6      	b.n	8022978 <__kernel_rem_pio2f+0x438>
 80229ca:	edd1 7a00 	vldr	s15, [r1]
 80229ce:	edd1 6a01 	vldr	s13, [r1, #4]
 80229d2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229d6:	3801      	subs	r0, #1
 80229d8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229dc:	ed81 7a00 	vstr	s14, [r1]
 80229e0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80229e4:	edc1 7a01 	vstr	s15, [r1, #4]
 80229e8:	e799      	b.n	802291e <__kernel_rem_pio2f+0x3de>
 80229ea:	edd2 7a00 	vldr	s15, [r2]
 80229ee:	edd2 6a01 	vldr	s13, [r2, #4]
 80229f2:	ee37 7aa6 	vadd.f32	s14, s15, s13
 80229f6:	3901      	subs	r1, #1
 80229f8:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80229fc:	ed82 7a00 	vstr	s14, [r2]
 8022a00:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8022a04:	edc2 7a01 	vstr	s15, [r2, #4]
 8022a08:	e78e      	b.n	8022928 <__kernel_rem_pio2f+0x3e8>
 8022a0a:	ed33 7a01 	vldmdb	r3!, {s14}
 8022a0e:	3c01      	subs	r4, #1
 8022a10:	ee77 7a87 	vadd.f32	s15, s15, s14
 8022a14:	e78f      	b.n	8022936 <__kernel_rem_pio2f+0x3f6>
 8022a16:	eef1 6a66 	vneg.f32	s13, s13
 8022a1a:	eeb1 7a47 	vneg.f32	s14, s14
 8022a1e:	edc8 6a00 	vstr	s13, [r8]
 8022a22:	ed88 7a01 	vstr	s14, [r8, #4]
 8022a26:	eef1 7a67 	vneg.f32	s15, s15
 8022a2a:	e790      	b.n	802294e <__kernel_rem_pio2f+0x40e>

08022a2c <__kernel_sinf>:
 8022a2c:	ee10 3a10 	vmov	r3, s0
 8022a30:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022a34:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8022a38:	da04      	bge.n	8022a44 <__kernel_sinf+0x18>
 8022a3a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8022a3e:	ee17 3a90 	vmov	r3, s15
 8022a42:	b35b      	cbz	r3, 8022a9c <__kernel_sinf+0x70>
 8022a44:	ee20 7a00 	vmul.f32	s14, s0, s0
 8022a48:	eddf 7a15 	vldr	s15, [pc, #84]	; 8022aa0 <__kernel_sinf+0x74>
 8022a4c:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8022aa4 <__kernel_sinf+0x78>
 8022a50:	eea7 6a27 	vfma.f32	s12, s14, s15
 8022a54:	eddf 7a14 	vldr	s15, [pc, #80]	; 8022aa8 <__kernel_sinf+0x7c>
 8022a58:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022a5c:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8022aac <__kernel_sinf+0x80>
 8022a60:	eea7 6a87 	vfma.f32	s12, s15, s14
 8022a64:	eddf 7a12 	vldr	s15, [pc, #72]	; 8022ab0 <__kernel_sinf+0x84>
 8022a68:	ee60 6a07 	vmul.f32	s13, s0, s14
 8022a6c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8022a70:	b930      	cbnz	r0, 8022a80 <__kernel_sinf+0x54>
 8022a72:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8022ab4 <__kernel_sinf+0x88>
 8022a76:	eea7 6a27 	vfma.f32	s12, s14, s15
 8022a7a:	eea6 0a26 	vfma.f32	s0, s12, s13
 8022a7e:	4770      	bx	lr
 8022a80:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8022a84:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8022a88:	eee0 7a86 	vfma.f32	s15, s1, s12
 8022a8c:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8022a90:	eddf 7a09 	vldr	s15, [pc, #36]	; 8022ab8 <__kernel_sinf+0x8c>
 8022a94:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8022a98:	ee30 0a60 	vsub.f32	s0, s0, s1
 8022a9c:	4770      	bx	lr
 8022a9e:	bf00      	nop
 8022aa0:	2f2ec9d3 	.word	0x2f2ec9d3
 8022aa4:	b2d72f34 	.word	0xb2d72f34
 8022aa8:	3638ef1b 	.word	0x3638ef1b
 8022aac:	b9500d01 	.word	0xb9500d01
 8022ab0:	3c088889 	.word	0x3c088889
 8022ab4:	be2aaaab 	.word	0xbe2aaaab
 8022ab8:	3e2aaaab 	.word	0x3e2aaaab

08022abc <fabsf>:
 8022abc:	ee10 3a10 	vmov	r3, s0
 8022ac0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8022ac4:	ee00 3a10 	vmov	s0, r3
 8022ac8:	4770      	bx	lr
	...

08022acc <scalbnf>:
 8022acc:	ee10 3a10 	vmov	r3, s0
 8022ad0:	f033 4200 	bics.w	r2, r3, #2147483648	; 0x80000000
 8022ad4:	d025      	beq.n	8022b22 <scalbnf+0x56>
 8022ad6:	f1b2 4fff 	cmp.w	r2, #2139095040	; 0x7f800000
 8022ada:	d302      	bcc.n	8022ae2 <scalbnf+0x16>
 8022adc:	ee30 0a00 	vadd.f32	s0, s0, s0
 8022ae0:	4770      	bx	lr
 8022ae2:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 8022ae6:	d122      	bne.n	8022b2e <scalbnf+0x62>
 8022ae8:	4b2a      	ldr	r3, [pc, #168]	; (8022b94 <scalbnf+0xc8>)
 8022aea:	eddf 7a2b 	vldr	s15, [pc, #172]	; 8022b98 <scalbnf+0xcc>
 8022aee:	4298      	cmp	r0, r3
 8022af0:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022af4:	db16      	blt.n	8022b24 <scalbnf+0x58>
 8022af6:	ee10 3a10 	vmov	r3, s0
 8022afa:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8022afe:	3a19      	subs	r2, #25
 8022b00:	4402      	add	r2, r0
 8022b02:	2afe      	cmp	r2, #254	; 0xfe
 8022b04:	dd15      	ble.n	8022b32 <scalbnf+0x66>
 8022b06:	ee10 3a10 	vmov	r3, s0
 8022b0a:	eddf 7a24 	vldr	s15, [pc, #144]	; 8022b9c <scalbnf+0xd0>
 8022b0e:	eddf 6a24 	vldr	s13, [pc, #144]	; 8022ba0 <scalbnf+0xd4>
 8022b12:	2b00      	cmp	r3, #0
 8022b14:	eeb0 7a67 	vmov.f32	s14, s15
 8022b18:	bfb8      	it	lt
 8022b1a:	eef0 7a66 	vmovlt.f32	s15, s13
 8022b1e:	ee27 0a27 	vmul.f32	s0, s14, s15
 8022b22:	4770      	bx	lr
 8022b24:	eddf 7a1f 	vldr	s15, [pc, #124]	; 8022ba4 <scalbnf+0xd8>
 8022b28:	ee20 0a27 	vmul.f32	s0, s0, s15
 8022b2c:	4770      	bx	lr
 8022b2e:	0dd2      	lsrs	r2, r2, #23
 8022b30:	e7e6      	b.n	8022b00 <scalbnf+0x34>
 8022b32:	2a00      	cmp	r2, #0
 8022b34:	dd06      	ble.n	8022b44 <scalbnf+0x78>
 8022b36:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8022b3a:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8022b3e:	ee00 3a10 	vmov	s0, r3
 8022b42:	4770      	bx	lr
 8022b44:	f112 0f16 	cmn.w	r2, #22
 8022b48:	da1a      	bge.n	8022b80 <scalbnf+0xb4>
 8022b4a:	f24c 3350 	movw	r3, #50000	; 0xc350
 8022b4e:	4298      	cmp	r0, r3
 8022b50:	ee10 3a10 	vmov	r3, s0
 8022b54:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 8022b58:	dd0a      	ble.n	8022b70 <scalbnf+0xa4>
 8022b5a:	ed9f 0a10 	vldr	s0, [pc, #64]	; 8022b9c <scalbnf+0xd0>
 8022b5e:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8022ba0 <scalbnf+0xd4>
 8022b62:	eef0 7a40 	vmov.f32	s15, s0
 8022b66:	2b00      	cmp	r3, #0
 8022b68:	bf18      	it	ne
 8022b6a:	eeb0 0a47 	vmovne.f32	s0, s14
 8022b6e:	e7db      	b.n	8022b28 <scalbnf+0x5c>
 8022b70:	ed9f 0a0c 	vldr	s0, [pc, #48]	; 8022ba4 <scalbnf+0xd8>
 8022b74:	ed9f 7a0c 	vldr	s14, [pc, #48]	; 8022ba8 <scalbnf+0xdc>
 8022b78:	eef0 7a40 	vmov.f32	s15, s0
 8022b7c:	2b00      	cmp	r3, #0
 8022b7e:	e7f3      	b.n	8022b68 <scalbnf+0x9c>
 8022b80:	3219      	adds	r2, #25
 8022b82:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8022b86:	ea43 53c2 	orr.w	r3, r3, r2, lsl #23
 8022b8a:	eddf 7a08 	vldr	s15, [pc, #32]	; 8022bac <scalbnf+0xe0>
 8022b8e:	ee07 3a10 	vmov	s14, r3
 8022b92:	e7c4      	b.n	8022b1e <scalbnf+0x52>
 8022b94:	ffff3cb0 	.word	0xffff3cb0
 8022b98:	4c000000 	.word	0x4c000000
 8022b9c:	7149f2ca 	.word	0x7149f2ca
 8022ba0:	f149f2ca 	.word	0xf149f2ca
 8022ba4:	0da24260 	.word	0x0da24260
 8022ba8:	8da24260 	.word	0x8da24260
 8022bac:	33000000 	.word	0x33000000

08022bb0 <abort>:
 8022bb0:	b508      	push	{r3, lr}
 8022bb2:	2006      	movs	r0, #6
 8022bb4:	f001 fa2e 	bl	8024014 <raise>
 8022bb8:	2001      	movs	r0, #1
 8022bba:	f7e0 fac5 	bl	8003148 <_exit>
	...

08022bc0 <__assert_func>:
 8022bc0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8022bc2:	4614      	mov	r4, r2
 8022bc4:	461a      	mov	r2, r3
 8022bc6:	4b09      	ldr	r3, [pc, #36]	; (8022bec <__assert_func+0x2c>)
 8022bc8:	681b      	ldr	r3, [r3, #0]
 8022bca:	4605      	mov	r5, r0
 8022bcc:	68d8      	ldr	r0, [r3, #12]
 8022bce:	b14c      	cbz	r4, 8022be4 <__assert_func+0x24>
 8022bd0:	4b07      	ldr	r3, [pc, #28]	; (8022bf0 <__assert_func+0x30>)
 8022bd2:	9100      	str	r1, [sp, #0]
 8022bd4:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8022bd8:	4906      	ldr	r1, [pc, #24]	; (8022bf4 <__assert_func+0x34>)
 8022bda:	462b      	mov	r3, r5
 8022bdc:	f000 f828 	bl	8022c30 <fiprintf>
 8022be0:	f7ff ffe6 	bl	8022bb0 <abort>
 8022be4:	4b04      	ldr	r3, [pc, #16]	; (8022bf8 <__assert_func+0x38>)
 8022be6:	461c      	mov	r4, r3
 8022be8:	e7f3      	b.n	8022bd2 <__assert_func+0x12>
 8022bea:	bf00      	nop
 8022bec:	200000fc 	.word	0x200000fc
 8022bf0:	0802adc8 	.word	0x0802adc8
 8022bf4:	0802add5 	.word	0x0802add5
 8022bf8:	08028182 	.word	0x08028182

08022bfc <atexit>:
 8022bfc:	2300      	movs	r3, #0
 8022bfe:	4601      	mov	r1, r0
 8022c00:	461a      	mov	r2, r3
 8022c02:	4618      	mov	r0, r3
 8022c04:	f002 b9b0 	b.w	8024f68 <__register_exitproc>

08022c08 <__cxa_atexit>:
 8022c08:	b510      	push	{r4, lr}
 8022c0a:	4c05      	ldr	r4, [pc, #20]	; (8022c20 <__cxa_atexit+0x18>)
 8022c0c:	4613      	mov	r3, r2
 8022c0e:	b12c      	cbz	r4, 8022c1c <__cxa_atexit+0x14>
 8022c10:	460a      	mov	r2, r1
 8022c12:	4601      	mov	r1, r0
 8022c14:	2002      	movs	r0, #2
 8022c16:	f002 f9a7 	bl	8024f68 <__register_exitproc>
 8022c1a:	bd10      	pop	{r4, pc}
 8022c1c:	4620      	mov	r0, r4
 8022c1e:	e7fc      	b.n	8022c1a <__cxa_atexit+0x12>
 8022c20:	08024f69 	.word	0x08024f69

08022c24 <__errno>:
 8022c24:	4b01      	ldr	r3, [pc, #4]	; (8022c2c <__errno+0x8>)
 8022c26:	6818      	ldr	r0, [r3, #0]
 8022c28:	4770      	bx	lr
 8022c2a:	bf00      	nop
 8022c2c:	200000fc 	.word	0x200000fc

08022c30 <fiprintf>:
 8022c30:	b40e      	push	{r1, r2, r3}
 8022c32:	b503      	push	{r0, r1, lr}
 8022c34:	4601      	mov	r1, r0
 8022c36:	ab03      	add	r3, sp, #12
 8022c38:	4805      	ldr	r0, [pc, #20]	; (8022c50 <fiprintf+0x20>)
 8022c3a:	f853 2b04 	ldr.w	r2, [r3], #4
 8022c3e:	6800      	ldr	r0, [r0, #0]
 8022c40:	9301      	str	r3, [sp, #4]
 8022c42:	f000 f95b 	bl	8022efc <_vfiprintf_r>
 8022c46:	b002      	add	sp, #8
 8022c48:	f85d eb04 	ldr.w	lr, [sp], #4
 8022c4c:	b003      	add	sp, #12
 8022c4e:	4770      	bx	lr
 8022c50:	200000fc 	.word	0x200000fc

08022c54 <__libc_init_array>:
 8022c54:	b570      	push	{r4, r5, r6, lr}
 8022c56:	4d0d      	ldr	r5, [pc, #52]	; (8022c8c <__libc_init_array+0x38>)
 8022c58:	4c0d      	ldr	r4, [pc, #52]	; (8022c90 <__libc_init_array+0x3c>)
 8022c5a:	1b64      	subs	r4, r4, r5
 8022c5c:	10a4      	asrs	r4, r4, #2
 8022c5e:	2600      	movs	r6, #0
 8022c60:	42a6      	cmp	r6, r4
 8022c62:	d109      	bne.n	8022c78 <__libc_init_array+0x24>
 8022c64:	4d0b      	ldr	r5, [pc, #44]	; (8022c94 <__libc_init_array+0x40>)
 8022c66:	4c0c      	ldr	r4, [pc, #48]	; (8022c98 <__libc_init_array+0x44>)
 8022c68:	f004 fdae 	bl	80277c8 <_init>
 8022c6c:	1b64      	subs	r4, r4, r5
 8022c6e:	10a4      	asrs	r4, r4, #2
 8022c70:	2600      	movs	r6, #0
 8022c72:	42a6      	cmp	r6, r4
 8022c74:	d105      	bne.n	8022c82 <__libc_init_array+0x2e>
 8022c76:	bd70      	pop	{r4, r5, r6, pc}
 8022c78:	f855 3b04 	ldr.w	r3, [r5], #4
 8022c7c:	4798      	blx	r3
 8022c7e:	3601      	adds	r6, #1
 8022c80:	e7ee      	b.n	8022c60 <__libc_init_array+0xc>
 8022c82:	f855 3b04 	ldr.w	r3, [r5], #4
 8022c86:	4798      	blx	r3
 8022c88:	3601      	adds	r6, #1
 8022c8a:	e7f2      	b.n	8022c72 <__libc_init_array+0x1e>
 8022c8c:	08132a30 	.word	0x08132a30
 8022c90:	08132a30 	.word	0x08132a30
 8022c94:	08132a30 	.word	0x08132a30
 8022c98:	08132a44 	.word	0x08132a44

08022c9c <malloc>:
 8022c9c:	4b02      	ldr	r3, [pc, #8]	; (8022ca8 <malloc+0xc>)
 8022c9e:	4601      	mov	r1, r0
 8022ca0:	6818      	ldr	r0, [r3, #0]
 8022ca2:	f000 b88d 	b.w	8022dc0 <_malloc_r>
 8022ca6:	bf00      	nop
 8022ca8:	200000fc 	.word	0x200000fc

08022cac <free>:
 8022cac:	4b02      	ldr	r3, [pc, #8]	; (8022cb8 <free+0xc>)
 8022cae:	4601      	mov	r1, r0
 8022cb0:	6818      	ldr	r0, [r3, #0]
 8022cb2:	f000 b819 	b.w	8022ce8 <_free_r>
 8022cb6:	bf00      	nop
 8022cb8:	200000fc 	.word	0x200000fc

08022cbc <memcpy>:
 8022cbc:	440a      	add	r2, r1
 8022cbe:	4291      	cmp	r1, r2
 8022cc0:	f100 33ff 	add.w	r3, r0, #4294967295
 8022cc4:	d100      	bne.n	8022cc8 <memcpy+0xc>
 8022cc6:	4770      	bx	lr
 8022cc8:	b510      	push	{r4, lr}
 8022cca:	f811 4b01 	ldrb.w	r4, [r1], #1
 8022cce:	f803 4f01 	strb.w	r4, [r3, #1]!
 8022cd2:	4291      	cmp	r1, r2
 8022cd4:	d1f9      	bne.n	8022cca <memcpy+0xe>
 8022cd6:	bd10      	pop	{r4, pc}

08022cd8 <memset>:
 8022cd8:	4402      	add	r2, r0
 8022cda:	4603      	mov	r3, r0
 8022cdc:	4293      	cmp	r3, r2
 8022cde:	d100      	bne.n	8022ce2 <memset+0xa>
 8022ce0:	4770      	bx	lr
 8022ce2:	f803 1b01 	strb.w	r1, [r3], #1
 8022ce6:	e7f9      	b.n	8022cdc <memset+0x4>

08022ce8 <_free_r>:
 8022ce8:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8022cea:	2900      	cmp	r1, #0
 8022cec:	d044      	beq.n	8022d78 <_free_r+0x90>
 8022cee:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8022cf2:	9001      	str	r0, [sp, #4]
 8022cf4:	2b00      	cmp	r3, #0
 8022cf6:	f1a1 0404 	sub.w	r4, r1, #4
 8022cfa:	bfb8      	it	lt
 8022cfc:	18e4      	addlt	r4, r4, r3
 8022cfe:	f003 fdd1 	bl	80268a4 <__malloc_lock>
 8022d02:	4a1e      	ldr	r2, [pc, #120]	; (8022d7c <_free_r+0x94>)
 8022d04:	9801      	ldr	r0, [sp, #4]
 8022d06:	6813      	ldr	r3, [r2, #0]
 8022d08:	b933      	cbnz	r3, 8022d18 <_free_r+0x30>
 8022d0a:	6063      	str	r3, [r4, #4]
 8022d0c:	6014      	str	r4, [r2, #0]
 8022d0e:	b003      	add	sp, #12
 8022d10:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8022d14:	f003 bdcc 	b.w	80268b0 <__malloc_unlock>
 8022d18:	42a3      	cmp	r3, r4
 8022d1a:	d908      	bls.n	8022d2e <_free_r+0x46>
 8022d1c:	6825      	ldr	r5, [r4, #0]
 8022d1e:	1961      	adds	r1, r4, r5
 8022d20:	428b      	cmp	r3, r1
 8022d22:	bf01      	itttt	eq
 8022d24:	6819      	ldreq	r1, [r3, #0]
 8022d26:	685b      	ldreq	r3, [r3, #4]
 8022d28:	1949      	addeq	r1, r1, r5
 8022d2a:	6021      	streq	r1, [r4, #0]
 8022d2c:	e7ed      	b.n	8022d0a <_free_r+0x22>
 8022d2e:	461a      	mov	r2, r3
 8022d30:	685b      	ldr	r3, [r3, #4]
 8022d32:	b10b      	cbz	r3, 8022d38 <_free_r+0x50>
 8022d34:	42a3      	cmp	r3, r4
 8022d36:	d9fa      	bls.n	8022d2e <_free_r+0x46>
 8022d38:	6811      	ldr	r1, [r2, #0]
 8022d3a:	1855      	adds	r5, r2, r1
 8022d3c:	42a5      	cmp	r5, r4
 8022d3e:	d10b      	bne.n	8022d58 <_free_r+0x70>
 8022d40:	6824      	ldr	r4, [r4, #0]
 8022d42:	4421      	add	r1, r4
 8022d44:	1854      	adds	r4, r2, r1
 8022d46:	42a3      	cmp	r3, r4
 8022d48:	6011      	str	r1, [r2, #0]
 8022d4a:	d1e0      	bne.n	8022d0e <_free_r+0x26>
 8022d4c:	681c      	ldr	r4, [r3, #0]
 8022d4e:	685b      	ldr	r3, [r3, #4]
 8022d50:	6053      	str	r3, [r2, #4]
 8022d52:	4421      	add	r1, r4
 8022d54:	6011      	str	r1, [r2, #0]
 8022d56:	e7da      	b.n	8022d0e <_free_r+0x26>
 8022d58:	d902      	bls.n	8022d60 <_free_r+0x78>
 8022d5a:	230c      	movs	r3, #12
 8022d5c:	6003      	str	r3, [r0, #0]
 8022d5e:	e7d6      	b.n	8022d0e <_free_r+0x26>
 8022d60:	6825      	ldr	r5, [r4, #0]
 8022d62:	1961      	adds	r1, r4, r5
 8022d64:	428b      	cmp	r3, r1
 8022d66:	bf04      	itt	eq
 8022d68:	6819      	ldreq	r1, [r3, #0]
 8022d6a:	685b      	ldreq	r3, [r3, #4]
 8022d6c:	6063      	str	r3, [r4, #4]
 8022d6e:	bf04      	itt	eq
 8022d70:	1949      	addeq	r1, r1, r5
 8022d72:	6021      	streq	r1, [r4, #0]
 8022d74:	6054      	str	r4, [r2, #4]
 8022d76:	e7ca      	b.n	8022d0e <_free_r+0x26>
 8022d78:	b003      	add	sp, #12
 8022d7a:	bd30      	pop	{r4, r5, pc}
 8022d7c:	2001385c 	.word	0x2001385c

08022d80 <sbrk_aligned>:
 8022d80:	b570      	push	{r4, r5, r6, lr}
 8022d82:	4e0e      	ldr	r6, [pc, #56]	; (8022dbc <sbrk_aligned+0x3c>)
 8022d84:	460c      	mov	r4, r1
 8022d86:	6831      	ldr	r1, [r6, #0]
 8022d88:	4605      	mov	r5, r0
 8022d8a:	b911      	cbnz	r1, 8022d92 <sbrk_aligned+0x12>
 8022d8c:	f001 f904 	bl	8023f98 <_sbrk_r>
 8022d90:	6030      	str	r0, [r6, #0]
 8022d92:	4621      	mov	r1, r4
 8022d94:	4628      	mov	r0, r5
 8022d96:	f001 f8ff 	bl	8023f98 <_sbrk_r>
 8022d9a:	1c43      	adds	r3, r0, #1
 8022d9c:	d00a      	beq.n	8022db4 <sbrk_aligned+0x34>
 8022d9e:	1cc4      	adds	r4, r0, #3
 8022da0:	f024 0403 	bic.w	r4, r4, #3
 8022da4:	42a0      	cmp	r0, r4
 8022da6:	d007      	beq.n	8022db8 <sbrk_aligned+0x38>
 8022da8:	1a21      	subs	r1, r4, r0
 8022daa:	4628      	mov	r0, r5
 8022dac:	f001 f8f4 	bl	8023f98 <_sbrk_r>
 8022db0:	3001      	adds	r0, #1
 8022db2:	d101      	bne.n	8022db8 <sbrk_aligned+0x38>
 8022db4:	f04f 34ff 	mov.w	r4, #4294967295
 8022db8:	4620      	mov	r0, r4
 8022dba:	bd70      	pop	{r4, r5, r6, pc}
 8022dbc:	20013860 	.word	0x20013860

08022dc0 <_malloc_r>:
 8022dc0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8022dc4:	1ccd      	adds	r5, r1, #3
 8022dc6:	f025 0503 	bic.w	r5, r5, #3
 8022dca:	3508      	adds	r5, #8
 8022dcc:	2d0c      	cmp	r5, #12
 8022dce:	bf38      	it	cc
 8022dd0:	250c      	movcc	r5, #12
 8022dd2:	2d00      	cmp	r5, #0
 8022dd4:	4607      	mov	r7, r0
 8022dd6:	db01      	blt.n	8022ddc <_malloc_r+0x1c>
 8022dd8:	42a9      	cmp	r1, r5
 8022dda:	d905      	bls.n	8022de8 <_malloc_r+0x28>
 8022ddc:	230c      	movs	r3, #12
 8022dde:	603b      	str	r3, [r7, #0]
 8022de0:	2600      	movs	r6, #0
 8022de2:	4630      	mov	r0, r6
 8022de4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8022de8:	4e2e      	ldr	r6, [pc, #184]	; (8022ea4 <_malloc_r+0xe4>)
 8022dea:	f003 fd5b 	bl	80268a4 <__malloc_lock>
 8022dee:	6833      	ldr	r3, [r6, #0]
 8022df0:	461c      	mov	r4, r3
 8022df2:	bb34      	cbnz	r4, 8022e42 <_malloc_r+0x82>
 8022df4:	4629      	mov	r1, r5
 8022df6:	4638      	mov	r0, r7
 8022df8:	f7ff ffc2 	bl	8022d80 <sbrk_aligned>
 8022dfc:	1c43      	adds	r3, r0, #1
 8022dfe:	4604      	mov	r4, r0
 8022e00:	d14d      	bne.n	8022e9e <_malloc_r+0xde>
 8022e02:	6834      	ldr	r4, [r6, #0]
 8022e04:	4626      	mov	r6, r4
 8022e06:	2e00      	cmp	r6, #0
 8022e08:	d140      	bne.n	8022e8c <_malloc_r+0xcc>
 8022e0a:	6823      	ldr	r3, [r4, #0]
 8022e0c:	4631      	mov	r1, r6
 8022e0e:	4638      	mov	r0, r7
 8022e10:	eb04 0803 	add.w	r8, r4, r3
 8022e14:	f001 f8c0 	bl	8023f98 <_sbrk_r>
 8022e18:	4580      	cmp	r8, r0
 8022e1a:	d13a      	bne.n	8022e92 <_malloc_r+0xd2>
 8022e1c:	6821      	ldr	r1, [r4, #0]
 8022e1e:	3503      	adds	r5, #3
 8022e20:	1a6d      	subs	r5, r5, r1
 8022e22:	f025 0503 	bic.w	r5, r5, #3
 8022e26:	3508      	adds	r5, #8
 8022e28:	2d0c      	cmp	r5, #12
 8022e2a:	bf38      	it	cc
 8022e2c:	250c      	movcc	r5, #12
 8022e2e:	4629      	mov	r1, r5
 8022e30:	4638      	mov	r0, r7
 8022e32:	f7ff ffa5 	bl	8022d80 <sbrk_aligned>
 8022e36:	3001      	adds	r0, #1
 8022e38:	d02b      	beq.n	8022e92 <_malloc_r+0xd2>
 8022e3a:	6823      	ldr	r3, [r4, #0]
 8022e3c:	442b      	add	r3, r5
 8022e3e:	6023      	str	r3, [r4, #0]
 8022e40:	e00e      	b.n	8022e60 <_malloc_r+0xa0>
 8022e42:	6822      	ldr	r2, [r4, #0]
 8022e44:	1b52      	subs	r2, r2, r5
 8022e46:	d41e      	bmi.n	8022e86 <_malloc_r+0xc6>
 8022e48:	2a0b      	cmp	r2, #11
 8022e4a:	d916      	bls.n	8022e7a <_malloc_r+0xba>
 8022e4c:	1961      	adds	r1, r4, r5
 8022e4e:	42a3      	cmp	r3, r4
 8022e50:	6025      	str	r5, [r4, #0]
 8022e52:	bf18      	it	ne
 8022e54:	6059      	strne	r1, [r3, #4]
 8022e56:	6863      	ldr	r3, [r4, #4]
 8022e58:	bf08      	it	eq
 8022e5a:	6031      	streq	r1, [r6, #0]
 8022e5c:	5162      	str	r2, [r4, r5]
 8022e5e:	604b      	str	r3, [r1, #4]
 8022e60:	4638      	mov	r0, r7
 8022e62:	f104 060b 	add.w	r6, r4, #11
 8022e66:	f003 fd23 	bl	80268b0 <__malloc_unlock>
 8022e6a:	f026 0607 	bic.w	r6, r6, #7
 8022e6e:	1d23      	adds	r3, r4, #4
 8022e70:	1af2      	subs	r2, r6, r3
 8022e72:	d0b6      	beq.n	8022de2 <_malloc_r+0x22>
 8022e74:	1b9b      	subs	r3, r3, r6
 8022e76:	50a3      	str	r3, [r4, r2]
 8022e78:	e7b3      	b.n	8022de2 <_malloc_r+0x22>
 8022e7a:	6862      	ldr	r2, [r4, #4]
 8022e7c:	42a3      	cmp	r3, r4
 8022e7e:	bf0c      	ite	eq
 8022e80:	6032      	streq	r2, [r6, #0]
 8022e82:	605a      	strne	r2, [r3, #4]
 8022e84:	e7ec      	b.n	8022e60 <_malloc_r+0xa0>
 8022e86:	4623      	mov	r3, r4
 8022e88:	6864      	ldr	r4, [r4, #4]
 8022e8a:	e7b2      	b.n	8022df2 <_malloc_r+0x32>
 8022e8c:	4634      	mov	r4, r6
 8022e8e:	6876      	ldr	r6, [r6, #4]
 8022e90:	e7b9      	b.n	8022e06 <_malloc_r+0x46>
 8022e92:	230c      	movs	r3, #12
 8022e94:	603b      	str	r3, [r7, #0]
 8022e96:	4638      	mov	r0, r7
 8022e98:	f003 fd0a 	bl	80268b0 <__malloc_unlock>
 8022e9c:	e7a1      	b.n	8022de2 <_malloc_r+0x22>
 8022e9e:	6025      	str	r5, [r4, #0]
 8022ea0:	e7de      	b.n	8022e60 <_malloc_r+0xa0>
 8022ea2:	bf00      	nop
 8022ea4:	2001385c 	.word	0x2001385c

08022ea8 <__sfputc_r>:
 8022ea8:	6893      	ldr	r3, [r2, #8]
 8022eaa:	3b01      	subs	r3, #1
 8022eac:	2b00      	cmp	r3, #0
 8022eae:	b410      	push	{r4}
 8022eb0:	6093      	str	r3, [r2, #8]
 8022eb2:	da08      	bge.n	8022ec6 <__sfputc_r+0x1e>
 8022eb4:	6994      	ldr	r4, [r2, #24]
 8022eb6:	42a3      	cmp	r3, r4
 8022eb8:	db01      	blt.n	8022ebe <__sfputc_r+0x16>
 8022eba:	290a      	cmp	r1, #10
 8022ebc:	d103      	bne.n	8022ec6 <__sfputc_r+0x1e>
 8022ebe:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022ec2:	f001 bf91 	b.w	8024de8 <__swbuf_r>
 8022ec6:	6813      	ldr	r3, [r2, #0]
 8022ec8:	1c58      	adds	r0, r3, #1
 8022eca:	6010      	str	r0, [r2, #0]
 8022ecc:	7019      	strb	r1, [r3, #0]
 8022ece:	4608      	mov	r0, r1
 8022ed0:	f85d 4b04 	ldr.w	r4, [sp], #4
 8022ed4:	4770      	bx	lr

08022ed6 <__sfputs_r>:
 8022ed6:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8022ed8:	4606      	mov	r6, r0
 8022eda:	460f      	mov	r7, r1
 8022edc:	4614      	mov	r4, r2
 8022ede:	18d5      	adds	r5, r2, r3
 8022ee0:	42ac      	cmp	r4, r5
 8022ee2:	d101      	bne.n	8022ee8 <__sfputs_r+0x12>
 8022ee4:	2000      	movs	r0, #0
 8022ee6:	e007      	b.n	8022ef8 <__sfputs_r+0x22>
 8022ee8:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022eec:	463a      	mov	r2, r7
 8022eee:	4630      	mov	r0, r6
 8022ef0:	f7ff ffda 	bl	8022ea8 <__sfputc_r>
 8022ef4:	1c43      	adds	r3, r0, #1
 8022ef6:	d1f3      	bne.n	8022ee0 <__sfputs_r+0xa>
 8022ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08022efc <_vfiprintf_r>:
 8022efc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022f00:	460d      	mov	r5, r1
 8022f02:	b09d      	sub	sp, #116	; 0x74
 8022f04:	4614      	mov	r4, r2
 8022f06:	4698      	mov	r8, r3
 8022f08:	4606      	mov	r6, r0
 8022f0a:	b118      	cbz	r0, 8022f14 <_vfiprintf_r+0x18>
 8022f0c:	6983      	ldr	r3, [r0, #24]
 8022f0e:	b90b      	cbnz	r3, 8022f14 <_vfiprintf_r+0x18>
 8022f10:	f003 f822 	bl	8025f58 <__sinit>
 8022f14:	4b89      	ldr	r3, [pc, #548]	; (802313c <_vfiprintf_r+0x240>)
 8022f16:	429d      	cmp	r5, r3
 8022f18:	d11b      	bne.n	8022f52 <_vfiprintf_r+0x56>
 8022f1a:	6875      	ldr	r5, [r6, #4]
 8022f1c:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8022f1e:	07d9      	lsls	r1, r3, #31
 8022f20:	d405      	bmi.n	8022f2e <_vfiprintf_r+0x32>
 8022f22:	89ab      	ldrh	r3, [r5, #12]
 8022f24:	059a      	lsls	r2, r3, #22
 8022f26:	d402      	bmi.n	8022f2e <_vfiprintf_r+0x32>
 8022f28:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022f2a:	f003 fc26 	bl	802677a <__retarget_lock_acquire_recursive>
 8022f2e:	89ab      	ldrh	r3, [r5, #12]
 8022f30:	071b      	lsls	r3, r3, #28
 8022f32:	d501      	bpl.n	8022f38 <_vfiprintf_r+0x3c>
 8022f34:	692b      	ldr	r3, [r5, #16]
 8022f36:	b9eb      	cbnz	r3, 8022f74 <_vfiprintf_r+0x78>
 8022f38:	4629      	mov	r1, r5
 8022f3a:	4630      	mov	r0, r6
 8022f3c:	f001 ffa6 	bl	8024e8c <__swsetup_r>
 8022f40:	b1c0      	cbz	r0, 8022f74 <_vfiprintf_r+0x78>
 8022f42:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8022f44:	07dc      	lsls	r4, r3, #31
 8022f46:	d50e      	bpl.n	8022f66 <_vfiprintf_r+0x6a>
 8022f48:	f04f 30ff 	mov.w	r0, #4294967295
 8022f4c:	b01d      	add	sp, #116	; 0x74
 8022f4e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022f52:	4b7b      	ldr	r3, [pc, #492]	; (8023140 <_vfiprintf_r+0x244>)
 8022f54:	429d      	cmp	r5, r3
 8022f56:	d101      	bne.n	8022f5c <_vfiprintf_r+0x60>
 8022f58:	68b5      	ldr	r5, [r6, #8]
 8022f5a:	e7df      	b.n	8022f1c <_vfiprintf_r+0x20>
 8022f5c:	4b79      	ldr	r3, [pc, #484]	; (8023144 <_vfiprintf_r+0x248>)
 8022f5e:	429d      	cmp	r5, r3
 8022f60:	bf08      	it	eq
 8022f62:	68f5      	ldreq	r5, [r6, #12]
 8022f64:	e7da      	b.n	8022f1c <_vfiprintf_r+0x20>
 8022f66:	89ab      	ldrh	r3, [r5, #12]
 8022f68:	0598      	lsls	r0, r3, #22
 8022f6a:	d4ed      	bmi.n	8022f48 <_vfiprintf_r+0x4c>
 8022f6c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8022f6e:	f003 fc06 	bl	802677e <__retarget_lock_release_recursive>
 8022f72:	e7e9      	b.n	8022f48 <_vfiprintf_r+0x4c>
 8022f74:	2300      	movs	r3, #0
 8022f76:	9309      	str	r3, [sp, #36]	; 0x24
 8022f78:	2320      	movs	r3, #32
 8022f7a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8022f7e:	f8cd 800c 	str.w	r8, [sp, #12]
 8022f82:	2330      	movs	r3, #48	; 0x30
 8022f84:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8023148 <_vfiprintf_r+0x24c>
 8022f88:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8022f8c:	f04f 0901 	mov.w	r9, #1
 8022f90:	4623      	mov	r3, r4
 8022f92:	469a      	mov	sl, r3
 8022f94:	f813 2b01 	ldrb.w	r2, [r3], #1
 8022f98:	b10a      	cbz	r2, 8022f9e <_vfiprintf_r+0xa2>
 8022f9a:	2a25      	cmp	r2, #37	; 0x25
 8022f9c:	d1f9      	bne.n	8022f92 <_vfiprintf_r+0x96>
 8022f9e:	ebba 0b04 	subs.w	fp, sl, r4
 8022fa2:	d00b      	beq.n	8022fbc <_vfiprintf_r+0xc0>
 8022fa4:	465b      	mov	r3, fp
 8022fa6:	4622      	mov	r2, r4
 8022fa8:	4629      	mov	r1, r5
 8022faa:	4630      	mov	r0, r6
 8022fac:	f7ff ff93 	bl	8022ed6 <__sfputs_r>
 8022fb0:	3001      	adds	r0, #1
 8022fb2:	f000 80aa 	beq.w	802310a <_vfiprintf_r+0x20e>
 8022fb6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8022fb8:	445a      	add	r2, fp
 8022fba:	9209      	str	r2, [sp, #36]	; 0x24
 8022fbc:	f89a 3000 	ldrb.w	r3, [sl]
 8022fc0:	2b00      	cmp	r3, #0
 8022fc2:	f000 80a2 	beq.w	802310a <_vfiprintf_r+0x20e>
 8022fc6:	2300      	movs	r3, #0
 8022fc8:	f04f 32ff 	mov.w	r2, #4294967295
 8022fcc:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8022fd0:	f10a 0a01 	add.w	sl, sl, #1
 8022fd4:	9304      	str	r3, [sp, #16]
 8022fd6:	9307      	str	r3, [sp, #28]
 8022fd8:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8022fdc:	931a      	str	r3, [sp, #104]	; 0x68
 8022fde:	4654      	mov	r4, sl
 8022fe0:	2205      	movs	r2, #5
 8022fe2:	f814 1b01 	ldrb.w	r1, [r4], #1
 8022fe6:	4858      	ldr	r0, [pc, #352]	; (8023148 <_vfiprintf_r+0x24c>)
 8022fe8:	f7dd f90a 	bl	8000200 <memchr>
 8022fec:	9a04      	ldr	r2, [sp, #16]
 8022fee:	b9d8      	cbnz	r0, 8023028 <_vfiprintf_r+0x12c>
 8022ff0:	06d1      	lsls	r1, r2, #27
 8022ff2:	bf44      	itt	mi
 8022ff4:	2320      	movmi	r3, #32
 8022ff6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8022ffa:	0713      	lsls	r3, r2, #28
 8022ffc:	bf44      	itt	mi
 8022ffe:	232b      	movmi	r3, #43	; 0x2b
 8023000:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8023004:	f89a 3000 	ldrb.w	r3, [sl]
 8023008:	2b2a      	cmp	r3, #42	; 0x2a
 802300a:	d015      	beq.n	8023038 <_vfiprintf_r+0x13c>
 802300c:	9a07      	ldr	r2, [sp, #28]
 802300e:	4654      	mov	r4, sl
 8023010:	2000      	movs	r0, #0
 8023012:	f04f 0c0a 	mov.w	ip, #10
 8023016:	4621      	mov	r1, r4
 8023018:	f811 3b01 	ldrb.w	r3, [r1], #1
 802301c:	3b30      	subs	r3, #48	; 0x30
 802301e:	2b09      	cmp	r3, #9
 8023020:	d94e      	bls.n	80230c0 <_vfiprintf_r+0x1c4>
 8023022:	b1b0      	cbz	r0, 8023052 <_vfiprintf_r+0x156>
 8023024:	9207      	str	r2, [sp, #28]
 8023026:	e014      	b.n	8023052 <_vfiprintf_r+0x156>
 8023028:	eba0 0308 	sub.w	r3, r0, r8
 802302c:	fa09 f303 	lsl.w	r3, r9, r3
 8023030:	4313      	orrs	r3, r2
 8023032:	9304      	str	r3, [sp, #16]
 8023034:	46a2      	mov	sl, r4
 8023036:	e7d2      	b.n	8022fde <_vfiprintf_r+0xe2>
 8023038:	9b03      	ldr	r3, [sp, #12]
 802303a:	1d19      	adds	r1, r3, #4
 802303c:	681b      	ldr	r3, [r3, #0]
 802303e:	9103      	str	r1, [sp, #12]
 8023040:	2b00      	cmp	r3, #0
 8023042:	bfbb      	ittet	lt
 8023044:	425b      	neglt	r3, r3
 8023046:	f042 0202 	orrlt.w	r2, r2, #2
 802304a:	9307      	strge	r3, [sp, #28]
 802304c:	9307      	strlt	r3, [sp, #28]
 802304e:	bfb8      	it	lt
 8023050:	9204      	strlt	r2, [sp, #16]
 8023052:	7823      	ldrb	r3, [r4, #0]
 8023054:	2b2e      	cmp	r3, #46	; 0x2e
 8023056:	d10c      	bne.n	8023072 <_vfiprintf_r+0x176>
 8023058:	7863      	ldrb	r3, [r4, #1]
 802305a:	2b2a      	cmp	r3, #42	; 0x2a
 802305c:	d135      	bne.n	80230ca <_vfiprintf_r+0x1ce>
 802305e:	9b03      	ldr	r3, [sp, #12]
 8023060:	1d1a      	adds	r2, r3, #4
 8023062:	681b      	ldr	r3, [r3, #0]
 8023064:	9203      	str	r2, [sp, #12]
 8023066:	2b00      	cmp	r3, #0
 8023068:	bfb8      	it	lt
 802306a:	f04f 33ff 	movlt.w	r3, #4294967295
 802306e:	3402      	adds	r4, #2
 8023070:	9305      	str	r3, [sp, #20]
 8023072:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8023158 <_vfiprintf_r+0x25c>
 8023076:	7821      	ldrb	r1, [r4, #0]
 8023078:	2203      	movs	r2, #3
 802307a:	4650      	mov	r0, sl
 802307c:	f7dd f8c0 	bl	8000200 <memchr>
 8023080:	b140      	cbz	r0, 8023094 <_vfiprintf_r+0x198>
 8023082:	2340      	movs	r3, #64	; 0x40
 8023084:	eba0 000a 	sub.w	r0, r0, sl
 8023088:	fa03 f000 	lsl.w	r0, r3, r0
 802308c:	9b04      	ldr	r3, [sp, #16]
 802308e:	4303      	orrs	r3, r0
 8023090:	3401      	adds	r4, #1
 8023092:	9304      	str	r3, [sp, #16]
 8023094:	f814 1b01 	ldrb.w	r1, [r4], #1
 8023098:	482c      	ldr	r0, [pc, #176]	; (802314c <_vfiprintf_r+0x250>)
 802309a:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 802309e:	2206      	movs	r2, #6
 80230a0:	f7dd f8ae 	bl	8000200 <memchr>
 80230a4:	2800      	cmp	r0, #0
 80230a6:	d03f      	beq.n	8023128 <_vfiprintf_r+0x22c>
 80230a8:	4b29      	ldr	r3, [pc, #164]	; (8023150 <_vfiprintf_r+0x254>)
 80230aa:	bb1b      	cbnz	r3, 80230f4 <_vfiprintf_r+0x1f8>
 80230ac:	9b03      	ldr	r3, [sp, #12]
 80230ae:	3307      	adds	r3, #7
 80230b0:	f023 0307 	bic.w	r3, r3, #7
 80230b4:	3308      	adds	r3, #8
 80230b6:	9303      	str	r3, [sp, #12]
 80230b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80230ba:	443b      	add	r3, r7
 80230bc:	9309      	str	r3, [sp, #36]	; 0x24
 80230be:	e767      	b.n	8022f90 <_vfiprintf_r+0x94>
 80230c0:	fb0c 3202 	mla	r2, ip, r2, r3
 80230c4:	460c      	mov	r4, r1
 80230c6:	2001      	movs	r0, #1
 80230c8:	e7a5      	b.n	8023016 <_vfiprintf_r+0x11a>
 80230ca:	2300      	movs	r3, #0
 80230cc:	3401      	adds	r4, #1
 80230ce:	9305      	str	r3, [sp, #20]
 80230d0:	4619      	mov	r1, r3
 80230d2:	f04f 0c0a 	mov.w	ip, #10
 80230d6:	4620      	mov	r0, r4
 80230d8:	f810 2b01 	ldrb.w	r2, [r0], #1
 80230dc:	3a30      	subs	r2, #48	; 0x30
 80230de:	2a09      	cmp	r2, #9
 80230e0:	d903      	bls.n	80230ea <_vfiprintf_r+0x1ee>
 80230e2:	2b00      	cmp	r3, #0
 80230e4:	d0c5      	beq.n	8023072 <_vfiprintf_r+0x176>
 80230e6:	9105      	str	r1, [sp, #20]
 80230e8:	e7c3      	b.n	8023072 <_vfiprintf_r+0x176>
 80230ea:	fb0c 2101 	mla	r1, ip, r1, r2
 80230ee:	4604      	mov	r4, r0
 80230f0:	2301      	movs	r3, #1
 80230f2:	e7f0      	b.n	80230d6 <_vfiprintf_r+0x1da>
 80230f4:	ab03      	add	r3, sp, #12
 80230f6:	9300      	str	r3, [sp, #0]
 80230f8:	462a      	mov	r2, r5
 80230fa:	4b16      	ldr	r3, [pc, #88]	; (8023154 <_vfiprintf_r+0x258>)
 80230fc:	a904      	add	r1, sp, #16
 80230fe:	4630      	mov	r0, r6
 8023100:	f000 f8cc 	bl	802329c <_printf_float>
 8023104:	4607      	mov	r7, r0
 8023106:	1c78      	adds	r0, r7, #1
 8023108:	d1d6      	bne.n	80230b8 <_vfiprintf_r+0x1bc>
 802310a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 802310c:	07d9      	lsls	r1, r3, #31
 802310e:	d405      	bmi.n	802311c <_vfiprintf_r+0x220>
 8023110:	89ab      	ldrh	r3, [r5, #12]
 8023112:	059a      	lsls	r2, r3, #22
 8023114:	d402      	bmi.n	802311c <_vfiprintf_r+0x220>
 8023116:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8023118:	f003 fb31 	bl	802677e <__retarget_lock_release_recursive>
 802311c:	89ab      	ldrh	r3, [r5, #12]
 802311e:	065b      	lsls	r3, r3, #25
 8023120:	f53f af12 	bmi.w	8022f48 <_vfiprintf_r+0x4c>
 8023124:	9809      	ldr	r0, [sp, #36]	; 0x24
 8023126:	e711      	b.n	8022f4c <_vfiprintf_r+0x50>
 8023128:	ab03      	add	r3, sp, #12
 802312a:	9300      	str	r3, [sp, #0]
 802312c:	462a      	mov	r2, r5
 802312e:	4b09      	ldr	r3, [pc, #36]	; (8023154 <_vfiprintf_r+0x258>)
 8023130:	a904      	add	r1, sp, #16
 8023132:	4630      	mov	r0, r6
 8023134:	f000 fb56 	bl	80237e4 <_printf_i>
 8023138:	e7e4      	b.n	8023104 <_vfiprintf_r+0x208>
 802313a:	bf00      	nop
 802313c:	0802b05c 	.word	0x0802b05c
 8023140:	0802b07c 	.word	0x0802b07c
 8023144:	0802b03c 	.word	0x0802b03c
 8023148:	0802ae08 	.word	0x0802ae08
 802314c:	0802ae12 	.word	0x0802ae12
 8023150:	0802329d 	.word	0x0802329d
 8023154:	08022ed7 	.word	0x08022ed7
 8023158:	0802ae0e 	.word	0x0802ae0e

0802315c <__cvt>:
 802315c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8023160:	ec55 4b10 	vmov	r4, r5, d0
 8023164:	2d00      	cmp	r5, #0
 8023166:	460e      	mov	r6, r1
 8023168:	4619      	mov	r1, r3
 802316a:	462b      	mov	r3, r5
 802316c:	bfbb      	ittet	lt
 802316e:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 8023172:	461d      	movlt	r5, r3
 8023174:	2300      	movge	r3, #0
 8023176:	232d      	movlt	r3, #45	; 0x2d
 8023178:	700b      	strb	r3, [r1, #0]
 802317a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 802317c:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 8023180:	4691      	mov	r9, r2
 8023182:	f023 0820 	bic.w	r8, r3, #32
 8023186:	bfbc      	itt	lt
 8023188:	4622      	movlt	r2, r4
 802318a:	4614      	movlt	r4, r2
 802318c:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 8023190:	d005      	beq.n	802319e <__cvt+0x42>
 8023192:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 8023196:	d100      	bne.n	802319a <__cvt+0x3e>
 8023198:	3601      	adds	r6, #1
 802319a:	2102      	movs	r1, #2
 802319c:	e000      	b.n	80231a0 <__cvt+0x44>
 802319e:	2103      	movs	r1, #3
 80231a0:	ab03      	add	r3, sp, #12
 80231a2:	9301      	str	r3, [sp, #4]
 80231a4:	ab02      	add	r3, sp, #8
 80231a6:	9300      	str	r3, [sp, #0]
 80231a8:	ec45 4b10 	vmov	d0, r4, r5
 80231ac:	4653      	mov	r3, sl
 80231ae:	4632      	mov	r2, r6
 80231b0:	f001 ffca 	bl	8025148 <_dtoa_r>
 80231b4:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80231b8:	4607      	mov	r7, r0
 80231ba:	d102      	bne.n	80231c2 <__cvt+0x66>
 80231bc:	f019 0f01 	tst.w	r9, #1
 80231c0:	d022      	beq.n	8023208 <__cvt+0xac>
 80231c2:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80231c6:	eb07 0906 	add.w	r9, r7, r6
 80231ca:	d110      	bne.n	80231ee <__cvt+0x92>
 80231cc:	783b      	ldrb	r3, [r7, #0]
 80231ce:	2b30      	cmp	r3, #48	; 0x30
 80231d0:	d10a      	bne.n	80231e8 <__cvt+0x8c>
 80231d2:	2200      	movs	r2, #0
 80231d4:	2300      	movs	r3, #0
 80231d6:	4620      	mov	r0, r4
 80231d8:	4629      	mov	r1, r5
 80231da:	f7dd fc85 	bl	8000ae8 <__aeabi_dcmpeq>
 80231de:	b918      	cbnz	r0, 80231e8 <__cvt+0x8c>
 80231e0:	f1c6 0601 	rsb	r6, r6, #1
 80231e4:	f8ca 6000 	str.w	r6, [sl]
 80231e8:	f8da 3000 	ldr.w	r3, [sl]
 80231ec:	4499      	add	r9, r3
 80231ee:	2200      	movs	r2, #0
 80231f0:	2300      	movs	r3, #0
 80231f2:	4620      	mov	r0, r4
 80231f4:	4629      	mov	r1, r5
 80231f6:	f7dd fc77 	bl	8000ae8 <__aeabi_dcmpeq>
 80231fa:	b108      	cbz	r0, 8023200 <__cvt+0xa4>
 80231fc:	f8cd 900c 	str.w	r9, [sp, #12]
 8023200:	2230      	movs	r2, #48	; 0x30
 8023202:	9b03      	ldr	r3, [sp, #12]
 8023204:	454b      	cmp	r3, r9
 8023206:	d307      	bcc.n	8023218 <__cvt+0xbc>
 8023208:	9b03      	ldr	r3, [sp, #12]
 802320a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802320c:	1bdb      	subs	r3, r3, r7
 802320e:	4638      	mov	r0, r7
 8023210:	6013      	str	r3, [r2, #0]
 8023212:	b004      	add	sp, #16
 8023214:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023218:	1c59      	adds	r1, r3, #1
 802321a:	9103      	str	r1, [sp, #12]
 802321c:	701a      	strb	r2, [r3, #0]
 802321e:	e7f0      	b.n	8023202 <__cvt+0xa6>

08023220 <__exponent>:
 8023220:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8023222:	4603      	mov	r3, r0
 8023224:	2900      	cmp	r1, #0
 8023226:	bfb8      	it	lt
 8023228:	4249      	neglt	r1, r1
 802322a:	f803 2b02 	strb.w	r2, [r3], #2
 802322e:	bfb4      	ite	lt
 8023230:	222d      	movlt	r2, #45	; 0x2d
 8023232:	222b      	movge	r2, #43	; 0x2b
 8023234:	2909      	cmp	r1, #9
 8023236:	7042      	strb	r2, [r0, #1]
 8023238:	dd2a      	ble.n	8023290 <__exponent+0x70>
 802323a:	f10d 0407 	add.w	r4, sp, #7
 802323e:	46a4      	mov	ip, r4
 8023240:	270a      	movs	r7, #10
 8023242:	46a6      	mov	lr, r4
 8023244:	460a      	mov	r2, r1
 8023246:	fb91 f6f7 	sdiv	r6, r1, r7
 802324a:	fb07 1516 	mls	r5, r7, r6, r1
 802324e:	3530      	adds	r5, #48	; 0x30
 8023250:	2a63      	cmp	r2, #99	; 0x63
 8023252:	f104 34ff 	add.w	r4, r4, #4294967295
 8023256:	f80e 5c01 	strb.w	r5, [lr, #-1]
 802325a:	4631      	mov	r1, r6
 802325c:	dcf1      	bgt.n	8023242 <__exponent+0x22>
 802325e:	3130      	adds	r1, #48	; 0x30
 8023260:	f1ae 0502 	sub.w	r5, lr, #2
 8023264:	f804 1c01 	strb.w	r1, [r4, #-1]
 8023268:	1c44      	adds	r4, r0, #1
 802326a:	4629      	mov	r1, r5
 802326c:	4561      	cmp	r1, ip
 802326e:	d30a      	bcc.n	8023286 <__exponent+0x66>
 8023270:	f10d 0209 	add.w	r2, sp, #9
 8023274:	eba2 020e 	sub.w	r2, r2, lr
 8023278:	4565      	cmp	r5, ip
 802327a:	bf88      	it	hi
 802327c:	2200      	movhi	r2, #0
 802327e:	4413      	add	r3, r2
 8023280:	1a18      	subs	r0, r3, r0
 8023282:	b003      	add	sp, #12
 8023284:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8023286:	f811 2b01 	ldrb.w	r2, [r1], #1
 802328a:	f804 2f01 	strb.w	r2, [r4, #1]!
 802328e:	e7ed      	b.n	802326c <__exponent+0x4c>
 8023290:	2330      	movs	r3, #48	; 0x30
 8023292:	3130      	adds	r1, #48	; 0x30
 8023294:	7083      	strb	r3, [r0, #2]
 8023296:	70c1      	strb	r1, [r0, #3]
 8023298:	1d03      	adds	r3, r0, #4
 802329a:	e7f1      	b.n	8023280 <__exponent+0x60>

0802329c <_printf_float>:
 802329c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80232a0:	ed2d 8b02 	vpush	{d8}
 80232a4:	b08d      	sub	sp, #52	; 0x34
 80232a6:	460c      	mov	r4, r1
 80232a8:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80232ac:	4616      	mov	r6, r2
 80232ae:	461f      	mov	r7, r3
 80232b0:	4605      	mov	r5, r0
 80232b2:	f003 fa5d 	bl	8026770 <_localeconv_r>
 80232b6:	f8d0 a000 	ldr.w	sl, [r0]
 80232ba:	4650      	mov	r0, sl
 80232bc:	f7dc ff98 	bl	80001f0 <strlen>
 80232c0:	2300      	movs	r3, #0
 80232c2:	930a      	str	r3, [sp, #40]	; 0x28
 80232c4:	6823      	ldr	r3, [r4, #0]
 80232c6:	9305      	str	r3, [sp, #20]
 80232c8:	f8d8 3000 	ldr.w	r3, [r8]
 80232cc:	f894 b018 	ldrb.w	fp, [r4, #24]
 80232d0:	3307      	adds	r3, #7
 80232d2:	f023 0307 	bic.w	r3, r3, #7
 80232d6:	f103 0208 	add.w	r2, r3, #8
 80232da:	f8c8 2000 	str.w	r2, [r8]
 80232de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80232e2:	e9c4 2312 	strd	r2, r3, [r4, #72]	; 0x48
 80232e6:	e9d4 8912 	ldrd	r8, r9, [r4, #72]	; 0x48
 80232ea:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 80232ee:	9307      	str	r3, [sp, #28]
 80232f0:	f8cd 8018 	str.w	r8, [sp, #24]
 80232f4:	ee08 0a10 	vmov	s16, r0
 80232f8:	4b9f      	ldr	r3, [pc, #636]	; (8023578 <_printf_float+0x2dc>)
 80232fa:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80232fe:	f04f 32ff 	mov.w	r2, #4294967295
 8023302:	f7dd fc23 	bl	8000b4c <__aeabi_dcmpun>
 8023306:	bb88      	cbnz	r0, 802336c <_printf_float+0xd0>
 8023308:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 802330c:	4b9a      	ldr	r3, [pc, #616]	; (8023578 <_printf_float+0x2dc>)
 802330e:	f04f 32ff 	mov.w	r2, #4294967295
 8023312:	f7dd fbfd 	bl	8000b10 <__aeabi_dcmple>
 8023316:	bb48      	cbnz	r0, 802336c <_printf_float+0xd0>
 8023318:	2200      	movs	r2, #0
 802331a:	2300      	movs	r3, #0
 802331c:	4640      	mov	r0, r8
 802331e:	4649      	mov	r1, r9
 8023320:	f7dd fbec 	bl	8000afc <__aeabi_dcmplt>
 8023324:	b110      	cbz	r0, 802332c <_printf_float+0x90>
 8023326:	232d      	movs	r3, #45	; 0x2d
 8023328:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 802332c:	4b93      	ldr	r3, [pc, #588]	; (802357c <_printf_float+0x2e0>)
 802332e:	4894      	ldr	r0, [pc, #592]	; (8023580 <_printf_float+0x2e4>)
 8023330:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 8023334:	bf94      	ite	ls
 8023336:	4698      	movls	r8, r3
 8023338:	4680      	movhi	r8, r0
 802333a:	2303      	movs	r3, #3
 802333c:	6123      	str	r3, [r4, #16]
 802333e:	9b05      	ldr	r3, [sp, #20]
 8023340:	f023 0204 	bic.w	r2, r3, #4
 8023344:	6022      	str	r2, [r4, #0]
 8023346:	f04f 0900 	mov.w	r9, #0
 802334a:	9700      	str	r7, [sp, #0]
 802334c:	4633      	mov	r3, r6
 802334e:	aa0b      	add	r2, sp, #44	; 0x2c
 8023350:	4621      	mov	r1, r4
 8023352:	4628      	mov	r0, r5
 8023354:	f000 f9d8 	bl	8023708 <_printf_common>
 8023358:	3001      	adds	r0, #1
 802335a:	f040 8090 	bne.w	802347e <_printf_float+0x1e2>
 802335e:	f04f 30ff 	mov.w	r0, #4294967295
 8023362:	b00d      	add	sp, #52	; 0x34
 8023364:	ecbd 8b02 	vpop	{d8}
 8023368:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802336c:	4642      	mov	r2, r8
 802336e:	464b      	mov	r3, r9
 8023370:	4640      	mov	r0, r8
 8023372:	4649      	mov	r1, r9
 8023374:	f7dd fbea 	bl	8000b4c <__aeabi_dcmpun>
 8023378:	b140      	cbz	r0, 802338c <_printf_float+0xf0>
 802337a:	464b      	mov	r3, r9
 802337c:	2b00      	cmp	r3, #0
 802337e:	bfbc      	itt	lt
 8023380:	232d      	movlt	r3, #45	; 0x2d
 8023382:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 8023386:	487f      	ldr	r0, [pc, #508]	; (8023584 <_printf_float+0x2e8>)
 8023388:	4b7f      	ldr	r3, [pc, #508]	; (8023588 <_printf_float+0x2ec>)
 802338a:	e7d1      	b.n	8023330 <_printf_float+0x94>
 802338c:	6863      	ldr	r3, [r4, #4]
 802338e:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 8023392:	9206      	str	r2, [sp, #24]
 8023394:	1c5a      	adds	r2, r3, #1
 8023396:	d13f      	bne.n	8023418 <_printf_float+0x17c>
 8023398:	2306      	movs	r3, #6
 802339a:	6063      	str	r3, [r4, #4]
 802339c:	9b05      	ldr	r3, [sp, #20]
 802339e:	6861      	ldr	r1, [r4, #4]
 80233a0:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80233a4:	2300      	movs	r3, #0
 80233a6:	9303      	str	r3, [sp, #12]
 80233a8:	ab0a      	add	r3, sp, #40	; 0x28
 80233aa:	e9cd b301 	strd	fp, r3, [sp, #4]
 80233ae:	ab09      	add	r3, sp, #36	; 0x24
 80233b0:	ec49 8b10 	vmov	d0, r8, r9
 80233b4:	9300      	str	r3, [sp, #0]
 80233b6:	6022      	str	r2, [r4, #0]
 80233b8:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80233bc:	4628      	mov	r0, r5
 80233be:	f7ff fecd 	bl	802315c <__cvt>
 80233c2:	9b06      	ldr	r3, [sp, #24]
 80233c4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80233c6:	2b47      	cmp	r3, #71	; 0x47
 80233c8:	4680      	mov	r8, r0
 80233ca:	d108      	bne.n	80233de <_printf_float+0x142>
 80233cc:	1cc8      	adds	r0, r1, #3
 80233ce:	db02      	blt.n	80233d6 <_printf_float+0x13a>
 80233d0:	6863      	ldr	r3, [r4, #4]
 80233d2:	4299      	cmp	r1, r3
 80233d4:	dd41      	ble.n	802345a <_printf_float+0x1be>
 80233d6:	f1ab 0b02 	sub.w	fp, fp, #2
 80233da:	fa5f fb8b 	uxtb.w	fp, fp
 80233de:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80233e2:	d820      	bhi.n	8023426 <_printf_float+0x18a>
 80233e4:	3901      	subs	r1, #1
 80233e6:	465a      	mov	r2, fp
 80233e8:	f104 0050 	add.w	r0, r4, #80	; 0x50
 80233ec:	9109      	str	r1, [sp, #36]	; 0x24
 80233ee:	f7ff ff17 	bl	8023220 <__exponent>
 80233f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80233f4:	1813      	adds	r3, r2, r0
 80233f6:	2a01      	cmp	r2, #1
 80233f8:	4681      	mov	r9, r0
 80233fa:	6123      	str	r3, [r4, #16]
 80233fc:	dc02      	bgt.n	8023404 <_printf_float+0x168>
 80233fe:	6822      	ldr	r2, [r4, #0]
 8023400:	07d2      	lsls	r2, r2, #31
 8023402:	d501      	bpl.n	8023408 <_printf_float+0x16c>
 8023404:	3301      	adds	r3, #1
 8023406:	6123      	str	r3, [r4, #16]
 8023408:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 802340c:	2b00      	cmp	r3, #0
 802340e:	d09c      	beq.n	802334a <_printf_float+0xae>
 8023410:	232d      	movs	r3, #45	; 0x2d
 8023412:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8023416:	e798      	b.n	802334a <_printf_float+0xae>
 8023418:	9a06      	ldr	r2, [sp, #24]
 802341a:	2a47      	cmp	r2, #71	; 0x47
 802341c:	d1be      	bne.n	802339c <_printf_float+0x100>
 802341e:	2b00      	cmp	r3, #0
 8023420:	d1bc      	bne.n	802339c <_printf_float+0x100>
 8023422:	2301      	movs	r3, #1
 8023424:	e7b9      	b.n	802339a <_printf_float+0xfe>
 8023426:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 802342a:	d118      	bne.n	802345e <_printf_float+0x1c2>
 802342c:	2900      	cmp	r1, #0
 802342e:	6863      	ldr	r3, [r4, #4]
 8023430:	dd0b      	ble.n	802344a <_printf_float+0x1ae>
 8023432:	6121      	str	r1, [r4, #16]
 8023434:	b913      	cbnz	r3, 802343c <_printf_float+0x1a0>
 8023436:	6822      	ldr	r2, [r4, #0]
 8023438:	07d0      	lsls	r0, r2, #31
 802343a:	d502      	bpl.n	8023442 <_printf_float+0x1a6>
 802343c:	3301      	adds	r3, #1
 802343e:	440b      	add	r3, r1
 8023440:	6123      	str	r3, [r4, #16]
 8023442:	65a1      	str	r1, [r4, #88]	; 0x58
 8023444:	f04f 0900 	mov.w	r9, #0
 8023448:	e7de      	b.n	8023408 <_printf_float+0x16c>
 802344a:	b913      	cbnz	r3, 8023452 <_printf_float+0x1b6>
 802344c:	6822      	ldr	r2, [r4, #0]
 802344e:	07d2      	lsls	r2, r2, #31
 8023450:	d501      	bpl.n	8023456 <_printf_float+0x1ba>
 8023452:	3302      	adds	r3, #2
 8023454:	e7f4      	b.n	8023440 <_printf_float+0x1a4>
 8023456:	2301      	movs	r3, #1
 8023458:	e7f2      	b.n	8023440 <_printf_float+0x1a4>
 802345a:	f04f 0b67 	mov.w	fp, #103	; 0x67
 802345e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023460:	4299      	cmp	r1, r3
 8023462:	db05      	blt.n	8023470 <_printf_float+0x1d4>
 8023464:	6823      	ldr	r3, [r4, #0]
 8023466:	6121      	str	r1, [r4, #16]
 8023468:	07d8      	lsls	r0, r3, #31
 802346a:	d5ea      	bpl.n	8023442 <_printf_float+0x1a6>
 802346c:	1c4b      	adds	r3, r1, #1
 802346e:	e7e7      	b.n	8023440 <_printf_float+0x1a4>
 8023470:	2900      	cmp	r1, #0
 8023472:	bfd4      	ite	le
 8023474:	f1c1 0202 	rsble	r2, r1, #2
 8023478:	2201      	movgt	r2, #1
 802347a:	4413      	add	r3, r2
 802347c:	e7e0      	b.n	8023440 <_printf_float+0x1a4>
 802347e:	6823      	ldr	r3, [r4, #0]
 8023480:	055a      	lsls	r2, r3, #21
 8023482:	d407      	bmi.n	8023494 <_printf_float+0x1f8>
 8023484:	6923      	ldr	r3, [r4, #16]
 8023486:	4642      	mov	r2, r8
 8023488:	4631      	mov	r1, r6
 802348a:	4628      	mov	r0, r5
 802348c:	47b8      	blx	r7
 802348e:	3001      	adds	r0, #1
 8023490:	d12c      	bne.n	80234ec <_printf_float+0x250>
 8023492:	e764      	b.n	802335e <_printf_float+0xc2>
 8023494:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 8023498:	f240 80e0 	bls.w	802365c <_printf_float+0x3c0>
 802349c:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80234a0:	2200      	movs	r2, #0
 80234a2:	2300      	movs	r3, #0
 80234a4:	f7dd fb20 	bl	8000ae8 <__aeabi_dcmpeq>
 80234a8:	2800      	cmp	r0, #0
 80234aa:	d034      	beq.n	8023516 <_printf_float+0x27a>
 80234ac:	4a37      	ldr	r2, [pc, #220]	; (802358c <_printf_float+0x2f0>)
 80234ae:	2301      	movs	r3, #1
 80234b0:	4631      	mov	r1, r6
 80234b2:	4628      	mov	r0, r5
 80234b4:	47b8      	blx	r7
 80234b6:	3001      	adds	r0, #1
 80234b8:	f43f af51 	beq.w	802335e <_printf_float+0xc2>
 80234bc:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80234c0:	429a      	cmp	r2, r3
 80234c2:	db02      	blt.n	80234ca <_printf_float+0x22e>
 80234c4:	6823      	ldr	r3, [r4, #0]
 80234c6:	07d8      	lsls	r0, r3, #31
 80234c8:	d510      	bpl.n	80234ec <_printf_float+0x250>
 80234ca:	ee18 3a10 	vmov	r3, s16
 80234ce:	4652      	mov	r2, sl
 80234d0:	4631      	mov	r1, r6
 80234d2:	4628      	mov	r0, r5
 80234d4:	47b8      	blx	r7
 80234d6:	3001      	adds	r0, #1
 80234d8:	f43f af41 	beq.w	802335e <_printf_float+0xc2>
 80234dc:	f04f 0800 	mov.w	r8, #0
 80234e0:	f104 091a 	add.w	r9, r4, #26
 80234e4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80234e6:	3b01      	subs	r3, #1
 80234e8:	4543      	cmp	r3, r8
 80234ea:	dc09      	bgt.n	8023500 <_printf_float+0x264>
 80234ec:	6823      	ldr	r3, [r4, #0]
 80234ee:	079b      	lsls	r3, r3, #30
 80234f0:	f100 8105 	bmi.w	80236fe <_printf_float+0x462>
 80234f4:	68e0      	ldr	r0, [r4, #12]
 80234f6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80234f8:	4298      	cmp	r0, r3
 80234fa:	bfb8      	it	lt
 80234fc:	4618      	movlt	r0, r3
 80234fe:	e730      	b.n	8023362 <_printf_float+0xc6>
 8023500:	2301      	movs	r3, #1
 8023502:	464a      	mov	r2, r9
 8023504:	4631      	mov	r1, r6
 8023506:	4628      	mov	r0, r5
 8023508:	47b8      	blx	r7
 802350a:	3001      	adds	r0, #1
 802350c:	f43f af27 	beq.w	802335e <_printf_float+0xc2>
 8023510:	f108 0801 	add.w	r8, r8, #1
 8023514:	e7e6      	b.n	80234e4 <_printf_float+0x248>
 8023516:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023518:	2b00      	cmp	r3, #0
 802351a:	dc39      	bgt.n	8023590 <_printf_float+0x2f4>
 802351c:	4a1b      	ldr	r2, [pc, #108]	; (802358c <_printf_float+0x2f0>)
 802351e:	2301      	movs	r3, #1
 8023520:	4631      	mov	r1, r6
 8023522:	4628      	mov	r0, r5
 8023524:	47b8      	blx	r7
 8023526:	3001      	adds	r0, #1
 8023528:	f43f af19 	beq.w	802335e <_printf_float+0xc2>
 802352c:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8023530:	4313      	orrs	r3, r2
 8023532:	d102      	bne.n	802353a <_printf_float+0x29e>
 8023534:	6823      	ldr	r3, [r4, #0]
 8023536:	07d9      	lsls	r1, r3, #31
 8023538:	d5d8      	bpl.n	80234ec <_printf_float+0x250>
 802353a:	ee18 3a10 	vmov	r3, s16
 802353e:	4652      	mov	r2, sl
 8023540:	4631      	mov	r1, r6
 8023542:	4628      	mov	r0, r5
 8023544:	47b8      	blx	r7
 8023546:	3001      	adds	r0, #1
 8023548:	f43f af09 	beq.w	802335e <_printf_float+0xc2>
 802354c:	f04f 0900 	mov.w	r9, #0
 8023550:	f104 0a1a 	add.w	sl, r4, #26
 8023554:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8023556:	425b      	negs	r3, r3
 8023558:	454b      	cmp	r3, r9
 802355a:	dc01      	bgt.n	8023560 <_printf_float+0x2c4>
 802355c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802355e:	e792      	b.n	8023486 <_printf_float+0x1ea>
 8023560:	2301      	movs	r3, #1
 8023562:	4652      	mov	r2, sl
 8023564:	4631      	mov	r1, r6
 8023566:	4628      	mov	r0, r5
 8023568:	47b8      	blx	r7
 802356a:	3001      	adds	r0, #1
 802356c:	f43f aef7 	beq.w	802335e <_printf_float+0xc2>
 8023570:	f109 0901 	add.w	r9, r9, #1
 8023574:	e7ee      	b.n	8023554 <_printf_float+0x2b8>
 8023576:	bf00      	nop
 8023578:	7fefffff 	.word	0x7fefffff
 802357c:	0802ae19 	.word	0x0802ae19
 8023580:	0802ae1d 	.word	0x0802ae1d
 8023584:	0802ae25 	.word	0x0802ae25
 8023588:	0802ae21 	.word	0x0802ae21
 802358c:	080295f3 	.word	0x080295f3
 8023590:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8023592:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8023594:	429a      	cmp	r2, r3
 8023596:	bfa8      	it	ge
 8023598:	461a      	movge	r2, r3
 802359a:	2a00      	cmp	r2, #0
 802359c:	4691      	mov	r9, r2
 802359e:	dc37      	bgt.n	8023610 <_printf_float+0x374>
 80235a0:	f04f 0b00 	mov.w	fp, #0
 80235a4:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80235a8:	f104 021a 	add.w	r2, r4, #26
 80235ac:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80235ae:	9305      	str	r3, [sp, #20]
 80235b0:	eba3 0309 	sub.w	r3, r3, r9
 80235b4:	455b      	cmp	r3, fp
 80235b6:	dc33      	bgt.n	8023620 <_printf_float+0x384>
 80235b8:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80235bc:	429a      	cmp	r2, r3
 80235be:	db3b      	blt.n	8023638 <_printf_float+0x39c>
 80235c0:	6823      	ldr	r3, [r4, #0]
 80235c2:	07da      	lsls	r2, r3, #31
 80235c4:	d438      	bmi.n	8023638 <_printf_float+0x39c>
 80235c6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80235c8:	9a05      	ldr	r2, [sp, #20]
 80235ca:	9909      	ldr	r1, [sp, #36]	; 0x24
 80235cc:	1a9a      	subs	r2, r3, r2
 80235ce:	eba3 0901 	sub.w	r9, r3, r1
 80235d2:	4591      	cmp	r9, r2
 80235d4:	bfa8      	it	ge
 80235d6:	4691      	movge	r9, r2
 80235d8:	f1b9 0f00 	cmp.w	r9, #0
 80235dc:	dc35      	bgt.n	802364a <_printf_float+0x3ae>
 80235de:	f04f 0800 	mov.w	r8, #0
 80235e2:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80235e6:	f104 0a1a 	add.w	sl, r4, #26
 80235ea:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80235ee:	1a9b      	subs	r3, r3, r2
 80235f0:	eba3 0309 	sub.w	r3, r3, r9
 80235f4:	4543      	cmp	r3, r8
 80235f6:	f77f af79 	ble.w	80234ec <_printf_float+0x250>
 80235fa:	2301      	movs	r3, #1
 80235fc:	4652      	mov	r2, sl
 80235fe:	4631      	mov	r1, r6
 8023600:	4628      	mov	r0, r5
 8023602:	47b8      	blx	r7
 8023604:	3001      	adds	r0, #1
 8023606:	f43f aeaa 	beq.w	802335e <_printf_float+0xc2>
 802360a:	f108 0801 	add.w	r8, r8, #1
 802360e:	e7ec      	b.n	80235ea <_printf_float+0x34e>
 8023610:	4613      	mov	r3, r2
 8023612:	4631      	mov	r1, r6
 8023614:	4642      	mov	r2, r8
 8023616:	4628      	mov	r0, r5
 8023618:	47b8      	blx	r7
 802361a:	3001      	adds	r0, #1
 802361c:	d1c0      	bne.n	80235a0 <_printf_float+0x304>
 802361e:	e69e      	b.n	802335e <_printf_float+0xc2>
 8023620:	2301      	movs	r3, #1
 8023622:	4631      	mov	r1, r6
 8023624:	4628      	mov	r0, r5
 8023626:	9205      	str	r2, [sp, #20]
 8023628:	47b8      	blx	r7
 802362a:	3001      	adds	r0, #1
 802362c:	f43f ae97 	beq.w	802335e <_printf_float+0xc2>
 8023630:	9a05      	ldr	r2, [sp, #20]
 8023632:	f10b 0b01 	add.w	fp, fp, #1
 8023636:	e7b9      	b.n	80235ac <_printf_float+0x310>
 8023638:	ee18 3a10 	vmov	r3, s16
 802363c:	4652      	mov	r2, sl
 802363e:	4631      	mov	r1, r6
 8023640:	4628      	mov	r0, r5
 8023642:	47b8      	blx	r7
 8023644:	3001      	adds	r0, #1
 8023646:	d1be      	bne.n	80235c6 <_printf_float+0x32a>
 8023648:	e689      	b.n	802335e <_printf_float+0xc2>
 802364a:	9a05      	ldr	r2, [sp, #20]
 802364c:	464b      	mov	r3, r9
 802364e:	4442      	add	r2, r8
 8023650:	4631      	mov	r1, r6
 8023652:	4628      	mov	r0, r5
 8023654:	47b8      	blx	r7
 8023656:	3001      	adds	r0, #1
 8023658:	d1c1      	bne.n	80235de <_printf_float+0x342>
 802365a:	e680      	b.n	802335e <_printf_float+0xc2>
 802365c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 802365e:	2a01      	cmp	r2, #1
 8023660:	dc01      	bgt.n	8023666 <_printf_float+0x3ca>
 8023662:	07db      	lsls	r3, r3, #31
 8023664:	d538      	bpl.n	80236d8 <_printf_float+0x43c>
 8023666:	2301      	movs	r3, #1
 8023668:	4642      	mov	r2, r8
 802366a:	4631      	mov	r1, r6
 802366c:	4628      	mov	r0, r5
 802366e:	47b8      	blx	r7
 8023670:	3001      	adds	r0, #1
 8023672:	f43f ae74 	beq.w	802335e <_printf_float+0xc2>
 8023676:	ee18 3a10 	vmov	r3, s16
 802367a:	4652      	mov	r2, sl
 802367c:	4631      	mov	r1, r6
 802367e:	4628      	mov	r0, r5
 8023680:	47b8      	blx	r7
 8023682:	3001      	adds	r0, #1
 8023684:	f43f ae6b 	beq.w	802335e <_printf_float+0xc2>
 8023688:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 802368c:	2200      	movs	r2, #0
 802368e:	2300      	movs	r3, #0
 8023690:	f7dd fa2a 	bl	8000ae8 <__aeabi_dcmpeq>
 8023694:	b9d8      	cbnz	r0, 80236ce <_printf_float+0x432>
 8023696:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8023698:	f108 0201 	add.w	r2, r8, #1
 802369c:	3b01      	subs	r3, #1
 802369e:	4631      	mov	r1, r6
 80236a0:	4628      	mov	r0, r5
 80236a2:	47b8      	blx	r7
 80236a4:	3001      	adds	r0, #1
 80236a6:	d10e      	bne.n	80236c6 <_printf_float+0x42a>
 80236a8:	e659      	b.n	802335e <_printf_float+0xc2>
 80236aa:	2301      	movs	r3, #1
 80236ac:	4652      	mov	r2, sl
 80236ae:	4631      	mov	r1, r6
 80236b0:	4628      	mov	r0, r5
 80236b2:	47b8      	blx	r7
 80236b4:	3001      	adds	r0, #1
 80236b6:	f43f ae52 	beq.w	802335e <_printf_float+0xc2>
 80236ba:	f108 0801 	add.w	r8, r8, #1
 80236be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80236c0:	3b01      	subs	r3, #1
 80236c2:	4543      	cmp	r3, r8
 80236c4:	dcf1      	bgt.n	80236aa <_printf_float+0x40e>
 80236c6:	464b      	mov	r3, r9
 80236c8:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80236cc:	e6dc      	b.n	8023488 <_printf_float+0x1ec>
 80236ce:	f04f 0800 	mov.w	r8, #0
 80236d2:	f104 0a1a 	add.w	sl, r4, #26
 80236d6:	e7f2      	b.n	80236be <_printf_float+0x422>
 80236d8:	2301      	movs	r3, #1
 80236da:	4642      	mov	r2, r8
 80236dc:	e7df      	b.n	802369e <_printf_float+0x402>
 80236de:	2301      	movs	r3, #1
 80236e0:	464a      	mov	r2, r9
 80236e2:	4631      	mov	r1, r6
 80236e4:	4628      	mov	r0, r5
 80236e6:	47b8      	blx	r7
 80236e8:	3001      	adds	r0, #1
 80236ea:	f43f ae38 	beq.w	802335e <_printf_float+0xc2>
 80236ee:	f108 0801 	add.w	r8, r8, #1
 80236f2:	68e3      	ldr	r3, [r4, #12]
 80236f4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80236f6:	1a5b      	subs	r3, r3, r1
 80236f8:	4543      	cmp	r3, r8
 80236fa:	dcf0      	bgt.n	80236de <_printf_float+0x442>
 80236fc:	e6fa      	b.n	80234f4 <_printf_float+0x258>
 80236fe:	f04f 0800 	mov.w	r8, #0
 8023702:	f104 0919 	add.w	r9, r4, #25
 8023706:	e7f4      	b.n	80236f2 <_printf_float+0x456>

08023708 <_printf_common>:
 8023708:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 802370c:	4616      	mov	r6, r2
 802370e:	4699      	mov	r9, r3
 8023710:	688a      	ldr	r2, [r1, #8]
 8023712:	690b      	ldr	r3, [r1, #16]
 8023714:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8023718:	4293      	cmp	r3, r2
 802371a:	bfb8      	it	lt
 802371c:	4613      	movlt	r3, r2
 802371e:	6033      	str	r3, [r6, #0]
 8023720:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8023724:	4607      	mov	r7, r0
 8023726:	460c      	mov	r4, r1
 8023728:	b10a      	cbz	r2, 802372e <_printf_common+0x26>
 802372a:	3301      	adds	r3, #1
 802372c:	6033      	str	r3, [r6, #0]
 802372e:	6823      	ldr	r3, [r4, #0]
 8023730:	0699      	lsls	r1, r3, #26
 8023732:	bf42      	ittt	mi
 8023734:	6833      	ldrmi	r3, [r6, #0]
 8023736:	3302      	addmi	r3, #2
 8023738:	6033      	strmi	r3, [r6, #0]
 802373a:	6825      	ldr	r5, [r4, #0]
 802373c:	f015 0506 	ands.w	r5, r5, #6
 8023740:	d106      	bne.n	8023750 <_printf_common+0x48>
 8023742:	f104 0a19 	add.w	sl, r4, #25
 8023746:	68e3      	ldr	r3, [r4, #12]
 8023748:	6832      	ldr	r2, [r6, #0]
 802374a:	1a9b      	subs	r3, r3, r2
 802374c:	42ab      	cmp	r3, r5
 802374e:	dc26      	bgt.n	802379e <_printf_common+0x96>
 8023750:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8023754:	1e13      	subs	r3, r2, #0
 8023756:	6822      	ldr	r2, [r4, #0]
 8023758:	bf18      	it	ne
 802375a:	2301      	movne	r3, #1
 802375c:	0692      	lsls	r2, r2, #26
 802375e:	d42b      	bmi.n	80237b8 <_printf_common+0xb0>
 8023760:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8023764:	4649      	mov	r1, r9
 8023766:	4638      	mov	r0, r7
 8023768:	47c0      	blx	r8
 802376a:	3001      	adds	r0, #1
 802376c:	d01e      	beq.n	80237ac <_printf_common+0xa4>
 802376e:	6823      	ldr	r3, [r4, #0]
 8023770:	68e5      	ldr	r5, [r4, #12]
 8023772:	6832      	ldr	r2, [r6, #0]
 8023774:	f003 0306 	and.w	r3, r3, #6
 8023778:	2b04      	cmp	r3, #4
 802377a:	bf08      	it	eq
 802377c:	1aad      	subeq	r5, r5, r2
 802377e:	68a3      	ldr	r3, [r4, #8]
 8023780:	6922      	ldr	r2, [r4, #16]
 8023782:	bf0c      	ite	eq
 8023784:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8023788:	2500      	movne	r5, #0
 802378a:	4293      	cmp	r3, r2
 802378c:	bfc4      	itt	gt
 802378e:	1a9b      	subgt	r3, r3, r2
 8023790:	18ed      	addgt	r5, r5, r3
 8023792:	2600      	movs	r6, #0
 8023794:	341a      	adds	r4, #26
 8023796:	42b5      	cmp	r5, r6
 8023798:	d11a      	bne.n	80237d0 <_printf_common+0xc8>
 802379a:	2000      	movs	r0, #0
 802379c:	e008      	b.n	80237b0 <_printf_common+0xa8>
 802379e:	2301      	movs	r3, #1
 80237a0:	4652      	mov	r2, sl
 80237a2:	4649      	mov	r1, r9
 80237a4:	4638      	mov	r0, r7
 80237a6:	47c0      	blx	r8
 80237a8:	3001      	adds	r0, #1
 80237aa:	d103      	bne.n	80237b4 <_printf_common+0xac>
 80237ac:	f04f 30ff 	mov.w	r0, #4294967295
 80237b0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80237b4:	3501      	adds	r5, #1
 80237b6:	e7c6      	b.n	8023746 <_printf_common+0x3e>
 80237b8:	18e1      	adds	r1, r4, r3
 80237ba:	1c5a      	adds	r2, r3, #1
 80237bc:	2030      	movs	r0, #48	; 0x30
 80237be:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80237c2:	4422      	add	r2, r4
 80237c4:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80237c8:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80237cc:	3302      	adds	r3, #2
 80237ce:	e7c7      	b.n	8023760 <_printf_common+0x58>
 80237d0:	2301      	movs	r3, #1
 80237d2:	4622      	mov	r2, r4
 80237d4:	4649      	mov	r1, r9
 80237d6:	4638      	mov	r0, r7
 80237d8:	47c0      	blx	r8
 80237da:	3001      	adds	r0, #1
 80237dc:	d0e6      	beq.n	80237ac <_printf_common+0xa4>
 80237de:	3601      	adds	r6, #1
 80237e0:	e7d9      	b.n	8023796 <_printf_common+0x8e>
	...

080237e4 <_printf_i>:
 80237e4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80237e8:	7e0f      	ldrb	r7, [r1, #24]
 80237ea:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80237ec:	2f78      	cmp	r7, #120	; 0x78
 80237ee:	4691      	mov	r9, r2
 80237f0:	4680      	mov	r8, r0
 80237f2:	460c      	mov	r4, r1
 80237f4:	469a      	mov	sl, r3
 80237f6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80237fa:	d807      	bhi.n	802380c <_printf_i+0x28>
 80237fc:	2f62      	cmp	r7, #98	; 0x62
 80237fe:	d80a      	bhi.n	8023816 <_printf_i+0x32>
 8023800:	2f00      	cmp	r7, #0
 8023802:	f000 80d8 	beq.w	80239b6 <_printf_i+0x1d2>
 8023806:	2f58      	cmp	r7, #88	; 0x58
 8023808:	f000 80a3 	beq.w	8023952 <_printf_i+0x16e>
 802380c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023810:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8023814:	e03a      	b.n	802388c <_printf_i+0xa8>
 8023816:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 802381a:	2b15      	cmp	r3, #21
 802381c:	d8f6      	bhi.n	802380c <_printf_i+0x28>
 802381e:	a101      	add	r1, pc, #4	; (adr r1, 8023824 <_printf_i+0x40>)
 8023820:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8023824:	0802387d 	.word	0x0802387d
 8023828:	08023891 	.word	0x08023891
 802382c:	0802380d 	.word	0x0802380d
 8023830:	0802380d 	.word	0x0802380d
 8023834:	0802380d 	.word	0x0802380d
 8023838:	0802380d 	.word	0x0802380d
 802383c:	08023891 	.word	0x08023891
 8023840:	0802380d 	.word	0x0802380d
 8023844:	0802380d 	.word	0x0802380d
 8023848:	0802380d 	.word	0x0802380d
 802384c:	0802380d 	.word	0x0802380d
 8023850:	0802399d 	.word	0x0802399d
 8023854:	080238c1 	.word	0x080238c1
 8023858:	0802397f 	.word	0x0802397f
 802385c:	0802380d 	.word	0x0802380d
 8023860:	0802380d 	.word	0x0802380d
 8023864:	080239bf 	.word	0x080239bf
 8023868:	0802380d 	.word	0x0802380d
 802386c:	080238c1 	.word	0x080238c1
 8023870:	0802380d 	.word	0x0802380d
 8023874:	0802380d 	.word	0x0802380d
 8023878:	08023987 	.word	0x08023987
 802387c:	682b      	ldr	r3, [r5, #0]
 802387e:	1d1a      	adds	r2, r3, #4
 8023880:	681b      	ldr	r3, [r3, #0]
 8023882:	602a      	str	r2, [r5, #0]
 8023884:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8023888:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 802388c:	2301      	movs	r3, #1
 802388e:	e0a3      	b.n	80239d8 <_printf_i+0x1f4>
 8023890:	6820      	ldr	r0, [r4, #0]
 8023892:	6829      	ldr	r1, [r5, #0]
 8023894:	0606      	lsls	r6, r0, #24
 8023896:	f101 0304 	add.w	r3, r1, #4
 802389a:	d50a      	bpl.n	80238b2 <_printf_i+0xce>
 802389c:	680e      	ldr	r6, [r1, #0]
 802389e:	602b      	str	r3, [r5, #0]
 80238a0:	2e00      	cmp	r6, #0
 80238a2:	da03      	bge.n	80238ac <_printf_i+0xc8>
 80238a4:	232d      	movs	r3, #45	; 0x2d
 80238a6:	4276      	negs	r6, r6
 80238a8:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80238ac:	485e      	ldr	r0, [pc, #376]	; (8023a28 <_printf_i+0x244>)
 80238ae:	230a      	movs	r3, #10
 80238b0:	e019      	b.n	80238e6 <_printf_i+0x102>
 80238b2:	680e      	ldr	r6, [r1, #0]
 80238b4:	602b      	str	r3, [r5, #0]
 80238b6:	f010 0f40 	tst.w	r0, #64	; 0x40
 80238ba:	bf18      	it	ne
 80238bc:	b236      	sxthne	r6, r6
 80238be:	e7ef      	b.n	80238a0 <_printf_i+0xbc>
 80238c0:	682b      	ldr	r3, [r5, #0]
 80238c2:	6820      	ldr	r0, [r4, #0]
 80238c4:	1d19      	adds	r1, r3, #4
 80238c6:	6029      	str	r1, [r5, #0]
 80238c8:	0601      	lsls	r1, r0, #24
 80238ca:	d501      	bpl.n	80238d0 <_printf_i+0xec>
 80238cc:	681e      	ldr	r6, [r3, #0]
 80238ce:	e002      	b.n	80238d6 <_printf_i+0xf2>
 80238d0:	0646      	lsls	r6, r0, #25
 80238d2:	d5fb      	bpl.n	80238cc <_printf_i+0xe8>
 80238d4:	881e      	ldrh	r6, [r3, #0]
 80238d6:	4854      	ldr	r0, [pc, #336]	; (8023a28 <_printf_i+0x244>)
 80238d8:	2f6f      	cmp	r7, #111	; 0x6f
 80238da:	bf0c      	ite	eq
 80238dc:	2308      	moveq	r3, #8
 80238de:	230a      	movne	r3, #10
 80238e0:	2100      	movs	r1, #0
 80238e2:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 80238e6:	6865      	ldr	r5, [r4, #4]
 80238e8:	60a5      	str	r5, [r4, #8]
 80238ea:	2d00      	cmp	r5, #0
 80238ec:	bfa2      	ittt	ge
 80238ee:	6821      	ldrge	r1, [r4, #0]
 80238f0:	f021 0104 	bicge.w	r1, r1, #4
 80238f4:	6021      	strge	r1, [r4, #0]
 80238f6:	b90e      	cbnz	r6, 80238fc <_printf_i+0x118>
 80238f8:	2d00      	cmp	r5, #0
 80238fa:	d04d      	beq.n	8023998 <_printf_i+0x1b4>
 80238fc:	4615      	mov	r5, r2
 80238fe:	fbb6 f1f3 	udiv	r1, r6, r3
 8023902:	fb03 6711 	mls	r7, r3, r1, r6
 8023906:	5dc7      	ldrb	r7, [r0, r7]
 8023908:	f805 7d01 	strb.w	r7, [r5, #-1]!
 802390c:	4637      	mov	r7, r6
 802390e:	42bb      	cmp	r3, r7
 8023910:	460e      	mov	r6, r1
 8023912:	d9f4      	bls.n	80238fe <_printf_i+0x11a>
 8023914:	2b08      	cmp	r3, #8
 8023916:	d10b      	bne.n	8023930 <_printf_i+0x14c>
 8023918:	6823      	ldr	r3, [r4, #0]
 802391a:	07de      	lsls	r6, r3, #31
 802391c:	d508      	bpl.n	8023930 <_printf_i+0x14c>
 802391e:	6923      	ldr	r3, [r4, #16]
 8023920:	6861      	ldr	r1, [r4, #4]
 8023922:	4299      	cmp	r1, r3
 8023924:	bfde      	ittt	le
 8023926:	2330      	movle	r3, #48	; 0x30
 8023928:	f805 3c01 	strble.w	r3, [r5, #-1]
 802392c:	f105 35ff 	addle.w	r5, r5, #4294967295
 8023930:	1b52      	subs	r2, r2, r5
 8023932:	6122      	str	r2, [r4, #16]
 8023934:	f8cd a000 	str.w	sl, [sp]
 8023938:	464b      	mov	r3, r9
 802393a:	aa03      	add	r2, sp, #12
 802393c:	4621      	mov	r1, r4
 802393e:	4640      	mov	r0, r8
 8023940:	f7ff fee2 	bl	8023708 <_printf_common>
 8023944:	3001      	adds	r0, #1
 8023946:	d14c      	bne.n	80239e2 <_printf_i+0x1fe>
 8023948:	f04f 30ff 	mov.w	r0, #4294967295
 802394c:	b004      	add	sp, #16
 802394e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8023952:	4835      	ldr	r0, [pc, #212]	; (8023a28 <_printf_i+0x244>)
 8023954:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8023958:	6829      	ldr	r1, [r5, #0]
 802395a:	6823      	ldr	r3, [r4, #0]
 802395c:	f851 6b04 	ldr.w	r6, [r1], #4
 8023960:	6029      	str	r1, [r5, #0]
 8023962:	061d      	lsls	r5, r3, #24
 8023964:	d514      	bpl.n	8023990 <_printf_i+0x1ac>
 8023966:	07df      	lsls	r7, r3, #31
 8023968:	bf44      	itt	mi
 802396a:	f043 0320 	orrmi.w	r3, r3, #32
 802396e:	6023      	strmi	r3, [r4, #0]
 8023970:	b91e      	cbnz	r6, 802397a <_printf_i+0x196>
 8023972:	6823      	ldr	r3, [r4, #0]
 8023974:	f023 0320 	bic.w	r3, r3, #32
 8023978:	6023      	str	r3, [r4, #0]
 802397a:	2310      	movs	r3, #16
 802397c:	e7b0      	b.n	80238e0 <_printf_i+0xfc>
 802397e:	6823      	ldr	r3, [r4, #0]
 8023980:	f043 0320 	orr.w	r3, r3, #32
 8023984:	6023      	str	r3, [r4, #0]
 8023986:	2378      	movs	r3, #120	; 0x78
 8023988:	4828      	ldr	r0, [pc, #160]	; (8023a2c <_printf_i+0x248>)
 802398a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 802398e:	e7e3      	b.n	8023958 <_printf_i+0x174>
 8023990:	0659      	lsls	r1, r3, #25
 8023992:	bf48      	it	mi
 8023994:	b2b6      	uxthmi	r6, r6
 8023996:	e7e6      	b.n	8023966 <_printf_i+0x182>
 8023998:	4615      	mov	r5, r2
 802399a:	e7bb      	b.n	8023914 <_printf_i+0x130>
 802399c:	682b      	ldr	r3, [r5, #0]
 802399e:	6826      	ldr	r6, [r4, #0]
 80239a0:	6961      	ldr	r1, [r4, #20]
 80239a2:	1d18      	adds	r0, r3, #4
 80239a4:	6028      	str	r0, [r5, #0]
 80239a6:	0635      	lsls	r5, r6, #24
 80239a8:	681b      	ldr	r3, [r3, #0]
 80239aa:	d501      	bpl.n	80239b0 <_printf_i+0x1cc>
 80239ac:	6019      	str	r1, [r3, #0]
 80239ae:	e002      	b.n	80239b6 <_printf_i+0x1d2>
 80239b0:	0670      	lsls	r0, r6, #25
 80239b2:	d5fb      	bpl.n	80239ac <_printf_i+0x1c8>
 80239b4:	8019      	strh	r1, [r3, #0]
 80239b6:	2300      	movs	r3, #0
 80239b8:	6123      	str	r3, [r4, #16]
 80239ba:	4615      	mov	r5, r2
 80239bc:	e7ba      	b.n	8023934 <_printf_i+0x150>
 80239be:	682b      	ldr	r3, [r5, #0]
 80239c0:	1d1a      	adds	r2, r3, #4
 80239c2:	602a      	str	r2, [r5, #0]
 80239c4:	681d      	ldr	r5, [r3, #0]
 80239c6:	6862      	ldr	r2, [r4, #4]
 80239c8:	2100      	movs	r1, #0
 80239ca:	4628      	mov	r0, r5
 80239cc:	f7dc fc18 	bl	8000200 <memchr>
 80239d0:	b108      	cbz	r0, 80239d6 <_printf_i+0x1f2>
 80239d2:	1b40      	subs	r0, r0, r5
 80239d4:	6060      	str	r0, [r4, #4]
 80239d6:	6863      	ldr	r3, [r4, #4]
 80239d8:	6123      	str	r3, [r4, #16]
 80239da:	2300      	movs	r3, #0
 80239dc:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80239e0:	e7a8      	b.n	8023934 <_printf_i+0x150>
 80239e2:	6923      	ldr	r3, [r4, #16]
 80239e4:	462a      	mov	r2, r5
 80239e6:	4649      	mov	r1, r9
 80239e8:	4640      	mov	r0, r8
 80239ea:	47d0      	blx	sl
 80239ec:	3001      	adds	r0, #1
 80239ee:	d0ab      	beq.n	8023948 <_printf_i+0x164>
 80239f0:	6823      	ldr	r3, [r4, #0]
 80239f2:	079b      	lsls	r3, r3, #30
 80239f4:	d413      	bmi.n	8023a1e <_printf_i+0x23a>
 80239f6:	68e0      	ldr	r0, [r4, #12]
 80239f8:	9b03      	ldr	r3, [sp, #12]
 80239fa:	4298      	cmp	r0, r3
 80239fc:	bfb8      	it	lt
 80239fe:	4618      	movlt	r0, r3
 8023a00:	e7a4      	b.n	802394c <_printf_i+0x168>
 8023a02:	2301      	movs	r3, #1
 8023a04:	4632      	mov	r2, r6
 8023a06:	4649      	mov	r1, r9
 8023a08:	4640      	mov	r0, r8
 8023a0a:	47d0      	blx	sl
 8023a0c:	3001      	adds	r0, #1
 8023a0e:	d09b      	beq.n	8023948 <_printf_i+0x164>
 8023a10:	3501      	adds	r5, #1
 8023a12:	68e3      	ldr	r3, [r4, #12]
 8023a14:	9903      	ldr	r1, [sp, #12]
 8023a16:	1a5b      	subs	r3, r3, r1
 8023a18:	42ab      	cmp	r3, r5
 8023a1a:	dcf2      	bgt.n	8023a02 <_printf_i+0x21e>
 8023a1c:	e7eb      	b.n	80239f6 <_printf_i+0x212>
 8023a1e:	2500      	movs	r5, #0
 8023a20:	f104 0619 	add.w	r6, r4, #25
 8023a24:	e7f5      	b.n	8023a12 <_printf_i+0x22e>
 8023a26:	bf00      	nop
 8023a28:	0802ae29 	.word	0x0802ae29
 8023a2c:	0802ae3a 	.word	0x0802ae3a

08023a30 <_scanf_float>:
 8023a30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023a34:	b087      	sub	sp, #28
 8023a36:	4617      	mov	r7, r2
 8023a38:	9303      	str	r3, [sp, #12]
 8023a3a:	688b      	ldr	r3, [r1, #8]
 8023a3c:	1e5a      	subs	r2, r3, #1
 8023a3e:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8023a42:	bf83      	ittte	hi
 8023a44:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8023a48:	195b      	addhi	r3, r3, r5
 8023a4a:	9302      	strhi	r3, [sp, #8]
 8023a4c:	2300      	movls	r3, #0
 8023a4e:	bf86      	itte	hi
 8023a50:	f240 135d 	movwhi	r3, #349	; 0x15d
 8023a54:	608b      	strhi	r3, [r1, #8]
 8023a56:	9302      	strls	r3, [sp, #8]
 8023a58:	680b      	ldr	r3, [r1, #0]
 8023a5a:	468b      	mov	fp, r1
 8023a5c:	2500      	movs	r5, #0
 8023a5e:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8023a62:	f84b 3b1c 	str.w	r3, [fp], #28
 8023a66:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8023a6a:	4680      	mov	r8, r0
 8023a6c:	460c      	mov	r4, r1
 8023a6e:	465e      	mov	r6, fp
 8023a70:	46aa      	mov	sl, r5
 8023a72:	46a9      	mov	r9, r5
 8023a74:	9501      	str	r5, [sp, #4]
 8023a76:	68a2      	ldr	r2, [r4, #8]
 8023a78:	b152      	cbz	r2, 8023a90 <_scanf_float+0x60>
 8023a7a:	683b      	ldr	r3, [r7, #0]
 8023a7c:	781b      	ldrb	r3, [r3, #0]
 8023a7e:	2b4e      	cmp	r3, #78	; 0x4e
 8023a80:	d864      	bhi.n	8023b4c <_scanf_float+0x11c>
 8023a82:	2b40      	cmp	r3, #64	; 0x40
 8023a84:	d83c      	bhi.n	8023b00 <_scanf_float+0xd0>
 8023a86:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8023a8a:	b2c8      	uxtb	r0, r1
 8023a8c:	280e      	cmp	r0, #14
 8023a8e:	d93a      	bls.n	8023b06 <_scanf_float+0xd6>
 8023a90:	f1b9 0f00 	cmp.w	r9, #0
 8023a94:	d003      	beq.n	8023a9e <_scanf_float+0x6e>
 8023a96:	6823      	ldr	r3, [r4, #0]
 8023a98:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8023a9c:	6023      	str	r3, [r4, #0]
 8023a9e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023aa2:	f1ba 0f01 	cmp.w	sl, #1
 8023aa6:	f200 8113 	bhi.w	8023cd0 <_scanf_float+0x2a0>
 8023aaa:	455e      	cmp	r6, fp
 8023aac:	f200 8105 	bhi.w	8023cba <_scanf_float+0x28a>
 8023ab0:	2501      	movs	r5, #1
 8023ab2:	4628      	mov	r0, r5
 8023ab4:	b007      	add	sp, #28
 8023ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023aba:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8023abe:	2a0d      	cmp	r2, #13
 8023ac0:	d8e6      	bhi.n	8023a90 <_scanf_float+0x60>
 8023ac2:	a101      	add	r1, pc, #4	; (adr r1, 8023ac8 <_scanf_float+0x98>)
 8023ac4:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8023ac8:	08023c07 	.word	0x08023c07
 8023acc:	08023a91 	.word	0x08023a91
 8023ad0:	08023a91 	.word	0x08023a91
 8023ad4:	08023a91 	.word	0x08023a91
 8023ad8:	08023c67 	.word	0x08023c67
 8023adc:	08023c3f 	.word	0x08023c3f
 8023ae0:	08023a91 	.word	0x08023a91
 8023ae4:	08023a91 	.word	0x08023a91
 8023ae8:	08023c15 	.word	0x08023c15
 8023aec:	08023a91 	.word	0x08023a91
 8023af0:	08023a91 	.word	0x08023a91
 8023af4:	08023a91 	.word	0x08023a91
 8023af8:	08023a91 	.word	0x08023a91
 8023afc:	08023bcd 	.word	0x08023bcd
 8023b00:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8023b04:	e7db      	b.n	8023abe <_scanf_float+0x8e>
 8023b06:	290e      	cmp	r1, #14
 8023b08:	d8c2      	bhi.n	8023a90 <_scanf_float+0x60>
 8023b0a:	a001      	add	r0, pc, #4	; (adr r0, 8023b10 <_scanf_float+0xe0>)
 8023b0c:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8023b10:	08023bbf 	.word	0x08023bbf
 8023b14:	08023a91 	.word	0x08023a91
 8023b18:	08023bbf 	.word	0x08023bbf
 8023b1c:	08023c53 	.word	0x08023c53
 8023b20:	08023a91 	.word	0x08023a91
 8023b24:	08023b6d 	.word	0x08023b6d
 8023b28:	08023ba9 	.word	0x08023ba9
 8023b2c:	08023ba9 	.word	0x08023ba9
 8023b30:	08023ba9 	.word	0x08023ba9
 8023b34:	08023ba9 	.word	0x08023ba9
 8023b38:	08023ba9 	.word	0x08023ba9
 8023b3c:	08023ba9 	.word	0x08023ba9
 8023b40:	08023ba9 	.word	0x08023ba9
 8023b44:	08023ba9 	.word	0x08023ba9
 8023b48:	08023ba9 	.word	0x08023ba9
 8023b4c:	2b6e      	cmp	r3, #110	; 0x6e
 8023b4e:	d809      	bhi.n	8023b64 <_scanf_float+0x134>
 8023b50:	2b60      	cmp	r3, #96	; 0x60
 8023b52:	d8b2      	bhi.n	8023aba <_scanf_float+0x8a>
 8023b54:	2b54      	cmp	r3, #84	; 0x54
 8023b56:	d077      	beq.n	8023c48 <_scanf_float+0x218>
 8023b58:	2b59      	cmp	r3, #89	; 0x59
 8023b5a:	d199      	bne.n	8023a90 <_scanf_float+0x60>
 8023b5c:	2d07      	cmp	r5, #7
 8023b5e:	d197      	bne.n	8023a90 <_scanf_float+0x60>
 8023b60:	2508      	movs	r5, #8
 8023b62:	e029      	b.n	8023bb8 <_scanf_float+0x188>
 8023b64:	2b74      	cmp	r3, #116	; 0x74
 8023b66:	d06f      	beq.n	8023c48 <_scanf_float+0x218>
 8023b68:	2b79      	cmp	r3, #121	; 0x79
 8023b6a:	e7f6      	b.n	8023b5a <_scanf_float+0x12a>
 8023b6c:	6821      	ldr	r1, [r4, #0]
 8023b6e:	05c8      	lsls	r0, r1, #23
 8023b70:	d51a      	bpl.n	8023ba8 <_scanf_float+0x178>
 8023b72:	9b02      	ldr	r3, [sp, #8]
 8023b74:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8023b78:	6021      	str	r1, [r4, #0]
 8023b7a:	f109 0901 	add.w	r9, r9, #1
 8023b7e:	b11b      	cbz	r3, 8023b88 <_scanf_float+0x158>
 8023b80:	3b01      	subs	r3, #1
 8023b82:	3201      	adds	r2, #1
 8023b84:	9302      	str	r3, [sp, #8]
 8023b86:	60a2      	str	r2, [r4, #8]
 8023b88:	68a3      	ldr	r3, [r4, #8]
 8023b8a:	3b01      	subs	r3, #1
 8023b8c:	60a3      	str	r3, [r4, #8]
 8023b8e:	6923      	ldr	r3, [r4, #16]
 8023b90:	3301      	adds	r3, #1
 8023b92:	6123      	str	r3, [r4, #16]
 8023b94:	687b      	ldr	r3, [r7, #4]
 8023b96:	3b01      	subs	r3, #1
 8023b98:	2b00      	cmp	r3, #0
 8023b9a:	607b      	str	r3, [r7, #4]
 8023b9c:	f340 8084 	ble.w	8023ca8 <_scanf_float+0x278>
 8023ba0:	683b      	ldr	r3, [r7, #0]
 8023ba2:	3301      	adds	r3, #1
 8023ba4:	603b      	str	r3, [r7, #0]
 8023ba6:	e766      	b.n	8023a76 <_scanf_float+0x46>
 8023ba8:	eb1a 0f05 	cmn.w	sl, r5
 8023bac:	f47f af70 	bne.w	8023a90 <_scanf_float+0x60>
 8023bb0:	6822      	ldr	r2, [r4, #0]
 8023bb2:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8023bb6:	6022      	str	r2, [r4, #0]
 8023bb8:	f806 3b01 	strb.w	r3, [r6], #1
 8023bbc:	e7e4      	b.n	8023b88 <_scanf_float+0x158>
 8023bbe:	6822      	ldr	r2, [r4, #0]
 8023bc0:	0610      	lsls	r0, r2, #24
 8023bc2:	f57f af65 	bpl.w	8023a90 <_scanf_float+0x60>
 8023bc6:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8023bca:	e7f4      	b.n	8023bb6 <_scanf_float+0x186>
 8023bcc:	f1ba 0f00 	cmp.w	sl, #0
 8023bd0:	d10e      	bne.n	8023bf0 <_scanf_float+0x1c0>
 8023bd2:	f1b9 0f00 	cmp.w	r9, #0
 8023bd6:	d10e      	bne.n	8023bf6 <_scanf_float+0x1c6>
 8023bd8:	6822      	ldr	r2, [r4, #0]
 8023bda:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8023bde:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8023be2:	d108      	bne.n	8023bf6 <_scanf_float+0x1c6>
 8023be4:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8023be8:	6022      	str	r2, [r4, #0]
 8023bea:	f04f 0a01 	mov.w	sl, #1
 8023bee:	e7e3      	b.n	8023bb8 <_scanf_float+0x188>
 8023bf0:	f1ba 0f02 	cmp.w	sl, #2
 8023bf4:	d055      	beq.n	8023ca2 <_scanf_float+0x272>
 8023bf6:	2d01      	cmp	r5, #1
 8023bf8:	d002      	beq.n	8023c00 <_scanf_float+0x1d0>
 8023bfa:	2d04      	cmp	r5, #4
 8023bfc:	f47f af48 	bne.w	8023a90 <_scanf_float+0x60>
 8023c00:	3501      	adds	r5, #1
 8023c02:	b2ed      	uxtb	r5, r5
 8023c04:	e7d8      	b.n	8023bb8 <_scanf_float+0x188>
 8023c06:	f1ba 0f01 	cmp.w	sl, #1
 8023c0a:	f47f af41 	bne.w	8023a90 <_scanf_float+0x60>
 8023c0e:	f04f 0a02 	mov.w	sl, #2
 8023c12:	e7d1      	b.n	8023bb8 <_scanf_float+0x188>
 8023c14:	b97d      	cbnz	r5, 8023c36 <_scanf_float+0x206>
 8023c16:	f1b9 0f00 	cmp.w	r9, #0
 8023c1a:	f47f af3c 	bne.w	8023a96 <_scanf_float+0x66>
 8023c1e:	6822      	ldr	r2, [r4, #0]
 8023c20:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8023c24:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8023c28:	f47f af39 	bne.w	8023a9e <_scanf_float+0x6e>
 8023c2c:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8023c30:	6022      	str	r2, [r4, #0]
 8023c32:	2501      	movs	r5, #1
 8023c34:	e7c0      	b.n	8023bb8 <_scanf_float+0x188>
 8023c36:	2d03      	cmp	r5, #3
 8023c38:	d0e2      	beq.n	8023c00 <_scanf_float+0x1d0>
 8023c3a:	2d05      	cmp	r5, #5
 8023c3c:	e7de      	b.n	8023bfc <_scanf_float+0x1cc>
 8023c3e:	2d02      	cmp	r5, #2
 8023c40:	f47f af26 	bne.w	8023a90 <_scanf_float+0x60>
 8023c44:	2503      	movs	r5, #3
 8023c46:	e7b7      	b.n	8023bb8 <_scanf_float+0x188>
 8023c48:	2d06      	cmp	r5, #6
 8023c4a:	f47f af21 	bne.w	8023a90 <_scanf_float+0x60>
 8023c4e:	2507      	movs	r5, #7
 8023c50:	e7b2      	b.n	8023bb8 <_scanf_float+0x188>
 8023c52:	6822      	ldr	r2, [r4, #0]
 8023c54:	0591      	lsls	r1, r2, #22
 8023c56:	f57f af1b 	bpl.w	8023a90 <_scanf_float+0x60>
 8023c5a:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8023c5e:	6022      	str	r2, [r4, #0]
 8023c60:	f8cd 9004 	str.w	r9, [sp, #4]
 8023c64:	e7a8      	b.n	8023bb8 <_scanf_float+0x188>
 8023c66:	6822      	ldr	r2, [r4, #0]
 8023c68:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8023c6c:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8023c70:	d006      	beq.n	8023c80 <_scanf_float+0x250>
 8023c72:	0550      	lsls	r0, r2, #21
 8023c74:	f57f af0c 	bpl.w	8023a90 <_scanf_float+0x60>
 8023c78:	f1b9 0f00 	cmp.w	r9, #0
 8023c7c:	f43f af0f 	beq.w	8023a9e <_scanf_float+0x6e>
 8023c80:	0591      	lsls	r1, r2, #22
 8023c82:	bf58      	it	pl
 8023c84:	9901      	ldrpl	r1, [sp, #4]
 8023c86:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8023c8a:	bf58      	it	pl
 8023c8c:	eba9 0101 	subpl.w	r1, r9, r1
 8023c90:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8023c94:	bf58      	it	pl
 8023c96:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8023c9a:	6022      	str	r2, [r4, #0]
 8023c9c:	f04f 0900 	mov.w	r9, #0
 8023ca0:	e78a      	b.n	8023bb8 <_scanf_float+0x188>
 8023ca2:	f04f 0a03 	mov.w	sl, #3
 8023ca6:	e787      	b.n	8023bb8 <_scanf_float+0x188>
 8023ca8:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8023cac:	4639      	mov	r1, r7
 8023cae:	4640      	mov	r0, r8
 8023cb0:	4798      	blx	r3
 8023cb2:	2800      	cmp	r0, #0
 8023cb4:	f43f aedf 	beq.w	8023a76 <_scanf_float+0x46>
 8023cb8:	e6ea      	b.n	8023a90 <_scanf_float+0x60>
 8023cba:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023cbe:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8023cc2:	463a      	mov	r2, r7
 8023cc4:	4640      	mov	r0, r8
 8023cc6:	4798      	blx	r3
 8023cc8:	6923      	ldr	r3, [r4, #16]
 8023cca:	3b01      	subs	r3, #1
 8023ccc:	6123      	str	r3, [r4, #16]
 8023cce:	e6ec      	b.n	8023aaa <_scanf_float+0x7a>
 8023cd0:	1e6b      	subs	r3, r5, #1
 8023cd2:	2b06      	cmp	r3, #6
 8023cd4:	d825      	bhi.n	8023d22 <_scanf_float+0x2f2>
 8023cd6:	2d02      	cmp	r5, #2
 8023cd8:	d836      	bhi.n	8023d48 <_scanf_float+0x318>
 8023cda:	455e      	cmp	r6, fp
 8023cdc:	f67f aee8 	bls.w	8023ab0 <_scanf_float+0x80>
 8023ce0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023ce4:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8023ce8:	463a      	mov	r2, r7
 8023cea:	4640      	mov	r0, r8
 8023cec:	4798      	blx	r3
 8023cee:	6923      	ldr	r3, [r4, #16]
 8023cf0:	3b01      	subs	r3, #1
 8023cf2:	6123      	str	r3, [r4, #16]
 8023cf4:	e7f1      	b.n	8023cda <_scanf_float+0x2aa>
 8023cf6:	9802      	ldr	r0, [sp, #8]
 8023cf8:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023cfc:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8023d00:	9002      	str	r0, [sp, #8]
 8023d02:	463a      	mov	r2, r7
 8023d04:	4640      	mov	r0, r8
 8023d06:	4798      	blx	r3
 8023d08:	6923      	ldr	r3, [r4, #16]
 8023d0a:	3b01      	subs	r3, #1
 8023d0c:	6123      	str	r3, [r4, #16]
 8023d0e:	f10a 3aff 	add.w	sl, sl, #4294967295
 8023d12:	fa5f fa8a 	uxtb.w	sl, sl
 8023d16:	f1ba 0f02 	cmp.w	sl, #2
 8023d1a:	d1ec      	bne.n	8023cf6 <_scanf_float+0x2c6>
 8023d1c:	3d03      	subs	r5, #3
 8023d1e:	b2ed      	uxtb	r5, r5
 8023d20:	1b76      	subs	r6, r6, r5
 8023d22:	6823      	ldr	r3, [r4, #0]
 8023d24:	05da      	lsls	r2, r3, #23
 8023d26:	d52f      	bpl.n	8023d88 <_scanf_float+0x358>
 8023d28:	055b      	lsls	r3, r3, #21
 8023d2a:	d510      	bpl.n	8023d4e <_scanf_float+0x31e>
 8023d2c:	455e      	cmp	r6, fp
 8023d2e:	f67f aebf 	bls.w	8023ab0 <_scanf_float+0x80>
 8023d32:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023d36:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8023d3a:	463a      	mov	r2, r7
 8023d3c:	4640      	mov	r0, r8
 8023d3e:	4798      	blx	r3
 8023d40:	6923      	ldr	r3, [r4, #16]
 8023d42:	3b01      	subs	r3, #1
 8023d44:	6123      	str	r3, [r4, #16]
 8023d46:	e7f1      	b.n	8023d2c <_scanf_float+0x2fc>
 8023d48:	46aa      	mov	sl, r5
 8023d4a:	9602      	str	r6, [sp, #8]
 8023d4c:	e7df      	b.n	8023d0e <_scanf_float+0x2de>
 8023d4e:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8023d52:	6923      	ldr	r3, [r4, #16]
 8023d54:	2965      	cmp	r1, #101	; 0x65
 8023d56:	f103 33ff 	add.w	r3, r3, #4294967295
 8023d5a:	f106 35ff 	add.w	r5, r6, #4294967295
 8023d5e:	6123      	str	r3, [r4, #16]
 8023d60:	d00c      	beq.n	8023d7c <_scanf_float+0x34c>
 8023d62:	2945      	cmp	r1, #69	; 0x45
 8023d64:	d00a      	beq.n	8023d7c <_scanf_float+0x34c>
 8023d66:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023d6a:	463a      	mov	r2, r7
 8023d6c:	4640      	mov	r0, r8
 8023d6e:	4798      	blx	r3
 8023d70:	6923      	ldr	r3, [r4, #16]
 8023d72:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8023d76:	3b01      	subs	r3, #1
 8023d78:	1eb5      	subs	r5, r6, #2
 8023d7a:	6123      	str	r3, [r4, #16]
 8023d7c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8023d80:	463a      	mov	r2, r7
 8023d82:	4640      	mov	r0, r8
 8023d84:	4798      	blx	r3
 8023d86:	462e      	mov	r6, r5
 8023d88:	6825      	ldr	r5, [r4, #0]
 8023d8a:	f015 0510 	ands.w	r5, r5, #16
 8023d8e:	d159      	bne.n	8023e44 <_scanf_float+0x414>
 8023d90:	7035      	strb	r5, [r6, #0]
 8023d92:	6823      	ldr	r3, [r4, #0]
 8023d94:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8023d98:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8023d9c:	d11b      	bne.n	8023dd6 <_scanf_float+0x3a6>
 8023d9e:	9b01      	ldr	r3, [sp, #4]
 8023da0:	454b      	cmp	r3, r9
 8023da2:	eba3 0209 	sub.w	r2, r3, r9
 8023da6:	d123      	bne.n	8023df0 <_scanf_float+0x3c0>
 8023da8:	2200      	movs	r2, #0
 8023daa:	4659      	mov	r1, fp
 8023dac:	4640      	mov	r0, r8
 8023dae:	f000 ff91 	bl	8024cd4 <_strtod_r>
 8023db2:	6822      	ldr	r2, [r4, #0]
 8023db4:	9b03      	ldr	r3, [sp, #12]
 8023db6:	f012 0f02 	tst.w	r2, #2
 8023dba:	ec57 6b10 	vmov	r6, r7, d0
 8023dbe:	681b      	ldr	r3, [r3, #0]
 8023dc0:	d021      	beq.n	8023e06 <_scanf_float+0x3d6>
 8023dc2:	9903      	ldr	r1, [sp, #12]
 8023dc4:	1d1a      	adds	r2, r3, #4
 8023dc6:	600a      	str	r2, [r1, #0]
 8023dc8:	681b      	ldr	r3, [r3, #0]
 8023dca:	e9c3 6700 	strd	r6, r7, [r3]
 8023dce:	68e3      	ldr	r3, [r4, #12]
 8023dd0:	3301      	adds	r3, #1
 8023dd2:	60e3      	str	r3, [r4, #12]
 8023dd4:	e66d      	b.n	8023ab2 <_scanf_float+0x82>
 8023dd6:	9b04      	ldr	r3, [sp, #16]
 8023dd8:	2b00      	cmp	r3, #0
 8023dda:	d0e5      	beq.n	8023da8 <_scanf_float+0x378>
 8023ddc:	9905      	ldr	r1, [sp, #20]
 8023dde:	230a      	movs	r3, #10
 8023de0:	462a      	mov	r2, r5
 8023de2:	3101      	adds	r1, #1
 8023de4:	4640      	mov	r0, r8
 8023de6:	f000 fffd 	bl	8024de4 <_strtol_r>
 8023dea:	9b04      	ldr	r3, [sp, #16]
 8023dec:	9e05      	ldr	r6, [sp, #20]
 8023dee:	1ac2      	subs	r2, r0, r3
 8023df0:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8023df4:	429e      	cmp	r6, r3
 8023df6:	bf28      	it	cs
 8023df8:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8023dfc:	4912      	ldr	r1, [pc, #72]	; (8023e48 <_scanf_float+0x418>)
 8023dfe:	4630      	mov	r0, r6
 8023e00:	f000 f924 	bl	802404c <siprintf>
 8023e04:	e7d0      	b.n	8023da8 <_scanf_float+0x378>
 8023e06:	9903      	ldr	r1, [sp, #12]
 8023e08:	f012 0f04 	tst.w	r2, #4
 8023e0c:	f103 0204 	add.w	r2, r3, #4
 8023e10:	600a      	str	r2, [r1, #0]
 8023e12:	d1d9      	bne.n	8023dc8 <_scanf_float+0x398>
 8023e14:	f8d3 8000 	ldr.w	r8, [r3]
 8023e18:	ee10 2a10 	vmov	r2, s0
 8023e1c:	ee10 0a10 	vmov	r0, s0
 8023e20:	463b      	mov	r3, r7
 8023e22:	4639      	mov	r1, r7
 8023e24:	f7dc fe92 	bl	8000b4c <__aeabi_dcmpun>
 8023e28:	b128      	cbz	r0, 8023e36 <_scanf_float+0x406>
 8023e2a:	4808      	ldr	r0, [pc, #32]	; (8023e4c <_scanf_float+0x41c>)
 8023e2c:	f000 f8c4 	bl	8023fb8 <nanf>
 8023e30:	ed88 0a00 	vstr	s0, [r8]
 8023e34:	e7cb      	b.n	8023dce <_scanf_float+0x39e>
 8023e36:	4630      	mov	r0, r6
 8023e38:	4639      	mov	r1, r7
 8023e3a:	f7dc fee5 	bl	8000c08 <__aeabi_d2f>
 8023e3e:	f8c8 0000 	str.w	r0, [r8]
 8023e42:	e7c4      	b.n	8023dce <_scanf_float+0x39e>
 8023e44:	2500      	movs	r5, #0
 8023e46:	e634      	b.n	8023ab2 <_scanf_float+0x82>
 8023e48:	0802ae4b 	.word	0x0802ae4b
 8023e4c:	08028182 	.word	0x08028182

08023e50 <iprintf>:
 8023e50:	b40f      	push	{r0, r1, r2, r3}
 8023e52:	4b0a      	ldr	r3, [pc, #40]	; (8023e7c <iprintf+0x2c>)
 8023e54:	b513      	push	{r0, r1, r4, lr}
 8023e56:	681c      	ldr	r4, [r3, #0]
 8023e58:	b124      	cbz	r4, 8023e64 <iprintf+0x14>
 8023e5a:	69a3      	ldr	r3, [r4, #24]
 8023e5c:	b913      	cbnz	r3, 8023e64 <iprintf+0x14>
 8023e5e:	4620      	mov	r0, r4
 8023e60:	f002 f87a 	bl	8025f58 <__sinit>
 8023e64:	ab05      	add	r3, sp, #20
 8023e66:	9a04      	ldr	r2, [sp, #16]
 8023e68:	68a1      	ldr	r1, [r4, #8]
 8023e6a:	9301      	str	r3, [sp, #4]
 8023e6c:	4620      	mov	r0, r4
 8023e6e:	f7ff f845 	bl	8022efc <_vfiprintf_r>
 8023e72:	b002      	add	sp, #8
 8023e74:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023e78:	b004      	add	sp, #16
 8023e7a:	4770      	bx	lr
 8023e7c:	200000fc 	.word	0x200000fc

08023e80 <putchar>:
 8023e80:	4b09      	ldr	r3, [pc, #36]	; (8023ea8 <putchar+0x28>)
 8023e82:	b513      	push	{r0, r1, r4, lr}
 8023e84:	681c      	ldr	r4, [r3, #0]
 8023e86:	4601      	mov	r1, r0
 8023e88:	b134      	cbz	r4, 8023e98 <putchar+0x18>
 8023e8a:	69a3      	ldr	r3, [r4, #24]
 8023e8c:	b923      	cbnz	r3, 8023e98 <putchar+0x18>
 8023e8e:	9001      	str	r0, [sp, #4]
 8023e90:	4620      	mov	r0, r4
 8023e92:	f002 f861 	bl	8025f58 <__sinit>
 8023e96:	9901      	ldr	r1, [sp, #4]
 8023e98:	68a2      	ldr	r2, [r4, #8]
 8023e9a:	4620      	mov	r0, r4
 8023e9c:	b002      	add	sp, #8
 8023e9e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8023ea2:	f003 bb6d 	b.w	8027580 <_putc_r>
 8023ea6:	bf00      	nop
 8023ea8:	200000fc 	.word	0x200000fc

08023eac <_puts_r>:
 8023eac:	b570      	push	{r4, r5, r6, lr}
 8023eae:	460e      	mov	r6, r1
 8023eb0:	4605      	mov	r5, r0
 8023eb2:	b118      	cbz	r0, 8023ebc <_puts_r+0x10>
 8023eb4:	6983      	ldr	r3, [r0, #24]
 8023eb6:	b90b      	cbnz	r3, 8023ebc <_puts_r+0x10>
 8023eb8:	f002 f84e 	bl	8025f58 <__sinit>
 8023ebc:	69ab      	ldr	r3, [r5, #24]
 8023ebe:	68ac      	ldr	r4, [r5, #8]
 8023ec0:	b913      	cbnz	r3, 8023ec8 <_puts_r+0x1c>
 8023ec2:	4628      	mov	r0, r5
 8023ec4:	f002 f848 	bl	8025f58 <__sinit>
 8023ec8:	4b2c      	ldr	r3, [pc, #176]	; (8023f7c <_puts_r+0xd0>)
 8023eca:	429c      	cmp	r4, r3
 8023ecc:	d120      	bne.n	8023f10 <_puts_r+0x64>
 8023ece:	686c      	ldr	r4, [r5, #4]
 8023ed0:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8023ed2:	07db      	lsls	r3, r3, #31
 8023ed4:	d405      	bmi.n	8023ee2 <_puts_r+0x36>
 8023ed6:	89a3      	ldrh	r3, [r4, #12]
 8023ed8:	0598      	lsls	r0, r3, #22
 8023eda:	d402      	bmi.n	8023ee2 <_puts_r+0x36>
 8023edc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8023ede:	f002 fc4c 	bl	802677a <__retarget_lock_acquire_recursive>
 8023ee2:	89a3      	ldrh	r3, [r4, #12]
 8023ee4:	0719      	lsls	r1, r3, #28
 8023ee6:	d51d      	bpl.n	8023f24 <_puts_r+0x78>
 8023ee8:	6923      	ldr	r3, [r4, #16]
 8023eea:	b1db      	cbz	r3, 8023f24 <_puts_r+0x78>
 8023eec:	3e01      	subs	r6, #1
 8023eee:	68a3      	ldr	r3, [r4, #8]
 8023ef0:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 8023ef4:	3b01      	subs	r3, #1
 8023ef6:	60a3      	str	r3, [r4, #8]
 8023ef8:	bb39      	cbnz	r1, 8023f4a <_puts_r+0x9e>
 8023efa:	2b00      	cmp	r3, #0
 8023efc:	da38      	bge.n	8023f70 <_puts_r+0xc4>
 8023efe:	4622      	mov	r2, r4
 8023f00:	210a      	movs	r1, #10
 8023f02:	4628      	mov	r0, r5
 8023f04:	f000 ff70 	bl	8024de8 <__swbuf_r>
 8023f08:	3001      	adds	r0, #1
 8023f0a:	d011      	beq.n	8023f30 <_puts_r+0x84>
 8023f0c:	250a      	movs	r5, #10
 8023f0e:	e011      	b.n	8023f34 <_puts_r+0x88>
 8023f10:	4b1b      	ldr	r3, [pc, #108]	; (8023f80 <_puts_r+0xd4>)
 8023f12:	429c      	cmp	r4, r3
 8023f14:	d101      	bne.n	8023f1a <_puts_r+0x6e>
 8023f16:	68ac      	ldr	r4, [r5, #8]
 8023f18:	e7da      	b.n	8023ed0 <_puts_r+0x24>
 8023f1a:	4b1a      	ldr	r3, [pc, #104]	; (8023f84 <_puts_r+0xd8>)
 8023f1c:	429c      	cmp	r4, r3
 8023f1e:	bf08      	it	eq
 8023f20:	68ec      	ldreq	r4, [r5, #12]
 8023f22:	e7d5      	b.n	8023ed0 <_puts_r+0x24>
 8023f24:	4621      	mov	r1, r4
 8023f26:	4628      	mov	r0, r5
 8023f28:	f000 ffb0 	bl	8024e8c <__swsetup_r>
 8023f2c:	2800      	cmp	r0, #0
 8023f2e:	d0dd      	beq.n	8023eec <_puts_r+0x40>
 8023f30:	f04f 35ff 	mov.w	r5, #4294967295
 8023f34:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8023f36:	07da      	lsls	r2, r3, #31
 8023f38:	d405      	bmi.n	8023f46 <_puts_r+0x9a>
 8023f3a:	89a3      	ldrh	r3, [r4, #12]
 8023f3c:	059b      	lsls	r3, r3, #22
 8023f3e:	d402      	bmi.n	8023f46 <_puts_r+0x9a>
 8023f40:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8023f42:	f002 fc1c 	bl	802677e <__retarget_lock_release_recursive>
 8023f46:	4628      	mov	r0, r5
 8023f48:	bd70      	pop	{r4, r5, r6, pc}
 8023f4a:	2b00      	cmp	r3, #0
 8023f4c:	da04      	bge.n	8023f58 <_puts_r+0xac>
 8023f4e:	69a2      	ldr	r2, [r4, #24]
 8023f50:	429a      	cmp	r2, r3
 8023f52:	dc06      	bgt.n	8023f62 <_puts_r+0xb6>
 8023f54:	290a      	cmp	r1, #10
 8023f56:	d004      	beq.n	8023f62 <_puts_r+0xb6>
 8023f58:	6823      	ldr	r3, [r4, #0]
 8023f5a:	1c5a      	adds	r2, r3, #1
 8023f5c:	6022      	str	r2, [r4, #0]
 8023f5e:	7019      	strb	r1, [r3, #0]
 8023f60:	e7c5      	b.n	8023eee <_puts_r+0x42>
 8023f62:	4622      	mov	r2, r4
 8023f64:	4628      	mov	r0, r5
 8023f66:	f000 ff3f 	bl	8024de8 <__swbuf_r>
 8023f6a:	3001      	adds	r0, #1
 8023f6c:	d1bf      	bne.n	8023eee <_puts_r+0x42>
 8023f6e:	e7df      	b.n	8023f30 <_puts_r+0x84>
 8023f70:	6823      	ldr	r3, [r4, #0]
 8023f72:	250a      	movs	r5, #10
 8023f74:	1c5a      	adds	r2, r3, #1
 8023f76:	6022      	str	r2, [r4, #0]
 8023f78:	701d      	strb	r5, [r3, #0]
 8023f7a:	e7db      	b.n	8023f34 <_puts_r+0x88>
 8023f7c:	0802b05c 	.word	0x0802b05c
 8023f80:	0802b07c 	.word	0x0802b07c
 8023f84:	0802b03c 	.word	0x0802b03c

08023f88 <puts>:
 8023f88:	4b02      	ldr	r3, [pc, #8]	; (8023f94 <puts+0xc>)
 8023f8a:	4601      	mov	r1, r0
 8023f8c:	6818      	ldr	r0, [r3, #0]
 8023f8e:	f7ff bf8d 	b.w	8023eac <_puts_r>
 8023f92:	bf00      	nop
 8023f94:	200000fc 	.word	0x200000fc

08023f98 <_sbrk_r>:
 8023f98:	b538      	push	{r3, r4, r5, lr}
 8023f9a:	4d06      	ldr	r5, [pc, #24]	; (8023fb4 <_sbrk_r+0x1c>)
 8023f9c:	2300      	movs	r3, #0
 8023f9e:	4604      	mov	r4, r0
 8023fa0:	4608      	mov	r0, r1
 8023fa2:	602b      	str	r3, [r5, #0]
 8023fa4:	f7df f8fe 	bl	80031a4 <_sbrk>
 8023fa8:	1c43      	adds	r3, r0, #1
 8023faa:	d102      	bne.n	8023fb2 <_sbrk_r+0x1a>
 8023fac:	682b      	ldr	r3, [r5, #0]
 8023fae:	b103      	cbz	r3, 8023fb2 <_sbrk_r+0x1a>
 8023fb0:	6023      	str	r3, [r4, #0]
 8023fb2:	bd38      	pop	{r3, r4, r5, pc}
 8023fb4:	20013a00 	.word	0x20013a00

08023fb8 <nanf>:
 8023fb8:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8023fc0 <nanf+0x8>
 8023fbc:	4770      	bx	lr
 8023fbe:	bf00      	nop
 8023fc0:	7fc00000 	.word	0x7fc00000

08023fc4 <_raise_r>:
 8023fc4:	291f      	cmp	r1, #31
 8023fc6:	b538      	push	{r3, r4, r5, lr}
 8023fc8:	4604      	mov	r4, r0
 8023fca:	460d      	mov	r5, r1
 8023fcc:	d904      	bls.n	8023fd8 <_raise_r+0x14>
 8023fce:	2316      	movs	r3, #22
 8023fd0:	6003      	str	r3, [r0, #0]
 8023fd2:	f04f 30ff 	mov.w	r0, #4294967295
 8023fd6:	bd38      	pop	{r3, r4, r5, pc}
 8023fd8:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8023fda:	b112      	cbz	r2, 8023fe2 <_raise_r+0x1e>
 8023fdc:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8023fe0:	b94b      	cbnz	r3, 8023ff6 <_raise_r+0x32>
 8023fe2:	4620      	mov	r0, r4
 8023fe4:	f000 f830 	bl	8024048 <_getpid_r>
 8023fe8:	462a      	mov	r2, r5
 8023fea:	4601      	mov	r1, r0
 8023fec:	4620      	mov	r0, r4
 8023fee:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8023ff2:	f000 b817 	b.w	8024024 <_kill_r>
 8023ff6:	2b01      	cmp	r3, #1
 8023ff8:	d00a      	beq.n	8024010 <_raise_r+0x4c>
 8023ffa:	1c59      	adds	r1, r3, #1
 8023ffc:	d103      	bne.n	8024006 <_raise_r+0x42>
 8023ffe:	2316      	movs	r3, #22
 8024000:	6003      	str	r3, [r0, #0]
 8024002:	2001      	movs	r0, #1
 8024004:	e7e7      	b.n	8023fd6 <_raise_r+0x12>
 8024006:	2400      	movs	r4, #0
 8024008:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 802400c:	4628      	mov	r0, r5
 802400e:	4798      	blx	r3
 8024010:	2000      	movs	r0, #0
 8024012:	e7e0      	b.n	8023fd6 <_raise_r+0x12>

08024014 <raise>:
 8024014:	4b02      	ldr	r3, [pc, #8]	; (8024020 <raise+0xc>)
 8024016:	4601      	mov	r1, r0
 8024018:	6818      	ldr	r0, [r3, #0]
 802401a:	f7ff bfd3 	b.w	8023fc4 <_raise_r>
 802401e:	bf00      	nop
 8024020:	200000fc 	.word	0x200000fc

08024024 <_kill_r>:
 8024024:	b538      	push	{r3, r4, r5, lr}
 8024026:	4d07      	ldr	r5, [pc, #28]	; (8024044 <_kill_r+0x20>)
 8024028:	2300      	movs	r3, #0
 802402a:	4604      	mov	r4, r0
 802402c:	4608      	mov	r0, r1
 802402e:	4611      	mov	r1, r2
 8024030:	602b      	str	r3, [r5, #0]
 8024032:	f7df f881 	bl	8003138 <_kill>
 8024036:	1c43      	adds	r3, r0, #1
 8024038:	d102      	bne.n	8024040 <_kill_r+0x1c>
 802403a:	682b      	ldr	r3, [r5, #0]
 802403c:	b103      	cbz	r3, 8024040 <_kill_r+0x1c>
 802403e:	6023      	str	r3, [r4, #0]
 8024040:	bd38      	pop	{r3, r4, r5, pc}
 8024042:	bf00      	nop
 8024044:	20013a00 	.word	0x20013a00

08024048 <_getpid_r>:
 8024048:	f7df b874 	b.w	8003134 <_getpid>

0802404c <siprintf>:
 802404c:	b40e      	push	{r1, r2, r3}
 802404e:	b500      	push	{lr}
 8024050:	b09c      	sub	sp, #112	; 0x70
 8024052:	ab1d      	add	r3, sp, #116	; 0x74
 8024054:	9002      	str	r0, [sp, #8]
 8024056:	9006      	str	r0, [sp, #24]
 8024058:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 802405c:	4809      	ldr	r0, [pc, #36]	; (8024084 <siprintf+0x38>)
 802405e:	9107      	str	r1, [sp, #28]
 8024060:	9104      	str	r1, [sp, #16]
 8024062:	4909      	ldr	r1, [pc, #36]	; (8024088 <siprintf+0x3c>)
 8024064:	f853 2b04 	ldr.w	r2, [r3], #4
 8024068:	9105      	str	r1, [sp, #20]
 802406a:	6800      	ldr	r0, [r0, #0]
 802406c:	9301      	str	r3, [sp, #4]
 802406e:	a902      	add	r1, sp, #8
 8024070:	f003 f986 	bl	8027380 <_svfiprintf_r>
 8024074:	9b02      	ldr	r3, [sp, #8]
 8024076:	2200      	movs	r2, #0
 8024078:	701a      	strb	r2, [r3, #0]
 802407a:	b01c      	add	sp, #112	; 0x70
 802407c:	f85d eb04 	ldr.w	lr, [sp], #4
 8024080:	b003      	add	sp, #12
 8024082:	4770      	bx	lr
 8024084:	200000fc 	.word	0x200000fc
 8024088:	ffff0208 	.word	0xffff0208

0802408c <sulp>:
 802408c:	b570      	push	{r4, r5, r6, lr}
 802408e:	4604      	mov	r4, r0
 8024090:	460d      	mov	r5, r1
 8024092:	ec45 4b10 	vmov	d0, r4, r5
 8024096:	4616      	mov	r6, r2
 8024098:	f002 ff82 	bl	8026fa0 <__ulp>
 802409c:	ec51 0b10 	vmov	r0, r1, d0
 80240a0:	b17e      	cbz	r6, 80240c2 <sulp+0x36>
 80240a2:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80240a6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80240aa:	2b00      	cmp	r3, #0
 80240ac:	dd09      	ble.n	80240c2 <sulp+0x36>
 80240ae:	051b      	lsls	r3, r3, #20
 80240b0:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80240b4:	2400      	movs	r4, #0
 80240b6:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80240ba:	4622      	mov	r2, r4
 80240bc:	462b      	mov	r3, r5
 80240be:	f7dc faab 	bl	8000618 <__aeabi_dmul>
 80240c2:	bd70      	pop	{r4, r5, r6, pc}
 80240c4:	0000      	movs	r0, r0
	...

080240c8 <_strtod_l>:
 80240c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80240cc:	ed2d 8b02 	vpush	{d8}
 80240d0:	b09d      	sub	sp, #116	; 0x74
 80240d2:	461f      	mov	r7, r3
 80240d4:	2300      	movs	r3, #0
 80240d6:	9318      	str	r3, [sp, #96]	; 0x60
 80240d8:	4ba2      	ldr	r3, [pc, #648]	; (8024364 <_strtod_l+0x29c>)
 80240da:	9213      	str	r2, [sp, #76]	; 0x4c
 80240dc:	681b      	ldr	r3, [r3, #0]
 80240de:	9305      	str	r3, [sp, #20]
 80240e0:	4604      	mov	r4, r0
 80240e2:	4618      	mov	r0, r3
 80240e4:	4688      	mov	r8, r1
 80240e6:	f7dc f883 	bl	80001f0 <strlen>
 80240ea:	f04f 0a00 	mov.w	sl, #0
 80240ee:	4605      	mov	r5, r0
 80240f0:	f04f 0b00 	mov.w	fp, #0
 80240f4:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 80240f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80240fa:	781a      	ldrb	r2, [r3, #0]
 80240fc:	2a2b      	cmp	r2, #43	; 0x2b
 80240fe:	d04e      	beq.n	802419e <_strtod_l+0xd6>
 8024100:	d83b      	bhi.n	802417a <_strtod_l+0xb2>
 8024102:	2a0d      	cmp	r2, #13
 8024104:	d834      	bhi.n	8024170 <_strtod_l+0xa8>
 8024106:	2a08      	cmp	r2, #8
 8024108:	d834      	bhi.n	8024174 <_strtod_l+0xac>
 802410a:	2a00      	cmp	r2, #0
 802410c:	d03e      	beq.n	802418c <_strtod_l+0xc4>
 802410e:	2300      	movs	r3, #0
 8024110:	930a      	str	r3, [sp, #40]	; 0x28
 8024112:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8024114:	7833      	ldrb	r3, [r6, #0]
 8024116:	2b30      	cmp	r3, #48	; 0x30
 8024118:	f040 80b0 	bne.w	802427c <_strtod_l+0x1b4>
 802411c:	7873      	ldrb	r3, [r6, #1]
 802411e:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 8024122:	2b58      	cmp	r3, #88	; 0x58
 8024124:	d168      	bne.n	80241f8 <_strtod_l+0x130>
 8024126:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8024128:	9301      	str	r3, [sp, #4]
 802412a:	ab18      	add	r3, sp, #96	; 0x60
 802412c:	9702      	str	r7, [sp, #8]
 802412e:	9300      	str	r3, [sp, #0]
 8024130:	4a8d      	ldr	r2, [pc, #564]	; (8024368 <_strtod_l+0x2a0>)
 8024132:	ab19      	add	r3, sp, #100	; 0x64
 8024134:	a917      	add	r1, sp, #92	; 0x5c
 8024136:	4620      	mov	r0, r4
 8024138:	f002 f812 	bl	8026160 <__gethex>
 802413c:	f010 0707 	ands.w	r7, r0, #7
 8024140:	4605      	mov	r5, r0
 8024142:	d005      	beq.n	8024150 <_strtod_l+0x88>
 8024144:	2f06      	cmp	r7, #6
 8024146:	d12c      	bne.n	80241a2 <_strtod_l+0xda>
 8024148:	3601      	adds	r6, #1
 802414a:	2300      	movs	r3, #0
 802414c:	9617      	str	r6, [sp, #92]	; 0x5c
 802414e:	930a      	str	r3, [sp, #40]	; 0x28
 8024150:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8024152:	2b00      	cmp	r3, #0
 8024154:	f040 8590 	bne.w	8024c78 <_strtod_l+0xbb0>
 8024158:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 802415a:	b1eb      	cbz	r3, 8024198 <_strtod_l+0xd0>
 802415c:	4652      	mov	r2, sl
 802415e:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8024162:	ec43 2b10 	vmov	d0, r2, r3
 8024166:	b01d      	add	sp, #116	; 0x74
 8024168:	ecbd 8b02 	vpop	{d8}
 802416c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8024170:	2a20      	cmp	r2, #32
 8024172:	d1cc      	bne.n	802410e <_strtod_l+0x46>
 8024174:	3301      	adds	r3, #1
 8024176:	9317      	str	r3, [sp, #92]	; 0x5c
 8024178:	e7be      	b.n	80240f8 <_strtod_l+0x30>
 802417a:	2a2d      	cmp	r2, #45	; 0x2d
 802417c:	d1c7      	bne.n	802410e <_strtod_l+0x46>
 802417e:	2201      	movs	r2, #1
 8024180:	920a      	str	r2, [sp, #40]	; 0x28
 8024182:	1c5a      	adds	r2, r3, #1
 8024184:	9217      	str	r2, [sp, #92]	; 0x5c
 8024186:	785b      	ldrb	r3, [r3, #1]
 8024188:	2b00      	cmp	r3, #0
 802418a:	d1c2      	bne.n	8024112 <_strtod_l+0x4a>
 802418c:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 802418e:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8024192:	2b00      	cmp	r3, #0
 8024194:	f040 856e 	bne.w	8024c74 <_strtod_l+0xbac>
 8024198:	4652      	mov	r2, sl
 802419a:	465b      	mov	r3, fp
 802419c:	e7e1      	b.n	8024162 <_strtod_l+0x9a>
 802419e:	2200      	movs	r2, #0
 80241a0:	e7ee      	b.n	8024180 <_strtod_l+0xb8>
 80241a2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 80241a4:	b13a      	cbz	r2, 80241b6 <_strtod_l+0xee>
 80241a6:	2135      	movs	r1, #53	; 0x35
 80241a8:	a81a      	add	r0, sp, #104	; 0x68
 80241aa:	f003 f804 	bl	80271b6 <__copybits>
 80241ae:	9918      	ldr	r1, [sp, #96]	; 0x60
 80241b0:	4620      	mov	r0, r4
 80241b2:	f002 fbc3 	bl	802693c <_Bfree>
 80241b6:	3f01      	subs	r7, #1
 80241b8:	2f04      	cmp	r7, #4
 80241ba:	d806      	bhi.n	80241ca <_strtod_l+0x102>
 80241bc:	e8df f007 	tbb	[pc, r7]
 80241c0:	1714030a 	.word	0x1714030a
 80241c4:	0a          	.byte	0x0a
 80241c5:	00          	.byte	0x00
 80241c6:	e9dd ab1a 	ldrd	sl, fp, [sp, #104]	; 0x68
 80241ca:	0728      	lsls	r0, r5, #28
 80241cc:	d5c0      	bpl.n	8024150 <_strtod_l+0x88>
 80241ce:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80241d2:	e7bd      	b.n	8024150 <_strtod_l+0x88>
 80241d4:	e9dd a31a 	ldrd	sl, r3, [sp, #104]	; 0x68
 80241d8:	9a19      	ldr	r2, [sp, #100]	; 0x64
 80241da:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80241de:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80241e2:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80241e6:	e7f0      	b.n	80241ca <_strtod_l+0x102>
 80241e8:	f8df b180 	ldr.w	fp, [pc, #384]	; 802436c <_strtod_l+0x2a4>
 80241ec:	e7ed      	b.n	80241ca <_strtod_l+0x102>
 80241ee:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80241f2:	f04f 3aff 	mov.w	sl, #4294967295
 80241f6:	e7e8      	b.n	80241ca <_strtod_l+0x102>
 80241f8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80241fa:	1c5a      	adds	r2, r3, #1
 80241fc:	9217      	str	r2, [sp, #92]	; 0x5c
 80241fe:	785b      	ldrb	r3, [r3, #1]
 8024200:	2b30      	cmp	r3, #48	; 0x30
 8024202:	d0f9      	beq.n	80241f8 <_strtod_l+0x130>
 8024204:	2b00      	cmp	r3, #0
 8024206:	d0a3      	beq.n	8024150 <_strtod_l+0x88>
 8024208:	2301      	movs	r3, #1
 802420a:	f04f 0900 	mov.w	r9, #0
 802420e:	9304      	str	r3, [sp, #16]
 8024210:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024212:	9308      	str	r3, [sp, #32]
 8024214:	f8cd 901c 	str.w	r9, [sp, #28]
 8024218:	464f      	mov	r7, r9
 802421a:	220a      	movs	r2, #10
 802421c:	9817      	ldr	r0, [sp, #92]	; 0x5c
 802421e:	7806      	ldrb	r6, [r0, #0]
 8024220:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 8024224:	b2d9      	uxtb	r1, r3
 8024226:	2909      	cmp	r1, #9
 8024228:	d92a      	bls.n	8024280 <_strtod_l+0x1b8>
 802422a:	9905      	ldr	r1, [sp, #20]
 802422c:	462a      	mov	r2, r5
 802422e:	f003 fa3a 	bl	80276a6 <strncmp>
 8024232:	b398      	cbz	r0, 802429c <_strtod_l+0x1d4>
 8024234:	2000      	movs	r0, #0
 8024236:	4632      	mov	r2, r6
 8024238:	463d      	mov	r5, r7
 802423a:	9005      	str	r0, [sp, #20]
 802423c:	4603      	mov	r3, r0
 802423e:	2a65      	cmp	r2, #101	; 0x65
 8024240:	d001      	beq.n	8024246 <_strtod_l+0x17e>
 8024242:	2a45      	cmp	r2, #69	; 0x45
 8024244:	d118      	bne.n	8024278 <_strtod_l+0x1b0>
 8024246:	b91d      	cbnz	r5, 8024250 <_strtod_l+0x188>
 8024248:	9a04      	ldr	r2, [sp, #16]
 802424a:	4302      	orrs	r2, r0
 802424c:	d09e      	beq.n	802418c <_strtod_l+0xc4>
 802424e:	2500      	movs	r5, #0
 8024250:	f8dd 805c 	ldr.w	r8, [sp, #92]	; 0x5c
 8024254:	f108 0201 	add.w	r2, r8, #1
 8024258:	9217      	str	r2, [sp, #92]	; 0x5c
 802425a:	f898 2001 	ldrb.w	r2, [r8, #1]
 802425e:	2a2b      	cmp	r2, #43	; 0x2b
 8024260:	d075      	beq.n	802434e <_strtod_l+0x286>
 8024262:	2a2d      	cmp	r2, #45	; 0x2d
 8024264:	d07b      	beq.n	802435e <_strtod_l+0x296>
 8024266:	f04f 0c00 	mov.w	ip, #0
 802426a:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 802426e:	2909      	cmp	r1, #9
 8024270:	f240 8082 	bls.w	8024378 <_strtod_l+0x2b0>
 8024274:	f8cd 805c 	str.w	r8, [sp, #92]	; 0x5c
 8024278:	2600      	movs	r6, #0
 802427a:	e09d      	b.n	80243b8 <_strtod_l+0x2f0>
 802427c:	2300      	movs	r3, #0
 802427e:	e7c4      	b.n	802420a <_strtod_l+0x142>
 8024280:	2f08      	cmp	r7, #8
 8024282:	bfd8      	it	le
 8024284:	9907      	ldrle	r1, [sp, #28]
 8024286:	f100 0001 	add.w	r0, r0, #1
 802428a:	bfda      	itte	le
 802428c:	fb02 3301 	mlale	r3, r2, r1, r3
 8024290:	9307      	strle	r3, [sp, #28]
 8024292:	fb02 3909 	mlagt	r9, r2, r9, r3
 8024296:	3701      	adds	r7, #1
 8024298:	9017      	str	r0, [sp, #92]	; 0x5c
 802429a:	e7bf      	b.n	802421c <_strtod_l+0x154>
 802429c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802429e:	195a      	adds	r2, r3, r5
 80242a0:	9217      	str	r2, [sp, #92]	; 0x5c
 80242a2:	5d5a      	ldrb	r2, [r3, r5]
 80242a4:	2f00      	cmp	r7, #0
 80242a6:	d037      	beq.n	8024318 <_strtod_l+0x250>
 80242a8:	9005      	str	r0, [sp, #20]
 80242aa:	463d      	mov	r5, r7
 80242ac:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 80242b0:	2b09      	cmp	r3, #9
 80242b2:	d912      	bls.n	80242da <_strtod_l+0x212>
 80242b4:	2301      	movs	r3, #1
 80242b6:	e7c2      	b.n	802423e <_strtod_l+0x176>
 80242b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80242ba:	1c5a      	adds	r2, r3, #1
 80242bc:	9217      	str	r2, [sp, #92]	; 0x5c
 80242be:	785a      	ldrb	r2, [r3, #1]
 80242c0:	3001      	adds	r0, #1
 80242c2:	2a30      	cmp	r2, #48	; 0x30
 80242c4:	d0f8      	beq.n	80242b8 <_strtod_l+0x1f0>
 80242c6:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 80242ca:	2b08      	cmp	r3, #8
 80242cc:	f200 84d9 	bhi.w	8024c82 <_strtod_l+0xbba>
 80242d0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80242d2:	9005      	str	r0, [sp, #20]
 80242d4:	2000      	movs	r0, #0
 80242d6:	9308      	str	r3, [sp, #32]
 80242d8:	4605      	mov	r5, r0
 80242da:	3a30      	subs	r2, #48	; 0x30
 80242dc:	f100 0301 	add.w	r3, r0, #1
 80242e0:	d014      	beq.n	802430c <_strtod_l+0x244>
 80242e2:	9905      	ldr	r1, [sp, #20]
 80242e4:	4419      	add	r1, r3
 80242e6:	9105      	str	r1, [sp, #20]
 80242e8:	462b      	mov	r3, r5
 80242ea:	eb00 0e05 	add.w	lr, r0, r5
 80242ee:	210a      	movs	r1, #10
 80242f0:	4573      	cmp	r3, lr
 80242f2:	d113      	bne.n	802431c <_strtod_l+0x254>
 80242f4:	182b      	adds	r3, r5, r0
 80242f6:	2b08      	cmp	r3, #8
 80242f8:	f105 0501 	add.w	r5, r5, #1
 80242fc:	4405      	add	r5, r0
 80242fe:	dc1c      	bgt.n	802433a <_strtod_l+0x272>
 8024300:	9907      	ldr	r1, [sp, #28]
 8024302:	230a      	movs	r3, #10
 8024304:	fb03 2301 	mla	r3, r3, r1, r2
 8024308:	9307      	str	r3, [sp, #28]
 802430a:	2300      	movs	r3, #0
 802430c:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 802430e:	1c51      	adds	r1, r2, #1
 8024310:	9117      	str	r1, [sp, #92]	; 0x5c
 8024312:	7852      	ldrb	r2, [r2, #1]
 8024314:	4618      	mov	r0, r3
 8024316:	e7c9      	b.n	80242ac <_strtod_l+0x1e4>
 8024318:	4638      	mov	r0, r7
 802431a:	e7d2      	b.n	80242c2 <_strtod_l+0x1fa>
 802431c:	2b08      	cmp	r3, #8
 802431e:	dc04      	bgt.n	802432a <_strtod_l+0x262>
 8024320:	9e07      	ldr	r6, [sp, #28]
 8024322:	434e      	muls	r6, r1
 8024324:	9607      	str	r6, [sp, #28]
 8024326:	3301      	adds	r3, #1
 8024328:	e7e2      	b.n	80242f0 <_strtod_l+0x228>
 802432a:	f103 0c01 	add.w	ip, r3, #1
 802432e:	f1bc 0f10 	cmp.w	ip, #16
 8024332:	bfd8      	it	le
 8024334:	fb01 f909 	mulle.w	r9, r1, r9
 8024338:	e7f5      	b.n	8024326 <_strtod_l+0x25e>
 802433a:	2d10      	cmp	r5, #16
 802433c:	bfdc      	itt	le
 802433e:	230a      	movle	r3, #10
 8024340:	fb03 2909 	mlale	r9, r3, r9, r2
 8024344:	e7e1      	b.n	802430a <_strtod_l+0x242>
 8024346:	2300      	movs	r3, #0
 8024348:	9305      	str	r3, [sp, #20]
 802434a:	2301      	movs	r3, #1
 802434c:	e77c      	b.n	8024248 <_strtod_l+0x180>
 802434e:	f04f 0c00 	mov.w	ip, #0
 8024352:	f108 0202 	add.w	r2, r8, #2
 8024356:	9217      	str	r2, [sp, #92]	; 0x5c
 8024358:	f898 2002 	ldrb.w	r2, [r8, #2]
 802435c:	e785      	b.n	802426a <_strtod_l+0x1a2>
 802435e:	f04f 0c01 	mov.w	ip, #1
 8024362:	e7f6      	b.n	8024352 <_strtod_l+0x28a>
 8024364:	0802b100 	.word	0x0802b100
 8024368:	0802ae54 	.word	0x0802ae54
 802436c:	7ff00000 	.word	0x7ff00000
 8024370:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8024372:	1c51      	adds	r1, r2, #1
 8024374:	9117      	str	r1, [sp, #92]	; 0x5c
 8024376:	7852      	ldrb	r2, [r2, #1]
 8024378:	2a30      	cmp	r2, #48	; 0x30
 802437a:	d0f9      	beq.n	8024370 <_strtod_l+0x2a8>
 802437c:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 8024380:	2908      	cmp	r1, #8
 8024382:	f63f af79 	bhi.w	8024278 <_strtod_l+0x1b0>
 8024386:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 802438a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 802438c:	9206      	str	r2, [sp, #24]
 802438e:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8024390:	1c51      	adds	r1, r2, #1
 8024392:	9117      	str	r1, [sp, #92]	; 0x5c
 8024394:	7852      	ldrb	r2, [r2, #1]
 8024396:	f1a2 0630 	sub.w	r6, r2, #48	; 0x30
 802439a:	2e09      	cmp	r6, #9
 802439c:	d937      	bls.n	802440e <_strtod_l+0x346>
 802439e:	9e06      	ldr	r6, [sp, #24]
 80243a0:	1b89      	subs	r1, r1, r6
 80243a2:	2908      	cmp	r1, #8
 80243a4:	f644 661f 	movw	r6, #19999	; 0x4e1f
 80243a8:	dc02      	bgt.n	80243b0 <_strtod_l+0x2e8>
 80243aa:	4576      	cmp	r6, lr
 80243ac:	bfa8      	it	ge
 80243ae:	4676      	movge	r6, lr
 80243b0:	f1bc 0f00 	cmp.w	ip, #0
 80243b4:	d000      	beq.n	80243b8 <_strtod_l+0x2f0>
 80243b6:	4276      	negs	r6, r6
 80243b8:	2d00      	cmp	r5, #0
 80243ba:	d14d      	bne.n	8024458 <_strtod_l+0x390>
 80243bc:	9904      	ldr	r1, [sp, #16]
 80243be:	4301      	orrs	r1, r0
 80243c0:	f47f aec6 	bne.w	8024150 <_strtod_l+0x88>
 80243c4:	2b00      	cmp	r3, #0
 80243c6:	f47f aee1 	bne.w	802418c <_strtod_l+0xc4>
 80243ca:	2a69      	cmp	r2, #105	; 0x69
 80243cc:	d027      	beq.n	802441e <_strtod_l+0x356>
 80243ce:	dc24      	bgt.n	802441a <_strtod_l+0x352>
 80243d0:	2a49      	cmp	r2, #73	; 0x49
 80243d2:	d024      	beq.n	802441e <_strtod_l+0x356>
 80243d4:	2a4e      	cmp	r2, #78	; 0x4e
 80243d6:	f47f aed9 	bne.w	802418c <_strtod_l+0xc4>
 80243da:	499f      	ldr	r1, [pc, #636]	; (8024658 <_strtod_l+0x590>)
 80243dc:	a817      	add	r0, sp, #92	; 0x5c
 80243de:	f002 f917 	bl	8026610 <__match>
 80243e2:	2800      	cmp	r0, #0
 80243e4:	f43f aed2 	beq.w	802418c <_strtod_l+0xc4>
 80243e8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80243ea:	781b      	ldrb	r3, [r3, #0]
 80243ec:	2b28      	cmp	r3, #40	; 0x28
 80243ee:	d12d      	bne.n	802444c <_strtod_l+0x384>
 80243f0:	499a      	ldr	r1, [pc, #616]	; (802465c <_strtod_l+0x594>)
 80243f2:	aa1a      	add	r2, sp, #104	; 0x68
 80243f4:	a817      	add	r0, sp, #92	; 0x5c
 80243f6:	f002 f91f 	bl	8026638 <__hexnan>
 80243fa:	2805      	cmp	r0, #5
 80243fc:	d126      	bne.n	802444c <_strtod_l+0x384>
 80243fe:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8024400:	f8dd a068 	ldr.w	sl, [sp, #104]	; 0x68
 8024404:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8024408:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 802440c:	e6a0      	b.n	8024150 <_strtod_l+0x88>
 802440e:	210a      	movs	r1, #10
 8024410:	fb01 2e0e 	mla	lr, r1, lr, r2
 8024414:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8024418:	e7b9      	b.n	802438e <_strtod_l+0x2c6>
 802441a:	2a6e      	cmp	r2, #110	; 0x6e
 802441c:	e7db      	b.n	80243d6 <_strtod_l+0x30e>
 802441e:	4990      	ldr	r1, [pc, #576]	; (8024660 <_strtod_l+0x598>)
 8024420:	a817      	add	r0, sp, #92	; 0x5c
 8024422:	f002 f8f5 	bl	8026610 <__match>
 8024426:	2800      	cmp	r0, #0
 8024428:	f43f aeb0 	beq.w	802418c <_strtod_l+0xc4>
 802442c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802442e:	498d      	ldr	r1, [pc, #564]	; (8024664 <_strtod_l+0x59c>)
 8024430:	3b01      	subs	r3, #1
 8024432:	a817      	add	r0, sp, #92	; 0x5c
 8024434:	9317      	str	r3, [sp, #92]	; 0x5c
 8024436:	f002 f8eb 	bl	8026610 <__match>
 802443a:	b910      	cbnz	r0, 8024442 <_strtod_l+0x37a>
 802443c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 802443e:	3301      	adds	r3, #1
 8024440:	9317      	str	r3, [sp, #92]	; 0x5c
 8024442:	f8df b230 	ldr.w	fp, [pc, #560]	; 8024674 <_strtod_l+0x5ac>
 8024446:	f04f 0a00 	mov.w	sl, #0
 802444a:	e681      	b.n	8024150 <_strtod_l+0x88>
 802444c:	4886      	ldr	r0, [pc, #536]	; (8024668 <_strtod_l+0x5a0>)
 802444e:	f003 f8df 	bl	8027610 <nan>
 8024452:	ec5b ab10 	vmov	sl, fp, d0
 8024456:	e67b      	b.n	8024150 <_strtod_l+0x88>
 8024458:	9b05      	ldr	r3, [sp, #20]
 802445a:	9807      	ldr	r0, [sp, #28]
 802445c:	1af3      	subs	r3, r6, r3
 802445e:	2f00      	cmp	r7, #0
 8024460:	bf08      	it	eq
 8024462:	462f      	moveq	r7, r5
 8024464:	2d10      	cmp	r5, #16
 8024466:	9306      	str	r3, [sp, #24]
 8024468:	46a8      	mov	r8, r5
 802446a:	bfa8      	it	ge
 802446c:	f04f 0810 	movge.w	r8, #16
 8024470:	f7dc f858 	bl	8000524 <__aeabi_ui2d>
 8024474:	2d09      	cmp	r5, #9
 8024476:	4682      	mov	sl, r0
 8024478:	468b      	mov	fp, r1
 802447a:	dd13      	ble.n	80244a4 <_strtod_l+0x3dc>
 802447c:	4b7b      	ldr	r3, [pc, #492]	; (802466c <_strtod_l+0x5a4>)
 802447e:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8024482:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8024486:	f7dc f8c7 	bl	8000618 <__aeabi_dmul>
 802448a:	4682      	mov	sl, r0
 802448c:	4648      	mov	r0, r9
 802448e:	468b      	mov	fp, r1
 8024490:	f7dc f848 	bl	8000524 <__aeabi_ui2d>
 8024494:	4602      	mov	r2, r0
 8024496:	460b      	mov	r3, r1
 8024498:	4650      	mov	r0, sl
 802449a:	4659      	mov	r1, fp
 802449c:	f7db ff06 	bl	80002ac <__adddf3>
 80244a0:	4682      	mov	sl, r0
 80244a2:	468b      	mov	fp, r1
 80244a4:	2d0f      	cmp	r5, #15
 80244a6:	dc38      	bgt.n	802451a <_strtod_l+0x452>
 80244a8:	9b06      	ldr	r3, [sp, #24]
 80244aa:	2b00      	cmp	r3, #0
 80244ac:	f43f ae50 	beq.w	8024150 <_strtod_l+0x88>
 80244b0:	dd24      	ble.n	80244fc <_strtod_l+0x434>
 80244b2:	2b16      	cmp	r3, #22
 80244b4:	dc0b      	bgt.n	80244ce <_strtod_l+0x406>
 80244b6:	496d      	ldr	r1, [pc, #436]	; (802466c <_strtod_l+0x5a4>)
 80244b8:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 80244bc:	e9d1 0100 	ldrd	r0, r1, [r1]
 80244c0:	4652      	mov	r2, sl
 80244c2:	465b      	mov	r3, fp
 80244c4:	f7dc f8a8 	bl	8000618 <__aeabi_dmul>
 80244c8:	4682      	mov	sl, r0
 80244ca:	468b      	mov	fp, r1
 80244cc:	e640      	b.n	8024150 <_strtod_l+0x88>
 80244ce:	9a06      	ldr	r2, [sp, #24]
 80244d0:	f1c5 0325 	rsb	r3, r5, #37	; 0x25
 80244d4:	4293      	cmp	r3, r2
 80244d6:	db20      	blt.n	802451a <_strtod_l+0x452>
 80244d8:	4c64      	ldr	r4, [pc, #400]	; (802466c <_strtod_l+0x5a4>)
 80244da:	f1c5 050f 	rsb	r5, r5, #15
 80244de:	eb04 01c5 	add.w	r1, r4, r5, lsl #3
 80244e2:	4652      	mov	r2, sl
 80244e4:	465b      	mov	r3, fp
 80244e6:	e9d1 0100 	ldrd	r0, r1, [r1]
 80244ea:	f7dc f895 	bl	8000618 <__aeabi_dmul>
 80244ee:	9b06      	ldr	r3, [sp, #24]
 80244f0:	1b5d      	subs	r5, r3, r5
 80244f2:	eb04 04c5 	add.w	r4, r4, r5, lsl #3
 80244f6:	e9d4 2300 	ldrd	r2, r3, [r4]
 80244fa:	e7e3      	b.n	80244c4 <_strtod_l+0x3fc>
 80244fc:	9b06      	ldr	r3, [sp, #24]
 80244fe:	3316      	adds	r3, #22
 8024500:	db0b      	blt.n	802451a <_strtod_l+0x452>
 8024502:	9b05      	ldr	r3, [sp, #20]
 8024504:	1b9e      	subs	r6, r3, r6
 8024506:	4b59      	ldr	r3, [pc, #356]	; (802466c <_strtod_l+0x5a4>)
 8024508:	eb03 06c6 	add.w	r6, r3, r6, lsl #3
 802450c:	e9d6 2300 	ldrd	r2, r3, [r6]
 8024510:	4650      	mov	r0, sl
 8024512:	4659      	mov	r1, fp
 8024514:	f7dc f9aa 	bl	800086c <__aeabi_ddiv>
 8024518:	e7d6      	b.n	80244c8 <_strtod_l+0x400>
 802451a:	9b06      	ldr	r3, [sp, #24]
 802451c:	eba5 0808 	sub.w	r8, r5, r8
 8024520:	4498      	add	r8, r3
 8024522:	f1b8 0f00 	cmp.w	r8, #0
 8024526:	dd74      	ble.n	8024612 <_strtod_l+0x54a>
 8024528:	f018 030f 	ands.w	r3, r8, #15
 802452c:	d00a      	beq.n	8024544 <_strtod_l+0x47c>
 802452e:	494f      	ldr	r1, [pc, #316]	; (802466c <_strtod_l+0x5a4>)
 8024530:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8024534:	4652      	mov	r2, sl
 8024536:	465b      	mov	r3, fp
 8024538:	e9d1 0100 	ldrd	r0, r1, [r1]
 802453c:	f7dc f86c 	bl	8000618 <__aeabi_dmul>
 8024540:	4682      	mov	sl, r0
 8024542:	468b      	mov	fp, r1
 8024544:	f038 080f 	bics.w	r8, r8, #15
 8024548:	d04f      	beq.n	80245ea <_strtod_l+0x522>
 802454a:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 802454e:	dd22      	ble.n	8024596 <_strtod_l+0x4ce>
 8024550:	2500      	movs	r5, #0
 8024552:	462e      	mov	r6, r5
 8024554:	9507      	str	r5, [sp, #28]
 8024556:	9505      	str	r5, [sp, #20]
 8024558:	2322      	movs	r3, #34	; 0x22
 802455a:	f8df b118 	ldr.w	fp, [pc, #280]	; 8024674 <_strtod_l+0x5ac>
 802455e:	6023      	str	r3, [r4, #0]
 8024560:	f04f 0a00 	mov.w	sl, #0
 8024564:	9b07      	ldr	r3, [sp, #28]
 8024566:	2b00      	cmp	r3, #0
 8024568:	f43f adf2 	beq.w	8024150 <_strtod_l+0x88>
 802456c:	9918      	ldr	r1, [sp, #96]	; 0x60
 802456e:	4620      	mov	r0, r4
 8024570:	f002 f9e4 	bl	802693c <_Bfree>
 8024574:	9905      	ldr	r1, [sp, #20]
 8024576:	4620      	mov	r0, r4
 8024578:	f002 f9e0 	bl	802693c <_Bfree>
 802457c:	4631      	mov	r1, r6
 802457e:	4620      	mov	r0, r4
 8024580:	f002 f9dc 	bl	802693c <_Bfree>
 8024584:	9907      	ldr	r1, [sp, #28]
 8024586:	4620      	mov	r0, r4
 8024588:	f002 f9d8 	bl	802693c <_Bfree>
 802458c:	4629      	mov	r1, r5
 802458e:	4620      	mov	r0, r4
 8024590:	f002 f9d4 	bl	802693c <_Bfree>
 8024594:	e5dc      	b.n	8024150 <_strtod_l+0x88>
 8024596:	4b36      	ldr	r3, [pc, #216]	; (8024670 <_strtod_l+0x5a8>)
 8024598:	9304      	str	r3, [sp, #16]
 802459a:	2300      	movs	r3, #0
 802459c:	ea4f 1828 	mov.w	r8, r8, asr #4
 80245a0:	4650      	mov	r0, sl
 80245a2:	4659      	mov	r1, fp
 80245a4:	4699      	mov	r9, r3
 80245a6:	f1b8 0f01 	cmp.w	r8, #1
 80245aa:	dc21      	bgt.n	80245f0 <_strtod_l+0x528>
 80245ac:	b10b      	cbz	r3, 80245b2 <_strtod_l+0x4ea>
 80245ae:	4682      	mov	sl, r0
 80245b0:	468b      	mov	fp, r1
 80245b2:	4b2f      	ldr	r3, [pc, #188]	; (8024670 <_strtod_l+0x5a8>)
 80245b4:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 80245b8:	eb03 09c9 	add.w	r9, r3, r9, lsl #3
 80245bc:	4652      	mov	r2, sl
 80245be:	465b      	mov	r3, fp
 80245c0:	e9d9 0100 	ldrd	r0, r1, [r9]
 80245c4:	f7dc f828 	bl	8000618 <__aeabi_dmul>
 80245c8:	4b2a      	ldr	r3, [pc, #168]	; (8024674 <_strtod_l+0x5ac>)
 80245ca:	460a      	mov	r2, r1
 80245cc:	400b      	ands	r3, r1
 80245ce:	492a      	ldr	r1, [pc, #168]	; (8024678 <_strtod_l+0x5b0>)
 80245d0:	428b      	cmp	r3, r1
 80245d2:	4682      	mov	sl, r0
 80245d4:	d8bc      	bhi.n	8024550 <_strtod_l+0x488>
 80245d6:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80245da:	428b      	cmp	r3, r1
 80245dc:	bf86      	itte	hi
 80245de:	f8df b09c 	ldrhi.w	fp, [pc, #156]	; 802467c <_strtod_l+0x5b4>
 80245e2:	f04f 3aff 	movhi.w	sl, #4294967295
 80245e6:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 80245ea:	2300      	movs	r3, #0
 80245ec:	9304      	str	r3, [sp, #16]
 80245ee:	e084      	b.n	80246fa <_strtod_l+0x632>
 80245f0:	f018 0f01 	tst.w	r8, #1
 80245f4:	d005      	beq.n	8024602 <_strtod_l+0x53a>
 80245f6:	9b04      	ldr	r3, [sp, #16]
 80245f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80245fc:	f7dc f80c 	bl	8000618 <__aeabi_dmul>
 8024600:	2301      	movs	r3, #1
 8024602:	9a04      	ldr	r2, [sp, #16]
 8024604:	3208      	adds	r2, #8
 8024606:	f109 0901 	add.w	r9, r9, #1
 802460a:	ea4f 0868 	mov.w	r8, r8, asr #1
 802460e:	9204      	str	r2, [sp, #16]
 8024610:	e7c9      	b.n	80245a6 <_strtod_l+0x4de>
 8024612:	d0ea      	beq.n	80245ea <_strtod_l+0x522>
 8024614:	f1c8 0800 	rsb	r8, r8, #0
 8024618:	f018 020f 	ands.w	r2, r8, #15
 802461c:	d00a      	beq.n	8024634 <_strtod_l+0x56c>
 802461e:	4b13      	ldr	r3, [pc, #76]	; (802466c <_strtod_l+0x5a4>)
 8024620:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8024624:	4650      	mov	r0, sl
 8024626:	4659      	mov	r1, fp
 8024628:	e9d3 2300 	ldrd	r2, r3, [r3]
 802462c:	f7dc f91e 	bl	800086c <__aeabi_ddiv>
 8024630:	4682      	mov	sl, r0
 8024632:	468b      	mov	fp, r1
 8024634:	ea5f 1828 	movs.w	r8, r8, asr #4
 8024638:	d0d7      	beq.n	80245ea <_strtod_l+0x522>
 802463a:	f1b8 0f1f 	cmp.w	r8, #31
 802463e:	dd1f      	ble.n	8024680 <_strtod_l+0x5b8>
 8024640:	2500      	movs	r5, #0
 8024642:	462e      	mov	r6, r5
 8024644:	9507      	str	r5, [sp, #28]
 8024646:	9505      	str	r5, [sp, #20]
 8024648:	2322      	movs	r3, #34	; 0x22
 802464a:	f04f 0a00 	mov.w	sl, #0
 802464e:	f04f 0b00 	mov.w	fp, #0
 8024652:	6023      	str	r3, [r4, #0]
 8024654:	e786      	b.n	8024564 <_strtod_l+0x49c>
 8024656:	bf00      	nop
 8024658:	0802ae26 	.word	0x0802ae26
 802465c:	0802ae68 	.word	0x0802ae68
 8024660:	0802ae1e 	.word	0x0802ae1e
 8024664:	0802afac 	.word	0x0802afac
 8024668:	08028182 	.word	0x08028182
 802466c:	0802b198 	.word	0x0802b198
 8024670:	0802b170 	.word	0x0802b170
 8024674:	7ff00000 	.word	0x7ff00000
 8024678:	7ca00000 	.word	0x7ca00000
 802467c:	7fefffff 	.word	0x7fefffff
 8024680:	f018 0310 	ands.w	r3, r8, #16
 8024684:	bf18      	it	ne
 8024686:	236a      	movne	r3, #106	; 0x6a
 8024688:	f8df 93ac 	ldr.w	r9, [pc, #940]	; 8024a38 <_strtod_l+0x970>
 802468c:	9304      	str	r3, [sp, #16]
 802468e:	4650      	mov	r0, sl
 8024690:	4659      	mov	r1, fp
 8024692:	2300      	movs	r3, #0
 8024694:	f018 0f01 	tst.w	r8, #1
 8024698:	d004      	beq.n	80246a4 <_strtod_l+0x5dc>
 802469a:	e9d9 2300 	ldrd	r2, r3, [r9]
 802469e:	f7db ffbb 	bl	8000618 <__aeabi_dmul>
 80246a2:	2301      	movs	r3, #1
 80246a4:	ea5f 0868 	movs.w	r8, r8, asr #1
 80246a8:	f109 0908 	add.w	r9, r9, #8
 80246ac:	d1f2      	bne.n	8024694 <_strtod_l+0x5cc>
 80246ae:	b10b      	cbz	r3, 80246b4 <_strtod_l+0x5ec>
 80246b0:	4682      	mov	sl, r0
 80246b2:	468b      	mov	fp, r1
 80246b4:	9b04      	ldr	r3, [sp, #16]
 80246b6:	b1c3      	cbz	r3, 80246ea <_strtod_l+0x622>
 80246b8:	f3cb 520a 	ubfx	r2, fp, #20, #11
 80246bc:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 80246c0:	2b00      	cmp	r3, #0
 80246c2:	4659      	mov	r1, fp
 80246c4:	dd11      	ble.n	80246ea <_strtod_l+0x622>
 80246c6:	2b1f      	cmp	r3, #31
 80246c8:	f340 8124 	ble.w	8024914 <_strtod_l+0x84c>
 80246cc:	2b34      	cmp	r3, #52	; 0x34
 80246ce:	bfde      	ittt	le
 80246d0:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 80246d4:	f04f 33ff 	movle.w	r3, #4294967295
 80246d8:	fa03 f202 	lslle.w	r2, r3, r2
 80246dc:	f04f 0a00 	mov.w	sl, #0
 80246e0:	bfcc      	ite	gt
 80246e2:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 80246e6:	ea02 0b01 	andle.w	fp, r2, r1
 80246ea:	2200      	movs	r2, #0
 80246ec:	2300      	movs	r3, #0
 80246ee:	4650      	mov	r0, sl
 80246f0:	4659      	mov	r1, fp
 80246f2:	f7dc f9f9 	bl	8000ae8 <__aeabi_dcmpeq>
 80246f6:	2800      	cmp	r0, #0
 80246f8:	d1a2      	bne.n	8024640 <_strtod_l+0x578>
 80246fa:	9b07      	ldr	r3, [sp, #28]
 80246fc:	9300      	str	r3, [sp, #0]
 80246fe:	9908      	ldr	r1, [sp, #32]
 8024700:	462b      	mov	r3, r5
 8024702:	463a      	mov	r2, r7
 8024704:	4620      	mov	r0, r4
 8024706:	f002 f981 	bl	8026a0c <__s2b>
 802470a:	9007      	str	r0, [sp, #28]
 802470c:	2800      	cmp	r0, #0
 802470e:	f43f af1f 	beq.w	8024550 <_strtod_l+0x488>
 8024712:	9b05      	ldr	r3, [sp, #20]
 8024714:	1b9e      	subs	r6, r3, r6
 8024716:	9b06      	ldr	r3, [sp, #24]
 8024718:	2b00      	cmp	r3, #0
 802471a:	bfb4      	ite	lt
 802471c:	4633      	movlt	r3, r6
 802471e:	2300      	movge	r3, #0
 8024720:	930c      	str	r3, [sp, #48]	; 0x30
 8024722:	9b06      	ldr	r3, [sp, #24]
 8024724:	2500      	movs	r5, #0
 8024726:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 802472a:	9312      	str	r3, [sp, #72]	; 0x48
 802472c:	462e      	mov	r6, r5
 802472e:	9b07      	ldr	r3, [sp, #28]
 8024730:	4620      	mov	r0, r4
 8024732:	6859      	ldr	r1, [r3, #4]
 8024734:	f002 f8c2 	bl	80268bc <_Balloc>
 8024738:	9005      	str	r0, [sp, #20]
 802473a:	2800      	cmp	r0, #0
 802473c:	f43f af0c 	beq.w	8024558 <_strtod_l+0x490>
 8024740:	9b07      	ldr	r3, [sp, #28]
 8024742:	691a      	ldr	r2, [r3, #16]
 8024744:	3202      	adds	r2, #2
 8024746:	f103 010c 	add.w	r1, r3, #12
 802474a:	0092      	lsls	r2, r2, #2
 802474c:	300c      	adds	r0, #12
 802474e:	f7fe fab5 	bl	8022cbc <memcpy>
 8024752:	ec4b ab10 	vmov	d0, sl, fp
 8024756:	aa1a      	add	r2, sp, #104	; 0x68
 8024758:	a919      	add	r1, sp, #100	; 0x64
 802475a:	4620      	mov	r0, r4
 802475c:	f002 fc9c 	bl	8027098 <__d2b>
 8024760:	ec4b ab18 	vmov	d8, sl, fp
 8024764:	9018      	str	r0, [sp, #96]	; 0x60
 8024766:	2800      	cmp	r0, #0
 8024768:	f43f aef6 	beq.w	8024558 <_strtod_l+0x490>
 802476c:	2101      	movs	r1, #1
 802476e:	4620      	mov	r0, r4
 8024770:	f002 f9e6 	bl	8026b40 <__i2b>
 8024774:	4606      	mov	r6, r0
 8024776:	2800      	cmp	r0, #0
 8024778:	f43f aeee 	beq.w	8024558 <_strtod_l+0x490>
 802477c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 802477e:	9904      	ldr	r1, [sp, #16]
 8024780:	2b00      	cmp	r3, #0
 8024782:	bfab      	itete	ge
 8024784:	9a0c      	ldrge	r2, [sp, #48]	; 0x30
 8024786:	9a12      	ldrlt	r2, [sp, #72]	; 0x48
 8024788:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 802478a:	f8dd 9030 	ldrlt.w	r9, [sp, #48]	; 0x30
 802478e:	bfac      	ite	ge
 8024790:	eb03 0902 	addge.w	r9, r3, r2
 8024794:	1ad7      	sublt	r7, r2, r3
 8024796:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8024798:	eba3 0801 	sub.w	r8, r3, r1
 802479c:	4490      	add	r8, r2
 802479e:	4ba1      	ldr	r3, [pc, #644]	; (8024a24 <_strtod_l+0x95c>)
 80247a0:	f108 38ff 	add.w	r8, r8, #4294967295
 80247a4:	4598      	cmp	r8, r3
 80247a6:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 80247aa:	f280 80c7 	bge.w	802493c <_strtod_l+0x874>
 80247ae:	eba3 0308 	sub.w	r3, r3, r8
 80247b2:	2b1f      	cmp	r3, #31
 80247b4:	eba2 0203 	sub.w	r2, r2, r3
 80247b8:	f04f 0101 	mov.w	r1, #1
 80247bc:	f300 80b1 	bgt.w	8024922 <_strtod_l+0x85a>
 80247c0:	fa01 f303 	lsl.w	r3, r1, r3
 80247c4:	930d      	str	r3, [sp, #52]	; 0x34
 80247c6:	2300      	movs	r3, #0
 80247c8:	9308      	str	r3, [sp, #32]
 80247ca:	eb09 0802 	add.w	r8, r9, r2
 80247ce:	9b04      	ldr	r3, [sp, #16]
 80247d0:	45c1      	cmp	r9, r8
 80247d2:	4417      	add	r7, r2
 80247d4:	441f      	add	r7, r3
 80247d6:	464b      	mov	r3, r9
 80247d8:	bfa8      	it	ge
 80247da:	4643      	movge	r3, r8
 80247dc:	42bb      	cmp	r3, r7
 80247de:	bfa8      	it	ge
 80247e0:	463b      	movge	r3, r7
 80247e2:	2b00      	cmp	r3, #0
 80247e4:	bfc2      	ittt	gt
 80247e6:	eba8 0803 	subgt.w	r8, r8, r3
 80247ea:	1aff      	subgt	r7, r7, r3
 80247ec:	eba9 0903 	subgt.w	r9, r9, r3
 80247f0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80247f2:	2b00      	cmp	r3, #0
 80247f4:	dd17      	ble.n	8024826 <_strtod_l+0x75e>
 80247f6:	4631      	mov	r1, r6
 80247f8:	461a      	mov	r2, r3
 80247fa:	4620      	mov	r0, r4
 80247fc:	f002 fa60 	bl	8026cc0 <__pow5mult>
 8024800:	4606      	mov	r6, r0
 8024802:	2800      	cmp	r0, #0
 8024804:	f43f aea8 	beq.w	8024558 <_strtod_l+0x490>
 8024808:	4601      	mov	r1, r0
 802480a:	9a18      	ldr	r2, [sp, #96]	; 0x60
 802480c:	4620      	mov	r0, r4
 802480e:	f002 f9ad 	bl	8026b6c <__multiply>
 8024812:	900b      	str	r0, [sp, #44]	; 0x2c
 8024814:	2800      	cmp	r0, #0
 8024816:	f43f ae9f 	beq.w	8024558 <_strtod_l+0x490>
 802481a:	9918      	ldr	r1, [sp, #96]	; 0x60
 802481c:	4620      	mov	r0, r4
 802481e:	f002 f88d 	bl	802693c <_Bfree>
 8024822:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024824:	9318      	str	r3, [sp, #96]	; 0x60
 8024826:	f1b8 0f00 	cmp.w	r8, #0
 802482a:	f300 808c 	bgt.w	8024946 <_strtod_l+0x87e>
 802482e:	9b06      	ldr	r3, [sp, #24]
 8024830:	2b00      	cmp	r3, #0
 8024832:	dd08      	ble.n	8024846 <_strtod_l+0x77e>
 8024834:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8024836:	9905      	ldr	r1, [sp, #20]
 8024838:	4620      	mov	r0, r4
 802483a:	f002 fa41 	bl	8026cc0 <__pow5mult>
 802483e:	9005      	str	r0, [sp, #20]
 8024840:	2800      	cmp	r0, #0
 8024842:	f43f ae89 	beq.w	8024558 <_strtod_l+0x490>
 8024846:	2f00      	cmp	r7, #0
 8024848:	dd08      	ble.n	802485c <_strtod_l+0x794>
 802484a:	9905      	ldr	r1, [sp, #20]
 802484c:	463a      	mov	r2, r7
 802484e:	4620      	mov	r0, r4
 8024850:	f002 fa90 	bl	8026d74 <__lshift>
 8024854:	9005      	str	r0, [sp, #20]
 8024856:	2800      	cmp	r0, #0
 8024858:	f43f ae7e 	beq.w	8024558 <_strtod_l+0x490>
 802485c:	f1b9 0f00 	cmp.w	r9, #0
 8024860:	dd08      	ble.n	8024874 <_strtod_l+0x7ac>
 8024862:	4631      	mov	r1, r6
 8024864:	464a      	mov	r2, r9
 8024866:	4620      	mov	r0, r4
 8024868:	f002 fa84 	bl	8026d74 <__lshift>
 802486c:	4606      	mov	r6, r0
 802486e:	2800      	cmp	r0, #0
 8024870:	f43f ae72 	beq.w	8024558 <_strtod_l+0x490>
 8024874:	9a05      	ldr	r2, [sp, #20]
 8024876:	9918      	ldr	r1, [sp, #96]	; 0x60
 8024878:	4620      	mov	r0, r4
 802487a:	f002 fb07 	bl	8026e8c <__mdiff>
 802487e:	4605      	mov	r5, r0
 8024880:	2800      	cmp	r0, #0
 8024882:	f43f ae69 	beq.w	8024558 <_strtod_l+0x490>
 8024886:	68c3      	ldr	r3, [r0, #12]
 8024888:	930b      	str	r3, [sp, #44]	; 0x2c
 802488a:	2300      	movs	r3, #0
 802488c:	60c3      	str	r3, [r0, #12]
 802488e:	4631      	mov	r1, r6
 8024890:	f002 fae0 	bl	8026e54 <__mcmp>
 8024894:	2800      	cmp	r0, #0
 8024896:	da60      	bge.n	802495a <_strtod_l+0x892>
 8024898:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802489a:	ea53 030a 	orrs.w	r3, r3, sl
 802489e:	f040 8082 	bne.w	80249a6 <_strtod_l+0x8de>
 80248a2:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80248a6:	2b00      	cmp	r3, #0
 80248a8:	d17d      	bne.n	80249a6 <_strtod_l+0x8de>
 80248aa:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 80248ae:	0d1b      	lsrs	r3, r3, #20
 80248b0:	051b      	lsls	r3, r3, #20
 80248b2:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 80248b6:	d976      	bls.n	80249a6 <_strtod_l+0x8de>
 80248b8:	696b      	ldr	r3, [r5, #20]
 80248ba:	b913      	cbnz	r3, 80248c2 <_strtod_l+0x7fa>
 80248bc:	692b      	ldr	r3, [r5, #16]
 80248be:	2b01      	cmp	r3, #1
 80248c0:	dd71      	ble.n	80249a6 <_strtod_l+0x8de>
 80248c2:	4629      	mov	r1, r5
 80248c4:	2201      	movs	r2, #1
 80248c6:	4620      	mov	r0, r4
 80248c8:	f002 fa54 	bl	8026d74 <__lshift>
 80248cc:	4631      	mov	r1, r6
 80248ce:	4605      	mov	r5, r0
 80248d0:	f002 fac0 	bl	8026e54 <__mcmp>
 80248d4:	2800      	cmp	r0, #0
 80248d6:	dd66      	ble.n	80249a6 <_strtod_l+0x8de>
 80248d8:	9904      	ldr	r1, [sp, #16]
 80248da:	4a53      	ldr	r2, [pc, #332]	; (8024a28 <_strtod_l+0x960>)
 80248dc:	465b      	mov	r3, fp
 80248de:	2900      	cmp	r1, #0
 80248e0:	f000 8081 	beq.w	80249e6 <_strtod_l+0x91e>
 80248e4:	ea02 010b 	and.w	r1, r2, fp
 80248e8:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 80248ec:	dc7b      	bgt.n	80249e6 <_strtod_l+0x91e>
 80248ee:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 80248f2:	f77f aea9 	ble.w	8024648 <_strtod_l+0x580>
 80248f6:	4b4d      	ldr	r3, [pc, #308]	; (8024a2c <_strtod_l+0x964>)
 80248f8:	4650      	mov	r0, sl
 80248fa:	4659      	mov	r1, fp
 80248fc:	2200      	movs	r2, #0
 80248fe:	f7db fe8b 	bl	8000618 <__aeabi_dmul>
 8024902:	460b      	mov	r3, r1
 8024904:	4303      	orrs	r3, r0
 8024906:	bf08      	it	eq
 8024908:	2322      	moveq	r3, #34	; 0x22
 802490a:	4682      	mov	sl, r0
 802490c:	468b      	mov	fp, r1
 802490e:	bf08      	it	eq
 8024910:	6023      	streq	r3, [r4, #0]
 8024912:	e62b      	b.n	802456c <_strtod_l+0x4a4>
 8024914:	f04f 32ff 	mov.w	r2, #4294967295
 8024918:	fa02 f303 	lsl.w	r3, r2, r3
 802491c:	ea03 0a0a 	and.w	sl, r3, sl
 8024920:	e6e3      	b.n	80246ea <_strtod_l+0x622>
 8024922:	f1c8 487f 	rsb	r8, r8, #4278190080	; 0xff000000
 8024926:	f508 087f 	add.w	r8, r8, #16711680	; 0xff0000
 802492a:	f508 487b 	add.w	r8, r8, #64256	; 0xfb00
 802492e:	f108 08e2 	add.w	r8, r8, #226	; 0xe2
 8024932:	fa01 f308 	lsl.w	r3, r1, r8
 8024936:	9308      	str	r3, [sp, #32]
 8024938:	910d      	str	r1, [sp, #52]	; 0x34
 802493a:	e746      	b.n	80247ca <_strtod_l+0x702>
 802493c:	2300      	movs	r3, #0
 802493e:	9308      	str	r3, [sp, #32]
 8024940:	2301      	movs	r3, #1
 8024942:	930d      	str	r3, [sp, #52]	; 0x34
 8024944:	e741      	b.n	80247ca <_strtod_l+0x702>
 8024946:	9918      	ldr	r1, [sp, #96]	; 0x60
 8024948:	4642      	mov	r2, r8
 802494a:	4620      	mov	r0, r4
 802494c:	f002 fa12 	bl	8026d74 <__lshift>
 8024950:	9018      	str	r0, [sp, #96]	; 0x60
 8024952:	2800      	cmp	r0, #0
 8024954:	f47f af6b 	bne.w	802482e <_strtod_l+0x766>
 8024958:	e5fe      	b.n	8024558 <_strtod_l+0x490>
 802495a:	465f      	mov	r7, fp
 802495c:	d16e      	bne.n	8024a3c <_strtod_l+0x974>
 802495e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024960:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024964:	b342      	cbz	r2, 80249b8 <_strtod_l+0x8f0>
 8024966:	4a32      	ldr	r2, [pc, #200]	; (8024a30 <_strtod_l+0x968>)
 8024968:	4293      	cmp	r3, r2
 802496a:	d128      	bne.n	80249be <_strtod_l+0x8f6>
 802496c:	9b04      	ldr	r3, [sp, #16]
 802496e:	4651      	mov	r1, sl
 8024970:	b1eb      	cbz	r3, 80249ae <_strtod_l+0x8e6>
 8024972:	4b2d      	ldr	r3, [pc, #180]	; (8024a28 <_strtod_l+0x960>)
 8024974:	403b      	ands	r3, r7
 8024976:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 802497a:	f04f 32ff 	mov.w	r2, #4294967295
 802497e:	d819      	bhi.n	80249b4 <_strtod_l+0x8ec>
 8024980:	0d1b      	lsrs	r3, r3, #20
 8024982:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8024986:	fa02 f303 	lsl.w	r3, r2, r3
 802498a:	4299      	cmp	r1, r3
 802498c:	d117      	bne.n	80249be <_strtod_l+0x8f6>
 802498e:	4b29      	ldr	r3, [pc, #164]	; (8024a34 <_strtod_l+0x96c>)
 8024990:	429f      	cmp	r7, r3
 8024992:	d102      	bne.n	802499a <_strtod_l+0x8d2>
 8024994:	3101      	adds	r1, #1
 8024996:	f43f addf 	beq.w	8024558 <_strtod_l+0x490>
 802499a:	4b23      	ldr	r3, [pc, #140]	; (8024a28 <_strtod_l+0x960>)
 802499c:	403b      	ands	r3, r7
 802499e:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 80249a2:	f04f 0a00 	mov.w	sl, #0
 80249a6:	9b04      	ldr	r3, [sp, #16]
 80249a8:	2b00      	cmp	r3, #0
 80249aa:	d1a4      	bne.n	80248f6 <_strtod_l+0x82e>
 80249ac:	e5de      	b.n	802456c <_strtod_l+0x4a4>
 80249ae:	f04f 33ff 	mov.w	r3, #4294967295
 80249b2:	e7ea      	b.n	802498a <_strtod_l+0x8c2>
 80249b4:	4613      	mov	r3, r2
 80249b6:	e7e8      	b.n	802498a <_strtod_l+0x8c2>
 80249b8:	ea53 030a 	orrs.w	r3, r3, sl
 80249bc:	d08c      	beq.n	80248d8 <_strtod_l+0x810>
 80249be:	9b08      	ldr	r3, [sp, #32]
 80249c0:	b1db      	cbz	r3, 80249fa <_strtod_l+0x932>
 80249c2:	423b      	tst	r3, r7
 80249c4:	d0ef      	beq.n	80249a6 <_strtod_l+0x8de>
 80249c6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80249c8:	9a04      	ldr	r2, [sp, #16]
 80249ca:	4650      	mov	r0, sl
 80249cc:	4659      	mov	r1, fp
 80249ce:	b1c3      	cbz	r3, 8024a02 <_strtod_l+0x93a>
 80249d0:	f7ff fb5c 	bl	802408c <sulp>
 80249d4:	4602      	mov	r2, r0
 80249d6:	460b      	mov	r3, r1
 80249d8:	ec51 0b18 	vmov	r0, r1, d8
 80249dc:	f7db fc66 	bl	80002ac <__adddf3>
 80249e0:	4682      	mov	sl, r0
 80249e2:	468b      	mov	fp, r1
 80249e4:	e7df      	b.n	80249a6 <_strtod_l+0x8de>
 80249e6:	4013      	ands	r3, r2
 80249e8:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 80249ec:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 80249f0:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 80249f4:	f04f 3aff 	mov.w	sl, #4294967295
 80249f8:	e7d5      	b.n	80249a6 <_strtod_l+0x8de>
 80249fa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80249fc:	ea13 0f0a 	tst.w	r3, sl
 8024a00:	e7e0      	b.n	80249c4 <_strtod_l+0x8fc>
 8024a02:	f7ff fb43 	bl	802408c <sulp>
 8024a06:	4602      	mov	r2, r0
 8024a08:	460b      	mov	r3, r1
 8024a0a:	ec51 0b18 	vmov	r0, r1, d8
 8024a0e:	f7db fc4b 	bl	80002a8 <__aeabi_dsub>
 8024a12:	2200      	movs	r2, #0
 8024a14:	2300      	movs	r3, #0
 8024a16:	4682      	mov	sl, r0
 8024a18:	468b      	mov	fp, r1
 8024a1a:	f7dc f865 	bl	8000ae8 <__aeabi_dcmpeq>
 8024a1e:	2800      	cmp	r0, #0
 8024a20:	d0c1      	beq.n	80249a6 <_strtod_l+0x8de>
 8024a22:	e611      	b.n	8024648 <_strtod_l+0x580>
 8024a24:	fffffc02 	.word	0xfffffc02
 8024a28:	7ff00000 	.word	0x7ff00000
 8024a2c:	39500000 	.word	0x39500000
 8024a30:	000fffff 	.word	0x000fffff
 8024a34:	7fefffff 	.word	0x7fefffff
 8024a38:	0802ae80 	.word	0x0802ae80
 8024a3c:	4631      	mov	r1, r6
 8024a3e:	4628      	mov	r0, r5
 8024a40:	f002 fb86 	bl	8027150 <__ratio>
 8024a44:	ec59 8b10 	vmov	r8, r9, d0
 8024a48:	ee10 0a10 	vmov	r0, s0
 8024a4c:	2200      	movs	r2, #0
 8024a4e:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8024a52:	4649      	mov	r1, r9
 8024a54:	f7dc f85c 	bl	8000b10 <__aeabi_dcmple>
 8024a58:	2800      	cmp	r0, #0
 8024a5a:	d07a      	beq.n	8024b52 <_strtod_l+0xa8a>
 8024a5c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024a5e:	2b00      	cmp	r3, #0
 8024a60:	d04a      	beq.n	8024af8 <_strtod_l+0xa30>
 8024a62:	4b95      	ldr	r3, [pc, #596]	; (8024cb8 <_strtod_l+0xbf0>)
 8024a64:	2200      	movs	r2, #0
 8024a66:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8024a6a:	f8df 924c 	ldr.w	r9, [pc, #588]	; 8024cb8 <_strtod_l+0xbf0>
 8024a6e:	f04f 0800 	mov.w	r8, #0
 8024a72:	4b92      	ldr	r3, [pc, #584]	; (8024cbc <_strtod_l+0xbf4>)
 8024a74:	403b      	ands	r3, r7
 8024a76:	930d      	str	r3, [sp, #52]	; 0x34
 8024a78:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024a7a:	4b91      	ldr	r3, [pc, #580]	; (8024cc0 <_strtod_l+0xbf8>)
 8024a7c:	429a      	cmp	r2, r3
 8024a7e:	f040 80b0 	bne.w	8024be2 <_strtod_l+0xb1a>
 8024a82:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8024a86:	f1a7 7b54 	sub.w	fp, r7, #55574528	; 0x3500000
 8024a8a:	ec4b ab10 	vmov	d0, sl, fp
 8024a8e:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8024a92:	f002 fa85 	bl	8026fa0 <__ulp>
 8024a96:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8024a9a:	ec53 2b10 	vmov	r2, r3, d0
 8024a9e:	f7db fdbb 	bl	8000618 <__aeabi_dmul>
 8024aa2:	4652      	mov	r2, sl
 8024aa4:	465b      	mov	r3, fp
 8024aa6:	f7db fc01 	bl	80002ac <__adddf3>
 8024aaa:	460b      	mov	r3, r1
 8024aac:	4983      	ldr	r1, [pc, #524]	; (8024cbc <_strtod_l+0xbf4>)
 8024aae:	4a85      	ldr	r2, [pc, #532]	; (8024cc4 <_strtod_l+0xbfc>)
 8024ab0:	4019      	ands	r1, r3
 8024ab2:	4291      	cmp	r1, r2
 8024ab4:	4682      	mov	sl, r0
 8024ab6:	d960      	bls.n	8024b7a <_strtod_l+0xab2>
 8024ab8:	ee18 3a90 	vmov	r3, s17
 8024abc:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 8024ac0:	4293      	cmp	r3, r2
 8024ac2:	d104      	bne.n	8024ace <_strtod_l+0xa06>
 8024ac4:	ee18 3a10 	vmov	r3, s16
 8024ac8:	3301      	adds	r3, #1
 8024aca:	f43f ad45 	beq.w	8024558 <_strtod_l+0x490>
 8024ace:	f8df b200 	ldr.w	fp, [pc, #512]	; 8024cd0 <_strtod_l+0xc08>
 8024ad2:	f04f 3aff 	mov.w	sl, #4294967295
 8024ad6:	9918      	ldr	r1, [sp, #96]	; 0x60
 8024ad8:	4620      	mov	r0, r4
 8024ada:	f001 ff2f 	bl	802693c <_Bfree>
 8024ade:	9905      	ldr	r1, [sp, #20]
 8024ae0:	4620      	mov	r0, r4
 8024ae2:	f001 ff2b 	bl	802693c <_Bfree>
 8024ae6:	4631      	mov	r1, r6
 8024ae8:	4620      	mov	r0, r4
 8024aea:	f001 ff27 	bl	802693c <_Bfree>
 8024aee:	4629      	mov	r1, r5
 8024af0:	4620      	mov	r0, r4
 8024af2:	f001 ff23 	bl	802693c <_Bfree>
 8024af6:	e61a      	b.n	802472e <_strtod_l+0x666>
 8024af8:	f1ba 0f00 	cmp.w	sl, #0
 8024afc:	d11b      	bne.n	8024b36 <_strtod_l+0xa6e>
 8024afe:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024b02:	b9f3      	cbnz	r3, 8024b42 <_strtod_l+0xa7a>
 8024b04:	4b6c      	ldr	r3, [pc, #432]	; (8024cb8 <_strtod_l+0xbf0>)
 8024b06:	2200      	movs	r2, #0
 8024b08:	4640      	mov	r0, r8
 8024b0a:	4649      	mov	r1, r9
 8024b0c:	f7db fff6 	bl	8000afc <__aeabi_dcmplt>
 8024b10:	b9d0      	cbnz	r0, 8024b48 <_strtod_l+0xa80>
 8024b12:	4640      	mov	r0, r8
 8024b14:	4649      	mov	r1, r9
 8024b16:	4b6c      	ldr	r3, [pc, #432]	; (8024cc8 <_strtod_l+0xc00>)
 8024b18:	2200      	movs	r2, #0
 8024b1a:	f7db fd7d 	bl	8000618 <__aeabi_dmul>
 8024b1e:	4680      	mov	r8, r0
 8024b20:	4689      	mov	r9, r1
 8024b22:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8024b26:	f8cd 8050 	str.w	r8, [sp, #80]	; 0x50
 8024b2a:	9315      	str	r3, [sp, #84]	; 0x54
 8024b2c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8024b30:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8024b34:	e79d      	b.n	8024a72 <_strtod_l+0x9aa>
 8024b36:	f1ba 0f01 	cmp.w	sl, #1
 8024b3a:	d102      	bne.n	8024b42 <_strtod_l+0xa7a>
 8024b3c:	2f00      	cmp	r7, #0
 8024b3e:	f43f ad83 	beq.w	8024648 <_strtod_l+0x580>
 8024b42:	4b62      	ldr	r3, [pc, #392]	; (8024ccc <_strtod_l+0xc04>)
 8024b44:	2200      	movs	r2, #0
 8024b46:	e78e      	b.n	8024a66 <_strtod_l+0x99e>
 8024b48:	f8df 917c 	ldr.w	r9, [pc, #380]	; 8024cc8 <_strtod_l+0xc00>
 8024b4c:	f04f 0800 	mov.w	r8, #0
 8024b50:	e7e7      	b.n	8024b22 <_strtod_l+0xa5a>
 8024b52:	4b5d      	ldr	r3, [pc, #372]	; (8024cc8 <_strtod_l+0xc00>)
 8024b54:	4640      	mov	r0, r8
 8024b56:	4649      	mov	r1, r9
 8024b58:	2200      	movs	r2, #0
 8024b5a:	f7db fd5d 	bl	8000618 <__aeabi_dmul>
 8024b5e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024b60:	4680      	mov	r8, r0
 8024b62:	4689      	mov	r9, r1
 8024b64:	b933      	cbnz	r3, 8024b74 <_strtod_l+0xaac>
 8024b66:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024b6a:	900e      	str	r0, [sp, #56]	; 0x38
 8024b6c:	930f      	str	r3, [sp, #60]	; 0x3c
 8024b6e:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8024b72:	e7dd      	b.n	8024b30 <_strtod_l+0xa68>
 8024b74:	e9cd 890e 	strd	r8, r9, [sp, #56]	; 0x38
 8024b78:	e7f9      	b.n	8024b6e <_strtod_l+0xaa6>
 8024b7a:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8024b7e:	9b04      	ldr	r3, [sp, #16]
 8024b80:	2b00      	cmp	r3, #0
 8024b82:	d1a8      	bne.n	8024ad6 <_strtod_l+0xa0e>
 8024b84:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8024b88:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024b8a:	0d1b      	lsrs	r3, r3, #20
 8024b8c:	051b      	lsls	r3, r3, #20
 8024b8e:	429a      	cmp	r2, r3
 8024b90:	d1a1      	bne.n	8024ad6 <_strtod_l+0xa0e>
 8024b92:	4640      	mov	r0, r8
 8024b94:	4649      	mov	r1, r9
 8024b96:	f7dc f89f 	bl	8000cd8 <__aeabi_d2lz>
 8024b9a:	f7db fd0f 	bl	80005bc <__aeabi_l2d>
 8024b9e:	4602      	mov	r2, r0
 8024ba0:	460b      	mov	r3, r1
 8024ba2:	4640      	mov	r0, r8
 8024ba4:	4649      	mov	r1, r9
 8024ba6:	f7db fb7f 	bl	80002a8 <__aeabi_dsub>
 8024baa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8024bac:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8024bb0:	ea43 030a 	orr.w	r3, r3, sl
 8024bb4:	4313      	orrs	r3, r2
 8024bb6:	4680      	mov	r8, r0
 8024bb8:	4689      	mov	r9, r1
 8024bba:	d055      	beq.n	8024c68 <_strtod_l+0xba0>
 8024bbc:	a336      	add	r3, pc, #216	; (adr r3, 8024c98 <_strtod_l+0xbd0>)
 8024bbe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bc2:	f7db ff9b 	bl	8000afc <__aeabi_dcmplt>
 8024bc6:	2800      	cmp	r0, #0
 8024bc8:	f47f acd0 	bne.w	802456c <_strtod_l+0x4a4>
 8024bcc:	a334      	add	r3, pc, #208	; (adr r3, 8024ca0 <_strtod_l+0xbd8>)
 8024bce:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bd2:	4640      	mov	r0, r8
 8024bd4:	4649      	mov	r1, r9
 8024bd6:	f7db ffaf 	bl	8000b38 <__aeabi_dcmpgt>
 8024bda:	2800      	cmp	r0, #0
 8024bdc:	f43f af7b 	beq.w	8024ad6 <_strtod_l+0xa0e>
 8024be0:	e4c4      	b.n	802456c <_strtod_l+0x4a4>
 8024be2:	9b04      	ldr	r3, [sp, #16]
 8024be4:	b333      	cbz	r3, 8024c34 <_strtod_l+0xb6c>
 8024be6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8024be8:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8024bec:	d822      	bhi.n	8024c34 <_strtod_l+0xb6c>
 8024bee:	a32e      	add	r3, pc, #184	; (adr r3, 8024ca8 <_strtod_l+0xbe0>)
 8024bf0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024bf4:	4640      	mov	r0, r8
 8024bf6:	4649      	mov	r1, r9
 8024bf8:	f7db ff8a 	bl	8000b10 <__aeabi_dcmple>
 8024bfc:	b1a0      	cbz	r0, 8024c28 <_strtod_l+0xb60>
 8024bfe:	4649      	mov	r1, r9
 8024c00:	4640      	mov	r0, r8
 8024c02:	f7db ffe1 	bl	8000bc8 <__aeabi_d2uiz>
 8024c06:	2801      	cmp	r0, #1
 8024c08:	bf38      	it	cc
 8024c0a:	2001      	movcc	r0, #1
 8024c0c:	f7db fc8a 	bl	8000524 <__aeabi_ui2d>
 8024c10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8024c12:	4680      	mov	r8, r0
 8024c14:	4689      	mov	r9, r1
 8024c16:	bb23      	cbnz	r3, 8024c62 <_strtod_l+0xb9a>
 8024c18:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8024c1c:	9010      	str	r0, [sp, #64]	; 0x40
 8024c1e:	9311      	str	r3, [sp, #68]	; 0x44
 8024c20:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8024c24:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8024c28:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8024c2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8024c2c:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8024c30:	1a9b      	subs	r3, r3, r2
 8024c32:	9309      	str	r3, [sp, #36]	; 0x24
 8024c34:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8024c38:	eeb0 0a48 	vmov.f32	s0, s16
 8024c3c:	eef0 0a68 	vmov.f32	s1, s17
 8024c40:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8024c44:	f002 f9ac 	bl	8026fa0 <__ulp>
 8024c48:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8024c4c:	ec53 2b10 	vmov	r2, r3, d0
 8024c50:	f7db fce2 	bl	8000618 <__aeabi_dmul>
 8024c54:	ec53 2b18 	vmov	r2, r3, d8
 8024c58:	f7db fb28 	bl	80002ac <__adddf3>
 8024c5c:	4682      	mov	sl, r0
 8024c5e:	468b      	mov	fp, r1
 8024c60:	e78d      	b.n	8024b7e <_strtod_l+0xab6>
 8024c62:	e9cd 8910 	strd	r8, r9, [sp, #64]	; 0x40
 8024c66:	e7db      	b.n	8024c20 <_strtod_l+0xb58>
 8024c68:	a311      	add	r3, pc, #68	; (adr r3, 8024cb0 <_strtod_l+0xbe8>)
 8024c6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8024c6e:	f7db ff45 	bl	8000afc <__aeabi_dcmplt>
 8024c72:	e7b2      	b.n	8024bda <_strtod_l+0xb12>
 8024c74:	2300      	movs	r3, #0
 8024c76:	930a      	str	r3, [sp, #40]	; 0x28
 8024c78:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8024c7a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8024c7c:	6013      	str	r3, [r2, #0]
 8024c7e:	f7ff ba6b 	b.w	8024158 <_strtod_l+0x90>
 8024c82:	2a65      	cmp	r2, #101	; 0x65
 8024c84:	f43f ab5f 	beq.w	8024346 <_strtod_l+0x27e>
 8024c88:	2a45      	cmp	r2, #69	; 0x45
 8024c8a:	f43f ab5c 	beq.w	8024346 <_strtod_l+0x27e>
 8024c8e:	2301      	movs	r3, #1
 8024c90:	f7ff bb94 	b.w	80243bc <_strtod_l+0x2f4>
 8024c94:	f3af 8000 	nop.w
 8024c98:	94a03595 	.word	0x94a03595
 8024c9c:	3fdfffff 	.word	0x3fdfffff
 8024ca0:	35afe535 	.word	0x35afe535
 8024ca4:	3fe00000 	.word	0x3fe00000
 8024ca8:	ffc00000 	.word	0xffc00000
 8024cac:	41dfffff 	.word	0x41dfffff
 8024cb0:	94a03595 	.word	0x94a03595
 8024cb4:	3fcfffff 	.word	0x3fcfffff
 8024cb8:	3ff00000 	.word	0x3ff00000
 8024cbc:	7ff00000 	.word	0x7ff00000
 8024cc0:	7fe00000 	.word	0x7fe00000
 8024cc4:	7c9fffff 	.word	0x7c9fffff
 8024cc8:	3fe00000 	.word	0x3fe00000
 8024ccc:	bff00000 	.word	0xbff00000
 8024cd0:	7fefffff 	.word	0x7fefffff

08024cd4 <_strtod_r>:
 8024cd4:	4b01      	ldr	r3, [pc, #4]	; (8024cdc <_strtod_r+0x8>)
 8024cd6:	f7ff b9f7 	b.w	80240c8 <_strtod_l>
 8024cda:	bf00      	nop
 8024cdc:	20000168 	.word	0x20000168

08024ce0 <_strtol_l.constprop.0>:
 8024ce0:	2b01      	cmp	r3, #1
 8024ce2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024ce6:	d001      	beq.n	8024cec <_strtol_l.constprop.0+0xc>
 8024ce8:	2b24      	cmp	r3, #36	; 0x24
 8024cea:	d906      	bls.n	8024cfa <_strtol_l.constprop.0+0x1a>
 8024cec:	f7fd ff9a 	bl	8022c24 <__errno>
 8024cf0:	2316      	movs	r3, #22
 8024cf2:	6003      	str	r3, [r0, #0]
 8024cf4:	2000      	movs	r0, #0
 8024cf6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024cfa:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8024de0 <_strtol_l.constprop.0+0x100>
 8024cfe:	460d      	mov	r5, r1
 8024d00:	462e      	mov	r6, r5
 8024d02:	f815 4b01 	ldrb.w	r4, [r5], #1
 8024d06:	f814 700c 	ldrb.w	r7, [r4, ip]
 8024d0a:	f017 0708 	ands.w	r7, r7, #8
 8024d0e:	d1f7      	bne.n	8024d00 <_strtol_l.constprop.0+0x20>
 8024d10:	2c2d      	cmp	r4, #45	; 0x2d
 8024d12:	d132      	bne.n	8024d7a <_strtol_l.constprop.0+0x9a>
 8024d14:	782c      	ldrb	r4, [r5, #0]
 8024d16:	2701      	movs	r7, #1
 8024d18:	1cb5      	adds	r5, r6, #2
 8024d1a:	2b00      	cmp	r3, #0
 8024d1c:	d05b      	beq.n	8024dd6 <_strtol_l.constprop.0+0xf6>
 8024d1e:	2b10      	cmp	r3, #16
 8024d20:	d109      	bne.n	8024d36 <_strtol_l.constprop.0+0x56>
 8024d22:	2c30      	cmp	r4, #48	; 0x30
 8024d24:	d107      	bne.n	8024d36 <_strtol_l.constprop.0+0x56>
 8024d26:	782c      	ldrb	r4, [r5, #0]
 8024d28:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 8024d2c:	2c58      	cmp	r4, #88	; 0x58
 8024d2e:	d14d      	bne.n	8024dcc <_strtol_l.constprop.0+0xec>
 8024d30:	786c      	ldrb	r4, [r5, #1]
 8024d32:	2310      	movs	r3, #16
 8024d34:	3502      	adds	r5, #2
 8024d36:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 8024d3a:	f108 38ff 	add.w	r8, r8, #4294967295
 8024d3e:	f04f 0c00 	mov.w	ip, #0
 8024d42:	fbb8 f9f3 	udiv	r9, r8, r3
 8024d46:	4666      	mov	r6, ip
 8024d48:	fb03 8a19 	mls	sl, r3, r9, r8
 8024d4c:	f1a4 0e30 	sub.w	lr, r4, #48	; 0x30
 8024d50:	f1be 0f09 	cmp.w	lr, #9
 8024d54:	d816      	bhi.n	8024d84 <_strtol_l.constprop.0+0xa4>
 8024d56:	4674      	mov	r4, lr
 8024d58:	42a3      	cmp	r3, r4
 8024d5a:	dd24      	ble.n	8024da6 <_strtol_l.constprop.0+0xc6>
 8024d5c:	f1bc 0f00 	cmp.w	ip, #0
 8024d60:	db1e      	blt.n	8024da0 <_strtol_l.constprop.0+0xc0>
 8024d62:	45b1      	cmp	r9, r6
 8024d64:	d31c      	bcc.n	8024da0 <_strtol_l.constprop.0+0xc0>
 8024d66:	d101      	bne.n	8024d6c <_strtol_l.constprop.0+0x8c>
 8024d68:	45a2      	cmp	sl, r4
 8024d6a:	db19      	blt.n	8024da0 <_strtol_l.constprop.0+0xc0>
 8024d6c:	fb06 4603 	mla	r6, r6, r3, r4
 8024d70:	f04f 0c01 	mov.w	ip, #1
 8024d74:	f815 4b01 	ldrb.w	r4, [r5], #1
 8024d78:	e7e8      	b.n	8024d4c <_strtol_l.constprop.0+0x6c>
 8024d7a:	2c2b      	cmp	r4, #43	; 0x2b
 8024d7c:	bf04      	itt	eq
 8024d7e:	782c      	ldrbeq	r4, [r5, #0]
 8024d80:	1cb5      	addeq	r5, r6, #2
 8024d82:	e7ca      	b.n	8024d1a <_strtol_l.constprop.0+0x3a>
 8024d84:	f1a4 0e41 	sub.w	lr, r4, #65	; 0x41
 8024d88:	f1be 0f19 	cmp.w	lr, #25
 8024d8c:	d801      	bhi.n	8024d92 <_strtol_l.constprop.0+0xb2>
 8024d8e:	3c37      	subs	r4, #55	; 0x37
 8024d90:	e7e2      	b.n	8024d58 <_strtol_l.constprop.0+0x78>
 8024d92:	f1a4 0e61 	sub.w	lr, r4, #97	; 0x61
 8024d96:	f1be 0f19 	cmp.w	lr, #25
 8024d9a:	d804      	bhi.n	8024da6 <_strtol_l.constprop.0+0xc6>
 8024d9c:	3c57      	subs	r4, #87	; 0x57
 8024d9e:	e7db      	b.n	8024d58 <_strtol_l.constprop.0+0x78>
 8024da0:	f04f 3cff 	mov.w	ip, #4294967295
 8024da4:	e7e6      	b.n	8024d74 <_strtol_l.constprop.0+0x94>
 8024da6:	f1bc 0f00 	cmp.w	ip, #0
 8024daa:	da05      	bge.n	8024db8 <_strtol_l.constprop.0+0xd8>
 8024dac:	2322      	movs	r3, #34	; 0x22
 8024dae:	6003      	str	r3, [r0, #0]
 8024db0:	4646      	mov	r6, r8
 8024db2:	b942      	cbnz	r2, 8024dc6 <_strtol_l.constprop.0+0xe6>
 8024db4:	4630      	mov	r0, r6
 8024db6:	e79e      	b.n	8024cf6 <_strtol_l.constprop.0+0x16>
 8024db8:	b107      	cbz	r7, 8024dbc <_strtol_l.constprop.0+0xdc>
 8024dba:	4276      	negs	r6, r6
 8024dbc:	2a00      	cmp	r2, #0
 8024dbe:	d0f9      	beq.n	8024db4 <_strtol_l.constprop.0+0xd4>
 8024dc0:	f1bc 0f00 	cmp.w	ip, #0
 8024dc4:	d000      	beq.n	8024dc8 <_strtol_l.constprop.0+0xe8>
 8024dc6:	1e69      	subs	r1, r5, #1
 8024dc8:	6011      	str	r1, [r2, #0]
 8024dca:	e7f3      	b.n	8024db4 <_strtol_l.constprop.0+0xd4>
 8024dcc:	2430      	movs	r4, #48	; 0x30
 8024dce:	2b00      	cmp	r3, #0
 8024dd0:	d1b1      	bne.n	8024d36 <_strtol_l.constprop.0+0x56>
 8024dd2:	2308      	movs	r3, #8
 8024dd4:	e7af      	b.n	8024d36 <_strtol_l.constprop.0+0x56>
 8024dd6:	2c30      	cmp	r4, #48	; 0x30
 8024dd8:	d0a5      	beq.n	8024d26 <_strtol_l.constprop.0+0x46>
 8024dda:	230a      	movs	r3, #10
 8024ddc:	e7ab      	b.n	8024d36 <_strtol_l.constprop.0+0x56>
 8024dde:	bf00      	nop
 8024de0:	0802aea9 	.word	0x0802aea9

08024de4 <_strtol_r>:
 8024de4:	f7ff bf7c 	b.w	8024ce0 <_strtol_l.constprop.0>

08024de8 <__swbuf_r>:
 8024de8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8024dea:	460e      	mov	r6, r1
 8024dec:	4614      	mov	r4, r2
 8024dee:	4605      	mov	r5, r0
 8024df0:	b118      	cbz	r0, 8024dfa <__swbuf_r+0x12>
 8024df2:	6983      	ldr	r3, [r0, #24]
 8024df4:	b90b      	cbnz	r3, 8024dfa <__swbuf_r+0x12>
 8024df6:	f001 f8af 	bl	8025f58 <__sinit>
 8024dfa:	4b21      	ldr	r3, [pc, #132]	; (8024e80 <__swbuf_r+0x98>)
 8024dfc:	429c      	cmp	r4, r3
 8024dfe:	d12b      	bne.n	8024e58 <__swbuf_r+0x70>
 8024e00:	686c      	ldr	r4, [r5, #4]
 8024e02:	69a3      	ldr	r3, [r4, #24]
 8024e04:	60a3      	str	r3, [r4, #8]
 8024e06:	89a3      	ldrh	r3, [r4, #12]
 8024e08:	071a      	lsls	r2, r3, #28
 8024e0a:	d52f      	bpl.n	8024e6c <__swbuf_r+0x84>
 8024e0c:	6923      	ldr	r3, [r4, #16]
 8024e0e:	b36b      	cbz	r3, 8024e6c <__swbuf_r+0x84>
 8024e10:	6923      	ldr	r3, [r4, #16]
 8024e12:	6820      	ldr	r0, [r4, #0]
 8024e14:	1ac0      	subs	r0, r0, r3
 8024e16:	6963      	ldr	r3, [r4, #20]
 8024e18:	b2f6      	uxtb	r6, r6
 8024e1a:	4283      	cmp	r3, r0
 8024e1c:	4637      	mov	r7, r6
 8024e1e:	dc04      	bgt.n	8024e2a <__swbuf_r+0x42>
 8024e20:	4621      	mov	r1, r4
 8024e22:	4628      	mov	r0, r5
 8024e24:	f001 f804 	bl	8025e30 <_fflush_r>
 8024e28:	bb30      	cbnz	r0, 8024e78 <__swbuf_r+0x90>
 8024e2a:	68a3      	ldr	r3, [r4, #8]
 8024e2c:	3b01      	subs	r3, #1
 8024e2e:	60a3      	str	r3, [r4, #8]
 8024e30:	6823      	ldr	r3, [r4, #0]
 8024e32:	1c5a      	adds	r2, r3, #1
 8024e34:	6022      	str	r2, [r4, #0]
 8024e36:	701e      	strb	r6, [r3, #0]
 8024e38:	6963      	ldr	r3, [r4, #20]
 8024e3a:	3001      	adds	r0, #1
 8024e3c:	4283      	cmp	r3, r0
 8024e3e:	d004      	beq.n	8024e4a <__swbuf_r+0x62>
 8024e40:	89a3      	ldrh	r3, [r4, #12]
 8024e42:	07db      	lsls	r3, r3, #31
 8024e44:	d506      	bpl.n	8024e54 <__swbuf_r+0x6c>
 8024e46:	2e0a      	cmp	r6, #10
 8024e48:	d104      	bne.n	8024e54 <__swbuf_r+0x6c>
 8024e4a:	4621      	mov	r1, r4
 8024e4c:	4628      	mov	r0, r5
 8024e4e:	f000 ffef 	bl	8025e30 <_fflush_r>
 8024e52:	b988      	cbnz	r0, 8024e78 <__swbuf_r+0x90>
 8024e54:	4638      	mov	r0, r7
 8024e56:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8024e58:	4b0a      	ldr	r3, [pc, #40]	; (8024e84 <__swbuf_r+0x9c>)
 8024e5a:	429c      	cmp	r4, r3
 8024e5c:	d101      	bne.n	8024e62 <__swbuf_r+0x7a>
 8024e5e:	68ac      	ldr	r4, [r5, #8]
 8024e60:	e7cf      	b.n	8024e02 <__swbuf_r+0x1a>
 8024e62:	4b09      	ldr	r3, [pc, #36]	; (8024e88 <__swbuf_r+0xa0>)
 8024e64:	429c      	cmp	r4, r3
 8024e66:	bf08      	it	eq
 8024e68:	68ec      	ldreq	r4, [r5, #12]
 8024e6a:	e7ca      	b.n	8024e02 <__swbuf_r+0x1a>
 8024e6c:	4621      	mov	r1, r4
 8024e6e:	4628      	mov	r0, r5
 8024e70:	f000 f80c 	bl	8024e8c <__swsetup_r>
 8024e74:	2800      	cmp	r0, #0
 8024e76:	d0cb      	beq.n	8024e10 <__swbuf_r+0x28>
 8024e78:	f04f 37ff 	mov.w	r7, #4294967295
 8024e7c:	e7ea      	b.n	8024e54 <__swbuf_r+0x6c>
 8024e7e:	bf00      	nop
 8024e80:	0802b05c 	.word	0x0802b05c
 8024e84:	0802b07c 	.word	0x0802b07c
 8024e88:	0802b03c 	.word	0x0802b03c

08024e8c <__swsetup_r>:
 8024e8c:	4b32      	ldr	r3, [pc, #200]	; (8024f58 <__swsetup_r+0xcc>)
 8024e8e:	b570      	push	{r4, r5, r6, lr}
 8024e90:	681d      	ldr	r5, [r3, #0]
 8024e92:	4606      	mov	r6, r0
 8024e94:	460c      	mov	r4, r1
 8024e96:	b125      	cbz	r5, 8024ea2 <__swsetup_r+0x16>
 8024e98:	69ab      	ldr	r3, [r5, #24]
 8024e9a:	b913      	cbnz	r3, 8024ea2 <__swsetup_r+0x16>
 8024e9c:	4628      	mov	r0, r5
 8024e9e:	f001 f85b 	bl	8025f58 <__sinit>
 8024ea2:	4b2e      	ldr	r3, [pc, #184]	; (8024f5c <__swsetup_r+0xd0>)
 8024ea4:	429c      	cmp	r4, r3
 8024ea6:	d10f      	bne.n	8024ec8 <__swsetup_r+0x3c>
 8024ea8:	686c      	ldr	r4, [r5, #4]
 8024eaa:	89a3      	ldrh	r3, [r4, #12]
 8024eac:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024eb0:	0719      	lsls	r1, r3, #28
 8024eb2:	d42c      	bmi.n	8024f0e <__swsetup_r+0x82>
 8024eb4:	06dd      	lsls	r5, r3, #27
 8024eb6:	d411      	bmi.n	8024edc <__swsetup_r+0x50>
 8024eb8:	2309      	movs	r3, #9
 8024eba:	6033      	str	r3, [r6, #0]
 8024ebc:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8024ec0:	81a3      	strh	r3, [r4, #12]
 8024ec2:	f04f 30ff 	mov.w	r0, #4294967295
 8024ec6:	e03e      	b.n	8024f46 <__swsetup_r+0xba>
 8024ec8:	4b25      	ldr	r3, [pc, #148]	; (8024f60 <__swsetup_r+0xd4>)
 8024eca:	429c      	cmp	r4, r3
 8024ecc:	d101      	bne.n	8024ed2 <__swsetup_r+0x46>
 8024ece:	68ac      	ldr	r4, [r5, #8]
 8024ed0:	e7eb      	b.n	8024eaa <__swsetup_r+0x1e>
 8024ed2:	4b24      	ldr	r3, [pc, #144]	; (8024f64 <__swsetup_r+0xd8>)
 8024ed4:	429c      	cmp	r4, r3
 8024ed6:	bf08      	it	eq
 8024ed8:	68ec      	ldreq	r4, [r5, #12]
 8024eda:	e7e6      	b.n	8024eaa <__swsetup_r+0x1e>
 8024edc:	0758      	lsls	r0, r3, #29
 8024ede:	d512      	bpl.n	8024f06 <__swsetup_r+0x7a>
 8024ee0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8024ee2:	b141      	cbz	r1, 8024ef6 <__swsetup_r+0x6a>
 8024ee4:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8024ee8:	4299      	cmp	r1, r3
 8024eea:	d002      	beq.n	8024ef2 <__swsetup_r+0x66>
 8024eec:	4630      	mov	r0, r6
 8024eee:	f7fd fefb 	bl	8022ce8 <_free_r>
 8024ef2:	2300      	movs	r3, #0
 8024ef4:	6363      	str	r3, [r4, #52]	; 0x34
 8024ef6:	89a3      	ldrh	r3, [r4, #12]
 8024ef8:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 8024efc:	81a3      	strh	r3, [r4, #12]
 8024efe:	2300      	movs	r3, #0
 8024f00:	6063      	str	r3, [r4, #4]
 8024f02:	6923      	ldr	r3, [r4, #16]
 8024f04:	6023      	str	r3, [r4, #0]
 8024f06:	89a3      	ldrh	r3, [r4, #12]
 8024f08:	f043 0308 	orr.w	r3, r3, #8
 8024f0c:	81a3      	strh	r3, [r4, #12]
 8024f0e:	6923      	ldr	r3, [r4, #16]
 8024f10:	b94b      	cbnz	r3, 8024f26 <__swsetup_r+0x9a>
 8024f12:	89a3      	ldrh	r3, [r4, #12]
 8024f14:	f403 7320 	and.w	r3, r3, #640	; 0x280
 8024f18:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8024f1c:	d003      	beq.n	8024f26 <__swsetup_r+0x9a>
 8024f1e:	4621      	mov	r1, r4
 8024f20:	4630      	mov	r0, r6
 8024f22:	f001 fc53 	bl	80267cc <__smakebuf_r>
 8024f26:	89a0      	ldrh	r0, [r4, #12]
 8024f28:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8024f2c:	f010 0301 	ands.w	r3, r0, #1
 8024f30:	d00a      	beq.n	8024f48 <__swsetup_r+0xbc>
 8024f32:	2300      	movs	r3, #0
 8024f34:	60a3      	str	r3, [r4, #8]
 8024f36:	6963      	ldr	r3, [r4, #20]
 8024f38:	425b      	negs	r3, r3
 8024f3a:	61a3      	str	r3, [r4, #24]
 8024f3c:	6923      	ldr	r3, [r4, #16]
 8024f3e:	b943      	cbnz	r3, 8024f52 <__swsetup_r+0xc6>
 8024f40:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 8024f44:	d1ba      	bne.n	8024ebc <__swsetup_r+0x30>
 8024f46:	bd70      	pop	{r4, r5, r6, pc}
 8024f48:	0781      	lsls	r1, r0, #30
 8024f4a:	bf58      	it	pl
 8024f4c:	6963      	ldrpl	r3, [r4, #20]
 8024f4e:	60a3      	str	r3, [r4, #8]
 8024f50:	e7f4      	b.n	8024f3c <__swsetup_r+0xb0>
 8024f52:	2000      	movs	r0, #0
 8024f54:	e7f7      	b.n	8024f46 <__swsetup_r+0xba>
 8024f56:	bf00      	nop
 8024f58:	200000fc 	.word	0x200000fc
 8024f5c:	0802b05c 	.word	0x0802b05c
 8024f60:	0802b07c 	.word	0x0802b07c
 8024f64:	0802b03c 	.word	0x0802b03c

08024f68 <__register_exitproc>:
 8024f68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8024f6c:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 8025028 <__register_exitproc+0xc0>
 8024f70:	4606      	mov	r6, r0
 8024f72:	f8d8 0000 	ldr.w	r0, [r8]
 8024f76:	461f      	mov	r7, r3
 8024f78:	460d      	mov	r5, r1
 8024f7a:	4691      	mov	r9, r2
 8024f7c:	f001 fbfd 	bl	802677a <__retarget_lock_acquire_recursive>
 8024f80:	4b25      	ldr	r3, [pc, #148]	; (8025018 <__register_exitproc+0xb0>)
 8024f82:	681c      	ldr	r4, [r3, #0]
 8024f84:	b934      	cbnz	r4, 8024f94 <__register_exitproc+0x2c>
 8024f86:	4c25      	ldr	r4, [pc, #148]	; (802501c <__register_exitproc+0xb4>)
 8024f88:	601c      	str	r4, [r3, #0]
 8024f8a:	4b25      	ldr	r3, [pc, #148]	; (8025020 <__register_exitproc+0xb8>)
 8024f8c:	b113      	cbz	r3, 8024f94 <__register_exitproc+0x2c>
 8024f8e:	681b      	ldr	r3, [r3, #0]
 8024f90:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8024f94:	6863      	ldr	r3, [r4, #4]
 8024f96:	2b1f      	cmp	r3, #31
 8024f98:	dd07      	ble.n	8024faa <__register_exitproc+0x42>
 8024f9a:	f8d8 0000 	ldr.w	r0, [r8]
 8024f9e:	f001 fbee 	bl	802677e <__retarget_lock_release_recursive>
 8024fa2:	f04f 30ff 	mov.w	r0, #4294967295
 8024fa6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8024faa:	b34e      	cbz	r6, 8025000 <__register_exitproc+0x98>
 8024fac:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8024fb0:	b988      	cbnz	r0, 8024fd6 <__register_exitproc+0x6e>
 8024fb2:	4b1c      	ldr	r3, [pc, #112]	; (8025024 <__register_exitproc+0xbc>)
 8024fb4:	b923      	cbnz	r3, 8024fc0 <__register_exitproc+0x58>
 8024fb6:	f8d8 0000 	ldr.w	r0, [r8]
 8024fba:	f001 fbdf 	bl	802677c <__retarget_lock_release>
 8024fbe:	e7f0      	b.n	8024fa2 <__register_exitproc+0x3a>
 8024fc0:	f44f 7084 	mov.w	r0, #264	; 0x108
 8024fc4:	f7fd fe6a 	bl	8022c9c <malloc>
 8024fc8:	2800      	cmp	r0, #0
 8024fca:	d0f4      	beq.n	8024fb6 <__register_exitproc+0x4e>
 8024fcc:	2300      	movs	r3, #0
 8024fce:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8024fd2:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8024fd6:	6863      	ldr	r3, [r4, #4]
 8024fd8:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8024fdc:	2201      	movs	r2, #1
 8024fde:	409a      	lsls	r2, r3
 8024fe0:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8024fe4:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8024fe8:	4313      	orrs	r3, r2
 8024fea:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 8024fee:	2e02      	cmp	r6, #2
 8024ff0:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8024ff4:	bf02      	ittt	eq
 8024ff6:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 8024ffa:	4313      	orreq	r3, r2
 8024ffc:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8025000:	6863      	ldr	r3, [r4, #4]
 8025002:	f8d8 0000 	ldr.w	r0, [r8]
 8025006:	1c5a      	adds	r2, r3, #1
 8025008:	3302      	adds	r3, #2
 802500a:	6062      	str	r2, [r4, #4]
 802500c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 8025010:	f001 fbb5 	bl	802677e <__retarget_lock_release_recursive>
 8025014:	2000      	movs	r0, #0
 8025016:	e7c6      	b.n	8024fa6 <__register_exitproc+0x3e>
 8025018:	200139f8 	.word	0x200139f8
 802501c:	2001396c 	.word	0x2001396c
 8025020:	0802ae50 	.word	0x0802ae50
 8025024:	08022c9d 	.word	0x08022c9d
 8025028:	20000160 	.word	0x20000160

0802502c <quorem>:
 802502c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025030:	6903      	ldr	r3, [r0, #16]
 8025032:	690c      	ldr	r4, [r1, #16]
 8025034:	42a3      	cmp	r3, r4
 8025036:	4607      	mov	r7, r0
 8025038:	f2c0 8081 	blt.w	802513e <quorem+0x112>
 802503c:	3c01      	subs	r4, #1
 802503e:	f101 0814 	add.w	r8, r1, #20
 8025042:	f100 0514 	add.w	r5, r0, #20
 8025046:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 802504a:	9301      	str	r3, [sp, #4]
 802504c:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 8025050:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 8025054:	3301      	adds	r3, #1
 8025056:	429a      	cmp	r2, r3
 8025058:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 802505c:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 8025060:	fbb2 f6f3 	udiv	r6, r2, r3
 8025064:	d331      	bcc.n	80250ca <quorem+0x9e>
 8025066:	f04f 0e00 	mov.w	lr, #0
 802506a:	4640      	mov	r0, r8
 802506c:	46ac      	mov	ip, r5
 802506e:	46f2      	mov	sl, lr
 8025070:	f850 2b04 	ldr.w	r2, [r0], #4
 8025074:	b293      	uxth	r3, r2
 8025076:	fb06 e303 	mla	r3, r6, r3, lr
 802507a:	ea4f 4e13 	mov.w	lr, r3, lsr #16
 802507e:	b29b      	uxth	r3, r3
 8025080:	ebaa 0303 	sub.w	r3, sl, r3
 8025084:	f8dc a000 	ldr.w	sl, [ip]
 8025088:	0c12      	lsrs	r2, r2, #16
 802508a:	fa13 f38a 	uxtah	r3, r3, sl
 802508e:	fb06 e202 	mla	r2, r6, r2, lr
 8025092:	9300      	str	r3, [sp, #0]
 8025094:	9b00      	ldr	r3, [sp, #0]
 8025096:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 802509a:	b292      	uxth	r2, r2
 802509c:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 80250a0:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80250a4:	f8bd 3000 	ldrh.w	r3, [sp]
 80250a8:	4581      	cmp	r9, r0
 80250aa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80250ae:	f84c 3b04 	str.w	r3, [ip], #4
 80250b2:	ea4f 4a22 	mov.w	sl, r2, asr #16
 80250b6:	d2db      	bcs.n	8025070 <quorem+0x44>
 80250b8:	f855 300b 	ldr.w	r3, [r5, fp]
 80250bc:	b92b      	cbnz	r3, 80250ca <quorem+0x9e>
 80250be:	9b01      	ldr	r3, [sp, #4]
 80250c0:	3b04      	subs	r3, #4
 80250c2:	429d      	cmp	r5, r3
 80250c4:	461a      	mov	r2, r3
 80250c6:	d32e      	bcc.n	8025126 <quorem+0xfa>
 80250c8:	613c      	str	r4, [r7, #16]
 80250ca:	4638      	mov	r0, r7
 80250cc:	f001 fec2 	bl	8026e54 <__mcmp>
 80250d0:	2800      	cmp	r0, #0
 80250d2:	db24      	blt.n	802511e <quorem+0xf2>
 80250d4:	3601      	adds	r6, #1
 80250d6:	4628      	mov	r0, r5
 80250d8:	f04f 0c00 	mov.w	ip, #0
 80250dc:	f858 2b04 	ldr.w	r2, [r8], #4
 80250e0:	f8d0 e000 	ldr.w	lr, [r0]
 80250e4:	b293      	uxth	r3, r2
 80250e6:	ebac 0303 	sub.w	r3, ip, r3
 80250ea:	0c12      	lsrs	r2, r2, #16
 80250ec:	fa13 f38e 	uxtah	r3, r3, lr
 80250f0:	ebc2 421e 	rsb	r2, r2, lr, lsr #16
 80250f4:	eb02 4223 	add.w	r2, r2, r3, asr #16
 80250f8:	b29b      	uxth	r3, r3
 80250fa:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 80250fe:	45c1      	cmp	r9, r8
 8025100:	f840 3b04 	str.w	r3, [r0], #4
 8025104:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8025108:	d2e8      	bcs.n	80250dc <quorem+0xb0>
 802510a:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 802510e:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 8025112:	b922      	cbnz	r2, 802511e <quorem+0xf2>
 8025114:	3b04      	subs	r3, #4
 8025116:	429d      	cmp	r5, r3
 8025118:	461a      	mov	r2, r3
 802511a:	d30a      	bcc.n	8025132 <quorem+0x106>
 802511c:	613c      	str	r4, [r7, #16]
 802511e:	4630      	mov	r0, r6
 8025120:	b003      	add	sp, #12
 8025122:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025126:	6812      	ldr	r2, [r2, #0]
 8025128:	3b04      	subs	r3, #4
 802512a:	2a00      	cmp	r2, #0
 802512c:	d1cc      	bne.n	80250c8 <quorem+0x9c>
 802512e:	3c01      	subs	r4, #1
 8025130:	e7c7      	b.n	80250c2 <quorem+0x96>
 8025132:	6812      	ldr	r2, [r2, #0]
 8025134:	3b04      	subs	r3, #4
 8025136:	2a00      	cmp	r2, #0
 8025138:	d1f0      	bne.n	802511c <quorem+0xf0>
 802513a:	3c01      	subs	r4, #1
 802513c:	e7eb      	b.n	8025116 <quorem+0xea>
 802513e:	2000      	movs	r0, #0
 8025140:	e7ee      	b.n	8025120 <quorem+0xf4>
 8025142:	0000      	movs	r0, r0
 8025144:	0000      	movs	r0, r0
	...

08025148 <_dtoa_r>:
 8025148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802514c:	ed2d 8b04 	vpush	{d8-d9}
 8025150:	ec57 6b10 	vmov	r6, r7, d0
 8025154:	b093      	sub	sp, #76	; 0x4c
 8025156:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8025158:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 802515c:	9106      	str	r1, [sp, #24]
 802515e:	ee10 aa10 	vmov	sl, s0
 8025162:	4604      	mov	r4, r0
 8025164:	9209      	str	r2, [sp, #36]	; 0x24
 8025166:	930c      	str	r3, [sp, #48]	; 0x30
 8025168:	46bb      	mov	fp, r7
 802516a:	b975      	cbnz	r5, 802518a <_dtoa_r+0x42>
 802516c:	2010      	movs	r0, #16
 802516e:	f7fd fd95 	bl	8022c9c <malloc>
 8025172:	4602      	mov	r2, r0
 8025174:	6260      	str	r0, [r4, #36]	; 0x24
 8025176:	b920      	cbnz	r0, 8025182 <_dtoa_r+0x3a>
 8025178:	4ba7      	ldr	r3, [pc, #668]	; (8025418 <_dtoa_r+0x2d0>)
 802517a:	21ea      	movs	r1, #234	; 0xea
 802517c:	48a7      	ldr	r0, [pc, #668]	; (802541c <_dtoa_r+0x2d4>)
 802517e:	f7fd fd1f 	bl	8022bc0 <__assert_func>
 8025182:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8025186:	6005      	str	r5, [r0, #0]
 8025188:	60c5      	str	r5, [r0, #12]
 802518a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802518c:	6819      	ldr	r1, [r3, #0]
 802518e:	b151      	cbz	r1, 80251a6 <_dtoa_r+0x5e>
 8025190:	685a      	ldr	r2, [r3, #4]
 8025192:	604a      	str	r2, [r1, #4]
 8025194:	2301      	movs	r3, #1
 8025196:	4093      	lsls	r3, r2
 8025198:	608b      	str	r3, [r1, #8]
 802519a:	4620      	mov	r0, r4
 802519c:	f001 fbce 	bl	802693c <_Bfree>
 80251a0:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80251a2:	2200      	movs	r2, #0
 80251a4:	601a      	str	r2, [r3, #0]
 80251a6:	1e3b      	subs	r3, r7, #0
 80251a8:	bfaa      	itet	ge
 80251aa:	2300      	movge	r3, #0
 80251ac:	f023 4b00 	biclt.w	fp, r3, #2147483648	; 0x80000000
 80251b0:	f8c8 3000 	strge.w	r3, [r8]
 80251b4:	4b9a      	ldr	r3, [pc, #616]	; (8025420 <_dtoa_r+0x2d8>)
 80251b6:	bfbc      	itt	lt
 80251b8:	2201      	movlt	r2, #1
 80251ba:	f8c8 2000 	strlt.w	r2, [r8]
 80251be:	ea33 030b 	bics.w	r3, r3, fp
 80251c2:	d11b      	bne.n	80251fc <_dtoa_r+0xb4>
 80251c4:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80251c6:	f242 730f 	movw	r3, #9999	; 0x270f
 80251ca:	6013      	str	r3, [r2, #0]
 80251cc:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80251d0:	4333      	orrs	r3, r6
 80251d2:	f000 8592 	beq.w	8025cfa <_dtoa_r+0xbb2>
 80251d6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80251d8:	b963      	cbnz	r3, 80251f4 <_dtoa_r+0xac>
 80251da:	4b92      	ldr	r3, [pc, #584]	; (8025424 <_dtoa_r+0x2dc>)
 80251dc:	e022      	b.n	8025224 <_dtoa_r+0xdc>
 80251de:	4b92      	ldr	r3, [pc, #584]	; (8025428 <_dtoa_r+0x2e0>)
 80251e0:	9301      	str	r3, [sp, #4]
 80251e2:	3308      	adds	r3, #8
 80251e4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80251e6:	6013      	str	r3, [r2, #0]
 80251e8:	9801      	ldr	r0, [sp, #4]
 80251ea:	b013      	add	sp, #76	; 0x4c
 80251ec:	ecbd 8b04 	vpop	{d8-d9}
 80251f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80251f4:	4b8b      	ldr	r3, [pc, #556]	; (8025424 <_dtoa_r+0x2dc>)
 80251f6:	9301      	str	r3, [sp, #4]
 80251f8:	3303      	adds	r3, #3
 80251fa:	e7f3      	b.n	80251e4 <_dtoa_r+0x9c>
 80251fc:	2200      	movs	r2, #0
 80251fe:	2300      	movs	r3, #0
 8025200:	4650      	mov	r0, sl
 8025202:	4659      	mov	r1, fp
 8025204:	f7db fc70 	bl	8000ae8 <__aeabi_dcmpeq>
 8025208:	ec4b ab19 	vmov	d9, sl, fp
 802520c:	4680      	mov	r8, r0
 802520e:	b158      	cbz	r0, 8025228 <_dtoa_r+0xe0>
 8025210:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8025212:	2301      	movs	r3, #1
 8025214:	6013      	str	r3, [r2, #0]
 8025216:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025218:	2b00      	cmp	r3, #0
 802521a:	f000 856b 	beq.w	8025cf4 <_dtoa_r+0xbac>
 802521e:	4883      	ldr	r0, [pc, #524]	; (802542c <_dtoa_r+0x2e4>)
 8025220:	6018      	str	r0, [r3, #0]
 8025222:	1e43      	subs	r3, r0, #1
 8025224:	9301      	str	r3, [sp, #4]
 8025226:	e7df      	b.n	80251e8 <_dtoa_r+0xa0>
 8025228:	ec4b ab10 	vmov	d0, sl, fp
 802522c:	aa10      	add	r2, sp, #64	; 0x40
 802522e:	a911      	add	r1, sp, #68	; 0x44
 8025230:	4620      	mov	r0, r4
 8025232:	f001 ff31 	bl	8027098 <__d2b>
 8025236:	f3cb 550a 	ubfx	r5, fp, #20, #11
 802523a:	ee08 0a10 	vmov	s16, r0
 802523e:	2d00      	cmp	r5, #0
 8025240:	f000 8084 	beq.w	802534c <_dtoa_r+0x204>
 8025244:	ee19 3a90 	vmov	r3, s19
 8025248:	f3c3 0313 	ubfx	r3, r3, #0, #20
 802524c:	f043 577f 	orr.w	r7, r3, #1069547520	; 0x3fc00000
 8025250:	4656      	mov	r6, sl
 8025252:	f447 1740 	orr.w	r7, r7, #3145728	; 0x300000
 8025256:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 802525a:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 802525e:	4b74      	ldr	r3, [pc, #464]	; (8025430 <_dtoa_r+0x2e8>)
 8025260:	2200      	movs	r2, #0
 8025262:	4630      	mov	r0, r6
 8025264:	4639      	mov	r1, r7
 8025266:	f7db f81f 	bl	80002a8 <__aeabi_dsub>
 802526a:	a365      	add	r3, pc, #404	; (adr r3, 8025400 <_dtoa_r+0x2b8>)
 802526c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025270:	f7db f9d2 	bl	8000618 <__aeabi_dmul>
 8025274:	a364      	add	r3, pc, #400	; (adr r3, 8025408 <_dtoa_r+0x2c0>)
 8025276:	e9d3 2300 	ldrd	r2, r3, [r3]
 802527a:	f7db f817 	bl	80002ac <__adddf3>
 802527e:	4606      	mov	r6, r0
 8025280:	4628      	mov	r0, r5
 8025282:	460f      	mov	r7, r1
 8025284:	f7db f95e 	bl	8000544 <__aeabi_i2d>
 8025288:	a361      	add	r3, pc, #388	; (adr r3, 8025410 <_dtoa_r+0x2c8>)
 802528a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802528e:	f7db f9c3 	bl	8000618 <__aeabi_dmul>
 8025292:	4602      	mov	r2, r0
 8025294:	460b      	mov	r3, r1
 8025296:	4630      	mov	r0, r6
 8025298:	4639      	mov	r1, r7
 802529a:	f7db f807 	bl	80002ac <__adddf3>
 802529e:	4606      	mov	r6, r0
 80252a0:	460f      	mov	r7, r1
 80252a2:	f7db fc69 	bl	8000b78 <__aeabi_d2iz>
 80252a6:	2200      	movs	r2, #0
 80252a8:	9000      	str	r0, [sp, #0]
 80252aa:	2300      	movs	r3, #0
 80252ac:	4630      	mov	r0, r6
 80252ae:	4639      	mov	r1, r7
 80252b0:	f7db fc24 	bl	8000afc <__aeabi_dcmplt>
 80252b4:	b150      	cbz	r0, 80252cc <_dtoa_r+0x184>
 80252b6:	9800      	ldr	r0, [sp, #0]
 80252b8:	f7db f944 	bl	8000544 <__aeabi_i2d>
 80252bc:	4632      	mov	r2, r6
 80252be:	463b      	mov	r3, r7
 80252c0:	f7db fc12 	bl	8000ae8 <__aeabi_dcmpeq>
 80252c4:	b910      	cbnz	r0, 80252cc <_dtoa_r+0x184>
 80252c6:	9b00      	ldr	r3, [sp, #0]
 80252c8:	3b01      	subs	r3, #1
 80252ca:	9300      	str	r3, [sp, #0]
 80252cc:	9b00      	ldr	r3, [sp, #0]
 80252ce:	2b16      	cmp	r3, #22
 80252d0:	d85a      	bhi.n	8025388 <_dtoa_r+0x240>
 80252d2:	9a00      	ldr	r2, [sp, #0]
 80252d4:	4b57      	ldr	r3, [pc, #348]	; (8025434 <_dtoa_r+0x2ec>)
 80252d6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80252da:	e9d3 2300 	ldrd	r2, r3, [r3]
 80252de:	ec51 0b19 	vmov	r0, r1, d9
 80252e2:	f7db fc0b 	bl	8000afc <__aeabi_dcmplt>
 80252e6:	2800      	cmp	r0, #0
 80252e8:	d050      	beq.n	802538c <_dtoa_r+0x244>
 80252ea:	9b00      	ldr	r3, [sp, #0]
 80252ec:	3b01      	subs	r3, #1
 80252ee:	9300      	str	r3, [sp, #0]
 80252f0:	2300      	movs	r3, #0
 80252f2:	930b      	str	r3, [sp, #44]	; 0x2c
 80252f4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80252f6:	1b5d      	subs	r5, r3, r5
 80252f8:	1e6b      	subs	r3, r5, #1
 80252fa:	9305      	str	r3, [sp, #20]
 80252fc:	bf45      	ittet	mi
 80252fe:	f1c5 0301 	rsbmi	r3, r5, #1
 8025302:	9304      	strmi	r3, [sp, #16]
 8025304:	2300      	movpl	r3, #0
 8025306:	2300      	movmi	r3, #0
 8025308:	bf4c      	ite	mi
 802530a:	9305      	strmi	r3, [sp, #20]
 802530c:	9304      	strpl	r3, [sp, #16]
 802530e:	9b00      	ldr	r3, [sp, #0]
 8025310:	2b00      	cmp	r3, #0
 8025312:	db3d      	blt.n	8025390 <_dtoa_r+0x248>
 8025314:	9b05      	ldr	r3, [sp, #20]
 8025316:	9a00      	ldr	r2, [sp, #0]
 8025318:	920a      	str	r2, [sp, #40]	; 0x28
 802531a:	4413      	add	r3, r2
 802531c:	9305      	str	r3, [sp, #20]
 802531e:	2300      	movs	r3, #0
 8025320:	9307      	str	r3, [sp, #28]
 8025322:	9b06      	ldr	r3, [sp, #24]
 8025324:	2b09      	cmp	r3, #9
 8025326:	f200 8089 	bhi.w	802543c <_dtoa_r+0x2f4>
 802532a:	2b05      	cmp	r3, #5
 802532c:	bfc4      	itt	gt
 802532e:	3b04      	subgt	r3, #4
 8025330:	9306      	strgt	r3, [sp, #24]
 8025332:	9b06      	ldr	r3, [sp, #24]
 8025334:	f1a3 0302 	sub.w	r3, r3, #2
 8025338:	bfcc      	ite	gt
 802533a:	2500      	movgt	r5, #0
 802533c:	2501      	movle	r5, #1
 802533e:	2b03      	cmp	r3, #3
 8025340:	f200 8087 	bhi.w	8025452 <_dtoa_r+0x30a>
 8025344:	e8df f003 	tbb	[pc, r3]
 8025348:	59383a2d 	.word	0x59383a2d
 802534c:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 8025350:	441d      	add	r5, r3
 8025352:	f205 4332 	addw	r3, r5, #1074	; 0x432
 8025356:	2b20      	cmp	r3, #32
 8025358:	bfc1      	itttt	gt
 802535a:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 802535e:	f205 4012 	addwgt	r0, r5, #1042	; 0x412
 8025362:	fa0b f303 	lslgt.w	r3, fp, r3
 8025366:	fa26 f000 	lsrgt.w	r0, r6, r0
 802536a:	bfda      	itte	le
 802536c:	f1c3 0320 	rsble	r3, r3, #32
 8025370:	fa06 f003 	lslle.w	r0, r6, r3
 8025374:	4318      	orrgt	r0, r3
 8025376:	f7db f8d5 	bl	8000524 <__aeabi_ui2d>
 802537a:	2301      	movs	r3, #1
 802537c:	4606      	mov	r6, r0
 802537e:	f1a1 77f8 	sub.w	r7, r1, #32505856	; 0x1f00000
 8025382:	3d01      	subs	r5, #1
 8025384:	930e      	str	r3, [sp, #56]	; 0x38
 8025386:	e76a      	b.n	802525e <_dtoa_r+0x116>
 8025388:	2301      	movs	r3, #1
 802538a:	e7b2      	b.n	80252f2 <_dtoa_r+0x1aa>
 802538c:	900b      	str	r0, [sp, #44]	; 0x2c
 802538e:	e7b1      	b.n	80252f4 <_dtoa_r+0x1ac>
 8025390:	9b04      	ldr	r3, [sp, #16]
 8025392:	9a00      	ldr	r2, [sp, #0]
 8025394:	1a9b      	subs	r3, r3, r2
 8025396:	9304      	str	r3, [sp, #16]
 8025398:	4253      	negs	r3, r2
 802539a:	9307      	str	r3, [sp, #28]
 802539c:	2300      	movs	r3, #0
 802539e:	930a      	str	r3, [sp, #40]	; 0x28
 80253a0:	e7bf      	b.n	8025322 <_dtoa_r+0x1da>
 80253a2:	2300      	movs	r3, #0
 80253a4:	9308      	str	r3, [sp, #32]
 80253a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80253a8:	2b00      	cmp	r3, #0
 80253aa:	dc55      	bgt.n	8025458 <_dtoa_r+0x310>
 80253ac:	2301      	movs	r3, #1
 80253ae:	e9cd 3302 	strd	r3, r3, [sp, #8]
 80253b2:	461a      	mov	r2, r3
 80253b4:	9209      	str	r2, [sp, #36]	; 0x24
 80253b6:	e00c      	b.n	80253d2 <_dtoa_r+0x28a>
 80253b8:	2301      	movs	r3, #1
 80253ba:	e7f3      	b.n	80253a4 <_dtoa_r+0x25c>
 80253bc:	2300      	movs	r3, #0
 80253be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80253c0:	9308      	str	r3, [sp, #32]
 80253c2:	9b00      	ldr	r3, [sp, #0]
 80253c4:	4413      	add	r3, r2
 80253c6:	9302      	str	r3, [sp, #8]
 80253c8:	3301      	adds	r3, #1
 80253ca:	2b01      	cmp	r3, #1
 80253cc:	9303      	str	r3, [sp, #12]
 80253ce:	bfb8      	it	lt
 80253d0:	2301      	movlt	r3, #1
 80253d2:	6a60      	ldr	r0, [r4, #36]	; 0x24
 80253d4:	2200      	movs	r2, #0
 80253d6:	6042      	str	r2, [r0, #4]
 80253d8:	2204      	movs	r2, #4
 80253da:	f102 0614 	add.w	r6, r2, #20
 80253de:	429e      	cmp	r6, r3
 80253e0:	6841      	ldr	r1, [r0, #4]
 80253e2:	d93d      	bls.n	8025460 <_dtoa_r+0x318>
 80253e4:	4620      	mov	r0, r4
 80253e6:	f001 fa69 	bl	80268bc <_Balloc>
 80253ea:	9001      	str	r0, [sp, #4]
 80253ec:	2800      	cmp	r0, #0
 80253ee:	d13b      	bne.n	8025468 <_dtoa_r+0x320>
 80253f0:	4b11      	ldr	r3, [pc, #68]	; (8025438 <_dtoa_r+0x2f0>)
 80253f2:	4602      	mov	r2, r0
 80253f4:	f44f 71d5 	mov.w	r1, #426	; 0x1aa
 80253f8:	e6c0      	b.n	802517c <_dtoa_r+0x34>
 80253fa:	2301      	movs	r3, #1
 80253fc:	e7df      	b.n	80253be <_dtoa_r+0x276>
 80253fe:	bf00      	nop
 8025400:	636f4361 	.word	0x636f4361
 8025404:	3fd287a7 	.word	0x3fd287a7
 8025408:	8b60c8b3 	.word	0x8b60c8b3
 802540c:	3fc68a28 	.word	0x3fc68a28
 8025410:	509f79fb 	.word	0x509f79fb
 8025414:	3fd34413 	.word	0x3fd34413
 8025418:	0802afb6 	.word	0x0802afb6
 802541c:	0802afcd 	.word	0x0802afcd
 8025420:	7ff00000 	.word	0x7ff00000
 8025424:	0802afb2 	.word	0x0802afb2
 8025428:	0802afa9 	.word	0x0802afa9
 802542c:	080295f4 	.word	0x080295f4
 8025430:	3ff80000 	.word	0x3ff80000
 8025434:	0802b198 	.word	0x0802b198
 8025438:	0802b028 	.word	0x0802b028
 802543c:	2501      	movs	r5, #1
 802543e:	2300      	movs	r3, #0
 8025440:	9306      	str	r3, [sp, #24]
 8025442:	9508      	str	r5, [sp, #32]
 8025444:	f04f 33ff 	mov.w	r3, #4294967295
 8025448:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802544c:	2200      	movs	r2, #0
 802544e:	2312      	movs	r3, #18
 8025450:	e7b0      	b.n	80253b4 <_dtoa_r+0x26c>
 8025452:	2301      	movs	r3, #1
 8025454:	9308      	str	r3, [sp, #32]
 8025456:	e7f5      	b.n	8025444 <_dtoa_r+0x2fc>
 8025458:	9b09      	ldr	r3, [sp, #36]	; 0x24
 802545a:	e9cd 3302 	strd	r3, r3, [sp, #8]
 802545e:	e7b8      	b.n	80253d2 <_dtoa_r+0x28a>
 8025460:	3101      	adds	r1, #1
 8025462:	6041      	str	r1, [r0, #4]
 8025464:	0052      	lsls	r2, r2, #1
 8025466:	e7b8      	b.n	80253da <_dtoa_r+0x292>
 8025468:	6a63      	ldr	r3, [r4, #36]	; 0x24
 802546a:	9a01      	ldr	r2, [sp, #4]
 802546c:	601a      	str	r2, [r3, #0]
 802546e:	9b03      	ldr	r3, [sp, #12]
 8025470:	2b0e      	cmp	r3, #14
 8025472:	f200 809d 	bhi.w	80255b0 <_dtoa_r+0x468>
 8025476:	2d00      	cmp	r5, #0
 8025478:	f000 809a 	beq.w	80255b0 <_dtoa_r+0x468>
 802547c:	9b00      	ldr	r3, [sp, #0]
 802547e:	2b00      	cmp	r3, #0
 8025480:	dd32      	ble.n	80254e8 <_dtoa_r+0x3a0>
 8025482:	4ab7      	ldr	r2, [pc, #732]	; (8025760 <_dtoa_r+0x618>)
 8025484:	f003 030f 	and.w	r3, r3, #15
 8025488:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 802548c:	e9d3 8900 	ldrd	r8, r9, [r3]
 8025490:	9b00      	ldr	r3, [sp, #0]
 8025492:	05d8      	lsls	r0, r3, #23
 8025494:	ea4f 1723 	mov.w	r7, r3, asr #4
 8025498:	d516      	bpl.n	80254c8 <_dtoa_r+0x380>
 802549a:	4bb2      	ldr	r3, [pc, #712]	; (8025764 <_dtoa_r+0x61c>)
 802549c:	ec51 0b19 	vmov	r0, r1, d9
 80254a0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 80254a4:	f7db f9e2 	bl	800086c <__aeabi_ddiv>
 80254a8:	f007 070f 	and.w	r7, r7, #15
 80254ac:	4682      	mov	sl, r0
 80254ae:	468b      	mov	fp, r1
 80254b0:	2503      	movs	r5, #3
 80254b2:	4eac      	ldr	r6, [pc, #688]	; (8025764 <_dtoa_r+0x61c>)
 80254b4:	b957      	cbnz	r7, 80254cc <_dtoa_r+0x384>
 80254b6:	4642      	mov	r2, r8
 80254b8:	464b      	mov	r3, r9
 80254ba:	4650      	mov	r0, sl
 80254bc:	4659      	mov	r1, fp
 80254be:	f7db f9d5 	bl	800086c <__aeabi_ddiv>
 80254c2:	4682      	mov	sl, r0
 80254c4:	468b      	mov	fp, r1
 80254c6:	e028      	b.n	802551a <_dtoa_r+0x3d2>
 80254c8:	2502      	movs	r5, #2
 80254ca:	e7f2      	b.n	80254b2 <_dtoa_r+0x36a>
 80254cc:	07f9      	lsls	r1, r7, #31
 80254ce:	d508      	bpl.n	80254e2 <_dtoa_r+0x39a>
 80254d0:	4640      	mov	r0, r8
 80254d2:	4649      	mov	r1, r9
 80254d4:	e9d6 2300 	ldrd	r2, r3, [r6]
 80254d8:	f7db f89e 	bl	8000618 <__aeabi_dmul>
 80254dc:	3501      	adds	r5, #1
 80254de:	4680      	mov	r8, r0
 80254e0:	4689      	mov	r9, r1
 80254e2:	107f      	asrs	r7, r7, #1
 80254e4:	3608      	adds	r6, #8
 80254e6:	e7e5      	b.n	80254b4 <_dtoa_r+0x36c>
 80254e8:	f000 809b 	beq.w	8025622 <_dtoa_r+0x4da>
 80254ec:	9b00      	ldr	r3, [sp, #0]
 80254ee:	4f9d      	ldr	r7, [pc, #628]	; (8025764 <_dtoa_r+0x61c>)
 80254f0:	425e      	negs	r6, r3
 80254f2:	4b9b      	ldr	r3, [pc, #620]	; (8025760 <_dtoa_r+0x618>)
 80254f4:	f006 020f 	and.w	r2, r6, #15
 80254f8:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80254fc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025500:	ec51 0b19 	vmov	r0, r1, d9
 8025504:	f7db f888 	bl	8000618 <__aeabi_dmul>
 8025508:	1136      	asrs	r6, r6, #4
 802550a:	4682      	mov	sl, r0
 802550c:	468b      	mov	fp, r1
 802550e:	2300      	movs	r3, #0
 8025510:	2502      	movs	r5, #2
 8025512:	2e00      	cmp	r6, #0
 8025514:	d17a      	bne.n	802560c <_dtoa_r+0x4c4>
 8025516:	2b00      	cmp	r3, #0
 8025518:	d1d3      	bne.n	80254c2 <_dtoa_r+0x37a>
 802551a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 802551c:	2b00      	cmp	r3, #0
 802551e:	f000 8082 	beq.w	8025626 <_dtoa_r+0x4de>
 8025522:	4b91      	ldr	r3, [pc, #580]	; (8025768 <_dtoa_r+0x620>)
 8025524:	2200      	movs	r2, #0
 8025526:	4650      	mov	r0, sl
 8025528:	4659      	mov	r1, fp
 802552a:	f7db fae7 	bl	8000afc <__aeabi_dcmplt>
 802552e:	2800      	cmp	r0, #0
 8025530:	d079      	beq.n	8025626 <_dtoa_r+0x4de>
 8025532:	9b03      	ldr	r3, [sp, #12]
 8025534:	2b00      	cmp	r3, #0
 8025536:	d076      	beq.n	8025626 <_dtoa_r+0x4de>
 8025538:	9b02      	ldr	r3, [sp, #8]
 802553a:	2b00      	cmp	r3, #0
 802553c:	dd36      	ble.n	80255ac <_dtoa_r+0x464>
 802553e:	9b00      	ldr	r3, [sp, #0]
 8025540:	4650      	mov	r0, sl
 8025542:	4659      	mov	r1, fp
 8025544:	1e5f      	subs	r7, r3, #1
 8025546:	2200      	movs	r2, #0
 8025548:	4b88      	ldr	r3, [pc, #544]	; (802576c <_dtoa_r+0x624>)
 802554a:	f7db f865 	bl	8000618 <__aeabi_dmul>
 802554e:	9e02      	ldr	r6, [sp, #8]
 8025550:	4682      	mov	sl, r0
 8025552:	468b      	mov	fp, r1
 8025554:	3501      	adds	r5, #1
 8025556:	4628      	mov	r0, r5
 8025558:	f7da fff4 	bl	8000544 <__aeabi_i2d>
 802555c:	4652      	mov	r2, sl
 802555e:	465b      	mov	r3, fp
 8025560:	f7db f85a 	bl	8000618 <__aeabi_dmul>
 8025564:	4b82      	ldr	r3, [pc, #520]	; (8025770 <_dtoa_r+0x628>)
 8025566:	2200      	movs	r2, #0
 8025568:	f7da fea0 	bl	80002ac <__adddf3>
 802556c:	46d0      	mov	r8, sl
 802556e:	46d9      	mov	r9, fp
 8025570:	4682      	mov	sl, r0
 8025572:	f1a1 7b50 	sub.w	fp, r1, #54525952	; 0x3400000
 8025576:	2e00      	cmp	r6, #0
 8025578:	d158      	bne.n	802562c <_dtoa_r+0x4e4>
 802557a:	4b7e      	ldr	r3, [pc, #504]	; (8025774 <_dtoa_r+0x62c>)
 802557c:	2200      	movs	r2, #0
 802557e:	4640      	mov	r0, r8
 8025580:	4649      	mov	r1, r9
 8025582:	f7da fe91 	bl	80002a8 <__aeabi_dsub>
 8025586:	4652      	mov	r2, sl
 8025588:	465b      	mov	r3, fp
 802558a:	4680      	mov	r8, r0
 802558c:	4689      	mov	r9, r1
 802558e:	f7db fad3 	bl	8000b38 <__aeabi_dcmpgt>
 8025592:	2800      	cmp	r0, #0
 8025594:	f040 8295 	bne.w	8025ac2 <_dtoa_r+0x97a>
 8025598:	4652      	mov	r2, sl
 802559a:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 802559e:	4640      	mov	r0, r8
 80255a0:	4649      	mov	r1, r9
 80255a2:	f7db faab 	bl	8000afc <__aeabi_dcmplt>
 80255a6:	2800      	cmp	r0, #0
 80255a8:	f040 8289 	bne.w	8025abe <_dtoa_r+0x976>
 80255ac:	ec5b ab19 	vmov	sl, fp, d9
 80255b0:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80255b2:	2b00      	cmp	r3, #0
 80255b4:	f2c0 8148 	blt.w	8025848 <_dtoa_r+0x700>
 80255b8:	9a00      	ldr	r2, [sp, #0]
 80255ba:	2a0e      	cmp	r2, #14
 80255bc:	f300 8144 	bgt.w	8025848 <_dtoa_r+0x700>
 80255c0:	4b67      	ldr	r3, [pc, #412]	; (8025760 <_dtoa_r+0x618>)
 80255c2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80255c6:	e9d3 8900 	ldrd	r8, r9, [r3]
 80255ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80255cc:	2b00      	cmp	r3, #0
 80255ce:	f280 80d5 	bge.w	802577c <_dtoa_r+0x634>
 80255d2:	9b03      	ldr	r3, [sp, #12]
 80255d4:	2b00      	cmp	r3, #0
 80255d6:	f300 80d1 	bgt.w	802577c <_dtoa_r+0x634>
 80255da:	f040 826f 	bne.w	8025abc <_dtoa_r+0x974>
 80255de:	4b65      	ldr	r3, [pc, #404]	; (8025774 <_dtoa_r+0x62c>)
 80255e0:	2200      	movs	r2, #0
 80255e2:	4640      	mov	r0, r8
 80255e4:	4649      	mov	r1, r9
 80255e6:	f7db f817 	bl	8000618 <__aeabi_dmul>
 80255ea:	4652      	mov	r2, sl
 80255ec:	465b      	mov	r3, fp
 80255ee:	f7db fa99 	bl	8000b24 <__aeabi_dcmpge>
 80255f2:	9e03      	ldr	r6, [sp, #12]
 80255f4:	4637      	mov	r7, r6
 80255f6:	2800      	cmp	r0, #0
 80255f8:	f040 8245 	bne.w	8025a86 <_dtoa_r+0x93e>
 80255fc:	9d01      	ldr	r5, [sp, #4]
 80255fe:	2331      	movs	r3, #49	; 0x31
 8025600:	f805 3b01 	strb.w	r3, [r5], #1
 8025604:	9b00      	ldr	r3, [sp, #0]
 8025606:	3301      	adds	r3, #1
 8025608:	9300      	str	r3, [sp, #0]
 802560a:	e240      	b.n	8025a8e <_dtoa_r+0x946>
 802560c:	07f2      	lsls	r2, r6, #31
 802560e:	d505      	bpl.n	802561c <_dtoa_r+0x4d4>
 8025610:	e9d7 2300 	ldrd	r2, r3, [r7]
 8025614:	f7db f800 	bl	8000618 <__aeabi_dmul>
 8025618:	3501      	adds	r5, #1
 802561a:	2301      	movs	r3, #1
 802561c:	1076      	asrs	r6, r6, #1
 802561e:	3708      	adds	r7, #8
 8025620:	e777      	b.n	8025512 <_dtoa_r+0x3ca>
 8025622:	2502      	movs	r5, #2
 8025624:	e779      	b.n	802551a <_dtoa_r+0x3d2>
 8025626:	9f00      	ldr	r7, [sp, #0]
 8025628:	9e03      	ldr	r6, [sp, #12]
 802562a:	e794      	b.n	8025556 <_dtoa_r+0x40e>
 802562c:	9901      	ldr	r1, [sp, #4]
 802562e:	4b4c      	ldr	r3, [pc, #304]	; (8025760 <_dtoa_r+0x618>)
 8025630:	4431      	add	r1, r6
 8025632:	910d      	str	r1, [sp, #52]	; 0x34
 8025634:	9908      	ldr	r1, [sp, #32]
 8025636:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 802563a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 802563e:	2900      	cmp	r1, #0
 8025640:	d043      	beq.n	80256ca <_dtoa_r+0x582>
 8025642:	494d      	ldr	r1, [pc, #308]	; (8025778 <_dtoa_r+0x630>)
 8025644:	2000      	movs	r0, #0
 8025646:	f7db f911 	bl	800086c <__aeabi_ddiv>
 802564a:	4652      	mov	r2, sl
 802564c:	465b      	mov	r3, fp
 802564e:	f7da fe2b 	bl	80002a8 <__aeabi_dsub>
 8025652:	9d01      	ldr	r5, [sp, #4]
 8025654:	4682      	mov	sl, r0
 8025656:	468b      	mov	fp, r1
 8025658:	4649      	mov	r1, r9
 802565a:	4640      	mov	r0, r8
 802565c:	f7db fa8c 	bl	8000b78 <__aeabi_d2iz>
 8025660:	4606      	mov	r6, r0
 8025662:	f7da ff6f 	bl	8000544 <__aeabi_i2d>
 8025666:	4602      	mov	r2, r0
 8025668:	460b      	mov	r3, r1
 802566a:	4640      	mov	r0, r8
 802566c:	4649      	mov	r1, r9
 802566e:	f7da fe1b 	bl	80002a8 <__aeabi_dsub>
 8025672:	3630      	adds	r6, #48	; 0x30
 8025674:	f805 6b01 	strb.w	r6, [r5], #1
 8025678:	4652      	mov	r2, sl
 802567a:	465b      	mov	r3, fp
 802567c:	4680      	mov	r8, r0
 802567e:	4689      	mov	r9, r1
 8025680:	f7db fa3c 	bl	8000afc <__aeabi_dcmplt>
 8025684:	2800      	cmp	r0, #0
 8025686:	d163      	bne.n	8025750 <_dtoa_r+0x608>
 8025688:	4642      	mov	r2, r8
 802568a:	464b      	mov	r3, r9
 802568c:	4936      	ldr	r1, [pc, #216]	; (8025768 <_dtoa_r+0x620>)
 802568e:	2000      	movs	r0, #0
 8025690:	f7da fe0a 	bl	80002a8 <__aeabi_dsub>
 8025694:	4652      	mov	r2, sl
 8025696:	465b      	mov	r3, fp
 8025698:	f7db fa30 	bl	8000afc <__aeabi_dcmplt>
 802569c:	2800      	cmp	r0, #0
 802569e:	f040 80b5 	bne.w	802580c <_dtoa_r+0x6c4>
 80256a2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80256a4:	429d      	cmp	r5, r3
 80256a6:	d081      	beq.n	80255ac <_dtoa_r+0x464>
 80256a8:	4b30      	ldr	r3, [pc, #192]	; (802576c <_dtoa_r+0x624>)
 80256aa:	2200      	movs	r2, #0
 80256ac:	4650      	mov	r0, sl
 80256ae:	4659      	mov	r1, fp
 80256b0:	f7da ffb2 	bl	8000618 <__aeabi_dmul>
 80256b4:	4b2d      	ldr	r3, [pc, #180]	; (802576c <_dtoa_r+0x624>)
 80256b6:	4682      	mov	sl, r0
 80256b8:	468b      	mov	fp, r1
 80256ba:	4640      	mov	r0, r8
 80256bc:	4649      	mov	r1, r9
 80256be:	2200      	movs	r2, #0
 80256c0:	f7da ffaa 	bl	8000618 <__aeabi_dmul>
 80256c4:	4680      	mov	r8, r0
 80256c6:	4689      	mov	r9, r1
 80256c8:	e7c6      	b.n	8025658 <_dtoa_r+0x510>
 80256ca:	4650      	mov	r0, sl
 80256cc:	4659      	mov	r1, fp
 80256ce:	f7da ffa3 	bl	8000618 <__aeabi_dmul>
 80256d2:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80256d4:	9d01      	ldr	r5, [sp, #4]
 80256d6:	930f      	str	r3, [sp, #60]	; 0x3c
 80256d8:	4682      	mov	sl, r0
 80256da:	468b      	mov	fp, r1
 80256dc:	4649      	mov	r1, r9
 80256de:	4640      	mov	r0, r8
 80256e0:	f7db fa4a 	bl	8000b78 <__aeabi_d2iz>
 80256e4:	4606      	mov	r6, r0
 80256e6:	f7da ff2d 	bl	8000544 <__aeabi_i2d>
 80256ea:	3630      	adds	r6, #48	; 0x30
 80256ec:	4602      	mov	r2, r0
 80256ee:	460b      	mov	r3, r1
 80256f0:	4640      	mov	r0, r8
 80256f2:	4649      	mov	r1, r9
 80256f4:	f7da fdd8 	bl	80002a8 <__aeabi_dsub>
 80256f8:	f805 6b01 	strb.w	r6, [r5], #1
 80256fc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80256fe:	429d      	cmp	r5, r3
 8025700:	4680      	mov	r8, r0
 8025702:	4689      	mov	r9, r1
 8025704:	f04f 0200 	mov.w	r2, #0
 8025708:	d124      	bne.n	8025754 <_dtoa_r+0x60c>
 802570a:	4b1b      	ldr	r3, [pc, #108]	; (8025778 <_dtoa_r+0x630>)
 802570c:	4650      	mov	r0, sl
 802570e:	4659      	mov	r1, fp
 8025710:	f7da fdcc 	bl	80002ac <__adddf3>
 8025714:	4602      	mov	r2, r0
 8025716:	460b      	mov	r3, r1
 8025718:	4640      	mov	r0, r8
 802571a:	4649      	mov	r1, r9
 802571c:	f7db fa0c 	bl	8000b38 <__aeabi_dcmpgt>
 8025720:	2800      	cmp	r0, #0
 8025722:	d173      	bne.n	802580c <_dtoa_r+0x6c4>
 8025724:	4652      	mov	r2, sl
 8025726:	465b      	mov	r3, fp
 8025728:	4913      	ldr	r1, [pc, #76]	; (8025778 <_dtoa_r+0x630>)
 802572a:	2000      	movs	r0, #0
 802572c:	f7da fdbc 	bl	80002a8 <__aeabi_dsub>
 8025730:	4602      	mov	r2, r0
 8025732:	460b      	mov	r3, r1
 8025734:	4640      	mov	r0, r8
 8025736:	4649      	mov	r1, r9
 8025738:	f7db f9e0 	bl	8000afc <__aeabi_dcmplt>
 802573c:	2800      	cmp	r0, #0
 802573e:	f43f af35 	beq.w	80255ac <_dtoa_r+0x464>
 8025742:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8025744:	1e6b      	subs	r3, r5, #1
 8025746:	930f      	str	r3, [sp, #60]	; 0x3c
 8025748:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 802574c:	2b30      	cmp	r3, #48	; 0x30
 802574e:	d0f8      	beq.n	8025742 <_dtoa_r+0x5fa>
 8025750:	9700      	str	r7, [sp, #0]
 8025752:	e049      	b.n	80257e8 <_dtoa_r+0x6a0>
 8025754:	4b05      	ldr	r3, [pc, #20]	; (802576c <_dtoa_r+0x624>)
 8025756:	f7da ff5f 	bl	8000618 <__aeabi_dmul>
 802575a:	4680      	mov	r8, r0
 802575c:	4689      	mov	r9, r1
 802575e:	e7bd      	b.n	80256dc <_dtoa_r+0x594>
 8025760:	0802b198 	.word	0x0802b198
 8025764:	0802b170 	.word	0x0802b170
 8025768:	3ff00000 	.word	0x3ff00000
 802576c:	40240000 	.word	0x40240000
 8025770:	401c0000 	.word	0x401c0000
 8025774:	40140000 	.word	0x40140000
 8025778:	3fe00000 	.word	0x3fe00000
 802577c:	9d01      	ldr	r5, [sp, #4]
 802577e:	4656      	mov	r6, sl
 8025780:	465f      	mov	r7, fp
 8025782:	4642      	mov	r2, r8
 8025784:	464b      	mov	r3, r9
 8025786:	4630      	mov	r0, r6
 8025788:	4639      	mov	r1, r7
 802578a:	f7db f86f 	bl	800086c <__aeabi_ddiv>
 802578e:	f7db f9f3 	bl	8000b78 <__aeabi_d2iz>
 8025792:	4682      	mov	sl, r0
 8025794:	f7da fed6 	bl	8000544 <__aeabi_i2d>
 8025798:	4642      	mov	r2, r8
 802579a:	464b      	mov	r3, r9
 802579c:	f7da ff3c 	bl	8000618 <__aeabi_dmul>
 80257a0:	4602      	mov	r2, r0
 80257a2:	460b      	mov	r3, r1
 80257a4:	4630      	mov	r0, r6
 80257a6:	4639      	mov	r1, r7
 80257a8:	f10a 0630 	add.w	r6, sl, #48	; 0x30
 80257ac:	f7da fd7c 	bl	80002a8 <__aeabi_dsub>
 80257b0:	f805 6b01 	strb.w	r6, [r5], #1
 80257b4:	9e01      	ldr	r6, [sp, #4]
 80257b6:	9f03      	ldr	r7, [sp, #12]
 80257b8:	1bae      	subs	r6, r5, r6
 80257ba:	42b7      	cmp	r7, r6
 80257bc:	4602      	mov	r2, r0
 80257be:	460b      	mov	r3, r1
 80257c0:	d135      	bne.n	802582e <_dtoa_r+0x6e6>
 80257c2:	f7da fd73 	bl	80002ac <__adddf3>
 80257c6:	4642      	mov	r2, r8
 80257c8:	464b      	mov	r3, r9
 80257ca:	4606      	mov	r6, r0
 80257cc:	460f      	mov	r7, r1
 80257ce:	f7db f9b3 	bl	8000b38 <__aeabi_dcmpgt>
 80257d2:	b9d0      	cbnz	r0, 802580a <_dtoa_r+0x6c2>
 80257d4:	4642      	mov	r2, r8
 80257d6:	464b      	mov	r3, r9
 80257d8:	4630      	mov	r0, r6
 80257da:	4639      	mov	r1, r7
 80257dc:	f7db f984 	bl	8000ae8 <__aeabi_dcmpeq>
 80257e0:	b110      	cbz	r0, 80257e8 <_dtoa_r+0x6a0>
 80257e2:	f01a 0f01 	tst.w	sl, #1
 80257e6:	d110      	bne.n	802580a <_dtoa_r+0x6c2>
 80257e8:	4620      	mov	r0, r4
 80257ea:	ee18 1a10 	vmov	r1, s16
 80257ee:	f001 f8a5 	bl	802693c <_Bfree>
 80257f2:	2300      	movs	r3, #0
 80257f4:	9800      	ldr	r0, [sp, #0]
 80257f6:	702b      	strb	r3, [r5, #0]
 80257f8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80257fa:	3001      	adds	r0, #1
 80257fc:	6018      	str	r0, [r3, #0]
 80257fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025800:	2b00      	cmp	r3, #0
 8025802:	f43f acf1 	beq.w	80251e8 <_dtoa_r+0xa0>
 8025806:	601d      	str	r5, [r3, #0]
 8025808:	e4ee      	b.n	80251e8 <_dtoa_r+0xa0>
 802580a:	9f00      	ldr	r7, [sp, #0]
 802580c:	462b      	mov	r3, r5
 802580e:	461d      	mov	r5, r3
 8025810:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8025814:	2a39      	cmp	r2, #57	; 0x39
 8025816:	d106      	bne.n	8025826 <_dtoa_r+0x6de>
 8025818:	9a01      	ldr	r2, [sp, #4]
 802581a:	429a      	cmp	r2, r3
 802581c:	d1f7      	bne.n	802580e <_dtoa_r+0x6c6>
 802581e:	9901      	ldr	r1, [sp, #4]
 8025820:	2230      	movs	r2, #48	; 0x30
 8025822:	3701      	adds	r7, #1
 8025824:	700a      	strb	r2, [r1, #0]
 8025826:	781a      	ldrb	r2, [r3, #0]
 8025828:	3201      	adds	r2, #1
 802582a:	701a      	strb	r2, [r3, #0]
 802582c:	e790      	b.n	8025750 <_dtoa_r+0x608>
 802582e:	4ba6      	ldr	r3, [pc, #664]	; (8025ac8 <_dtoa_r+0x980>)
 8025830:	2200      	movs	r2, #0
 8025832:	f7da fef1 	bl	8000618 <__aeabi_dmul>
 8025836:	2200      	movs	r2, #0
 8025838:	2300      	movs	r3, #0
 802583a:	4606      	mov	r6, r0
 802583c:	460f      	mov	r7, r1
 802583e:	f7db f953 	bl	8000ae8 <__aeabi_dcmpeq>
 8025842:	2800      	cmp	r0, #0
 8025844:	d09d      	beq.n	8025782 <_dtoa_r+0x63a>
 8025846:	e7cf      	b.n	80257e8 <_dtoa_r+0x6a0>
 8025848:	9a08      	ldr	r2, [sp, #32]
 802584a:	2a00      	cmp	r2, #0
 802584c:	f000 80d7 	beq.w	80259fe <_dtoa_r+0x8b6>
 8025850:	9a06      	ldr	r2, [sp, #24]
 8025852:	2a01      	cmp	r2, #1
 8025854:	f300 80ba 	bgt.w	80259cc <_dtoa_r+0x884>
 8025858:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 802585a:	2a00      	cmp	r2, #0
 802585c:	f000 80b2 	beq.w	80259c4 <_dtoa_r+0x87c>
 8025860:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8025864:	9e07      	ldr	r6, [sp, #28]
 8025866:	9d04      	ldr	r5, [sp, #16]
 8025868:	9a04      	ldr	r2, [sp, #16]
 802586a:	441a      	add	r2, r3
 802586c:	9204      	str	r2, [sp, #16]
 802586e:	9a05      	ldr	r2, [sp, #20]
 8025870:	2101      	movs	r1, #1
 8025872:	441a      	add	r2, r3
 8025874:	4620      	mov	r0, r4
 8025876:	9205      	str	r2, [sp, #20]
 8025878:	f001 f962 	bl	8026b40 <__i2b>
 802587c:	4607      	mov	r7, r0
 802587e:	2d00      	cmp	r5, #0
 8025880:	dd0c      	ble.n	802589c <_dtoa_r+0x754>
 8025882:	9b05      	ldr	r3, [sp, #20]
 8025884:	2b00      	cmp	r3, #0
 8025886:	dd09      	ble.n	802589c <_dtoa_r+0x754>
 8025888:	42ab      	cmp	r3, r5
 802588a:	9a04      	ldr	r2, [sp, #16]
 802588c:	bfa8      	it	ge
 802588e:	462b      	movge	r3, r5
 8025890:	1ad2      	subs	r2, r2, r3
 8025892:	9204      	str	r2, [sp, #16]
 8025894:	9a05      	ldr	r2, [sp, #20]
 8025896:	1aed      	subs	r5, r5, r3
 8025898:	1ad3      	subs	r3, r2, r3
 802589a:	9305      	str	r3, [sp, #20]
 802589c:	9b07      	ldr	r3, [sp, #28]
 802589e:	b31b      	cbz	r3, 80258e8 <_dtoa_r+0x7a0>
 80258a0:	9b08      	ldr	r3, [sp, #32]
 80258a2:	2b00      	cmp	r3, #0
 80258a4:	f000 80af 	beq.w	8025a06 <_dtoa_r+0x8be>
 80258a8:	2e00      	cmp	r6, #0
 80258aa:	dd13      	ble.n	80258d4 <_dtoa_r+0x78c>
 80258ac:	4639      	mov	r1, r7
 80258ae:	4632      	mov	r2, r6
 80258b0:	4620      	mov	r0, r4
 80258b2:	f001 fa05 	bl	8026cc0 <__pow5mult>
 80258b6:	ee18 2a10 	vmov	r2, s16
 80258ba:	4601      	mov	r1, r0
 80258bc:	4607      	mov	r7, r0
 80258be:	4620      	mov	r0, r4
 80258c0:	f001 f954 	bl	8026b6c <__multiply>
 80258c4:	ee18 1a10 	vmov	r1, s16
 80258c8:	4680      	mov	r8, r0
 80258ca:	4620      	mov	r0, r4
 80258cc:	f001 f836 	bl	802693c <_Bfree>
 80258d0:	ee08 8a10 	vmov	s16, r8
 80258d4:	9b07      	ldr	r3, [sp, #28]
 80258d6:	1b9a      	subs	r2, r3, r6
 80258d8:	d006      	beq.n	80258e8 <_dtoa_r+0x7a0>
 80258da:	ee18 1a10 	vmov	r1, s16
 80258de:	4620      	mov	r0, r4
 80258e0:	f001 f9ee 	bl	8026cc0 <__pow5mult>
 80258e4:	ee08 0a10 	vmov	s16, r0
 80258e8:	2101      	movs	r1, #1
 80258ea:	4620      	mov	r0, r4
 80258ec:	f001 f928 	bl	8026b40 <__i2b>
 80258f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80258f2:	2b00      	cmp	r3, #0
 80258f4:	4606      	mov	r6, r0
 80258f6:	f340 8088 	ble.w	8025a0a <_dtoa_r+0x8c2>
 80258fa:	461a      	mov	r2, r3
 80258fc:	4601      	mov	r1, r0
 80258fe:	4620      	mov	r0, r4
 8025900:	f001 f9de 	bl	8026cc0 <__pow5mult>
 8025904:	9b06      	ldr	r3, [sp, #24]
 8025906:	2b01      	cmp	r3, #1
 8025908:	4606      	mov	r6, r0
 802590a:	f340 8081 	ble.w	8025a10 <_dtoa_r+0x8c8>
 802590e:	f04f 0800 	mov.w	r8, #0
 8025912:	6933      	ldr	r3, [r6, #16]
 8025914:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 8025918:	6918      	ldr	r0, [r3, #16]
 802591a:	f001 f8c1 	bl	8026aa0 <__hi0bits>
 802591e:	f1c0 0020 	rsb	r0, r0, #32
 8025922:	9b05      	ldr	r3, [sp, #20]
 8025924:	4418      	add	r0, r3
 8025926:	f010 001f 	ands.w	r0, r0, #31
 802592a:	f000 8092 	beq.w	8025a52 <_dtoa_r+0x90a>
 802592e:	f1c0 0320 	rsb	r3, r0, #32
 8025932:	2b04      	cmp	r3, #4
 8025934:	f340 808a 	ble.w	8025a4c <_dtoa_r+0x904>
 8025938:	f1c0 001c 	rsb	r0, r0, #28
 802593c:	9b04      	ldr	r3, [sp, #16]
 802593e:	4403      	add	r3, r0
 8025940:	9304      	str	r3, [sp, #16]
 8025942:	9b05      	ldr	r3, [sp, #20]
 8025944:	4403      	add	r3, r0
 8025946:	4405      	add	r5, r0
 8025948:	9305      	str	r3, [sp, #20]
 802594a:	9b04      	ldr	r3, [sp, #16]
 802594c:	2b00      	cmp	r3, #0
 802594e:	dd07      	ble.n	8025960 <_dtoa_r+0x818>
 8025950:	ee18 1a10 	vmov	r1, s16
 8025954:	461a      	mov	r2, r3
 8025956:	4620      	mov	r0, r4
 8025958:	f001 fa0c 	bl	8026d74 <__lshift>
 802595c:	ee08 0a10 	vmov	s16, r0
 8025960:	9b05      	ldr	r3, [sp, #20]
 8025962:	2b00      	cmp	r3, #0
 8025964:	dd05      	ble.n	8025972 <_dtoa_r+0x82a>
 8025966:	4631      	mov	r1, r6
 8025968:	461a      	mov	r2, r3
 802596a:	4620      	mov	r0, r4
 802596c:	f001 fa02 	bl	8026d74 <__lshift>
 8025970:	4606      	mov	r6, r0
 8025972:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8025974:	2b00      	cmp	r3, #0
 8025976:	d06e      	beq.n	8025a56 <_dtoa_r+0x90e>
 8025978:	ee18 0a10 	vmov	r0, s16
 802597c:	4631      	mov	r1, r6
 802597e:	f001 fa69 	bl	8026e54 <__mcmp>
 8025982:	2800      	cmp	r0, #0
 8025984:	da67      	bge.n	8025a56 <_dtoa_r+0x90e>
 8025986:	9b00      	ldr	r3, [sp, #0]
 8025988:	3b01      	subs	r3, #1
 802598a:	ee18 1a10 	vmov	r1, s16
 802598e:	9300      	str	r3, [sp, #0]
 8025990:	220a      	movs	r2, #10
 8025992:	2300      	movs	r3, #0
 8025994:	4620      	mov	r0, r4
 8025996:	f000 fff3 	bl	8026980 <__multadd>
 802599a:	9b08      	ldr	r3, [sp, #32]
 802599c:	ee08 0a10 	vmov	s16, r0
 80259a0:	2b00      	cmp	r3, #0
 80259a2:	f000 81b1 	beq.w	8025d08 <_dtoa_r+0xbc0>
 80259a6:	2300      	movs	r3, #0
 80259a8:	4639      	mov	r1, r7
 80259aa:	220a      	movs	r2, #10
 80259ac:	4620      	mov	r0, r4
 80259ae:	f000 ffe7 	bl	8026980 <__multadd>
 80259b2:	9b02      	ldr	r3, [sp, #8]
 80259b4:	2b00      	cmp	r3, #0
 80259b6:	4607      	mov	r7, r0
 80259b8:	f300 808e 	bgt.w	8025ad8 <_dtoa_r+0x990>
 80259bc:	9b06      	ldr	r3, [sp, #24]
 80259be:	2b02      	cmp	r3, #2
 80259c0:	dc51      	bgt.n	8025a66 <_dtoa_r+0x91e>
 80259c2:	e089      	b.n	8025ad8 <_dtoa_r+0x990>
 80259c4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80259c6:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 80259ca:	e74b      	b.n	8025864 <_dtoa_r+0x71c>
 80259cc:	9b03      	ldr	r3, [sp, #12]
 80259ce:	1e5e      	subs	r6, r3, #1
 80259d0:	9b07      	ldr	r3, [sp, #28]
 80259d2:	42b3      	cmp	r3, r6
 80259d4:	bfbf      	itttt	lt
 80259d6:	9b07      	ldrlt	r3, [sp, #28]
 80259d8:	9607      	strlt	r6, [sp, #28]
 80259da:	1af2      	sublt	r2, r6, r3
 80259dc:	9b0a      	ldrlt	r3, [sp, #40]	; 0x28
 80259de:	bfb6      	itet	lt
 80259e0:	189b      	addlt	r3, r3, r2
 80259e2:	1b9e      	subge	r6, r3, r6
 80259e4:	930a      	strlt	r3, [sp, #40]	; 0x28
 80259e6:	9b03      	ldr	r3, [sp, #12]
 80259e8:	bfb8      	it	lt
 80259ea:	2600      	movlt	r6, #0
 80259ec:	2b00      	cmp	r3, #0
 80259ee:	bfb7      	itett	lt
 80259f0:	e9dd 2303 	ldrdlt	r2, r3, [sp, #12]
 80259f4:	e9dd 3503 	ldrdge	r3, r5, [sp, #12]
 80259f8:	1a9d      	sublt	r5, r3, r2
 80259fa:	2300      	movlt	r3, #0
 80259fc:	e734      	b.n	8025868 <_dtoa_r+0x720>
 80259fe:	9e07      	ldr	r6, [sp, #28]
 8025a00:	9d04      	ldr	r5, [sp, #16]
 8025a02:	9f08      	ldr	r7, [sp, #32]
 8025a04:	e73b      	b.n	802587e <_dtoa_r+0x736>
 8025a06:	9a07      	ldr	r2, [sp, #28]
 8025a08:	e767      	b.n	80258da <_dtoa_r+0x792>
 8025a0a:	9b06      	ldr	r3, [sp, #24]
 8025a0c:	2b01      	cmp	r3, #1
 8025a0e:	dc18      	bgt.n	8025a42 <_dtoa_r+0x8fa>
 8025a10:	f1ba 0f00 	cmp.w	sl, #0
 8025a14:	d115      	bne.n	8025a42 <_dtoa_r+0x8fa>
 8025a16:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8025a1a:	b993      	cbnz	r3, 8025a42 <_dtoa_r+0x8fa>
 8025a1c:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8025a20:	0d1b      	lsrs	r3, r3, #20
 8025a22:	051b      	lsls	r3, r3, #20
 8025a24:	b183      	cbz	r3, 8025a48 <_dtoa_r+0x900>
 8025a26:	9b04      	ldr	r3, [sp, #16]
 8025a28:	3301      	adds	r3, #1
 8025a2a:	9304      	str	r3, [sp, #16]
 8025a2c:	9b05      	ldr	r3, [sp, #20]
 8025a2e:	3301      	adds	r3, #1
 8025a30:	9305      	str	r3, [sp, #20]
 8025a32:	f04f 0801 	mov.w	r8, #1
 8025a36:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8025a38:	2b00      	cmp	r3, #0
 8025a3a:	f47f af6a 	bne.w	8025912 <_dtoa_r+0x7ca>
 8025a3e:	2001      	movs	r0, #1
 8025a40:	e76f      	b.n	8025922 <_dtoa_r+0x7da>
 8025a42:	f04f 0800 	mov.w	r8, #0
 8025a46:	e7f6      	b.n	8025a36 <_dtoa_r+0x8ee>
 8025a48:	4698      	mov	r8, r3
 8025a4a:	e7f4      	b.n	8025a36 <_dtoa_r+0x8ee>
 8025a4c:	f43f af7d 	beq.w	802594a <_dtoa_r+0x802>
 8025a50:	4618      	mov	r0, r3
 8025a52:	301c      	adds	r0, #28
 8025a54:	e772      	b.n	802593c <_dtoa_r+0x7f4>
 8025a56:	9b03      	ldr	r3, [sp, #12]
 8025a58:	2b00      	cmp	r3, #0
 8025a5a:	dc37      	bgt.n	8025acc <_dtoa_r+0x984>
 8025a5c:	9b06      	ldr	r3, [sp, #24]
 8025a5e:	2b02      	cmp	r3, #2
 8025a60:	dd34      	ble.n	8025acc <_dtoa_r+0x984>
 8025a62:	9b03      	ldr	r3, [sp, #12]
 8025a64:	9302      	str	r3, [sp, #8]
 8025a66:	9b02      	ldr	r3, [sp, #8]
 8025a68:	b96b      	cbnz	r3, 8025a86 <_dtoa_r+0x93e>
 8025a6a:	4631      	mov	r1, r6
 8025a6c:	2205      	movs	r2, #5
 8025a6e:	4620      	mov	r0, r4
 8025a70:	f000 ff86 	bl	8026980 <__multadd>
 8025a74:	4601      	mov	r1, r0
 8025a76:	4606      	mov	r6, r0
 8025a78:	ee18 0a10 	vmov	r0, s16
 8025a7c:	f001 f9ea 	bl	8026e54 <__mcmp>
 8025a80:	2800      	cmp	r0, #0
 8025a82:	f73f adbb 	bgt.w	80255fc <_dtoa_r+0x4b4>
 8025a86:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8025a88:	9d01      	ldr	r5, [sp, #4]
 8025a8a:	43db      	mvns	r3, r3
 8025a8c:	9300      	str	r3, [sp, #0]
 8025a8e:	f04f 0800 	mov.w	r8, #0
 8025a92:	4631      	mov	r1, r6
 8025a94:	4620      	mov	r0, r4
 8025a96:	f000 ff51 	bl	802693c <_Bfree>
 8025a9a:	2f00      	cmp	r7, #0
 8025a9c:	f43f aea4 	beq.w	80257e8 <_dtoa_r+0x6a0>
 8025aa0:	f1b8 0f00 	cmp.w	r8, #0
 8025aa4:	d005      	beq.n	8025ab2 <_dtoa_r+0x96a>
 8025aa6:	45b8      	cmp	r8, r7
 8025aa8:	d003      	beq.n	8025ab2 <_dtoa_r+0x96a>
 8025aaa:	4641      	mov	r1, r8
 8025aac:	4620      	mov	r0, r4
 8025aae:	f000 ff45 	bl	802693c <_Bfree>
 8025ab2:	4639      	mov	r1, r7
 8025ab4:	4620      	mov	r0, r4
 8025ab6:	f000 ff41 	bl	802693c <_Bfree>
 8025aba:	e695      	b.n	80257e8 <_dtoa_r+0x6a0>
 8025abc:	2600      	movs	r6, #0
 8025abe:	4637      	mov	r7, r6
 8025ac0:	e7e1      	b.n	8025a86 <_dtoa_r+0x93e>
 8025ac2:	9700      	str	r7, [sp, #0]
 8025ac4:	4637      	mov	r7, r6
 8025ac6:	e599      	b.n	80255fc <_dtoa_r+0x4b4>
 8025ac8:	40240000 	.word	0x40240000
 8025acc:	9b08      	ldr	r3, [sp, #32]
 8025ace:	2b00      	cmp	r3, #0
 8025ad0:	f000 80ca 	beq.w	8025c68 <_dtoa_r+0xb20>
 8025ad4:	9b03      	ldr	r3, [sp, #12]
 8025ad6:	9302      	str	r3, [sp, #8]
 8025ad8:	2d00      	cmp	r5, #0
 8025ada:	dd05      	ble.n	8025ae8 <_dtoa_r+0x9a0>
 8025adc:	4639      	mov	r1, r7
 8025ade:	462a      	mov	r2, r5
 8025ae0:	4620      	mov	r0, r4
 8025ae2:	f001 f947 	bl	8026d74 <__lshift>
 8025ae6:	4607      	mov	r7, r0
 8025ae8:	f1b8 0f00 	cmp.w	r8, #0
 8025aec:	d05b      	beq.n	8025ba6 <_dtoa_r+0xa5e>
 8025aee:	6879      	ldr	r1, [r7, #4]
 8025af0:	4620      	mov	r0, r4
 8025af2:	f000 fee3 	bl	80268bc <_Balloc>
 8025af6:	4605      	mov	r5, r0
 8025af8:	b928      	cbnz	r0, 8025b06 <_dtoa_r+0x9be>
 8025afa:	4b87      	ldr	r3, [pc, #540]	; (8025d18 <_dtoa_r+0xbd0>)
 8025afc:	4602      	mov	r2, r0
 8025afe:	f240 21ea 	movw	r1, #746	; 0x2ea
 8025b02:	f7ff bb3b 	b.w	802517c <_dtoa_r+0x34>
 8025b06:	693a      	ldr	r2, [r7, #16]
 8025b08:	3202      	adds	r2, #2
 8025b0a:	0092      	lsls	r2, r2, #2
 8025b0c:	f107 010c 	add.w	r1, r7, #12
 8025b10:	300c      	adds	r0, #12
 8025b12:	f7fd f8d3 	bl	8022cbc <memcpy>
 8025b16:	2201      	movs	r2, #1
 8025b18:	4629      	mov	r1, r5
 8025b1a:	4620      	mov	r0, r4
 8025b1c:	f001 f92a 	bl	8026d74 <__lshift>
 8025b20:	9b01      	ldr	r3, [sp, #4]
 8025b22:	f103 0901 	add.w	r9, r3, #1
 8025b26:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8025b2a:	4413      	add	r3, r2
 8025b2c:	9305      	str	r3, [sp, #20]
 8025b2e:	f00a 0301 	and.w	r3, sl, #1
 8025b32:	46b8      	mov	r8, r7
 8025b34:	9304      	str	r3, [sp, #16]
 8025b36:	4607      	mov	r7, r0
 8025b38:	4631      	mov	r1, r6
 8025b3a:	ee18 0a10 	vmov	r0, s16
 8025b3e:	f7ff fa75 	bl	802502c <quorem>
 8025b42:	4641      	mov	r1, r8
 8025b44:	9002      	str	r0, [sp, #8]
 8025b46:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8025b4a:	ee18 0a10 	vmov	r0, s16
 8025b4e:	f001 f981 	bl	8026e54 <__mcmp>
 8025b52:	463a      	mov	r2, r7
 8025b54:	9003      	str	r0, [sp, #12]
 8025b56:	4631      	mov	r1, r6
 8025b58:	4620      	mov	r0, r4
 8025b5a:	f001 f997 	bl	8026e8c <__mdiff>
 8025b5e:	68c2      	ldr	r2, [r0, #12]
 8025b60:	f109 3bff 	add.w	fp, r9, #4294967295
 8025b64:	4605      	mov	r5, r0
 8025b66:	bb02      	cbnz	r2, 8025baa <_dtoa_r+0xa62>
 8025b68:	4601      	mov	r1, r0
 8025b6a:	ee18 0a10 	vmov	r0, s16
 8025b6e:	f001 f971 	bl	8026e54 <__mcmp>
 8025b72:	4602      	mov	r2, r0
 8025b74:	4629      	mov	r1, r5
 8025b76:	4620      	mov	r0, r4
 8025b78:	9207      	str	r2, [sp, #28]
 8025b7a:	f000 fedf 	bl	802693c <_Bfree>
 8025b7e:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8025b82:	ea43 0102 	orr.w	r1, r3, r2
 8025b86:	9b04      	ldr	r3, [sp, #16]
 8025b88:	430b      	orrs	r3, r1
 8025b8a:	464d      	mov	r5, r9
 8025b8c:	d10f      	bne.n	8025bae <_dtoa_r+0xa66>
 8025b8e:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8025b92:	d02a      	beq.n	8025bea <_dtoa_r+0xaa2>
 8025b94:	9b03      	ldr	r3, [sp, #12]
 8025b96:	2b00      	cmp	r3, #0
 8025b98:	dd02      	ble.n	8025ba0 <_dtoa_r+0xa58>
 8025b9a:	9b02      	ldr	r3, [sp, #8]
 8025b9c:	f103 0a31 	add.w	sl, r3, #49	; 0x31
 8025ba0:	f88b a000 	strb.w	sl, [fp]
 8025ba4:	e775      	b.n	8025a92 <_dtoa_r+0x94a>
 8025ba6:	4638      	mov	r0, r7
 8025ba8:	e7ba      	b.n	8025b20 <_dtoa_r+0x9d8>
 8025baa:	2201      	movs	r2, #1
 8025bac:	e7e2      	b.n	8025b74 <_dtoa_r+0xa2c>
 8025bae:	9b03      	ldr	r3, [sp, #12]
 8025bb0:	2b00      	cmp	r3, #0
 8025bb2:	db04      	blt.n	8025bbe <_dtoa_r+0xa76>
 8025bb4:	9906      	ldr	r1, [sp, #24]
 8025bb6:	430b      	orrs	r3, r1
 8025bb8:	9904      	ldr	r1, [sp, #16]
 8025bba:	430b      	orrs	r3, r1
 8025bbc:	d122      	bne.n	8025c04 <_dtoa_r+0xabc>
 8025bbe:	2a00      	cmp	r2, #0
 8025bc0:	ddee      	ble.n	8025ba0 <_dtoa_r+0xa58>
 8025bc2:	ee18 1a10 	vmov	r1, s16
 8025bc6:	2201      	movs	r2, #1
 8025bc8:	4620      	mov	r0, r4
 8025bca:	f001 f8d3 	bl	8026d74 <__lshift>
 8025bce:	4631      	mov	r1, r6
 8025bd0:	ee08 0a10 	vmov	s16, r0
 8025bd4:	f001 f93e 	bl	8026e54 <__mcmp>
 8025bd8:	2800      	cmp	r0, #0
 8025bda:	dc03      	bgt.n	8025be4 <_dtoa_r+0xa9c>
 8025bdc:	d1e0      	bne.n	8025ba0 <_dtoa_r+0xa58>
 8025bde:	f01a 0f01 	tst.w	sl, #1
 8025be2:	d0dd      	beq.n	8025ba0 <_dtoa_r+0xa58>
 8025be4:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8025be8:	d1d7      	bne.n	8025b9a <_dtoa_r+0xa52>
 8025bea:	2339      	movs	r3, #57	; 0x39
 8025bec:	f88b 3000 	strb.w	r3, [fp]
 8025bf0:	462b      	mov	r3, r5
 8025bf2:	461d      	mov	r5, r3
 8025bf4:	3b01      	subs	r3, #1
 8025bf6:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 8025bfa:	2a39      	cmp	r2, #57	; 0x39
 8025bfc:	d071      	beq.n	8025ce2 <_dtoa_r+0xb9a>
 8025bfe:	3201      	adds	r2, #1
 8025c00:	701a      	strb	r2, [r3, #0]
 8025c02:	e746      	b.n	8025a92 <_dtoa_r+0x94a>
 8025c04:	2a00      	cmp	r2, #0
 8025c06:	dd07      	ble.n	8025c18 <_dtoa_r+0xad0>
 8025c08:	f1ba 0f39 	cmp.w	sl, #57	; 0x39
 8025c0c:	d0ed      	beq.n	8025bea <_dtoa_r+0xaa2>
 8025c0e:	f10a 0301 	add.w	r3, sl, #1
 8025c12:	f88b 3000 	strb.w	r3, [fp]
 8025c16:	e73c      	b.n	8025a92 <_dtoa_r+0x94a>
 8025c18:	9b05      	ldr	r3, [sp, #20]
 8025c1a:	f809 ac01 	strb.w	sl, [r9, #-1]
 8025c1e:	4599      	cmp	r9, r3
 8025c20:	d047      	beq.n	8025cb2 <_dtoa_r+0xb6a>
 8025c22:	ee18 1a10 	vmov	r1, s16
 8025c26:	2300      	movs	r3, #0
 8025c28:	220a      	movs	r2, #10
 8025c2a:	4620      	mov	r0, r4
 8025c2c:	f000 fea8 	bl	8026980 <__multadd>
 8025c30:	45b8      	cmp	r8, r7
 8025c32:	ee08 0a10 	vmov	s16, r0
 8025c36:	f04f 0300 	mov.w	r3, #0
 8025c3a:	f04f 020a 	mov.w	r2, #10
 8025c3e:	4641      	mov	r1, r8
 8025c40:	4620      	mov	r0, r4
 8025c42:	d106      	bne.n	8025c52 <_dtoa_r+0xb0a>
 8025c44:	f000 fe9c 	bl	8026980 <__multadd>
 8025c48:	4680      	mov	r8, r0
 8025c4a:	4607      	mov	r7, r0
 8025c4c:	f109 0901 	add.w	r9, r9, #1
 8025c50:	e772      	b.n	8025b38 <_dtoa_r+0x9f0>
 8025c52:	f000 fe95 	bl	8026980 <__multadd>
 8025c56:	4639      	mov	r1, r7
 8025c58:	4680      	mov	r8, r0
 8025c5a:	2300      	movs	r3, #0
 8025c5c:	220a      	movs	r2, #10
 8025c5e:	4620      	mov	r0, r4
 8025c60:	f000 fe8e 	bl	8026980 <__multadd>
 8025c64:	4607      	mov	r7, r0
 8025c66:	e7f1      	b.n	8025c4c <_dtoa_r+0xb04>
 8025c68:	9b03      	ldr	r3, [sp, #12]
 8025c6a:	9302      	str	r3, [sp, #8]
 8025c6c:	9d01      	ldr	r5, [sp, #4]
 8025c6e:	ee18 0a10 	vmov	r0, s16
 8025c72:	4631      	mov	r1, r6
 8025c74:	f7ff f9da 	bl	802502c <quorem>
 8025c78:	f100 0a30 	add.w	sl, r0, #48	; 0x30
 8025c7c:	9b01      	ldr	r3, [sp, #4]
 8025c7e:	f805 ab01 	strb.w	sl, [r5], #1
 8025c82:	1aea      	subs	r2, r5, r3
 8025c84:	9b02      	ldr	r3, [sp, #8]
 8025c86:	4293      	cmp	r3, r2
 8025c88:	dd09      	ble.n	8025c9e <_dtoa_r+0xb56>
 8025c8a:	ee18 1a10 	vmov	r1, s16
 8025c8e:	2300      	movs	r3, #0
 8025c90:	220a      	movs	r2, #10
 8025c92:	4620      	mov	r0, r4
 8025c94:	f000 fe74 	bl	8026980 <__multadd>
 8025c98:	ee08 0a10 	vmov	s16, r0
 8025c9c:	e7e7      	b.n	8025c6e <_dtoa_r+0xb26>
 8025c9e:	9b02      	ldr	r3, [sp, #8]
 8025ca0:	2b00      	cmp	r3, #0
 8025ca2:	bfc8      	it	gt
 8025ca4:	461d      	movgt	r5, r3
 8025ca6:	9b01      	ldr	r3, [sp, #4]
 8025ca8:	bfd8      	it	le
 8025caa:	2501      	movle	r5, #1
 8025cac:	441d      	add	r5, r3
 8025cae:	f04f 0800 	mov.w	r8, #0
 8025cb2:	ee18 1a10 	vmov	r1, s16
 8025cb6:	2201      	movs	r2, #1
 8025cb8:	4620      	mov	r0, r4
 8025cba:	f001 f85b 	bl	8026d74 <__lshift>
 8025cbe:	4631      	mov	r1, r6
 8025cc0:	ee08 0a10 	vmov	s16, r0
 8025cc4:	f001 f8c6 	bl	8026e54 <__mcmp>
 8025cc8:	2800      	cmp	r0, #0
 8025cca:	dc91      	bgt.n	8025bf0 <_dtoa_r+0xaa8>
 8025ccc:	d102      	bne.n	8025cd4 <_dtoa_r+0xb8c>
 8025cce:	f01a 0f01 	tst.w	sl, #1
 8025cd2:	d18d      	bne.n	8025bf0 <_dtoa_r+0xaa8>
 8025cd4:	462b      	mov	r3, r5
 8025cd6:	461d      	mov	r5, r3
 8025cd8:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 8025cdc:	2a30      	cmp	r2, #48	; 0x30
 8025cde:	d0fa      	beq.n	8025cd6 <_dtoa_r+0xb8e>
 8025ce0:	e6d7      	b.n	8025a92 <_dtoa_r+0x94a>
 8025ce2:	9a01      	ldr	r2, [sp, #4]
 8025ce4:	429a      	cmp	r2, r3
 8025ce6:	d184      	bne.n	8025bf2 <_dtoa_r+0xaaa>
 8025ce8:	9b00      	ldr	r3, [sp, #0]
 8025cea:	3301      	adds	r3, #1
 8025cec:	9300      	str	r3, [sp, #0]
 8025cee:	2331      	movs	r3, #49	; 0x31
 8025cf0:	7013      	strb	r3, [r2, #0]
 8025cf2:	e6ce      	b.n	8025a92 <_dtoa_r+0x94a>
 8025cf4:	4b09      	ldr	r3, [pc, #36]	; (8025d1c <_dtoa_r+0xbd4>)
 8025cf6:	f7ff ba95 	b.w	8025224 <_dtoa_r+0xdc>
 8025cfa:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8025cfc:	2b00      	cmp	r3, #0
 8025cfe:	f47f aa6e 	bne.w	80251de <_dtoa_r+0x96>
 8025d02:	4b07      	ldr	r3, [pc, #28]	; (8025d20 <_dtoa_r+0xbd8>)
 8025d04:	f7ff ba8e 	b.w	8025224 <_dtoa_r+0xdc>
 8025d08:	9b02      	ldr	r3, [sp, #8]
 8025d0a:	2b00      	cmp	r3, #0
 8025d0c:	dcae      	bgt.n	8025c6c <_dtoa_r+0xb24>
 8025d0e:	9b06      	ldr	r3, [sp, #24]
 8025d10:	2b02      	cmp	r3, #2
 8025d12:	f73f aea8 	bgt.w	8025a66 <_dtoa_r+0x91e>
 8025d16:	e7a9      	b.n	8025c6c <_dtoa_r+0xb24>
 8025d18:	0802b028 	.word	0x0802b028
 8025d1c:	080295f3 	.word	0x080295f3
 8025d20:	0802afa9 	.word	0x0802afa9

08025d24 <__sflush_r>:
 8025d24:	898a      	ldrh	r2, [r1, #12]
 8025d26:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025d2a:	4605      	mov	r5, r0
 8025d2c:	0710      	lsls	r0, r2, #28
 8025d2e:	460c      	mov	r4, r1
 8025d30:	d458      	bmi.n	8025de4 <__sflush_r+0xc0>
 8025d32:	684b      	ldr	r3, [r1, #4]
 8025d34:	2b00      	cmp	r3, #0
 8025d36:	dc05      	bgt.n	8025d44 <__sflush_r+0x20>
 8025d38:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8025d3a:	2b00      	cmp	r3, #0
 8025d3c:	dc02      	bgt.n	8025d44 <__sflush_r+0x20>
 8025d3e:	2000      	movs	r0, #0
 8025d40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025d44:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025d46:	2e00      	cmp	r6, #0
 8025d48:	d0f9      	beq.n	8025d3e <__sflush_r+0x1a>
 8025d4a:	2300      	movs	r3, #0
 8025d4c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 8025d50:	682f      	ldr	r7, [r5, #0]
 8025d52:	602b      	str	r3, [r5, #0]
 8025d54:	d032      	beq.n	8025dbc <__sflush_r+0x98>
 8025d56:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8025d58:	89a3      	ldrh	r3, [r4, #12]
 8025d5a:	075a      	lsls	r2, r3, #29
 8025d5c:	d505      	bpl.n	8025d6a <__sflush_r+0x46>
 8025d5e:	6863      	ldr	r3, [r4, #4]
 8025d60:	1ac0      	subs	r0, r0, r3
 8025d62:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8025d64:	b10b      	cbz	r3, 8025d6a <__sflush_r+0x46>
 8025d66:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8025d68:	1ac0      	subs	r0, r0, r3
 8025d6a:	2300      	movs	r3, #0
 8025d6c:	4602      	mov	r2, r0
 8025d6e:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8025d70:	6a21      	ldr	r1, [r4, #32]
 8025d72:	4628      	mov	r0, r5
 8025d74:	47b0      	blx	r6
 8025d76:	1c43      	adds	r3, r0, #1
 8025d78:	89a3      	ldrh	r3, [r4, #12]
 8025d7a:	d106      	bne.n	8025d8a <__sflush_r+0x66>
 8025d7c:	6829      	ldr	r1, [r5, #0]
 8025d7e:	291d      	cmp	r1, #29
 8025d80:	d82c      	bhi.n	8025ddc <__sflush_r+0xb8>
 8025d82:	4a2a      	ldr	r2, [pc, #168]	; (8025e2c <__sflush_r+0x108>)
 8025d84:	40ca      	lsrs	r2, r1
 8025d86:	07d6      	lsls	r6, r2, #31
 8025d88:	d528      	bpl.n	8025ddc <__sflush_r+0xb8>
 8025d8a:	2200      	movs	r2, #0
 8025d8c:	6062      	str	r2, [r4, #4]
 8025d8e:	04d9      	lsls	r1, r3, #19
 8025d90:	6922      	ldr	r2, [r4, #16]
 8025d92:	6022      	str	r2, [r4, #0]
 8025d94:	d504      	bpl.n	8025da0 <__sflush_r+0x7c>
 8025d96:	1c42      	adds	r2, r0, #1
 8025d98:	d101      	bne.n	8025d9e <__sflush_r+0x7a>
 8025d9a:	682b      	ldr	r3, [r5, #0]
 8025d9c:	b903      	cbnz	r3, 8025da0 <__sflush_r+0x7c>
 8025d9e:	6560      	str	r0, [r4, #84]	; 0x54
 8025da0:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8025da2:	602f      	str	r7, [r5, #0]
 8025da4:	2900      	cmp	r1, #0
 8025da6:	d0ca      	beq.n	8025d3e <__sflush_r+0x1a>
 8025da8:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8025dac:	4299      	cmp	r1, r3
 8025dae:	d002      	beq.n	8025db6 <__sflush_r+0x92>
 8025db0:	4628      	mov	r0, r5
 8025db2:	f7fc ff99 	bl	8022ce8 <_free_r>
 8025db6:	2000      	movs	r0, #0
 8025db8:	6360      	str	r0, [r4, #52]	; 0x34
 8025dba:	e7c1      	b.n	8025d40 <__sflush_r+0x1c>
 8025dbc:	6a21      	ldr	r1, [r4, #32]
 8025dbe:	2301      	movs	r3, #1
 8025dc0:	4628      	mov	r0, r5
 8025dc2:	47b0      	blx	r6
 8025dc4:	1c41      	adds	r1, r0, #1
 8025dc6:	d1c7      	bne.n	8025d58 <__sflush_r+0x34>
 8025dc8:	682b      	ldr	r3, [r5, #0]
 8025dca:	2b00      	cmp	r3, #0
 8025dcc:	d0c4      	beq.n	8025d58 <__sflush_r+0x34>
 8025dce:	2b1d      	cmp	r3, #29
 8025dd0:	d001      	beq.n	8025dd6 <__sflush_r+0xb2>
 8025dd2:	2b16      	cmp	r3, #22
 8025dd4:	d101      	bne.n	8025dda <__sflush_r+0xb6>
 8025dd6:	602f      	str	r7, [r5, #0]
 8025dd8:	e7b1      	b.n	8025d3e <__sflush_r+0x1a>
 8025dda:	89a3      	ldrh	r3, [r4, #12]
 8025ddc:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025de0:	81a3      	strh	r3, [r4, #12]
 8025de2:	e7ad      	b.n	8025d40 <__sflush_r+0x1c>
 8025de4:	690f      	ldr	r7, [r1, #16]
 8025de6:	2f00      	cmp	r7, #0
 8025de8:	d0a9      	beq.n	8025d3e <__sflush_r+0x1a>
 8025dea:	0793      	lsls	r3, r2, #30
 8025dec:	680e      	ldr	r6, [r1, #0]
 8025dee:	bf08      	it	eq
 8025df0:	694b      	ldreq	r3, [r1, #20]
 8025df2:	600f      	str	r7, [r1, #0]
 8025df4:	bf18      	it	ne
 8025df6:	2300      	movne	r3, #0
 8025df8:	eba6 0807 	sub.w	r8, r6, r7
 8025dfc:	608b      	str	r3, [r1, #8]
 8025dfe:	f1b8 0f00 	cmp.w	r8, #0
 8025e02:	dd9c      	ble.n	8025d3e <__sflush_r+0x1a>
 8025e04:	6a21      	ldr	r1, [r4, #32]
 8025e06:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 8025e08:	4643      	mov	r3, r8
 8025e0a:	463a      	mov	r2, r7
 8025e0c:	4628      	mov	r0, r5
 8025e0e:	47b0      	blx	r6
 8025e10:	2800      	cmp	r0, #0
 8025e12:	dc06      	bgt.n	8025e22 <__sflush_r+0xfe>
 8025e14:	89a3      	ldrh	r3, [r4, #12]
 8025e16:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8025e1a:	81a3      	strh	r3, [r4, #12]
 8025e1c:	f04f 30ff 	mov.w	r0, #4294967295
 8025e20:	e78e      	b.n	8025d40 <__sflush_r+0x1c>
 8025e22:	4407      	add	r7, r0
 8025e24:	eba8 0800 	sub.w	r8, r8, r0
 8025e28:	e7e9      	b.n	8025dfe <__sflush_r+0xda>
 8025e2a:	bf00      	nop
 8025e2c:	20400001 	.word	0x20400001

08025e30 <_fflush_r>:
 8025e30:	b538      	push	{r3, r4, r5, lr}
 8025e32:	690b      	ldr	r3, [r1, #16]
 8025e34:	4605      	mov	r5, r0
 8025e36:	460c      	mov	r4, r1
 8025e38:	b913      	cbnz	r3, 8025e40 <_fflush_r+0x10>
 8025e3a:	2500      	movs	r5, #0
 8025e3c:	4628      	mov	r0, r5
 8025e3e:	bd38      	pop	{r3, r4, r5, pc}
 8025e40:	b118      	cbz	r0, 8025e4a <_fflush_r+0x1a>
 8025e42:	6983      	ldr	r3, [r0, #24]
 8025e44:	b90b      	cbnz	r3, 8025e4a <_fflush_r+0x1a>
 8025e46:	f000 f887 	bl	8025f58 <__sinit>
 8025e4a:	4b14      	ldr	r3, [pc, #80]	; (8025e9c <_fflush_r+0x6c>)
 8025e4c:	429c      	cmp	r4, r3
 8025e4e:	d11b      	bne.n	8025e88 <_fflush_r+0x58>
 8025e50:	686c      	ldr	r4, [r5, #4]
 8025e52:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8025e56:	2b00      	cmp	r3, #0
 8025e58:	d0ef      	beq.n	8025e3a <_fflush_r+0xa>
 8025e5a:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8025e5c:	07d0      	lsls	r0, r2, #31
 8025e5e:	d404      	bmi.n	8025e6a <_fflush_r+0x3a>
 8025e60:	0599      	lsls	r1, r3, #22
 8025e62:	d402      	bmi.n	8025e6a <_fflush_r+0x3a>
 8025e64:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025e66:	f000 fc88 	bl	802677a <__retarget_lock_acquire_recursive>
 8025e6a:	4628      	mov	r0, r5
 8025e6c:	4621      	mov	r1, r4
 8025e6e:	f7ff ff59 	bl	8025d24 <__sflush_r>
 8025e72:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8025e74:	07da      	lsls	r2, r3, #31
 8025e76:	4605      	mov	r5, r0
 8025e78:	d4e0      	bmi.n	8025e3c <_fflush_r+0xc>
 8025e7a:	89a3      	ldrh	r3, [r4, #12]
 8025e7c:	059b      	lsls	r3, r3, #22
 8025e7e:	d4dd      	bmi.n	8025e3c <_fflush_r+0xc>
 8025e80:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8025e82:	f000 fc7c 	bl	802677e <__retarget_lock_release_recursive>
 8025e86:	e7d9      	b.n	8025e3c <_fflush_r+0xc>
 8025e88:	4b05      	ldr	r3, [pc, #20]	; (8025ea0 <_fflush_r+0x70>)
 8025e8a:	429c      	cmp	r4, r3
 8025e8c:	d101      	bne.n	8025e92 <_fflush_r+0x62>
 8025e8e:	68ac      	ldr	r4, [r5, #8]
 8025e90:	e7df      	b.n	8025e52 <_fflush_r+0x22>
 8025e92:	4b04      	ldr	r3, [pc, #16]	; (8025ea4 <_fflush_r+0x74>)
 8025e94:	429c      	cmp	r4, r3
 8025e96:	bf08      	it	eq
 8025e98:	68ec      	ldreq	r4, [r5, #12]
 8025e9a:	e7da      	b.n	8025e52 <_fflush_r+0x22>
 8025e9c:	0802b05c 	.word	0x0802b05c
 8025ea0:	0802b07c 	.word	0x0802b07c
 8025ea4:	0802b03c 	.word	0x0802b03c

08025ea8 <std>:
 8025ea8:	2300      	movs	r3, #0
 8025eaa:	b510      	push	{r4, lr}
 8025eac:	4604      	mov	r4, r0
 8025eae:	e9c0 3300 	strd	r3, r3, [r0]
 8025eb2:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8025eb6:	6083      	str	r3, [r0, #8]
 8025eb8:	8181      	strh	r1, [r0, #12]
 8025eba:	6643      	str	r3, [r0, #100]	; 0x64
 8025ebc:	81c2      	strh	r2, [r0, #14]
 8025ebe:	6183      	str	r3, [r0, #24]
 8025ec0:	4619      	mov	r1, r3
 8025ec2:	2208      	movs	r2, #8
 8025ec4:	305c      	adds	r0, #92	; 0x5c
 8025ec6:	f7fc ff07 	bl	8022cd8 <memset>
 8025eca:	4b05      	ldr	r3, [pc, #20]	; (8025ee0 <std+0x38>)
 8025ecc:	6263      	str	r3, [r4, #36]	; 0x24
 8025ece:	4b05      	ldr	r3, [pc, #20]	; (8025ee4 <std+0x3c>)
 8025ed0:	62a3      	str	r3, [r4, #40]	; 0x28
 8025ed2:	4b05      	ldr	r3, [pc, #20]	; (8025ee8 <std+0x40>)
 8025ed4:	62e3      	str	r3, [r4, #44]	; 0x2c
 8025ed6:	4b05      	ldr	r3, [pc, #20]	; (8025eec <std+0x44>)
 8025ed8:	6224      	str	r4, [r4, #32]
 8025eda:	6323      	str	r3, [r4, #48]	; 0x30
 8025edc:	bd10      	pop	{r4, pc}
 8025ede:	bf00      	nop
 8025ee0:	08027621 	.word	0x08027621
 8025ee4:	08027643 	.word	0x08027643
 8025ee8:	0802767b 	.word	0x0802767b
 8025eec:	0802769f 	.word	0x0802769f

08025ef0 <_cleanup_r>:
 8025ef0:	4901      	ldr	r1, [pc, #4]	; (8025ef8 <_cleanup_r+0x8>)
 8025ef2:	f000 b8af 	b.w	8026054 <_fwalk_reent>
 8025ef6:	bf00      	nop
 8025ef8:	08025e31 	.word	0x08025e31

08025efc <__sfmoreglue>:
 8025efc:	b570      	push	{r4, r5, r6, lr}
 8025efe:	2268      	movs	r2, #104	; 0x68
 8025f00:	1e4d      	subs	r5, r1, #1
 8025f02:	4355      	muls	r5, r2
 8025f04:	460e      	mov	r6, r1
 8025f06:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8025f0a:	f7fc ff59 	bl	8022dc0 <_malloc_r>
 8025f0e:	4604      	mov	r4, r0
 8025f10:	b140      	cbz	r0, 8025f24 <__sfmoreglue+0x28>
 8025f12:	2100      	movs	r1, #0
 8025f14:	e9c0 1600 	strd	r1, r6, [r0]
 8025f18:	300c      	adds	r0, #12
 8025f1a:	60a0      	str	r0, [r4, #8]
 8025f1c:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8025f20:	f7fc feda 	bl	8022cd8 <memset>
 8025f24:	4620      	mov	r0, r4
 8025f26:	bd70      	pop	{r4, r5, r6, pc}

08025f28 <__sfp_lock_acquire>:
 8025f28:	4801      	ldr	r0, [pc, #4]	; (8025f30 <__sfp_lock_acquire+0x8>)
 8025f2a:	f000 bc26 	b.w	802677a <__retarget_lock_acquire_recursive>
 8025f2e:	bf00      	nop
 8025f30:	200139fe 	.word	0x200139fe

08025f34 <__sfp_lock_release>:
 8025f34:	4801      	ldr	r0, [pc, #4]	; (8025f3c <__sfp_lock_release+0x8>)
 8025f36:	f000 bc22 	b.w	802677e <__retarget_lock_release_recursive>
 8025f3a:	bf00      	nop
 8025f3c:	200139fe 	.word	0x200139fe

08025f40 <__sinit_lock_acquire>:
 8025f40:	4801      	ldr	r0, [pc, #4]	; (8025f48 <__sinit_lock_acquire+0x8>)
 8025f42:	f000 bc1a 	b.w	802677a <__retarget_lock_acquire_recursive>
 8025f46:	bf00      	nop
 8025f48:	200139ff 	.word	0x200139ff

08025f4c <__sinit_lock_release>:
 8025f4c:	4801      	ldr	r0, [pc, #4]	; (8025f54 <__sinit_lock_release+0x8>)
 8025f4e:	f000 bc16 	b.w	802677e <__retarget_lock_release_recursive>
 8025f52:	bf00      	nop
 8025f54:	200139ff 	.word	0x200139ff

08025f58 <__sinit>:
 8025f58:	b510      	push	{r4, lr}
 8025f5a:	4604      	mov	r4, r0
 8025f5c:	f7ff fff0 	bl	8025f40 <__sinit_lock_acquire>
 8025f60:	69a3      	ldr	r3, [r4, #24]
 8025f62:	b11b      	cbz	r3, 8025f6c <__sinit+0x14>
 8025f64:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8025f68:	f7ff bff0 	b.w	8025f4c <__sinit_lock_release>
 8025f6c:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8025f70:	6523      	str	r3, [r4, #80]	; 0x50
 8025f72:	4b13      	ldr	r3, [pc, #76]	; (8025fc0 <__sinit+0x68>)
 8025f74:	4a13      	ldr	r2, [pc, #76]	; (8025fc4 <__sinit+0x6c>)
 8025f76:	681b      	ldr	r3, [r3, #0]
 8025f78:	62a2      	str	r2, [r4, #40]	; 0x28
 8025f7a:	42a3      	cmp	r3, r4
 8025f7c:	bf04      	itt	eq
 8025f7e:	2301      	moveq	r3, #1
 8025f80:	61a3      	streq	r3, [r4, #24]
 8025f82:	4620      	mov	r0, r4
 8025f84:	f000 f820 	bl	8025fc8 <__sfp>
 8025f88:	6060      	str	r0, [r4, #4]
 8025f8a:	4620      	mov	r0, r4
 8025f8c:	f000 f81c 	bl	8025fc8 <__sfp>
 8025f90:	60a0      	str	r0, [r4, #8]
 8025f92:	4620      	mov	r0, r4
 8025f94:	f000 f818 	bl	8025fc8 <__sfp>
 8025f98:	2200      	movs	r2, #0
 8025f9a:	60e0      	str	r0, [r4, #12]
 8025f9c:	2104      	movs	r1, #4
 8025f9e:	6860      	ldr	r0, [r4, #4]
 8025fa0:	f7ff ff82 	bl	8025ea8 <std>
 8025fa4:	68a0      	ldr	r0, [r4, #8]
 8025fa6:	2201      	movs	r2, #1
 8025fa8:	2109      	movs	r1, #9
 8025faa:	f7ff ff7d 	bl	8025ea8 <std>
 8025fae:	68e0      	ldr	r0, [r4, #12]
 8025fb0:	2202      	movs	r2, #2
 8025fb2:	2112      	movs	r1, #18
 8025fb4:	f7ff ff78 	bl	8025ea8 <std>
 8025fb8:	2301      	movs	r3, #1
 8025fba:	61a3      	str	r3, [r4, #24]
 8025fbc:	e7d2      	b.n	8025f64 <__sinit+0xc>
 8025fbe:	bf00      	nop
 8025fc0:	0802ae04 	.word	0x0802ae04
 8025fc4:	08025ef1 	.word	0x08025ef1

08025fc8 <__sfp>:
 8025fc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8025fca:	4607      	mov	r7, r0
 8025fcc:	f7ff ffac 	bl	8025f28 <__sfp_lock_acquire>
 8025fd0:	4b1e      	ldr	r3, [pc, #120]	; (802604c <__sfp+0x84>)
 8025fd2:	681e      	ldr	r6, [r3, #0]
 8025fd4:	69b3      	ldr	r3, [r6, #24]
 8025fd6:	b913      	cbnz	r3, 8025fde <__sfp+0x16>
 8025fd8:	4630      	mov	r0, r6
 8025fda:	f7ff ffbd 	bl	8025f58 <__sinit>
 8025fde:	3648      	adds	r6, #72	; 0x48
 8025fe0:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 8025fe4:	3b01      	subs	r3, #1
 8025fe6:	d503      	bpl.n	8025ff0 <__sfp+0x28>
 8025fe8:	6833      	ldr	r3, [r6, #0]
 8025fea:	b30b      	cbz	r3, 8026030 <__sfp+0x68>
 8025fec:	6836      	ldr	r6, [r6, #0]
 8025fee:	e7f7      	b.n	8025fe0 <__sfp+0x18>
 8025ff0:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 8025ff4:	b9d5      	cbnz	r5, 802602c <__sfp+0x64>
 8025ff6:	4b16      	ldr	r3, [pc, #88]	; (8026050 <__sfp+0x88>)
 8025ff8:	60e3      	str	r3, [r4, #12]
 8025ffa:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8025ffe:	6665      	str	r5, [r4, #100]	; 0x64
 8026000:	f000 fbba 	bl	8026778 <__retarget_lock_init_recursive>
 8026004:	f7ff ff96 	bl	8025f34 <__sfp_lock_release>
 8026008:	e9c4 5501 	strd	r5, r5, [r4, #4]
 802600c:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8026010:	6025      	str	r5, [r4, #0]
 8026012:	61a5      	str	r5, [r4, #24]
 8026014:	2208      	movs	r2, #8
 8026016:	4629      	mov	r1, r5
 8026018:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 802601c:	f7fc fe5c 	bl	8022cd8 <memset>
 8026020:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8026024:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8026028:	4620      	mov	r0, r4
 802602a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 802602c:	3468      	adds	r4, #104	; 0x68
 802602e:	e7d9      	b.n	8025fe4 <__sfp+0x1c>
 8026030:	2104      	movs	r1, #4
 8026032:	4638      	mov	r0, r7
 8026034:	f7ff ff62 	bl	8025efc <__sfmoreglue>
 8026038:	4604      	mov	r4, r0
 802603a:	6030      	str	r0, [r6, #0]
 802603c:	2800      	cmp	r0, #0
 802603e:	d1d5      	bne.n	8025fec <__sfp+0x24>
 8026040:	f7ff ff78 	bl	8025f34 <__sfp_lock_release>
 8026044:	230c      	movs	r3, #12
 8026046:	603b      	str	r3, [r7, #0]
 8026048:	e7ee      	b.n	8026028 <__sfp+0x60>
 802604a:	bf00      	nop
 802604c:	0802ae04 	.word	0x0802ae04
 8026050:	ffff0001 	.word	0xffff0001

08026054 <_fwalk_reent>:
 8026054:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026058:	4606      	mov	r6, r0
 802605a:	4688      	mov	r8, r1
 802605c:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8026060:	2700      	movs	r7, #0
 8026062:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8026066:	f1b9 0901 	subs.w	r9, r9, #1
 802606a:	d505      	bpl.n	8026078 <_fwalk_reent+0x24>
 802606c:	6824      	ldr	r4, [r4, #0]
 802606e:	2c00      	cmp	r4, #0
 8026070:	d1f7      	bne.n	8026062 <_fwalk_reent+0xe>
 8026072:	4638      	mov	r0, r7
 8026074:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026078:	89ab      	ldrh	r3, [r5, #12]
 802607a:	2b01      	cmp	r3, #1
 802607c:	d907      	bls.n	802608e <_fwalk_reent+0x3a>
 802607e:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8026082:	3301      	adds	r3, #1
 8026084:	d003      	beq.n	802608e <_fwalk_reent+0x3a>
 8026086:	4629      	mov	r1, r5
 8026088:	4630      	mov	r0, r6
 802608a:	47c0      	blx	r8
 802608c:	4307      	orrs	r7, r0
 802608e:	3568      	adds	r5, #104	; 0x68
 8026090:	e7e9      	b.n	8026066 <_fwalk_reent+0x12>

08026092 <rshift>:
 8026092:	6903      	ldr	r3, [r0, #16]
 8026094:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 8026098:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 802609c:	ea4f 1261 	mov.w	r2, r1, asr #5
 80260a0:	f100 0414 	add.w	r4, r0, #20
 80260a4:	dd45      	ble.n	8026132 <rshift+0xa0>
 80260a6:	f011 011f 	ands.w	r1, r1, #31
 80260aa:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 80260ae:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 80260b2:	d10c      	bne.n	80260ce <rshift+0x3c>
 80260b4:	f100 0710 	add.w	r7, r0, #16
 80260b8:	4629      	mov	r1, r5
 80260ba:	42b1      	cmp	r1, r6
 80260bc:	d334      	bcc.n	8026128 <rshift+0x96>
 80260be:	1a9b      	subs	r3, r3, r2
 80260c0:	009b      	lsls	r3, r3, #2
 80260c2:	1eea      	subs	r2, r5, #3
 80260c4:	4296      	cmp	r6, r2
 80260c6:	bf38      	it	cc
 80260c8:	2300      	movcc	r3, #0
 80260ca:	4423      	add	r3, r4
 80260cc:	e015      	b.n	80260fa <rshift+0x68>
 80260ce:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 80260d2:	f1c1 0820 	rsb	r8, r1, #32
 80260d6:	40cf      	lsrs	r7, r1
 80260d8:	f105 0e04 	add.w	lr, r5, #4
 80260dc:	46a1      	mov	r9, r4
 80260de:	4576      	cmp	r6, lr
 80260e0:	46f4      	mov	ip, lr
 80260e2:	d815      	bhi.n	8026110 <rshift+0x7e>
 80260e4:	1a9a      	subs	r2, r3, r2
 80260e6:	0092      	lsls	r2, r2, #2
 80260e8:	3a04      	subs	r2, #4
 80260ea:	3501      	adds	r5, #1
 80260ec:	42ae      	cmp	r6, r5
 80260ee:	bf38      	it	cc
 80260f0:	2200      	movcc	r2, #0
 80260f2:	18a3      	adds	r3, r4, r2
 80260f4:	50a7      	str	r7, [r4, r2]
 80260f6:	b107      	cbz	r7, 80260fa <rshift+0x68>
 80260f8:	3304      	adds	r3, #4
 80260fa:	1b1a      	subs	r2, r3, r4
 80260fc:	42a3      	cmp	r3, r4
 80260fe:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8026102:	bf08      	it	eq
 8026104:	2300      	moveq	r3, #0
 8026106:	6102      	str	r2, [r0, #16]
 8026108:	bf08      	it	eq
 802610a:	6143      	streq	r3, [r0, #20]
 802610c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8026110:	f8dc c000 	ldr.w	ip, [ip]
 8026114:	fa0c fc08 	lsl.w	ip, ip, r8
 8026118:	ea4c 0707 	orr.w	r7, ip, r7
 802611c:	f849 7b04 	str.w	r7, [r9], #4
 8026120:	f85e 7b04 	ldr.w	r7, [lr], #4
 8026124:	40cf      	lsrs	r7, r1
 8026126:	e7da      	b.n	80260de <rshift+0x4c>
 8026128:	f851 cb04 	ldr.w	ip, [r1], #4
 802612c:	f847 cf04 	str.w	ip, [r7, #4]!
 8026130:	e7c3      	b.n	80260ba <rshift+0x28>
 8026132:	4623      	mov	r3, r4
 8026134:	e7e1      	b.n	80260fa <rshift+0x68>

08026136 <__hexdig_fun>:
 8026136:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 802613a:	2b09      	cmp	r3, #9
 802613c:	d802      	bhi.n	8026144 <__hexdig_fun+0xe>
 802613e:	3820      	subs	r0, #32
 8026140:	b2c0      	uxtb	r0, r0
 8026142:	4770      	bx	lr
 8026144:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 8026148:	2b05      	cmp	r3, #5
 802614a:	d801      	bhi.n	8026150 <__hexdig_fun+0x1a>
 802614c:	3847      	subs	r0, #71	; 0x47
 802614e:	e7f7      	b.n	8026140 <__hexdig_fun+0xa>
 8026150:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 8026154:	2b05      	cmp	r3, #5
 8026156:	d801      	bhi.n	802615c <__hexdig_fun+0x26>
 8026158:	3827      	subs	r0, #39	; 0x27
 802615a:	e7f1      	b.n	8026140 <__hexdig_fun+0xa>
 802615c:	2000      	movs	r0, #0
 802615e:	4770      	bx	lr

08026160 <__gethex>:
 8026160:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026164:	ed2d 8b02 	vpush	{d8}
 8026168:	b089      	sub	sp, #36	; 0x24
 802616a:	ee08 0a10 	vmov	s16, r0
 802616e:	9304      	str	r3, [sp, #16]
 8026170:	4bb4      	ldr	r3, [pc, #720]	; (8026444 <__gethex+0x2e4>)
 8026172:	681b      	ldr	r3, [r3, #0]
 8026174:	9301      	str	r3, [sp, #4]
 8026176:	4618      	mov	r0, r3
 8026178:	468b      	mov	fp, r1
 802617a:	4690      	mov	r8, r2
 802617c:	f7da f838 	bl	80001f0 <strlen>
 8026180:	9b01      	ldr	r3, [sp, #4]
 8026182:	f8db 2000 	ldr.w	r2, [fp]
 8026186:	4403      	add	r3, r0
 8026188:	4682      	mov	sl, r0
 802618a:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 802618e:	9305      	str	r3, [sp, #20]
 8026190:	1c93      	adds	r3, r2, #2
 8026192:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 8026196:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 802619a:	32fe      	adds	r2, #254	; 0xfe
 802619c:	18d1      	adds	r1, r2, r3
 802619e:	461f      	mov	r7, r3
 80261a0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80261a4:	9100      	str	r1, [sp, #0]
 80261a6:	2830      	cmp	r0, #48	; 0x30
 80261a8:	d0f8      	beq.n	802619c <__gethex+0x3c>
 80261aa:	f7ff ffc4 	bl	8026136 <__hexdig_fun>
 80261ae:	4604      	mov	r4, r0
 80261b0:	2800      	cmp	r0, #0
 80261b2:	d13a      	bne.n	802622a <__gethex+0xca>
 80261b4:	9901      	ldr	r1, [sp, #4]
 80261b6:	4652      	mov	r2, sl
 80261b8:	4638      	mov	r0, r7
 80261ba:	f001 fa74 	bl	80276a6 <strncmp>
 80261be:	4605      	mov	r5, r0
 80261c0:	2800      	cmp	r0, #0
 80261c2:	d168      	bne.n	8026296 <__gethex+0x136>
 80261c4:	f817 000a 	ldrb.w	r0, [r7, sl]
 80261c8:	eb07 060a 	add.w	r6, r7, sl
 80261cc:	f7ff ffb3 	bl	8026136 <__hexdig_fun>
 80261d0:	2800      	cmp	r0, #0
 80261d2:	d062      	beq.n	802629a <__gethex+0x13a>
 80261d4:	4633      	mov	r3, r6
 80261d6:	7818      	ldrb	r0, [r3, #0]
 80261d8:	2830      	cmp	r0, #48	; 0x30
 80261da:	461f      	mov	r7, r3
 80261dc:	f103 0301 	add.w	r3, r3, #1
 80261e0:	d0f9      	beq.n	80261d6 <__gethex+0x76>
 80261e2:	f7ff ffa8 	bl	8026136 <__hexdig_fun>
 80261e6:	2301      	movs	r3, #1
 80261e8:	fab0 f480 	clz	r4, r0
 80261ec:	0964      	lsrs	r4, r4, #5
 80261ee:	4635      	mov	r5, r6
 80261f0:	9300      	str	r3, [sp, #0]
 80261f2:	463a      	mov	r2, r7
 80261f4:	4616      	mov	r6, r2
 80261f6:	3201      	adds	r2, #1
 80261f8:	7830      	ldrb	r0, [r6, #0]
 80261fa:	f7ff ff9c 	bl	8026136 <__hexdig_fun>
 80261fe:	2800      	cmp	r0, #0
 8026200:	d1f8      	bne.n	80261f4 <__gethex+0x94>
 8026202:	9901      	ldr	r1, [sp, #4]
 8026204:	4652      	mov	r2, sl
 8026206:	4630      	mov	r0, r6
 8026208:	f001 fa4d 	bl	80276a6 <strncmp>
 802620c:	b980      	cbnz	r0, 8026230 <__gethex+0xd0>
 802620e:	b94d      	cbnz	r5, 8026224 <__gethex+0xc4>
 8026210:	eb06 050a 	add.w	r5, r6, sl
 8026214:	462a      	mov	r2, r5
 8026216:	4616      	mov	r6, r2
 8026218:	3201      	adds	r2, #1
 802621a:	7830      	ldrb	r0, [r6, #0]
 802621c:	f7ff ff8b 	bl	8026136 <__hexdig_fun>
 8026220:	2800      	cmp	r0, #0
 8026222:	d1f8      	bne.n	8026216 <__gethex+0xb6>
 8026224:	1bad      	subs	r5, r5, r6
 8026226:	00ad      	lsls	r5, r5, #2
 8026228:	e004      	b.n	8026234 <__gethex+0xd4>
 802622a:	2400      	movs	r4, #0
 802622c:	4625      	mov	r5, r4
 802622e:	e7e0      	b.n	80261f2 <__gethex+0x92>
 8026230:	2d00      	cmp	r5, #0
 8026232:	d1f7      	bne.n	8026224 <__gethex+0xc4>
 8026234:	7833      	ldrb	r3, [r6, #0]
 8026236:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 802623a:	2b50      	cmp	r3, #80	; 0x50
 802623c:	d13b      	bne.n	80262b6 <__gethex+0x156>
 802623e:	7873      	ldrb	r3, [r6, #1]
 8026240:	2b2b      	cmp	r3, #43	; 0x2b
 8026242:	d02c      	beq.n	802629e <__gethex+0x13e>
 8026244:	2b2d      	cmp	r3, #45	; 0x2d
 8026246:	d02e      	beq.n	80262a6 <__gethex+0x146>
 8026248:	1c71      	adds	r1, r6, #1
 802624a:	f04f 0900 	mov.w	r9, #0
 802624e:	7808      	ldrb	r0, [r1, #0]
 8026250:	f7ff ff71 	bl	8026136 <__hexdig_fun>
 8026254:	1e43      	subs	r3, r0, #1
 8026256:	b2db      	uxtb	r3, r3
 8026258:	2b18      	cmp	r3, #24
 802625a:	d82c      	bhi.n	80262b6 <__gethex+0x156>
 802625c:	f1a0 0210 	sub.w	r2, r0, #16
 8026260:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8026264:	f7ff ff67 	bl	8026136 <__hexdig_fun>
 8026268:	1e43      	subs	r3, r0, #1
 802626a:	b2db      	uxtb	r3, r3
 802626c:	2b18      	cmp	r3, #24
 802626e:	d91d      	bls.n	80262ac <__gethex+0x14c>
 8026270:	f1b9 0f00 	cmp.w	r9, #0
 8026274:	d000      	beq.n	8026278 <__gethex+0x118>
 8026276:	4252      	negs	r2, r2
 8026278:	4415      	add	r5, r2
 802627a:	f8cb 1000 	str.w	r1, [fp]
 802627e:	b1e4      	cbz	r4, 80262ba <__gethex+0x15a>
 8026280:	9b00      	ldr	r3, [sp, #0]
 8026282:	2b00      	cmp	r3, #0
 8026284:	bf14      	ite	ne
 8026286:	2700      	movne	r7, #0
 8026288:	2706      	moveq	r7, #6
 802628a:	4638      	mov	r0, r7
 802628c:	b009      	add	sp, #36	; 0x24
 802628e:	ecbd 8b02 	vpop	{d8}
 8026292:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026296:	463e      	mov	r6, r7
 8026298:	4625      	mov	r5, r4
 802629a:	2401      	movs	r4, #1
 802629c:	e7ca      	b.n	8026234 <__gethex+0xd4>
 802629e:	f04f 0900 	mov.w	r9, #0
 80262a2:	1cb1      	adds	r1, r6, #2
 80262a4:	e7d3      	b.n	802624e <__gethex+0xee>
 80262a6:	f04f 0901 	mov.w	r9, #1
 80262aa:	e7fa      	b.n	80262a2 <__gethex+0x142>
 80262ac:	230a      	movs	r3, #10
 80262ae:	fb03 0202 	mla	r2, r3, r2, r0
 80262b2:	3a10      	subs	r2, #16
 80262b4:	e7d4      	b.n	8026260 <__gethex+0x100>
 80262b6:	4631      	mov	r1, r6
 80262b8:	e7df      	b.n	802627a <__gethex+0x11a>
 80262ba:	1bf3      	subs	r3, r6, r7
 80262bc:	3b01      	subs	r3, #1
 80262be:	4621      	mov	r1, r4
 80262c0:	2b07      	cmp	r3, #7
 80262c2:	dc0b      	bgt.n	80262dc <__gethex+0x17c>
 80262c4:	ee18 0a10 	vmov	r0, s16
 80262c8:	f000 faf8 	bl	80268bc <_Balloc>
 80262cc:	4604      	mov	r4, r0
 80262ce:	b940      	cbnz	r0, 80262e2 <__gethex+0x182>
 80262d0:	4b5d      	ldr	r3, [pc, #372]	; (8026448 <__gethex+0x2e8>)
 80262d2:	4602      	mov	r2, r0
 80262d4:	21de      	movs	r1, #222	; 0xde
 80262d6:	485d      	ldr	r0, [pc, #372]	; (802644c <__gethex+0x2ec>)
 80262d8:	f7fc fc72 	bl	8022bc0 <__assert_func>
 80262dc:	3101      	adds	r1, #1
 80262de:	105b      	asrs	r3, r3, #1
 80262e0:	e7ee      	b.n	80262c0 <__gethex+0x160>
 80262e2:	f100 0914 	add.w	r9, r0, #20
 80262e6:	f04f 0b00 	mov.w	fp, #0
 80262ea:	f1ca 0301 	rsb	r3, sl, #1
 80262ee:	f8cd 9008 	str.w	r9, [sp, #8]
 80262f2:	f8cd b000 	str.w	fp, [sp]
 80262f6:	9306      	str	r3, [sp, #24]
 80262f8:	42b7      	cmp	r7, r6
 80262fa:	d340      	bcc.n	802637e <__gethex+0x21e>
 80262fc:	9802      	ldr	r0, [sp, #8]
 80262fe:	9b00      	ldr	r3, [sp, #0]
 8026300:	f840 3b04 	str.w	r3, [r0], #4
 8026304:	eba0 0009 	sub.w	r0, r0, r9
 8026308:	1080      	asrs	r0, r0, #2
 802630a:	0146      	lsls	r6, r0, #5
 802630c:	6120      	str	r0, [r4, #16]
 802630e:	4618      	mov	r0, r3
 8026310:	f000 fbc6 	bl	8026aa0 <__hi0bits>
 8026314:	1a30      	subs	r0, r6, r0
 8026316:	f8d8 6000 	ldr.w	r6, [r8]
 802631a:	42b0      	cmp	r0, r6
 802631c:	dd63      	ble.n	80263e6 <__gethex+0x286>
 802631e:	1b87      	subs	r7, r0, r6
 8026320:	4639      	mov	r1, r7
 8026322:	4620      	mov	r0, r4
 8026324:	f000 ff6a 	bl	80271fc <__any_on>
 8026328:	4682      	mov	sl, r0
 802632a:	b1a8      	cbz	r0, 8026358 <__gethex+0x1f8>
 802632c:	1e7b      	subs	r3, r7, #1
 802632e:	1159      	asrs	r1, r3, #5
 8026330:	f003 021f 	and.w	r2, r3, #31
 8026334:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 8026338:	f04f 0a01 	mov.w	sl, #1
 802633c:	fa0a f202 	lsl.w	r2, sl, r2
 8026340:	420a      	tst	r2, r1
 8026342:	d009      	beq.n	8026358 <__gethex+0x1f8>
 8026344:	4553      	cmp	r3, sl
 8026346:	dd05      	ble.n	8026354 <__gethex+0x1f4>
 8026348:	1eb9      	subs	r1, r7, #2
 802634a:	4620      	mov	r0, r4
 802634c:	f000 ff56 	bl	80271fc <__any_on>
 8026350:	2800      	cmp	r0, #0
 8026352:	d145      	bne.n	80263e0 <__gethex+0x280>
 8026354:	f04f 0a02 	mov.w	sl, #2
 8026358:	4639      	mov	r1, r7
 802635a:	4620      	mov	r0, r4
 802635c:	f7ff fe99 	bl	8026092 <rshift>
 8026360:	443d      	add	r5, r7
 8026362:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8026366:	42ab      	cmp	r3, r5
 8026368:	da4c      	bge.n	8026404 <__gethex+0x2a4>
 802636a:	ee18 0a10 	vmov	r0, s16
 802636e:	4621      	mov	r1, r4
 8026370:	f000 fae4 	bl	802693c <_Bfree>
 8026374:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026376:	2300      	movs	r3, #0
 8026378:	6013      	str	r3, [r2, #0]
 802637a:	27a3      	movs	r7, #163	; 0xa3
 802637c:	e785      	b.n	802628a <__gethex+0x12a>
 802637e:	1e73      	subs	r3, r6, #1
 8026380:	9a05      	ldr	r2, [sp, #20]
 8026382:	9303      	str	r3, [sp, #12]
 8026384:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 8026388:	4293      	cmp	r3, r2
 802638a:	d019      	beq.n	80263c0 <__gethex+0x260>
 802638c:	f1bb 0f20 	cmp.w	fp, #32
 8026390:	d107      	bne.n	80263a2 <__gethex+0x242>
 8026392:	9b02      	ldr	r3, [sp, #8]
 8026394:	9a00      	ldr	r2, [sp, #0]
 8026396:	f843 2b04 	str.w	r2, [r3], #4
 802639a:	9302      	str	r3, [sp, #8]
 802639c:	2300      	movs	r3, #0
 802639e:	9300      	str	r3, [sp, #0]
 80263a0:	469b      	mov	fp, r3
 80263a2:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 80263a6:	f7ff fec6 	bl	8026136 <__hexdig_fun>
 80263aa:	9b00      	ldr	r3, [sp, #0]
 80263ac:	f000 000f 	and.w	r0, r0, #15
 80263b0:	fa00 f00b 	lsl.w	r0, r0, fp
 80263b4:	4303      	orrs	r3, r0
 80263b6:	9300      	str	r3, [sp, #0]
 80263b8:	f10b 0b04 	add.w	fp, fp, #4
 80263bc:	9b03      	ldr	r3, [sp, #12]
 80263be:	e00d      	b.n	80263dc <__gethex+0x27c>
 80263c0:	9b03      	ldr	r3, [sp, #12]
 80263c2:	9a06      	ldr	r2, [sp, #24]
 80263c4:	4413      	add	r3, r2
 80263c6:	42bb      	cmp	r3, r7
 80263c8:	d3e0      	bcc.n	802638c <__gethex+0x22c>
 80263ca:	4618      	mov	r0, r3
 80263cc:	9901      	ldr	r1, [sp, #4]
 80263ce:	9307      	str	r3, [sp, #28]
 80263d0:	4652      	mov	r2, sl
 80263d2:	f001 f968 	bl	80276a6 <strncmp>
 80263d6:	9b07      	ldr	r3, [sp, #28]
 80263d8:	2800      	cmp	r0, #0
 80263da:	d1d7      	bne.n	802638c <__gethex+0x22c>
 80263dc:	461e      	mov	r6, r3
 80263de:	e78b      	b.n	80262f8 <__gethex+0x198>
 80263e0:	f04f 0a03 	mov.w	sl, #3
 80263e4:	e7b8      	b.n	8026358 <__gethex+0x1f8>
 80263e6:	da0a      	bge.n	80263fe <__gethex+0x29e>
 80263e8:	1a37      	subs	r7, r6, r0
 80263ea:	4621      	mov	r1, r4
 80263ec:	ee18 0a10 	vmov	r0, s16
 80263f0:	463a      	mov	r2, r7
 80263f2:	f000 fcbf 	bl	8026d74 <__lshift>
 80263f6:	1bed      	subs	r5, r5, r7
 80263f8:	4604      	mov	r4, r0
 80263fa:	f100 0914 	add.w	r9, r0, #20
 80263fe:	f04f 0a00 	mov.w	sl, #0
 8026402:	e7ae      	b.n	8026362 <__gethex+0x202>
 8026404:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8026408:	42a8      	cmp	r0, r5
 802640a:	dd72      	ble.n	80264f2 <__gethex+0x392>
 802640c:	1b45      	subs	r5, r0, r5
 802640e:	42ae      	cmp	r6, r5
 8026410:	dc36      	bgt.n	8026480 <__gethex+0x320>
 8026412:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8026416:	2b02      	cmp	r3, #2
 8026418:	d02a      	beq.n	8026470 <__gethex+0x310>
 802641a:	2b03      	cmp	r3, #3
 802641c:	d02c      	beq.n	8026478 <__gethex+0x318>
 802641e:	2b01      	cmp	r3, #1
 8026420:	d11c      	bne.n	802645c <__gethex+0x2fc>
 8026422:	42ae      	cmp	r6, r5
 8026424:	d11a      	bne.n	802645c <__gethex+0x2fc>
 8026426:	2e01      	cmp	r6, #1
 8026428:	d112      	bne.n	8026450 <__gethex+0x2f0>
 802642a:	9a04      	ldr	r2, [sp, #16]
 802642c:	f8d8 3004 	ldr.w	r3, [r8, #4]
 8026430:	6013      	str	r3, [r2, #0]
 8026432:	2301      	movs	r3, #1
 8026434:	6123      	str	r3, [r4, #16]
 8026436:	f8c9 3000 	str.w	r3, [r9]
 802643a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 802643c:	2762      	movs	r7, #98	; 0x62
 802643e:	601c      	str	r4, [r3, #0]
 8026440:	e723      	b.n	802628a <__gethex+0x12a>
 8026442:	bf00      	nop
 8026444:	0802b100 	.word	0x0802b100
 8026448:	0802b028 	.word	0x0802b028
 802644c:	0802b09c 	.word	0x0802b09c
 8026450:	1e71      	subs	r1, r6, #1
 8026452:	4620      	mov	r0, r4
 8026454:	f000 fed2 	bl	80271fc <__any_on>
 8026458:	2800      	cmp	r0, #0
 802645a:	d1e6      	bne.n	802642a <__gethex+0x2ca>
 802645c:	ee18 0a10 	vmov	r0, s16
 8026460:	4621      	mov	r1, r4
 8026462:	f000 fa6b 	bl	802693c <_Bfree>
 8026466:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8026468:	2300      	movs	r3, #0
 802646a:	6013      	str	r3, [r2, #0]
 802646c:	2750      	movs	r7, #80	; 0x50
 802646e:	e70c      	b.n	802628a <__gethex+0x12a>
 8026470:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8026472:	2b00      	cmp	r3, #0
 8026474:	d1f2      	bne.n	802645c <__gethex+0x2fc>
 8026476:	e7d8      	b.n	802642a <__gethex+0x2ca>
 8026478:	9b15      	ldr	r3, [sp, #84]	; 0x54
 802647a:	2b00      	cmp	r3, #0
 802647c:	d1d5      	bne.n	802642a <__gethex+0x2ca>
 802647e:	e7ed      	b.n	802645c <__gethex+0x2fc>
 8026480:	1e6f      	subs	r7, r5, #1
 8026482:	f1ba 0f00 	cmp.w	sl, #0
 8026486:	d131      	bne.n	80264ec <__gethex+0x38c>
 8026488:	b127      	cbz	r7, 8026494 <__gethex+0x334>
 802648a:	4639      	mov	r1, r7
 802648c:	4620      	mov	r0, r4
 802648e:	f000 feb5 	bl	80271fc <__any_on>
 8026492:	4682      	mov	sl, r0
 8026494:	117b      	asrs	r3, r7, #5
 8026496:	2101      	movs	r1, #1
 8026498:	f859 3023 	ldr.w	r3, [r9, r3, lsl #2]
 802649c:	f007 071f 	and.w	r7, r7, #31
 80264a0:	fa01 f707 	lsl.w	r7, r1, r7
 80264a4:	421f      	tst	r7, r3
 80264a6:	4629      	mov	r1, r5
 80264a8:	4620      	mov	r0, r4
 80264aa:	bf18      	it	ne
 80264ac:	f04a 0a02 	orrne.w	sl, sl, #2
 80264b0:	1b76      	subs	r6, r6, r5
 80264b2:	f7ff fdee 	bl	8026092 <rshift>
 80264b6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80264ba:	2702      	movs	r7, #2
 80264bc:	f1ba 0f00 	cmp.w	sl, #0
 80264c0:	d048      	beq.n	8026554 <__gethex+0x3f4>
 80264c2:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80264c6:	2b02      	cmp	r3, #2
 80264c8:	d015      	beq.n	80264f6 <__gethex+0x396>
 80264ca:	2b03      	cmp	r3, #3
 80264cc:	d017      	beq.n	80264fe <__gethex+0x39e>
 80264ce:	2b01      	cmp	r3, #1
 80264d0:	d109      	bne.n	80264e6 <__gethex+0x386>
 80264d2:	f01a 0f02 	tst.w	sl, #2
 80264d6:	d006      	beq.n	80264e6 <__gethex+0x386>
 80264d8:	f8d9 0000 	ldr.w	r0, [r9]
 80264dc:	ea4a 0a00 	orr.w	sl, sl, r0
 80264e0:	f01a 0f01 	tst.w	sl, #1
 80264e4:	d10e      	bne.n	8026504 <__gethex+0x3a4>
 80264e6:	f047 0710 	orr.w	r7, r7, #16
 80264ea:	e033      	b.n	8026554 <__gethex+0x3f4>
 80264ec:	f04f 0a01 	mov.w	sl, #1
 80264f0:	e7d0      	b.n	8026494 <__gethex+0x334>
 80264f2:	2701      	movs	r7, #1
 80264f4:	e7e2      	b.n	80264bc <__gethex+0x35c>
 80264f6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80264f8:	f1c3 0301 	rsb	r3, r3, #1
 80264fc:	9315      	str	r3, [sp, #84]	; 0x54
 80264fe:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8026500:	2b00      	cmp	r3, #0
 8026502:	d0f0      	beq.n	80264e6 <__gethex+0x386>
 8026504:	f8d4 b010 	ldr.w	fp, [r4, #16]
 8026508:	f104 0314 	add.w	r3, r4, #20
 802650c:	ea4f 0a8b 	mov.w	sl, fp, lsl #2
 8026510:	eb03 018b 	add.w	r1, r3, fp, lsl #2
 8026514:	f04f 0c00 	mov.w	ip, #0
 8026518:	4618      	mov	r0, r3
 802651a:	f853 2b04 	ldr.w	r2, [r3], #4
 802651e:	f1b2 3fff 	cmp.w	r2, #4294967295
 8026522:	d01c      	beq.n	802655e <__gethex+0x3fe>
 8026524:	3201      	adds	r2, #1
 8026526:	6002      	str	r2, [r0, #0]
 8026528:	2f02      	cmp	r7, #2
 802652a:	f104 0314 	add.w	r3, r4, #20
 802652e:	d13f      	bne.n	80265b0 <__gethex+0x450>
 8026530:	f8d8 2000 	ldr.w	r2, [r8]
 8026534:	3a01      	subs	r2, #1
 8026536:	42b2      	cmp	r2, r6
 8026538:	d10a      	bne.n	8026550 <__gethex+0x3f0>
 802653a:	1171      	asrs	r1, r6, #5
 802653c:	2201      	movs	r2, #1
 802653e:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8026542:	f006 061f 	and.w	r6, r6, #31
 8026546:	fa02 f606 	lsl.w	r6, r2, r6
 802654a:	421e      	tst	r6, r3
 802654c:	bf18      	it	ne
 802654e:	4617      	movne	r7, r2
 8026550:	f047 0720 	orr.w	r7, r7, #32
 8026554:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8026556:	601c      	str	r4, [r3, #0]
 8026558:	9b04      	ldr	r3, [sp, #16]
 802655a:	601d      	str	r5, [r3, #0]
 802655c:	e695      	b.n	802628a <__gethex+0x12a>
 802655e:	4299      	cmp	r1, r3
 8026560:	f843 cc04 	str.w	ip, [r3, #-4]
 8026564:	d8d8      	bhi.n	8026518 <__gethex+0x3b8>
 8026566:	68a3      	ldr	r3, [r4, #8]
 8026568:	459b      	cmp	fp, r3
 802656a:	db19      	blt.n	80265a0 <__gethex+0x440>
 802656c:	6861      	ldr	r1, [r4, #4]
 802656e:	ee18 0a10 	vmov	r0, s16
 8026572:	3101      	adds	r1, #1
 8026574:	f000 f9a2 	bl	80268bc <_Balloc>
 8026578:	4681      	mov	r9, r0
 802657a:	b918      	cbnz	r0, 8026584 <__gethex+0x424>
 802657c:	4b1a      	ldr	r3, [pc, #104]	; (80265e8 <__gethex+0x488>)
 802657e:	4602      	mov	r2, r0
 8026580:	2184      	movs	r1, #132	; 0x84
 8026582:	e6a8      	b.n	80262d6 <__gethex+0x176>
 8026584:	6922      	ldr	r2, [r4, #16]
 8026586:	3202      	adds	r2, #2
 8026588:	f104 010c 	add.w	r1, r4, #12
 802658c:	0092      	lsls	r2, r2, #2
 802658e:	300c      	adds	r0, #12
 8026590:	f7fc fb94 	bl	8022cbc <memcpy>
 8026594:	4621      	mov	r1, r4
 8026596:	ee18 0a10 	vmov	r0, s16
 802659a:	f000 f9cf 	bl	802693c <_Bfree>
 802659e:	464c      	mov	r4, r9
 80265a0:	6923      	ldr	r3, [r4, #16]
 80265a2:	1c5a      	adds	r2, r3, #1
 80265a4:	eb04 0383 	add.w	r3, r4, r3, lsl #2
 80265a8:	6122      	str	r2, [r4, #16]
 80265aa:	2201      	movs	r2, #1
 80265ac:	615a      	str	r2, [r3, #20]
 80265ae:	e7bb      	b.n	8026528 <__gethex+0x3c8>
 80265b0:	6922      	ldr	r2, [r4, #16]
 80265b2:	455a      	cmp	r2, fp
 80265b4:	dd0b      	ble.n	80265ce <__gethex+0x46e>
 80265b6:	2101      	movs	r1, #1
 80265b8:	4620      	mov	r0, r4
 80265ba:	f7ff fd6a 	bl	8026092 <rshift>
 80265be:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80265c2:	3501      	adds	r5, #1
 80265c4:	42ab      	cmp	r3, r5
 80265c6:	f6ff aed0 	blt.w	802636a <__gethex+0x20a>
 80265ca:	2701      	movs	r7, #1
 80265cc:	e7c0      	b.n	8026550 <__gethex+0x3f0>
 80265ce:	f016 061f 	ands.w	r6, r6, #31
 80265d2:	d0fa      	beq.n	80265ca <__gethex+0x46a>
 80265d4:	4453      	add	r3, sl
 80265d6:	f1c6 0620 	rsb	r6, r6, #32
 80265da:	f853 0c04 	ldr.w	r0, [r3, #-4]
 80265de:	f000 fa5f 	bl	8026aa0 <__hi0bits>
 80265e2:	42b0      	cmp	r0, r6
 80265e4:	dbe7      	blt.n	80265b6 <__gethex+0x456>
 80265e6:	e7f0      	b.n	80265ca <__gethex+0x46a>
 80265e8:	0802b028 	.word	0x0802b028

080265ec <L_shift>:
 80265ec:	f1c2 0208 	rsb	r2, r2, #8
 80265f0:	0092      	lsls	r2, r2, #2
 80265f2:	b570      	push	{r4, r5, r6, lr}
 80265f4:	f1c2 0620 	rsb	r6, r2, #32
 80265f8:	6843      	ldr	r3, [r0, #4]
 80265fa:	6804      	ldr	r4, [r0, #0]
 80265fc:	fa03 f506 	lsl.w	r5, r3, r6
 8026600:	432c      	orrs	r4, r5
 8026602:	40d3      	lsrs	r3, r2
 8026604:	6004      	str	r4, [r0, #0]
 8026606:	f840 3f04 	str.w	r3, [r0, #4]!
 802660a:	4288      	cmp	r0, r1
 802660c:	d3f4      	bcc.n	80265f8 <L_shift+0xc>
 802660e:	bd70      	pop	{r4, r5, r6, pc}

08026610 <__match>:
 8026610:	b530      	push	{r4, r5, lr}
 8026612:	6803      	ldr	r3, [r0, #0]
 8026614:	3301      	adds	r3, #1
 8026616:	f811 4b01 	ldrb.w	r4, [r1], #1
 802661a:	b914      	cbnz	r4, 8026622 <__match+0x12>
 802661c:	6003      	str	r3, [r0, #0]
 802661e:	2001      	movs	r0, #1
 8026620:	bd30      	pop	{r4, r5, pc}
 8026622:	f813 2b01 	ldrb.w	r2, [r3], #1
 8026626:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 802662a:	2d19      	cmp	r5, #25
 802662c:	bf98      	it	ls
 802662e:	3220      	addls	r2, #32
 8026630:	42a2      	cmp	r2, r4
 8026632:	d0f0      	beq.n	8026616 <__match+0x6>
 8026634:	2000      	movs	r0, #0
 8026636:	e7f3      	b.n	8026620 <__match+0x10>

08026638 <__hexnan>:
 8026638:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802663c:	680b      	ldr	r3, [r1, #0]
 802663e:	115e      	asrs	r6, r3, #5
 8026640:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 8026644:	f013 031f 	ands.w	r3, r3, #31
 8026648:	b087      	sub	sp, #28
 802664a:	bf18      	it	ne
 802664c:	3604      	addne	r6, #4
 802664e:	2500      	movs	r5, #0
 8026650:	1f37      	subs	r7, r6, #4
 8026652:	4690      	mov	r8, r2
 8026654:	6802      	ldr	r2, [r0, #0]
 8026656:	9301      	str	r3, [sp, #4]
 8026658:	4682      	mov	sl, r0
 802665a:	f846 5c04 	str.w	r5, [r6, #-4]
 802665e:	46b9      	mov	r9, r7
 8026660:	463c      	mov	r4, r7
 8026662:	9502      	str	r5, [sp, #8]
 8026664:	46ab      	mov	fp, r5
 8026666:	7851      	ldrb	r1, [r2, #1]
 8026668:	1c53      	adds	r3, r2, #1
 802666a:	9303      	str	r3, [sp, #12]
 802666c:	b341      	cbz	r1, 80266c0 <__hexnan+0x88>
 802666e:	4608      	mov	r0, r1
 8026670:	9205      	str	r2, [sp, #20]
 8026672:	9104      	str	r1, [sp, #16]
 8026674:	f7ff fd5f 	bl	8026136 <__hexdig_fun>
 8026678:	2800      	cmp	r0, #0
 802667a:	d14f      	bne.n	802671c <__hexnan+0xe4>
 802667c:	9904      	ldr	r1, [sp, #16]
 802667e:	9a05      	ldr	r2, [sp, #20]
 8026680:	2920      	cmp	r1, #32
 8026682:	d818      	bhi.n	80266b6 <__hexnan+0x7e>
 8026684:	9b02      	ldr	r3, [sp, #8]
 8026686:	459b      	cmp	fp, r3
 8026688:	dd13      	ble.n	80266b2 <__hexnan+0x7a>
 802668a:	454c      	cmp	r4, r9
 802668c:	d206      	bcs.n	802669c <__hexnan+0x64>
 802668e:	2d07      	cmp	r5, #7
 8026690:	dc04      	bgt.n	802669c <__hexnan+0x64>
 8026692:	462a      	mov	r2, r5
 8026694:	4649      	mov	r1, r9
 8026696:	4620      	mov	r0, r4
 8026698:	f7ff ffa8 	bl	80265ec <L_shift>
 802669c:	4544      	cmp	r4, r8
 802669e:	d950      	bls.n	8026742 <__hexnan+0x10a>
 80266a0:	2300      	movs	r3, #0
 80266a2:	f1a4 0904 	sub.w	r9, r4, #4
 80266a6:	f844 3c04 	str.w	r3, [r4, #-4]
 80266aa:	f8cd b008 	str.w	fp, [sp, #8]
 80266ae:	464c      	mov	r4, r9
 80266b0:	461d      	mov	r5, r3
 80266b2:	9a03      	ldr	r2, [sp, #12]
 80266b4:	e7d7      	b.n	8026666 <__hexnan+0x2e>
 80266b6:	2929      	cmp	r1, #41	; 0x29
 80266b8:	d156      	bne.n	8026768 <__hexnan+0x130>
 80266ba:	3202      	adds	r2, #2
 80266bc:	f8ca 2000 	str.w	r2, [sl]
 80266c0:	f1bb 0f00 	cmp.w	fp, #0
 80266c4:	d050      	beq.n	8026768 <__hexnan+0x130>
 80266c6:	454c      	cmp	r4, r9
 80266c8:	d206      	bcs.n	80266d8 <__hexnan+0xa0>
 80266ca:	2d07      	cmp	r5, #7
 80266cc:	dc04      	bgt.n	80266d8 <__hexnan+0xa0>
 80266ce:	462a      	mov	r2, r5
 80266d0:	4649      	mov	r1, r9
 80266d2:	4620      	mov	r0, r4
 80266d4:	f7ff ff8a 	bl	80265ec <L_shift>
 80266d8:	4544      	cmp	r4, r8
 80266da:	d934      	bls.n	8026746 <__hexnan+0x10e>
 80266dc:	f1a8 0204 	sub.w	r2, r8, #4
 80266e0:	4623      	mov	r3, r4
 80266e2:	f853 1b04 	ldr.w	r1, [r3], #4
 80266e6:	f842 1f04 	str.w	r1, [r2, #4]!
 80266ea:	429f      	cmp	r7, r3
 80266ec:	d2f9      	bcs.n	80266e2 <__hexnan+0xaa>
 80266ee:	1b3b      	subs	r3, r7, r4
 80266f0:	f023 0303 	bic.w	r3, r3, #3
 80266f4:	3304      	adds	r3, #4
 80266f6:	3401      	adds	r4, #1
 80266f8:	3e03      	subs	r6, #3
 80266fa:	42b4      	cmp	r4, r6
 80266fc:	bf88      	it	hi
 80266fe:	2304      	movhi	r3, #4
 8026700:	4443      	add	r3, r8
 8026702:	2200      	movs	r2, #0
 8026704:	f843 2b04 	str.w	r2, [r3], #4
 8026708:	429f      	cmp	r7, r3
 802670a:	d2fb      	bcs.n	8026704 <__hexnan+0xcc>
 802670c:	683b      	ldr	r3, [r7, #0]
 802670e:	b91b      	cbnz	r3, 8026718 <__hexnan+0xe0>
 8026710:	4547      	cmp	r7, r8
 8026712:	d127      	bne.n	8026764 <__hexnan+0x12c>
 8026714:	2301      	movs	r3, #1
 8026716:	603b      	str	r3, [r7, #0]
 8026718:	2005      	movs	r0, #5
 802671a:	e026      	b.n	802676a <__hexnan+0x132>
 802671c:	3501      	adds	r5, #1
 802671e:	2d08      	cmp	r5, #8
 8026720:	f10b 0b01 	add.w	fp, fp, #1
 8026724:	dd06      	ble.n	8026734 <__hexnan+0xfc>
 8026726:	4544      	cmp	r4, r8
 8026728:	d9c3      	bls.n	80266b2 <__hexnan+0x7a>
 802672a:	2300      	movs	r3, #0
 802672c:	f844 3c04 	str.w	r3, [r4, #-4]
 8026730:	2501      	movs	r5, #1
 8026732:	3c04      	subs	r4, #4
 8026734:	6822      	ldr	r2, [r4, #0]
 8026736:	f000 000f 	and.w	r0, r0, #15
 802673a:	ea40 1202 	orr.w	r2, r0, r2, lsl #4
 802673e:	6022      	str	r2, [r4, #0]
 8026740:	e7b7      	b.n	80266b2 <__hexnan+0x7a>
 8026742:	2508      	movs	r5, #8
 8026744:	e7b5      	b.n	80266b2 <__hexnan+0x7a>
 8026746:	9b01      	ldr	r3, [sp, #4]
 8026748:	2b00      	cmp	r3, #0
 802674a:	d0df      	beq.n	802670c <__hexnan+0xd4>
 802674c:	f04f 32ff 	mov.w	r2, #4294967295
 8026750:	f1c3 0320 	rsb	r3, r3, #32
 8026754:	fa22 f303 	lsr.w	r3, r2, r3
 8026758:	f856 2c04 	ldr.w	r2, [r6, #-4]
 802675c:	401a      	ands	r2, r3
 802675e:	f846 2c04 	str.w	r2, [r6, #-4]
 8026762:	e7d3      	b.n	802670c <__hexnan+0xd4>
 8026764:	3f04      	subs	r7, #4
 8026766:	e7d1      	b.n	802670c <__hexnan+0xd4>
 8026768:	2004      	movs	r0, #4
 802676a:	b007      	add	sp, #28
 802676c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08026770 <_localeconv_r>:
 8026770:	4800      	ldr	r0, [pc, #0]	; (8026774 <_localeconv_r+0x4>)
 8026772:	4770      	bx	lr
 8026774:	20000258 	.word	0x20000258

08026778 <__retarget_lock_init_recursive>:
 8026778:	4770      	bx	lr

0802677a <__retarget_lock_acquire_recursive>:
 802677a:	4770      	bx	lr

0802677c <__retarget_lock_release>:
 802677c:	4770      	bx	lr

0802677e <__retarget_lock_release_recursive>:
 802677e:	4770      	bx	lr

08026780 <__swhatbuf_r>:
 8026780:	b570      	push	{r4, r5, r6, lr}
 8026782:	460e      	mov	r6, r1
 8026784:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026788:	2900      	cmp	r1, #0
 802678a:	b096      	sub	sp, #88	; 0x58
 802678c:	4614      	mov	r4, r2
 802678e:	461d      	mov	r5, r3
 8026790:	da08      	bge.n	80267a4 <__swhatbuf_r+0x24>
 8026792:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8026796:	2200      	movs	r2, #0
 8026798:	602a      	str	r2, [r5, #0]
 802679a:	061a      	lsls	r2, r3, #24
 802679c:	d410      	bmi.n	80267c0 <__swhatbuf_r+0x40>
 802679e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80267a2:	e00e      	b.n	80267c2 <__swhatbuf_r+0x42>
 80267a4:	466a      	mov	r2, sp
 80267a6:	f000 ffc1 	bl	802772c <_fstat_r>
 80267aa:	2800      	cmp	r0, #0
 80267ac:	dbf1      	blt.n	8026792 <__swhatbuf_r+0x12>
 80267ae:	9a01      	ldr	r2, [sp, #4]
 80267b0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 80267b4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 80267b8:	425a      	negs	r2, r3
 80267ba:	415a      	adcs	r2, r3
 80267bc:	602a      	str	r2, [r5, #0]
 80267be:	e7ee      	b.n	802679e <__swhatbuf_r+0x1e>
 80267c0:	2340      	movs	r3, #64	; 0x40
 80267c2:	2000      	movs	r0, #0
 80267c4:	6023      	str	r3, [r4, #0]
 80267c6:	b016      	add	sp, #88	; 0x58
 80267c8:	bd70      	pop	{r4, r5, r6, pc}
	...

080267cc <__smakebuf_r>:
 80267cc:	898b      	ldrh	r3, [r1, #12]
 80267ce:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80267d0:	079d      	lsls	r5, r3, #30
 80267d2:	4606      	mov	r6, r0
 80267d4:	460c      	mov	r4, r1
 80267d6:	d507      	bpl.n	80267e8 <__smakebuf_r+0x1c>
 80267d8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 80267dc:	6023      	str	r3, [r4, #0]
 80267de:	6123      	str	r3, [r4, #16]
 80267e0:	2301      	movs	r3, #1
 80267e2:	6163      	str	r3, [r4, #20]
 80267e4:	b002      	add	sp, #8
 80267e6:	bd70      	pop	{r4, r5, r6, pc}
 80267e8:	ab01      	add	r3, sp, #4
 80267ea:	466a      	mov	r2, sp
 80267ec:	f7ff ffc8 	bl	8026780 <__swhatbuf_r>
 80267f0:	9900      	ldr	r1, [sp, #0]
 80267f2:	4605      	mov	r5, r0
 80267f4:	4630      	mov	r0, r6
 80267f6:	f7fc fae3 	bl	8022dc0 <_malloc_r>
 80267fa:	b948      	cbnz	r0, 8026810 <__smakebuf_r+0x44>
 80267fc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026800:	059a      	lsls	r2, r3, #22
 8026802:	d4ef      	bmi.n	80267e4 <__smakebuf_r+0x18>
 8026804:	f023 0303 	bic.w	r3, r3, #3
 8026808:	f043 0302 	orr.w	r3, r3, #2
 802680c:	81a3      	strh	r3, [r4, #12]
 802680e:	e7e3      	b.n	80267d8 <__smakebuf_r+0xc>
 8026810:	4b0d      	ldr	r3, [pc, #52]	; (8026848 <__smakebuf_r+0x7c>)
 8026812:	62b3      	str	r3, [r6, #40]	; 0x28
 8026814:	89a3      	ldrh	r3, [r4, #12]
 8026816:	6020      	str	r0, [r4, #0]
 8026818:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 802681c:	81a3      	strh	r3, [r4, #12]
 802681e:	9b00      	ldr	r3, [sp, #0]
 8026820:	6163      	str	r3, [r4, #20]
 8026822:	9b01      	ldr	r3, [sp, #4]
 8026824:	6120      	str	r0, [r4, #16]
 8026826:	b15b      	cbz	r3, 8026840 <__smakebuf_r+0x74>
 8026828:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802682c:	4630      	mov	r0, r6
 802682e:	f000 ff8f 	bl	8027750 <_isatty_r>
 8026832:	b128      	cbz	r0, 8026840 <__smakebuf_r+0x74>
 8026834:	89a3      	ldrh	r3, [r4, #12]
 8026836:	f023 0303 	bic.w	r3, r3, #3
 802683a:	f043 0301 	orr.w	r3, r3, #1
 802683e:	81a3      	strh	r3, [r4, #12]
 8026840:	89a0      	ldrh	r0, [r4, #12]
 8026842:	4305      	orrs	r5, r0
 8026844:	81a5      	strh	r5, [r4, #12]
 8026846:	e7cd      	b.n	80267e4 <__smakebuf_r+0x18>
 8026848:	08025ef1 	.word	0x08025ef1

0802684c <__ascii_mbtowc>:
 802684c:	b082      	sub	sp, #8
 802684e:	b901      	cbnz	r1, 8026852 <__ascii_mbtowc+0x6>
 8026850:	a901      	add	r1, sp, #4
 8026852:	b142      	cbz	r2, 8026866 <__ascii_mbtowc+0x1a>
 8026854:	b14b      	cbz	r3, 802686a <__ascii_mbtowc+0x1e>
 8026856:	7813      	ldrb	r3, [r2, #0]
 8026858:	600b      	str	r3, [r1, #0]
 802685a:	7812      	ldrb	r2, [r2, #0]
 802685c:	1e10      	subs	r0, r2, #0
 802685e:	bf18      	it	ne
 8026860:	2001      	movne	r0, #1
 8026862:	b002      	add	sp, #8
 8026864:	4770      	bx	lr
 8026866:	4610      	mov	r0, r2
 8026868:	e7fb      	b.n	8026862 <__ascii_mbtowc+0x16>
 802686a:	f06f 0001 	mvn.w	r0, #1
 802686e:	e7f8      	b.n	8026862 <__ascii_mbtowc+0x16>

08026870 <memmove>:
 8026870:	4288      	cmp	r0, r1
 8026872:	b510      	push	{r4, lr}
 8026874:	eb01 0402 	add.w	r4, r1, r2
 8026878:	d902      	bls.n	8026880 <memmove+0x10>
 802687a:	4284      	cmp	r4, r0
 802687c:	4623      	mov	r3, r4
 802687e:	d807      	bhi.n	8026890 <memmove+0x20>
 8026880:	1e43      	subs	r3, r0, #1
 8026882:	42a1      	cmp	r1, r4
 8026884:	d008      	beq.n	8026898 <memmove+0x28>
 8026886:	f811 2b01 	ldrb.w	r2, [r1], #1
 802688a:	f803 2f01 	strb.w	r2, [r3, #1]!
 802688e:	e7f8      	b.n	8026882 <memmove+0x12>
 8026890:	4402      	add	r2, r0
 8026892:	4601      	mov	r1, r0
 8026894:	428a      	cmp	r2, r1
 8026896:	d100      	bne.n	802689a <memmove+0x2a>
 8026898:	bd10      	pop	{r4, pc}
 802689a:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 802689e:	f802 4d01 	strb.w	r4, [r2, #-1]!
 80268a2:	e7f7      	b.n	8026894 <memmove+0x24>

080268a4 <__malloc_lock>:
 80268a4:	4801      	ldr	r0, [pc, #4]	; (80268ac <__malloc_lock+0x8>)
 80268a6:	f7ff bf68 	b.w	802677a <__retarget_lock_acquire_recursive>
 80268aa:	bf00      	nop
 80268ac:	200139fd 	.word	0x200139fd

080268b0 <__malloc_unlock>:
 80268b0:	4801      	ldr	r0, [pc, #4]	; (80268b8 <__malloc_unlock+0x8>)
 80268b2:	f7ff bf64 	b.w	802677e <__retarget_lock_release_recursive>
 80268b6:	bf00      	nop
 80268b8:	200139fd 	.word	0x200139fd

080268bc <_Balloc>:
 80268bc:	b570      	push	{r4, r5, r6, lr}
 80268be:	6a46      	ldr	r6, [r0, #36]	; 0x24
 80268c0:	4604      	mov	r4, r0
 80268c2:	460d      	mov	r5, r1
 80268c4:	b976      	cbnz	r6, 80268e4 <_Balloc+0x28>
 80268c6:	2010      	movs	r0, #16
 80268c8:	f7fc f9e8 	bl	8022c9c <malloc>
 80268cc:	4602      	mov	r2, r0
 80268ce:	6260      	str	r0, [r4, #36]	; 0x24
 80268d0:	b920      	cbnz	r0, 80268dc <_Balloc+0x20>
 80268d2:	4b18      	ldr	r3, [pc, #96]	; (8026934 <_Balloc+0x78>)
 80268d4:	4818      	ldr	r0, [pc, #96]	; (8026938 <_Balloc+0x7c>)
 80268d6:	2166      	movs	r1, #102	; 0x66
 80268d8:	f7fc f972 	bl	8022bc0 <__assert_func>
 80268dc:	e9c0 6601 	strd	r6, r6, [r0, #4]
 80268e0:	6006      	str	r6, [r0, #0]
 80268e2:	60c6      	str	r6, [r0, #12]
 80268e4:	6a66      	ldr	r6, [r4, #36]	; 0x24
 80268e6:	68f3      	ldr	r3, [r6, #12]
 80268e8:	b183      	cbz	r3, 802690c <_Balloc+0x50>
 80268ea:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80268ec:	68db      	ldr	r3, [r3, #12]
 80268ee:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 80268f2:	b9b8      	cbnz	r0, 8026924 <_Balloc+0x68>
 80268f4:	2101      	movs	r1, #1
 80268f6:	fa01 f605 	lsl.w	r6, r1, r5
 80268fa:	1d72      	adds	r2, r6, #5
 80268fc:	0092      	lsls	r2, r2, #2
 80268fe:	4620      	mov	r0, r4
 8026900:	f000 fc9d 	bl	802723e <_calloc_r>
 8026904:	b160      	cbz	r0, 8026920 <_Balloc+0x64>
 8026906:	e9c0 5601 	strd	r5, r6, [r0, #4]
 802690a:	e00e      	b.n	802692a <_Balloc+0x6e>
 802690c:	2221      	movs	r2, #33	; 0x21
 802690e:	2104      	movs	r1, #4
 8026910:	4620      	mov	r0, r4
 8026912:	f000 fc94 	bl	802723e <_calloc_r>
 8026916:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8026918:	60f0      	str	r0, [r6, #12]
 802691a:	68db      	ldr	r3, [r3, #12]
 802691c:	2b00      	cmp	r3, #0
 802691e:	d1e4      	bne.n	80268ea <_Balloc+0x2e>
 8026920:	2000      	movs	r0, #0
 8026922:	bd70      	pop	{r4, r5, r6, pc}
 8026924:	6802      	ldr	r2, [r0, #0]
 8026926:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 802692a:	2300      	movs	r3, #0
 802692c:	e9c0 3303 	strd	r3, r3, [r0, #12]
 8026930:	e7f7      	b.n	8026922 <_Balloc+0x66>
 8026932:	bf00      	nop
 8026934:	0802afb6 	.word	0x0802afb6
 8026938:	0802b112 	.word	0x0802b112

0802693c <_Bfree>:
 802693c:	b570      	push	{r4, r5, r6, lr}
 802693e:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8026940:	4605      	mov	r5, r0
 8026942:	460c      	mov	r4, r1
 8026944:	b976      	cbnz	r6, 8026964 <_Bfree+0x28>
 8026946:	2010      	movs	r0, #16
 8026948:	f7fc f9a8 	bl	8022c9c <malloc>
 802694c:	4602      	mov	r2, r0
 802694e:	6268      	str	r0, [r5, #36]	; 0x24
 8026950:	b920      	cbnz	r0, 802695c <_Bfree+0x20>
 8026952:	4b09      	ldr	r3, [pc, #36]	; (8026978 <_Bfree+0x3c>)
 8026954:	4809      	ldr	r0, [pc, #36]	; (802697c <_Bfree+0x40>)
 8026956:	218a      	movs	r1, #138	; 0x8a
 8026958:	f7fc f932 	bl	8022bc0 <__assert_func>
 802695c:	e9c0 6601 	strd	r6, r6, [r0, #4]
 8026960:	6006      	str	r6, [r0, #0]
 8026962:	60c6      	str	r6, [r0, #12]
 8026964:	b13c      	cbz	r4, 8026976 <_Bfree+0x3a>
 8026966:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8026968:	6862      	ldr	r2, [r4, #4]
 802696a:	68db      	ldr	r3, [r3, #12]
 802696c:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8026970:	6021      	str	r1, [r4, #0]
 8026972:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 8026976:	bd70      	pop	{r4, r5, r6, pc}
 8026978:	0802afb6 	.word	0x0802afb6
 802697c:	0802b112 	.word	0x0802b112

08026980 <__multadd>:
 8026980:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026984:	690d      	ldr	r5, [r1, #16]
 8026986:	4607      	mov	r7, r0
 8026988:	460c      	mov	r4, r1
 802698a:	461e      	mov	r6, r3
 802698c:	f101 0c14 	add.w	ip, r1, #20
 8026990:	2000      	movs	r0, #0
 8026992:	f8dc 3000 	ldr.w	r3, [ip]
 8026996:	b299      	uxth	r1, r3
 8026998:	fb02 6101 	mla	r1, r2, r1, r6
 802699c:	0c1e      	lsrs	r6, r3, #16
 802699e:	0c0b      	lsrs	r3, r1, #16
 80269a0:	fb02 3306 	mla	r3, r2, r6, r3
 80269a4:	b289      	uxth	r1, r1
 80269a6:	3001      	adds	r0, #1
 80269a8:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 80269ac:	4285      	cmp	r5, r0
 80269ae:	f84c 1b04 	str.w	r1, [ip], #4
 80269b2:	ea4f 4613 	mov.w	r6, r3, lsr #16
 80269b6:	dcec      	bgt.n	8026992 <__multadd+0x12>
 80269b8:	b30e      	cbz	r6, 80269fe <__multadd+0x7e>
 80269ba:	68a3      	ldr	r3, [r4, #8]
 80269bc:	42ab      	cmp	r3, r5
 80269be:	dc19      	bgt.n	80269f4 <__multadd+0x74>
 80269c0:	6861      	ldr	r1, [r4, #4]
 80269c2:	4638      	mov	r0, r7
 80269c4:	3101      	adds	r1, #1
 80269c6:	f7ff ff79 	bl	80268bc <_Balloc>
 80269ca:	4680      	mov	r8, r0
 80269cc:	b928      	cbnz	r0, 80269da <__multadd+0x5a>
 80269ce:	4602      	mov	r2, r0
 80269d0:	4b0c      	ldr	r3, [pc, #48]	; (8026a04 <__multadd+0x84>)
 80269d2:	480d      	ldr	r0, [pc, #52]	; (8026a08 <__multadd+0x88>)
 80269d4:	21b5      	movs	r1, #181	; 0xb5
 80269d6:	f7fc f8f3 	bl	8022bc0 <__assert_func>
 80269da:	6922      	ldr	r2, [r4, #16]
 80269dc:	3202      	adds	r2, #2
 80269de:	f104 010c 	add.w	r1, r4, #12
 80269e2:	0092      	lsls	r2, r2, #2
 80269e4:	300c      	adds	r0, #12
 80269e6:	f7fc f969 	bl	8022cbc <memcpy>
 80269ea:	4621      	mov	r1, r4
 80269ec:	4638      	mov	r0, r7
 80269ee:	f7ff ffa5 	bl	802693c <_Bfree>
 80269f2:	4644      	mov	r4, r8
 80269f4:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 80269f8:	3501      	adds	r5, #1
 80269fa:	615e      	str	r6, [r3, #20]
 80269fc:	6125      	str	r5, [r4, #16]
 80269fe:	4620      	mov	r0, r4
 8026a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026a04:	0802b028 	.word	0x0802b028
 8026a08:	0802b112 	.word	0x0802b112

08026a0c <__s2b>:
 8026a0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026a10:	460c      	mov	r4, r1
 8026a12:	4615      	mov	r5, r2
 8026a14:	461f      	mov	r7, r3
 8026a16:	2209      	movs	r2, #9
 8026a18:	3308      	adds	r3, #8
 8026a1a:	4606      	mov	r6, r0
 8026a1c:	fb93 f3f2 	sdiv	r3, r3, r2
 8026a20:	2100      	movs	r1, #0
 8026a22:	2201      	movs	r2, #1
 8026a24:	429a      	cmp	r2, r3
 8026a26:	db09      	blt.n	8026a3c <__s2b+0x30>
 8026a28:	4630      	mov	r0, r6
 8026a2a:	f7ff ff47 	bl	80268bc <_Balloc>
 8026a2e:	b940      	cbnz	r0, 8026a42 <__s2b+0x36>
 8026a30:	4602      	mov	r2, r0
 8026a32:	4b19      	ldr	r3, [pc, #100]	; (8026a98 <__s2b+0x8c>)
 8026a34:	4819      	ldr	r0, [pc, #100]	; (8026a9c <__s2b+0x90>)
 8026a36:	21ce      	movs	r1, #206	; 0xce
 8026a38:	f7fc f8c2 	bl	8022bc0 <__assert_func>
 8026a3c:	0052      	lsls	r2, r2, #1
 8026a3e:	3101      	adds	r1, #1
 8026a40:	e7f0      	b.n	8026a24 <__s2b+0x18>
 8026a42:	9b08      	ldr	r3, [sp, #32]
 8026a44:	6143      	str	r3, [r0, #20]
 8026a46:	2d09      	cmp	r5, #9
 8026a48:	f04f 0301 	mov.w	r3, #1
 8026a4c:	6103      	str	r3, [r0, #16]
 8026a4e:	dd16      	ble.n	8026a7e <__s2b+0x72>
 8026a50:	f104 0909 	add.w	r9, r4, #9
 8026a54:	46c8      	mov	r8, r9
 8026a56:	442c      	add	r4, r5
 8026a58:	f818 3b01 	ldrb.w	r3, [r8], #1
 8026a5c:	4601      	mov	r1, r0
 8026a5e:	3b30      	subs	r3, #48	; 0x30
 8026a60:	220a      	movs	r2, #10
 8026a62:	4630      	mov	r0, r6
 8026a64:	f7ff ff8c 	bl	8026980 <__multadd>
 8026a68:	45a0      	cmp	r8, r4
 8026a6a:	d1f5      	bne.n	8026a58 <__s2b+0x4c>
 8026a6c:	f1a5 0408 	sub.w	r4, r5, #8
 8026a70:	444c      	add	r4, r9
 8026a72:	1b2d      	subs	r5, r5, r4
 8026a74:	1963      	adds	r3, r4, r5
 8026a76:	42bb      	cmp	r3, r7
 8026a78:	db04      	blt.n	8026a84 <__s2b+0x78>
 8026a7a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026a7e:	340a      	adds	r4, #10
 8026a80:	2509      	movs	r5, #9
 8026a82:	e7f6      	b.n	8026a72 <__s2b+0x66>
 8026a84:	f814 3b01 	ldrb.w	r3, [r4], #1
 8026a88:	4601      	mov	r1, r0
 8026a8a:	3b30      	subs	r3, #48	; 0x30
 8026a8c:	220a      	movs	r2, #10
 8026a8e:	4630      	mov	r0, r6
 8026a90:	f7ff ff76 	bl	8026980 <__multadd>
 8026a94:	e7ee      	b.n	8026a74 <__s2b+0x68>
 8026a96:	bf00      	nop
 8026a98:	0802b028 	.word	0x0802b028
 8026a9c:	0802b112 	.word	0x0802b112

08026aa0 <__hi0bits>:
 8026aa0:	0c03      	lsrs	r3, r0, #16
 8026aa2:	041b      	lsls	r3, r3, #16
 8026aa4:	b9d3      	cbnz	r3, 8026adc <__hi0bits+0x3c>
 8026aa6:	0400      	lsls	r0, r0, #16
 8026aa8:	2310      	movs	r3, #16
 8026aaa:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 8026aae:	bf04      	itt	eq
 8026ab0:	0200      	lsleq	r0, r0, #8
 8026ab2:	3308      	addeq	r3, #8
 8026ab4:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8026ab8:	bf04      	itt	eq
 8026aba:	0100      	lsleq	r0, r0, #4
 8026abc:	3304      	addeq	r3, #4
 8026abe:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 8026ac2:	bf04      	itt	eq
 8026ac4:	0080      	lsleq	r0, r0, #2
 8026ac6:	3302      	addeq	r3, #2
 8026ac8:	2800      	cmp	r0, #0
 8026aca:	db05      	blt.n	8026ad8 <__hi0bits+0x38>
 8026acc:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 8026ad0:	f103 0301 	add.w	r3, r3, #1
 8026ad4:	bf08      	it	eq
 8026ad6:	2320      	moveq	r3, #32
 8026ad8:	4618      	mov	r0, r3
 8026ada:	4770      	bx	lr
 8026adc:	2300      	movs	r3, #0
 8026ade:	e7e4      	b.n	8026aaa <__hi0bits+0xa>

08026ae0 <__lo0bits>:
 8026ae0:	6803      	ldr	r3, [r0, #0]
 8026ae2:	f013 0207 	ands.w	r2, r3, #7
 8026ae6:	4601      	mov	r1, r0
 8026ae8:	d00b      	beq.n	8026b02 <__lo0bits+0x22>
 8026aea:	07da      	lsls	r2, r3, #31
 8026aec:	d423      	bmi.n	8026b36 <__lo0bits+0x56>
 8026aee:	0798      	lsls	r0, r3, #30
 8026af0:	bf49      	itett	mi
 8026af2:	085b      	lsrmi	r3, r3, #1
 8026af4:	089b      	lsrpl	r3, r3, #2
 8026af6:	2001      	movmi	r0, #1
 8026af8:	600b      	strmi	r3, [r1, #0]
 8026afa:	bf5c      	itt	pl
 8026afc:	600b      	strpl	r3, [r1, #0]
 8026afe:	2002      	movpl	r0, #2
 8026b00:	4770      	bx	lr
 8026b02:	b298      	uxth	r0, r3
 8026b04:	b9a8      	cbnz	r0, 8026b32 <__lo0bits+0x52>
 8026b06:	0c1b      	lsrs	r3, r3, #16
 8026b08:	2010      	movs	r0, #16
 8026b0a:	b2da      	uxtb	r2, r3
 8026b0c:	b90a      	cbnz	r2, 8026b12 <__lo0bits+0x32>
 8026b0e:	3008      	adds	r0, #8
 8026b10:	0a1b      	lsrs	r3, r3, #8
 8026b12:	071a      	lsls	r2, r3, #28
 8026b14:	bf04      	itt	eq
 8026b16:	091b      	lsreq	r3, r3, #4
 8026b18:	3004      	addeq	r0, #4
 8026b1a:	079a      	lsls	r2, r3, #30
 8026b1c:	bf04      	itt	eq
 8026b1e:	089b      	lsreq	r3, r3, #2
 8026b20:	3002      	addeq	r0, #2
 8026b22:	07da      	lsls	r2, r3, #31
 8026b24:	d403      	bmi.n	8026b2e <__lo0bits+0x4e>
 8026b26:	085b      	lsrs	r3, r3, #1
 8026b28:	f100 0001 	add.w	r0, r0, #1
 8026b2c:	d005      	beq.n	8026b3a <__lo0bits+0x5a>
 8026b2e:	600b      	str	r3, [r1, #0]
 8026b30:	4770      	bx	lr
 8026b32:	4610      	mov	r0, r2
 8026b34:	e7e9      	b.n	8026b0a <__lo0bits+0x2a>
 8026b36:	2000      	movs	r0, #0
 8026b38:	4770      	bx	lr
 8026b3a:	2020      	movs	r0, #32
 8026b3c:	4770      	bx	lr
	...

08026b40 <__i2b>:
 8026b40:	b510      	push	{r4, lr}
 8026b42:	460c      	mov	r4, r1
 8026b44:	2101      	movs	r1, #1
 8026b46:	f7ff feb9 	bl	80268bc <_Balloc>
 8026b4a:	4602      	mov	r2, r0
 8026b4c:	b928      	cbnz	r0, 8026b5a <__i2b+0x1a>
 8026b4e:	4b05      	ldr	r3, [pc, #20]	; (8026b64 <__i2b+0x24>)
 8026b50:	4805      	ldr	r0, [pc, #20]	; (8026b68 <__i2b+0x28>)
 8026b52:	f44f 71a0 	mov.w	r1, #320	; 0x140
 8026b56:	f7fc f833 	bl	8022bc0 <__assert_func>
 8026b5a:	2301      	movs	r3, #1
 8026b5c:	6144      	str	r4, [r0, #20]
 8026b5e:	6103      	str	r3, [r0, #16]
 8026b60:	bd10      	pop	{r4, pc}
 8026b62:	bf00      	nop
 8026b64:	0802b028 	.word	0x0802b028
 8026b68:	0802b112 	.word	0x0802b112

08026b6c <__multiply>:
 8026b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026b70:	4691      	mov	r9, r2
 8026b72:	690a      	ldr	r2, [r1, #16]
 8026b74:	f8d9 3010 	ldr.w	r3, [r9, #16]
 8026b78:	429a      	cmp	r2, r3
 8026b7a:	bfb8      	it	lt
 8026b7c:	460b      	movlt	r3, r1
 8026b7e:	460c      	mov	r4, r1
 8026b80:	bfbc      	itt	lt
 8026b82:	464c      	movlt	r4, r9
 8026b84:	4699      	movlt	r9, r3
 8026b86:	6927      	ldr	r7, [r4, #16]
 8026b88:	f8d9 a010 	ldr.w	sl, [r9, #16]
 8026b8c:	68a3      	ldr	r3, [r4, #8]
 8026b8e:	6861      	ldr	r1, [r4, #4]
 8026b90:	eb07 060a 	add.w	r6, r7, sl
 8026b94:	42b3      	cmp	r3, r6
 8026b96:	b085      	sub	sp, #20
 8026b98:	bfb8      	it	lt
 8026b9a:	3101      	addlt	r1, #1
 8026b9c:	f7ff fe8e 	bl	80268bc <_Balloc>
 8026ba0:	b930      	cbnz	r0, 8026bb0 <__multiply+0x44>
 8026ba2:	4602      	mov	r2, r0
 8026ba4:	4b44      	ldr	r3, [pc, #272]	; (8026cb8 <__multiply+0x14c>)
 8026ba6:	4845      	ldr	r0, [pc, #276]	; (8026cbc <__multiply+0x150>)
 8026ba8:	f240 115d 	movw	r1, #349	; 0x15d
 8026bac:	f7fc f808 	bl	8022bc0 <__assert_func>
 8026bb0:	f100 0514 	add.w	r5, r0, #20
 8026bb4:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 8026bb8:	462b      	mov	r3, r5
 8026bba:	2200      	movs	r2, #0
 8026bbc:	4543      	cmp	r3, r8
 8026bbe:	d321      	bcc.n	8026c04 <__multiply+0x98>
 8026bc0:	f104 0314 	add.w	r3, r4, #20
 8026bc4:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 8026bc8:	f109 0314 	add.w	r3, r9, #20
 8026bcc:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 8026bd0:	9202      	str	r2, [sp, #8]
 8026bd2:	1b3a      	subs	r2, r7, r4
 8026bd4:	3a15      	subs	r2, #21
 8026bd6:	f022 0203 	bic.w	r2, r2, #3
 8026bda:	3204      	adds	r2, #4
 8026bdc:	f104 0115 	add.w	r1, r4, #21
 8026be0:	428f      	cmp	r7, r1
 8026be2:	bf38      	it	cc
 8026be4:	2204      	movcc	r2, #4
 8026be6:	9201      	str	r2, [sp, #4]
 8026be8:	9a02      	ldr	r2, [sp, #8]
 8026bea:	9303      	str	r3, [sp, #12]
 8026bec:	429a      	cmp	r2, r3
 8026bee:	d80c      	bhi.n	8026c0a <__multiply+0x9e>
 8026bf0:	2e00      	cmp	r6, #0
 8026bf2:	dd03      	ble.n	8026bfc <__multiply+0x90>
 8026bf4:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 8026bf8:	2b00      	cmp	r3, #0
 8026bfa:	d05a      	beq.n	8026cb2 <__multiply+0x146>
 8026bfc:	6106      	str	r6, [r0, #16]
 8026bfe:	b005      	add	sp, #20
 8026c00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026c04:	f843 2b04 	str.w	r2, [r3], #4
 8026c08:	e7d8      	b.n	8026bbc <__multiply+0x50>
 8026c0a:	f8b3 a000 	ldrh.w	sl, [r3]
 8026c0e:	f1ba 0f00 	cmp.w	sl, #0
 8026c12:	d024      	beq.n	8026c5e <__multiply+0xf2>
 8026c14:	f104 0e14 	add.w	lr, r4, #20
 8026c18:	46a9      	mov	r9, r5
 8026c1a:	f04f 0c00 	mov.w	ip, #0
 8026c1e:	f85e 2b04 	ldr.w	r2, [lr], #4
 8026c22:	f8d9 1000 	ldr.w	r1, [r9]
 8026c26:	fa1f fb82 	uxth.w	fp, r2
 8026c2a:	b289      	uxth	r1, r1
 8026c2c:	fb0a 110b 	mla	r1, sl, fp, r1
 8026c30:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 8026c34:	f8d9 2000 	ldr.w	r2, [r9]
 8026c38:	4461      	add	r1, ip
 8026c3a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8026c3e:	fb0a c20b 	mla	r2, sl, fp, ip
 8026c42:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8026c46:	b289      	uxth	r1, r1
 8026c48:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8026c4c:	4577      	cmp	r7, lr
 8026c4e:	f849 1b04 	str.w	r1, [r9], #4
 8026c52:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 8026c56:	d8e2      	bhi.n	8026c1e <__multiply+0xb2>
 8026c58:	9a01      	ldr	r2, [sp, #4]
 8026c5a:	f845 c002 	str.w	ip, [r5, r2]
 8026c5e:	9a03      	ldr	r2, [sp, #12]
 8026c60:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 8026c64:	3304      	adds	r3, #4
 8026c66:	f1b9 0f00 	cmp.w	r9, #0
 8026c6a:	d020      	beq.n	8026cae <__multiply+0x142>
 8026c6c:	6829      	ldr	r1, [r5, #0]
 8026c6e:	f104 0c14 	add.w	ip, r4, #20
 8026c72:	46ae      	mov	lr, r5
 8026c74:	f04f 0a00 	mov.w	sl, #0
 8026c78:	f8bc b000 	ldrh.w	fp, [ip]
 8026c7c:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8026c80:	fb09 220b 	mla	r2, r9, fp, r2
 8026c84:	4492      	add	sl, r2
 8026c86:	b289      	uxth	r1, r1
 8026c88:	ea41 410a 	orr.w	r1, r1, sl, lsl #16
 8026c8c:	f84e 1b04 	str.w	r1, [lr], #4
 8026c90:	f85c 2b04 	ldr.w	r2, [ip], #4
 8026c94:	f8be 1000 	ldrh.w	r1, [lr]
 8026c98:	0c12      	lsrs	r2, r2, #16
 8026c9a:	fb09 1102 	mla	r1, r9, r2, r1
 8026c9e:	eb01 411a 	add.w	r1, r1, sl, lsr #16
 8026ca2:	4567      	cmp	r7, ip
 8026ca4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 8026ca8:	d8e6      	bhi.n	8026c78 <__multiply+0x10c>
 8026caa:	9a01      	ldr	r2, [sp, #4]
 8026cac:	50a9      	str	r1, [r5, r2]
 8026cae:	3504      	adds	r5, #4
 8026cb0:	e79a      	b.n	8026be8 <__multiply+0x7c>
 8026cb2:	3e01      	subs	r6, #1
 8026cb4:	e79c      	b.n	8026bf0 <__multiply+0x84>
 8026cb6:	bf00      	nop
 8026cb8:	0802b028 	.word	0x0802b028
 8026cbc:	0802b112 	.word	0x0802b112

08026cc0 <__pow5mult>:
 8026cc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026cc4:	4615      	mov	r5, r2
 8026cc6:	f012 0203 	ands.w	r2, r2, #3
 8026cca:	4606      	mov	r6, r0
 8026ccc:	460f      	mov	r7, r1
 8026cce:	d007      	beq.n	8026ce0 <__pow5mult+0x20>
 8026cd0:	4c25      	ldr	r4, [pc, #148]	; (8026d68 <__pow5mult+0xa8>)
 8026cd2:	3a01      	subs	r2, #1
 8026cd4:	2300      	movs	r3, #0
 8026cd6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8026cda:	f7ff fe51 	bl	8026980 <__multadd>
 8026cde:	4607      	mov	r7, r0
 8026ce0:	10ad      	asrs	r5, r5, #2
 8026ce2:	d03d      	beq.n	8026d60 <__pow5mult+0xa0>
 8026ce4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8026ce6:	b97c      	cbnz	r4, 8026d08 <__pow5mult+0x48>
 8026ce8:	2010      	movs	r0, #16
 8026cea:	f7fb ffd7 	bl	8022c9c <malloc>
 8026cee:	4602      	mov	r2, r0
 8026cf0:	6270      	str	r0, [r6, #36]	; 0x24
 8026cf2:	b928      	cbnz	r0, 8026d00 <__pow5mult+0x40>
 8026cf4:	4b1d      	ldr	r3, [pc, #116]	; (8026d6c <__pow5mult+0xac>)
 8026cf6:	481e      	ldr	r0, [pc, #120]	; (8026d70 <__pow5mult+0xb0>)
 8026cf8:	f44f 71d7 	mov.w	r1, #430	; 0x1ae
 8026cfc:	f7fb ff60 	bl	8022bc0 <__assert_func>
 8026d00:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8026d04:	6004      	str	r4, [r0, #0]
 8026d06:	60c4      	str	r4, [r0, #12]
 8026d08:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8026d0c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8026d10:	b94c      	cbnz	r4, 8026d26 <__pow5mult+0x66>
 8026d12:	f240 2171 	movw	r1, #625	; 0x271
 8026d16:	4630      	mov	r0, r6
 8026d18:	f7ff ff12 	bl	8026b40 <__i2b>
 8026d1c:	2300      	movs	r3, #0
 8026d1e:	f8c8 0008 	str.w	r0, [r8, #8]
 8026d22:	4604      	mov	r4, r0
 8026d24:	6003      	str	r3, [r0, #0]
 8026d26:	f04f 0900 	mov.w	r9, #0
 8026d2a:	07eb      	lsls	r3, r5, #31
 8026d2c:	d50a      	bpl.n	8026d44 <__pow5mult+0x84>
 8026d2e:	4639      	mov	r1, r7
 8026d30:	4622      	mov	r2, r4
 8026d32:	4630      	mov	r0, r6
 8026d34:	f7ff ff1a 	bl	8026b6c <__multiply>
 8026d38:	4639      	mov	r1, r7
 8026d3a:	4680      	mov	r8, r0
 8026d3c:	4630      	mov	r0, r6
 8026d3e:	f7ff fdfd 	bl	802693c <_Bfree>
 8026d42:	4647      	mov	r7, r8
 8026d44:	106d      	asrs	r5, r5, #1
 8026d46:	d00b      	beq.n	8026d60 <__pow5mult+0xa0>
 8026d48:	6820      	ldr	r0, [r4, #0]
 8026d4a:	b938      	cbnz	r0, 8026d5c <__pow5mult+0x9c>
 8026d4c:	4622      	mov	r2, r4
 8026d4e:	4621      	mov	r1, r4
 8026d50:	4630      	mov	r0, r6
 8026d52:	f7ff ff0b 	bl	8026b6c <__multiply>
 8026d56:	6020      	str	r0, [r4, #0]
 8026d58:	f8c0 9000 	str.w	r9, [r0]
 8026d5c:	4604      	mov	r4, r0
 8026d5e:	e7e4      	b.n	8026d2a <__pow5mult+0x6a>
 8026d60:	4638      	mov	r0, r7
 8026d62:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8026d66:	bf00      	nop
 8026d68:	0802b260 	.word	0x0802b260
 8026d6c:	0802afb6 	.word	0x0802afb6
 8026d70:	0802b112 	.word	0x0802b112

08026d74 <__lshift>:
 8026d74:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8026d78:	460c      	mov	r4, r1
 8026d7a:	6849      	ldr	r1, [r1, #4]
 8026d7c:	6923      	ldr	r3, [r4, #16]
 8026d7e:	eb03 1862 	add.w	r8, r3, r2, asr #5
 8026d82:	68a3      	ldr	r3, [r4, #8]
 8026d84:	4607      	mov	r7, r0
 8026d86:	4691      	mov	r9, r2
 8026d88:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8026d8c:	f108 0601 	add.w	r6, r8, #1
 8026d90:	42b3      	cmp	r3, r6
 8026d92:	db0b      	blt.n	8026dac <__lshift+0x38>
 8026d94:	4638      	mov	r0, r7
 8026d96:	f7ff fd91 	bl	80268bc <_Balloc>
 8026d9a:	4605      	mov	r5, r0
 8026d9c:	b948      	cbnz	r0, 8026db2 <__lshift+0x3e>
 8026d9e:	4602      	mov	r2, r0
 8026da0:	4b2a      	ldr	r3, [pc, #168]	; (8026e4c <__lshift+0xd8>)
 8026da2:	482b      	ldr	r0, [pc, #172]	; (8026e50 <__lshift+0xdc>)
 8026da4:	f240 11d9 	movw	r1, #473	; 0x1d9
 8026da8:	f7fb ff0a 	bl	8022bc0 <__assert_func>
 8026dac:	3101      	adds	r1, #1
 8026dae:	005b      	lsls	r3, r3, #1
 8026db0:	e7ee      	b.n	8026d90 <__lshift+0x1c>
 8026db2:	2300      	movs	r3, #0
 8026db4:	f100 0114 	add.w	r1, r0, #20
 8026db8:	f100 0210 	add.w	r2, r0, #16
 8026dbc:	4618      	mov	r0, r3
 8026dbe:	4553      	cmp	r3, sl
 8026dc0:	db37      	blt.n	8026e32 <__lshift+0xbe>
 8026dc2:	6920      	ldr	r0, [r4, #16]
 8026dc4:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8026dc8:	f104 0314 	add.w	r3, r4, #20
 8026dcc:	f019 091f 	ands.w	r9, r9, #31
 8026dd0:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8026dd4:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8026dd8:	d02f      	beq.n	8026e3a <__lshift+0xc6>
 8026dda:	f1c9 0e20 	rsb	lr, r9, #32
 8026dde:	468a      	mov	sl, r1
 8026de0:	f04f 0c00 	mov.w	ip, #0
 8026de4:	681a      	ldr	r2, [r3, #0]
 8026de6:	fa02 f209 	lsl.w	r2, r2, r9
 8026dea:	ea42 020c 	orr.w	r2, r2, ip
 8026dee:	f84a 2b04 	str.w	r2, [sl], #4
 8026df2:	f853 2b04 	ldr.w	r2, [r3], #4
 8026df6:	4298      	cmp	r0, r3
 8026df8:	fa22 fc0e 	lsr.w	ip, r2, lr
 8026dfc:	d8f2      	bhi.n	8026de4 <__lshift+0x70>
 8026dfe:	1b03      	subs	r3, r0, r4
 8026e00:	3b15      	subs	r3, #21
 8026e02:	f023 0303 	bic.w	r3, r3, #3
 8026e06:	3304      	adds	r3, #4
 8026e08:	f104 0215 	add.w	r2, r4, #21
 8026e0c:	4290      	cmp	r0, r2
 8026e0e:	bf38      	it	cc
 8026e10:	2304      	movcc	r3, #4
 8026e12:	f841 c003 	str.w	ip, [r1, r3]
 8026e16:	f1bc 0f00 	cmp.w	ip, #0
 8026e1a:	d001      	beq.n	8026e20 <__lshift+0xac>
 8026e1c:	f108 0602 	add.w	r6, r8, #2
 8026e20:	3e01      	subs	r6, #1
 8026e22:	4638      	mov	r0, r7
 8026e24:	612e      	str	r6, [r5, #16]
 8026e26:	4621      	mov	r1, r4
 8026e28:	f7ff fd88 	bl	802693c <_Bfree>
 8026e2c:	4628      	mov	r0, r5
 8026e2e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026e32:	f842 0f04 	str.w	r0, [r2, #4]!
 8026e36:	3301      	adds	r3, #1
 8026e38:	e7c1      	b.n	8026dbe <__lshift+0x4a>
 8026e3a:	3904      	subs	r1, #4
 8026e3c:	f853 2b04 	ldr.w	r2, [r3], #4
 8026e40:	f841 2f04 	str.w	r2, [r1, #4]!
 8026e44:	4298      	cmp	r0, r3
 8026e46:	d8f9      	bhi.n	8026e3c <__lshift+0xc8>
 8026e48:	e7ea      	b.n	8026e20 <__lshift+0xac>
 8026e4a:	bf00      	nop
 8026e4c:	0802b028 	.word	0x0802b028
 8026e50:	0802b112 	.word	0x0802b112

08026e54 <__mcmp>:
 8026e54:	b530      	push	{r4, r5, lr}
 8026e56:	6902      	ldr	r2, [r0, #16]
 8026e58:	690c      	ldr	r4, [r1, #16]
 8026e5a:	1b12      	subs	r2, r2, r4
 8026e5c:	d10e      	bne.n	8026e7c <__mcmp+0x28>
 8026e5e:	f100 0314 	add.w	r3, r0, #20
 8026e62:	3114      	adds	r1, #20
 8026e64:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 8026e68:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 8026e6c:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 8026e70:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 8026e74:	42a5      	cmp	r5, r4
 8026e76:	d003      	beq.n	8026e80 <__mcmp+0x2c>
 8026e78:	d305      	bcc.n	8026e86 <__mcmp+0x32>
 8026e7a:	2201      	movs	r2, #1
 8026e7c:	4610      	mov	r0, r2
 8026e7e:	bd30      	pop	{r4, r5, pc}
 8026e80:	4283      	cmp	r3, r0
 8026e82:	d3f3      	bcc.n	8026e6c <__mcmp+0x18>
 8026e84:	e7fa      	b.n	8026e7c <__mcmp+0x28>
 8026e86:	f04f 32ff 	mov.w	r2, #4294967295
 8026e8a:	e7f7      	b.n	8026e7c <__mcmp+0x28>

08026e8c <__mdiff>:
 8026e8c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8026e90:	460c      	mov	r4, r1
 8026e92:	4606      	mov	r6, r0
 8026e94:	4611      	mov	r1, r2
 8026e96:	4620      	mov	r0, r4
 8026e98:	4690      	mov	r8, r2
 8026e9a:	f7ff ffdb 	bl	8026e54 <__mcmp>
 8026e9e:	1e05      	subs	r5, r0, #0
 8026ea0:	d110      	bne.n	8026ec4 <__mdiff+0x38>
 8026ea2:	4629      	mov	r1, r5
 8026ea4:	4630      	mov	r0, r6
 8026ea6:	f7ff fd09 	bl	80268bc <_Balloc>
 8026eaa:	b930      	cbnz	r0, 8026eba <__mdiff+0x2e>
 8026eac:	4b3a      	ldr	r3, [pc, #232]	; (8026f98 <__mdiff+0x10c>)
 8026eae:	4602      	mov	r2, r0
 8026eb0:	f240 2132 	movw	r1, #562	; 0x232
 8026eb4:	4839      	ldr	r0, [pc, #228]	; (8026f9c <__mdiff+0x110>)
 8026eb6:	f7fb fe83 	bl	8022bc0 <__assert_func>
 8026eba:	2301      	movs	r3, #1
 8026ebc:	e9c0 3504 	strd	r3, r5, [r0, #16]
 8026ec0:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8026ec4:	bfa4      	itt	ge
 8026ec6:	4643      	movge	r3, r8
 8026ec8:	46a0      	movge	r8, r4
 8026eca:	4630      	mov	r0, r6
 8026ecc:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8026ed0:	bfa6      	itte	ge
 8026ed2:	461c      	movge	r4, r3
 8026ed4:	2500      	movge	r5, #0
 8026ed6:	2501      	movlt	r5, #1
 8026ed8:	f7ff fcf0 	bl	80268bc <_Balloc>
 8026edc:	b920      	cbnz	r0, 8026ee8 <__mdiff+0x5c>
 8026ede:	4b2e      	ldr	r3, [pc, #184]	; (8026f98 <__mdiff+0x10c>)
 8026ee0:	4602      	mov	r2, r0
 8026ee2:	f44f 7110 	mov.w	r1, #576	; 0x240
 8026ee6:	e7e5      	b.n	8026eb4 <__mdiff+0x28>
 8026ee8:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8026eec:	6926      	ldr	r6, [r4, #16]
 8026eee:	60c5      	str	r5, [r0, #12]
 8026ef0:	f104 0914 	add.w	r9, r4, #20
 8026ef4:	f108 0514 	add.w	r5, r8, #20
 8026ef8:	f100 0e14 	add.w	lr, r0, #20
 8026efc:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 8026f00:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 8026f04:	f108 0210 	add.w	r2, r8, #16
 8026f08:	46f2      	mov	sl, lr
 8026f0a:	2100      	movs	r1, #0
 8026f0c:	f859 3b04 	ldr.w	r3, [r9], #4
 8026f10:	f852 bf04 	ldr.w	fp, [r2, #4]!
 8026f14:	fa1f f883 	uxth.w	r8, r3
 8026f18:	fa11 f18b 	uxtah	r1, r1, fp
 8026f1c:	0c1b      	lsrs	r3, r3, #16
 8026f1e:	eba1 0808 	sub.w	r8, r1, r8
 8026f22:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 8026f26:	eb03 4328 	add.w	r3, r3, r8, asr #16
 8026f2a:	fa1f f888 	uxth.w	r8, r8
 8026f2e:	1419      	asrs	r1, r3, #16
 8026f30:	454e      	cmp	r6, r9
 8026f32:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 8026f36:	f84a 3b04 	str.w	r3, [sl], #4
 8026f3a:	d8e7      	bhi.n	8026f0c <__mdiff+0x80>
 8026f3c:	1b33      	subs	r3, r6, r4
 8026f3e:	3b15      	subs	r3, #21
 8026f40:	f023 0303 	bic.w	r3, r3, #3
 8026f44:	3304      	adds	r3, #4
 8026f46:	3415      	adds	r4, #21
 8026f48:	42a6      	cmp	r6, r4
 8026f4a:	bf38      	it	cc
 8026f4c:	2304      	movcc	r3, #4
 8026f4e:	441d      	add	r5, r3
 8026f50:	4473      	add	r3, lr
 8026f52:	469e      	mov	lr, r3
 8026f54:	462e      	mov	r6, r5
 8026f56:	4566      	cmp	r6, ip
 8026f58:	d30e      	bcc.n	8026f78 <__mdiff+0xec>
 8026f5a:	f10c 0203 	add.w	r2, ip, #3
 8026f5e:	1b52      	subs	r2, r2, r5
 8026f60:	f022 0203 	bic.w	r2, r2, #3
 8026f64:	3d03      	subs	r5, #3
 8026f66:	45ac      	cmp	ip, r5
 8026f68:	bf38      	it	cc
 8026f6a:	2200      	movcc	r2, #0
 8026f6c:	441a      	add	r2, r3
 8026f6e:	f852 3d04 	ldr.w	r3, [r2, #-4]!
 8026f72:	b17b      	cbz	r3, 8026f94 <__mdiff+0x108>
 8026f74:	6107      	str	r7, [r0, #16]
 8026f76:	e7a3      	b.n	8026ec0 <__mdiff+0x34>
 8026f78:	f856 8b04 	ldr.w	r8, [r6], #4
 8026f7c:	fa11 f288 	uxtah	r2, r1, r8
 8026f80:	1414      	asrs	r4, r2, #16
 8026f82:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 8026f86:	b292      	uxth	r2, r2
 8026f88:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8026f8c:	f84e 2b04 	str.w	r2, [lr], #4
 8026f90:	1421      	asrs	r1, r4, #16
 8026f92:	e7e0      	b.n	8026f56 <__mdiff+0xca>
 8026f94:	3f01      	subs	r7, #1
 8026f96:	e7ea      	b.n	8026f6e <__mdiff+0xe2>
 8026f98:	0802b028 	.word	0x0802b028
 8026f9c:	0802b112 	.word	0x0802b112

08026fa0 <__ulp>:
 8026fa0:	b082      	sub	sp, #8
 8026fa2:	ed8d 0b00 	vstr	d0, [sp]
 8026fa6:	9b01      	ldr	r3, [sp, #4]
 8026fa8:	4912      	ldr	r1, [pc, #72]	; (8026ff4 <__ulp+0x54>)
 8026faa:	4019      	ands	r1, r3
 8026fac:	f1a1 7150 	sub.w	r1, r1, #54525952	; 0x3400000
 8026fb0:	2900      	cmp	r1, #0
 8026fb2:	dd05      	ble.n	8026fc0 <__ulp+0x20>
 8026fb4:	2200      	movs	r2, #0
 8026fb6:	460b      	mov	r3, r1
 8026fb8:	ec43 2b10 	vmov	d0, r2, r3
 8026fbc:	b002      	add	sp, #8
 8026fbe:	4770      	bx	lr
 8026fc0:	4249      	negs	r1, r1
 8026fc2:	f1b1 7fa0 	cmp.w	r1, #20971520	; 0x1400000
 8026fc6:	ea4f 5021 	mov.w	r0, r1, asr #20
 8026fca:	f04f 0200 	mov.w	r2, #0
 8026fce:	f04f 0300 	mov.w	r3, #0
 8026fd2:	da04      	bge.n	8026fde <__ulp+0x3e>
 8026fd4:	f44f 2100 	mov.w	r1, #524288	; 0x80000
 8026fd8:	fa41 f300 	asr.w	r3, r1, r0
 8026fdc:	e7ec      	b.n	8026fb8 <__ulp+0x18>
 8026fde:	f1a0 0114 	sub.w	r1, r0, #20
 8026fe2:	291e      	cmp	r1, #30
 8026fe4:	bfda      	itte	le
 8026fe6:	f04f 4000 	movle.w	r0, #2147483648	; 0x80000000
 8026fea:	fa20 f101 	lsrle.w	r1, r0, r1
 8026fee:	2101      	movgt	r1, #1
 8026ff0:	460a      	mov	r2, r1
 8026ff2:	e7e1      	b.n	8026fb8 <__ulp+0x18>
 8026ff4:	7ff00000 	.word	0x7ff00000

08026ff8 <__b2d>:
 8026ff8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026ffa:	6905      	ldr	r5, [r0, #16]
 8026ffc:	f100 0714 	add.w	r7, r0, #20
 8027000:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8027004:	1f2e      	subs	r6, r5, #4
 8027006:	f855 4c04 	ldr.w	r4, [r5, #-4]
 802700a:	4620      	mov	r0, r4
 802700c:	f7ff fd48 	bl	8026aa0 <__hi0bits>
 8027010:	f1c0 0320 	rsb	r3, r0, #32
 8027014:	280a      	cmp	r0, #10
 8027016:	f8df c07c 	ldr.w	ip, [pc, #124]	; 8027094 <__b2d+0x9c>
 802701a:	600b      	str	r3, [r1, #0]
 802701c:	dc14      	bgt.n	8027048 <__b2d+0x50>
 802701e:	f1c0 0e0b 	rsb	lr, r0, #11
 8027022:	fa24 f10e 	lsr.w	r1, r4, lr
 8027026:	42b7      	cmp	r7, r6
 8027028:	ea41 030c 	orr.w	r3, r1, ip
 802702c:	bf34      	ite	cc
 802702e:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8027032:	2100      	movcs	r1, #0
 8027034:	3015      	adds	r0, #21
 8027036:	fa04 f000 	lsl.w	r0, r4, r0
 802703a:	fa21 f10e 	lsr.w	r1, r1, lr
 802703e:	ea40 0201 	orr.w	r2, r0, r1
 8027042:	ec43 2b10 	vmov	d0, r2, r3
 8027046:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8027048:	42b7      	cmp	r7, r6
 802704a:	bf3a      	itte	cc
 802704c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8027050:	f1a5 0608 	subcc.w	r6, r5, #8
 8027054:	2100      	movcs	r1, #0
 8027056:	380b      	subs	r0, #11
 8027058:	d017      	beq.n	802708a <__b2d+0x92>
 802705a:	f1c0 0c20 	rsb	ip, r0, #32
 802705e:	fa04 f500 	lsl.w	r5, r4, r0
 8027062:	42be      	cmp	r6, r7
 8027064:	fa21 f40c 	lsr.w	r4, r1, ip
 8027068:	ea45 0504 	orr.w	r5, r5, r4
 802706c:	bf8c      	ite	hi
 802706e:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8027072:	2400      	movls	r4, #0
 8027074:	f045 537f 	orr.w	r3, r5, #1069547520	; 0x3fc00000
 8027078:	fa01 f000 	lsl.w	r0, r1, r0
 802707c:	fa24 f40c 	lsr.w	r4, r4, ip
 8027080:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 8027084:	ea40 0204 	orr.w	r2, r0, r4
 8027088:	e7db      	b.n	8027042 <__b2d+0x4a>
 802708a:	ea44 030c 	orr.w	r3, r4, ip
 802708e:	460a      	mov	r2, r1
 8027090:	e7d7      	b.n	8027042 <__b2d+0x4a>
 8027092:	bf00      	nop
 8027094:	3ff00000 	.word	0x3ff00000

08027098 <__d2b>:
 8027098:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 802709c:	4689      	mov	r9, r1
 802709e:	2101      	movs	r1, #1
 80270a0:	ec57 6b10 	vmov	r6, r7, d0
 80270a4:	4690      	mov	r8, r2
 80270a6:	f7ff fc09 	bl	80268bc <_Balloc>
 80270aa:	4604      	mov	r4, r0
 80270ac:	b930      	cbnz	r0, 80270bc <__d2b+0x24>
 80270ae:	4602      	mov	r2, r0
 80270b0:	4b25      	ldr	r3, [pc, #148]	; (8027148 <__d2b+0xb0>)
 80270b2:	4826      	ldr	r0, [pc, #152]	; (802714c <__d2b+0xb4>)
 80270b4:	f240 310a 	movw	r1, #778	; 0x30a
 80270b8:	f7fb fd82 	bl	8022bc0 <__assert_func>
 80270bc:	f3c7 550a 	ubfx	r5, r7, #20, #11
 80270c0:	f3c7 0313 	ubfx	r3, r7, #0, #20
 80270c4:	bb35      	cbnz	r5, 8027114 <__d2b+0x7c>
 80270c6:	2e00      	cmp	r6, #0
 80270c8:	9301      	str	r3, [sp, #4]
 80270ca:	d028      	beq.n	802711e <__d2b+0x86>
 80270cc:	4668      	mov	r0, sp
 80270ce:	9600      	str	r6, [sp, #0]
 80270d0:	f7ff fd06 	bl	8026ae0 <__lo0bits>
 80270d4:	9900      	ldr	r1, [sp, #0]
 80270d6:	b300      	cbz	r0, 802711a <__d2b+0x82>
 80270d8:	9a01      	ldr	r2, [sp, #4]
 80270da:	f1c0 0320 	rsb	r3, r0, #32
 80270de:	fa02 f303 	lsl.w	r3, r2, r3
 80270e2:	430b      	orrs	r3, r1
 80270e4:	40c2      	lsrs	r2, r0
 80270e6:	6163      	str	r3, [r4, #20]
 80270e8:	9201      	str	r2, [sp, #4]
 80270ea:	9b01      	ldr	r3, [sp, #4]
 80270ec:	61a3      	str	r3, [r4, #24]
 80270ee:	2b00      	cmp	r3, #0
 80270f0:	bf14      	ite	ne
 80270f2:	2202      	movne	r2, #2
 80270f4:	2201      	moveq	r2, #1
 80270f6:	6122      	str	r2, [r4, #16]
 80270f8:	b1d5      	cbz	r5, 8027130 <__d2b+0x98>
 80270fa:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 80270fe:	4405      	add	r5, r0
 8027100:	f8c9 5000 	str.w	r5, [r9]
 8027104:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8027108:	f8c8 0000 	str.w	r0, [r8]
 802710c:	4620      	mov	r0, r4
 802710e:	b003      	add	sp, #12
 8027110:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8027114:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8027118:	e7d5      	b.n	80270c6 <__d2b+0x2e>
 802711a:	6161      	str	r1, [r4, #20]
 802711c:	e7e5      	b.n	80270ea <__d2b+0x52>
 802711e:	a801      	add	r0, sp, #4
 8027120:	f7ff fcde 	bl	8026ae0 <__lo0bits>
 8027124:	9b01      	ldr	r3, [sp, #4]
 8027126:	6163      	str	r3, [r4, #20]
 8027128:	2201      	movs	r2, #1
 802712a:	6122      	str	r2, [r4, #16]
 802712c:	3020      	adds	r0, #32
 802712e:	e7e3      	b.n	80270f8 <__d2b+0x60>
 8027130:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8027134:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8027138:	f8c9 0000 	str.w	r0, [r9]
 802713c:	6918      	ldr	r0, [r3, #16]
 802713e:	f7ff fcaf 	bl	8026aa0 <__hi0bits>
 8027142:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 8027146:	e7df      	b.n	8027108 <__d2b+0x70>
 8027148:	0802b028 	.word	0x0802b028
 802714c:	0802b112 	.word	0x0802b112

08027150 <__ratio>:
 8027150:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027154:	4688      	mov	r8, r1
 8027156:	4669      	mov	r1, sp
 8027158:	4681      	mov	r9, r0
 802715a:	f7ff ff4d 	bl	8026ff8 <__b2d>
 802715e:	a901      	add	r1, sp, #4
 8027160:	4640      	mov	r0, r8
 8027162:	ec55 4b10 	vmov	r4, r5, d0
 8027166:	f7ff ff47 	bl	8026ff8 <__b2d>
 802716a:	f8d9 3010 	ldr.w	r3, [r9, #16]
 802716e:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8027172:	eba3 0c02 	sub.w	ip, r3, r2
 8027176:	e9dd 3200 	ldrd	r3, r2, [sp]
 802717a:	1a9b      	subs	r3, r3, r2
 802717c:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 8027180:	ec51 0b10 	vmov	r0, r1, d0
 8027184:	2b00      	cmp	r3, #0
 8027186:	bfd6      	itet	le
 8027188:	460a      	movle	r2, r1
 802718a:	462a      	movgt	r2, r5
 802718c:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 8027190:	468b      	mov	fp, r1
 8027192:	462f      	mov	r7, r5
 8027194:	bfd4      	ite	le
 8027196:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 802719a:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 802719e:	4620      	mov	r0, r4
 80271a0:	ee10 2a10 	vmov	r2, s0
 80271a4:	465b      	mov	r3, fp
 80271a6:	4639      	mov	r1, r7
 80271a8:	f7d9 fb60 	bl	800086c <__aeabi_ddiv>
 80271ac:	ec41 0b10 	vmov	d0, r0, r1
 80271b0:	b003      	add	sp, #12
 80271b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080271b6 <__copybits>:
 80271b6:	3901      	subs	r1, #1
 80271b8:	b570      	push	{r4, r5, r6, lr}
 80271ba:	1149      	asrs	r1, r1, #5
 80271bc:	6914      	ldr	r4, [r2, #16]
 80271be:	3101      	adds	r1, #1
 80271c0:	f102 0314 	add.w	r3, r2, #20
 80271c4:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80271c8:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80271cc:	1f05      	subs	r5, r0, #4
 80271ce:	42a3      	cmp	r3, r4
 80271d0:	d30c      	bcc.n	80271ec <__copybits+0x36>
 80271d2:	1aa3      	subs	r3, r4, r2
 80271d4:	3b11      	subs	r3, #17
 80271d6:	f023 0303 	bic.w	r3, r3, #3
 80271da:	3211      	adds	r2, #17
 80271dc:	42a2      	cmp	r2, r4
 80271de:	bf88      	it	hi
 80271e0:	2300      	movhi	r3, #0
 80271e2:	4418      	add	r0, r3
 80271e4:	2300      	movs	r3, #0
 80271e6:	4288      	cmp	r0, r1
 80271e8:	d305      	bcc.n	80271f6 <__copybits+0x40>
 80271ea:	bd70      	pop	{r4, r5, r6, pc}
 80271ec:	f853 6b04 	ldr.w	r6, [r3], #4
 80271f0:	f845 6f04 	str.w	r6, [r5, #4]!
 80271f4:	e7eb      	b.n	80271ce <__copybits+0x18>
 80271f6:	f840 3b04 	str.w	r3, [r0], #4
 80271fa:	e7f4      	b.n	80271e6 <__copybits+0x30>

080271fc <__any_on>:
 80271fc:	f100 0214 	add.w	r2, r0, #20
 8027200:	6900      	ldr	r0, [r0, #16]
 8027202:	114b      	asrs	r3, r1, #5
 8027204:	4298      	cmp	r0, r3
 8027206:	b510      	push	{r4, lr}
 8027208:	db11      	blt.n	802722e <__any_on+0x32>
 802720a:	dd0a      	ble.n	8027222 <__any_on+0x26>
 802720c:	f011 011f 	ands.w	r1, r1, #31
 8027210:	d007      	beq.n	8027222 <__any_on+0x26>
 8027212:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8027216:	fa24 f001 	lsr.w	r0, r4, r1
 802721a:	fa00 f101 	lsl.w	r1, r0, r1
 802721e:	428c      	cmp	r4, r1
 8027220:	d10b      	bne.n	802723a <__any_on+0x3e>
 8027222:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8027226:	4293      	cmp	r3, r2
 8027228:	d803      	bhi.n	8027232 <__any_on+0x36>
 802722a:	2000      	movs	r0, #0
 802722c:	bd10      	pop	{r4, pc}
 802722e:	4603      	mov	r3, r0
 8027230:	e7f7      	b.n	8027222 <__any_on+0x26>
 8027232:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8027236:	2900      	cmp	r1, #0
 8027238:	d0f5      	beq.n	8027226 <__any_on+0x2a>
 802723a:	2001      	movs	r0, #1
 802723c:	e7f6      	b.n	802722c <__any_on+0x30>

0802723e <_calloc_r>:
 802723e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8027240:	fba1 2402 	umull	r2, r4, r1, r2
 8027244:	b94c      	cbnz	r4, 802725a <_calloc_r+0x1c>
 8027246:	4611      	mov	r1, r2
 8027248:	9201      	str	r2, [sp, #4]
 802724a:	f7fb fdb9 	bl	8022dc0 <_malloc_r>
 802724e:	9a01      	ldr	r2, [sp, #4]
 8027250:	4605      	mov	r5, r0
 8027252:	b930      	cbnz	r0, 8027262 <_calloc_r+0x24>
 8027254:	4628      	mov	r0, r5
 8027256:	b003      	add	sp, #12
 8027258:	bd30      	pop	{r4, r5, pc}
 802725a:	220c      	movs	r2, #12
 802725c:	6002      	str	r2, [r0, #0]
 802725e:	2500      	movs	r5, #0
 8027260:	e7f8      	b.n	8027254 <_calloc_r+0x16>
 8027262:	4621      	mov	r1, r4
 8027264:	f7fb fd38 	bl	8022cd8 <memset>
 8027268:	e7f4      	b.n	8027254 <_calloc_r+0x16>

0802726a <_realloc_r>:
 802726a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802726e:	4680      	mov	r8, r0
 8027270:	4614      	mov	r4, r2
 8027272:	460e      	mov	r6, r1
 8027274:	b921      	cbnz	r1, 8027280 <_realloc_r+0x16>
 8027276:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802727a:	4611      	mov	r1, r2
 802727c:	f7fb bda0 	b.w	8022dc0 <_malloc_r>
 8027280:	b92a      	cbnz	r2, 802728e <_realloc_r+0x24>
 8027282:	f7fb fd31 	bl	8022ce8 <_free_r>
 8027286:	4625      	mov	r5, r4
 8027288:	4628      	mov	r0, r5
 802728a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802728e:	f000 fa81 	bl	8027794 <_malloc_usable_size_r>
 8027292:	4284      	cmp	r4, r0
 8027294:	4607      	mov	r7, r0
 8027296:	d802      	bhi.n	802729e <_realloc_r+0x34>
 8027298:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 802729c:	d812      	bhi.n	80272c4 <_realloc_r+0x5a>
 802729e:	4621      	mov	r1, r4
 80272a0:	4640      	mov	r0, r8
 80272a2:	f7fb fd8d 	bl	8022dc0 <_malloc_r>
 80272a6:	4605      	mov	r5, r0
 80272a8:	2800      	cmp	r0, #0
 80272aa:	d0ed      	beq.n	8027288 <_realloc_r+0x1e>
 80272ac:	42bc      	cmp	r4, r7
 80272ae:	4622      	mov	r2, r4
 80272b0:	4631      	mov	r1, r6
 80272b2:	bf28      	it	cs
 80272b4:	463a      	movcs	r2, r7
 80272b6:	f7fb fd01 	bl	8022cbc <memcpy>
 80272ba:	4631      	mov	r1, r6
 80272bc:	4640      	mov	r0, r8
 80272be:	f7fb fd13 	bl	8022ce8 <_free_r>
 80272c2:	e7e1      	b.n	8027288 <_realloc_r+0x1e>
 80272c4:	4635      	mov	r5, r6
 80272c6:	e7df      	b.n	8027288 <_realloc_r+0x1e>

080272c8 <__ssputs_r>:
 80272c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80272cc:	688e      	ldr	r6, [r1, #8]
 80272ce:	429e      	cmp	r6, r3
 80272d0:	4682      	mov	sl, r0
 80272d2:	460c      	mov	r4, r1
 80272d4:	4690      	mov	r8, r2
 80272d6:	461f      	mov	r7, r3
 80272d8:	d838      	bhi.n	802734c <__ssputs_r+0x84>
 80272da:	898a      	ldrh	r2, [r1, #12]
 80272dc:	f412 6f90 	tst.w	r2, #1152	; 0x480
 80272e0:	d032      	beq.n	8027348 <__ssputs_r+0x80>
 80272e2:	6825      	ldr	r5, [r4, #0]
 80272e4:	6909      	ldr	r1, [r1, #16]
 80272e6:	eba5 0901 	sub.w	r9, r5, r1
 80272ea:	6965      	ldr	r5, [r4, #20]
 80272ec:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 80272f0:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 80272f4:	3301      	adds	r3, #1
 80272f6:	444b      	add	r3, r9
 80272f8:	106d      	asrs	r5, r5, #1
 80272fa:	429d      	cmp	r5, r3
 80272fc:	bf38      	it	cc
 80272fe:	461d      	movcc	r5, r3
 8027300:	0553      	lsls	r3, r2, #21
 8027302:	d531      	bpl.n	8027368 <__ssputs_r+0xa0>
 8027304:	4629      	mov	r1, r5
 8027306:	f7fb fd5b 	bl	8022dc0 <_malloc_r>
 802730a:	4606      	mov	r6, r0
 802730c:	b950      	cbnz	r0, 8027324 <__ssputs_r+0x5c>
 802730e:	230c      	movs	r3, #12
 8027310:	f8ca 3000 	str.w	r3, [sl]
 8027314:	89a3      	ldrh	r3, [r4, #12]
 8027316:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 802731a:	81a3      	strh	r3, [r4, #12]
 802731c:	f04f 30ff 	mov.w	r0, #4294967295
 8027320:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8027324:	6921      	ldr	r1, [r4, #16]
 8027326:	464a      	mov	r2, r9
 8027328:	f7fb fcc8 	bl	8022cbc <memcpy>
 802732c:	89a3      	ldrh	r3, [r4, #12]
 802732e:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 8027332:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8027336:	81a3      	strh	r3, [r4, #12]
 8027338:	6126      	str	r6, [r4, #16]
 802733a:	6165      	str	r5, [r4, #20]
 802733c:	444e      	add	r6, r9
 802733e:	eba5 0509 	sub.w	r5, r5, r9
 8027342:	6026      	str	r6, [r4, #0]
 8027344:	60a5      	str	r5, [r4, #8]
 8027346:	463e      	mov	r6, r7
 8027348:	42be      	cmp	r6, r7
 802734a:	d900      	bls.n	802734e <__ssputs_r+0x86>
 802734c:	463e      	mov	r6, r7
 802734e:	6820      	ldr	r0, [r4, #0]
 8027350:	4632      	mov	r2, r6
 8027352:	4641      	mov	r1, r8
 8027354:	f7ff fa8c 	bl	8026870 <memmove>
 8027358:	68a3      	ldr	r3, [r4, #8]
 802735a:	1b9b      	subs	r3, r3, r6
 802735c:	60a3      	str	r3, [r4, #8]
 802735e:	6823      	ldr	r3, [r4, #0]
 8027360:	4433      	add	r3, r6
 8027362:	6023      	str	r3, [r4, #0]
 8027364:	2000      	movs	r0, #0
 8027366:	e7db      	b.n	8027320 <__ssputs_r+0x58>
 8027368:	462a      	mov	r2, r5
 802736a:	f7ff ff7e 	bl	802726a <_realloc_r>
 802736e:	4606      	mov	r6, r0
 8027370:	2800      	cmp	r0, #0
 8027372:	d1e1      	bne.n	8027338 <__ssputs_r+0x70>
 8027374:	6921      	ldr	r1, [r4, #16]
 8027376:	4650      	mov	r0, sl
 8027378:	f7fb fcb6 	bl	8022ce8 <_free_r>
 802737c:	e7c7      	b.n	802730e <__ssputs_r+0x46>
	...

08027380 <_svfiprintf_r>:
 8027380:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8027384:	4698      	mov	r8, r3
 8027386:	898b      	ldrh	r3, [r1, #12]
 8027388:	061b      	lsls	r3, r3, #24
 802738a:	b09d      	sub	sp, #116	; 0x74
 802738c:	4607      	mov	r7, r0
 802738e:	460d      	mov	r5, r1
 8027390:	4614      	mov	r4, r2
 8027392:	d50e      	bpl.n	80273b2 <_svfiprintf_r+0x32>
 8027394:	690b      	ldr	r3, [r1, #16]
 8027396:	b963      	cbnz	r3, 80273b2 <_svfiprintf_r+0x32>
 8027398:	2140      	movs	r1, #64	; 0x40
 802739a:	f7fb fd11 	bl	8022dc0 <_malloc_r>
 802739e:	6028      	str	r0, [r5, #0]
 80273a0:	6128      	str	r0, [r5, #16]
 80273a2:	b920      	cbnz	r0, 80273ae <_svfiprintf_r+0x2e>
 80273a4:	230c      	movs	r3, #12
 80273a6:	603b      	str	r3, [r7, #0]
 80273a8:	f04f 30ff 	mov.w	r0, #4294967295
 80273ac:	e0d1      	b.n	8027552 <_svfiprintf_r+0x1d2>
 80273ae:	2340      	movs	r3, #64	; 0x40
 80273b0:	616b      	str	r3, [r5, #20]
 80273b2:	2300      	movs	r3, #0
 80273b4:	9309      	str	r3, [sp, #36]	; 0x24
 80273b6:	2320      	movs	r3, #32
 80273b8:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 80273bc:	f8cd 800c 	str.w	r8, [sp, #12]
 80273c0:	2330      	movs	r3, #48	; 0x30
 80273c2:	f8df 81a8 	ldr.w	r8, [pc, #424]	; 802756c <_svfiprintf_r+0x1ec>
 80273c6:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 80273ca:	f04f 0901 	mov.w	r9, #1
 80273ce:	4623      	mov	r3, r4
 80273d0:	469a      	mov	sl, r3
 80273d2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80273d6:	b10a      	cbz	r2, 80273dc <_svfiprintf_r+0x5c>
 80273d8:	2a25      	cmp	r2, #37	; 0x25
 80273da:	d1f9      	bne.n	80273d0 <_svfiprintf_r+0x50>
 80273dc:	ebba 0b04 	subs.w	fp, sl, r4
 80273e0:	d00b      	beq.n	80273fa <_svfiprintf_r+0x7a>
 80273e2:	465b      	mov	r3, fp
 80273e4:	4622      	mov	r2, r4
 80273e6:	4629      	mov	r1, r5
 80273e8:	4638      	mov	r0, r7
 80273ea:	f7ff ff6d 	bl	80272c8 <__ssputs_r>
 80273ee:	3001      	adds	r0, #1
 80273f0:	f000 80aa 	beq.w	8027548 <_svfiprintf_r+0x1c8>
 80273f4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80273f6:	445a      	add	r2, fp
 80273f8:	9209      	str	r2, [sp, #36]	; 0x24
 80273fa:	f89a 3000 	ldrb.w	r3, [sl]
 80273fe:	2b00      	cmp	r3, #0
 8027400:	f000 80a2 	beq.w	8027548 <_svfiprintf_r+0x1c8>
 8027404:	2300      	movs	r3, #0
 8027406:	f04f 32ff 	mov.w	r2, #4294967295
 802740a:	e9cd 2305 	strd	r2, r3, [sp, #20]
 802740e:	f10a 0a01 	add.w	sl, sl, #1
 8027412:	9304      	str	r3, [sp, #16]
 8027414:	9307      	str	r3, [sp, #28]
 8027416:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 802741a:	931a      	str	r3, [sp, #104]	; 0x68
 802741c:	4654      	mov	r4, sl
 802741e:	2205      	movs	r2, #5
 8027420:	f814 1b01 	ldrb.w	r1, [r4], #1
 8027424:	4851      	ldr	r0, [pc, #324]	; (802756c <_svfiprintf_r+0x1ec>)
 8027426:	f7d8 feeb 	bl	8000200 <memchr>
 802742a:	9a04      	ldr	r2, [sp, #16]
 802742c:	b9d8      	cbnz	r0, 8027466 <_svfiprintf_r+0xe6>
 802742e:	06d0      	lsls	r0, r2, #27
 8027430:	bf44      	itt	mi
 8027432:	2320      	movmi	r3, #32
 8027434:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027438:	0711      	lsls	r1, r2, #28
 802743a:	bf44      	itt	mi
 802743c:	232b      	movmi	r3, #43	; 0x2b
 802743e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8027442:	f89a 3000 	ldrb.w	r3, [sl]
 8027446:	2b2a      	cmp	r3, #42	; 0x2a
 8027448:	d015      	beq.n	8027476 <_svfiprintf_r+0xf6>
 802744a:	9a07      	ldr	r2, [sp, #28]
 802744c:	4654      	mov	r4, sl
 802744e:	2000      	movs	r0, #0
 8027450:	f04f 0c0a 	mov.w	ip, #10
 8027454:	4621      	mov	r1, r4
 8027456:	f811 3b01 	ldrb.w	r3, [r1], #1
 802745a:	3b30      	subs	r3, #48	; 0x30
 802745c:	2b09      	cmp	r3, #9
 802745e:	d94e      	bls.n	80274fe <_svfiprintf_r+0x17e>
 8027460:	b1b0      	cbz	r0, 8027490 <_svfiprintf_r+0x110>
 8027462:	9207      	str	r2, [sp, #28]
 8027464:	e014      	b.n	8027490 <_svfiprintf_r+0x110>
 8027466:	eba0 0308 	sub.w	r3, r0, r8
 802746a:	fa09 f303 	lsl.w	r3, r9, r3
 802746e:	4313      	orrs	r3, r2
 8027470:	9304      	str	r3, [sp, #16]
 8027472:	46a2      	mov	sl, r4
 8027474:	e7d2      	b.n	802741c <_svfiprintf_r+0x9c>
 8027476:	9b03      	ldr	r3, [sp, #12]
 8027478:	1d19      	adds	r1, r3, #4
 802747a:	681b      	ldr	r3, [r3, #0]
 802747c:	9103      	str	r1, [sp, #12]
 802747e:	2b00      	cmp	r3, #0
 8027480:	bfbb      	ittet	lt
 8027482:	425b      	neglt	r3, r3
 8027484:	f042 0202 	orrlt.w	r2, r2, #2
 8027488:	9307      	strge	r3, [sp, #28]
 802748a:	9307      	strlt	r3, [sp, #28]
 802748c:	bfb8      	it	lt
 802748e:	9204      	strlt	r2, [sp, #16]
 8027490:	7823      	ldrb	r3, [r4, #0]
 8027492:	2b2e      	cmp	r3, #46	; 0x2e
 8027494:	d10c      	bne.n	80274b0 <_svfiprintf_r+0x130>
 8027496:	7863      	ldrb	r3, [r4, #1]
 8027498:	2b2a      	cmp	r3, #42	; 0x2a
 802749a:	d135      	bne.n	8027508 <_svfiprintf_r+0x188>
 802749c:	9b03      	ldr	r3, [sp, #12]
 802749e:	1d1a      	adds	r2, r3, #4
 80274a0:	681b      	ldr	r3, [r3, #0]
 80274a2:	9203      	str	r2, [sp, #12]
 80274a4:	2b00      	cmp	r3, #0
 80274a6:	bfb8      	it	lt
 80274a8:	f04f 33ff 	movlt.w	r3, #4294967295
 80274ac:	3402      	adds	r4, #2
 80274ae:	9305      	str	r3, [sp, #20]
 80274b0:	f8df a0c8 	ldr.w	sl, [pc, #200]	; 802757c <_svfiprintf_r+0x1fc>
 80274b4:	7821      	ldrb	r1, [r4, #0]
 80274b6:	2203      	movs	r2, #3
 80274b8:	4650      	mov	r0, sl
 80274ba:	f7d8 fea1 	bl	8000200 <memchr>
 80274be:	b140      	cbz	r0, 80274d2 <_svfiprintf_r+0x152>
 80274c0:	2340      	movs	r3, #64	; 0x40
 80274c2:	eba0 000a 	sub.w	r0, r0, sl
 80274c6:	fa03 f000 	lsl.w	r0, r3, r0
 80274ca:	9b04      	ldr	r3, [sp, #16]
 80274cc:	4303      	orrs	r3, r0
 80274ce:	3401      	adds	r4, #1
 80274d0:	9304      	str	r3, [sp, #16]
 80274d2:	f814 1b01 	ldrb.w	r1, [r4], #1
 80274d6:	4826      	ldr	r0, [pc, #152]	; (8027570 <_svfiprintf_r+0x1f0>)
 80274d8:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 80274dc:	2206      	movs	r2, #6
 80274de:	f7d8 fe8f 	bl	8000200 <memchr>
 80274e2:	2800      	cmp	r0, #0
 80274e4:	d038      	beq.n	8027558 <_svfiprintf_r+0x1d8>
 80274e6:	4b23      	ldr	r3, [pc, #140]	; (8027574 <_svfiprintf_r+0x1f4>)
 80274e8:	bb1b      	cbnz	r3, 8027532 <_svfiprintf_r+0x1b2>
 80274ea:	9b03      	ldr	r3, [sp, #12]
 80274ec:	3307      	adds	r3, #7
 80274ee:	f023 0307 	bic.w	r3, r3, #7
 80274f2:	3308      	adds	r3, #8
 80274f4:	9303      	str	r3, [sp, #12]
 80274f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80274f8:	4433      	add	r3, r6
 80274fa:	9309      	str	r3, [sp, #36]	; 0x24
 80274fc:	e767      	b.n	80273ce <_svfiprintf_r+0x4e>
 80274fe:	fb0c 3202 	mla	r2, ip, r2, r3
 8027502:	460c      	mov	r4, r1
 8027504:	2001      	movs	r0, #1
 8027506:	e7a5      	b.n	8027454 <_svfiprintf_r+0xd4>
 8027508:	2300      	movs	r3, #0
 802750a:	3401      	adds	r4, #1
 802750c:	9305      	str	r3, [sp, #20]
 802750e:	4619      	mov	r1, r3
 8027510:	f04f 0c0a 	mov.w	ip, #10
 8027514:	4620      	mov	r0, r4
 8027516:	f810 2b01 	ldrb.w	r2, [r0], #1
 802751a:	3a30      	subs	r2, #48	; 0x30
 802751c:	2a09      	cmp	r2, #9
 802751e:	d903      	bls.n	8027528 <_svfiprintf_r+0x1a8>
 8027520:	2b00      	cmp	r3, #0
 8027522:	d0c5      	beq.n	80274b0 <_svfiprintf_r+0x130>
 8027524:	9105      	str	r1, [sp, #20]
 8027526:	e7c3      	b.n	80274b0 <_svfiprintf_r+0x130>
 8027528:	fb0c 2101 	mla	r1, ip, r1, r2
 802752c:	4604      	mov	r4, r0
 802752e:	2301      	movs	r3, #1
 8027530:	e7f0      	b.n	8027514 <_svfiprintf_r+0x194>
 8027532:	ab03      	add	r3, sp, #12
 8027534:	9300      	str	r3, [sp, #0]
 8027536:	462a      	mov	r2, r5
 8027538:	4b0f      	ldr	r3, [pc, #60]	; (8027578 <_svfiprintf_r+0x1f8>)
 802753a:	a904      	add	r1, sp, #16
 802753c:	4638      	mov	r0, r7
 802753e:	f7fb fead 	bl	802329c <_printf_float>
 8027542:	1c42      	adds	r2, r0, #1
 8027544:	4606      	mov	r6, r0
 8027546:	d1d6      	bne.n	80274f6 <_svfiprintf_r+0x176>
 8027548:	89ab      	ldrh	r3, [r5, #12]
 802754a:	065b      	lsls	r3, r3, #25
 802754c:	f53f af2c 	bmi.w	80273a8 <_svfiprintf_r+0x28>
 8027550:	9809      	ldr	r0, [sp, #36]	; 0x24
 8027552:	b01d      	add	sp, #116	; 0x74
 8027554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8027558:	ab03      	add	r3, sp, #12
 802755a:	9300      	str	r3, [sp, #0]
 802755c:	462a      	mov	r2, r5
 802755e:	4b06      	ldr	r3, [pc, #24]	; (8027578 <_svfiprintf_r+0x1f8>)
 8027560:	a904      	add	r1, sp, #16
 8027562:	4638      	mov	r0, r7
 8027564:	f7fc f93e 	bl	80237e4 <_printf_i>
 8027568:	e7eb      	b.n	8027542 <_svfiprintf_r+0x1c2>
 802756a:	bf00      	nop
 802756c:	0802ae08 	.word	0x0802ae08
 8027570:	0802ae12 	.word	0x0802ae12
 8027574:	0802329d 	.word	0x0802329d
 8027578:	080272c9 	.word	0x080272c9
 802757c:	0802ae0e 	.word	0x0802ae0e

08027580 <_putc_r>:
 8027580:	b570      	push	{r4, r5, r6, lr}
 8027582:	460d      	mov	r5, r1
 8027584:	4614      	mov	r4, r2
 8027586:	4606      	mov	r6, r0
 8027588:	b118      	cbz	r0, 8027592 <_putc_r+0x12>
 802758a:	6983      	ldr	r3, [r0, #24]
 802758c:	b90b      	cbnz	r3, 8027592 <_putc_r+0x12>
 802758e:	f7fe fce3 	bl	8025f58 <__sinit>
 8027592:	4b1c      	ldr	r3, [pc, #112]	; (8027604 <_putc_r+0x84>)
 8027594:	429c      	cmp	r4, r3
 8027596:	d124      	bne.n	80275e2 <_putc_r+0x62>
 8027598:	6874      	ldr	r4, [r6, #4]
 802759a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802759c:	07d8      	lsls	r0, r3, #31
 802759e:	d405      	bmi.n	80275ac <_putc_r+0x2c>
 80275a0:	89a3      	ldrh	r3, [r4, #12]
 80275a2:	0599      	lsls	r1, r3, #22
 80275a4:	d402      	bmi.n	80275ac <_putc_r+0x2c>
 80275a6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80275a8:	f7ff f8e7 	bl	802677a <__retarget_lock_acquire_recursive>
 80275ac:	68a3      	ldr	r3, [r4, #8]
 80275ae:	3b01      	subs	r3, #1
 80275b0:	2b00      	cmp	r3, #0
 80275b2:	60a3      	str	r3, [r4, #8]
 80275b4:	da05      	bge.n	80275c2 <_putc_r+0x42>
 80275b6:	69a2      	ldr	r2, [r4, #24]
 80275b8:	4293      	cmp	r3, r2
 80275ba:	db1c      	blt.n	80275f6 <_putc_r+0x76>
 80275bc:	b2eb      	uxtb	r3, r5
 80275be:	2b0a      	cmp	r3, #10
 80275c0:	d019      	beq.n	80275f6 <_putc_r+0x76>
 80275c2:	6823      	ldr	r3, [r4, #0]
 80275c4:	1c5a      	adds	r2, r3, #1
 80275c6:	6022      	str	r2, [r4, #0]
 80275c8:	701d      	strb	r5, [r3, #0]
 80275ca:	b2ed      	uxtb	r5, r5
 80275cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80275ce:	07da      	lsls	r2, r3, #31
 80275d0:	d405      	bmi.n	80275de <_putc_r+0x5e>
 80275d2:	89a3      	ldrh	r3, [r4, #12]
 80275d4:	059b      	lsls	r3, r3, #22
 80275d6:	d402      	bmi.n	80275de <_putc_r+0x5e>
 80275d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80275da:	f7ff f8d0 	bl	802677e <__retarget_lock_release_recursive>
 80275de:	4628      	mov	r0, r5
 80275e0:	bd70      	pop	{r4, r5, r6, pc}
 80275e2:	4b09      	ldr	r3, [pc, #36]	; (8027608 <_putc_r+0x88>)
 80275e4:	429c      	cmp	r4, r3
 80275e6:	d101      	bne.n	80275ec <_putc_r+0x6c>
 80275e8:	68b4      	ldr	r4, [r6, #8]
 80275ea:	e7d6      	b.n	802759a <_putc_r+0x1a>
 80275ec:	4b07      	ldr	r3, [pc, #28]	; (802760c <_putc_r+0x8c>)
 80275ee:	429c      	cmp	r4, r3
 80275f0:	bf08      	it	eq
 80275f2:	68f4      	ldreq	r4, [r6, #12]
 80275f4:	e7d1      	b.n	802759a <_putc_r+0x1a>
 80275f6:	4629      	mov	r1, r5
 80275f8:	4622      	mov	r2, r4
 80275fa:	4630      	mov	r0, r6
 80275fc:	f7fd fbf4 	bl	8024de8 <__swbuf_r>
 8027600:	4605      	mov	r5, r0
 8027602:	e7e3      	b.n	80275cc <_putc_r+0x4c>
 8027604:	0802b05c 	.word	0x0802b05c
 8027608:	0802b07c 	.word	0x0802b07c
 802760c:	0802b03c 	.word	0x0802b03c

08027610 <nan>:
 8027610:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8027618 <nan+0x8>
 8027614:	4770      	bx	lr
 8027616:	bf00      	nop
 8027618:	00000000 	.word	0x00000000
 802761c:	7ff80000 	.word	0x7ff80000

08027620 <__sread>:
 8027620:	b510      	push	{r4, lr}
 8027622:	460c      	mov	r4, r1
 8027624:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027628:	f000 f8bc 	bl	80277a4 <_read_r>
 802762c:	2800      	cmp	r0, #0
 802762e:	bfab      	itete	ge
 8027630:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8027632:	89a3      	ldrhlt	r3, [r4, #12]
 8027634:	181b      	addge	r3, r3, r0
 8027636:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802763a:	bfac      	ite	ge
 802763c:	6563      	strge	r3, [r4, #84]	; 0x54
 802763e:	81a3      	strhlt	r3, [r4, #12]
 8027640:	bd10      	pop	{r4, pc}

08027642 <__swrite>:
 8027642:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8027646:	461f      	mov	r7, r3
 8027648:	898b      	ldrh	r3, [r1, #12]
 802764a:	05db      	lsls	r3, r3, #23
 802764c:	4605      	mov	r5, r0
 802764e:	460c      	mov	r4, r1
 8027650:	4616      	mov	r6, r2
 8027652:	d505      	bpl.n	8027660 <__swrite+0x1e>
 8027654:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027658:	2302      	movs	r3, #2
 802765a:	2200      	movs	r2, #0
 802765c:	f000 f888 	bl	8027770 <_lseek_r>
 8027660:	89a3      	ldrh	r3, [r4, #12]
 8027662:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8027666:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802766a:	81a3      	strh	r3, [r4, #12]
 802766c:	4632      	mov	r2, r6
 802766e:	463b      	mov	r3, r7
 8027670:	4628      	mov	r0, r5
 8027672:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8027676:	f000 b837 	b.w	80276e8 <_write_r>

0802767a <__sseek>:
 802767a:	b510      	push	{r4, lr}
 802767c:	460c      	mov	r4, r1
 802767e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8027682:	f000 f875 	bl	8027770 <_lseek_r>
 8027686:	1c43      	adds	r3, r0, #1
 8027688:	89a3      	ldrh	r3, [r4, #12]
 802768a:	bf15      	itete	ne
 802768c:	6560      	strne	r0, [r4, #84]	; 0x54
 802768e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8027692:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8027696:	81a3      	strheq	r3, [r4, #12]
 8027698:	bf18      	it	ne
 802769a:	81a3      	strhne	r3, [r4, #12]
 802769c:	bd10      	pop	{r4, pc}

0802769e <__sclose>:
 802769e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80276a2:	f000 b833 	b.w	802770c <_close_r>

080276a6 <strncmp>:
 80276a6:	b510      	push	{r4, lr}
 80276a8:	b17a      	cbz	r2, 80276ca <strncmp+0x24>
 80276aa:	4603      	mov	r3, r0
 80276ac:	3901      	subs	r1, #1
 80276ae:	1884      	adds	r4, r0, r2
 80276b0:	f813 0b01 	ldrb.w	r0, [r3], #1
 80276b4:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 80276b8:	4290      	cmp	r0, r2
 80276ba:	d101      	bne.n	80276c0 <strncmp+0x1a>
 80276bc:	42a3      	cmp	r3, r4
 80276be:	d101      	bne.n	80276c4 <strncmp+0x1e>
 80276c0:	1a80      	subs	r0, r0, r2
 80276c2:	bd10      	pop	{r4, pc}
 80276c4:	2800      	cmp	r0, #0
 80276c6:	d1f3      	bne.n	80276b0 <strncmp+0xa>
 80276c8:	e7fa      	b.n	80276c0 <strncmp+0x1a>
 80276ca:	4610      	mov	r0, r2
 80276cc:	e7f9      	b.n	80276c2 <strncmp+0x1c>

080276ce <__ascii_wctomb>:
 80276ce:	b149      	cbz	r1, 80276e4 <__ascii_wctomb+0x16>
 80276d0:	2aff      	cmp	r2, #255	; 0xff
 80276d2:	bf85      	ittet	hi
 80276d4:	238a      	movhi	r3, #138	; 0x8a
 80276d6:	6003      	strhi	r3, [r0, #0]
 80276d8:	700a      	strbls	r2, [r1, #0]
 80276da:	f04f 30ff 	movhi.w	r0, #4294967295
 80276de:	bf98      	it	ls
 80276e0:	2001      	movls	r0, #1
 80276e2:	4770      	bx	lr
 80276e4:	4608      	mov	r0, r1
 80276e6:	4770      	bx	lr

080276e8 <_write_r>:
 80276e8:	b538      	push	{r3, r4, r5, lr}
 80276ea:	4d07      	ldr	r5, [pc, #28]	; (8027708 <_write_r+0x20>)
 80276ec:	4604      	mov	r4, r0
 80276ee:	4608      	mov	r0, r1
 80276f0:	4611      	mov	r1, r2
 80276f2:	2200      	movs	r2, #0
 80276f4:	602a      	str	r2, [r5, #0]
 80276f6:	461a      	mov	r2, r3
 80276f8:	f7db fd3a 	bl	8003170 <_write>
 80276fc:	1c43      	adds	r3, r0, #1
 80276fe:	d102      	bne.n	8027706 <_write_r+0x1e>
 8027700:	682b      	ldr	r3, [r5, #0]
 8027702:	b103      	cbz	r3, 8027706 <_write_r+0x1e>
 8027704:	6023      	str	r3, [r4, #0]
 8027706:	bd38      	pop	{r3, r4, r5, pc}
 8027708:	20013a00 	.word	0x20013a00

0802770c <_close_r>:
 802770c:	b538      	push	{r3, r4, r5, lr}
 802770e:	4d06      	ldr	r5, [pc, #24]	; (8027728 <_close_r+0x1c>)
 8027710:	2300      	movs	r3, #0
 8027712:	4604      	mov	r4, r0
 8027714:	4608      	mov	r0, r1
 8027716:	602b      	str	r3, [r5, #0]
 8027718:	f7db fd38 	bl	800318c <_close>
 802771c:	1c43      	adds	r3, r0, #1
 802771e:	d102      	bne.n	8027726 <_close_r+0x1a>
 8027720:	682b      	ldr	r3, [r5, #0]
 8027722:	b103      	cbz	r3, 8027726 <_close_r+0x1a>
 8027724:	6023      	str	r3, [r4, #0]
 8027726:	bd38      	pop	{r3, r4, r5, pc}
 8027728:	20013a00 	.word	0x20013a00

0802772c <_fstat_r>:
 802772c:	b538      	push	{r3, r4, r5, lr}
 802772e:	4d07      	ldr	r5, [pc, #28]	; (802774c <_fstat_r+0x20>)
 8027730:	2300      	movs	r3, #0
 8027732:	4604      	mov	r4, r0
 8027734:	4608      	mov	r0, r1
 8027736:	4611      	mov	r1, r2
 8027738:	602b      	str	r3, [r5, #0]
 802773a:	f7db fd2a 	bl	8003192 <_fstat>
 802773e:	1c43      	adds	r3, r0, #1
 8027740:	d102      	bne.n	8027748 <_fstat_r+0x1c>
 8027742:	682b      	ldr	r3, [r5, #0]
 8027744:	b103      	cbz	r3, 8027748 <_fstat_r+0x1c>
 8027746:	6023      	str	r3, [r4, #0]
 8027748:	bd38      	pop	{r3, r4, r5, pc}
 802774a:	bf00      	nop
 802774c:	20013a00 	.word	0x20013a00

08027750 <_isatty_r>:
 8027750:	b538      	push	{r3, r4, r5, lr}
 8027752:	4d06      	ldr	r5, [pc, #24]	; (802776c <_isatty_r+0x1c>)
 8027754:	2300      	movs	r3, #0
 8027756:	4604      	mov	r4, r0
 8027758:	4608      	mov	r0, r1
 802775a:	602b      	str	r3, [r5, #0]
 802775c:	f7db fd1e 	bl	800319c <_isatty>
 8027760:	1c43      	adds	r3, r0, #1
 8027762:	d102      	bne.n	802776a <_isatty_r+0x1a>
 8027764:	682b      	ldr	r3, [r5, #0]
 8027766:	b103      	cbz	r3, 802776a <_isatty_r+0x1a>
 8027768:	6023      	str	r3, [r4, #0]
 802776a:	bd38      	pop	{r3, r4, r5, pc}
 802776c:	20013a00 	.word	0x20013a00

08027770 <_lseek_r>:
 8027770:	b538      	push	{r3, r4, r5, lr}
 8027772:	4d07      	ldr	r5, [pc, #28]	; (8027790 <_lseek_r+0x20>)
 8027774:	4604      	mov	r4, r0
 8027776:	4608      	mov	r0, r1
 8027778:	4611      	mov	r1, r2
 802777a:	2200      	movs	r2, #0
 802777c:	602a      	str	r2, [r5, #0]
 802777e:	461a      	mov	r2, r3
 8027780:	f7db fd0e 	bl	80031a0 <_lseek>
 8027784:	1c43      	adds	r3, r0, #1
 8027786:	d102      	bne.n	802778e <_lseek_r+0x1e>
 8027788:	682b      	ldr	r3, [r5, #0]
 802778a:	b103      	cbz	r3, 802778e <_lseek_r+0x1e>
 802778c:	6023      	str	r3, [r4, #0]
 802778e:	bd38      	pop	{r3, r4, r5, pc}
 8027790:	20013a00 	.word	0x20013a00

08027794 <_malloc_usable_size_r>:
 8027794:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8027798:	1f18      	subs	r0, r3, #4
 802779a:	2b00      	cmp	r3, #0
 802779c:	bfbc      	itt	lt
 802779e:	580b      	ldrlt	r3, [r1, r0]
 80277a0:	18c0      	addlt	r0, r0, r3
 80277a2:	4770      	bx	lr

080277a4 <_read_r>:
 80277a4:	b538      	push	{r3, r4, r5, lr}
 80277a6:	4d07      	ldr	r5, [pc, #28]	; (80277c4 <_read_r+0x20>)
 80277a8:	4604      	mov	r4, r0
 80277aa:	4608      	mov	r0, r1
 80277ac:	4611      	mov	r1, r2
 80277ae:	2200      	movs	r2, #0
 80277b0:	602a      	str	r2, [r5, #0]
 80277b2:	461a      	mov	r2, r3
 80277b4:	f7db fcce 	bl	8003154 <_read>
 80277b8:	1c43      	adds	r3, r0, #1
 80277ba:	d102      	bne.n	80277c2 <_read_r+0x1e>
 80277bc:	682b      	ldr	r3, [r5, #0]
 80277be:	b103      	cbz	r3, 80277c2 <_read_r+0x1e>
 80277c0:	6023      	str	r3, [r4, #0]
 80277c2:	bd38      	pop	{r3, r4, r5, pc}
 80277c4:	20013a00 	.word	0x20013a00

080277c8 <_init>:
 80277c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277ca:	bf00      	nop
 80277cc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277ce:	bc08      	pop	{r3}
 80277d0:	469e      	mov	lr, r3
 80277d2:	4770      	bx	lr

080277d4 <_fini>:
 80277d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80277d6:	bf00      	nop
 80277d8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80277da:	bc08      	pop	{r3}
 80277dc:	469e      	mov	lr, r3
 80277de:	4770      	bx	lr
