/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/temperaturescreen_screen/TemperatureScreenViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

TemperatureScreenViewBase::TemperatureScreenViewBase() :
    buttonCallback(this, &TemperatureScreenViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
    BackgroudImage.setPosition(0, 0, 240, 320);
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(BackgroudImage);

    bLeftSlide.setXY(0, 284);
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bLeftSlide.setIconXY(25, -7);
    bLeftSlide.setAction(buttonCallback);
    add(bLeftSlide);

    bRightSlide.setXY(140, 284);
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bRightSlide.setIconXY(25, -7);
    bRightSlide.setAction(buttonCallback);
    add(bRightSlide);

    textArea1.setXY(57, 240);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_LFPJ));
    add(textArea1);

    gauge1.setBackground(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_BACKGROUNDS_DARK_FILLED_ID));
    gauge1.setPosition(0, 0, 240, 240);
    gauge1.setCenter(120, 120);
    gauge1.setStartEndAngle(-117, 121);
    gauge1.setRange(0, 100);
    gauge1.setValue(50);
    gauge1.setNeedle(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_NEEDLES_ROUGH_ID, 10, 65);
    gauge1.setMovingNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setSteadyNeedleRenderingAlgorithm(touchgfx::TextureMapper::BILINEAR_INTERPOLATION);
    gauge1.setArcVisible();
    gauge1Painter.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_GAUGE_MEDIUM_FILLERS_SWOOP_ID));
    gauge1.getArc().setPainter(gauge1Painter);
    gauge1.getArc().setRadius(100);
    gauge1.getArc().setLineWidth(99);
    gauge1.getArc().setCapPrecision(180);
    gauge1.setArcPosition(23, 23, 192, 142);
    add(gauge1);

    L_Temperature.setPosition(0, 179, 240, 25);
    L_Temperature.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    L_Temperature.setLinespacing(0);
    Unicode::snprintf(L_TemperatureBuffer, L_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_YDP8).getText());
    L_Temperature.setWildcard(L_TemperatureBuffer);
    L_Temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_FHT5));
    add(L_Temperature);
}

TemperatureScreenViewBase::~TemperatureScreenViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void TemperatureScreenViewBase::setupScreen()
{

}

void TemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bRightSlide)
    {
        //slideRightToGetTemperatureScreen
        //When bRightSlide clicked change screen to GetTemperatureScreen
        //Go to GetTemperatureScreen with screen transition towards East
        application().gotoGetTemperatureScreenScreenSlideTransitionEast();
    }
    if (&src == &bLeftSlide)
    {
        //slideLeftToLedCommandScreen
        //When bLeftSlide clicked change screen to LedCommandScreen
        //Go to LedCommandScreen with screen transition towards West
        application().gotoLedCommandScreenScreenSlideTransitionWest();
    }
}
