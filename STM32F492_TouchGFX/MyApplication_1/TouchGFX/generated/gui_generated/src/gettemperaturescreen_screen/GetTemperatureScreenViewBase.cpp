/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/gettemperaturescreen_screen/GetTemperatureScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

GetTemperatureScreenViewBase::GetTemperatureScreenViewBase() :
    buttonCallback(this, &GetTemperatureScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
    BackgroudImage.setPosition(0, 0, 240, 320);
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(BackgroudImage);

    bRightSlide.setXY(140, 284);
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bRightSlide.setIconXY(25, -7);
    bRightSlide.setAction(buttonCallback);
    add(bRightSlide);

    bLeftSlide.setXY(0, 284);
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bLeftSlide.setIconXY(25, -7);
    bLeftSlide.setAction(buttonCallback);
    add(bLeftSlide);

    L_temperature.setPosition(0, 50, 240, 110);
    L_temperature.setColor(touchgfx::Color::getColorFromRGB(0, 68, 255));
    L_temperature.setLinespacing(0);
    Unicode::snprintf(L_temperatureBuffer, L_TEMPERATURE_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_AQBC).getText());
    L_temperature.setWildcard(L_temperatureBuffer);
    L_temperature.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1ITY));
    add(L_temperature);

    B_refreshTemperature.setXY(0, 217);
    B_refreshTemperature.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUND_DISABLED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_REFRESH_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_REFRESH_50_50_E8F6FB_SVG_ID));
    B_refreshTemperature.setIconXY(97, 0);
    add(B_refreshTemperature);
}

GetTemperatureScreenViewBase::~GetTemperatureScreenViewBase()
{

}

void GetTemperatureScreenViewBase::setupScreen()
{

}

void GetTemperatureScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bLeftSlide)
    {
        //slideLeftToTemperatureScreen
        //When bLeftSlide clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards West
        application().gotoTemperatureScreenScreenSlideTransitionWest();
    }
    if (&src == &bRightSlide)
    {
        //slideRightToLedCommandScreen
        //When bRightSlide clicked change screen to LedCommandScreen
        //Go to LedCommandScreen with screen transition towards East
        application().gotoLedCommandScreenScreenSlideTransitionEast();
    }
}
