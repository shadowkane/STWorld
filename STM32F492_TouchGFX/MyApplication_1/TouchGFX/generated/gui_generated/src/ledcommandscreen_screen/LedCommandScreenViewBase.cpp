/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/ledcommandscreen_screen/LedCommandScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

LedCommandScreenViewBase::LedCommandScreenViewBase() :
    buttonCallback(this, &LedCommandScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    BackgroudImage.setBitmap(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_BACKGROUNDS_240X320_SHATTERED_RAIN_LIGHT_ID));
    BackgroudImage.setPosition(0, 0, 240, 320);
    BackgroudImage.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(BackgroudImage);

    bLeftSlide.setXY(0, 284);
    bLeftSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_LEFT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bLeftSlide.setIconXY(25, -7);
    bLeftSlide.setAction(buttonCallback);
    add(bLeftSlide);

    bRightSlide.setXY(140, 284);
    bRightSlide.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTIVE_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_HARDWARE_KEYBOARD_ARROW_RIGHT_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_07A3F7_SVG_ID));
    bRightSlide.setIconXY(25, -7);
    bRightSlide.setAction(buttonCallback);
    add(bRightSlide);

    tbCmdLed.setXY(35, 160);
    tbCmdLed.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_TEXT_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUND_TEXT_OFF_NORMAL_ID));
    tbCmdLed.forceState(true);
    tbCmdLed.setAction(buttonCallback);
    add(tbCmdLed);

    textArea1.setXY(22, 19);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(7, 239, 247));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_RY0X));
    add(textArea1);
}

LedCommandScreenViewBase::~LedCommandScreenViewBase()
{

}

void LedCommandScreenViewBase::setupScreen()
{

}

void LedCommandScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &bLeftSlide)
    {
        //slideLeftToGetTemperatureScreen
        //When bLeftSlide clicked change screen to GetTemperatureScreen
        //Go to GetTemperatureScreen with screen transition towards West
        application().gotoGetTemperatureScreenScreenSlideTransitionWest();
    }
    if (&src == &bRightSlide)
    {
        //slideRightToTemperatureScreen
        //When bRightSlide clicked change screen to TemperatureScreen
        //Go to TemperatureScreen with screen transition towards East
        application().gotoTemperatureScreenScreenSlideTransitionEast();
    }
    if (&src == &tbCmdLed)
    {
        //TBLedCommanderClickHandler
        //When tbCmdLed clicked call virtual function
        //Call vTBLedCmdClicked
        vTBLedCmdClicked();
    }
}
