/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEMPERATURESCREENVIEWBASE_HPP
#define TEMPERATURESCREENVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/temperaturescreen_screen/TemperatureScreenPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ScalableImage.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Gauge.hpp>
#include <touchgfx/widgets/canvas/PainterRGB565Bitmap.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class TemperatureScreenViewBase : public touchgfx::View<TemperatureScreenPresenter>
{
public:
    TemperatureScreenViewBase();
    virtual ~TemperatureScreenViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ScalableImage BackgroudImage;
    touchgfx::ButtonWithIcon bLeftSlide;
    touchgfx::ButtonWithIcon bRightSlide;
    touchgfx::TextArea textArea1;
    touchgfx::Gauge gauge1;
    touchgfx::PainterRGB565Bitmap gauge1Painter;
    touchgfx::TextAreaWithOneWildcard L_Temperature;

    /*
     * Wildcard Buffers
     */
    static const uint16_t L_TEMPERATURE_SIZE = 20;
    touchgfx::Unicode::UnicodeChar L_TemperatureBuffer[L_TEMPERATURE_SIZE];

private:

    /*
     * Canvas Buffer Size
     */
    static const uint32_t CANVAS_BUFFER_SIZE = 3600;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

    /*
     * Callback Declarations
     */
    touchgfx::Callback<TemperatureScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // TEMPERATURESCREENVIEWBASE_HPP
